
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,62,67,71,65,72,71,68],
[68,0,67,73,63,71,66,65],
[63,63,0,71,63,67,76,63],
[59,57,59,0,60,60,65,58],
[65,67,67,70,0,73,69,61],
[58,59,63,70,57,0,70,69],
[59,64,54,65,61,60,0,62],
[62,65,67,72,69,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,61,54,60,59,57,56],
[76,0,61,66,70,65,66,68],
[69,69,0,60,64,71,64,56],
[76,64,70,0,73,67,68,69],
[70,60,66,57,0,67,61,68],
[71,65,59,63,63,0,63,53],
[73,64,66,62,69,67,0,67],
[74,62,74,61,62,77,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,28,75,71,43,66,55],
[58,0,49,83,61,62,56,40],
[102,81,0,109,90,70,85,64],
[55,47,21,0,21,25,48,47],
[59,69,40,109,0,54,82,65],
[87,68,60,105,76,0,85,63],
[64,74,45,82,48,45,0,54],
[75,90,66,83,65,67,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,74,51,64,64,66,65],
[59,0,70,63,58,58,50,55],
[56,60,0,58,55,64,57,63],
[79,67,72,0,62,76,59,65],
[66,72,75,68,0,71,63,68],
[66,72,66,54,59,0,59,59],
[64,80,73,71,67,71,0,66],
[65,75,67,65,62,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,59,66,66,63,63],
[66,0,69,68,65,71,69,60],
[69,61,0,66,54,61,64,55],
[71,62,64,0,63,58,66,57],
[64,65,76,67,0,64,69,65],
[64,59,69,72,66,0,64,63],
[67,61,66,64,61,66,0,63],
[67,70,75,73,65,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,72,66,65,70,58],
[66,0,61,71,62,63,60,61],
[70,69,0,75,69,66,66,56],
[58,59,55,0,63,50,62,48],
[64,68,61,67,0,60,70,59],
[65,67,64,80,70,0,68,67],
[60,70,64,68,60,62,0,59],
[72,69,74,82,71,63,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,77,78,68,66,74],
[65,0,74,97,82,71,68,91],
[59,56,0,86,90,47,60,69],
[53,33,44,0,62,34,38,62],
[52,48,40,68,0,47,33,48],
[62,59,83,96,83,0,56,93],
[64,62,70,92,97,74,0,90],
[56,39,61,68,82,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,72,70,71,61,73,60],
[54,0,51,56,64,55,61,59],
[58,79,0,55,69,58,68,60],
[60,74,75,0,75,68,63,57],
[59,66,61,55,0,60,58,58],
[69,75,72,62,70,0,67,68],
[57,69,62,67,72,63,0,61],
[70,71,70,73,72,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,72,57,72,66,96,89],
[47,0,59,65,52,65,55,73],
[58,71,0,46,46,73,73,72],
[73,65,84,0,73,67,65,83],
[58,78,84,57,0,59,89,84],
[64,65,57,63,71,0,67,57],
[34,75,57,65,41,63,0,63],
[41,57,58,47,46,73,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,71,57,68,61,61,61],
[70,0,61,62,76,59,62,70],
[59,69,0,62,71,57,63,64],
[73,68,68,0,78,59,63,62],
[62,54,59,52,0,55,52,48],
[69,71,73,71,75,0,71,64],
[69,68,67,67,78,59,0,61],
[69,60,66,68,82,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,56,62,55,63,64,57],
[72,0,74,70,67,72,78,65],
[74,56,0,63,54,69,69,52],
[68,60,67,0,57,62,67,64],
[75,63,76,73,0,66,79,64],
[67,58,61,68,64,0,76,63],
[66,52,61,63,51,54,0,49],
[73,65,78,66,66,67,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,47,70,56,64,73,61],
[69,0,62,57,64,64,65,66],
[83,68,0,78,67,73,73,56],
[60,73,52,0,57,63,67,56],
[74,66,63,73,0,73,78,61],
[66,66,57,67,57,0,71,60],
[57,65,57,63,52,59,0,56],
[69,64,74,74,69,70,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,96,68,49,45,78,46,48],
[34,0,13,52,8,76,29,56],
[62,117,0,49,66,73,54,69],
[81,78,81,0,35,63,43,48],
[85,122,64,95,0,89,85,94],
[52,54,57,67,41,0,44,92],
[84,101,76,87,45,86,0,94],
[82,74,61,82,36,38,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,65,63,64,61,65],
[66,0,70,70,75,61,71,61],
[66,60,0,62,67,70,58,60],
[65,60,68,0,65,67,64,64],
[67,55,63,65,0,57,64,61],
[66,69,60,63,73,0,66,64],
[69,59,72,66,66,64,0,62],
[65,69,70,66,69,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,77,70,66,65,77,72],
[63,0,70,66,61,67,71,68],
[53,60,0,65,65,63,65,62],
[60,64,65,0,65,50,64,67],
[64,69,65,65,0,71,69,72],
[65,63,67,80,59,0,74,68],
[53,59,65,66,61,56,0,63],
[58,62,68,63,58,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,78,38,55,86,89,78],
[46,0,68,43,65,57,59,51],
[52,62,0,68,59,65,69,43],
[92,87,62,0,66,65,89,88],
[75,65,71,64,0,79,70,70],
[44,73,65,65,51,0,53,55],
[41,71,61,41,60,77,0,53],
[52,79,87,42,60,75,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,82,69,57,59,56,76],
[71,0,72,76,60,64,58,72],
[48,58,0,64,67,67,60,63],
[61,54,66,0,47,55,59,71],
[73,70,63,83,0,78,72,80],
[71,66,63,75,52,0,57,78],
[74,72,70,71,58,73,0,70],
[54,58,67,59,50,52,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,46,72,64,74,61,22],
[60,0,43,64,51,74,48,41],
[84,87,0,103,81,94,65,84],
[58,66,27,0,79,63,52,40],
[66,79,49,51,0,78,56,51],
[56,56,36,67,52,0,40,38],
[69,82,65,78,74,90,0,64],
[108,89,46,90,79,92,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,49,44,64,78,59],
[70,0,70,54,76,65,64,64],
[66,60,0,61,63,51,47,54],
[81,76,69,0,58,56,66,52],
[86,54,67,72,0,74,63,55],
[66,65,79,74,56,0,77,74],
[52,66,83,64,67,53,0,45],
[71,66,76,78,75,56,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,63,53,60,68,58],
[70,0,66,55,62,63,64,63],
[68,64,0,58,59,66,66,64],
[67,75,72,0,64,68,74,60],
[77,68,71,66,0,65,71,66],
[70,67,64,62,65,0,61,60],
[62,66,64,56,59,69,0,66],
[72,67,66,70,64,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,76,62,74,71,68],
[71,0,57,64,59,69,72,59],
[66,73,0,69,57,68,66,74],
[54,66,61,0,58,59,62,61],
[68,71,73,72,0,65,70,76],
[56,61,62,71,65,0,60,62],
[59,58,64,68,60,70,0,67],
[62,71,56,69,54,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,66,58,69,62,83],
[68,0,65,73,62,74,65,81],
[70,65,0,71,61,69,64,77],
[64,57,59,0,58,69,59,71],
[72,68,69,72,0,76,65,72],
[61,56,61,61,54,0,57,73],
[68,65,66,71,65,73,0,77],
[47,49,53,59,58,57,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,70,62,64,74,71],
[60,0,64,75,53,52,64,58],
[66,66,0,68,60,55,74,64],
[60,55,62,0,64,50,51,66],
[68,77,70,66,0,68,70,65],
[66,78,75,80,62,0,64,83],
[56,66,56,79,60,66,0,69],
[59,72,66,64,65,47,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,56,67,53,61,53,62],
[73,0,68,71,57,65,65,69],
[74,62,0,76,64,64,61,66],
[63,59,54,0,56,62,55,58],
[77,73,66,74,0,65,57,67],
[69,65,66,68,65,0,63,62],
[77,65,69,75,73,67,0,62],
[68,61,64,72,63,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,55,72,55,61,72],
[64,0,69,54,75,61,65,66],
[59,61,0,55,64,67,56,63],
[75,76,75,0,72,67,63,83],
[58,55,66,58,0,65,54,56],
[75,69,63,63,65,0,56,75],
[69,65,74,67,76,74,0,74],
[58,64,67,47,74,55,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,65,82,65,69,66],
[60,0,68,61,69,56,59,63],
[64,62,0,68,72,58,66,60],
[65,69,62,0,63,59,63,65],
[48,61,58,67,0,56,61,62],
[65,74,72,71,74,0,73,60],
[61,71,64,67,69,57,0,59],
[64,67,70,65,68,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,83,75,75,59,83,63],
[70,0,64,66,59,65,65,74],
[47,66,0,75,61,66,76,62],
[55,64,55,0,48,53,68,54],
[55,71,69,82,0,66,81,67],
[71,65,64,77,64,0,70,66],
[47,65,54,62,49,60,0,50],
[67,56,68,76,63,64,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,69,64,70,64,81],
[59,0,78,68,84,77,70,79],
[59,52,0,62,71,79,80,55],
[61,62,68,0,56,76,83,92],
[66,46,59,74,0,75,70,59],
[60,53,51,54,55,0,55,79],
[66,60,50,47,60,75,0,50],
[49,51,75,38,71,51,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,68,85,63,78,69,55],
[81,0,81,81,81,81,59,57],
[62,49,0,69,72,83,49,59],
[45,49,61,0,58,77,51,50],
[67,49,58,72,0,71,39,59],
[52,49,47,53,59,0,61,47],
[61,71,81,79,91,69,0,74],
[75,73,71,80,71,83,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,76,65,75,77,75,75],
[67,0,69,67,68,80,61,70],
[54,61,0,65,70,69,61,74],
[65,63,65,0,70,76,64,68],
[55,62,60,60,0,58,61,58],
[53,50,61,54,72,0,60,65],
[55,69,69,66,69,70,0,62],
[55,60,56,62,72,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,79,80,78,87,81,67],
[84,0,65,80,77,78,81,77],
[51,65,0,78,70,70,80,71],
[50,50,52,0,58,59,70,67],
[52,53,60,72,0,65,60,76],
[43,52,60,71,65,0,59,81],
[49,49,50,60,70,71,0,71],
[63,53,59,63,54,49,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,69,77,73,76,62],
[63,0,66,59,64,60,74,64],
[60,64,0,50,67,63,72,62],
[61,71,80,0,70,59,67,73],
[53,66,63,60,0,61,66,64],
[57,70,67,71,69,0,76,74],
[54,56,58,63,64,54,0,66],
[68,66,68,57,66,56,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,72,58,78,51,76,60],
[87,0,90,70,98,75,96,51],
[58,40,0,50,67,28,51,43],
[72,60,80,0,82,56,58,65],
[52,32,63,48,0,28,61,49],
[79,55,102,74,102,0,82,73],
[54,34,79,72,69,48,0,63],
[70,79,87,65,81,57,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,71,65,68,65,68],
[64,0,64,61,63,62,58,62],
[66,66,0,67,61,66,60,70],
[59,69,63,0,62,72,46,64],
[65,67,69,68,0,70,73,75],
[62,68,64,58,60,0,64,69],
[65,72,70,84,57,66,0,70],
[62,68,60,66,55,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,77,102,67,75,56],
[60,0,69,74,64,91,78,102],
[63,61,0,74,94,63,92,76],
[53,56,56,0,67,65,68,77],
[28,66,36,63,0,58,66,56],
[63,39,67,65,72,0,61,58],
[55,52,38,62,64,69,0,71],
[74,28,54,53,74,72,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,56,68,57,61,61],
[61,0,50,46,56,59,57,59],
[69,80,0,64,68,66,64,65],
[74,84,66,0,71,78,70,59],
[62,74,62,59,0,62,66,56],
[73,71,64,52,68,0,67,64],
[69,73,66,60,64,63,0,58],
[69,71,65,71,74,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,61,58,54,59,59],
[69,0,81,68,62,69,66,60],
[71,49,0,64,66,53,53,62],
[69,62,66,0,58,54,64,63],
[72,68,64,72,0,66,66,68],
[76,61,77,76,64,0,64,69],
[71,64,77,66,64,66,0,63],
[71,70,68,67,62,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,69,54,74,59,73],
[69,0,66,87,65,80,67,74],
[66,64,0,68,63,65,64,78],
[61,43,62,0,47,65,50,59],
[76,65,67,83,0,76,50,70],
[56,50,65,65,54,0,68,68],
[71,63,66,80,80,62,0,76],
[57,56,52,71,60,62,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,72,53,61,69,73,75],
[72,0,85,63,66,81,72,70],
[58,45,0,51,56,67,36,54],
[77,67,79,0,63,62,71,68],
[69,64,74,67,0,66,53,71],
[61,49,63,68,64,0,49,66],
[57,58,94,59,77,81,0,77],
[55,60,76,62,59,64,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,69,71,76,64,81,69],
[77,0,69,66,74,59,80,84],
[61,61,0,73,67,67,75,73],
[59,64,57,0,60,66,62,63],
[54,56,63,70,0,64,60,71],
[66,71,63,64,66,0,73,77],
[49,50,55,68,70,57,0,62],
[61,46,57,67,59,53,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,71,74,77,57,60,65],
[71,0,66,78,88,77,64,74],
[59,64,0,73,62,55,56,55],
[56,52,57,0,77,51,63,52],
[53,42,68,53,0,50,48,50],
[73,53,75,79,80,0,63,74],
[70,66,74,67,82,67,0,58],
[65,56,75,78,80,56,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,69,64,67,65,60],
[66,0,65,76,70,70,59,67],
[67,65,0,65,79,69,54,64],
[61,54,65,0,61,70,60,59],
[66,60,51,69,0,61,51,63],
[63,60,61,60,69,0,52,64],
[65,71,76,70,79,78,0,70],
[70,63,66,71,67,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,78,65,75,59,68,68],
[53,0,59,70,63,50,51,57],
[52,71,0,60,59,55,57,54],
[65,60,70,0,62,64,64,70],
[55,67,71,68,0,50,57,58],
[71,80,75,66,80,0,64,72],
[62,79,73,66,73,66,0,68],
[62,73,76,60,72,58,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,48,53,88,73,68,46],
[68,0,64,57,68,76,63,58],
[82,66,0,70,69,62,61,53],
[77,73,60,0,85,71,69,68],
[42,62,61,45,0,70,57,55],
[57,54,68,59,60,0,66,55],
[62,67,69,61,73,64,0,54],
[84,72,77,62,75,75,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,83,84,79,81,65,73],
[37,0,41,55,51,61,47,56],
[47,89,0,75,63,85,54,73],
[46,75,55,0,57,76,54,69],
[51,79,67,73,0,70,54,58],
[49,69,45,54,60,0,49,64],
[65,83,76,76,76,81,0,68],
[57,74,57,61,72,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,60,59,66,65,61],
[68,0,66,63,70,60,75,68],
[67,64,0,63,72,63,72,69],
[70,67,67,0,65,64,74,65],
[71,60,58,65,0,61,70,70],
[64,70,67,66,69,0,73,67],
[65,55,58,56,60,57,0,55],
[69,62,61,65,60,63,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,57,68,64,62,62],
[62,0,74,61,68,64,68,64],
[63,56,0,49,72,57,61,56],
[73,69,81,0,71,76,55,65],
[62,62,58,59,0,58,63,49],
[66,66,73,54,72,0,54,58],
[68,62,69,75,67,76,0,64],
[68,66,74,65,81,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,63,64,66,67,62],
[66,0,64,60,57,61,70,64],
[62,66,0,70,70,67,74,69],
[67,70,60,0,67,70,73,65],
[66,73,60,63,0,70,64,76],
[64,69,63,60,60,0,70,63],
[63,60,56,57,66,60,0,68],
[68,66,61,65,54,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,74,58,48,51,58],
[70,0,57,73,63,52,51,58],
[69,73,0,87,75,72,74,60],
[56,57,43,0,61,57,54,58],
[72,67,55,69,0,63,52,53],
[82,78,58,73,67,0,71,66],
[79,79,56,76,78,59,0,57],
[72,72,70,72,77,64,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,67,54,34,41,62,26],
[76,0,72,99,67,53,83,52],
[63,58,0,81,65,51,57,44],
[76,31,49,0,27,53,55,26],
[96,63,65,103,0,78,64,65],
[89,77,79,77,52,0,51,51],
[68,47,73,75,66,79,0,45],
[104,78,86,104,65,79,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,69,66,66,57,63,60],
[62,0,75,59,76,69,60,65],
[61,55,0,60,65,65,59,60],
[64,71,70,0,67,67,68,64],
[64,54,65,63,0,53,59,59],
[73,61,65,63,77,0,59,65],
[67,70,71,62,71,71,0,60],
[70,65,70,66,71,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,65,68,81,66,74],
[64,0,61,68,67,67,69,64],
[61,69,0,77,63,76,74,61],
[65,62,53,0,68,62,53,61],
[62,63,67,62,0,65,68,58],
[49,63,54,68,65,0,66,66],
[64,61,56,77,62,64,0,68],
[56,66,69,69,72,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,65,61,61,63,68],
[67,0,67,60,71,64,71,50],
[61,63,0,63,60,63,69,62],
[65,70,67,0,67,65,73,64],
[69,59,70,63,0,56,66,62],
[69,66,67,65,74,0,72,59],
[67,59,61,57,64,58,0,60],
[62,80,68,66,68,71,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,62,63,54,63,66],
[65,0,53,53,66,63,60,53],
[62,77,0,63,77,57,69,67],
[68,77,67,0,79,64,76,59],
[67,64,53,51,0,60,60,55],
[76,67,73,66,70,0,66,62],
[67,70,61,54,70,64,0,56],
[64,77,63,71,75,68,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,60,71,65,65,59],
[64,0,61,65,71,62,71,67],
[70,69,0,64,73,71,70,71],
[70,65,66,0,70,64,66,66],
[59,59,57,60,0,61,57,66],
[65,68,59,66,69,0,60,60],
[65,59,60,64,73,70,0,64],
[71,63,59,64,64,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,55,58,66,57,59,63],
[78,0,65,67,69,63,67,75],
[75,65,0,71,69,65,67,68],
[72,63,59,0,73,64,69,63],
[64,61,61,57,0,61,63,61],
[73,67,65,66,69,0,74,68],
[71,63,63,61,67,56,0,65],
[67,55,62,67,69,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,61,64,54,57,67,66],
[73,0,66,63,66,61,68,68],
[69,64,0,64,71,62,61,65],
[66,67,66,0,59,60,68,73],
[76,64,59,71,0,56,70,67],
[73,69,68,70,74,0,65,64],
[63,62,69,62,60,65,0,62],
[64,62,65,57,63,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,59,51,55,68,55,54],
[74,0,74,62,69,70,67,73],
[71,56,0,56,54,65,66,63],
[79,68,74,0,72,69,64,62],
[75,61,76,58,0,61,63,41],
[62,60,65,61,69,0,56,58],
[75,63,64,66,67,74,0,58],
[76,57,67,68,89,72,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,35,34,27,15,27,30],
[122,0,105,79,75,46,78,95],
[95,25,0,22,5,46,20,47],
[96,51,108,0,51,66,93,81],
[103,55,125,79,0,88,128,86],
[115,84,84,64,42,0,72,84],
[103,52,110,37,2,58,0,57],
[100,35,83,49,44,46,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,76,78,61,67,65],
[60,0,67,61,70,61,66,64],
[66,63,0,64,67,56,67,63],
[54,69,66,0,70,68,73,65],
[52,60,63,60,0,49,68,59],
[69,69,74,62,81,0,78,67],
[63,64,63,57,62,52,0,64],
[65,66,67,65,71,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,77,65,70,58,74],
[60,0,72,76,64,61,54,71],
[61,58,0,70,54,62,59,63],
[53,54,60,0,60,61,44,49],
[65,66,76,70,0,64,66,61],
[60,69,68,69,66,0,50,56],
[72,76,71,86,64,80,0,81],
[56,59,67,81,69,74,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,55,68,68,71,77,68],
[59,0,64,88,76,60,76,68],
[75,66,0,69,78,62,71,66],
[62,42,61,0,63,50,57,50],
[62,54,52,67,0,50,73,59],
[59,70,68,80,80,0,69,79],
[53,54,59,73,57,61,0,57],
[62,62,64,80,71,51,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,95,81,97,81,49,83,68],
[35,0,116,49,83,35,83,35],
[49,14,0,49,83,49,35,35],
[33,81,81,0,81,68,48,68],
[49,47,47,49,0,49,49,68],
[81,95,81,62,81,0,48,33],
[47,47,95,82,81,82,0,68],
[62,95,95,62,62,97,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,63,66,69,72,70],
[60,0,57,59,58,41,46,47],
[64,73,0,55,53,63,53,63],
[67,71,75,0,76,64,53,79],
[64,72,77,54,0,62,56,71],
[61,89,67,66,68,0,64,60],
[58,84,77,77,74,66,0,80],
[60,83,67,51,59,70,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,33,68,68,73,73,46],
[57,0,85,85,125,125,85,85],
[97,45,0,68,68,53,40,13],
[62,45,62,0,86,58,58,18],
[62,5,62,44,0,58,18,18],
[57,5,77,72,72,0,5,90],
[57,45,90,72,112,125,0,90],
[84,45,117,112,112,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,53,109,80,116,76,67],
[50,0,53,50,75,89,76,35],
[77,77,0,77,69,98,103,56],
[21,80,53,0,101,89,47,53],
[50,55,61,29,0,97,76,8],
[14,41,32,41,33,0,40,41],
[54,54,27,83,54,90,0,62],
[63,95,74,77,122,89,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,57,70,63,75,69,63],
[58,0,65,76,62,67,73,62],
[73,65,0,66,69,62,64,69],
[60,54,64,0,56,61,53,59],
[67,68,61,74,0,63,73,56],
[55,63,68,69,67,0,69,71],
[61,57,66,77,57,61,0,72],
[67,68,61,71,74,59,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,51,58,63,59,62,58],
[73,0,60,70,72,65,66,68],
[79,70,0,71,75,70,58,64],
[72,60,59,0,69,68,59,65],
[67,58,55,61,0,62,58,59],
[71,65,60,62,68,0,64,65],
[68,64,72,71,72,66,0,63],
[72,62,66,65,71,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,72,63,74,77,67,70],
[57,0,57,58,60,62,57,70],
[58,73,0,66,68,70,71,73],
[67,72,64,0,67,70,62,77],
[56,70,62,63,0,73,59,69],
[53,68,60,60,57,0,65,67],
[63,73,59,68,71,65,0,71],
[60,60,57,53,61,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,66,71,60,53,78],
[72,0,61,74,79,62,72,63],
[68,69,0,80,82,70,66,60],
[64,56,50,0,68,59,59,57],
[59,51,48,62,0,56,51,61],
[70,68,60,71,74,0,65,66],
[77,58,64,71,79,65,0,60],
[52,67,70,73,69,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,74,71,73,65,71,69],
[58,0,62,64,66,57,60,63],
[56,68,0,65,63,55,60,57],
[59,66,65,0,72,62,64,64],
[57,64,67,58,0,60,68,63],
[65,73,75,68,70,0,72,71],
[59,70,70,66,62,58,0,59],
[61,67,73,66,67,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,64,48,67,70,62,79],
[59,0,62,56,70,80,61,66],
[66,68,0,65,61,80,63,76],
[82,74,65,0,74,90,83,75],
[63,60,69,56,0,80,61,67],
[60,50,50,40,50,0,42,53],
[68,69,67,47,69,88,0,68],
[51,64,54,55,63,77,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,69,67,69,62,62,57],
[59,0,65,58,59,61,57,61],
[61,65,0,62,69,64,64,64],
[63,72,68,0,73,68,71,76],
[61,71,61,57,0,59,68,60],
[68,69,66,62,71,0,73,59],
[68,73,66,59,62,57,0,58],
[73,69,66,54,70,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,63,95,64,74,31,64],
[75,0,81,105,74,74,36,55],
[67,49,0,51,30,41,55,28],
[35,25,79,0,28,47,35,35],
[66,56,100,102,0,76,82,74],
[56,56,89,83,54,0,47,60],
[99,94,75,95,48,83,0,90],
[66,75,102,95,56,70,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,69,36,79,55,48,47],
[55,0,63,24,35,38,49,43],
[61,67,0,31,46,26,48,31],
[94,106,99,0,91,67,59,89],
[51,95,84,39,0,47,39,59],
[75,92,104,63,83,0,71,58],
[82,81,82,71,91,59,0,71],
[83,87,99,41,71,72,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,70,57,43,57,66,40],
[88,0,74,68,67,63,63,77],
[60,56,0,55,57,56,49,50],
[73,62,75,0,71,68,64,54],
[87,63,73,59,0,65,68,72],
[73,67,74,62,65,0,62,50],
[64,67,81,66,62,68,0,55],
[90,53,80,76,58,80,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,63,72,71,62,54,65],
[77,0,57,64,75,60,65,65],
[67,73,0,66,70,62,63,65],
[58,66,64,0,73,70,64,68],
[59,55,60,57,0,58,60,59],
[68,70,68,60,72,0,64,68],
[76,65,67,66,70,66,0,68],
[65,65,65,62,71,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,65,56,68,75,64,61],
[67,0,79,60,81,61,76,46],
[65,51,0,54,66,56,70,61],
[74,70,76,0,64,65,75,64],
[62,49,64,66,0,65,69,59],
[55,69,74,65,65,0,78,56],
[66,54,60,55,61,52,0,67],
[69,84,69,66,71,74,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,59,74,73,62,55,58],
[64,0,60,73,67,70,71,66],
[71,70,0,74,78,75,63,66],
[56,57,56,0,61,56,61,60],
[57,63,52,69,0,53,54,54],
[68,60,55,74,77,0,67,62],
[75,59,67,69,76,63,0,65],
[72,64,64,70,76,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,65,59,65,72,73],
[69,0,66,67,63,65,74,74],
[69,64,0,74,68,59,73,73],
[65,63,56,0,69,55,72,71],
[71,67,62,61,0,61,70,67],
[65,65,71,75,69,0,76,71],
[58,56,57,58,60,54,0,60],
[57,56,57,59,63,59,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,69,68,76,68,59],
[67,0,70,68,70,62,77,77],
[58,60,0,57,60,52,59,63],
[61,62,73,0,75,72,77,67],
[62,60,70,55,0,61,61,59],
[54,68,78,58,69,0,64,67],
[62,53,71,53,69,66,0,63],
[71,53,67,63,71,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,52,60,68,65,54,60],
[67,0,59,57,77,72,72,71],
[78,71,0,61,69,70,65,61],
[70,73,69,0,68,69,65,61],
[62,53,61,62,0,62,50,48],
[65,58,60,61,68,0,62,59],
[76,58,65,65,80,68,0,56],
[70,59,69,69,82,71,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,80,71,64,84,70,61],
[64,0,84,66,72,72,71,50],
[50,46,0,47,63,64,43,54],
[59,64,83,0,74,70,74,62],
[66,58,67,56,0,60,56,54],
[46,58,66,60,70,0,61,59],
[60,59,87,56,74,69,0,71],
[69,80,76,68,76,71,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,72,65,63,65,63],
[69,0,63,69,58,61,68,61],
[70,67,0,76,65,67,69,65],
[58,61,54,0,60,59,66,64],
[65,72,65,70,0,63,70,66],
[67,69,63,71,67,0,74,64],
[65,62,61,64,60,56,0,65],
[67,69,65,66,64,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,72,64,71,70,65,69],
[74,0,76,71,77,68,62,64],
[58,54,0,52,58,57,57,55],
[66,59,78,0,65,68,65,64],
[59,53,72,65,0,68,55,61],
[60,62,73,62,62,0,56,56],
[65,68,73,65,75,74,0,61],
[61,66,75,66,69,74,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,96,85,67,93,107,108],
[70,0,77,108,62,109,109,101],
[34,53,0,86,45,66,83,60],
[45,22,44,0,32,67,61,55],
[63,68,85,98,0,90,90,76],
[37,21,64,63,40,0,84,77],
[23,21,47,69,40,46,0,64],
[22,29,70,75,54,53,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,74,67,62,71,67,84],
[64,0,82,71,72,75,77,76],
[56,48,0,53,60,64,61,60],
[63,59,77,0,70,65,83,77],
[68,58,70,60,0,71,74,75],
[59,55,66,65,59,0,59,73],
[63,53,69,47,56,71,0,66],
[46,54,70,53,55,57,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,56,68,65,70,65,79],
[54,0,52,61,59,69,58,68],
[74,78,0,71,75,76,61,67],
[62,69,59,0,60,80,55,79],
[65,71,55,70,0,76,69,82],
[60,61,54,50,54,0,65,65],
[65,72,69,75,61,65,0,66],
[51,62,63,51,48,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,68,52,58,68,53],
[68,0,56,70,57,58,67,60],
[68,74,0,70,72,65,68,67],
[62,60,60,0,56,55,61,60],
[78,73,58,74,0,72,69,74],
[72,72,65,75,58,0,67,66],
[62,63,62,69,61,63,0,62],
[77,70,63,70,56,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,71,66,68,65,66,64],
[49,0,60,49,61,49,67,60],
[59,70,0,46,54,59,66,60],
[64,81,84,0,77,73,78,73],
[62,69,76,53,0,63,64,71],
[65,81,71,57,67,0,65,65],
[64,63,64,52,66,65,0,67],
[66,70,70,57,59,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,73,80,66,69,64],
[64,0,64,65,64,65,66,61],
[69,66,0,72,76,58,68,68],
[57,65,58,0,76,55,57,62],
[50,66,54,54,0,60,56,60],
[64,65,72,75,70,0,63,59],
[61,64,62,73,74,67,0,63],
[66,69,62,68,70,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,59,93,85,66,86,81],
[37,0,39,90,52,54,85,63],
[71,91,0,96,82,53,81,91],
[37,40,34,0,37,21,48,37],
[45,78,48,93,0,57,79,90],
[64,76,77,109,73,0,107,87],
[44,45,49,82,51,23,0,61],
[49,67,39,93,40,43,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,79,58,63,67,65,80],
[56,0,73,42,45,40,45,59],
[51,57,0,30,28,35,57,53],
[72,88,100,0,74,59,72,77],
[67,85,102,56,0,73,67,73],
[63,90,95,71,57,0,74,70],
[65,85,73,58,63,56,0,62],
[50,71,77,53,57,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,55,72,77,90,70,63],
[50,0,70,72,77,79,70,57],
[75,60,0,83,75,70,48,63],
[58,58,47,0,80,96,31,48],
[53,53,55,50,0,90,48,57],
[40,51,60,34,40,0,48,41],
[60,60,82,99,82,82,0,69],
[67,73,67,82,73,89,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,34,42,63,30,44,41],
[52,0,53,41,41,53,43,51],
[96,77,0,63,55,74,72,77],
[88,89,67,0,92,55,56,62],
[67,89,75,38,0,63,53,51],
[100,77,56,75,67,0,51,48],
[86,87,58,74,77,79,0,88],
[89,79,53,68,79,82,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,68,70,58,73,64,57],
[63,0,68,63,57,64,63,53],
[62,62,0,59,54,67,62,65],
[60,67,71,0,60,67,72,65],
[72,73,76,70,0,79,66,65],
[57,66,63,63,51,0,65,59],
[66,67,68,58,64,65,0,59],
[73,77,65,65,65,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,58,76,69,63,61],
[64,0,60,52,73,64,61,65],
[66,70,0,65,81,67,66,68],
[72,78,65,0,77,61,69,61],
[54,57,49,53,0,57,62,53],
[61,66,63,69,73,0,63,63],
[67,69,64,61,68,67,0,60],
[69,65,62,69,77,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,71,61,45,57,64,70],
[75,0,70,74,49,63,55,61],
[59,60,0,57,55,66,67,62],
[69,56,73,0,70,76,58,64],
[85,81,75,60,0,74,64,74],
[73,67,64,54,56,0,56,66],
[66,75,63,72,66,74,0,59],
[60,69,68,66,56,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,65,65,71,70,62],
[60,0,62,69,58,57,58,58],
[70,68,0,59,52,77,66,67],
[65,61,71,0,59,75,61,76],
[65,72,78,71,0,68,71,61],
[59,73,53,55,62,0,62,62],
[60,72,64,69,59,68,0,67],
[68,72,63,54,69,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,76,72,73,63,74],
[60,0,66,73,66,68,63,76],
[61,64,0,72,65,79,64,76],
[54,57,58,0,66,69,51,67],
[58,64,65,64,0,65,69,68],
[57,62,51,61,65,0,61,71],
[67,67,66,79,61,69,0,73],
[56,54,54,63,62,59,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,66,62,61,73,58],
[62,0,67,72,60,63,65,52],
[65,63,0,69,66,66,57,62],
[64,58,61,0,54,68,57,62],
[68,70,64,76,0,68,68,69],
[69,67,64,62,62,0,66,62],
[57,65,73,73,62,64,0,57],
[72,78,68,68,61,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,51,58,64,69,65,61],
[64,0,49,58,68,61,58,68],
[79,81,0,67,63,69,70,72],
[72,72,63,0,71,70,78,68],
[66,62,67,59,0,68,62,66],
[61,69,61,60,62,0,57,58],
[65,72,60,52,68,73,0,64],
[69,62,58,62,64,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,62,62,68,67,57],
[61,0,63,59,49,57,55,56],
[61,67,0,68,66,59,61,52],
[68,71,62,0,63,65,66,53],
[68,81,64,67,0,68,61,66],
[62,73,71,65,62,0,60,55],
[63,75,69,64,69,70,0,59],
[73,74,78,77,64,75,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,42,53,80,82,33,56],
[78,0,62,59,64,73,68,68],
[88,68,0,65,99,92,56,66],
[77,71,65,0,90,106,57,59],
[50,66,31,40,0,83,40,61],
[48,57,38,24,47,0,38,46],
[97,62,74,73,90,92,0,66],
[74,62,64,71,69,84,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,111,57,58,59,97,50],
[112,0,102,67,58,95,111,94],
[19,28,0,36,58,56,59,37],
[73,63,94,0,90,70,97,66],
[72,72,72,40,0,59,97,58],
[71,35,74,60,71,0,82,55],
[33,19,71,33,33,48,0,48],
[80,36,93,64,72,75,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,66,58,58,59,70],
[63,0,63,70,61,68,64,64],
[65,67,0,62,58,69,61,58],
[64,60,68,0,71,75,59,72],
[72,69,72,59,0,72,71,72],
[72,62,61,55,58,0,63,62],
[71,66,69,71,59,67,0,66],
[60,66,72,58,58,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,60,65,66,63,57,63],
[79,0,66,67,70,67,62,67],
[70,64,0,50,71,64,67,72],
[65,63,80,0,78,74,60,68],
[64,60,59,52,0,66,65,78],
[67,63,66,56,64,0,68,69],
[73,68,63,70,65,62,0,61],
[67,63,58,62,52,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,67,71,66,73,87,60],
[68,0,59,83,61,66,64,65],
[63,71,0,84,58,65,88,57],
[59,47,46,0,53,60,68,53],
[64,69,72,77,0,64,73,55],
[57,64,65,70,66,0,72,74],
[43,66,42,62,57,58,0,52],
[70,65,73,77,75,56,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,54,77,59,67,80,75],
[63,0,46,77,69,74,48,65],
[76,84,0,81,64,79,75,72],
[53,53,49,0,45,49,57,55],
[71,61,66,85,0,83,83,77],
[63,56,51,81,47,0,66,64],
[50,82,55,73,47,64,0,75],
[55,65,58,75,53,66,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,81,107,87,67,85,65],
[53,0,72,72,64,65,59,58],
[49,58,0,90,60,47,82,67],
[23,58,40,0,59,36,36,37],
[43,66,70,71,0,57,66,54],
[63,65,83,94,73,0,91,48],
[45,71,48,94,64,39,0,44],
[65,72,63,93,76,82,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,68,72,70,68,61,67],
[53,0,56,64,61,59,53,60],
[62,74,0,66,62,65,63,61],
[58,66,64,0,59,69,53,54],
[60,69,68,71,0,72,61,65],
[62,71,65,61,58,0,68,66],
[69,77,67,77,69,62,0,70],
[63,70,69,76,65,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,69,77,66,66,65,65],
[59,0,62,68,61,64,63,58],
[61,68,0,63,65,62,67,60],
[53,62,67,0,68,66,61,67],
[64,69,65,62,0,69,63,61],
[64,66,68,64,61,0,62,61],
[65,67,63,69,67,68,0,64],
[65,72,70,63,69,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,64,49,52,49,55,42],
[119,0,82,82,87,111,45,41],
[66,48,0,12,43,50,49,79],
[81,48,118,0,90,114,86,79],
[78,43,87,40,0,73,78,65],
[81,19,80,16,57,0,10,46],
[75,85,81,44,52,120,0,50],
[88,89,51,51,65,84,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,69,72,65,84,86,65],
[76,0,81,67,79,55,79,56],
[61,49,0,52,77,53,71,53],
[58,63,78,0,59,75,78,67],
[65,51,53,71,0,47,67,54],
[46,75,77,55,83,0,80,37],
[44,51,59,52,63,50,0,41],
[65,74,77,63,76,93,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,62,68,70,63,69],
[59,0,62,60,66,64,54,54],
[60,68,0,55,64,69,67,63],
[68,70,75,0,76,71,68,65],
[62,64,66,54,0,67,54,59],
[60,66,61,59,63,0,63,63],
[67,76,63,62,76,67,0,68],
[61,76,67,65,71,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,66,70,71,63,68,77],
[73,0,71,62,76,58,86,88],
[64,59,0,57,67,52,71,75],
[60,68,73,0,66,67,80,78],
[59,54,63,64,0,48,64,72],
[67,72,78,63,82,0,85,90],
[62,44,59,50,66,45,0,91],
[53,42,55,52,58,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,63,73,66,69,57],
[66,0,66,61,74,72,69,60],
[58,64,0,64,62,68,61,57],
[67,69,66,0,70,72,66,65],
[57,56,68,60,0,64,54,54],
[64,58,62,58,66,0,61,62],
[61,61,69,64,76,69,0,59],
[73,70,73,65,76,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,87,66,61,66,61,66],
[64,0,49,101,21,105,56,80],
[43,81,0,83,43,94,62,85],
[64,29,47,0,43,83,78,60],
[69,109,87,87,0,94,62,85],
[64,25,36,47,36,0,40,24],
[69,74,68,52,68,90,0,51],
[64,50,45,70,45,106,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,67,60,57,58,53,54],
[69,0,67,70,76,60,64,66],
[63,63,0,66,57,55,70,56],
[70,60,64,0,68,59,72,69],
[73,54,73,62,0,62,69,55],
[72,70,75,71,68,0,70,61],
[77,66,60,58,61,60,0,58],
[76,64,74,61,75,69,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,73,77,66,65,74,71],
[61,0,71,73,61,58,74,60],
[57,59,0,63,71,56,61,58],
[53,57,67,0,61,64,71,66],
[64,69,59,69,0,60,71,60],
[65,72,74,66,70,0,77,67],
[56,56,69,59,59,53,0,57],
[59,70,72,64,70,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,97,37,97,104,97,83,100],
[33,0,37,49,79,72,53,75],
[93,93,0,67,93,97,46,93],
[33,81,63,0,109,97,109,54],
[26,51,37,21,0,51,55,47],
[33,58,33,33,79,0,79,33],
[47,77,84,21,75,51,0,47],
[30,55,37,76,83,97,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,91,57,70,69,59,65],
[53,0,76,73,64,61,53,79],
[39,54,0,59,62,52,37,56],
[73,57,71,0,57,67,56,66],
[60,66,68,73,0,54,41,76],
[61,69,78,63,76,0,67,71],
[71,77,93,74,89,63,0,77],
[65,51,74,64,54,59,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,56,61,61,56,70],
[65,0,66,69,65,70,55,42],
[57,64,0,36,69,57,53,46],
[74,61,94,0,80,81,55,65],
[69,65,61,50,0,49,63,49],
[69,60,73,49,81,0,54,44],
[74,75,77,75,67,76,0,59],
[60,88,84,65,81,86,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,68,61,69,70,47],
[71,0,55,70,59,75,70,55],
[64,75,0,80,71,80,78,62],
[62,60,50,0,57,81,72,63],
[69,71,59,73,0,83,81,74],
[61,55,50,49,47,0,53,46],
[60,60,52,58,49,77,0,67],
[83,75,68,67,56,84,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,67,69,64,58,60,65],
[76,0,74,67,72,66,63,83],
[63,56,0,60,66,59,52,70],
[61,63,70,0,68,63,59,76],
[66,58,64,62,0,63,58,81],
[72,64,71,67,67,0,65,78],
[70,67,78,71,72,65,0,77],
[65,47,60,54,49,52,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,62,70,71,82,62,67],
[65,0,56,58,69,73,62,66],
[68,74,0,63,71,85,69,75],
[60,72,67,0,70,73,64,72],
[59,61,59,60,0,70,55,69],
[48,57,45,57,60,0,54,63],
[68,68,61,66,75,76,0,70],
[63,64,55,58,61,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,54,62,63,66,68],
[71,0,60,62,71,66,64,70],
[70,70,0,63,65,60,62,77],
[76,68,67,0,63,78,68,73],
[68,59,65,67,0,66,65,73],
[67,64,70,52,64,0,63,73],
[64,66,68,62,65,67,0,78],
[62,60,53,57,57,57,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,79,69,63,59,71,70],
[61,0,70,75,66,75,78,54],
[51,60,0,59,63,61,63,47],
[61,55,71,0,61,60,61,58],
[67,64,67,69,0,55,81,53],
[71,55,69,70,75,0,66,54],
[59,52,67,69,49,64,0,58],
[60,76,83,72,77,76,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,71,72,74,61,67],
[61,0,67,60,62,61,61,61],
[64,63,0,62,66,62,68,68],
[59,70,68,0,67,66,62,70],
[58,68,64,63,0,64,57,70],
[56,69,68,64,66,0,67,65],
[69,69,62,68,73,63,0,67],
[63,69,62,60,60,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,69,64,69,72,74,65],
[69,0,72,53,82,78,65,73],
[61,58,0,68,71,74,50,61],
[66,77,62,0,79,63,73,71],
[61,48,59,51,0,65,62,61],
[58,52,56,67,65,0,60,50],
[56,65,80,57,68,70,0,81],
[65,57,69,59,69,80,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,69,61,64,62,73],
[64,0,67,67,67,65,66,63],
[66,63,0,65,63,70,62,67],
[61,63,65,0,73,63,64,70],
[69,63,67,57,0,61,61,67],
[66,65,60,67,69,0,67,64],
[68,64,68,66,69,63,0,78],
[57,67,63,60,63,66,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,59,67,71,65,69,72],
[56,0,60,61,71,62,63,70],
[71,70,0,65,79,71,62,76],
[63,69,65,0,71,71,71,70],
[59,59,51,59,0,55,60,66],
[65,68,59,59,75,0,71,72],
[61,67,68,59,70,59,0,64],
[58,60,54,60,64,58,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,43,52,46,66,49,38],
[75,0,48,50,42,69,61,56],
[87,82,0,65,68,60,86,65],
[78,80,65,0,53,56,68,65],
[84,88,62,77,0,64,88,74],
[64,61,70,74,66,0,79,48],
[81,69,44,62,42,51,0,53],
[92,74,65,65,56,82,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,66,69,83,64,72,65],
[53,0,64,66,72,58,56,71],
[64,66,0,63,77,65,74,70],
[61,64,67,0,67,58,61,76],
[47,58,53,63,0,66,57,65],
[66,72,65,72,64,0,70,64],
[58,74,56,69,73,60,0,65],
[65,59,60,54,65,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,58,61,56,58,61,74],
[65,0,62,65,63,56,60,65],
[72,68,0,74,64,66,68,65],
[69,65,56,0,59,57,56,63],
[74,67,66,71,0,68,64,75],
[72,74,64,73,62,0,60,64],
[69,70,62,74,66,70,0,66],
[56,65,65,67,55,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,66,44,57,57,68,55],
[87,0,94,63,81,76,77,69],
[64,36,0,46,58,49,69,54],
[86,67,84,0,72,66,60,45],
[73,49,72,58,0,59,78,47],
[73,54,81,64,71,0,85,68],
[62,53,61,70,52,45,0,52],
[75,61,76,85,83,62,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,76,64,78,79,71,67],
[55,0,67,53,65,63,62,47],
[54,63,0,53,64,66,55,43],
[66,77,77,0,72,66,67,62],
[52,65,66,58,0,57,64,44],
[51,67,64,64,73,0,54,60],
[59,68,75,63,66,76,0,63],
[63,83,87,68,86,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,63,73,66,87,81,87],
[56,0,65,67,54,79,68,78],
[67,65,0,70,67,85,75,82],
[57,63,60,0,58,62,70,71],
[64,76,63,72,0,89,78,78],
[43,51,45,68,41,0,58,62],
[49,62,55,60,52,72,0,65],
[43,52,48,59,52,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,58,57,69,53,62,63],
[81,0,61,62,63,65,64,75],
[72,69,0,63,70,57,71,74],
[73,68,67,0,71,65,63,76],
[61,67,60,59,0,59,57,68],
[77,65,73,65,71,0,71,77],
[68,66,59,67,73,59,0,78],
[67,55,56,54,62,53,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,80,90,89,64,99,96],
[54,0,56,107,95,97,83,107],
[50,74,0,84,117,79,92,103],
[40,23,46,0,100,45,60,107],
[41,35,13,30,0,35,56,59],
[66,33,51,85,95,0,64,98],
[31,47,38,70,74,66,0,88],
[34,23,27,23,71,32,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,68,68,73,67,62],
[68,0,69,65,83,79,64,67],
[57,61,0,69,67,68,57,63],
[62,65,61,0,68,72,72,66],
[62,47,63,62,0,68,63,60],
[57,51,62,58,62,0,51,61],
[63,66,73,58,67,79,0,59],
[68,63,67,64,70,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,57,70,75,76,71,76],
[41,0,43,51,54,57,44,36],
[73,87,0,68,63,67,64,80],
[60,79,62,0,58,59,41,57],
[55,76,67,72,0,64,43,57],
[54,73,63,71,66,0,64,52],
[59,86,66,89,87,66,0,69],
[54,94,50,73,73,78,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,54,61,58,63,58,60],
[66,0,68,75,56,87,65,63],
[76,62,0,64,61,62,59,57],
[69,55,66,0,50,61,39,72],
[72,74,69,80,0,70,54,63],
[67,43,68,69,60,0,42,57],
[72,65,71,91,76,88,0,61],
[70,67,73,58,67,73,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,82,67,67,57,74,68],
[55,0,62,66,74,61,75,70],
[48,68,0,54,59,43,56,55],
[63,64,76,0,65,55,70,74],
[63,56,71,65,0,60,83,72],
[73,69,87,75,70,0,92,64],
[56,55,74,60,47,38,0,58],
[62,60,75,56,58,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,67,72,56,83,64,87],
[49,0,56,44,55,64,52,62],
[63,74,0,74,64,75,67,73],
[58,86,56,0,45,62,55,70],
[74,75,66,85,0,71,90,59],
[47,66,55,68,59,0,69,79],
[66,78,63,75,40,61,0,72],
[43,68,57,60,71,51,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,63,55,65,79,50],
[60,0,72,60,50,63,75,51],
[61,58,0,61,55,47,66,71],
[67,70,69,0,59,72,81,56],
[75,80,75,71,0,59,77,65],
[65,67,83,58,71,0,64,55],
[51,55,64,49,53,66,0,47],
[80,79,59,74,65,75,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,56,55,62,53,48,61],
[68,0,65,56,67,66,58,57],
[74,65,0,65,66,72,64,70],
[75,74,65,0,67,72,72,62],
[68,63,64,63,0,69,66,64],
[77,64,58,58,61,0,63,68],
[82,72,66,58,64,67,0,62],
[69,73,60,68,66,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,52,66,64,60,66],
[67,0,60,56,67,68,69,63],
[68,70,0,66,60,69,63,64],
[78,74,64,0,70,71,74,73],
[64,63,70,60,0,72,61,68],
[66,62,61,59,58,0,63,65],
[70,61,67,56,69,67,0,61],
[64,67,66,57,62,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,56,77,71,69,69,66],
[59,0,59,74,66,69,60,57],
[74,71,0,72,75,70,63,65],
[53,56,58,0,61,56,54,54],
[59,64,55,69,0,66,65,67],
[61,61,60,74,64,0,62,62],
[61,70,67,76,65,68,0,62],
[64,73,65,76,63,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,62,67,57,65,71],
[64,0,63,70,66,58,60,67],
[70,67,0,70,64,65,67,72],
[68,60,60,0,64,66,58,71],
[63,64,66,66,0,64,59,67],
[73,72,65,64,66,0,75,83],
[65,70,63,72,71,55,0,75],
[59,63,58,59,63,47,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,62,64,62,76,68],
[61,0,59,75,58,68,74,73],
[64,71,0,64,47,56,79,61],
[68,55,66,0,54,56,66,72],
[66,72,83,76,0,63,76,70],
[68,62,74,74,67,0,74,63],
[54,56,51,64,54,56,0,55],
[62,57,69,58,60,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,57,69,58,54,64,55],
[73,0,60,66,59,64,78,57],
[73,70,0,68,76,70,62,70],
[61,64,62,0,62,66,75,54],
[72,71,54,68,0,55,81,67],
[76,66,60,64,75,0,76,67],
[66,52,68,55,49,54,0,53],
[75,73,60,76,63,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,54,65,54,57,58,59],
[72,0,60,62,59,70,64,65],
[76,70,0,72,63,64,67,66],
[65,68,58,0,56,63,55,59],
[76,71,67,74,0,62,61,70],
[73,60,66,67,68,0,61,66],
[72,66,63,75,69,69,0,67],
[71,65,64,71,60,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,68,69,59,57,60,61],
[83,0,80,69,63,77,72,70],
[62,50,0,56,65,59,60,58],
[61,61,74,0,65,73,64,79],
[71,67,65,65,0,64,61,69],
[73,53,71,57,66,0,56,69],
[70,58,70,66,69,74,0,69],
[69,60,72,51,61,61,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,77,49,34,50,40,74],
[93,0,80,83,87,68,58,61],
[53,50,0,64,61,60,68,80],
[81,47,66,0,31,48,59,76],
[96,43,69,99,0,80,72,75],
[80,62,70,82,50,0,72,77],
[90,72,62,71,58,58,0,69],
[56,69,50,54,55,53,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,71,74,66,88,74],
[65,0,71,81,83,70,79,79],
[67,59,0,71,84,68,74,68],
[59,49,59,0,66,61,72,66],
[56,47,46,64,0,55,66,58],
[64,60,62,69,75,0,71,58],
[42,51,56,58,64,59,0,71],
[56,51,62,64,72,72,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,86,74,62,85,77,71],
[64,0,71,65,65,77,78,68],
[44,59,0,58,54,59,58,58],
[56,65,72,0,61,72,66,63],
[68,65,76,69,0,67,75,71],
[45,53,71,58,63,0,61,68],
[53,52,72,64,55,69,0,58],
[59,62,72,67,59,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,79,72,70,73,74,60],
[56,0,72,55,63,74,75,63],
[51,58,0,56,73,62,71,55],
[58,75,74,0,63,67,82,62],
[60,67,57,67,0,67,75,68],
[57,56,68,63,63,0,69,53],
[56,55,59,48,55,61,0,54],
[70,67,75,68,62,77,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,53,65,52,60,57,59],
[79,0,67,68,63,74,72,64],
[77,63,0,78,61,74,80,77],
[65,62,52,0,57,64,60,59],
[78,67,69,73,0,79,63,64],
[70,56,56,66,51,0,63,52],
[73,58,50,70,67,67,0,64],
[71,66,53,71,66,78,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,62,62,65,56,54],
[70,0,59,68,64,69,54,60],
[69,71,0,63,65,74,62,67],
[68,62,67,0,62,72,67,56],
[68,66,65,68,0,70,60,61],
[65,61,56,58,60,0,59,53],
[74,76,68,63,70,71,0,54],
[76,70,63,74,69,77,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,61,64,69,66,67],
[72,0,73,58,68,67,66,73],
[65,57,0,51,55,73,61,67],
[69,72,79,0,63,82,62,73],
[66,62,75,67,0,72,69,71],
[61,63,57,48,58,0,58,68],
[64,64,69,68,61,72,0,75],
[63,57,63,57,59,62,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,76,57,70,55,66],
[61,0,52,77,54,69,49,54],
[60,78,0,83,77,68,64,72],
[54,53,47,0,55,50,58,44],
[73,76,53,75,0,70,73,71],
[60,61,62,80,60,0,60,66],
[75,81,66,72,57,70,0,52],
[64,76,58,86,59,64,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,78,54,75,68,67],
[63,0,57,47,56,61,66,69],
[67,73,0,62,61,49,83,49],
[52,83,68,0,65,71,52,77],
[76,74,69,65,0,63,70,64],
[55,69,81,59,67,0,75,91],
[62,64,47,78,60,55,0,63],
[63,61,81,53,66,39,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,63,63,59,68,75],
[70,0,56,62,68,72,85,78],
[68,74,0,63,65,63,76,77],
[67,68,67,0,71,65,78,75],
[67,62,65,59,0,66,71,78],
[71,58,67,65,64,0,70,71],
[62,45,54,52,59,60,0,55],
[55,52,53,55,52,59,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,57,57,78,73,62],
[63,0,74,59,70,80,66,79],
[64,56,0,69,74,78,66,80],
[73,71,61,0,74,79,65,65],
[73,60,56,56,0,78,74,70],
[52,50,52,51,52,0,59,49],
[57,64,64,65,56,71,0,62],
[68,51,50,65,60,81,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,65,55,69,67,58],
[61,0,62,67,61,71,59,54],
[61,68,0,65,61,68,65,63],
[65,63,65,0,61,62,54,56],
[75,69,69,69,0,71,63,67],
[61,59,62,68,59,0,64,60],
[63,71,65,76,67,66,0,68],
[72,76,67,74,63,70,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,57,54,58,48,54,53],
[69,0,70,69,66,63,55,58],
[73,60,0,57,55,49,54,59],
[76,61,73,0,68,72,63,62],
[72,64,75,62,0,65,54,66],
[82,67,81,58,65,0,65,66],
[76,75,76,67,76,65,0,72],
[77,72,71,68,64,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,73,70,64,57,59,61],
[70,0,75,63,67,59,55,66],
[57,55,0,58,51,50,51,50],
[60,67,72,0,63,60,55,55],
[66,63,79,67,0,64,66,71],
[73,71,80,70,66,0,57,61],
[71,75,79,75,64,73,0,63],
[69,64,80,75,59,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,64,71,59,55,39,26],
[50,0,23,64,35,42,28,15],
[66,107,0,72,61,73,61,48],
[59,66,58,0,49,63,46,27],
[71,95,69,81,0,89,88,65],
[75,88,57,67,41,0,61,53],
[91,102,69,84,42,69,0,43],
[104,115,82,103,65,77,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,76,72,68,72,54,73],
[62,0,60,72,63,67,65,71],
[54,70,0,68,57,72,53,63],
[58,58,62,0,57,63,67,66],
[62,67,73,73,0,66,63,74],
[58,63,58,67,64,0,54,62],
[76,65,77,63,67,76,0,73],
[57,59,67,64,56,68,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,53,51,58,57,52,59],
[66,0,59,59,57,62,64,70],
[77,71,0,66,66,70,64,69],
[79,71,64,0,66,68,65,76],
[72,73,64,64,0,60,66,75],
[73,68,60,62,70,0,61,76],
[78,66,66,65,64,69,0,67],
[71,60,61,54,55,54,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,80,55,64,75,66,49],
[73,0,67,69,72,75,74,63],
[50,63,0,47,74,64,57,61],
[75,61,83,0,69,73,60,70],
[66,58,56,61,0,57,74,47],
[55,55,66,57,73,0,60,50],
[64,56,73,70,56,70,0,41],
[81,67,69,60,83,80,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,80,61,64,71,67,60],
[64,0,80,69,47,75,60,52],
[50,50,0,53,40,60,60,40],
[69,61,77,0,54,85,67,66],
[66,83,90,76,0,93,79,62],
[59,55,70,45,37,0,61,40],
[63,70,70,63,51,69,0,56],
[70,78,90,64,68,90,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,47,101,79,63,79,111],
[73,0,108,61,108,96,108,89],
[83,22,0,66,72,63,86,77],
[29,69,64,0,47,80,92,92],
[51,22,58,83,0,86,86,51],
[67,34,67,50,44,0,35,61],
[51,22,44,38,44,95,0,61],
[19,41,53,38,79,69,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,53,54,63,53,63,50],
[68,0,58,64,63,63,67,53],
[77,72,0,73,77,64,74,76],
[76,66,57,0,71,69,76,59],
[67,67,53,59,0,60,66,52],
[77,67,66,61,70,0,75,60],
[67,63,56,54,64,55,0,53],
[80,77,54,71,78,70,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,80,72,58,70,66],
[62,0,69,61,77,43,72,64],
[69,61,0,65,72,63,63,61],
[50,69,65,0,82,49,62,53],
[58,53,58,48,0,57,53,62],
[72,87,67,81,73,0,78,62],
[60,58,67,68,77,52,0,48],
[64,66,69,77,68,68,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,98,36,71,104,61,71,35],
[32,0,26,67,120,61,71,25],
[94,104,0,77,130,67,77,41],
[59,63,53,0,84,89,88,88],
[26,10,0,46,0,36,46,10],
[69,69,63,41,94,0,62,62],
[59,59,53,42,84,68,0,33],
[95,105,89,42,120,68,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,60,57,65,54,54],
[74,0,61,54,59,72,59,61],
[73,69,0,66,76,75,58,66],
[70,76,64,0,72,72,63,64],
[73,71,54,58,0,66,51,62],
[65,58,55,58,64,0,51,62],
[76,71,72,67,79,79,0,63],
[76,69,64,66,68,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,83,55,36,69,78,69],
[71,0,60,69,74,58,83,82],
[47,70,0,41,48,69,70,80],
[75,61,89,0,80,84,68,92],
[94,56,82,50,0,59,88,92],
[61,72,61,46,71,0,68,104],
[52,47,60,62,42,62,0,72],
[61,48,50,38,38,26,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,79,61,61,62,60,68],
[72,0,70,62,69,59,68,57],
[51,60,0,60,54,54,54,57],
[69,68,70,0,71,65,67,71],
[69,61,76,59,0,66,59,82],
[68,71,76,65,64,0,64,73],
[70,62,76,63,71,66,0,69],
[62,73,73,59,48,57,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,63,56,63,65,58],
[68,0,65,62,59,62,67,59],
[70,65,0,54,63,59,72,63],
[67,68,76,0,65,71,73,64],
[74,71,67,65,0,76,81,68],
[67,68,71,59,54,0,70,64],
[65,63,58,57,49,60,0,58],
[72,71,67,66,62,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,44,64,39,53,61,68],
[75,0,66,69,56,71,64,63],
[86,64,0,75,65,69,68,79],
[66,61,55,0,56,64,77,66],
[91,74,65,74,0,70,73,63],
[77,59,61,66,60,0,83,80],
[69,66,62,53,57,47,0,68],
[62,67,51,64,67,50,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,71,76,63,72,74,68],
[52,0,60,68,64,72,61,51],
[59,70,0,66,55,64,60,64],
[54,62,64,0,53,61,59,61],
[67,66,75,77,0,65,52,66],
[58,58,66,69,65,0,58,62],
[56,69,70,71,78,72,0,73],
[62,79,66,69,64,68,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,62,70,63,74,68,67],
[58,0,68,54,65,62,76,78],
[68,62,0,60,69,59,73,82],
[60,76,70,0,73,78,85,86],
[67,65,61,57,0,68,79,65],
[56,68,71,52,62,0,69,80],
[62,54,57,45,51,61,0,55],
[63,52,48,44,65,50,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,26,22,37,16,22,57],
[89,0,33,29,89,23,22,65],
[104,97,0,48,79,42,48,73],
[108,101,82,0,108,49,81,90],
[93,41,51,22,0,16,22,83],
[114,107,88,81,114,0,55,114],
[108,108,82,49,108,75,0,90],
[73,65,57,40,47,16,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,72,63,53,73,65,65],
[70,0,66,58,60,68,60,52],
[58,64,0,52,55,67,62,61],
[67,72,78,0,58,78,64,67],
[77,70,75,72,0,72,74,62],
[57,62,63,52,58,0,65,62],
[65,70,68,66,56,65,0,65],
[65,78,69,63,68,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,80,72,72,30,72,72],
[50,0,72,122,72,72,50,50],
[50,58,0,100,122,30,50,50],
[58,8,30,0,30,30,8,0],
[58,58,8,100,0,30,0,0],
[100,58,100,100,100,0,50,50],
[58,80,80,122,130,80,0,22],
[58,80,80,130,130,80,108,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,73,71,71,78,64,71],
[51,0,69,62,62,68,56,62],
[57,61,0,61,67,72,64,62],
[59,68,69,0,65,75,65,70],
[59,68,63,65,0,67,57,61],
[52,62,58,55,63,0,64,63],
[66,74,66,65,73,66,0,66],
[59,68,68,60,69,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,64,65,55,63,60,47],
[73,0,66,70,70,67,61,70],
[66,64,0,58,74,61,62,54],
[65,60,72,0,66,77,58,52],
[75,60,56,64,0,68,58,57],
[67,63,69,53,62,0,56,53],
[70,69,68,72,72,74,0,63],
[83,60,76,78,73,77,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,65,60,70,70,77],
[65,0,63,65,57,72,63,70],
[70,67,0,69,67,63,64,70],
[65,65,61,0,66,78,69,66],
[70,73,63,64,0,73,70,77],
[60,58,67,52,57,0,66,60],
[60,67,66,61,60,64,0,65],
[53,60,60,64,53,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,52,61,80,71,78,77],
[41,0,33,53,62,51,64,50],
[78,97,0,77,78,91,87,65],
[69,77,53,0,69,81,79,63],
[50,68,52,61,0,75,43,67],
[59,79,39,49,55,0,58,47],
[52,66,43,51,87,72,0,76],
[53,80,65,67,63,83,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,57,59,54,52,65,61],
[76,0,71,70,66,61,74,68],
[73,59,0,53,51,56,53,53],
[71,60,77,0,58,59,52,64],
[76,64,79,72,0,66,71,77],
[78,69,74,71,64,0,60,67],
[65,56,77,78,59,70,0,75],
[69,62,77,66,53,63,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,63,69,55,64,59],
[66,0,68,65,71,66,63,67],
[66,62,0,59,70,61,62,64],
[67,65,71,0,60,59,71,67],
[61,59,60,70,0,59,66,69],
[75,64,69,71,71,0,69,65],
[66,67,68,59,64,61,0,67],
[71,63,66,63,61,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,47,42,80,69,44],
[69,0,76,52,50,57,63,45],
[71,54,0,45,70,54,64,42],
[83,78,85,0,67,88,82,51],
[88,80,60,63,0,74,93,75],
[50,73,76,42,56,0,71,39],
[61,67,66,48,37,59,0,29],
[86,85,88,79,55,91,101,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,49,44,57,50,49,62],
[82,0,71,62,88,68,76,85],
[81,59,0,66,81,67,65,82],
[86,68,64,0,79,70,65,83],
[73,42,49,51,0,53,50,57],
[80,62,63,60,77,0,68,62],
[81,54,65,65,80,62,0,67],
[68,45,48,47,73,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,51,55,77,61,55,71],
[73,0,54,78,70,88,72,82],
[79,76,0,58,70,67,64,74],
[75,52,72,0,81,78,67,78],
[53,60,60,49,0,64,65,68],
[69,42,63,52,66,0,55,75],
[75,58,66,63,65,75,0,80],
[59,48,56,52,62,55,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,57,68,69,54,70,59],
[54,0,53,67,73,56,74,65],
[73,77,0,70,76,65,77,74],
[62,63,60,0,70,56,69,66],
[61,57,54,60,0,58,65,57],
[76,74,65,74,72,0,79,72],
[60,56,53,61,65,51,0,59],
[71,65,56,64,73,58,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,66,70,65,65,62],
[73,0,71,71,73,65,59,68],
[68,59,0,55,72,64,59,60],
[64,59,75,0,71,71,55,65],
[60,57,58,59,0,62,57,60],
[65,65,66,59,68,0,61,63],
[65,71,71,75,73,69,0,65],
[68,62,70,65,70,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,86,42,56,43,48,58],
[68,0,84,35,47,44,39,30],
[44,46,0,45,36,33,47,46],
[88,95,85,0,55,52,74,54],
[74,83,94,75,0,59,58,63],
[87,86,97,78,71,0,57,86],
[82,91,83,56,72,73,0,53],
[72,100,84,76,67,44,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,57,60,68,59,63],
[65,0,66,66,56,73,67,59],
[63,64,0,61,61,62,66,55],
[73,64,69,0,65,66,65,67],
[70,74,69,65,0,76,74,65],
[62,57,68,64,54,0,72,62],
[71,63,64,65,56,58,0,62],
[67,71,75,63,65,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,81,56,76,64,74,71],
[50,0,53,34,39,37,68,49],
[49,77,0,66,64,48,60,37],
[74,96,64,0,57,50,73,52],
[54,91,66,73,0,63,64,38],
[66,93,82,80,67,0,84,49],
[56,62,70,57,66,46,0,48],
[59,81,93,78,92,81,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,59,56,64,57,68],
[70,0,66,74,69,63,64,69],
[73,64,0,71,62,62,65,71],
[71,56,59,0,65,65,61,71],
[74,61,68,65,0,68,64,75],
[66,67,68,65,62,0,61,65],
[73,66,65,69,66,69,0,74],
[62,61,59,59,55,65,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,74,71,65,77,78,71],
[60,0,54,73,57,65,69,59],
[56,76,0,70,64,61,67,63],
[59,57,60,0,65,59,55,54],
[65,73,66,65,0,65,70,61],
[53,65,69,71,65,0,68,63],
[52,61,63,75,60,62,0,64],
[59,71,67,76,69,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,76,61,77,81,76,55],
[73,0,74,72,75,85,63,65],
[54,56,0,56,60,62,55,54],
[69,58,74,0,74,75,58,53],
[53,55,70,56,0,69,44,45],
[49,45,68,55,61,0,53,62],
[54,67,75,72,86,77,0,60],
[75,65,76,77,85,68,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,78,76,65,66,74,65],
[44,0,62,55,48,57,56,51],
[52,68,0,71,51,70,56,51],
[54,75,59,0,44,64,58,51],
[65,82,79,86,0,77,72,69],
[64,73,60,66,53,0,62,46],
[56,74,74,72,58,68,0,56],
[65,79,79,79,61,84,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,58,61,68,70,63],
[67,0,61,56,63,69,71,60],
[66,69,0,65,57,71,66,69],
[72,74,65,0,66,76,79,69],
[69,67,73,64,0,72,71,61],
[62,61,59,54,58,0,65,60],
[60,59,64,51,59,65,0,54],
[67,70,61,61,69,70,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,58,57,58,73,70,55],
[65,0,55,63,73,65,60,48],
[72,75,0,63,72,60,70,65],
[73,67,67,0,72,71,64,64],
[72,57,58,58,0,69,62,49],
[57,65,70,59,61,0,60,63],
[60,70,60,66,68,70,0,59],
[75,82,65,66,81,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,52,56,73,61,69,64],
[60,0,47,66,59,65,62,58],
[78,83,0,59,66,60,67,69],
[74,64,71,0,71,59,59,83],
[57,71,64,59,0,64,62,61],
[69,65,70,71,66,0,71,68],
[61,68,63,71,68,59,0,69],
[66,72,61,47,69,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,65,75,65,65,79],
[70,0,60,61,70,60,58,74],
[62,70,0,70,75,74,72,71],
[65,69,60,0,75,66,69,81],
[55,60,55,55,0,58,59,62],
[65,70,56,64,72,0,70,77],
[65,72,58,61,71,60,0,74],
[51,56,59,49,68,53,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,61,55,71,87,79,65],
[47,0,49,59,73,55,71,63],
[69,81,0,68,80,71,72,50],
[75,71,62,0,93,85,80,80],
[59,57,50,37,0,54,65,33],
[43,75,59,45,76,0,90,72],
[51,59,58,50,65,40,0,43],
[65,67,80,50,97,58,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,74,81,81,66,69,65],
[63,0,67,61,68,54,61,61],
[56,63,0,63,64,44,60,52],
[49,69,67,0,63,50,61,57],
[49,62,66,67,0,50,56,44],
[64,76,86,80,80,0,79,68],
[61,69,70,69,74,51,0,55],
[65,69,78,73,86,62,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,79,63,72,71,73,80],
[61,0,73,67,63,73,63,66],
[51,57,0,50,54,53,55,55],
[67,63,80,0,62,68,68,74],
[58,67,76,68,0,63,71,59],
[59,57,77,62,67,0,64,73],
[57,67,75,62,59,66,0,64],
[50,64,75,56,71,57,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,74,66,74,73,49,68],
[57,0,62,52,58,59,52,56],
[56,68,0,65,63,78,62,63],
[64,78,65,0,52,67,61,58],
[56,72,67,78,0,78,72,69],
[57,71,52,63,52,0,57,75],
[81,78,68,69,58,73,0,72],
[62,74,67,72,61,55,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,63,48,59,58,58,54],
[73,0,71,61,71,67,62,58],
[67,59,0,48,53,57,63,53],
[82,69,82,0,73,68,70,65],
[71,59,77,57,0,75,72,58],
[72,63,73,62,55,0,69,67],
[72,68,67,60,58,61,0,55],
[76,72,77,65,72,63,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,62,64,61,64,68],
[67,0,59,63,63,61,65,63],
[69,71,0,70,64,66,62,69],
[68,67,60,0,63,61,63,65],
[66,67,66,67,0,73,65,69],
[69,69,64,69,57,0,71,72],
[66,65,68,67,65,59,0,65],
[62,67,61,65,61,58,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,60,71,69,65,67,82],
[61,0,70,64,65,61,70,72],
[70,60,0,67,50,60,63,63],
[59,66,63,0,69,62,65,69],
[61,65,80,61,0,60,71,68],
[65,69,70,68,70,0,71,73],
[63,60,67,65,59,59,0,62],
[48,58,67,61,62,57,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,72,60,67,57,68],
[65,0,62,54,58,50,54,54],
[58,68,0,64,58,64,58,56],
[58,76,66,0,59,72,63,60],
[70,72,72,71,0,65,58,68],
[63,80,66,58,65,0,63,58],
[73,76,72,67,72,67,0,63],
[62,76,74,70,62,72,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,62,64,70,54,70,56],
[75,0,66,75,66,57,68,67],
[68,64,0,65,61,61,61,62],
[66,55,65,0,65,63,65,58],
[60,64,69,65,0,61,71,66],
[76,73,69,67,69,0,75,61],
[60,62,69,65,59,55,0,56],
[74,63,68,72,64,69,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,77,78,63,63,70],
[69,0,73,71,79,67,64,62],
[64,57,0,72,74,59,64,62],
[53,59,58,0,63,57,51,56],
[52,51,56,67,0,62,63,64],
[67,63,71,73,68,0,69,65],
[67,66,66,79,67,61,0,60],
[60,68,68,74,66,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,65,58,71,66,76,60],
[48,0,54,50,48,54,55,45],
[65,76,0,65,79,69,73,59],
[72,80,65,0,55,74,85,78],
[59,82,51,75,0,67,70,56],
[64,76,61,56,63,0,57,68],
[54,75,57,45,60,73,0,57],
[70,85,71,52,74,62,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,69,61,68,54,64],
[65,0,64,75,67,62,57,62],
[63,66,0,62,63,66,59,62],
[61,55,68,0,65,63,57,61],
[69,63,67,65,0,69,65,68],
[62,68,64,67,61,0,63,71],
[76,73,71,73,65,67,0,62],
[66,68,68,69,62,59,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,73,77,78,68,120,76],
[90,0,104,88,62,83,113,68],
[57,26,0,69,64,77,92,45],
[53,42,61,0,64,60,83,70],
[52,68,66,66,0,95,97,97],
[62,47,53,70,35,0,75,85],
[10,17,38,47,33,55,0,33],
[54,62,85,60,33,45,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,56,68,50,55,70,68],
[69,0,62,71,71,82,79,67],
[74,68,0,74,56,84,72,71],
[62,59,56,0,54,67,54,62],
[80,59,74,76,0,74,79,83],
[75,48,46,63,56,0,63,66],
[60,51,58,76,51,67,0,63],
[62,63,59,68,47,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,69,75,35,56,33,45],
[85,0,96,62,74,85,51,61],
[61,34,0,50,34,51,42,63],
[55,68,80,0,64,99,88,66],
[95,56,96,66,0,104,68,44],
[74,45,79,31,26,0,70,47],
[97,79,88,42,62,60,0,85],
[85,69,67,64,86,83,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,79,76,56,66,52],
[69,0,51,58,81,75,54,67],
[68,79,0,53,81,76,64,55],
[51,72,77,0,76,73,87,63],
[54,49,49,54,0,71,70,57],
[74,55,54,57,59,0,64,29],
[64,76,66,43,60,66,0,46],
[78,63,75,67,73,101,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,62,68,80,79,60,61],
[50,0,61,58,69,63,53,69],
[68,69,0,68,72,69,65,74],
[62,72,62,0,67,70,66,69],
[50,61,58,63,0,77,61,71],
[51,67,61,60,53,0,50,59],
[70,77,65,64,69,80,0,78],
[69,61,56,61,59,71,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,71,71,74,60,77,70],
[78,0,70,68,78,65,76,73],
[59,60,0,63,66,64,70,70],
[59,62,67,0,67,63,74,73],
[56,52,64,63,0,61,60,67],
[70,65,66,67,69,0,69,65],
[53,54,60,56,70,61,0,57],
[60,57,60,57,63,65,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,74,88,70,62,68,58],
[60,0,89,67,56,60,60,66],
[56,41,0,62,76,54,46,49],
[42,63,68,0,49,47,55,36],
[60,74,54,81,0,44,62,70],
[68,70,76,83,86,0,59,69],
[62,70,84,75,68,71,0,61],
[72,64,81,94,60,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,74,52,93,70,65,76],
[65,0,64,56,71,68,61,66],
[56,66,0,65,64,56,46,64],
[78,74,65,0,84,90,73,61],
[37,59,66,46,0,62,52,54],
[60,62,74,40,68,0,56,43],
[65,69,84,57,78,74,0,69],
[54,64,66,69,76,87,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,75,86,81,71,57,71],
[63,0,81,86,72,76,65,80],
[55,49,0,67,62,60,54,64],
[44,44,63,0,63,68,52,67],
[49,58,68,67,0,65,52,61],
[59,54,70,62,65,0,46,64],
[73,65,76,78,78,84,0,77],
[59,50,66,63,69,66,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,68,58,69,65,62,59],
[71,0,63,66,63,62,62,57],
[62,67,0,62,70,69,57,68],
[72,64,68,0,62,66,68,51],
[61,67,60,68,0,65,67,59],
[65,68,61,64,65,0,63,52],
[68,68,73,62,63,67,0,52],
[71,73,62,79,71,78,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,106,74,40,81,81,50,62],
[24,0,69,46,60,65,40,28],
[56,61,0,40,73,84,73,48],
[90,84,90,0,100,92,54,68],
[49,70,57,30,0,76,47,53],
[49,65,46,38,54,0,35,77],
[80,90,57,76,83,95,0,71],
[68,102,82,62,77,53,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,52,43,32,17,49],
[85,0,54,106,87,66,39,88],
[88,76,0,77,100,81,30,100],
[78,24,53,0,47,44,41,65],
[87,43,30,83,0,30,51,74],
[98,64,49,86,100,0,70,86],
[113,91,100,89,79,60,0,83],
[81,42,30,65,56,44,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,60,62,80,74,61,62],
[78,0,69,54,51,61,54,60],
[70,61,0,49,65,65,64,59],
[68,76,81,0,82,78,60,76],
[50,79,65,48,0,68,61,56],
[56,69,65,52,62,0,80,53],
[69,76,66,70,69,50,0,72],
[68,70,71,54,74,77,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,74,73,82,51,73,72],
[60,0,84,72,86,69,65,78],
[56,46,0,47,65,43,54,63],
[57,58,83,0,70,50,52,63],
[48,44,65,60,0,54,56,62],
[79,61,87,80,76,0,57,82],
[57,65,76,78,74,73,0,66],
[58,52,67,67,68,48,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,56,43,50,52,52,37],
[88,0,83,80,96,77,62,72],
[74,47,0,43,68,54,31,64],
[87,50,87,0,69,64,65,73],
[80,34,62,61,0,53,49,59],
[78,53,76,66,77,0,54,73],
[78,68,99,65,81,76,0,78],
[93,58,66,57,71,57,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,57,65,69,67,62],
[68,0,82,67,61,69,66,83],
[60,48,0,51,55,64,64,70],
[73,63,79,0,73,82,60,67],
[65,69,75,57,0,67,64,68],
[61,61,66,48,63,0,58,59],
[63,64,66,70,66,72,0,69],
[68,47,60,63,62,71,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,54,84,82,50,77,80],
[51,0,58,76,60,47,80,63],
[76,72,0,81,78,64,68,69],
[46,54,49,0,51,47,63,55],
[48,70,52,79,0,44,57,64],
[80,83,66,83,86,0,59,68],
[53,50,62,67,73,71,0,77],
[50,67,61,75,66,62,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,76,62,82,72,67,74],
[60,0,65,57,61,71,55,67],
[54,65,0,60,68,73,59,64],
[68,73,70,0,70,74,60,76],
[48,69,62,60,0,66,55,69],
[58,59,57,56,64,0,52,62],
[63,75,71,70,75,78,0,72],
[56,63,66,54,61,68,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,75,76,73,63,74,89],
[53,0,72,57,60,66,63,58],
[55,58,0,66,66,63,66,64],
[54,73,64,0,74,44,73,45],
[57,70,64,56,0,47,57,54],
[67,64,67,86,83,0,80,62],
[56,67,64,57,73,50,0,46],
[41,72,66,85,76,68,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,60,68,69,77,56,61],
[62,0,58,71,67,72,64,60],
[70,72,0,74,62,71,69,65],
[62,59,56,0,58,79,70,61],
[61,63,68,72,0,64,65,66],
[53,58,59,51,66,0,56,55],
[74,66,61,60,65,74,0,70],
[69,70,65,69,64,75,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,75,72,32,43,56,38],
[76,0,93,85,58,52,61,64],
[55,37,0,54,46,32,57,27],
[58,45,76,0,43,55,53,31],
[98,72,84,87,0,69,53,40],
[87,78,98,75,61,0,57,69],
[74,69,73,77,77,73,0,59],
[92,66,103,99,90,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,50,76,68,32,37,53],
[70,0,64,89,74,72,61,55],
[80,66,0,94,67,49,55,63],
[54,41,36,0,57,45,46,48],
[62,56,63,73,0,44,29,50],
[98,58,81,85,86,0,59,65],
[93,69,75,84,101,71,0,52],
[77,75,67,82,80,65,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,25,0,0,130,60,108],
[90,0,83,83,52,130,90,83],
[105,47,0,38,7,130,105,83],
[130,47,92,0,92,130,92,123],
[130,78,123,38,0,130,98,123],
[0,0,0,0,0,0,0,45],
[70,40,25,38,32,130,0,108],
[22,47,47,7,7,85,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,48,49,64,58,63,63],
[68,0,48,62,58,64,62,72],
[82,82,0,73,57,73,75,70],
[81,68,57,0,62,71,60,70],
[66,72,73,68,0,65,67,74],
[72,66,57,59,65,0,68,83],
[67,68,55,70,63,62,0,74],
[67,58,60,60,56,47,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,61,63,53,62,72],
[64,0,65,63,52,53,74,63],
[70,65,0,53,61,63,54,59],
[69,67,77,0,69,59,74,63],
[67,78,69,61,0,65,61,73],
[77,77,67,71,65,0,74,69],
[68,56,76,56,69,56,0,61],
[58,67,71,67,57,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,55,53,46,51,46,56],
[70,0,56,60,57,60,57,55],
[75,74,0,59,53,54,56,69],
[77,70,71,0,70,49,67,70],
[84,73,77,60,0,71,68,87],
[79,70,76,81,59,0,62,75],
[84,73,74,63,62,68,0,76],
[74,75,61,60,43,55,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,57,54,55,51,66,53],
[72,0,62,67,61,58,64,62],
[73,68,0,71,72,60,71,56],
[76,63,59,0,68,59,74,67],
[75,69,58,62,0,58,73,59],
[79,72,70,71,72,0,66,64],
[64,66,59,56,57,64,0,55],
[77,68,74,63,71,66,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,59,61,64,69,71,66],
[59,0,70,61,64,56,65,65],
[71,60,0,67,67,60,69,65],
[69,69,63,0,64,59,73,59],
[66,66,63,66,0,59,74,69],
[61,74,70,71,71,0,74,76],
[59,65,61,57,56,56,0,60],
[64,65,65,71,61,54,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,62,77,82,64,66,78],
[59,0,48,52,63,51,44,54],
[68,82,0,70,85,67,57,81],
[53,78,60,0,76,53,63,44],
[48,67,45,54,0,63,50,61],
[66,79,63,77,67,0,59,72],
[64,86,73,67,80,71,0,72],
[52,76,49,86,69,58,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,67,70,63,71,65,63],
[66,0,65,74,67,73,70,69],
[63,65,0,77,58,75,69,65],
[60,56,53,0,60,69,64,62],
[67,63,72,70,0,70,71,65],
[59,57,55,61,60,0,66,61],
[65,60,61,66,59,64,0,62],
[67,61,65,68,65,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,77,63,63,65,81],
[66,0,68,71,77,61,84,81],
[71,62,0,75,70,76,81,69],
[53,59,55,0,55,43,65,61],
[67,53,60,75,0,64,60,67],
[67,69,54,87,66,0,66,65],
[65,46,49,65,70,64,0,63],
[49,49,61,69,63,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,66,62,63,68,74],
[62,0,57,66,60,62,63,63],
[66,73,0,61,67,69,65,69],
[64,64,69,0,61,62,70,61],
[68,70,63,69,0,63,67,64],
[67,68,61,68,67,0,62,64],
[62,67,65,60,63,68,0,68],
[56,67,61,69,66,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,57,59,73,61,66,57],
[65,0,56,51,60,52,57,48],
[73,74,0,61,78,53,64,61],
[71,79,69,0,80,68,74,63],
[57,70,52,50,0,62,66,55],
[69,78,77,62,68,0,63,74],
[64,73,66,56,64,67,0,54],
[73,82,69,67,75,56,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,76,69,58,76,74,85],
[67,0,82,66,64,76,83,86],
[54,48,0,69,64,69,61,58],
[61,64,61,0,59,67,74,76],
[72,66,66,71,0,65,65,78],
[54,54,61,63,65,0,64,72],
[56,47,69,56,65,66,0,64],
[45,44,72,54,52,58,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,61,65,78,63,76],
[67,0,69,61,59,82,75,69],
[73,61,0,72,62,69,64,73],
[69,69,58,0,61,70,71,70],
[65,71,68,69,0,82,71,71],
[52,48,61,60,48,0,52,70],
[67,55,66,59,59,78,0,79],
[54,61,57,60,59,60,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,69,64,68,70,66,69],
[55,0,67,59,56,63,58,59],
[61,63,0,60,54,69,56,58],
[66,71,70,0,65,71,62,64],
[62,74,76,65,0,68,70,65],
[60,67,61,59,62,0,60,58],
[64,72,74,68,60,70,0,67],
[61,71,72,66,65,72,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,75,68,67,67,62],
[64,0,58,67,58,66,71,72],
[70,72,0,73,64,68,74,67],
[55,63,57,0,54,65,61,60],
[62,72,66,76,0,69,74,71],
[63,64,62,65,61,0,69,66],
[63,59,56,69,56,61,0,65],
[68,58,63,70,59,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,81,68,57,51,51,60],
[61,0,68,78,51,59,58,70],
[49,62,0,72,60,45,55,63],
[62,52,58,0,64,39,45,48],
[73,79,70,66,0,69,46,56],
[79,71,85,91,61,0,75,59],
[79,72,75,85,84,55,0,63],
[70,60,67,82,74,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,71,94,99,88,65,75],
[61,0,75,74,57,54,50,60],
[59,55,0,53,64,69,38,56],
[36,56,77,0,61,72,38,73],
[31,73,66,69,0,77,62,55],
[42,76,61,58,53,0,53,69],
[65,80,92,92,68,77,0,72],
[55,70,74,57,75,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,84,61,83,74,81],
[61,0,59,58,69,59,55,58],
[63,71,0,86,71,82,67,73],
[46,72,44,0,47,49,59,56],
[69,61,59,83,0,69,67,73],
[47,71,48,81,61,0,61,58],
[56,75,63,71,63,69,0,68],
[49,72,57,74,57,72,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,88,57,91,83,87,59],
[67,0,61,91,68,98,70,76],
[42,69,0,60,52,78,67,64],
[73,39,70,0,77,68,66,57],
[39,62,78,53,0,70,71,53],
[47,32,52,62,60,0,48,53],
[43,60,63,64,59,82,0,56],
[71,54,66,73,77,77,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,59,61,65,69,56],
[59,0,57,47,59,60,54,59],
[65,73,0,62,65,56,64,62],
[71,83,68,0,81,77,65,68],
[69,71,65,49,0,75,69,59],
[65,70,74,53,55,0,66,53],
[61,76,66,65,61,64,0,47],
[74,71,68,62,71,77,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,69,74,57,65,69],
[69,0,76,69,66,76,68,62],
[65,54,0,66,70,57,60,56],
[61,61,64,0,68,63,56,66],
[56,64,60,62,0,59,62,69],
[73,54,73,67,71,0,68,67],
[65,62,70,74,68,62,0,70],
[61,68,74,64,61,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,74,66,55,77,75,67],
[54,0,61,52,50,55,72,43],
[56,69,0,65,42,75,72,65],
[64,78,65,0,64,84,77,64],
[75,80,88,66,0,74,75,59],
[53,75,55,46,56,0,57,47],
[55,58,58,53,55,73,0,60],
[63,87,65,66,71,83,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,105,83,56,88,73,99,88],
[25,0,57,26,18,52,65,45],
[47,73,0,73,62,75,85,68],
[74,104,57,0,82,56,82,105],
[42,112,68,48,0,67,95,95],
[57,78,55,74,63,0,61,80],
[31,65,45,48,35,69,0,67],
[42,85,62,25,35,50,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,70,58,72,57,51,61],
[67,0,82,73,78,60,73,64],
[60,48,0,43,61,45,46,56],
[72,57,87,0,73,62,67,55],
[58,52,69,57,0,60,50,55],
[73,70,85,68,70,0,66,64],
[79,57,84,63,80,64,0,73],
[69,66,74,75,75,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,58,60,57,59,62,49],
[66,0,63,51,68,68,63,52],
[72,67,0,63,63,62,62,56],
[70,79,67,0,66,73,72,59],
[73,62,67,64,0,64,61,63],
[71,62,68,57,66,0,61,61],
[68,67,68,58,69,69,0,65],
[81,78,74,71,67,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,75,62,71,75,66,57],
[67,0,66,65,74,81,68,69],
[55,64,0,64,62,67,61,60],
[68,65,66,0,69,75,63,64],
[59,56,68,61,0,67,56,64],
[55,49,63,55,63,0,57,60],
[64,62,69,67,74,73,0,73],
[73,61,70,66,66,70,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,48,43,57,44,47,65],
[86,0,62,67,70,73,67,87],
[82,68,0,64,60,76,60,55],
[87,63,66,0,70,72,74,75],
[73,60,70,60,0,61,77,75],
[86,57,54,58,69,0,76,73],
[83,63,70,56,53,54,0,51],
[65,43,75,55,55,57,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,50,56,38,46,84,62],
[51,0,45,44,65,52,52,59],
[80,85,0,40,55,24,65,29],
[74,86,90,0,58,44,71,77],
[92,65,75,72,0,68,77,99],
[84,78,106,86,62,0,91,120],
[46,78,65,59,53,39,0,73],
[68,71,101,53,31,10,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,77,56,72,68,77],
[68,0,63,67,63,65,82,83],
[64,67,0,71,71,79,74,71],
[53,63,59,0,59,72,70,76],
[74,67,59,71,0,65,67,81],
[58,65,51,58,65,0,74,76],
[62,48,56,60,63,56,0,72],
[53,47,59,54,49,54,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,56,59,49,56,56],
[66,0,58,65,69,49,64,51],
[67,72,0,59,60,67,59,64],
[74,65,71,0,65,64,63,67],
[71,61,70,65,0,59,65,70],
[81,81,63,66,71,0,70,62],
[74,66,71,67,65,60,0,66],
[74,79,66,63,60,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,69,67,56,55,57,54],
[73,0,71,63,65,58,64,65],
[61,59,0,61,56,65,61,64],
[63,67,69,0,59,52,59,59],
[74,65,74,71,0,65,66,65],
[75,72,65,78,65,0,62,74],
[73,66,69,71,64,68,0,71],
[76,65,66,71,65,56,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,74,66,65,72,69,66],
[63,0,65,64,66,60,57,67],
[56,65,0,64,62,70,55,58],
[64,66,66,0,66,73,61,67],
[65,64,68,64,0,69,55,63],
[58,70,60,57,61,0,60,63],
[61,73,75,69,75,70,0,74],
[64,63,72,63,67,67,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,47,98,80,93,55,66],
[70,0,54,97,67,96,80,67],
[83,76,0,114,59,82,61,79],
[32,33,16,0,38,32,43,34],
[50,63,71,92,0,85,62,72],
[37,34,48,98,45,0,59,56],
[75,50,69,87,68,71,0,56],
[64,63,51,96,58,74,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,130,61,95,61,71],
[69,0,36,105,130,130,71,71],
[60,94,0,128,94,128,94,69],
[0,25,2,0,25,93,0,37],
[69,0,36,105,0,95,69,71],
[35,0,2,37,35,0,35,37],
[69,59,36,130,61,95,0,37],
[59,59,61,93,59,93,93,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,73,74,85,68,63,61],
[59,0,60,58,66,64,57,60],
[57,70,0,66,72,60,61,58],
[56,72,64,0,75,74,64,65],
[45,64,58,55,0,62,61,59],
[62,66,70,56,68,0,65,58],
[67,73,69,66,69,65,0,61],
[69,70,72,65,71,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,63,84,0,47,0,0],
[130,0,109,130,72,93,72,46],
[67,21,0,58,0,93,46,21],
[46,0,72,0,46,72,46,46],
[130,58,130,84,0,93,46,104],
[83,37,37,58,37,0,37,37],
[130,58,84,84,84,93,0,58],
[130,84,109,84,26,93,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,40,85,95,57,48,72],
[53,0,69,80,103,80,72,72],
[90,61,0,66,72,71,46,79],
[45,50,64,0,67,50,40,62],
[35,27,58,63,0,56,65,53],
[73,50,59,80,74,0,33,71],
[82,58,84,90,65,97,0,74],
[58,58,51,68,77,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,29,55,38,33,26,48],
[81,0,56,82,55,74,43,81],
[101,74,0,102,72,72,62,66],
[75,48,28,0,64,68,47,51],
[92,75,58,66,0,64,86,66],
[97,56,58,62,66,0,47,73],
[104,87,68,83,44,83,0,62],
[82,49,64,79,64,57,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,54,80,48,63,70],
[61,0,28,66,87,61,42,65],
[67,102,0,67,92,64,77,89],
[76,64,63,0,85,80,80,95],
[50,43,38,45,0,53,57,63],
[82,69,66,50,77,0,77,88],
[67,88,53,50,73,53,0,68],
[60,65,41,35,67,42,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,49,66,55,65,54,62],
[85,0,73,76,60,70,77,60],
[81,57,0,65,69,81,62,66],
[64,54,65,0,74,64,45,39],
[75,70,61,56,0,66,54,52],
[65,60,49,66,64,0,44,45],
[76,53,68,85,76,86,0,74],
[68,70,64,91,78,85,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,56,47,63,57,33,71],
[72,0,80,57,97,37,40,74],
[74,50,0,83,108,63,50,62],
[83,73,47,0,59,74,74,72],
[67,33,22,71,0,34,40,43],
[73,93,67,56,96,0,97,71],
[97,90,80,56,90,33,0,104],
[59,56,68,58,87,59,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,75,60,77,79,76,63],
[60,0,72,67,74,64,74,59],
[55,58,0,59,63,61,72,58],
[70,63,71,0,72,68,76,62],
[53,56,67,58,0,62,73,58],
[51,66,69,62,68,0,78,70],
[54,56,58,54,57,52,0,49],
[67,71,72,68,72,60,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,70,73,72,68,77],
[66,0,72,74,65,69,64,71],
[65,58,0,69,63,69,61,72],
[60,56,61,0,57,61,57,73],
[57,65,67,73,0,70,59,72],
[58,61,61,69,60,0,56,68],
[62,66,69,73,71,74,0,76],
[53,59,58,57,58,62,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,69,71,68,60,61],
[70,0,67,71,63,68,66,59],
[64,63,0,69,67,69,70,65],
[61,59,61,0,61,64,63,53],
[59,67,63,69,0,66,67,56],
[62,62,61,66,64,0,60,52],
[70,64,60,67,63,70,0,64],
[69,71,65,77,74,78,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,60,66,67,53,55],
[69,0,66,59,65,63,64,62],
[67,64,0,70,67,63,71,59],
[70,71,60,0,74,70,72,61],
[64,65,63,56,0,70,60,60],
[63,67,67,60,60,0,58,60],
[77,66,59,58,70,72,0,69],
[75,68,71,69,70,70,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,81,60,70,64,80,60],
[48,0,55,38,63,45,54,50],
[49,75,0,57,60,62,72,56],
[70,92,73,0,60,68,75,70],
[60,67,70,70,0,50,66,54],
[66,85,68,62,80,0,77,76],
[50,76,58,55,64,53,0,47],
[70,80,74,60,76,54,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,91,90,95,60,92],
[68,0,58,87,67,87,44,70],
[56,72,0,89,105,106,74,88],
[39,43,41,0,60,90,42,83],
[40,63,25,70,0,77,47,76],
[35,43,24,40,53,0,32,56],
[70,86,56,88,83,98,0,76],
[38,60,42,47,54,74,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,72,65,69,59,52,86],
[59,0,76,66,70,58,50,72],
[58,54,0,58,56,65,50,67],
[65,64,72,0,46,51,50,68],
[61,60,74,84,0,56,57,68],
[71,72,65,79,74,0,62,74],
[78,80,80,80,73,68,0,63],
[44,58,63,62,62,56,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,77,55,54,67,66],
[71,0,76,78,59,58,60,65],
[66,54,0,71,50,64,53,62],
[53,52,59,0,63,56,55,67],
[75,71,80,67,0,65,63,75],
[76,72,66,74,65,0,60,70],
[63,70,77,75,67,70,0,72],
[64,65,68,63,55,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,57,63,62,64,76,74],
[68,0,60,64,64,59,86,70],
[73,70,0,67,76,65,78,77],
[67,66,63,0,58,71,77,67],
[68,66,54,72,0,61,80,61],
[66,71,65,59,69,0,76,78],
[54,44,52,53,50,54,0,60],
[56,60,53,63,69,52,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,103,71,69,56,63,81,68],
[27,0,38,31,39,28,53,33],
[59,92,0,46,67,48,48,83],
[61,99,84,0,74,84,89,85],
[74,91,63,56,0,50,79,78],
[67,102,82,46,80,0,63,83],
[49,77,82,41,51,67,0,41],
[62,97,47,45,52,47,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,61,79,69,88,66],
[60,0,72,76,70,68,80,78],
[61,58,0,58,61,67,71,64],
[69,54,72,0,64,71,82,64],
[51,60,69,66,0,59,73,62],
[61,62,63,59,71,0,55,76],
[42,50,59,48,57,75,0,43],
[64,52,66,66,68,54,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,69,64,59,62,54],
[68,0,66,71,66,63,65,57],
[66,64,0,66,62,60,68,58],
[61,59,64,0,59,46,57,53],
[66,64,68,71,0,64,73,67],
[71,67,70,84,66,0,64,63],
[68,65,62,73,57,66,0,55],
[76,73,72,77,63,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,59,55,60,60,69,65],
[56,0,47,57,53,53,50,45],
[71,83,0,69,66,60,69,65],
[75,73,61,0,68,54,69,76],
[70,77,64,62,0,67,66,72],
[70,77,70,76,63,0,73,78],
[61,80,61,61,64,57,0,64],
[65,85,65,54,58,52,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,80,74,78,67,58,56],
[68,0,72,83,72,62,63,74],
[50,58,0,58,63,61,56,69],
[56,47,72,0,75,61,63,54],
[52,58,67,55,0,51,63,54],
[63,68,69,69,79,0,69,72],
[72,67,74,67,67,61,0,65],
[74,56,61,76,76,58,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,77,66,73,69,72],
[62,0,64,64,69,56,64,76],
[65,66,0,71,68,70,75,69],
[53,66,59,0,63,50,61,52],
[64,61,62,67,0,58,64,75],
[57,74,60,80,72,0,70,73],
[61,66,55,69,66,60,0,61],
[58,54,61,78,55,57,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,54,68,60,65,58],
[68,0,68,67,66,66,58,63],
[64,62,0,60,71,59,60,65],
[76,63,70,0,71,67,67,73],
[62,64,59,59,0,61,55,53],
[70,64,71,63,69,0,67,67],
[65,72,70,63,75,63,0,71],
[72,67,65,57,77,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,42,58,49,66,41,39],
[70,0,61,76,64,75,63,48],
[88,69,0,69,56,98,61,61],
[72,54,61,0,58,71,57,48],
[81,66,74,72,0,79,65,68],
[64,55,32,59,51,0,46,54],
[89,67,69,73,65,84,0,61],
[91,82,69,82,62,76,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,57,61,75,61,68,76],
[60,0,57,62,70,68,58,62],
[73,73,0,64,71,67,69,78],
[69,68,66,0,78,57,63,70],
[55,60,59,52,0,48,49,61],
[69,62,63,73,82,0,67,75],
[62,72,61,67,81,63,0,70],
[54,68,52,60,69,55,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,67,53,52,62,58],
[67,0,65,66,64,52,60,56],
[61,65,0,61,62,56,66,56],
[63,64,69,0,64,54,72,59],
[77,66,68,66,0,58,69,71],
[78,78,74,76,72,0,78,64],
[68,70,64,58,61,52,0,56],
[72,74,74,71,59,66,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,76,67,76,65,68,71],
[55,0,64,73,72,49,72,73],
[54,66,0,74,67,57,71,74],
[63,57,56,0,76,55,63,69],
[54,58,63,54,0,57,62,67],
[65,81,73,75,73,0,73,76],
[62,58,59,67,68,57,0,70],
[59,57,56,61,63,54,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,76,84,62,84,58],
[71,0,57,52,74,79,57,56],
[71,73,0,76,86,65,92,80],
[54,78,54,0,78,48,71,59],
[46,56,44,52,0,55,59,48],
[68,51,65,82,75,0,67,48],
[46,73,38,59,71,63,0,56],
[72,74,50,71,82,82,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,62,62,55,70,61],
[71,0,75,66,73,57,86,73],
[66,55,0,61,68,55,61,72],
[68,64,69,0,72,60,72,74],
[68,57,62,58,0,65,70,72],
[75,73,75,70,65,0,81,64],
[60,44,69,58,60,49,0,67],
[69,57,58,56,58,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,74,60,57,66,65],
[61,0,68,61,66,55,64,64],
[66,62,0,72,61,61,65,76],
[56,69,58,0,55,56,53,55],
[70,64,69,75,0,67,71,74],
[73,75,69,74,63,0,75,76],
[64,66,65,77,59,55,0,65],
[65,66,54,75,56,54,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,54,66,63,67,68,62],
[66,0,63,65,59,71,77,71],
[76,67,0,66,65,71,75,68],
[64,65,64,0,64,74,72,71],
[67,71,65,66,0,72,74,72],
[63,59,59,56,58,0,70,66],
[62,53,55,58,56,60,0,65],
[68,59,62,59,58,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,71,75,69,63,60,76],
[56,0,66,65,70,64,55,73],
[59,64,0,65,61,63,60,72],
[55,65,65,0,60,61,65,61],
[61,60,69,70,0,65,68,73],
[67,66,67,69,65,0,66,65],
[70,75,70,65,62,64,0,72],
[54,57,58,69,57,65,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,62,63,50,57,70,62],
[71,0,65,58,59,60,63,73],
[68,65,0,61,53,61,68,61],
[67,72,69,0,68,69,65,69],
[80,71,77,62,0,72,68,67],
[73,70,69,61,58,0,74,76],
[60,67,62,65,62,56,0,62],
[68,57,69,61,63,54,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,65,63,58,61,70,53],
[74,0,74,66,77,66,71,63],
[65,56,0,58,70,62,69,59],
[67,64,72,0,65,65,72,71],
[72,53,60,65,0,70,62,61],
[69,64,68,65,60,0,73,60],
[60,59,61,58,68,57,0,52],
[77,67,71,59,69,70,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,70,68,67,66,63],
[70,0,60,67,69,63,65,68],
[66,70,0,71,65,68,64,68],
[60,63,59,0,55,62,58,60],
[62,61,65,75,0,73,68,62],
[63,67,62,68,57,0,59,58],
[64,65,66,72,62,71,0,61],
[67,62,62,70,68,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,60,54,57,60,47,60],
[85,0,69,72,64,70,54,75],
[70,61,0,81,56,63,56,76],
[76,58,49,0,68,60,49,61],
[73,66,74,62,0,77,50,83],
[70,60,67,70,53,0,65,62],
[83,76,74,81,80,65,0,81],
[70,55,54,69,47,68,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,73,61,52,59,78,66],
[57,0,68,62,65,64,68,67],
[57,62,0,56,43,51,57,63],
[69,68,74,0,61,60,75,59],
[78,65,87,69,0,61,82,66],
[71,66,79,70,69,0,64,86],
[52,62,73,55,48,66,0,72],
[64,63,67,71,64,44,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,69,70,59,62,70],
[68,0,70,67,76,63,67,67],
[57,60,0,71,66,54,61,65],
[61,63,59,0,71,61,67,69],
[60,54,64,59,0,52,39,65],
[71,67,76,69,78,0,57,66],
[68,63,69,63,91,73,0,72],
[60,63,65,61,65,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,76,54,65,64,64,73],
[68,0,57,62,52,64,59,64],
[54,73,0,64,57,66,70,62],
[76,68,66,0,71,70,58,69],
[65,78,73,59,0,70,62,65],
[66,66,64,60,60,0,64,63],
[66,71,60,72,68,66,0,65],
[57,66,68,61,65,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,83,53,75,72,53],
[72,0,68,81,91,84,88,65],
[72,62,0,81,74,73,87,51],
[47,49,49,0,75,68,71,64],
[77,39,56,55,0,49,66,56],
[55,46,57,62,81,0,61,60],
[58,42,43,59,64,69,0,62],
[77,65,79,66,74,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,70,64,60,71,49],
[65,0,66,74,62,58,55,65],
[60,64,0,68,54,60,52,36],
[60,56,62,0,48,57,48,50],
[66,68,76,82,0,72,59,68],
[70,72,70,73,58,0,63,59],
[59,75,78,82,71,67,0,71],
[81,65,94,80,62,71,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,71,62,69,70,68,67],
[58,0,57,59,66,57,61,56],
[59,73,0,60,65,67,62,60],
[68,71,70,0,63,60,62,66],
[61,64,65,67,0,56,60,58],
[60,73,63,70,74,0,63,62],
[62,69,68,68,70,67,0,63],
[63,74,70,64,72,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,62,75,65,70,72],
[62,0,72,61,62,62,64,59],
[59,58,0,63,53,52,56,57],
[68,69,67,0,64,68,68,64],
[55,68,77,66,0,66,60,65],
[65,68,78,62,64,0,67,71],
[60,66,74,62,70,63,0,64],
[58,71,73,66,65,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,67,85,63,85,69,68],
[45,0,49,58,66,63,48,42],
[63,81,0,73,61,72,65,57],
[45,72,57,0,58,72,50,51],
[67,64,69,72,0,77,56,60],
[45,67,58,58,53,0,56,47],
[61,82,65,80,74,74,0,58],
[62,88,73,79,70,83,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,71,68,59,64,70,59],
[57,0,64,63,62,51,68,62],
[59,66,0,64,58,64,65,66],
[62,67,66,0,68,58,64,65],
[71,68,72,62,0,65,67,59],
[66,79,66,72,65,0,70,78],
[60,62,65,66,63,60,0,61],
[71,68,64,65,71,52,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,47,58,67,72,62],
[70,0,61,62,71,69,62,53],
[70,69,0,55,51,63,55,70],
[83,68,75,0,68,70,64,76],
[72,59,79,62,0,61,64,63],
[63,61,67,60,69,0,67,64],
[58,68,75,66,66,63,0,63],
[68,77,60,54,67,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,64,55,56,67,63,54],
[73,0,70,63,68,69,59,61],
[66,60,0,58,50,57,54,54],
[75,67,72,0,65,62,71,62],
[74,62,80,65,0,75,61,54],
[63,61,73,68,55,0,61,51],
[67,71,76,59,69,69,0,65],
[76,69,76,68,76,79,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,62,55,66,83,68],
[64,0,69,55,67,64,72,80],
[68,61,0,60,51,63,56,66],
[68,75,70,0,70,62,83,78],
[75,63,79,60,0,75,80,89],
[64,66,67,68,55,0,64,72],
[47,58,74,47,50,66,0,60],
[62,50,64,52,41,58,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,59,75,64,59,70,74],
[57,0,57,69,59,58,70,58],
[71,73,0,65,62,61,65,63],
[55,61,65,0,59,66,64,66],
[66,71,68,71,0,60,76,71],
[71,72,69,64,70,0,77,71],
[60,60,65,66,54,53,0,53],
[56,72,67,64,59,59,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,67,66,75,68,71],
[69,0,69,71,73,75,67,55],
[68,61,0,63,73,69,73,61],
[63,59,67,0,61,71,66,56],
[64,57,57,69,0,67,63,52],
[55,55,61,59,63,0,55,58],
[62,63,57,64,67,75,0,60],
[59,75,69,74,78,72,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,77,61,69,61,88,79],
[61,0,77,66,55,75,81,76],
[53,53,0,52,44,61,66,58],
[69,64,78,0,61,64,85,77],
[61,75,86,69,0,72,88,76],
[69,55,69,66,58,0,81,75],
[42,49,64,45,42,49,0,61],
[51,54,72,53,54,55,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,64,68,70,71,71,82],
[54,0,65,59,61,64,57,68],
[66,65,0,72,66,74,65,75],
[62,71,58,0,70,63,67,72],
[60,69,64,60,0,61,63,73],
[59,66,56,67,69,0,59,67],
[59,73,65,63,67,71,0,72],
[48,62,55,58,57,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,0,100,74,104,66],
[92,0,65,65,100,127,130,92],
[91,65,0,27,100,88,130,92],
[130,65,103,0,100,130,130,92],
[30,30,30,30,0,65,104,66],
[56,3,42,0,65,0,69,66],
[26,0,0,0,26,61,0,53],
[64,38,38,38,64,64,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,59,80,56,63,68,66],
[73,0,67,79,61,68,76,60],
[71,63,0,69,70,53,58,70],
[50,51,61,0,56,54,60,56],
[74,69,60,74,0,68,76,65],
[67,62,77,76,62,0,86,57],
[62,54,72,70,54,44,0,60],
[64,70,60,74,65,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,71,71,69,74,55,63],
[49,0,60,58,61,55,58,61],
[59,70,0,68,71,73,65,64],
[59,72,62,0,71,66,61,62],
[61,69,59,59,0,73,67,61],
[56,75,57,64,57,0,55,60],
[75,72,65,69,63,75,0,67],
[67,69,66,68,69,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,62,61,63,77,70],
[65,0,69,57,65,63,74,73],
[69,61,0,59,70,66,68,70],
[68,73,71,0,67,65,72,65],
[69,65,60,63,0,65,70,64],
[67,67,64,65,65,0,68,72],
[53,56,62,58,60,62,0,66],
[60,57,60,65,66,58,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,57,60,61,58,62],
[70,0,62,63,67,68,62,62],
[73,68,0,68,65,71,62,71],
[73,67,62,0,71,75,61,66],
[70,63,65,59,0,71,67,61],
[69,62,59,55,59,0,65,64],
[72,68,68,69,63,65,0,67],
[68,68,59,64,69,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,65,71,74,68,75,64],
[52,0,63,49,58,58,58,53],
[65,67,0,62,62,57,78,61],
[59,81,68,0,71,60,75,60],
[56,72,68,59,0,62,67,62],
[62,72,73,70,68,0,71,68],
[55,72,52,55,63,59,0,54],
[66,77,69,70,68,62,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,68,60,70,68,70,78],
[63,0,66,67,72,66,62,72],
[62,64,0,58,65,62,61,63],
[70,63,72,0,73,64,73,75],
[60,58,65,57,0,65,67,69],
[62,64,68,66,65,0,72,70],
[60,68,69,57,63,58,0,70],
[52,58,67,55,61,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,67,74,63,74,70,77],
[69,0,62,73,57,61,67,81],
[63,68,0,81,68,60,69,79],
[56,57,49,0,58,52,60,66],
[67,73,62,72,0,68,61,73],
[56,69,70,78,62,0,69,76],
[60,63,61,70,69,61,0,74],
[53,49,51,64,57,54,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,69,67,61,77,69,80],
[73,0,72,72,59,75,53,74],
[61,58,0,68,63,78,63,67],
[63,58,62,0,65,60,52,67],
[69,71,67,65,0,75,57,66],
[53,55,52,70,55,0,47,63],
[61,77,67,78,73,83,0,76],
[50,56,63,63,64,67,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,71,68,57,60,71,64],
[56,0,66,65,58,57,62,65],
[59,64,0,65,56,55,54,52],
[62,65,65,0,53,56,53,62],
[73,72,74,77,0,58,68,68],
[70,73,75,74,72,0,65,67],
[59,68,76,77,62,65,0,64],
[66,65,78,68,62,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,69,71,66,67,58],
[68,0,63,57,68,61,64,55],
[69,67,0,57,60,62,71,59],
[61,73,73,0,62,63,63,62],
[59,62,70,68,0,65,73,62],
[64,69,68,67,65,0,70,72],
[63,66,59,67,57,60,0,52],
[72,75,71,68,68,58,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,94,90,67,70,62,77,75],
[36,0,62,47,48,49,44,30],
[40,68,0,49,46,25,63,25],
[63,83,81,0,73,66,70,57],
[60,82,84,57,0,68,64,54],
[68,81,105,64,62,0,76,64],
[53,86,67,60,66,54,0,52],
[55,100,105,73,76,66,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,61,70,72,65,77,62],
[60,0,59,63,63,65,74,59],
[69,71,0,65,74,70,73,61],
[60,67,65,0,63,55,68,64],
[58,67,56,67,0,68,57,56],
[65,65,60,75,62,0,65,65],
[53,56,57,62,73,65,0,59],
[68,71,69,66,74,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,55,56,65,63,58,54],
[71,0,62,70,70,72,69,70],
[75,68,0,64,72,65,69,70],
[74,60,66,0,72,73,64,79],
[65,60,58,58,0,65,66,65],
[67,58,65,57,65,0,61,58],
[72,61,61,66,64,69,0,70],
[76,60,60,51,65,72,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,53,63,59,73,93],
[63,0,83,55,79,61,68,84],
[66,47,0,69,56,44,57,79],
[77,75,61,0,67,60,71,79],
[67,51,74,63,0,71,84,82],
[71,69,86,70,59,0,81,80],
[57,62,73,59,46,49,0,88],
[37,46,51,51,48,50,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,69,59,76,68,66,57],
[57,0,69,70,85,80,62,55],
[61,61,0,76,72,69,68,66],
[71,60,54,0,73,70,56,57],
[54,45,58,57,0,54,56,54],
[62,50,61,60,76,0,59,63],
[64,68,62,74,74,71,0,55],
[73,75,64,73,76,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,95,62,75,66,58,93,107],
[35,0,64,73,61,69,40,75],
[68,66,0,72,51,67,76,95],
[55,57,58,0,37,42,40,75],
[64,69,79,93,0,77,70,102],
[72,61,63,88,53,0,71,80],
[37,90,54,90,60,59,0,86],
[23,55,35,55,28,50,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,43,54,56,53,62,47],
[74,0,61,80,61,76,70,56],
[87,69,0,67,80,65,79,56],
[76,50,63,0,63,52,60,42],
[74,69,50,67,0,53,72,45],
[77,54,65,78,77,0,66,71],
[68,60,51,70,58,64,0,49],
[83,74,74,88,85,59,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,69,77,71,76,68],
[68,0,73,60,75,78,80,76],
[68,57,0,70,77,74,78,70],
[61,70,60,0,70,65,77,64],
[53,55,53,60,0,59,70,65],
[59,52,56,65,71,0,76,63],
[54,50,52,53,60,54,0,55],
[62,54,60,66,65,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,71,57,64,73,59],
[63,0,65,63,56,65,71,47],
[63,65,0,58,64,74,78,62],
[59,67,72,0,64,63,64,55],
[73,74,66,66,0,65,75,76],
[66,65,56,67,65,0,72,66],
[57,59,52,66,55,58,0,61],
[71,83,68,75,54,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,68,73,59,77,76],
[67,0,70,66,64,54,88,71],
[61,60,0,64,67,59,75,70],
[62,64,66,0,69,68,72,76],
[57,66,63,61,0,60,69,66],
[71,76,71,62,70,0,81,73],
[53,42,55,58,61,49,0,60],
[54,59,60,54,64,57,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,54,77,63,60,63,59],
[75,0,68,68,65,77,74,83],
[76,62,0,74,61,78,52,73],
[53,62,56,0,71,44,47,65],
[67,65,69,59,0,53,44,67],
[70,53,52,86,77,0,55,80],
[67,56,78,83,86,75,0,77],
[71,47,57,65,63,50,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,66,69,71,65,79,80],
[67,0,69,75,64,57,70,82],
[64,61,0,68,65,60,63,77],
[61,55,62,0,63,57,63,68],
[59,66,65,67,0,64,67,72],
[65,73,70,73,66,0,71,79],
[51,60,67,67,63,59,0,68],
[50,48,53,62,58,51,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,63,21,53,68,39,69],
[102,0,56,67,102,73,102,104],
[67,74,0,46,58,66,53,69],
[109,63,84,0,109,73,90,90],
[77,28,72,21,0,42,48,50],
[62,57,64,57,88,0,57,64],
[91,28,77,40,82,73,0,90],
[61,26,61,40,80,66,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,64,72,69,73,60,60],
[84,0,67,77,68,82,51,78],
[66,63,0,70,55,67,65,75],
[58,53,60,0,63,73,64,74],
[61,62,75,67,0,73,69,74],
[57,48,63,57,57,0,40,54],
[70,79,65,66,61,90,0,76],
[70,52,55,56,56,76,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,79,81,78,59,66,67],
[64,0,68,87,74,54,63,68],
[51,62,0,81,71,56,66,61],
[49,43,49,0,61,50,44,46],
[52,56,59,69,0,58,52,61],
[71,76,74,80,72,0,64,56],
[64,67,64,86,78,66,0,63],
[63,62,69,84,69,74,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,72,55,54,65,59,63],
[56,0,67,65,46,68,48,54],
[58,63,0,54,36,72,53,63],
[75,65,76,0,50,89,68,71],
[76,84,94,80,0,92,60,77],
[65,62,58,41,38,0,52,56],
[71,82,77,62,70,78,0,94],
[67,76,67,59,53,74,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,53,68,57,70,74],
[66,0,64,66,69,66,68,70],
[64,66,0,64,62,67,65,67],
[77,64,66,0,74,76,79,73],
[62,61,68,56,0,61,61,67],
[73,64,63,54,69,0,67,77],
[60,62,65,51,69,63,0,70],
[56,60,63,57,63,53,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,51,60,59,65,62,57],
[72,0,69,69,64,68,62,71],
[79,61,0,73,58,69,60,72],
[70,61,57,0,61,67,61,68],
[71,66,72,69,0,70,62,59],
[65,62,61,63,60,0,60,65],
[68,68,70,69,68,70,0,62],
[73,59,58,62,71,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,47,62,53,51,52,51],
[68,0,55,66,51,67,58,66],
[83,75,0,62,61,68,58,68],
[68,64,68,0,70,58,52,66],
[77,79,69,60,0,63,48,73],
[79,63,62,72,67,0,65,68],
[78,72,72,78,82,65,0,78],
[79,64,62,64,57,62,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,68,66,75,58,60,62],
[55,0,54,58,71,54,52,55],
[62,76,0,55,68,55,58,59],
[64,72,75,0,78,64,73,65],
[55,59,62,52,0,49,52,59],
[72,76,75,66,81,0,64,78],
[70,78,72,57,78,66,0,69],
[68,75,71,65,71,52,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,59,64,72,73,67,69],
[59,0,59,65,60,67,57,63],
[71,71,0,65,67,59,61,67],
[66,65,65,0,65,62,55,62],
[58,70,63,65,0,65,63,69],
[57,63,71,68,65,0,64,58],
[63,73,69,75,67,66,0,69],
[61,67,63,68,61,72,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,79,72,80,52,58,53],
[79,0,57,67,72,41,67,81],
[51,73,0,70,84,52,59,76],
[58,63,60,0,68,39,58,51],
[50,58,46,62,0,55,61,45],
[78,89,78,91,75,0,64,79],
[72,63,71,72,69,66,0,64],
[77,49,54,79,85,51,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,58,55,54,61,64,60],
[68,0,69,65,68,61,68,64],
[72,61,0,53,57,65,67,68],
[75,65,77,0,77,67,70,72],
[76,62,73,53,0,63,67,60],
[69,69,65,63,67,0,67,68],
[66,62,63,60,63,63,0,58],
[70,66,62,58,70,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,63,74,70,71,72],
[61,0,65,62,67,68,58,63],
[65,65,0,68,68,64,64,72],
[67,68,62,0,65,68,64,62],
[56,63,62,65,0,78,62,65],
[60,62,66,62,52,0,69,62],
[59,72,66,66,68,61,0,67],
[58,67,58,68,65,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,56,58,63,57,61,71],
[68,0,59,62,67,71,62,63],
[74,71,0,64,71,74,73,82],
[72,68,66,0,65,67,69,76],
[67,63,59,65,0,57,62,60],
[73,59,56,63,73,0,62,71],
[69,68,57,61,68,68,0,71],
[59,67,48,54,70,59,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,68,62,60,65,65],
[57,0,56,55,53,52,54,53],
[64,74,0,59,59,72,69,60],
[62,75,71,0,65,72,66,67],
[68,77,71,65,0,68,61,70],
[70,78,58,58,62,0,58,63],
[65,76,61,64,69,72,0,71],
[65,77,70,63,60,67,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,43,47,63,65,69,54],
[74,0,62,65,74,78,66,82],
[87,68,0,58,79,65,80,61],
[83,65,72,0,75,67,83,70],
[67,56,51,55,0,64,60,54],
[65,52,65,63,66,0,59,63],
[61,64,50,47,70,71,0,61],
[76,48,69,60,76,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,76,65,63,61,53,79],
[66,0,71,71,62,65,56,70],
[54,59,0,65,62,62,59,74],
[65,59,65,0,52,64,55,62],
[67,68,68,78,0,75,61,75],
[69,65,68,66,55,0,66,77],
[77,74,71,75,69,64,0,83],
[51,60,56,68,55,53,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,77,69,53,66,62,59],
[62,0,63,63,48,69,69,71],
[53,67,0,62,55,63,58,64],
[61,67,68,0,58,55,54,58],
[77,82,75,72,0,89,64,87],
[64,61,67,75,41,0,57,71],
[68,61,72,76,66,73,0,71],
[71,59,66,72,43,59,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,56,51,60,46,53,63],
[81,0,73,68,61,59,58,73],
[74,57,0,73,65,63,57,71],
[79,62,57,0,61,70,70,76],
[70,69,65,69,0,69,65,78],
[84,71,67,60,61,0,62,75],
[77,72,73,60,65,68,0,77],
[67,57,59,54,52,55,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,56,72,69,70,56,64],
[62,0,60,65,68,67,59,62],
[74,70,0,80,77,76,62,70],
[58,65,50,0,57,51,58,53],
[61,62,53,73,0,64,58,55],
[60,63,54,79,66,0,72,58],
[74,71,68,72,72,58,0,65],
[66,68,60,77,75,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,62,68,57,61,63,70],
[65,0,53,74,64,58,54,66],
[68,77,0,77,72,62,64,69],
[62,56,53,0,71,54,53,60],
[73,66,58,59,0,63,52,63],
[69,72,68,76,67,0,63,68],
[67,76,66,77,78,67,0,62],
[60,64,61,70,67,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,99,123,95,67,37,43],
[48,0,90,70,66,31,25,48],
[31,40,0,53,24,43,37,31],
[7,60,77,0,12,43,19,19],
[35,64,106,118,0,71,61,43],
[63,99,87,87,59,0,78,66],
[93,105,93,111,69,52,0,93],
[87,82,99,111,87,64,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,49,53,51,63,30,56],
[79,0,83,69,62,86,58,62],
[81,47,0,58,64,60,49,68],
[77,61,72,0,56,71,65,62],
[79,68,66,74,0,74,49,73],
[67,44,70,59,56,0,39,60],
[100,72,81,65,81,91,0,80],
[74,68,62,68,57,70,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,58,56,57,55,58,61],
[68,0,61,68,61,60,54,56],
[72,69,0,69,66,64,75,69],
[74,62,61,0,63,67,68,67],
[73,69,64,67,0,68,65,67],
[75,70,66,63,62,0,68,76],
[72,76,55,62,65,62,0,59],
[69,74,61,63,63,54,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,59,72,58,57,69,65],
[78,0,50,75,45,69,71,65],
[71,80,0,94,67,60,78,72],
[58,55,36,0,53,39,59,59],
[72,85,63,77,0,84,65,73],
[73,61,70,91,46,0,78,86],
[61,59,52,71,65,52,0,73],
[65,65,58,71,57,44,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,61,73,74,71,76,68],
[49,0,48,50,44,50,77,61],
[69,82,0,73,68,63,78,81],
[57,80,57,0,83,62,75,73],
[56,86,62,47,0,64,79,62],
[59,80,67,68,66,0,87,70],
[54,53,52,55,51,43,0,43],
[62,69,49,57,68,60,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,65,61,72,67,68],
[67,0,62,59,64,62,63,67],
[71,68,0,64,69,80,71,72],
[65,71,66,0,63,72,70,78],
[69,66,61,67,0,71,70,76],
[58,68,50,58,59,0,60,69],
[63,67,59,60,60,70,0,66],
[62,63,58,52,54,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,94,56,84,62,73,66,82],
[36,0,58,28,52,54,53,45],
[74,72,0,62,67,59,72,69],
[46,102,68,0,56,75,46,81],
[68,78,63,74,0,65,70,82],
[57,76,71,55,65,0,57,70],
[64,77,58,84,60,73,0,93],
[48,85,61,49,48,60,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,81,72,67,80,80,76],
[65,0,76,67,66,59,56,69],
[49,54,0,56,62,52,61,61],
[58,63,74,0,65,58,67,63],
[63,64,68,65,0,57,59,73],
[50,71,78,72,73,0,77,73],
[50,74,69,63,71,53,0,72],
[54,61,69,67,57,57,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,73,67,73,66,61],
[62,0,65,55,57,67,57,58],
[69,65,0,74,69,67,72,74],
[57,75,56,0,65,63,72,61],
[63,73,61,65,0,60,69,54],
[57,63,63,67,70,0,62,51],
[64,73,58,58,61,68,0,72],
[69,72,56,69,76,79,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,48,55,51,61,61,78],
[63,0,69,63,72,62,83,57],
[82,61,0,74,67,81,71,52],
[75,67,56,0,69,86,54,51],
[79,58,63,61,0,53,92,51],
[69,68,49,44,77,0,65,60],
[69,47,59,76,38,65,0,38],
[52,73,78,79,79,70,92,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,68,77,71,69,79,63],
[53,0,59,52,68,67,64,60],
[62,71,0,66,61,66,71,65],
[53,78,64,0,63,64,72,62],
[59,62,69,67,0,70,63,57],
[61,63,64,66,60,0,60,63],
[51,66,59,58,67,70,0,55],
[67,70,65,68,73,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,52,74,62,64,66,43],
[60,0,63,78,65,56,62,58],
[78,67,0,77,53,64,64,64],
[56,52,53,0,58,58,62,57],
[68,65,77,72,0,68,57,53],
[66,74,66,72,62,0,66,66],
[64,68,66,68,73,64,0,54],
[87,72,66,73,77,64,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,92,59,70,75,69,79,84],
[38,0,32,50,38,57,58,73],
[71,98,0,71,63,73,94,60],
[60,80,59,0,77,75,85,60],
[55,92,67,53,0,62,87,62],
[61,73,57,55,68,0,84,64],
[51,72,36,45,43,46,0,45],
[46,57,70,70,68,66,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,70,58,49,62,49,58],
[72,0,68,55,63,67,59,63],
[60,62,0,45,56,61,50,56],
[72,75,85,0,75,64,69,78],
[81,67,74,55,0,50,60,72],
[68,63,69,66,80,0,61,63],
[81,71,80,61,70,69,0,62],
[72,67,74,52,58,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,48,31,58,65,67,47],
[66,0,54,66,56,57,55,36],
[82,76,0,53,57,57,62,55],
[99,64,77,0,64,75,85,57],
[72,74,73,66,0,68,80,51],
[65,73,73,55,62,0,81,82],
[63,75,68,45,50,49,0,54],
[83,94,75,73,79,48,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,59,66,72,69,57],
[62,0,64,60,54,62,50,60],
[65,66,0,53,52,71,67,65],
[71,70,77,0,63,76,59,68],
[64,76,78,67,0,75,67,74],
[58,68,59,54,55,0,59,50],
[61,80,63,71,63,71,0,62],
[73,70,65,62,56,80,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,58,77,66,58,59,60],
[77,0,54,94,74,70,68,62],
[72,76,0,92,61,55,46,62],
[53,36,38,0,53,53,51,65],
[64,56,69,77,0,54,60,81],
[72,60,75,77,76,0,62,68],
[71,62,84,79,70,68,0,85],
[70,68,68,65,49,62,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,67,62,68,66,62],
[65,0,55,71,64,69,74,67],
[64,75,0,69,68,73,79,69],
[63,59,61,0,61,68,66,61],
[68,66,62,69,0,68,79,73],
[62,61,57,62,62,0,72,67],
[64,56,51,64,51,58,0,59],
[68,63,61,69,57,63,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,64,60,79,71,79,81],
[56,0,66,53,64,57,72,57],
[66,64,0,68,79,76,88,60],
[70,77,62,0,78,68,94,69],
[51,66,51,52,0,64,75,62],
[59,73,54,62,66,0,81,60],
[51,58,42,36,55,49,0,40],
[49,73,70,61,68,70,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,55,62,63,49,67,57],
[72,0,69,61,73,60,69,72],
[75,61,0,67,67,66,78,71],
[68,69,63,0,73,59,67,72],
[67,57,63,57,0,53,57,55],
[81,70,64,71,77,0,78,65],
[63,61,52,63,73,52,0,64],
[73,58,59,58,75,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,61,60,66,57,61],
[67,0,72,69,65,72,67,71],
[66,58,0,61,65,72,64,61],
[69,61,69,0,69,73,68,70],
[70,65,65,61,0,67,58,63],
[64,58,58,57,63,0,54,61],
[73,63,66,62,72,76,0,73],
[69,59,69,60,67,69,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,68,49,61,57,62,68],
[75,0,64,75,57,67,79,77],
[62,66,0,54,47,69,79,61],
[81,55,76,0,67,57,63,63],
[69,73,83,63,0,68,75,68],
[73,63,61,73,62,0,75,75],
[68,51,51,67,55,55,0,69],
[62,53,69,67,62,55,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,76,73,62,78,69,59],
[58,0,57,66,65,70,69,62],
[54,73,0,64,63,63,55,61],
[57,64,66,0,60,74,74,65],
[68,65,67,70,0,78,77,64],
[52,60,67,56,52,0,53,57],
[61,61,75,56,53,77,0,55],
[71,68,69,65,66,73,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,75,79,84,63,81,90],
[76,0,64,124,76,105,103,104],
[55,66,0,95,56,63,80,65],
[51,6,35,0,41,81,56,61],
[46,54,74,89,0,75,74,65],
[67,25,67,49,55,0,84,62],
[49,27,50,74,56,46,0,32],
[40,26,65,69,65,68,98,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,61,62,56,68,62,55],
[73,0,67,76,62,72,67,61],
[69,63,0,69,64,69,61,61],
[68,54,61,0,55,66,58,53],
[74,68,66,75,0,62,58,60],
[62,58,61,64,68,0,55,58],
[68,63,69,72,72,75,0,70],
[75,69,69,77,70,72,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,68,69,73,71,66],
[65,0,68,71,68,68,71,71],
[58,62,0,67,69,72,73,66],
[62,59,63,0,64,58,69,68],
[61,62,61,66,0,78,67,74],
[57,62,58,72,52,0,63,69],
[59,59,57,61,63,67,0,77],
[64,59,64,62,56,61,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,94,90,48,69,84,109,69],
[36,0,17,2,17,36,103,17],
[40,113,0,6,52,34,107,0],
[82,128,124,0,69,72,109,57],
[61,113,78,61,0,61,128,36],
[46,94,96,58,69,0,75,55],
[21,27,23,21,2,55,0,21],
[61,113,130,73,94,75,109,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,95,71,50,105,66,107,82],
[35,0,37,50,69,26,51,80],
[59,93,0,64,93,51,97,88],
[80,80,66,0,82,58,89,80],
[25,61,37,48,0,12,45,61],
[64,104,79,72,118,0,88,83],
[23,79,33,41,85,42,0,63],
[48,50,42,50,69,47,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,72,62,63,69,70],
[60,0,62,63,55,69,65,57],
[62,68,0,71,54,57,71,63],
[58,67,59,0,63,59,77,67],
[68,75,76,67,0,71,71,65],
[67,61,73,71,59,0,67,61],
[61,65,59,53,59,63,0,57],
[60,73,67,63,65,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,69,66,79,74,79],
[69,0,67,62,59,78,61,82],
[65,63,0,42,34,74,39,66],
[61,68,88,0,56,76,51,68],
[64,71,96,74,0,73,68,88],
[51,52,56,54,57,0,55,46],
[56,69,91,79,62,75,0,67],
[51,48,64,62,42,84,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,59,62,64,65,59],
[66,0,61,62,70,66,65,68],
[67,69,0,65,69,65,66,76],
[71,68,65,0,64,72,69,76],
[68,60,61,66,0,67,66,60],
[66,64,65,58,63,0,68,71],
[65,65,64,61,64,62,0,65],
[71,62,54,54,70,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,72,65,65,67,59],
[69,0,64,78,64,63,66,71],
[69,66,0,72,72,68,68,63],
[58,52,58,0,52,61,57,53],
[65,66,58,78,0,70,64,61],
[65,67,62,69,60,0,57,62],
[63,64,62,73,66,73,0,59],
[71,59,67,77,69,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,69,60,59,69,56,57],
[78,0,73,72,70,81,69,61],
[61,57,0,53,53,65,51,50],
[70,58,77,0,59,78,60,57],
[71,60,77,71,0,83,67,67],
[61,49,65,52,47,0,50,49],
[74,61,79,70,63,80,0,60],
[73,69,80,73,63,81,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,70,66,65,65,57],
[66,0,57,62,60,68,55,53],
[69,73,0,70,65,69,71,63],
[60,68,60,0,61,62,67,60],
[64,70,65,69,0,62,65,67],
[65,62,61,68,68,0,61,60],
[65,75,59,63,65,69,0,58],
[73,77,67,70,63,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,65,54,56,62,61],
[67,0,58,57,50,52,60,52],
[71,72,0,67,59,67,72,62],
[65,73,63,0,54,60,62,61],
[76,80,71,76,0,62,72,72],
[74,78,63,70,68,0,73,69],
[68,70,58,68,58,57,0,67],
[69,78,68,69,58,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,41,55,62,78,52,52],
[60,0,31,63,79,85,52,67],
[89,99,0,73,91,88,69,62],
[75,67,57,0,72,79,65,55],
[68,51,39,58,0,79,38,48],
[52,45,42,51,51,0,50,56],
[78,78,61,65,92,80,0,69],
[78,63,68,75,82,74,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,60,82,73,69,70,68],
[62,0,63,87,78,71,67,72],
[70,67,0,80,70,64,61,69],
[48,43,50,0,61,53,50,58],
[57,52,60,69,0,59,49,58],
[61,59,66,77,71,0,62,69],
[60,63,69,80,81,68,0,70],
[62,58,61,72,72,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,84,76,56,78,65],
[62,0,70,78,83,71,73,62],
[64,60,0,68,66,65,71,63],
[46,52,62,0,62,54,60,44],
[54,47,64,68,0,54,59,53],
[74,59,65,76,76,0,67,66],
[52,57,59,70,71,63,0,56],
[65,68,67,86,77,64,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,62,63,62,55,62,62],
[58,0,62,77,58,46,52,53],
[68,68,0,52,54,47,50,54],
[67,53,78,0,68,49,60,61],
[68,72,76,62,0,67,57,55],
[75,84,83,81,63,0,65,72],
[68,78,80,70,73,65,0,73],
[68,77,76,69,75,58,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,60,65,64,71,69,73],
[53,0,55,61,60,63,57,54],
[70,75,0,65,71,69,73,55],
[65,69,65,0,59,76,60,58],
[66,70,59,71,0,75,67,58],
[59,67,61,54,55,0,60,57],
[61,73,57,70,63,70,0,68],
[57,76,75,72,72,73,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,68,65,76,71,76,55],
[59,0,68,57,61,71,74,69],
[62,62,0,67,62,71,67,55],
[65,73,63,0,61,65,61,58],
[54,69,68,69,0,65,73,62],
[59,59,59,65,65,0,68,57],
[54,56,63,69,57,62,0,51],
[75,61,75,72,68,73,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,62,60,60,63,67],
[67,0,75,69,58,66,68,70],
[59,55,0,58,51,51,51,64],
[68,61,72,0,60,54,67,62],
[70,72,79,70,0,64,75,71],
[70,64,79,76,66,0,64,78],
[67,62,79,63,55,66,0,64],
[63,60,66,68,59,52,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,65,65,68,70,65],
[60,0,60,60,61,59,70,54],
[61,70,0,55,63,66,65,64],
[65,70,75,0,69,66,71,70],
[65,69,67,61,0,66,68,63],
[62,71,64,64,64,0,73,65],
[60,60,65,59,62,57,0,64],
[65,76,66,60,67,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,53,74,57,72,79,58],
[55,0,60,59,58,68,61,62],
[77,70,0,66,73,81,68,62],
[56,71,64,0,51,65,57,68],
[73,72,57,79,0,63,52,65],
[58,62,49,65,67,0,74,78],
[51,69,62,73,78,56,0,63],
[72,68,68,62,65,52,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,75,68,79,79,71,61],
[53,0,57,64,74,74,60,62],
[55,73,0,77,71,75,73,69],
[62,66,53,0,64,72,69,60],
[51,56,59,66,0,75,63,60],
[51,56,55,58,55,0,59,50],
[59,70,57,61,67,71,0,67],
[69,68,61,70,70,80,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,59,65,86,76,64,73],
[50,0,65,60,77,80,56,71],
[71,65,0,59,86,50,73,74],
[65,70,71,0,84,87,67,64],
[44,53,44,46,0,60,66,63],
[54,50,80,43,70,0,65,60],
[66,74,57,63,64,65,0,63],
[57,59,56,66,67,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,57,85,59,60,64,58],
[66,0,59,79,66,67,59,64],
[73,71,0,93,73,71,71,64],
[45,51,37,0,53,51,52,48],
[71,64,57,77,0,73,69,52],
[70,63,59,79,57,0,54,59],
[66,71,59,78,61,76,0,69],
[72,66,66,82,78,71,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,73,63,70,80,67],
[62,0,68,78,71,73,79,73],
[57,62,0,62,64,72,67,63],
[57,52,68,0,60,62,68,57],
[67,59,66,70,0,75,72,72],
[60,57,58,68,55,0,65,64],
[50,51,63,62,58,65,0,53],
[63,57,67,73,58,66,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,62,62,61,70,57,62],
[79,0,79,71,62,77,79,67],
[68,51,0,70,70,61,68,73],
[68,59,60,0,64,68,67,67],
[69,68,60,66,0,69,70,70],
[60,53,69,62,61,0,67,62],
[73,51,62,63,60,63,0,62],
[68,63,57,63,60,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,79,71,71,63,71,64],
[65,0,78,74,67,69,77,71],
[51,52,0,62,55,50,54,58],
[59,56,68,0,65,65,70,66],
[59,63,75,65,0,69,73,69],
[67,61,80,65,61,0,66,74],
[59,53,76,60,57,64,0,72],
[66,59,72,64,61,56,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,71,78,73,66,78],
[62,0,71,73,78,72,61,74],
[66,59,0,68,80,69,65,72],
[59,57,62,0,69,60,60,74],
[52,52,50,61,0,61,49,61],
[57,58,61,70,69,0,59,70],
[64,69,65,70,81,71,0,69],
[52,56,58,56,69,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,60,53,57,39,56,53],
[95,0,88,75,81,62,72,76],
[70,42,0,77,62,62,48,65],
[77,55,53,0,53,29,49,80],
[73,49,68,77,0,48,51,62],
[91,68,68,101,82,0,65,80],
[74,58,82,81,79,65,0,82],
[77,54,65,50,68,50,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,63,59,65,53,59],
[69,0,60,56,57,65,54,55],
[71,70,0,61,53,68,57,69],
[67,74,69,0,58,63,60,62],
[71,73,77,72,0,69,71,64],
[65,65,62,67,61,0,56,52],
[77,76,73,70,59,74,0,71],
[71,75,61,68,66,78,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,75,70,61,70,74,59],
[55,0,61,63,57,58,72,58],
[55,69,0,70,52,76,68,66],
[60,67,60,0,53,74,62,55],
[69,73,78,77,0,82,80,65],
[60,72,54,56,48,0,74,53],
[56,58,62,68,50,56,0,54],
[71,72,64,75,65,77,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,57,60,59,69,58,55],
[79,0,69,73,68,74,65,63],
[73,61,0,59,59,73,65,67],
[70,57,71,0,68,69,62,66],
[71,62,71,62,0,75,63,65],
[61,56,57,61,55,0,60,58],
[72,65,65,68,67,70,0,67],
[75,67,63,64,65,72,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,78,76,79,65,72],
[60,0,67,69,68,74,62,71],
[66,63,0,60,58,68,72,59],
[52,61,70,0,67,74,70,69],
[54,62,72,63,0,58,64,75],
[51,56,62,56,72,0,59,64],
[65,68,58,60,66,71,0,68],
[58,59,71,61,55,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,74,75,78,64,68,71],
[61,0,58,61,67,62,63,65],
[56,72,0,63,73,71,64,66],
[55,69,67,0,73,75,67,65],
[52,63,57,57,0,64,54,66],
[66,68,59,55,66,0,57,57],
[62,67,66,63,76,73,0,63],
[59,65,64,65,64,73,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,12,39,28,35,76,76],
[102,0,52,82,92,88,76,64],
[118,78,0,65,101,85,88,100],
[91,48,65,0,56,75,49,77],
[102,38,29,74,0,89,72,60],
[95,42,45,55,41,0,53,53],
[54,54,42,81,58,77,0,67],
[54,66,30,53,70,77,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,45,57,66,32,66],
[62,0,68,45,46,75,44,59],
[63,62,0,64,46,68,43,66],
[85,85,66,0,55,68,69,79],
[73,84,84,75,0,73,65,65],
[64,55,62,62,57,0,49,70],
[98,86,87,61,65,81,0,66],
[64,71,64,51,65,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,74,78,71,57,67,60],
[53,0,65,81,63,66,70,64],
[56,65,0,73,34,59,63,60],
[52,49,57,0,44,46,54,47],
[59,67,96,86,0,60,70,57],
[73,64,71,84,70,0,69,65],
[63,60,67,76,60,61,0,80],
[70,66,70,83,73,65,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,73,63,69,57,59,58],
[60,0,74,67,71,54,56,58],
[57,56,0,57,61,46,55,68],
[67,63,73,0,50,52,59,61],
[61,59,69,80,0,58,59,56],
[73,76,84,78,72,0,68,65],
[71,74,75,71,71,62,0,64],
[72,72,62,69,74,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,53,63,62,58,67],
[68,0,54,51,60,63,55,59],
[65,76,0,63,67,69,68,66],
[77,79,67,0,70,71,66,58],
[67,70,63,60,0,65,51,59],
[68,67,61,59,65,0,60,66],
[72,75,62,64,79,70,0,79],
[63,71,64,72,71,64,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,65,62,64,67,71],
[58,0,67,83,74,80,87,79],
[63,63,0,67,64,75,75,71],
[65,47,63,0,62,67,89,80],
[68,56,66,68,0,73,64,66],
[66,50,55,63,57,0,72,71],
[63,43,55,41,66,58,0,66],
[59,51,59,50,64,59,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,67,65,68,59,72],
[62,0,60,58,60,58,50,67],
[59,70,0,64,60,63,66,67],
[63,72,66,0,59,70,60,62],
[65,70,70,71,0,60,69,71],
[62,72,67,60,70,0,57,68],
[71,80,64,70,61,73,0,72],
[58,63,63,68,59,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,56,62,68,65,62],
[64,0,64,56,65,64,65,69],
[70,66,0,64,74,71,78,65],
[74,74,66,0,67,65,65,73],
[68,65,56,63,0,61,63,58],
[62,66,59,65,69,0,72,64],
[65,65,52,65,67,58,0,63],
[68,61,65,57,72,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,74,63,63,51,63],
[60,0,68,63,65,62,51,64],
[64,62,0,67,63,63,62,58],
[56,67,63,0,54,57,62,49],
[67,65,67,76,0,72,65,55],
[67,68,67,73,58,0,66,69],
[79,79,68,68,65,64,0,63],
[67,66,72,81,75,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,67,58,66,58,59],
[76,0,63,70,71,65,66,64],
[71,67,0,67,64,69,64,64],
[63,60,63,0,55,65,57,63],
[72,59,66,75,0,67,62,68],
[64,65,61,65,63,0,66,69],
[72,64,66,73,68,64,0,68],
[71,66,66,67,62,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,55,54,76,57,68],
[61,0,68,64,60,54,66,60],
[68,62,0,64,65,76,66,77],
[75,66,66,0,57,62,65,73],
[76,70,65,73,0,66,64,73],
[54,76,54,68,64,0,64,75],
[73,64,64,65,66,66,0,71],
[62,70,53,57,57,55,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,67,61,66,71,65],
[69,0,58,79,69,70,59,64],
[66,72,0,69,66,69,69,65],
[63,51,61,0,57,63,63,64],
[69,61,64,73,0,64,72,62],
[64,60,61,67,66,0,69,64],
[59,71,61,67,58,61,0,63],
[65,66,65,66,68,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,75,74,60,71,63,70],
[55,0,63,57,61,67,64,58],
[55,67,0,70,63,76,70,56],
[56,73,60,0,68,77,62,68],
[70,69,67,62,0,72,60,61],
[59,63,54,53,58,0,57,53],
[67,66,60,68,70,73,0,61],
[60,72,74,62,69,77,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,52,80,39,62,53],
[86,0,56,50,68,73,74,63],
[86,74,0,60,58,36,78,58],
[78,80,70,0,73,79,73,46],
[50,62,72,57,0,46,68,53],
[91,57,94,51,84,0,105,72],
[68,56,52,57,62,25,0,28],
[77,67,72,84,77,58,102,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,61,58,63,68,68],
[63,0,59,60,77,73,63,66],
[68,71,0,66,81,68,65,66],
[69,70,64,0,70,68,77,65],
[72,53,49,60,0,57,62,63],
[67,57,62,62,73,0,70,67],
[62,67,65,53,68,60,0,63],
[62,64,64,65,67,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,68,65,61,62,65],
[58,0,67,60,55,60,62,51],
[64,63,0,65,58,63,62,48],
[62,70,65,0,58,62,65,54],
[65,75,72,72,0,67,69,56],
[69,70,67,68,63,0,70,61],
[68,68,68,65,61,60,0,60],
[65,79,82,76,74,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,51,42,77,57,59,59],
[69,0,77,59,79,61,86,70],
[79,53,0,67,67,63,71,70],
[88,71,63,0,78,70,85,70],
[53,51,63,52,0,52,56,57],
[73,69,67,60,78,0,69,76],
[71,44,59,45,74,61,0,69],
[71,60,60,60,73,54,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,69,72,63,70,68,75],
[57,0,69,52,65,64,56,65],
[61,61,0,62,60,70,59,66],
[58,78,68,0,71,72,61,75],
[67,65,70,59,0,62,68,69],
[60,66,60,58,68,0,59,70],
[62,74,71,69,62,71,0,64],
[55,65,64,55,61,60,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,71,65,86,51,69,76],
[63,0,58,37,74,42,51,65],
[59,72,0,22,72,54,71,64],
[65,93,108,0,91,74,75,72],
[44,56,58,39,0,53,73,57],
[79,88,76,56,77,0,75,77],
[61,79,59,55,57,55,0,67],
[54,65,66,58,73,53,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,62,63,67,62,63,78],
[71,0,59,69,64,64,57,71],
[68,71,0,73,75,68,64,78],
[67,61,57,0,67,62,59,70],
[63,66,55,63,0,62,68,68],
[68,66,62,68,68,0,62,83],
[67,73,66,71,62,68,0,77],
[52,59,52,60,62,47,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,58,68,71,80,69],
[68,0,69,65,66,71,79,72],
[57,61,0,55,55,62,72,58],
[72,65,75,0,65,70,75,70],
[62,64,75,65,0,66,75,68],
[59,59,68,60,64,0,67,67],
[50,51,58,55,55,63,0,56],
[61,58,72,60,62,63,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,57,70,64,71,61,69],
[66,0,58,63,57,66,61,68],
[73,72,0,74,60,72,71,67],
[60,67,56,0,64,66,66,65],
[66,73,70,66,0,65,70,66],
[59,64,58,64,65,0,64,64],
[69,69,59,64,60,66,0,72],
[61,62,63,65,64,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,58,67,66,68,64,82],
[57,0,53,71,49,60,63,81],
[72,77,0,72,56,63,72,76],
[63,59,58,0,47,57,56,78],
[64,81,74,83,0,82,70,87],
[62,70,67,73,48,0,67,74],
[66,67,58,74,60,63,0,73],
[48,49,54,52,43,56,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,49,57,60,80,69,42],
[58,0,56,63,46,57,37,53],
[81,74,0,66,76,82,76,57],
[73,67,64,0,76,90,67,58],
[70,84,54,54,0,68,60,67],
[50,73,48,40,62,0,59,44],
[61,93,54,63,70,71,0,51],
[88,77,73,72,63,86,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,72,57,79,69,69,58],
[72,0,75,65,73,62,69,66],
[58,55,0,61,56,60,68,62],
[73,65,69,0,58,60,59,60],
[51,57,74,72,0,59,62,68],
[61,68,70,70,71,0,66,71],
[61,61,62,71,68,64,0,68],
[72,64,68,70,62,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,60,73,82,67,74,75],
[58,0,53,63,67,62,60,61],
[70,77,0,67,73,59,76,66],
[57,67,63,0,77,59,64,67],
[48,63,57,53,0,50,66,51],
[63,68,71,71,80,0,76,81],
[56,70,54,66,64,54,0,68],
[55,69,64,63,79,49,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,69,59,70,59,70,66],
[58,0,61,69,60,69,54,55],
[61,69,0,52,62,60,69,64],
[71,61,78,0,65,66,67,59],
[60,70,68,65,0,67,67,71],
[71,61,70,64,63,0,71,60],
[60,76,61,63,63,59,0,52],
[64,75,66,71,59,70,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,74,50,65,68,50,60],
[54,0,73,51,57,66,56,62],
[56,57,0,35,43,69,56,55],
[80,79,95,0,62,72,64,67],
[65,73,87,68,0,68,67,75],
[62,64,61,58,62,0,55,47],
[80,74,74,66,63,75,0,76],
[70,68,75,63,55,83,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,46,49,61,46,48],
[62,0,40,65,54,48,67,66],
[69,90,0,76,73,61,76,52],
[84,65,54,0,48,52,54,34],
[81,76,57,82,0,38,82,56],
[69,82,69,78,92,0,76,51],
[84,63,54,76,48,54,0,70],
[82,64,78,96,74,79,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,60,60,61,70,44,57],
[74,0,80,71,61,89,65,59],
[70,50,0,57,64,67,62,53],
[70,59,73,0,61,76,62,53],
[69,69,66,69,0,72,58,60],
[60,41,63,54,58,0,53,50],
[86,65,68,68,72,77,0,65],
[73,71,77,77,70,80,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,61,71,63,72,58,77],
[63,0,58,74,68,73,78,73],
[69,72,0,79,63,75,72,77],
[59,56,51,0,60,56,61,60],
[67,62,67,70,0,76,69,69],
[58,57,55,74,54,0,65,65],
[72,52,58,69,61,65,0,65],
[53,57,53,70,61,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,63,64,64,62,53],
[66,0,64,61,54,56,57,52],
[60,66,0,59,64,68,67,65],
[67,69,71,0,58,65,66,59],
[66,76,66,72,0,74,65,61],
[66,74,62,65,56,0,72,54],
[68,73,63,64,65,58,0,64],
[77,78,65,71,69,76,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,67,71,62,66,51],
[67,0,67,70,64,64,62,52],
[71,63,0,69,64,62,69,54],
[63,60,61,0,58,60,66,50],
[59,66,66,72,0,65,59,55],
[68,66,68,70,65,0,75,66],
[64,68,61,64,71,55,0,56],
[79,78,76,80,75,64,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,51,46,60,72,67,47],
[76,0,79,76,73,65,66,77],
[79,51,0,62,67,61,67,52],
[84,54,68,0,72,71,66,72],
[70,57,63,58,0,61,70,60],
[58,65,69,59,69,0,67,51],
[63,64,63,64,60,63,0,53],
[83,53,78,58,70,79,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,75,55,59,58,57,60],
[72,0,80,68,59,64,57,65],
[55,50,0,45,55,53,50,47],
[75,62,85,0,66,67,61,61],
[71,71,75,64,0,67,62,58],
[72,66,77,63,63,0,71,59],
[73,73,80,69,68,59,0,70],
[70,65,83,69,72,71,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,60,67,81,90,36,79],
[94,0,95,68,114,96,16,64],
[70,35,0,37,90,32,30,26],
[63,62,93,0,114,113,59,78],
[49,16,40,16,0,51,16,12],
[40,34,98,17,79,0,21,13],
[94,114,100,71,114,109,0,60],
[51,66,104,52,118,117,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,72,74,67,73,76],
[65,0,61,71,64,53,64,56],
[59,69,0,66,69,65,73,65],
[58,59,64,0,66,63,66,71],
[56,66,61,64,0,59,68,60],
[63,77,65,67,71,0,68,69],
[57,66,57,64,62,62,0,62],
[54,74,65,59,70,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,72,63,67,71,78,92],
[55,0,62,42,54,35,51,54],
[58,68,0,54,53,74,59,89],
[67,88,76,0,54,85,78,76],
[63,76,77,76,0,71,83,105],
[59,95,56,45,59,0,60,77],
[52,79,71,52,47,70,0,69],
[38,76,41,54,25,53,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,73,43,55,56,55,74],
[77,0,74,57,71,65,78,61],
[57,56,0,57,76,57,72,65],
[87,73,73,0,80,68,78,61],
[75,59,54,50,0,65,74,57],
[74,65,73,62,65,0,57,60],
[75,52,58,52,56,73,0,57],
[56,69,65,69,73,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,73,64,83,61,89],
[62,0,54,68,55,61,70,70],
[63,76,0,73,62,71,60,70],
[57,62,57,0,40,73,44,72],
[66,75,68,90,0,78,65,82],
[47,69,59,57,52,0,56,63],
[69,60,70,86,65,74,0,85],
[41,60,60,58,48,67,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,63,71,69,63,62,72],
[72,0,65,73,67,60,70,73],
[67,65,0,72,70,67,63,80],
[59,57,58,0,59,68,60,71],
[61,63,60,71,0,64,65,71],
[67,70,63,62,66,0,66,79],
[68,60,67,70,65,64,0,76],
[58,57,50,59,59,51,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,80,87,86,69,62,73],
[42,0,32,59,67,52,64,55],
[50,98,0,56,68,71,78,69],
[43,71,74,0,56,73,77,49],
[44,63,62,74,0,58,59,63],
[61,78,59,57,72,0,85,53],
[68,66,52,53,71,45,0,54],
[57,75,61,81,67,77,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,60,42,86,64,71,50],
[57,0,52,34,70,59,68,60],
[70,78,0,72,84,73,63,84],
[88,96,58,0,82,85,75,67],
[44,60,46,48,0,49,32,71],
[66,71,57,45,81,0,61,60],
[59,62,67,55,98,69,0,62],
[80,70,46,63,59,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,49,61,61,66,61,57],
[64,0,57,60,63,64,66,60],
[81,73,0,63,67,67,74,70],
[69,70,67,0,65,67,72,72],
[69,67,63,65,0,60,64,70],
[64,66,63,63,70,0,74,64],
[69,64,56,58,66,56,0,63],
[73,70,60,58,60,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,71,73,72,68,70],
[68,0,70,73,76,78,75,63],
[64,60,0,71,73,66,68,66],
[59,57,59,0,69,71,65,62],
[57,54,57,61,0,62,67,61],
[58,52,64,59,68,0,71,60],
[62,55,62,65,63,59,0,56],
[60,67,64,68,69,70,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,77,79,77,64,59,72],
[66,0,58,77,67,56,63,75],
[53,72,0,69,62,59,49,72],
[51,53,61,0,58,57,49,57],
[53,63,68,72,0,71,65,73],
[66,74,71,73,59,0,70,69],
[71,67,81,81,65,60,0,71],
[58,55,58,73,57,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,59,66,65,59,60],
[60,0,55,56,59,61,57,59],
[61,75,0,66,69,69,63,60],
[71,74,64,0,66,69,60,70],
[64,71,61,64,0,61,56,60],
[65,69,61,61,69,0,67,64],
[71,73,67,70,74,63,0,65],
[70,71,70,60,70,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,73,75,67,62,64],
[66,0,66,79,68,65,62,65],
[66,64,0,73,69,67,59,58],
[57,51,57,0,60,57,60,57],
[55,62,61,70,0,57,61,63],
[63,65,63,73,73,0,65,64],
[68,68,71,70,69,65,0,69],
[66,65,72,73,67,66,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,64,75,76,64,66,53],
[57,0,60,61,52,53,56,53],
[66,70,0,54,67,55,64,59],
[55,69,76,0,73,56,58,62],
[54,78,63,57,0,63,46,57],
[66,77,75,74,67,0,67,65],
[64,74,66,72,84,63,0,62],
[77,77,71,68,73,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,62,55,52,68,53,60],
[76,0,70,70,63,72,68,60],
[68,60,0,71,61,68,60,71],
[75,60,59,0,64,73,68,70],
[78,67,69,66,0,73,65,72],
[62,58,62,57,57,0,69,64],
[77,62,70,62,65,61,0,65],
[70,70,59,60,58,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,66,74,74,65,80,63],
[44,0,46,68,56,56,85,53],
[64,84,0,71,71,78,89,73],
[56,62,59,0,74,53,71,55],
[56,74,59,56,0,59,86,56],
[65,74,52,77,71,0,90,53],
[50,45,41,59,44,40,0,46],
[67,77,57,75,74,77,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,73,62,79,67,82,68],
[63,0,66,59,72,63,68,58],
[57,64,0,47,67,58,75,63],
[68,71,83,0,80,57,75,81],
[51,58,63,50,0,47,58,53],
[63,67,72,73,83,0,74,78],
[48,62,55,55,72,56,0,52],
[62,72,67,49,77,52,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,50,69,67,52,50,69],
[54,0,48,62,64,53,65,75],
[80,82,0,86,81,65,71,86],
[61,68,44,0,65,66,73,60],
[63,66,49,65,0,60,62,72],
[78,77,65,64,70,0,66,66],
[80,65,59,57,68,64,0,68],
[61,55,44,70,58,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,61,60,60,53,60,56],
[71,0,61,50,55,50,58,53],
[69,69,0,59,56,48,59,52],
[70,80,71,0,66,61,65,65],
[70,75,74,64,0,69,67,55],
[77,80,82,69,61,0,66,64],
[70,72,71,65,63,64,0,70],
[74,77,78,65,75,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,57,70,60,73,79],
[66,0,48,65,78,54,83,75],
[59,82,0,76,82,77,71,73],
[73,65,54,0,62,51,65,63],
[60,52,48,68,0,57,50,87],
[70,76,53,79,73,0,74,77],
[57,47,59,65,80,56,0,71],
[51,55,57,67,43,53,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,60,54,54,67,67,56],
[72,0,66,63,61,63,71,62],
[70,64,0,62,65,69,74,65],
[76,67,68,0,62,72,76,72],
[76,69,65,68,0,73,76,66],
[63,67,61,58,57,0,72,64],
[63,59,56,54,54,58,0,61],
[74,68,65,58,64,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,67,75,68,68,79],
[67,0,66,71,76,62,74,66],
[67,64,0,64,77,69,72,69],
[63,59,66,0,66,69,66,64],
[55,54,53,64,0,61,65,66],
[62,68,61,61,69,0,70,63],
[62,56,58,64,65,60,0,68],
[51,64,61,66,64,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,59,62,71,66,63,66],
[62,0,63,45,42,50,49,61],
[71,67,0,59,62,82,78,69],
[68,85,71,0,54,67,74,56],
[59,88,68,76,0,68,73,58],
[64,80,48,63,62,0,56,60],
[67,81,52,56,57,74,0,55],
[64,69,61,74,72,70,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,78,86,78,74,88],
[68,0,75,64,74,77,68,68],
[66,55,0,60,75,64,61,63],
[52,66,70,0,78,73,69,73],
[44,56,55,52,0,61,61,69],
[52,53,66,57,69,0,68,70],
[56,62,69,61,69,62,0,65],
[42,62,67,57,61,60,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,76,67,71,69,70,69],
[68,0,66,71,74,69,77,64],
[54,64,0,65,78,62,65,64],
[63,59,65,0,69,68,75,58],
[59,56,52,61,0,59,73,51],
[61,61,68,62,71,0,77,67],
[60,53,65,55,57,53,0,65],
[61,66,66,72,79,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,62,67,63,61,69,65],
[71,0,73,72,62,73,70,71],
[68,57,0,66,64,77,72,73],
[63,58,64,0,61,63,62,69],
[67,68,66,69,0,63,70,64],
[69,57,53,67,67,0,61,66],
[61,60,58,68,60,69,0,70],
[65,59,57,61,66,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,48,66,61,58,47,65],
[64,0,54,44,53,60,51,63],
[82,76,0,68,62,71,67,75],
[64,86,62,0,66,64,56,72],
[69,77,68,64,0,56,65,75],
[72,70,59,66,74,0,52,82],
[83,79,63,74,65,78,0,76],
[65,67,55,58,55,48,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,55,56,49,61,50],
[72,0,70,55,68,52,52,50],
[72,60,0,66,62,59,53,57],
[75,75,64,0,73,71,59,62],
[74,62,68,57,0,67,59,60],
[81,78,71,59,63,0,58,66],
[69,78,77,71,71,72,0,63],
[80,80,73,68,70,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,63,62,53,66,59],
[65,0,75,76,69,65,69,66],
[63,55,0,63,62,61,66,59],
[67,54,67,0,55,55,63,57],
[68,61,68,75,0,66,75,64],
[77,65,69,75,64,0,77,67],
[64,61,64,67,55,53,0,64],
[71,64,71,73,66,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,81,76,65,46,90,62],
[37,0,63,50,51,25,68,31],
[49,67,0,63,70,53,56,50],
[54,80,67,0,55,40,64,34],
[65,79,60,75,0,65,67,62],
[84,105,77,90,65,0,73,79],
[40,62,74,66,63,57,0,74],
[68,99,80,96,68,51,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,40,46,63,67,41,49],
[74,0,38,68,57,58,78,36],
[90,92,0,86,88,67,60,88],
[84,62,44,0,74,58,51,64],
[67,73,42,56,0,59,71,47],
[63,72,63,72,71,0,53,73],
[89,52,70,79,59,77,0,49],
[81,94,42,66,83,57,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,77,76,71,78,65,77],
[53,0,63,78,56,61,61,71],
[53,67,0,62,62,65,49,72],
[54,52,68,0,65,70,66,60],
[59,74,68,65,0,66,71,65],
[52,69,65,60,64,0,58,62],
[65,69,81,64,59,72,0,67],
[53,59,58,70,65,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,61,61,80,69,62,75],
[48,0,55,55,76,78,53,61],
[69,75,0,65,88,74,69,61],
[69,75,65,0,76,58,71,57],
[50,54,42,54,0,59,54,56],
[61,52,56,72,71,0,53,58],
[68,77,61,59,76,77,0,65],
[55,69,69,73,74,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,76,70,64,67,66],
[66,0,67,61,65,64,64,65],
[65,63,0,65,76,65,63,71],
[54,69,65,0,75,67,60,74],
[60,65,54,55,0,56,65,78],
[66,66,65,63,74,0,59,69],
[63,66,67,70,65,71,0,70],
[64,65,59,56,52,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,77,67,67,75,67,51],
[56,0,66,54,56,68,58,58],
[53,64,0,50,57,66,58,48],
[63,76,80,0,72,79,82,71],
[63,74,73,58,0,71,61,57],
[55,62,64,51,59,0,59,46],
[63,72,72,48,69,71,0,52],
[79,72,82,59,73,84,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,78,56,51,70,81,65],
[61,0,61,58,44,59,85,55],
[52,69,0,54,59,64,79,57],
[74,72,76,0,57,68,77,66],
[79,86,71,73,0,86,94,58],
[60,71,66,62,44,0,77,58],
[49,45,51,53,36,53,0,31],
[65,75,73,64,72,72,99,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,75,67,66,72,77,67],
[65,0,75,65,66,61,73,70],
[55,55,0,59,59,61,64,68],
[63,65,71,0,59,61,74,69],
[64,64,71,71,0,65,68,65],
[58,69,69,69,65,0,63,60],
[53,57,66,56,62,67,0,64],
[63,60,62,61,65,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,69,74,54,41,71],
[59,0,69,87,73,72,84,72],
[60,61,0,71,88,58,54,44],
[61,43,59,0,71,62,55,79],
[56,57,42,59,0,47,54,53],
[76,58,72,68,83,0,41,34],
[89,46,76,75,76,89,0,57],
[59,58,86,51,77,96,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,89,50,94,63,105,58],
[78,0,77,55,82,93,90,84],
[41,53,0,45,77,47,87,43],
[80,75,85,0,92,53,93,61],
[36,48,53,38,0,45,56,40],
[67,37,83,77,85,0,71,67],
[25,40,43,37,74,59,0,53],
[72,46,87,69,90,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,58,76,65,63,61,63],
[66,0,63,73,66,70,65,74],
[72,67,0,74,69,61,64,66],
[54,57,56,0,59,68,58,55],
[65,64,61,71,0,51,61,63],
[67,60,69,62,79,0,64,71],
[69,65,66,72,69,66,0,70],
[67,56,64,75,67,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,68,54,70,58,57],
[64,0,65,64,68,66,58,75],
[64,65,0,65,59,58,56,68],
[62,66,65,0,62,63,69,71],
[76,62,71,68,0,65,69,67],
[60,64,72,67,65,0,63,73],
[72,72,74,61,61,67,0,70],
[73,55,62,59,63,57,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,64,69,67,70,59],
[66,0,56,46,54,58,60,64],
[62,74,0,69,59,63,76,62],
[66,84,61,0,64,76,82,73],
[61,76,71,66,0,58,71,69],
[63,72,67,54,72,0,69,60],
[60,70,54,48,59,61,0,59],
[71,66,68,57,61,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,53,69,68,73,58],
[70,0,71,63,79,65,79,76],
[71,59,0,62,68,57,73,53],
[77,67,68,0,80,67,72,65],
[61,51,62,50,0,50,66,52],
[62,65,73,63,80,0,68,63],
[57,51,57,58,64,62,0,62],
[72,54,77,65,78,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,45,41,70,84,76,40],
[85,0,88,102,102,102,95,65],
[85,42,0,81,52,76,100,28],
[89,28,49,0,48,85,104,46],
[60,28,78,82,0,79,90,20],
[46,28,54,45,51,0,65,36],
[54,35,30,26,40,65,0,29],
[90,65,102,84,110,94,101,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,57,64,69,65,70],
[63,0,64,55,60,67,62,59],
[60,66,0,68,57,64,69,67],
[73,75,62,0,67,67,66,66],
[66,70,73,63,0,65,69,73],
[61,63,66,63,65,0,59,65],
[65,68,61,64,61,71,0,63],
[60,71,63,64,57,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,58,62,45,56,47],
[72,0,73,67,69,62,68,58],
[72,57,0,61,76,65,70,59],
[72,63,69,0,60,54,70,60],
[68,61,54,70,0,54,72,60],
[85,68,65,76,76,0,82,76],
[74,62,60,60,58,48,0,47],
[83,72,71,70,70,54,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,18,35,64,43,42,60],
[98,0,46,88,82,78,68,99],
[112,84,0,84,107,99,61,77],
[95,42,46,0,67,78,68,101],
[66,48,23,63,0,51,52,79],
[87,52,31,52,79,0,42,78],
[88,62,69,62,78,88,0,92],
[70,31,53,29,51,52,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,59,67,65,72,69,66],
[62,0,68,71,66,67,80,72],
[71,62,0,77,73,79,84,77],
[63,59,53,0,57,66,66,63],
[65,64,57,73,0,63,79,66],
[58,63,51,64,67,0,64,58],
[61,50,46,64,51,66,0,60],
[64,58,53,67,64,72,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,58,69,58,53,55],
[70,0,58,58,67,54,62,54],
[71,72,0,66,74,60,73,63],
[72,72,64,0,71,61,64,64],
[61,63,56,59,0,63,60,52],
[72,76,70,69,67,0,62,68],
[77,68,57,66,70,68,0,71],
[75,76,67,66,78,62,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,54,80,66,63,71,75],
[66,0,61,57,69,60,69,66],
[76,69,0,69,69,50,66,78],
[50,73,61,0,80,49,72,62],
[64,61,61,50,0,46,72,57],
[67,70,80,81,84,0,65,76],
[59,61,64,58,58,65,0,68],
[55,64,52,68,73,54,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,71,77,67,64,72,87],
[37,0,57,41,48,48,58,50],
[59,73,0,58,51,55,65,72],
[53,89,72,0,66,58,65,53],
[63,82,79,64,0,61,75,87],
[66,82,75,72,69,0,63,70],
[58,72,65,65,55,67,0,71],
[43,80,58,77,43,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,51,48,52,59,83,95],
[78,0,65,51,75,82,84,94],
[79,65,0,63,64,75,75,84],
[82,79,67,0,72,91,62,96],
[78,55,66,58,0,83,79,80],
[71,48,55,39,47,0,49,86],
[47,46,55,68,51,81,0,61],
[35,36,46,34,50,44,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,51,64,66,47,55,61],
[80,0,54,69,64,64,53,65],
[79,76,0,65,82,69,63,68],
[66,61,65,0,60,64,54,60],
[64,66,48,70,0,60,59,56],
[83,66,61,66,70,0,67,53],
[75,77,67,76,71,63,0,70],
[69,65,62,70,74,77,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,65,46,72,59,107],
[88,0,60,62,59,52,82,85],
[87,70,0,45,45,51,53,88],
[65,68,85,0,76,63,93,91],
[84,71,85,54,0,83,73,100],
[58,78,79,67,47,0,95,63],
[71,48,77,37,57,35,0,87],
[23,45,42,39,30,67,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,76,65,73,74,67,71],
[61,0,66,60,70,76,61,56],
[54,64,0,66,60,69,51,60],
[65,70,64,0,70,72,59,68],
[57,60,70,60,0,78,54,67],
[56,54,61,58,52,0,55,67],
[63,69,79,71,76,75,0,73],
[59,74,70,62,63,63,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,53,64,56,51,54,72],
[68,0,67,66,69,68,55,66],
[77,63,0,90,83,64,69,75],
[66,64,40,0,64,59,60,69],
[74,61,47,66,0,48,49,74],
[79,62,66,71,82,0,74,79],
[76,75,61,70,81,56,0,73],
[58,64,55,61,56,51,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,81,70,65,72,72,83],
[60,0,80,57,63,73,65,68],
[49,50,0,48,54,58,64,57],
[60,73,82,0,78,70,70,76],
[65,67,76,52,0,70,70,72],
[58,57,72,60,60,0,61,71],
[58,65,66,60,60,69,0,74],
[47,62,73,54,58,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,62,75,67,75,72,73],
[58,0,73,75,60,74,69,67],
[68,57,0,77,65,74,66,66],
[55,55,53,0,63,71,64,62],
[63,70,65,67,0,76,69,72],
[55,56,56,59,54,0,65,63],
[58,61,64,66,61,65,0,66],
[57,63,64,68,58,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,89,98,63,102,93,106],
[57,0,83,96,93,100,77,103],
[41,47,0,87,58,55,86,107],
[32,34,43,0,83,50,66,57],
[67,37,72,47,0,58,83,86],
[28,30,75,80,72,0,68,75],
[37,53,44,64,47,62,0,87],
[24,27,23,73,44,55,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,60,64,66,55,53,61],
[73,0,70,63,72,63,59,68],
[70,60,0,69,65,60,59,63],
[66,67,61,0,72,61,64,63],
[64,58,65,58,0,68,60,66],
[75,67,70,69,62,0,68,76],
[77,71,71,66,70,62,0,81],
[69,62,67,67,64,54,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,74,92,80,49,77,78],
[51,0,62,63,75,52,61,63],
[56,68,0,52,87,65,67,57],
[38,67,78,0,58,44,69,55],
[50,55,43,72,0,38,69,51],
[81,78,65,86,92,0,84,67],
[53,69,63,61,61,46,0,56],
[52,67,73,75,79,63,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,49,80,78,28,53,45],
[63,0,49,83,86,52,82,71],
[81,81,0,78,105,75,79,62],
[50,47,52,0,72,39,54,38],
[52,44,25,58,0,60,51,48],
[102,78,55,91,70,0,91,77],
[77,48,51,76,79,39,0,38],
[85,59,68,92,82,53,92,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,62,58,64,65,70,64],
[59,0,62,63,67,69,89,62],
[68,68,0,65,70,80,77,76],
[72,67,65,0,73,62,72,64],
[66,63,60,57,0,62,75,69],
[65,61,50,68,68,0,78,71],
[60,41,53,58,55,52,0,52],
[66,68,54,66,61,59,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,68,63,66,66,68,73],
[74,0,64,67,78,76,72,75],
[62,66,0,68,79,72,64,65],
[67,63,62,0,77,68,72,76],
[64,52,51,53,0,64,50,67],
[64,54,58,62,66,0,54,71],
[62,58,66,58,80,76,0,64],
[57,55,65,54,63,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,68,34,72,64,50,83],
[53,0,74,55,92,41,73,99],
[62,56,0,47,56,52,70,87],
[96,75,83,0,77,67,62,100],
[58,38,74,53,0,52,59,90],
[66,89,78,63,78,0,64,94],
[80,57,60,68,71,66,0,87],
[47,31,43,30,40,36,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,63,73,78,76,69,80],
[60,0,62,61,61,67,51,65],
[67,68,0,77,72,83,64,77],
[57,69,53,0,69,64,51,70],
[52,69,58,61,0,76,61,64],
[54,63,47,66,54,0,54,66],
[61,79,66,79,69,76,0,82],
[50,65,53,60,66,64,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,72,45,10,47,47,15],
[107,0,102,72,44,59,90,80],
[58,28,0,58,43,32,84,41],
[85,58,72,0,58,64,77,33],
[120,86,87,72,0,75,75,36],
[83,71,98,66,55,0,84,53],
[83,40,46,53,55,46,0,35],
[115,50,89,97,94,77,95,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,48,62,86,69,58,44],
[57,0,38,55,69,50,65,49],
[82,92,0,56,81,64,80,69],
[68,75,74,0,81,63,72,45],
[44,61,49,49,0,58,47,51],
[61,80,66,67,72,0,64,65],
[72,65,50,58,83,66,0,56],
[86,81,61,85,79,65,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,65,72,66,83,76,57],
[55,0,60,66,66,67,74,72],
[65,70,0,58,74,54,67,57],
[58,64,72,0,71,71,62,62],
[64,64,56,59,0,62,67,64],
[47,63,76,59,68,0,72,79],
[54,56,63,68,63,58,0,77],
[73,58,73,68,66,51,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,102,57,87,72,80,89],
[41,0,76,48,85,46,53,70],
[28,54,0,32,85,30,57,51],
[73,82,98,0,86,62,57,84],
[43,45,45,44,0,27,25,37],
[58,84,100,68,103,0,87,70],
[50,77,73,73,105,43,0,85],
[41,60,79,46,93,60,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,73,65,75,68,67],
[59,0,61,65,57,70,54,60],
[60,69,0,66,63,72,64,59],
[57,65,64,0,57,70,57,63],
[65,73,67,73,0,75,61,72],
[55,60,58,60,55,0,57,58],
[62,76,66,73,69,73,0,69],
[63,70,71,67,58,72,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,79,80,73,74,78,64],
[53,0,64,76,57,66,76,54],
[51,66,0,68,61,66,72,63],
[50,54,62,0,72,62,70,64],
[57,73,69,58,0,64,71,73],
[56,64,64,68,66,0,71,62],
[52,54,58,60,59,59,0,47],
[66,76,67,66,57,68,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,52,53,76,59,53,68],
[57,0,57,53,63,44,58,71],
[78,73,0,61,73,65,69,63],
[77,77,69,0,70,65,61,70],
[54,67,57,60,0,60,53,68],
[71,86,65,65,70,0,62,69],
[77,72,61,69,77,68,0,83],
[62,59,67,60,62,61,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,57,59,66,64,67],
[63,0,65,60,54,59,62,58],
[65,65,0,60,58,59,67,63],
[73,70,70,0,61,64,69,69],
[71,76,72,69,0,62,71,70],
[64,71,71,66,68,0,67,63],
[66,68,63,61,59,63,0,67],
[63,72,67,61,60,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,74,57,78,80,65,68],
[60,0,68,60,67,57,65,48],
[56,62,0,60,68,66,64,61],
[73,70,70,0,66,65,68,57],
[52,63,62,64,0,72,68,55],
[50,73,64,65,58,0,69,62],
[65,65,66,62,62,61,0,54],
[62,82,69,73,75,68,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,71,66,64,68,49,58],
[76,0,61,68,67,66,71,70],
[59,69,0,61,69,70,53,74],
[64,62,69,0,70,78,58,71],
[66,63,61,60,0,70,72,68],
[62,64,60,52,60,0,50,59],
[81,59,77,72,58,80,0,57],
[72,60,56,59,62,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,64,53,54,63,64,48],
[79,0,71,65,60,71,65,60],
[66,59,0,63,68,64,68,61],
[77,65,67,0,69,70,68,58],
[76,70,62,61,0,67,73,65],
[67,59,66,60,63,0,65,56],
[66,65,62,62,57,65,0,56],
[82,70,69,72,65,74,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,74,70,56,59,62,63],
[76,0,72,69,61,66,54,55],
[56,58,0,57,37,40,42,42],
[60,61,73,0,65,61,63,52],
[74,69,93,65,0,66,59,77],
[71,64,90,69,64,0,66,61],
[68,76,88,67,71,64,0,70],
[67,75,88,78,53,69,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,75,70,73,72,88,76],
[67,0,69,64,67,74,76,60],
[55,61,0,59,68,70,74,48],
[60,66,71,0,70,77,79,59],
[57,63,62,60,0,71,85,62],
[58,56,60,53,59,0,71,63],
[42,54,56,51,45,59,0,55],
[54,70,82,71,68,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,56,55,61,56,58],
[73,0,70,68,65,68,73,68],
[62,60,0,52,52,63,61,63],
[74,62,78,0,67,61,71,73],
[75,65,78,63,0,64,70,67],
[69,62,67,69,66,0,64,75],
[74,57,69,59,60,66,0,64],
[72,62,67,57,63,55,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,69,60,61,61,69],
[70,0,64,73,69,64,78,77],
[61,66,0,61,63,58,73,72],
[61,57,69,0,63,61,57,68],
[70,61,67,67,0,65,77,76],
[69,66,72,69,65,0,68,64],
[69,52,57,73,53,62,0,71],
[61,53,58,62,54,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,83,77,71,61,61],
[64,0,58,71,83,60,62,58],
[65,72,0,79,73,65,57,67],
[47,59,51,0,62,52,50,50],
[53,47,57,68,0,50,57,52],
[59,70,65,78,80,0,69,62],
[69,68,73,80,73,61,0,73],
[69,72,63,80,78,68,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,51,64,60,49,57,60],
[82,0,67,73,83,83,63,75],
[79,63,0,86,91,72,77,64],
[66,57,44,0,88,66,43,79],
[70,47,39,42,0,40,45,65],
[81,47,58,64,90,0,48,77],
[73,67,53,87,85,82,0,76],
[70,55,66,51,65,53,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,62,58,54,34,69,69],
[87,0,63,71,56,65,87,84],
[68,67,0,69,62,49,68,65],
[72,59,61,0,56,44,70,65],
[76,74,68,74,0,56,81,56],
[96,65,81,86,74,0,93,88],
[61,43,62,60,49,37,0,58],
[61,46,65,65,74,42,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,51,54,71,91,38,66],
[51,0,51,30,51,57,51,59],
[79,79,0,66,83,85,60,79],
[76,100,64,0,110,96,29,67],
[59,79,47,20,0,79,24,56],
[39,73,45,34,51,0,34,43],
[92,79,70,101,106,96,0,62],
[64,71,51,63,74,87,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,107,107,129,73,54,119,63],
[23,0,54,22,22,22,55,22],
[23,76,0,98,41,22,88,32],
[1,108,32,0,41,54,64,0],
[57,108,89,89,0,89,120,67],
[76,108,108,76,41,0,108,42],
[11,75,42,66,10,22,0,0],
[67,108,98,130,63,88,130,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,62,56,57,64,54,60],
[82,0,61,70,67,65,67,62],
[68,69,0,61,56,70,63,68],
[74,60,69,0,68,60,73,69],
[73,63,74,62,0,78,61,71],
[66,65,60,70,52,0,69,60],
[76,63,67,57,69,61,0,65],
[70,68,62,61,59,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,53,95,78,57,69,61],
[51,0,50,60,65,56,69,72],
[77,80,0,62,75,56,71,51],
[35,70,68,0,57,43,58,59],
[52,65,55,73,0,51,67,61],
[73,74,74,87,79,0,57,66],
[61,61,59,72,63,73,0,49],
[69,58,79,71,69,64,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,64,68,65,72,62],
[62,0,64,63,60,63,69,68],
[66,66,0,62,66,64,70,62],
[66,67,68,0,65,64,70,63],
[62,70,64,65,0,64,76,63],
[65,67,66,66,66,0,73,65],
[58,61,60,60,54,57,0,61],
[68,62,68,67,67,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,74,65,70,71,74,70],
[51,0,50,58,61,66,55,61],
[56,80,0,64,74,72,72,67],
[65,72,66,0,70,69,69,65],
[60,69,56,60,0,71,66,57],
[59,64,58,61,59,0,60,64],
[56,75,58,61,64,70,0,63],
[60,69,63,65,73,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,77,54,66,57,67,63],
[68,0,85,66,72,66,77,58],
[53,45,0,48,58,55,62,47],
[76,64,82,0,74,63,77,65],
[64,58,72,56,0,59,75,66],
[73,64,75,67,71,0,72,66],
[63,53,68,53,55,58,0,56],
[67,72,83,65,64,64,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,80,57,65,78,63,87],
[69,0,60,59,61,64,68,78],
[50,70,0,65,70,83,73,83],
[73,71,65,0,75,80,67,75],
[65,69,60,55,0,59,62,78],
[52,66,47,50,71,0,61,68],
[67,62,57,63,68,69,0,69],
[43,52,47,55,52,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,90,72,76,76,51,81],
[42,0,55,41,54,40,47,54],
[40,75,0,65,75,80,54,82],
[58,89,65,0,59,81,80,99],
[54,76,55,71,0,46,70,48],
[54,90,50,49,84,0,61,93],
[79,83,76,50,60,69,0,88],
[49,76,48,31,82,37,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,65,60,58,63,72],
[63,0,45,59,61,62,53,63],
[70,85,0,66,71,65,63,75],
[65,71,64,0,63,71,59,66],
[70,69,59,67,0,63,66,68],
[72,68,65,59,67,0,62,67],
[67,77,67,71,64,68,0,75],
[58,67,55,64,62,63,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,75,65,66,54,52,67],
[63,0,58,67,71,59,57,53],
[55,72,0,70,64,61,60,56],
[65,63,60,0,66,60,59,58],
[64,59,66,64,0,57,57,56],
[76,71,69,70,73,0,60,59],
[78,73,70,71,73,70,0,63],
[63,77,74,72,74,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,73,76,68,75,61,74],
[66,0,67,80,74,80,58,70],
[57,63,0,69,67,70,65,69],
[54,50,61,0,57,67,62,72],
[62,56,63,73,0,67,57,66],
[55,50,60,63,63,0,45,62],
[69,72,65,68,73,85,0,72],
[56,60,61,58,64,68,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,62,63,72,69,74],
[64,0,67,67,52,68,48,62],
[59,63,0,72,58,73,67,55],
[68,63,58,0,70,78,56,74],
[67,78,72,60,0,78,71,69],
[58,62,57,52,52,0,58,75],
[61,82,63,74,59,72,0,71],
[56,68,75,56,61,55,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,43,46,44,40,52,55],
[80,0,55,71,70,71,70,61],
[87,75,0,66,61,45,83,79],
[84,59,64,0,66,67,54,67],
[86,60,69,64,0,62,78,69],
[90,59,85,63,68,0,64,72],
[78,60,47,76,52,66,0,48],
[75,69,51,63,61,58,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,79,84,69,79,74,62],
[50,0,79,75,60,77,67,64],
[51,51,0,79,58,51,64,55],
[46,55,51,0,54,62,47,55],
[61,70,72,76,0,81,64,58],
[51,53,79,68,49,0,47,58],
[56,63,66,83,66,83,0,71],
[68,66,75,75,72,72,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,79,57,80,60,63,84],
[48,0,74,67,70,67,54,77],
[51,56,0,57,65,44,69,73],
[73,63,73,0,84,73,75,73],
[50,60,65,46,0,50,56,76],
[70,63,86,57,80,0,82,82],
[67,76,61,55,74,48,0,63],
[46,53,57,57,54,48,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,51,63,57,64,62,61],
[71,0,63,61,67,69,65,59],
[79,67,0,65,76,67,71,68],
[67,69,65,0,55,76,72,70],
[73,63,54,75,0,62,61,68],
[66,61,63,54,68,0,54,67],
[68,65,59,58,69,76,0,61],
[69,71,62,60,62,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,60,67,64,70,79],
[64,0,71,69,72,64,65,78],
[58,59,0,62,69,61,62,72],
[70,61,68,0,69,69,76,75],
[63,58,61,61,0,62,65,71],
[66,66,69,61,68,0,67,74],
[60,65,68,54,65,63,0,74],
[51,52,58,55,59,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,43,43,72,47,52],
[71,0,64,43,52,62,58,55],
[66,66,0,62,51,63,47,50],
[87,87,68,0,57,72,65,61],
[87,78,79,73,0,85,64,72],
[58,68,67,58,45,0,47,47],
[83,72,83,65,66,83,0,73],
[78,75,80,69,58,83,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,43,37,45,55,57,63],
[69,0,70,59,77,69,64,53],
[87,60,0,70,70,79,68,80],
[93,71,60,0,85,64,63,74],
[85,53,60,45,0,53,61,75],
[75,61,51,66,77,0,65,76],
[73,66,62,67,69,65,0,58],
[67,77,50,56,55,54,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,100,47,64,81,48,69],
[77,0,101,50,79,97,57,99],
[30,29,0,48,34,17,62,60],
[83,80,82,0,57,64,42,66],
[66,51,96,73,0,60,55,61],
[49,33,113,66,70,0,68,74],
[82,73,68,88,75,62,0,74],
[61,31,70,64,69,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,67,78,67,67,65,70],
[83,0,70,76,64,74,73,84],
[63,60,0,81,56,71,58,75],
[52,54,49,0,63,64,50,70],
[63,66,74,67,0,73,71,72],
[63,56,59,66,57,0,61,76],
[65,57,72,80,59,69,0,70],
[60,46,55,60,58,54,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,61,61,60,65,75,47],
[46,0,42,44,54,58,72,56],
[69,88,0,65,61,65,87,67],
[69,86,65,0,55,67,75,63],
[70,76,69,75,0,57,78,72],
[65,72,65,63,73,0,81,76],
[55,58,43,55,52,49,0,63],
[83,74,63,67,58,54,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,54,67,68,71,74,70],
[70,0,58,77,78,71,68,74],
[76,72,0,71,74,72,65,76],
[63,53,59,0,62,59,52,67],
[62,52,56,68,0,65,63,67],
[59,59,58,71,65,0,59,68],
[56,62,65,78,67,71,0,76],
[60,56,54,63,63,62,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,69,74,65,80,81,59],
[58,0,70,55,52,69,55,67],
[61,60,0,53,61,67,66,59],
[56,75,77,0,68,80,68,65],
[65,78,69,62,0,62,73,88],
[50,61,63,50,68,0,60,47],
[49,75,64,62,57,70,0,58],
[71,63,71,65,42,83,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,63,66,77,67,69],
[65,0,61,66,56,66,57,56],
[64,69,0,64,74,71,64,66],
[67,64,66,0,70,71,62,69],
[64,74,56,60,0,77,65,64],
[53,64,59,59,53,0,52,64],
[63,73,66,68,65,78,0,82],
[61,74,64,61,66,66,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,79,77,76,64,76],
[57,0,59,65,61,66,61,65],
[64,71,0,73,69,75,60,79],
[51,65,57,0,66,62,58,65],
[53,69,61,64,0,66,70,72],
[54,64,55,68,64,0,64,75],
[66,69,70,72,60,66,0,76],
[54,65,51,65,58,55,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,62,64,62,64,58,70],
[80,0,69,61,67,79,72,70],
[68,61,0,65,62,70,66,70],
[66,69,65,0,73,80,67,90],
[68,63,68,57,0,80,71,71],
[66,51,60,50,50,0,55,71],
[72,58,64,63,59,75,0,65],
[60,60,60,40,59,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,41,54,77,62,62,72],
[60,0,65,63,79,70,59,72],
[89,65,0,74,71,73,68,87],
[76,67,56,0,70,78,61,66],
[53,51,59,60,0,62,66,65],
[68,60,57,52,68,0,56,65],
[68,71,62,69,64,74,0,79],
[58,58,43,64,65,65,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,71,61,63,62,61,79],
[58,0,70,62,62,61,64,65],
[59,60,0,67,64,54,60,66],
[69,68,63,0,66,66,68,71],
[67,68,66,64,0,66,71,66],
[68,69,76,64,64,0,69,70],
[69,66,70,62,59,61,0,79],
[51,65,64,59,64,60,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,59,68,61,73,81],
[67,0,59,54,58,60,67,71],
[61,71,0,61,57,63,68,79],
[71,76,69,0,70,58,67,76],
[62,72,73,60,0,67,68,73],
[69,70,67,72,63,0,66,67],
[57,63,62,63,62,64,0,72],
[49,59,51,54,57,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,75,62,75,52,53,63],
[79,0,81,78,72,65,60,81],
[55,49,0,46,70,58,57,55],
[68,52,84,0,64,57,64,68],
[55,58,60,66,0,66,62,71],
[78,65,72,73,64,0,74,71],
[77,70,73,66,68,56,0,77],
[67,49,75,62,59,59,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,80,78,69,69,75,58],
[58,0,71,74,64,65,65,60],
[50,59,0,66,70,60,64,61],
[52,56,64,0,72,58,61,51],
[61,66,60,58,0,65,59,51],
[61,65,70,72,65,0,61,54],
[55,65,66,69,71,69,0,68],
[72,70,69,79,79,76,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,85,80,68,63,54,73],
[65,0,63,52,37,63,42,48],
[45,67,0,37,23,56,30,41],
[50,78,93,0,52,93,70,58],
[62,93,107,78,0,112,73,93],
[67,67,74,37,18,0,35,49],
[76,88,100,60,57,95,0,78],
[57,82,89,72,37,81,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,106,55,88,76,83,90,93],
[24,0,58,59,30,67,65,72],
[75,72,0,71,77,75,63,81],
[42,71,59,0,61,97,47,74],
[54,100,53,69,0,71,62,62],
[47,63,55,33,59,0,69,56],
[40,65,67,83,68,61,0,72],
[37,58,49,56,68,74,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,72,67,60,73,69,65],
[63,0,74,69,66,73,65,60],
[58,56,0,57,58,66,55,58],
[63,61,73,0,61,73,68,64],
[70,64,72,69,0,78,68,63],
[57,57,64,57,52,0,54,56],
[61,65,75,62,62,76,0,59],
[65,70,72,66,67,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,64,59,83,73,73,60],
[46,0,36,51,61,57,62,57],
[66,94,0,75,69,54,70,76],
[71,79,55,0,74,82,55,73],
[47,69,61,56,0,62,64,44],
[57,73,76,48,68,0,54,57],
[57,68,60,75,66,76,0,57],
[70,73,54,57,86,73,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,60,68,71,63,62],
[66,0,68,63,64,69,55,70],
[67,62,0,66,63,68,67,73],
[70,67,64,0,62,67,61,67],
[62,66,67,68,0,65,63,64],
[59,61,62,63,65,0,59,62],
[67,75,63,69,67,71,0,74],
[68,60,57,63,66,68,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,57,74,62,59,66,53],
[68,0,68,77,76,58,56,61],
[73,62,0,75,68,61,62,59],
[56,53,55,0,49,57,53,72],
[68,54,62,81,0,63,53,58],
[71,72,69,73,67,0,65,68],
[64,74,68,77,77,65,0,69],
[77,69,71,58,72,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,64,63,78,73,79,67],
[56,0,62,65,68,61,76,57],
[66,68,0,65,63,75,74,63],
[67,65,65,0,73,66,80,65],
[52,62,67,57,0,56,70,65],
[57,69,55,64,74,0,70,60],
[51,54,56,50,60,60,0,55],
[63,73,67,65,65,70,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,49,60,69,38,62,59],
[67,0,57,59,64,58,53,45],
[81,73,0,63,81,88,59,65],
[70,71,67,0,71,71,58,58],
[61,66,49,59,0,45,46,53],
[92,72,42,59,85,0,70,46],
[68,77,71,72,84,60,0,60],
[71,85,65,72,77,84,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,70,64,63,69,65,65],
[53,0,82,72,68,67,67,59],
[60,48,0,64,57,61,59,56],
[66,58,66,0,66,68,59,55],
[67,62,73,64,0,63,62,59],
[61,63,69,62,67,0,55,55],
[65,63,71,71,68,75,0,67],
[65,71,74,75,71,75,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,59,76,22,51,74],
[70,0,49,75,52,42,69,65],
[61,81,0,44,71,17,51,69],
[71,55,86,0,72,93,80,61],
[54,78,59,58,0,72,59,59],
[108,88,113,37,58,0,98,88],
[79,61,79,50,71,32,0,84],
[56,65,61,69,71,42,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,82,54,45,58,60,65],
[68,0,75,45,60,53,48,51],
[48,55,0,59,53,49,54,52],
[76,85,71,0,63,71,56,79],
[85,70,77,67,0,75,62,61],
[72,77,81,59,55,0,76,70],
[70,82,76,74,68,54,0,64],
[65,79,78,51,69,60,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,58,54,54,63,54,49],
[101,0,86,62,62,89,95,43],
[72,44,0,78,45,61,71,66],
[76,68,52,0,41,67,51,49],
[76,68,85,89,0,52,81,77],
[67,41,69,63,78,0,88,51],
[76,35,59,79,49,42,0,42],
[81,87,64,81,53,79,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,67,74,74,64,66,76],
[51,0,62,59,56,58,56,55],
[63,68,0,68,67,65,76,66],
[56,71,62,0,62,55,69,54],
[56,74,63,68,0,61,72,61],
[66,72,65,75,69,0,71,69],
[64,74,54,61,58,59,0,68],
[54,75,64,76,69,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,70,61,71,70,68,71],
[58,0,67,70,65,72,60,70],
[60,63,0,68,71,63,62,70],
[69,60,62,0,69,70,68,70],
[59,65,59,61,0,65,63,66],
[60,58,67,60,65,0,54,62],
[62,70,68,62,67,76,0,77],
[59,60,60,60,64,68,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,57,59,65,64,69,60],
[58,0,65,67,64,60,57,55],
[73,65,0,67,73,66,53,69],
[71,63,63,0,79,70,60,64],
[65,66,57,51,0,50,53,66],
[66,70,64,60,80,0,46,66],
[61,73,77,70,77,84,0,70],
[70,75,61,66,64,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,71,75,66,59,65,65],
[63,0,68,74,69,58,65,76],
[59,62,0,65,62,58,57,66],
[55,56,65,0,53,55,55,57],
[64,61,68,77,0,65,61,62],
[71,72,72,75,65,0,74,68],
[65,65,73,75,69,56,0,67],
[65,54,64,73,68,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,39,44,68,61,63,70],
[81,0,44,94,79,74,75,68],
[91,86,0,58,90,97,84,90],
[86,36,72,0,70,81,67,67],
[62,51,40,60,0,72,54,77],
[69,56,33,49,58,0,57,31],
[67,55,46,63,76,73,0,57],
[60,62,40,63,53,99,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,64,64,69,61,55,61],
[74,0,62,73,84,73,73,76],
[66,68,0,71,74,69,67,59],
[66,57,59,0,65,64,62,63],
[61,46,56,65,0,59,60,58],
[69,57,61,66,71,0,61,67],
[75,57,63,68,70,69,0,75],
[69,54,71,67,72,63,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,98,89,82,66,64,65],
[49,0,81,93,88,61,70,55],
[32,49,0,79,60,56,31,49],
[41,37,51,0,66,42,43,73],
[48,42,70,64,0,46,64,61],
[64,69,74,88,84,0,71,86],
[66,60,99,87,66,59,0,56],
[65,75,81,57,69,44,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,64,70,65,67,69,69],
[81,0,79,66,73,51,71,60],
[66,51,0,62,49,58,59,61],
[60,64,68,0,61,70,71,53],
[65,57,81,69,0,60,68,59],
[63,79,72,60,70,0,64,68],
[61,59,71,59,62,66,0,58],
[61,70,69,77,71,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,72,71,68,67,64,73],
[54,0,73,64,65,56,55,68],
[58,57,0,61,57,56,55,52],
[59,66,69,0,59,59,64,63],
[62,65,73,71,0,71,72,70],
[63,74,74,71,59,0,62,76],
[66,75,75,66,58,68,0,72],
[57,62,78,67,60,54,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,73,58,65,61,61],
[68,0,71,73,65,65,60,63],
[60,59,0,73,55,62,58,67],
[57,57,57,0,47,50,59,57],
[72,65,75,83,0,62,82,74],
[65,65,68,80,68,0,71,66],
[69,70,72,71,48,59,0,66],
[69,67,63,73,56,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,93,81,85,65,42,83],
[52,0,68,68,50,45,41,70],
[37,62,0,55,50,37,25,57],
[49,62,75,0,67,55,32,51],
[45,80,80,63,0,56,27,77],
[65,85,93,75,74,0,75,78],
[88,89,105,98,103,55,0,76],
[47,60,73,79,53,52,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,58,60,65,65,70,73],
[60,0,56,57,59,58,63,65],
[72,74,0,69,69,61,64,69],
[70,73,61,0,65,61,69,71],
[65,71,61,65,0,58,66,74],
[65,72,69,69,72,0,64,74],
[60,67,66,61,64,66,0,63],
[57,65,61,59,56,56,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,59,89,64,73,72],
[65,0,75,63,80,74,63,71],
[59,55,0,59,64,71,48,57],
[71,67,71,0,91,68,65,74],
[41,50,66,39,0,64,43,58],
[66,56,59,62,66,0,63,46],
[57,67,82,65,87,67,0,64],
[58,59,73,56,72,84,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,76,94,58,86,94,63],
[59,0,67,81,52,71,82,67],
[54,63,0,93,64,76,67,50],
[36,49,37,0,47,67,69,60],
[72,78,66,83,0,79,87,60],
[44,59,54,63,51,0,66,50],
[36,48,63,61,43,64,0,53],
[67,63,80,70,70,80,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,75,70,73,91,78,62],
[46,0,67,54,69,51,36,49],
[55,63,0,87,77,62,72,63],
[60,76,43,0,76,65,60,47],
[57,61,53,54,0,69,42,52],
[39,79,68,65,61,0,54,48],
[52,94,58,70,88,76,0,66],
[68,81,67,83,78,82,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,82,78,78,42,58],
[61,0,66,94,91,48,81,49],
[58,64,0,72,51,76,71,71],
[48,36,58,0,65,48,35,49],
[52,39,79,65,0,32,62,49],
[52,82,54,82,98,0,85,49],
[88,49,59,95,68,45,0,79],
[72,81,59,81,81,81,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,61,68,61,58,63,67],
[71,0,64,72,67,69,62,67],
[69,66,0,66,74,60,67,66],
[62,58,64,0,73,58,56,67],
[69,63,56,57,0,62,55,59],
[72,61,70,72,68,0,65,56],
[67,68,63,74,75,65,0,68],
[63,63,64,63,71,74,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,79,70,55,60,72,58],
[67,0,75,73,65,88,70,54],
[51,55,0,49,59,55,54,60],
[60,57,81,0,58,77,64,51],
[75,65,71,72,0,78,77,69],
[70,42,75,53,52,0,56,48],
[58,60,76,66,53,74,0,56],
[72,76,70,79,61,82,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,57,59,62,54,72,58],
[68,0,64,59,69,63,66,62],
[73,66,0,64,65,66,70,68],
[71,71,66,0,70,61,70,68],
[68,61,65,60,0,62,71,59],
[76,67,64,69,68,0,73,66],
[58,64,60,60,59,57,0,54],
[72,68,62,62,71,64,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,69,29,45,56,62,68],
[84,0,56,66,83,75,89,95],
[61,74,0,64,52,74,69,71],
[101,64,66,0,74,73,79,67],
[85,47,78,56,0,46,79,61],
[74,55,56,57,84,0,79,46],
[68,41,61,51,51,51,0,48],
[62,35,59,63,69,84,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,52,50,44,62,60,67],
[84,0,66,54,77,80,75,75],
[78,64,0,67,68,72,71,77],
[80,76,63,0,87,79,78,80],
[86,53,62,43,0,72,58,68],
[68,50,58,51,58,0,53,67],
[70,55,59,52,72,77,0,61],
[63,55,53,50,62,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,70,70,69,68,72],
[66,0,56,64,57,53,67,64],
[68,74,0,72,61,73,77,71],
[60,66,58,0,53,66,65,62],
[60,73,69,77,0,63,76,68],
[61,77,57,64,67,0,83,64],
[62,63,53,65,54,47,0,73],
[58,66,59,68,62,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,60,72,68,76,77],
[64,0,80,66,72,61,71,67],
[58,50,0,62,69,51,68,61],
[70,64,68,0,63,61,68,61],
[58,58,61,67,0,56,66,58],
[62,69,79,69,74,0,68,79],
[54,59,62,62,64,62,0,67],
[53,63,69,69,72,51,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,53,39,60,48,63,50],
[61,0,61,49,46,47,63,33],
[77,69,0,45,64,72,70,46],
[91,81,85,0,71,65,73,70],
[70,84,66,59,0,67,65,44],
[82,83,58,65,63,0,70,49],
[67,67,60,57,65,60,0,45],
[80,97,84,60,86,81,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,71,78,55,69,58,61],
[54,0,52,60,53,58,53,52],
[59,78,0,71,68,77,71,67],
[52,70,59,0,59,63,52,59],
[75,77,62,71,0,80,69,67],
[61,72,53,67,50,0,57,56],
[72,77,59,78,61,73,0,68],
[69,78,63,71,63,74,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,61,56,78,59,65,64],
[56,0,60,56,65,52,46,53],
[69,70,0,60,82,66,63,57],
[74,74,70,0,78,66,66,65],
[52,65,48,52,0,52,44,53],
[71,78,64,64,78,0,53,62],
[65,84,67,64,86,77,0,69],
[66,77,73,65,77,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,60,55,57,57,50,67],
[77,0,62,71,65,67,59,79],
[70,68,0,71,65,64,62,82],
[75,59,59,0,62,69,54,61],
[73,65,65,68,0,72,71,79],
[73,63,66,61,58,0,63,66],
[80,71,68,76,59,67,0,66],
[63,51,48,69,51,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,75,73,70,79,76,60],
[64,0,60,65,65,77,66,62],
[55,70,0,63,58,70,73,65],
[57,65,67,0,60,72,62,59],
[60,65,72,70,0,70,70,65],
[51,53,60,58,60,0,69,56],
[54,64,57,68,60,61,0,64],
[70,68,65,71,65,74,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,75,67,61,72,67],
[65,0,65,70,67,64,57,54],
[58,65,0,77,63,58,66,64],
[55,60,53,0,57,58,61,58],
[63,63,67,73,0,64,61,65],
[69,66,72,72,66,0,66,60],
[58,73,64,69,69,64,0,60],
[63,76,66,72,65,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,55,66,76,70,68,63],
[64,0,46,58,62,58,60,53],
[75,84,0,76,69,64,66,62],
[64,72,54,0,71,56,61,66],
[54,68,61,59,0,52,74,72],
[60,72,66,74,78,0,67,74],
[62,70,64,69,56,63,0,68],
[67,77,68,64,58,56,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,53,63,70,68,65],
[67,0,64,70,79,72,79,75],
[68,66,0,71,66,62,75,68],
[77,60,59,0,66,60,63,51],
[67,51,64,64,0,67,73,69],
[60,58,68,70,63,0,82,65],
[62,51,55,67,57,48,0,53],
[65,55,62,79,61,65,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,63,62,67,69,79,65],
[50,0,60,57,56,60,74,56],
[67,70,0,74,68,73,79,64],
[68,73,56,0,59,72,79,62],
[63,74,62,71,0,70,82,67],
[61,70,57,58,60,0,77,65],
[51,56,51,51,48,53,0,55],
[65,74,66,68,63,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,63,58,60,65,62,74],
[55,0,56,59,50,60,59,58],
[67,74,0,62,64,67,65,72],
[72,71,68,0,64,67,72,66],
[70,80,66,66,0,74,59,59],
[65,70,63,63,56,0,60,74],
[68,71,65,58,71,70,0,63],
[56,72,58,64,71,56,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,61,74,73,55,55],
[70,0,75,64,70,65,67,65],
[64,55,0,57,65,78,60,63],
[69,66,73,0,76,82,62,68],
[56,60,65,54,0,62,53,59],
[57,65,52,48,68,0,50,59],
[75,63,70,68,77,80,0,62],
[75,65,67,62,71,71,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,83,76,81,68,68,60],
[63,0,64,66,73,65,50,67],
[47,66,0,64,76,61,66,65],
[54,64,66,0,61,48,58,52],
[49,57,54,69,0,54,48,53],
[62,65,69,82,76,0,56,74],
[62,80,64,72,82,74,0,64],
[70,63,65,78,77,56,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,50,64,51,59,54,55],
[68,0,61,61,58,65,66,55],
[80,69,0,74,69,70,70,65],
[66,69,56,0,58,61,62,56],
[79,72,61,72,0,60,65,65],
[71,65,60,69,70,0,61,71],
[76,64,60,68,65,69,0,70],
[75,75,65,74,65,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,63,65,65,62,67,63],
[71,0,68,67,66,62,67,66],
[67,62,0,61,59,60,63,66],
[65,63,69,0,61,63,65,64],
[65,64,71,69,0,61,61,61],
[68,68,70,67,69,0,67,63],
[63,63,67,65,69,63,0,66],
[67,64,64,66,69,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,56,65,54,67,71],
[66,0,75,75,71,65,62,69],
[60,55,0,59,63,45,67,64],
[74,55,71,0,69,59,63,65],
[65,59,67,61,0,56,61,76],
[76,65,85,71,74,0,69,76],
[63,68,63,67,69,61,0,61],
[59,61,66,65,54,54,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,60,67,69,70,61,63],
[73,0,57,66,69,64,66,54],
[70,73,0,66,65,76,74,56],
[63,64,64,0,62,75,70,61],
[61,61,65,68,0,75,66,71],
[60,66,54,55,55,0,61,55],
[69,64,56,60,64,69,0,59],
[67,76,74,69,59,75,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,66,56,52,61,52,59],
[75,0,70,79,74,70,62,70],
[64,60,0,66,67,59,50,59],
[74,51,64,0,57,54,61,47],
[78,56,63,73,0,53,56,64],
[69,60,71,76,77,0,66,72],
[78,68,80,69,74,64,0,63],
[71,60,71,83,66,58,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,68,59,59,74,54],
[64,0,67,64,71,69,75,57],
[61,63,0,69,62,63,60,48],
[62,66,61,0,61,60,64,46],
[71,59,68,69,0,60,69,55],
[71,61,67,70,70,0,64,66],
[56,55,70,66,61,66,0,52],
[76,73,82,84,75,64,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,64,66,60,67,61,66],
[75,0,63,68,71,69,67,70],
[66,67,0,69,64,64,71,69],
[64,62,61,0,70,66,65,66],
[70,59,66,60,0,69,66,66],
[63,61,66,64,61,0,70,64],
[69,63,59,65,64,60,0,66],
[64,60,61,64,64,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,64,83,69,67,66,81],
[39,0,54,51,50,42,33,58],
[66,76,0,71,64,68,66,76],
[47,79,59,0,67,52,41,58],
[61,80,66,63,0,69,47,68],
[63,88,62,78,61,0,49,82],
[64,97,64,89,83,81,0,76],
[49,72,54,72,62,48,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,57,63,57,53,54,49],
[82,0,76,64,69,62,74,59],
[73,54,0,71,59,60,68,66],
[67,66,59,0,60,67,66,73],
[73,61,71,70,0,70,72,64],
[77,68,70,63,60,0,74,63],
[76,56,62,64,58,56,0,67],
[81,71,64,57,66,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,78,86,74,82,59,97],
[113,0,101,93,98,88,58,89],
[52,29,0,48,91,56,39,90],
[44,37,82,0,103,47,70,69],
[56,32,39,27,0,43,20,50],
[48,42,74,83,87,0,55,74],
[71,72,91,60,110,75,0,60],
[33,41,40,61,80,56,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,52,84,93,79,88],
[67,0,68,54,91,98,91,57],
[66,62,0,74,51,87,119,55],
[78,76,56,0,63,78,53,54],
[46,39,79,67,0,67,78,59],
[37,32,43,52,63,0,58,48],
[51,39,11,77,52,72,0,47],
[42,73,75,76,71,82,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,68,60,68,66,69],
[61,0,55,63,57,60,63,65],
[65,75,0,72,71,78,67,73],
[62,67,58,0,64,60,62,62],
[70,73,59,66,0,65,63,61],
[62,70,52,70,65,0,63,63],
[64,67,63,68,67,67,0,68],
[61,65,57,68,69,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,79,62,71,62,60,70],
[61,0,62,52,56,58,61,60],
[51,68,0,57,58,59,62,63],
[68,78,73,0,63,66,61,74],
[59,74,72,67,0,61,69,63],
[68,72,71,64,69,0,70,68],
[70,69,68,69,61,60,0,63],
[60,70,67,56,67,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,66,67,62,54,55],
[68,0,66,61,69,60,65,60],
[62,64,0,60,71,68,62,65],
[64,69,70,0,66,65,66,66],
[63,61,59,64,0,55,53,59],
[68,70,62,65,75,0,62,65],
[76,65,68,64,77,68,0,65],
[75,70,65,64,71,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,58,59,60,66,69],
[68,0,74,65,70,65,67,68],
[69,56,0,54,61,67,57,66],
[72,65,76,0,70,66,65,78],
[71,60,69,60,0,64,71,68],
[70,65,63,64,66,0,62,65],
[64,63,73,65,59,68,0,69],
[61,62,64,52,62,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,59,61,41,63,61,72],
[74,0,74,62,60,63,63,65],
[71,56,0,63,53,66,64,70],
[69,68,67,0,66,69,64,72],
[89,70,77,64,0,80,74,79],
[67,67,64,61,50,0,61,65],
[69,67,66,66,56,69,0,76],
[58,65,60,58,51,65,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,70,69,63,59,63,56],
[77,0,67,71,62,66,78,62],
[60,63,0,63,67,59,70,65],
[61,59,67,0,70,70,69,53],
[67,68,63,60,0,60,68,56],
[71,64,71,60,70,0,65,60],
[67,52,60,61,62,65,0,61],
[74,68,65,77,74,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,73,69,66,68,64,67],
[58,0,70,70,69,65,61,64],
[57,60,0,70,64,62,61,69],
[61,60,60,0,60,68,58,66],
[64,61,66,70,0,72,67,69],
[62,65,68,62,58,0,59,62],
[66,69,69,72,63,71,0,72],
[63,66,61,64,61,68,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,55,50,60,63,60,56],
[61,0,60,61,62,61,60,71],
[75,70,0,65,53,69,71,67],
[80,69,65,0,71,76,72,76],
[70,68,77,59,0,71,73,80],
[67,69,61,54,59,0,67,71],
[70,70,59,58,57,63,0,65],
[74,59,63,54,50,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,70,62,66,64,66,59],
[58,0,57,51,55,56,59,46],
[60,73,0,56,64,59,58,59],
[68,79,74,0,65,61,67,62],
[64,75,66,65,0,60,57,54],
[66,74,71,69,70,0,62,65],
[64,71,72,63,73,68,0,51],
[71,84,71,68,76,65,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,72,63,71,69,74],
[64,0,56,66,65,73,83,64],
[62,74,0,71,70,64,73,64],
[58,64,59,0,66,60,67,56],
[67,65,60,64,0,72,71,63],
[59,57,66,70,58,0,73,60],
[61,47,57,63,59,57,0,63],
[56,66,66,74,67,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,62,75,79,71,64],
[73,0,52,58,66,63,81,76],
[62,78,0,42,68,79,82,64],
[68,72,88,0,65,67,76,72],
[55,64,62,65,0,64,67,43],
[51,67,51,63,66,0,64,65],
[59,49,48,54,63,66,0,53],
[66,54,66,58,87,65,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,41,43,63,44,56,45],
[57,0,20,50,54,31,57,58],
[89,110,0,80,97,62,75,75],
[87,80,50,0,68,60,52,57],
[67,76,33,62,0,48,48,54],
[86,99,68,70,82,0,65,60],
[74,73,55,78,82,65,0,67],
[85,72,55,73,76,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,70,60,71,74,72,79],
[76,0,73,61,75,70,64,68],
[60,57,0,62,81,56,63,73],
[70,69,68,0,64,64,61,67],
[59,55,49,66,0,63,47,49],
[56,60,74,66,67,0,66,72],
[58,66,67,69,83,64,0,75],
[51,62,57,63,81,58,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,71,69,67,77,69,61],
[57,0,71,56,56,65,58,58],
[59,59,0,69,64,65,60,62],
[61,74,61,0,63,75,67,63],
[63,74,66,67,0,69,64,63],
[53,65,65,55,61,0,61,64],
[61,72,70,63,66,69,0,68],
[69,72,68,67,67,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,53,65,57,65,60],
[67,0,53,60,56,64,70,59],
[73,77,0,72,64,66,73,72],
[77,70,58,0,66,72,75,81],
[65,74,66,64,0,65,74,76],
[73,66,64,58,65,0,65,66],
[65,60,57,55,56,65,0,65],
[70,71,58,49,54,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,25,46,56,44,46],
[59,0,70,40,76,65,59,86],
[65,60,0,65,56,35,65,35],
[105,90,65,0,65,56,49,65],
[84,54,74,65,0,10,84,79],
[74,65,95,74,120,0,74,120],
[86,71,65,81,46,56,0,46],
[84,44,95,65,51,10,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,79,68,71,86,69,65],
[51,0,59,62,63,62,52,71],
[51,71,0,53,63,73,54,64],
[62,68,77,0,69,56,88,57],
[59,67,67,61,0,68,62,54],
[44,68,57,74,62,0,60,68],
[61,78,76,42,68,70,0,71],
[65,59,66,73,76,62,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,74,73,71,71,59,73],
[60,0,64,70,77,64,58,76],
[56,66,0,64,74,54,56,82],
[57,60,66,0,63,63,56,75],
[59,53,56,67,0,56,47,69],
[59,66,76,67,74,0,66,78],
[71,72,74,74,83,64,0,80],
[57,54,48,55,61,52,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,66,58,66,59,53],
[72,0,76,82,75,67,73,61],
[65,54,0,61,67,64,55,49],
[64,48,69,0,67,56,57,63],
[72,55,63,63,0,67,62,63],
[64,63,66,74,63,0,63,64],
[71,57,75,73,68,67,0,71],
[77,69,81,67,67,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,59,57,75,94,57,84],
[54,0,59,54,66,76,43,61],
[71,71,0,56,68,71,46,84],
[73,76,74,0,65,81,74,98],
[55,64,62,65,0,77,55,67],
[36,54,59,49,53,0,41,62],
[73,87,84,56,75,89,0,87],
[46,69,46,32,63,68,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,77,68,65,70,63],
[64,0,65,75,66,66,68,76],
[65,65,0,73,69,60,70,63],
[53,55,57,0,58,57,56,57],
[62,64,61,72,0,63,67,60],
[65,64,70,73,67,0,71,67],
[60,62,60,74,63,59,0,65],
[67,54,67,73,70,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,72,67,86,90,91,76],
[81,0,64,65,82,78,91,68],
[58,66,0,64,81,84,101,63],
[63,65,66,0,80,86,74,69],
[44,48,49,50,0,59,55,57],
[40,52,46,44,71,0,79,56],
[39,39,29,56,75,51,0,48],
[54,62,67,61,73,74,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,55,61,63,57,56,66],
[72,0,56,66,60,61,63,73],
[75,74,0,72,70,62,63,76],
[69,64,58,0,58,55,60,65],
[67,70,60,72,0,62,65,71],
[73,69,68,75,68,0,65,76],
[74,67,67,70,65,65,0,74],
[64,57,54,65,59,54,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,44,69,70,65,25,36],
[101,0,53,67,67,104,66,60],
[86,77,0,74,60,90,73,77],
[61,63,56,0,80,60,39,53],
[60,63,70,50,0,45,50,39],
[65,26,40,70,85,0,22,46],
[105,64,57,91,80,108,0,45],
[94,70,53,77,91,84,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,56,70,67,67,54,59],
[63,0,49,63,58,58,66,62],
[74,81,0,74,64,55,69,61],
[60,67,56,0,67,53,57,63],
[63,72,66,63,0,54,59,58],
[63,72,75,77,76,0,59,69],
[76,64,61,73,71,71,0,66],
[71,68,69,67,72,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,55,76,72,69,53,64],
[77,0,67,75,80,58,74,63],
[75,63,0,95,76,60,76,75],
[54,55,35,0,50,41,47,52],
[58,50,54,80,0,49,66,55],
[61,72,70,89,81,0,89,68],
[77,56,54,83,64,41,0,63],
[66,67,55,78,75,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,73,68,61,70,67,63],
[71,0,67,62,54,71,59,63],
[57,63,0,51,54,63,62,64],
[62,68,79,0,65,76,75,67],
[69,76,76,65,0,77,72,75],
[60,59,67,54,53,0,60,68],
[63,71,68,55,58,70,0,65],
[67,67,66,63,55,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,68,68,58,67,68],
[64,0,58,63,71,59,60,62],
[62,72,0,72,71,74,71,64],
[62,67,58,0,61,63,59,60],
[62,59,59,69,0,68,65,61],
[72,71,56,67,62,0,61,65],
[63,70,59,71,65,69,0,64],
[62,68,66,70,69,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,65,61,66,63,60],
[66,0,90,80,75,85,60,72],
[70,40,0,54,59,68,63,50],
[65,50,76,0,65,69,71,77],
[69,55,71,65,0,51,68,47],
[64,45,62,61,79,0,58,59],
[67,70,67,59,62,72,0,59],
[70,58,80,53,83,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,71,50,48,39,57,78],
[106,0,72,81,75,62,89,89],
[59,58,0,78,53,61,71,90],
[80,49,52,0,33,38,64,74],
[82,55,77,97,0,50,76,87],
[91,68,69,92,80,0,59,79],
[73,41,59,66,54,71,0,63],
[52,41,40,56,43,51,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,60,65,69,71,65,67],
[73,0,64,70,72,62,64,70],
[70,66,0,75,70,62,72,72],
[65,60,55,0,58,49,66,61],
[61,58,60,72,0,63,63,70],
[59,68,68,81,67,0,55,78],
[65,66,58,64,67,75,0,73],
[63,60,58,69,60,52,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,67,57,59,68,71],
[62,0,62,57,55,68,69,69],
[55,68,0,54,53,58,59,67],
[63,73,76,0,60,62,66,70],
[73,75,77,70,0,55,68,68],
[71,62,72,68,75,0,75,68],
[62,61,71,64,62,55,0,72],
[59,61,63,60,62,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,57,67,70,73,68],
[62,0,42,65,41,65,63,60],
[63,88,0,79,58,92,70,67],
[73,65,51,0,55,62,74,72],
[63,89,72,75,0,60,78,84],
[60,65,38,68,70,0,60,67],
[57,67,60,56,52,70,0,82],
[62,70,63,58,46,63,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,57,68,60,55,67],
[62,0,60,51,62,55,54,55],
[68,70,0,66,71,66,60,66],
[73,79,64,0,63,63,61,59],
[62,68,59,67,0,45,54,59],
[70,75,64,67,85,0,67,70],
[75,76,70,69,76,63,0,67],
[63,75,64,71,71,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,58,75,56,62,63,67],
[64,0,60,67,69,62,57,63],
[72,70,0,66,65,78,69,72],
[55,63,64,0,59,70,62,51],
[74,61,65,71,0,70,58,67],
[68,68,52,60,60,0,61,54],
[67,73,61,68,72,69,0,76],
[63,67,58,79,63,76,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,52,45,54,59,49,56],
[64,0,52,64,61,77,72,52],
[78,78,0,65,65,69,76,65],
[85,66,65,0,68,74,70,72],
[76,69,65,62,0,67,66,60],
[71,53,61,56,63,0,53,51],
[81,58,54,60,64,77,0,52],
[74,78,65,58,70,79,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,76,75,88,62,65],
[69,0,60,66,77,86,75,64],
[60,70,0,51,69,74,64,59],
[54,64,79,0,69,80,71,84],
[55,53,61,61,0,80,64,66],
[42,44,56,50,50,0,49,55],
[68,55,66,59,66,81,0,57],
[65,66,71,46,64,75,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,83,66,65,54,64,72],
[72,0,85,77,72,71,73,63],
[47,45,0,50,67,57,55,57],
[64,53,80,0,72,68,63,61],
[65,58,63,58,0,64,46,60],
[76,59,73,62,66,0,63,65],
[66,57,75,67,84,67,0,64],
[58,67,73,69,70,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,66,69,66,68,64],
[65,0,64,76,74,66,70,69],
[58,66,0,67,68,61,61,56],
[64,54,63,0,70,58,63,58],
[61,56,62,60,0,57,52,59],
[64,64,69,72,73,0,61,63],
[62,60,69,67,78,69,0,73],
[66,61,74,72,71,67,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,96,77,58,77,92,92],
[53,0,96,104,85,27,76,76],
[34,34,0,77,43,34,34,49],
[53,26,53,0,15,53,49,15],
[72,45,87,115,0,72,72,76],
[53,103,96,77,58,0,92,92],
[38,54,96,81,58,38,0,58],
[38,54,81,115,54,38,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,69,63,70,64,67],
[69,0,67,62,68,67,79,68],
[62,63,0,62,55,66,65,68],
[61,68,68,0,67,76,70,74],
[67,62,75,63,0,73,74,69],
[60,63,64,54,57,0,66,61],
[66,51,65,60,56,64,0,57],
[63,62,62,56,61,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,67,60,66,59,64],
[64,0,73,72,69,65,64,63],
[64,57,0,72,57,58,66,58],
[63,58,58,0,55,63,52,58],
[70,61,73,75,0,70,56,65],
[64,65,72,67,60,0,65,59],
[71,66,64,78,74,65,0,65],
[66,67,72,72,65,71,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,71,83,74,73,76,67],
[70,0,66,83,77,76,80,65],
[59,64,0,66,59,70,66,62],
[47,47,64,0,64,67,72,59],
[56,53,71,66,0,62,67,59],
[57,54,60,63,68,0,63,61],
[54,50,64,58,63,67,0,59],
[63,65,68,71,71,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,78,70,55,81,73],
[70,0,61,72,61,53,77,80],
[61,69,0,71,54,66,83,64],
[52,58,59,0,51,61,71,67],
[60,69,76,79,0,70,74,85],
[75,77,64,69,60,0,87,89],
[49,53,47,59,56,43,0,70],
[57,50,66,63,45,41,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,69,73,59,66,65],
[71,0,67,70,82,77,76,61],
[65,63,0,68,83,43,57,63],
[61,60,62,0,94,50,70,63],
[57,48,47,36,0,53,54,60],
[71,53,87,80,77,0,54,77],
[64,54,73,60,76,76,0,63],
[65,69,67,67,70,53,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,65,75,64,69,67],
[63,0,65,64,64,65,63,65],
[64,65,0,62,73,66,69,65],
[65,66,68,0,72,67,76,69],
[55,66,57,58,0,63,56,60],
[66,65,64,63,67,0,68,64],
[61,67,61,54,74,62,0,63],
[63,65,65,61,70,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,113,79,60,69,34,97,69],
[17,0,63,66,36,17,17,50],
[51,67,0,94,50,45,51,50],
[70,64,36,0,36,70,70,69],
[61,94,80,94,0,34,34,100],
[96,113,85,60,96,0,69,96],
[33,113,79,60,96,61,0,85],
[61,80,80,61,30,34,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,59,56,62,50,58,60],
[72,0,79,62,73,63,65,71],
[71,51,0,68,57,62,72,60],
[74,68,62,0,82,66,71,63],
[68,57,73,48,0,68,70,54],
[80,67,68,64,62,0,67,69],
[72,65,58,59,60,63,0,68],
[70,59,70,67,76,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,76,65,79,68,69],
[64,0,57,72,55,59,59,61],
[63,73,0,76,66,75,75,75],
[54,58,54,0,67,72,66,59],
[65,75,64,63,0,76,74,61],
[51,71,55,58,54,0,61,58],
[62,71,55,64,56,69,0,57],
[61,69,55,71,69,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,57,63,72,67,71],
[73,0,66,60,56,64,69,71],
[68,64,0,62,56,67,65,79],
[73,70,68,0,63,76,63,67],
[67,74,74,67,0,85,64,68],
[58,66,63,54,45,0,47,68],
[63,61,65,67,66,83,0,68],
[59,59,51,63,62,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,75,64,66,70,66,65],
[58,0,64,54,64,60,67,52],
[55,66,0,60,62,58,61,58],
[66,76,70,0,65,57,69,56],
[64,66,68,65,0,62,74,61],
[60,70,72,73,68,0,70,57],
[64,63,69,61,56,60,0,59],
[65,78,72,74,69,73,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,57,69,77,73,70,58],
[66,0,57,75,51,61,62,55],
[73,73,0,80,64,66,69,71],
[61,55,50,0,54,57,59,55],
[53,79,66,76,0,68,54,70],
[57,69,64,73,62,0,61,71],
[60,68,61,71,76,69,0,70],
[72,75,59,75,60,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,63,75,64,58,62,59],
[73,0,68,76,74,58,64,73],
[67,62,0,69,68,62,65,65],
[55,54,61,0,64,56,52,64],
[66,56,62,66,0,56,52,65],
[72,72,68,74,74,0,61,68],
[68,66,65,78,78,69,0,66],
[71,57,65,66,65,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,115,83,55,92,81,81,119],
[15,0,15,19,28,17,59,83],
[47,115,0,44,94,59,59,106],
[75,111,86,0,52,75,98,98],
[38,102,36,78,0,61,65,106],
[49,113,71,55,69,0,78,107],
[49,71,71,32,65,52,0,107],
[11,47,24,32,24,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,77,78,68,72,66,65],
[66,0,67,64,67,73,62,65],
[53,63,0,72,58,74,71,67],
[52,66,58,0,67,75,60,72],
[62,63,72,63,0,70,58,68],
[58,57,56,55,60,0,40,64],
[64,68,59,70,72,90,0,65],
[65,65,63,58,62,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,63,96,78,77,73,69],
[39,0,81,98,76,53,76,76],
[67,49,0,88,50,60,62,35],
[34,32,42,0,29,41,29,31],
[52,54,80,101,0,64,86,55],
[53,77,70,89,66,0,89,68],
[57,54,68,101,44,41,0,61],
[61,54,95,99,75,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,65,70,68,68,74,66],
[57,0,71,66,56,73,71,69],
[65,59,0,68,55,67,69,60],
[60,64,62,0,58,61,66,64],
[62,74,75,72,0,73,67,70],
[62,57,63,69,57,0,69,63],
[56,59,61,64,63,61,0,64],
[64,61,70,66,60,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,32,54,63,57,55,40],
[65,0,49,58,50,43,39,43],
[98,81,0,68,70,66,65,72],
[76,72,62,0,82,74,54,50],
[67,80,60,48,0,57,36,33],
[73,87,64,56,73,0,47,19],
[75,91,65,76,94,83,0,50],
[90,87,58,80,97,111,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,76,71,90,75,73,58],
[64,0,81,57,105,57,92,59],
[54,49,0,69,91,74,71,65],
[59,73,61,0,81,47,81,64],
[40,25,39,49,0,27,62,29],
[55,73,56,83,103,0,75,49],
[57,38,59,49,68,55,0,43],
[72,71,65,66,101,81,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,64,56,59,65,64],
[61,0,61,60,63,59,61,72],
[61,69,0,68,60,63,59,57],
[66,70,62,0,74,71,61,68],
[74,67,70,56,0,64,60,70],
[71,71,67,59,66,0,68,64],
[65,69,71,69,70,62,0,65],
[66,58,73,62,60,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,54,47,83,65,67,62],
[71,0,52,65,71,59,69,54],
[76,78,0,60,74,66,63,67],
[83,65,70,0,76,55,71,67],
[47,59,56,54,0,55,70,57],
[65,71,64,75,75,0,81,69],
[63,61,67,59,60,49,0,57],
[68,76,63,63,73,61,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,54,70,70,70,68,71],
[64,0,66,70,65,67,68,74],
[76,64,0,66,61,73,58,66],
[60,60,64,0,69,67,69,71],
[60,65,69,61,0,61,69,64],
[60,63,57,63,69,0,67,54],
[62,62,72,61,61,63,0,74],
[59,56,64,59,66,76,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,53,61,58,50,67,66],
[75,0,64,68,68,65,66,78],
[77,66,0,81,63,68,74,73],
[69,62,49,0,54,54,57,63],
[72,62,67,76,0,65,68,77],
[80,65,62,76,65,0,73,71],
[63,64,56,73,62,57,0,64],
[64,52,57,67,53,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,61,51,45,46,64],
[71,0,89,57,61,68,64,61],
[63,41,0,42,44,30,54,42],
[69,73,88,0,58,82,58,62],
[79,69,86,72,0,72,84,63],
[85,62,100,48,58,0,58,74],
[84,66,76,72,46,72,0,72],
[66,69,88,68,67,56,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,61,70,70,61,63,65],
[71,0,67,85,78,70,65,72],
[69,63,0,86,68,76,65,66],
[60,45,44,0,57,53,54,50],
[60,52,62,73,0,63,68,61],
[69,60,54,77,67,0,72,63],
[67,65,65,76,62,58,0,69],
[65,58,64,80,69,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,66,65,71,65,48,60],
[53,0,77,75,90,60,65,80],
[64,53,0,65,78,69,60,69],
[65,55,65,0,75,61,52,59],
[59,40,52,55,0,56,58,74],
[65,70,61,69,74,0,64,65],
[82,65,70,78,72,66,0,71],
[70,50,61,71,56,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,69,64,61,63,56],
[57,0,69,61,48,61,56,61],
[64,61,0,64,58,53,56,55],
[61,69,66,0,51,58,53,54],
[66,82,72,79,0,68,61,66],
[69,69,77,72,62,0,68,60],
[67,74,74,77,69,62,0,58],
[74,69,75,76,64,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,70,55,66,55,63,67],
[64,0,81,61,69,70,73,76],
[60,49,0,61,58,56,55,73],
[75,69,69,0,74,78,63,75],
[64,61,72,56,0,60,61,63],
[75,60,74,52,70,0,80,70],
[67,57,75,67,69,50,0,73],
[63,54,57,55,67,60,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,74,60,70,56,62],
[66,0,57,57,53,59,58,67],
[68,73,0,72,70,63,68,66],
[56,73,58,0,58,56,62,63],
[70,77,60,72,0,69,72,54],
[60,71,67,74,61,0,66,71],
[74,72,62,68,58,64,0,53],
[68,63,64,67,76,59,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,73,69,57,63,62,58],
[70,0,77,66,69,78,68,60],
[57,53,0,62,53,63,65,55],
[61,64,68,0,58,76,71,64],
[73,61,77,72,0,71,75,74],
[67,52,67,54,59,0,65,55],
[68,62,65,59,55,65,0,65],
[72,70,75,66,56,75,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,76,59,69,65,81,81],
[55,0,64,51,65,68,83,82],
[54,66,0,59,77,56,82,63],
[71,79,71,0,72,65,79,65],
[61,65,53,58,0,63,69,68],
[65,62,74,65,67,0,81,68],
[49,47,48,51,61,49,0,49],
[49,48,67,65,62,62,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,79,65,73,68,79,67],
[62,0,67,74,71,62,72,66],
[51,63,0,60,51,63,61,68],
[65,56,70,0,65,59,70,62],
[57,59,79,65,0,60,68,69],
[62,68,67,71,70,0,75,68],
[51,58,69,60,62,55,0,56],
[63,64,62,68,61,62,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,59,71,67,82,74,75],
[63,0,63,66,70,75,66,77],
[71,67,0,69,54,68,70,59],
[59,64,61,0,56,64,61,72],
[63,60,76,74,0,80,69,67],
[48,55,62,66,50,0,61,65],
[56,64,60,69,61,69,0,68],
[55,53,71,58,63,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,71,62,68,66,57],
[69,0,63,71,59,70,73,66],
[62,67,0,73,76,69,77,62],
[59,59,57,0,54,63,64,51],
[68,71,54,76,0,79,73,64],
[62,60,61,67,51,0,70,57],
[64,57,53,66,57,60,0,51],
[73,64,68,79,66,73,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,69,70,59,67,60,65],
[72,0,74,83,65,73,76,76],
[61,56,0,64,63,59,53,70],
[60,47,66,0,62,62,57,69],
[71,65,67,68,0,67,66,73],
[63,57,71,68,63,0,63,70],
[70,54,77,73,64,67,0,67],
[65,54,60,61,57,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,61,66,69,70,70,65],
[59,0,59,66,61,64,66,60],
[69,71,0,69,69,68,69,60],
[64,64,61,0,70,68,70,66],
[61,69,61,60,0,71,64,57],
[60,66,62,62,59,0,71,57],
[60,64,61,60,66,59,0,63],
[65,70,70,64,73,73,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,50,45,70,40,67,69],
[74,0,61,31,80,52,79,57],
[80,69,0,68,83,57,104,92],
[85,99,62,0,91,83,93,84],
[60,50,47,39,0,55,64,56],
[90,78,73,47,75,0,75,68],
[63,51,26,37,66,55,0,46],
[61,73,38,46,74,62,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,84,78,98,87,80,86],
[66,0,81,73,84,107,62,79],
[46,49,0,84,74,68,77,63],
[52,57,46,0,31,67,68,67],
[32,46,56,99,0,70,51,87],
[43,23,62,63,60,0,45,60],
[50,68,53,62,79,85,0,41],
[44,51,67,63,43,70,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,79,76,69,66,65,78],
[59,0,70,66,60,60,60,73],
[51,60,0,64,56,53,60,58],
[54,64,66,0,55,53,59,70],
[61,70,74,75,0,56,57,75],
[64,70,77,77,74,0,66,75],
[65,70,70,71,73,64,0,73],
[52,57,72,60,55,55,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,54,65,55,71,68],
[67,0,70,69,63,61,67,62],
[57,60,0,53,59,56,76,65],
[76,61,77,0,68,60,66,59],
[65,67,71,62,0,58,60,59],
[75,69,74,70,72,0,70,61],
[59,63,54,64,70,60,0,61],
[62,68,65,71,71,69,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,70,62,57,59,58],
[71,0,65,71,77,73,72,71],
[66,65,0,59,76,64,63,57],
[60,59,71,0,67,66,60,59],
[68,53,54,63,0,60,52,61],
[73,57,66,64,70,0,64,63],
[71,58,67,70,78,66,0,61],
[72,59,73,71,69,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,77,65,78,78,69,78],
[55,0,62,65,73,71,82,64],
[53,68,0,57,60,70,69,83],
[65,65,73,0,77,82,72,68],
[52,57,70,53,0,71,83,69],
[52,59,60,48,59,0,62,59],
[61,48,61,58,47,68,0,63],
[52,66,47,62,61,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,68,63,70,70,75,71],
[57,0,64,72,63,57,63,62],
[62,66,0,67,66,66,60,60],
[67,58,63,0,68,68,70,71],
[60,67,64,62,0,60,70,66],
[60,73,64,62,70,0,67,67],
[55,67,70,60,60,63,0,62],
[59,68,70,59,64,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,74,75,72,70,67,76],
[72,0,64,72,77,67,78,73],
[56,66,0,63,64,63,59,72],
[55,58,67,0,68,62,59,69],
[58,53,66,62,0,60,58,63],
[60,63,67,68,70,0,65,69],
[63,52,71,71,72,65,0,64],
[54,57,58,61,67,61,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,39,74,70,71,73,59],
[80,0,63,81,71,83,85,76],
[91,67,0,70,70,75,80,58],
[56,49,60,0,71,60,82,63],
[60,59,60,59,0,59,71,68],
[59,47,55,70,71,0,71,55],
[57,45,50,48,59,59,0,63],
[71,54,72,67,62,75,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,75,70,79,84,65,73],
[53,0,76,59,65,74,62,65],
[55,54,0,63,56,76,64,66],
[60,71,67,0,69,71,57,68],
[51,65,74,61,0,72,73,64],
[46,56,54,59,58,0,63,55],
[65,68,66,73,57,67,0,60],
[57,65,64,62,66,75,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,72,61,68,59,54],
[72,0,66,66,68,70,58,58],
[69,64,0,65,64,65,56,60],
[58,64,65,0,58,64,61,51],
[69,62,66,72,0,60,62,65],
[62,60,65,66,70,0,57,58],
[71,72,74,69,68,73,0,56],
[76,72,70,79,65,72,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,84,47,47,47,93,47],
[71,0,62,25,25,25,85,85],
[46,68,0,93,71,79,93,93],
[83,105,37,0,46,71,93,97],
[83,105,59,84,0,116,130,105],
[83,105,51,59,14,0,105,105],
[37,45,37,37,0,25,0,37],
[83,45,37,33,25,25,93,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,66,65,65,54,53,90],
[55,0,72,49,67,56,52,75],
[64,58,0,53,67,84,52,101],
[65,81,77,0,77,75,84,99],
[65,63,63,53,0,59,67,59],
[76,74,46,55,71,0,78,102],
[77,78,78,46,63,52,0,70],
[40,55,29,31,71,28,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,83,87,90,66,34,56],
[57,0,82,109,82,58,48,65],
[47,48,0,77,109,52,40,20],
[43,21,53,0,84,32,20,59],
[40,48,21,46,0,11,39,29],
[64,72,78,98,119,0,81,60],
[96,82,90,110,91,49,0,53],
[74,65,110,71,101,70,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,61,72,66,70,64,51],
[55,0,68,74,63,57,62,62],
[69,62,0,78,73,54,55,77],
[58,56,52,0,73,54,46,58],
[64,67,57,57,0,62,56,60],
[60,73,76,76,68,0,52,64],
[66,68,75,84,74,78,0,65],
[79,68,53,72,70,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,70,64,68,65,67],
[67,0,63,69,61,67,64,63],
[62,67,0,78,58,68,58,65],
[60,61,52,0,58,63,64,66],
[66,69,72,72,0,75,62,71],
[62,63,62,67,55,0,57,70],
[65,66,72,66,68,73,0,65],
[63,67,65,64,59,60,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,73,73,60,68,73,73],
[57,0,109,112,87,68,87,66],
[57,21,0,46,53,34,53,34],
[57,18,84,0,53,34,66,79],
[70,43,77,77,0,13,79,47],
[62,62,96,96,117,0,71,71],
[57,43,77,64,51,59,0,52],
[57,64,96,51,83,59,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,69,74,70,69,62,59],
[72,0,72,64,81,73,72,83],
[61,58,0,68,78,64,66,70],
[56,66,62,0,80,60,60,71],
[60,49,52,50,0,43,51,67],
[61,57,66,70,87,0,66,85],
[68,58,64,70,79,64,0,78],
[71,47,60,59,63,45,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,62,62,72,75,69],
[70,0,89,61,68,65,74,75],
[70,41,0,42,44,48,56,49],
[68,69,88,0,70,86,64,67],
[68,62,86,60,0,58,75,72],
[58,65,82,44,72,0,68,71],
[55,56,74,66,55,62,0,72],
[61,55,81,63,58,59,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,70,60,64,66,61],
[57,0,44,57,43,54,47,59],
[67,86,0,76,50,63,65,62],
[60,73,54,0,61,65,57,57],
[70,87,80,69,0,71,66,60],
[66,76,67,65,59,0,63,68],
[64,83,65,73,64,67,0,52],
[69,71,68,73,70,62,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,74,69,68,71,65,71],
[66,0,77,63,63,63,66,65],
[56,53,0,64,65,73,63,65],
[61,67,66,0,53,54,58,63],
[62,67,65,77,0,71,63,71],
[59,67,57,76,59,0,65,61],
[65,64,67,72,67,65,0,66],
[59,65,65,67,59,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,70,51,51,31,46,34],
[50,0,32,45,67,60,57,70],
[60,98,0,94,84,56,105,87],
[79,85,36,0,51,66,66,76],
[79,63,46,79,0,47,57,64],
[99,70,74,64,83,0,73,61],
[84,73,25,64,73,57,0,60],
[96,60,43,54,66,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,66,67,66,64,63],
[68,0,65,65,62,60,68,60],
[57,65,0,64,60,60,57,55],
[64,65,66,0,63,62,64,60],
[63,68,70,67,0,65,62,64],
[64,70,70,68,65,0,71,67],
[66,62,73,66,68,59,0,57],
[67,70,75,70,66,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,80,68,74,79,64,83],
[71,0,93,74,51,89,56,87],
[50,37,0,67,49,60,45,70],
[62,56,63,0,69,71,58,79],
[56,79,81,61,0,68,70,84],
[51,41,70,59,62,0,34,75],
[66,74,85,72,60,96,0,79],
[47,43,60,51,46,55,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,76,59,60,62,67,70],
[71,0,73,65,65,72,72,73],
[54,57,0,50,53,58,56,66],
[71,65,80,0,68,69,72,75],
[70,65,77,62,0,69,65,65],
[68,58,72,61,61,0,65,70],
[63,58,74,58,65,65,0,60],
[60,57,64,55,65,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,56,50,48,54,52,61],
[82,0,71,68,63,68,65,85],
[74,59,0,59,58,69,67,80],
[80,62,71,0,68,66,65,73],
[82,67,72,62,0,63,69,75],
[76,62,61,64,67,0,68,77],
[78,65,63,65,61,62,0,76],
[69,45,50,57,55,53,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,62,65,72,65,58,64],
[71,0,54,62,65,61,65,58],
[68,76,0,66,70,69,71,63],
[65,68,64,0,68,63,64,67],
[58,65,60,62,0,61,62,59],
[65,69,61,67,69,0,68,63],
[72,65,59,66,68,62,0,58],
[66,72,67,63,71,67,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,75,76,67,65,69,63],
[57,0,78,80,57,55,58,51],
[55,52,0,51,57,59,56,58],
[54,50,79,0,50,60,60,52],
[63,73,73,80,0,67,67,52],
[65,75,71,70,63,0,71,65],
[61,72,74,70,63,59,0,61],
[67,79,72,78,78,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,75,68,65,65,73,71],
[72,0,71,61,68,67,73,75],
[55,59,0,67,59,56,67,69],
[62,69,63,0,64,64,69,64],
[65,62,71,66,0,63,77,74],
[65,63,74,66,67,0,79,68],
[57,57,63,61,53,51,0,62],
[59,55,61,66,56,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,75,30,75,130,30,75],
[55,0,45,55,73,55,0,45],
[55,85,0,85,130,85,85,100],
[100,75,45,0,45,100,0,45],
[55,57,0,85,0,85,57,72],
[0,75,45,30,45,0,0,45],
[100,130,45,130,73,130,0,72],
[55,85,30,85,58,85,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,42,77,77,77,67,77],
[50,0,50,50,25,50,92,50],
[88,80,0,63,105,130,130,63],
[53,80,67,0,105,70,95,63],
[53,105,25,25,0,95,95,60],
[53,80,0,60,35,0,95,60],
[63,38,0,35,35,35,0,60],
[53,80,67,67,70,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,83,66,78,72,78,63],
[57,0,77,69,74,67,97,77],
[47,53,0,74,80,68,74,64],
[64,61,56,0,60,63,72,74],
[52,56,50,70,0,51,80,52],
[58,63,62,67,79,0,84,54],
[52,33,56,58,50,46,0,58],
[67,53,66,56,78,76,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,66,66,73,65,68],
[64,0,74,75,66,72,71,70],
[63,56,0,60,59,63,61,69],
[64,55,70,0,68,78,63,64],
[64,64,71,62,0,68,71,65],
[57,58,67,52,62,0,56,65],
[65,59,69,67,59,74,0,63],
[62,60,61,66,65,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,75,57,86,72,79,72],
[68,0,64,46,56,82,85,76],
[55,66,0,57,62,83,64,89],
[73,84,73,0,104,55,89,99],
[44,74,68,26,0,77,67,80],
[58,48,47,75,53,0,85,83],
[51,45,66,41,63,45,0,97],
[58,54,41,31,50,47,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,68,58,57,56,61,66],
[77,0,66,52,63,71,70,68],
[62,64,0,56,62,65,60,62],
[72,78,74,0,60,69,64,68],
[73,67,68,70,0,68,59,68],
[74,59,65,61,62,0,62,58],
[69,60,70,66,71,68,0,65],
[64,62,68,62,62,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,64,56,48,68,71],
[73,0,70,80,68,53,54,73],
[62,60,0,73,71,49,64,66],
[66,50,57,0,62,43,58,44],
[74,62,59,68,0,53,81,59],
[82,77,81,87,77,0,65,86],
[62,76,66,72,49,65,0,75],
[59,57,64,86,71,44,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,71,65,72,67,66],
[66,0,60,68,69,55,54,53],
[62,70,0,69,63,71,65,70],
[59,62,61,0,68,62,59,62],
[65,61,67,62,0,58,66,54],
[58,75,59,68,72,0,70,59],
[63,76,65,71,64,60,0,61],
[64,77,60,68,76,71,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,53,53,54,51,55,66],
[71,0,61,67,61,60,67,69],
[77,69,0,62,71,68,73,70],
[77,63,68,0,71,60,66,79],
[76,69,59,59,0,64,55,64],
[79,70,62,70,66,0,66,79],
[75,63,57,64,75,64,0,65],
[64,61,60,51,66,51,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,61,61,71,62,52,60],
[74,0,74,85,61,64,69,71],
[69,56,0,61,73,54,63,48],
[69,45,69,0,53,57,63,77],
[59,69,57,77,0,59,61,53],
[68,66,76,73,71,0,52,65],
[78,61,67,67,69,78,0,70],
[70,59,82,53,77,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,50,64,53,59,70,64],
[68,0,66,75,55,76,57,63],
[80,64,0,66,62,71,63,77],
[66,55,64,0,43,70,46,61],
[77,75,68,87,0,76,62,74],
[71,54,59,60,54,0,63,65],
[60,73,67,84,68,67,0,82],
[66,67,53,69,56,65,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,50,53,56,65,59,57],
[67,0,55,67,54,82,63,56],
[80,75,0,61,75,83,79,79],
[77,63,69,0,72,93,71,54],
[74,76,55,58,0,84,63,66],
[65,48,47,37,46,0,47,46],
[71,67,51,59,67,83,0,65],
[73,74,51,76,64,84,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,72,65,63,67,70,60],
[58,0,66,54,44,61,58,48],
[58,64,0,54,61,67,59,45],
[65,76,76,0,66,64,64,72],
[67,86,69,64,0,75,73,66],
[63,69,63,66,55,0,70,63],
[60,72,71,66,57,60,0,68],
[70,82,85,58,64,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,58,58,51,66,85],
[64,0,64,60,60,53,73,76],
[63,66,0,59,56,48,56,65],
[72,70,71,0,80,65,69,70],
[72,70,74,50,0,56,67,68],
[79,77,82,65,74,0,78,77],
[64,57,74,61,63,52,0,72],
[45,54,65,60,62,53,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,52,64,64,65,71],
[69,0,53,59,62,68,70,68],
[71,77,0,68,85,80,62,83],
[78,71,62,0,84,80,67,86],
[66,68,45,46,0,62,59,68],
[66,62,50,50,68,0,48,52],
[65,60,68,63,71,82,0,75],
[59,62,47,44,62,78,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,62,68,68,70,67],
[70,0,71,68,69,75,50,76],
[62,59,0,62,57,73,65,67],
[68,62,68,0,40,67,67,66],
[62,61,73,90,0,83,66,72],
[62,55,57,63,47,0,43,53],
[60,80,65,63,64,87,0,73],
[63,54,63,64,58,77,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,62,66,60,65,60],
[72,0,66,64,66,58,70,59],
[69,64,0,67,73,64,77,62],
[68,66,63,0,62,64,68,65],
[64,64,57,68,0,68,75,62],
[70,72,66,66,62,0,68,67],
[65,60,53,62,55,62,0,55],
[70,71,68,65,68,63,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,3,65,130,65,127],
[68,0,68,68,68,130,68,65],
[65,62,0,68,3,130,65,127],
[127,62,62,0,62,127,62,127],
[65,62,127,68,0,130,130,127],
[0,0,0,3,0,0,0,65],
[65,62,65,68,0,130,0,127],
[3,65,3,3,3,65,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,59,66,59,66,60,61],
[68,0,59,65,66,63,58,63],
[71,71,0,65,71,71,62,68],
[64,65,65,0,57,67,64,63],
[71,64,59,73,0,72,73,76],
[64,67,59,63,58,0,61,67],
[70,72,68,66,57,69,0,70],
[69,67,62,67,54,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,55,60,58,66,59,56],
[59,0,68,61,64,65,63,59],
[75,62,0,69,60,69,59,59],
[70,69,61,0,65,69,67,66],
[72,66,70,65,0,70,71,60],
[64,65,61,61,60,0,58,55],
[71,67,71,63,59,72,0,68],
[74,71,71,64,70,75,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,58,84,68,66,66],
[72,0,43,66,75,64,76,58],
[65,87,0,77,100,78,97,72],
[72,64,53,0,93,68,79,70],
[46,55,30,37,0,53,60,56],
[62,66,52,62,77,0,71,57],
[64,54,33,51,70,59,0,53],
[64,72,58,60,74,73,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,72,79,78,67,62,70],
[71,0,71,76,77,62,55,68],
[58,59,0,69,59,47,53,57],
[51,54,61,0,60,52,48,64],
[52,53,71,70,0,59,59,68],
[63,68,83,78,71,0,66,72],
[68,75,77,82,71,64,0,72],
[60,62,73,66,62,58,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,66,69,70,65,66,65],
[53,0,53,56,54,51,50,46],
[64,77,0,66,64,63,66,68],
[61,74,64,0,65,55,58,62],
[60,76,66,65,0,56,62,66],
[65,79,67,75,74,0,59,70],
[64,80,64,72,68,71,0,62],
[65,84,62,68,64,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,71,59,72,59,64,60],
[61,0,67,61,68,66,65,65],
[59,63,0,57,59,51,62,59],
[71,69,73,0,75,50,72,57],
[58,62,71,55,0,51,68,62],
[71,64,79,80,79,0,82,72],
[66,65,68,58,62,48,0,51],
[70,65,71,73,68,58,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,53,64,61,49,51],
[74,0,64,67,61,61,49,65],
[73,66,0,78,62,59,67,73],
[77,63,52,0,62,64,58,49],
[66,69,68,68,0,63,56,50],
[69,69,71,66,67,0,57,68],
[81,81,63,72,74,73,0,79],
[79,65,57,81,80,62,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,63,67,64,63,67],
[70,0,61,64,65,67,63,58],
[61,69,0,72,62,71,65,64],
[67,66,58,0,62,73,58,58],
[63,65,68,68,0,69,63,68],
[66,63,59,57,61,0,50,55],
[67,67,65,72,67,80,0,70],
[63,72,66,72,62,75,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,58,59,64,64,59,64],
[73,0,70,70,62,78,59,77],
[72,60,0,55,66,67,62,65],
[71,60,75,0,60,77,65,56],
[66,68,64,70,0,72,60,64],
[66,52,63,53,58,0,61,69],
[71,71,68,65,70,69,0,73],
[66,53,65,74,66,61,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,65,67,62,69,53],
[62,0,64,65,69,64,70,62],
[58,66,0,61,56,58,73,55],
[65,65,69,0,66,64,68,60],
[63,61,74,64,0,57,71,71],
[68,66,72,66,73,0,66,59],
[61,60,57,62,59,64,0,53],
[77,68,75,70,59,71,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,55,61,52,70,60,61],
[70,0,63,51,57,54,49,48],
[75,67,0,68,62,59,53,66],
[69,79,62,0,69,60,54,70],
[78,73,68,61,0,72,50,74],
[60,76,71,70,58,0,62,67],
[70,81,77,76,80,68,0,64],
[69,82,64,60,56,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,67,65,68,72,70,60],
[66,0,67,68,75,74,64,65],
[63,63,0,74,74,73,63,58],
[65,62,56,0,63,65,65,57],
[62,55,56,67,0,61,58,56],
[58,56,57,65,69,0,61,57],
[60,66,67,65,72,69,0,62],
[70,65,72,73,74,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,56,62,51,65,68],
[58,0,101,83,42,53,64,76],
[65,29,0,79,52,58,49,57],
[74,47,51,0,64,50,38,55],
[68,88,78,66,0,62,70,62],
[79,77,72,80,68,0,41,59],
[65,66,81,92,60,89,0,69],
[62,54,73,75,68,71,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,68,63,66,72,64],
[68,0,74,67,63,62,80,66],
[62,56,0,64,57,61,52,63],
[62,63,66,0,66,71,78,74],
[67,67,73,64,0,74,73,61],
[64,68,69,59,56,0,73,64],
[58,50,78,52,57,57,0,57],
[66,64,67,56,69,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,70,73,79,59,68,64],
[71,0,75,76,76,64,67,68],
[60,55,0,74,71,55,54,57],
[57,54,56,0,61,38,49,52],
[51,54,59,69,0,54,58,57],
[71,66,75,92,76,0,65,59],
[62,63,76,81,72,65,0,66],
[66,62,73,78,73,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,74,66,65,52,71,65],
[81,0,77,72,83,62,68,70],
[56,53,0,58,62,46,51,42],
[64,58,72,0,53,57,59,59],
[65,47,68,77,0,47,61,50],
[78,68,84,73,83,0,64,75],
[59,62,79,71,69,66,0,78],
[65,60,88,71,80,55,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,74,73,74,86,73,61],
[63,0,71,62,63,68,65,65],
[56,59,0,58,65,79,68,66],
[57,68,72,0,64,71,75,71],
[56,67,65,66,0,79,65,60],
[44,62,51,59,51,0,70,67],
[57,65,62,55,65,60,0,66],
[69,65,64,59,70,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,62,66,70,68,68,74],
[71,0,70,62,72,66,66,70],
[68,60,0,72,71,69,61,69],
[64,68,58,0,76,70,72,71],
[60,58,59,54,0,63,62,61],
[62,64,61,60,67,0,72,68],
[62,64,69,58,68,58,0,65],
[56,60,61,59,69,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,49,74,75,69,76,70],
[57,0,55,63,83,65,76,63],
[81,75,0,70,85,76,71,62],
[56,67,60,0,67,65,63,58],
[55,47,45,63,0,60,51,59],
[61,65,54,65,70,0,62,58],
[54,54,59,67,79,68,0,57],
[60,67,68,72,71,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,51,47,60,65,58,52],
[43,0,51,45,44,50,61,40],
[79,79,0,79,85,73,65,72],
[83,85,51,0,65,60,64,61],
[70,86,45,65,0,64,61,61],
[65,80,57,70,66,0,66,65],
[72,69,65,66,69,64,0,50],
[78,90,58,69,69,65,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,57,0,61,16,77,86],
[69,0,69,69,114,69,69,57],
[73,61,0,61,61,77,73,86],
[130,61,69,0,114,69,130,118],
[69,16,69,16,0,32,44,41],
[114,61,53,61,98,0,89,86],
[53,61,57,0,86,41,0,25],
[44,73,44,12,89,44,105,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,66,68,65,61,61],
[71,0,62,59,67,60,62,60],
[64,68,0,57,66,60,61,56],
[64,71,73,0,76,67,62,67],
[62,63,64,54,0,65,63,60],
[65,70,70,63,65,0,62,67],
[69,68,69,68,67,68,0,62],
[69,70,74,63,70,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,70,76,59,67,57,65],
[70,0,69,65,62,59,61,64],
[60,61,0,63,57,67,66,61],
[54,65,67,0,58,62,54,56],
[71,68,73,72,0,69,63,65],
[63,71,63,68,61,0,81,62],
[73,69,64,76,67,49,0,59],
[65,66,69,74,65,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,69,68,65,68,67,60],
[59,0,63,66,63,61,64,61],
[61,67,0,63,66,68,63,72],
[62,64,67,0,61,62,62,66],
[65,67,64,69,0,74,57,68],
[62,69,62,68,56,0,59,66],
[63,66,67,68,73,71,0,65],
[70,69,58,64,62,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,47,49,75,50,46,48],
[79,0,66,78,75,66,80,63],
[83,64,0,82,78,75,57,59],
[81,52,48,0,75,58,51,58],
[55,55,52,55,0,49,47,42],
[80,64,55,72,81,0,63,70],
[84,50,73,79,83,67,0,60],
[82,67,71,72,88,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,74,73,70,73,66],
[62,0,58,71,66,65,66,61],
[68,72,0,64,66,71,72,62],
[56,59,66,0,56,60,70,67],
[57,64,64,74,0,73,76,65],
[60,65,59,70,57,0,68,64],
[57,64,58,60,54,62,0,57],
[64,69,68,63,65,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,52,60,64,59,60,58],
[71,0,69,63,66,62,67,62],
[78,61,0,62,60,53,62,53],
[70,67,68,0,65,63,61,63],
[66,64,70,65,0,65,68,66],
[71,68,77,67,65,0,71,66],
[70,63,68,69,62,59,0,68],
[72,68,77,67,64,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,61,59,65,60,59,75],
[58,0,54,65,69,65,67,73],
[69,76,0,70,75,64,65,76],
[71,65,60,0,69,73,60,69],
[65,61,55,61,0,70,53,69],
[70,65,66,57,60,0,65,76],
[71,63,65,70,77,65,0,73],
[55,57,54,61,61,54,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,76,59,65,60,64,66],
[57,0,68,56,58,59,58,62],
[54,62,0,54,53,57,56,52],
[71,74,76,0,65,67,74,65],
[65,72,77,65,0,72,76,61],
[70,71,73,63,58,0,62,57],
[66,72,74,56,54,68,0,57],
[64,68,78,65,69,73,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,72,61,55,68,67],
[69,0,75,75,59,62,62,64],
[64,55,0,70,66,50,54,67],
[58,55,60,0,57,65,55,68],
[69,71,64,73,0,73,76,70],
[75,68,80,65,57,0,79,71],
[62,68,76,75,54,51,0,73],
[63,66,63,62,60,59,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,80,79,78,65,72,77],
[58,0,66,62,61,60,58,71],
[50,64,0,66,58,63,51,65],
[51,68,64,0,73,76,60,70],
[52,69,72,57,0,71,65,73],
[65,70,67,54,59,0,72,75],
[58,72,79,70,65,58,0,70],
[53,59,65,60,57,55,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,76,77,68,63,69,72],
[62,0,63,71,67,60,66,69],
[54,67,0,73,64,65,65,65],
[53,59,57,0,56,58,53,68],
[62,63,66,74,0,66,61,72],
[67,70,65,72,64,0,67,65],
[61,64,65,77,69,63,0,73],
[58,61,65,62,58,65,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,64,77,93,57,75,54],
[44,0,66,52,65,49,68,48],
[66,64,0,71,55,43,59,65],
[53,78,59,0,61,40,69,58],
[37,65,75,69,0,68,52,70],
[73,81,87,90,62,0,77,59],
[55,62,71,61,78,53,0,61],
[76,82,65,72,60,71,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,50,70,58,66,68],
[57,0,69,62,61,55,64,66],
[67,61,0,60,62,66,66,71],
[80,68,70,0,64,52,63,70],
[60,69,68,66,0,59,62,64],
[72,75,64,78,71,0,65,67],
[64,66,64,67,68,65,0,74],
[62,64,59,60,66,63,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,81,66,70,71,64,70],
[60,0,60,69,59,58,60,64],
[49,70,0,71,66,65,63,54],
[64,61,59,0,56,62,55,56],
[60,71,64,74,0,68,67,67],
[59,72,65,68,62,0,65,64],
[66,70,67,75,63,65,0,62],
[60,66,76,74,63,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,56,67,66,61,62,68],
[63,0,60,73,63,65,60,61],
[74,70,0,66,62,66,63,47],
[63,57,64,0,66,56,64,71],
[64,67,68,64,0,55,72,62],
[69,65,64,74,75,0,68,72],
[68,70,67,66,58,62,0,63],
[62,69,83,59,68,58,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,50,55,64,62,71,70],
[76,0,65,79,61,64,77,80],
[80,65,0,84,71,76,90,71],
[75,51,46,0,65,70,81,77],
[66,69,59,65,0,62,79,73],
[68,66,54,60,68,0,83,87],
[59,53,40,49,51,47,0,57],
[60,50,59,53,57,43,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,62,47,44,44,63,56],
[81,0,63,54,67,62,72,67],
[68,67,0,46,57,61,72,75],
[83,76,84,0,64,70,83,73],
[86,63,73,66,0,56,76,75],
[86,68,69,60,74,0,73,78],
[67,58,58,47,54,57,0,68],
[74,63,55,57,55,52,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,92,84,62,54,78,93],
[62,0,86,55,40,68,82,85],
[38,44,0,36,38,54,52,68],
[46,75,94,0,67,64,58,81],
[68,90,92,63,0,81,84,80],
[76,62,76,66,49,0,69,79],
[52,48,78,72,46,61,0,86],
[37,45,62,49,50,51,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,52,55,60,61,59,60],
[72,0,65,69,69,64,75,68],
[78,65,0,67,73,70,80,76],
[75,61,63,0,70,68,73,66],
[70,61,57,60,0,63,69,67],
[69,66,60,62,67,0,70,62],
[71,55,50,57,61,60,0,53],
[70,62,54,64,63,68,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,43,79,67,63,48,67],
[83,0,80,73,59,73,102,72],
[87,50,0,101,76,86,84,97],
[51,57,29,0,54,63,58,75],
[63,71,54,76,0,52,83,71],
[67,57,44,67,78,0,80,76],
[82,28,46,72,47,50,0,62],
[63,58,33,55,59,54,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,116,32,71,71,60,105],
[53,0,107,60,28,65,53,67],
[14,23,0,21,35,26,53,28],
[98,70,109,0,59,98,98,119],
[59,102,95,71,0,50,46,123],
[59,65,104,32,80,0,48,75],
[70,77,77,32,84,82,0,77],
[25,63,102,11,7,55,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,65,71,66,67,66],
[62,0,62,53,70,68,63,65],
[63,68,0,50,79,69,68,68],
[65,77,80,0,79,82,72,80],
[59,60,51,51,0,59,62,62],
[64,62,61,48,71,0,66,73],
[63,67,62,58,68,64,0,68],
[64,65,62,50,68,57,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,110,88,43,51,61,69,53],
[20,0,52,25,19,39,4,50],
[42,78,0,39,30,58,62,53],
[87,105,91,0,87,71,65,72],
[79,111,100,43,0,45,80,53],
[69,91,72,59,85,0,78,75],
[61,126,68,65,50,52,0,50],
[77,80,77,58,77,55,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,66,66,65,69,65],
[63,0,67,64,70,60,62,59],
[60,63,0,61,64,53,53,59],
[64,66,69,0,77,63,55,64],
[64,60,66,53,0,63,56,59],
[65,70,77,67,67,0,71,65],
[61,68,77,75,74,59,0,66],
[65,71,71,66,71,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,58,79,82,92,83,85],
[63,0,61,81,76,77,71,90],
[72,69,0,67,66,94,64,82],
[51,49,63,0,73,80,59,69],
[48,54,64,57,0,75,56,67],
[38,53,36,50,55,0,40,49],
[47,59,66,71,74,90,0,87],
[45,40,48,61,63,81,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,62,72,73,68,65,96],
[84,0,85,65,94,85,76,119],
[68,45,0,40,54,57,52,104],
[58,65,90,0,89,65,72,114],
[57,36,76,41,0,69,59,107],
[62,45,73,65,61,0,83,94],
[65,54,78,58,71,47,0,104],
[34,11,26,16,23,36,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,91,55,59,51,73,69],
[87,0,99,70,64,67,78,68],
[39,31,0,30,28,53,64,34],
[75,60,100,0,63,96,76,100],
[71,66,102,67,0,51,86,77],
[79,63,77,34,79,0,67,86],
[57,52,66,54,44,63,0,46],
[61,62,96,30,53,44,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,102,50,73,73,99,90],
[52,0,74,64,33,56,53,87],
[28,56,0,44,75,57,80,76],
[80,66,86,0,80,59,85,94],
[57,97,55,50,0,72,53,68],
[57,74,73,71,58,0,71,72],
[31,77,50,45,77,59,0,45],
[40,43,54,36,62,58,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,63,61,81,58,62],
[68,0,86,68,73,86,59,71],
[57,44,0,62,54,51,62,67],
[67,62,68,0,58,65,60,65],
[69,57,76,72,0,69,57,73],
[49,44,79,65,61,0,59,63],
[72,71,68,70,73,71,0,62],
[68,59,63,65,57,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,71,79,64,73,68,80],
[56,0,54,69,54,60,70,62],
[59,76,0,77,63,69,80,72],
[51,61,53,0,65,65,64,59],
[66,76,67,65,0,65,73,64],
[57,70,61,65,65,0,63,59],
[62,60,50,66,57,67,0,59],
[50,68,58,71,66,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,64,55,65,59,59],
[69,0,67,72,57,66,56,56],
[72,63,0,76,66,62,67,60],
[66,58,54,0,55,68,56,51],
[75,73,64,75,0,70,63,67],
[65,64,68,62,60,0,65,58],
[71,74,63,74,67,65,0,71],
[71,74,70,79,63,72,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,81,75,78,66,60,65],
[72,0,71,69,75,53,72,67],
[49,59,0,61,52,44,58,49],
[55,61,69,0,68,47,74,53],
[52,55,78,62,0,53,66,60],
[64,77,86,83,77,0,76,66],
[70,58,72,56,64,54,0,59],
[65,63,81,77,70,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,64,66,67,69,61,64],
[73,0,70,65,74,83,66,66],
[66,60,0,67,67,68,60,68],
[64,65,63,0,64,79,64,64],
[63,56,63,66,0,70,48,58],
[61,47,62,51,60,0,54,53],
[69,64,70,66,82,76,0,72],
[66,64,62,66,72,77,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,52,67,58,51,54,59],
[76,0,60,67,68,59,62,63],
[78,70,0,72,76,71,72,63],
[63,63,58,0,68,50,54,61],
[72,62,54,62,0,62,60,62],
[79,71,59,80,68,0,70,78],
[76,68,58,76,70,60,0,71],
[71,67,67,69,68,52,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,62,52,57,56,58],
[67,0,68,73,71,65,64,68],
[67,62,0,64,58,57,55,62],
[68,57,66,0,55,66,53,74],
[78,59,72,75,0,57,68,62],
[73,65,73,64,73,0,68,63],
[74,66,75,77,62,62,0,69],
[72,62,68,56,68,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,66,77,67,68,84,65],
[56,0,63,59,58,63,68,58],
[64,67,0,68,70,67,78,68],
[53,71,62,0,64,54,75,62],
[63,72,60,66,0,58,78,63],
[62,67,63,76,72,0,85,66],
[46,62,52,55,52,45,0,52],
[65,72,62,68,67,64,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,64,62,56,65,64],
[61,0,65,65,57,59,70,64],
[63,65,0,62,51,62,59,65],
[66,65,68,0,65,59,63,63],
[68,73,79,65,0,66,70,64],
[74,71,68,71,64,0,63,71],
[65,60,71,67,60,67,0,68],
[66,66,65,67,66,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,73,69,69,69,69],
[66,0,75,70,75,73,64,64],
[61,55,0,63,66,70,67,68],
[57,60,67,0,68,64,63,65],
[61,55,64,62,0,65,59,66],
[61,57,60,66,65,0,71,60],
[61,66,63,67,71,59,0,70],
[61,66,62,65,64,70,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,58,60,62,67,68,69],
[74,0,65,73,67,73,78,67],
[72,65,0,73,71,69,80,79],
[70,57,57,0,66,60,69,63],
[68,63,59,64,0,72,63,66],
[63,57,61,70,58,0,60,63],
[62,52,50,61,67,70,0,64],
[61,63,51,67,64,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,63,69,63,64,66],
[70,0,60,63,71,68,66,75],
[70,70,0,74,69,62,70,76],
[67,67,56,0,72,66,65,71],
[61,59,61,58,0,65,62,68],
[67,62,68,64,65,0,68,73],
[66,64,60,65,68,62,0,71],
[64,55,54,59,62,57,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,75,85,63,66,67,86],
[54,0,35,66,60,52,58,54],
[55,95,0,80,68,66,54,60],
[45,64,50,0,62,47,51,51],
[67,70,62,68,0,81,46,69],
[64,78,64,83,49,0,60,77],
[63,72,76,79,84,70,0,65],
[44,76,70,79,61,53,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,13,56,44,58,95],
[60,0,83,47,76,50,66,108],
[65,47,0,57,63,51,55,73],
[117,83,73,0,109,50,71,93],
[74,54,67,21,0,31,48,95],
[86,80,79,80,99,0,61,122],
[72,64,75,59,82,69,0,94],
[35,22,57,37,35,8,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,43,11,24,28,71,47],
[81,0,83,73,73,48,86,73],
[87,47,0,64,78,61,98,61],
[119,57,66,0,50,55,72,49],
[106,57,52,80,0,79,97,55],
[102,82,69,75,51,0,64,64],
[59,44,32,58,33,66,0,36],
[83,57,69,81,75,66,94,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,65,67,65,65,67],
[60,0,69,60,67,59,54,59],
[61,61,0,62,64,66,58,58],
[65,70,68,0,66,71,63,61],
[63,63,66,64,0,60,58,61],
[65,71,64,59,70,0,63,65],
[65,76,72,67,72,67,0,73],
[63,71,72,69,69,65,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,56,54,63,62,62,59],
[62,0,57,64,69,69,60,65],
[74,73,0,69,73,62,69,71],
[76,66,61,0,66,67,64,71],
[67,61,57,64,0,62,61,68],
[68,61,68,63,68,0,63,62],
[68,70,61,66,69,67,0,69],
[71,65,59,59,62,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,85,62,80,67,61,63],
[63,0,69,63,69,64,50,61],
[45,61,0,51,72,51,45,60],
[68,67,79,0,75,61,68,66],
[50,61,58,55,0,51,44,63],
[63,66,79,69,79,0,64,69],
[69,80,85,62,86,66,0,75],
[67,69,70,64,67,61,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,67,79,79,89,86,59],
[47,0,52,73,73,75,85,66],
[63,78,0,74,78,94,92,87],
[51,57,56,0,59,78,81,67],
[51,57,52,71,0,91,86,66],
[41,55,36,52,39,0,58,47],
[44,45,38,49,44,72,0,62],
[71,64,43,63,64,83,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,79,58,78,66,64,73],
[54,0,84,84,78,78,84,73],
[51,46,0,64,48,75,60,64],
[72,46,66,0,67,64,63,78],
[52,52,82,63,0,59,75,73],
[64,52,55,66,71,0,85,76],
[66,46,70,67,55,45,0,53],
[57,57,66,52,57,54,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,79,56,72,55,67,71],
[50,0,75,58,40,52,55,64],
[51,55,0,42,24,47,64,68],
[74,72,88,0,65,71,78,78],
[58,90,106,65,0,83,71,82],
[75,78,83,59,47,0,81,82],
[63,75,66,52,59,49,0,57],
[59,66,62,52,48,48,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,65,69,59,49,56,56],
[77,0,86,67,61,63,71,69],
[65,44,0,59,53,55,53,49],
[61,63,71,0,64,67,57,44],
[71,69,77,66,0,57,56,66],
[81,67,75,63,73,0,70,63],
[74,59,77,73,74,60,0,67],
[74,61,81,86,64,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,62,74,50,59,59,62],
[79,0,79,72,71,70,62,67],
[68,51,0,62,59,57,50,59],
[56,58,68,0,55,59,59,65],
[80,59,71,75,0,63,73,70],
[71,60,73,71,67,0,62,71],
[71,68,80,71,57,68,0,73],
[68,63,71,65,60,59,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,80,58,63,68,80,58],
[76,0,69,64,80,54,77,69],
[50,61,0,63,50,63,49,52],
[72,66,67,0,53,67,68,73],
[67,50,80,77,0,54,65,70],
[62,76,67,63,76,0,75,72],
[50,53,81,62,65,55,0,69],
[72,61,78,57,60,58,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,61,61,68,62,67,62],
[59,0,70,64,64,59,59,64],
[69,60,0,63,73,58,68,61],
[69,66,67,0,64,65,69,64],
[62,66,57,66,0,62,61,60],
[68,71,72,65,68,0,63,65],
[63,71,62,61,69,67,0,66],
[68,66,69,66,70,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,56,69,66,65,64],
[64,0,64,65,66,73,71,68],
[69,66,0,60,71,67,71,64],
[74,65,70,0,71,68,72,67],
[61,64,59,59,0,68,63,55],
[64,57,63,62,62,0,59,50],
[65,59,59,58,67,71,0,65],
[66,62,66,63,75,80,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,79,65,79,75,64,68],
[65,0,72,68,78,67,62,72],
[51,58,0,55,65,61,58,58],
[65,62,75,0,74,68,70,71],
[51,52,65,56,0,56,59,58],
[55,63,69,62,74,0,55,56],
[66,68,72,60,71,75,0,66],
[62,58,72,59,72,74,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,66,53,61,68,64],
[66,0,65,66,57,59,71,59],
[65,65,0,79,58,69,67,60],
[64,64,51,0,58,69,65,57],
[77,73,72,72,0,63,79,65],
[69,71,61,61,67,0,77,66],
[62,59,63,65,51,53,0,63],
[66,71,70,73,65,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,66,66,78,68,76],
[65,0,61,60,60,68,60,67],
[62,69,0,56,58,66,60,70],
[64,70,74,0,76,78,69,72],
[64,70,72,54,0,74,71,68],
[52,62,64,52,56,0,63,65],
[62,70,70,61,59,67,0,72],
[54,63,60,58,62,65,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,75,77,69,70,63],
[58,0,66,69,63,53,64,62],
[64,64,0,66,70,54,55,62],
[55,61,64,0,53,52,60,56],
[53,67,60,77,0,58,53,61],
[61,77,76,78,72,0,71,63],
[60,66,75,70,77,59,0,67],
[67,68,68,74,69,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,53,57,87,97,75,72],
[61,0,48,60,83,84,54,67],
[77,82,0,43,74,89,75,71],
[73,70,87,0,80,79,63,78],
[43,47,56,50,0,56,61,66],
[33,46,41,51,74,0,43,44],
[55,76,55,67,69,87,0,70],
[58,63,59,52,64,86,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,66,71,71,66,62,62],
[73,0,85,71,91,63,68,79],
[64,45,0,79,68,51,61,58],
[59,59,51,0,78,53,72,69],
[59,39,62,52,0,53,54,64],
[64,67,79,77,77,0,73,66],
[68,62,69,58,76,57,0,65],
[68,51,72,61,66,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,91,77,99,57,51],
[67,0,61,83,54,97,67,72],
[69,69,0,63,74,93,55,74],
[39,47,67,0,54,87,63,47],
[53,76,56,76,0,95,43,65],
[31,33,37,43,35,0,29,43],
[73,63,75,67,87,101,0,68],
[79,58,56,83,65,87,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,69,60,66,68,67],
[58,0,73,73,66,60,67,72],
[65,57,0,69,57,74,70,74],
[61,57,61,0,50,56,60,67],
[70,64,73,80,0,72,67,67],
[64,70,56,74,58,0,70,69],
[62,63,60,70,63,60,0,59],
[63,58,56,63,63,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,70,58,52,54,62],
[73,0,73,79,71,61,67,73],
[68,57,0,78,74,63,67,68],
[60,51,52,0,50,59,56,57],
[72,59,56,80,0,62,63,66],
[78,69,67,71,68,0,58,71],
[76,63,63,74,67,72,0,71],
[68,57,62,73,64,59,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,66,27,15,15,64,39],
[115,0,51,76,115,79,76,51],
[64,79,0,91,79,79,64,39],
[103,54,39,0,118,79,64,39],
[115,15,51,12,0,79,64,39],
[115,51,51,51,51,0,115,51],
[66,54,66,66,66,15,0,66],
[91,79,91,91,91,79,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,93,83,63,84,71,78],
[47,0,71,45,44,51,38,26],
[37,59,0,53,49,62,59,51],
[47,85,77,0,57,66,31,38],
[67,86,81,73,0,67,49,48],
[46,79,68,64,63,0,60,49],
[59,92,71,99,81,70,0,73],
[52,104,79,92,82,81,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,61,68,66,70,59],
[68,0,70,63,63,67,69,60],
[62,60,0,66,53,61,47,66],
[69,67,64,0,67,62,66,66],
[62,67,77,63,0,62,66,61],
[64,63,69,68,68,0,65,66],
[60,61,83,64,64,65,0,62],
[71,70,64,64,69,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,71,64,55,71,62,41],
[74,0,41,64,62,45,36,48],
[59,89,0,36,36,43,66,71],
[66,66,94,0,66,59,59,101],
[75,68,94,64,0,39,68,48],
[59,85,87,71,91,0,89,71],
[68,94,64,71,62,41,0,48],
[89,82,59,29,82,59,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,75,63,71,65,61,39],
[67,0,69,75,81,66,57,66],
[55,61,0,85,71,46,72,32],
[67,55,45,0,59,53,39,46],
[59,49,59,71,0,58,69,33],
[65,64,84,77,72,0,83,51],
[69,73,58,91,61,47,0,42],
[91,64,98,84,97,79,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,47,50,45,35,70,61],
[84,0,66,64,74,50,65,61],
[83,64,0,83,76,67,61,81],
[80,66,47,0,64,77,70,51],
[85,56,54,66,0,60,75,55],
[95,80,63,53,70,0,94,67],
[60,65,69,60,55,36,0,41],
[69,69,49,79,75,63,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,53,56,60,64,57,64],
[63,0,56,66,59,68,62,65],
[77,74,0,70,64,76,73,78],
[74,64,60,0,62,58,59,66],
[70,71,66,68,0,65,64,67],
[66,62,54,72,65,0,73,65],
[73,68,57,71,66,57,0,71],
[66,65,52,64,63,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,49,62,67,60,60],
[68,0,57,47,63,65,58,57],
[69,73,0,59,70,64,69,66],
[81,83,71,0,72,63,69,74],
[68,67,60,58,0,61,64,66],
[63,65,66,67,69,0,67,68],
[70,72,61,61,66,63,0,65],
[70,73,64,56,64,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,76,71,81,70,70,64],
[63,0,70,73,76,66,65,66],
[54,60,0,61,73,58,65,59],
[59,57,69,0,63,54,57,51],
[49,54,57,67,0,51,55,60],
[60,64,72,76,79,0,71,70],
[60,65,65,73,75,59,0,58],
[66,64,71,79,70,60,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,106,70,109,71,72,58],
[51,0,87,46,55,67,64,53],
[24,43,0,20,36,57,56,43],
[60,84,110,0,73,61,62,78],
[21,75,94,57,0,38,60,64],
[59,63,73,69,92,0,78,57],
[58,66,74,68,70,52,0,46],
[72,77,87,52,66,73,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,59,67,47,55,68],
[60,0,58,52,61,56,59,62],
[63,72,0,61,66,60,65,62],
[71,78,69,0,77,64,70,76],
[63,69,64,53,0,67,66,62],
[83,74,70,66,63,0,69,71],
[75,71,65,60,64,61,0,64],
[62,68,68,54,68,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,67,59,59,56,57,66],
[68,0,71,67,63,69,69,79],
[63,59,0,63,55,55,51,58],
[71,63,67,0,63,69,62,65],
[71,67,75,67,0,68,64,66],
[74,61,75,61,62,0,67,72],
[73,61,79,68,66,63,0,75],
[64,51,72,65,64,58,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,63,67,58,67,73,58],
[71,0,71,80,65,70,76,67],
[67,59,0,64,65,77,73,77],
[63,50,66,0,63,75,64,66],
[72,65,65,67,0,85,73,67],
[63,60,53,55,45,0,68,55],
[57,54,57,66,57,62,0,62],
[72,63,53,64,63,75,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,72,61,66,69,57,86],
[68,0,69,71,78,69,55,80],
[58,61,0,52,83,78,57,79],
[69,59,78,0,78,69,72,78],
[64,52,47,52,0,61,54,77],
[61,61,52,61,69,0,45,78],
[73,75,73,58,76,85,0,84],
[44,50,51,52,53,52,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,76,61,65,73,74,59],
[61,0,78,71,75,75,72,70],
[54,52,0,55,57,63,50,59],
[69,59,75,0,64,73,67,64],
[65,55,73,66,0,71,69,68],
[57,55,67,57,59,0,67,71],
[56,58,80,63,61,63,0,76],
[71,60,71,66,62,59,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,63,58,68,57,54],
[72,0,66,62,63,77,71,55],
[66,64,0,54,64,63,53,61],
[67,68,76,0,61,72,67,64],
[72,67,66,69,0,68,68,65],
[62,53,67,58,62,0,59,62],
[73,59,77,63,62,71,0,59],
[76,75,69,66,65,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,61,60,64,70,67],
[72,0,62,65,66,76,76,73],
[68,68,0,58,69,70,69,67],
[69,65,72,0,73,64,64,71],
[70,64,61,57,0,62,77,71],
[66,54,60,66,68,0,68,63],
[60,54,61,66,53,62,0,59],
[63,57,63,59,59,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,57,66,61,66,60,64],
[56,0,51,63,57,66,66,58],
[73,79,0,65,69,83,78,70],
[64,67,65,0,61,64,60,63],
[69,73,61,69,0,61,71,63],
[64,64,47,66,69,0,52,58],
[70,64,52,70,59,78,0,76],
[66,72,60,67,67,72,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,53,62,52,55,66],
[65,0,73,76,67,66,74,73],
[67,57,0,65,61,70,67,58],
[77,54,65,0,56,57,68,62],
[68,63,69,74,0,63,71,69],
[78,64,60,73,67,0,68,59],
[75,56,63,62,59,62,0,70],
[64,57,72,68,61,71,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,65,56,69,66,64],
[64,0,59,66,64,66,66,68],
[65,71,0,57,63,65,66,63],
[65,64,73,0,63,61,69,69],
[74,66,67,67,0,65,66,68],
[61,64,65,69,65,0,68,70],
[64,64,64,61,64,62,0,67],
[66,62,67,61,62,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,51,58,61,48,56,57],
[68,0,62,63,62,53,65,63],
[79,68,0,61,71,68,66,72],
[72,67,69,0,63,55,66,64],
[69,68,59,67,0,66,72,65],
[82,77,62,75,64,0,71,73],
[74,65,64,64,58,59,0,64],
[73,67,58,66,65,57,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,62,61,76,72,66,76],
[47,0,49,54,58,62,61,63],
[68,81,0,65,84,66,66,69],
[69,76,65,0,71,73,63,71],
[54,72,46,59,0,53,68,58],
[58,68,64,57,77,0,65,64],
[64,69,64,67,62,65,0,61],
[54,67,61,59,72,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,60,63,67,53,62],
[70,0,65,69,62,63,61,62],
[71,65,0,64,65,68,72,74],
[70,61,66,0,68,70,70,62],
[67,68,65,62,0,70,62,69],
[63,67,62,60,60,0,64,74],
[77,69,58,60,68,66,0,64],
[68,68,56,68,61,56,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,82,74,63,68,74,77],
[54,0,65,57,58,63,64,70],
[48,65,0,50,67,61,56,59],
[56,73,80,0,65,75,72,69],
[67,72,63,65,0,63,64,73],
[62,67,69,55,67,0,60,72],
[56,66,74,58,66,70,0,67],
[53,60,71,61,57,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,85,86,42,82,58,70],
[63,0,61,53,54,102,66,64],
[45,69,0,32,43,77,43,47],
[44,77,98,0,77,94,82,71],
[88,76,87,53,0,97,75,84],
[48,28,53,36,33,0,57,50],
[72,64,87,48,55,73,0,59],
[60,66,83,59,46,80,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,63,64,64,69,61],
[68,0,65,68,72,66,76,65],
[70,65,0,69,68,70,70,70],
[67,62,61,0,61,65,65,59],
[66,58,62,69,0,74,67,67],
[66,64,60,65,56,0,66,65],
[61,54,60,65,63,64,0,62],
[69,65,60,71,63,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,58,71,58,72,71],
[66,0,70,59,65,60,73,78],
[69,60,0,75,70,67,78,80],
[72,71,55,0,70,73,73,78],
[59,65,60,60,0,53,62,65],
[72,70,63,57,77,0,79,86],
[58,57,52,57,68,51,0,59],
[59,52,50,52,65,44,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,53,51,59,41,59,58],
[85,0,74,80,61,67,77,71],
[77,56,0,60,69,50,47,53],
[79,50,70,0,69,46,58,44],
[71,69,61,61,0,46,71,56],
[89,63,80,84,84,0,80,49],
[71,53,83,72,59,50,0,69],
[72,59,77,86,74,81,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,82,67,85,92,51,85],
[97,0,74,73,78,86,33,56],
[48,56,0,43,38,67,60,38],
[63,57,87,0,52,71,57,45],
[45,52,92,78,0,109,68,81],
[38,44,63,59,21,0,55,28],
[79,97,70,73,62,75,0,81],
[45,74,92,85,49,102,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,52,60,60,43,79,65],
[64,0,60,76,62,60,101,66],
[78,70,0,79,82,70,92,56],
[70,54,51,0,52,59,76,52],
[70,68,48,78,0,57,98,83],
[87,70,60,71,73,0,93,84],
[51,29,38,54,32,37,0,65],
[65,64,74,78,47,46,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,67,61,69,68,63,58],
[73,0,66,76,82,62,66,62],
[63,64,0,67,79,64,68,68],
[69,54,63,0,58,61,59,54],
[61,48,51,72,0,57,52,55],
[62,68,66,69,73,0,57,60],
[67,64,62,71,78,73,0,66],
[72,68,62,76,75,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,67,71,70,68,62,74],
[52,0,49,52,63,51,54,66],
[63,81,0,67,71,70,63,76],
[59,78,63,0,68,69,59,67],
[60,67,59,62,0,64,59,62],
[62,79,60,61,66,0,70,69],
[68,76,67,71,71,60,0,74],
[56,64,54,63,68,61,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,67,76,71,72,82],
[68,0,76,66,74,70,65,73],
[66,54,0,56,60,62,70,70],
[63,64,74,0,77,74,70,81],
[54,56,70,53,0,71,71,84],
[59,60,68,56,59,0,61,79],
[58,65,60,60,59,69,0,80],
[48,57,60,49,46,51,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,57,59,54,71,75],
[61,0,69,71,67,68,75,83],
[67,61,0,64,68,51,60,72],
[73,59,66,0,68,66,73,65],
[71,63,62,62,0,69,69,65],
[76,62,79,64,61,0,65,81],
[59,55,70,57,61,65,0,67],
[55,47,58,65,65,49,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,43,72,95,94,61,63],
[80,0,49,70,81,73,67,69],
[87,81,0,53,76,82,93,67],
[58,60,77,0,72,77,82,52],
[35,49,54,58,0,54,51,30],
[36,57,48,53,76,0,58,52],
[69,63,37,48,79,72,0,48],
[67,61,63,78,100,78,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,71,37,78,78,65,54],
[75,0,74,65,78,93,72,63],
[59,56,0,70,77,75,74,56],
[93,65,60,0,83,79,84,82],
[52,52,53,47,0,57,75,52],
[52,37,55,51,73,0,67,41],
[65,58,56,46,55,63,0,39],
[76,67,74,48,78,89,91,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,76,61,58,70,76],
[67,0,62,73,69,55,64,63],
[71,68,0,75,71,58,58,61],
[54,57,55,0,58,45,50,58],
[69,61,59,72,0,68,64,70],
[72,75,72,85,62,0,61,78],
[60,66,72,80,66,69,0,68],
[54,67,69,72,60,52,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,81,73,69,72,61,80],
[65,0,79,69,69,60,69,74],
[49,51,0,60,60,66,53,59],
[57,61,70,0,68,62,56,63],
[61,61,70,62,0,63,53,66],
[58,70,64,68,67,0,68,74],
[69,61,77,74,77,62,0,76],
[50,56,71,67,64,56,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,46,75,78,56,60],
[66,0,81,70,62,71,77,71],
[59,49,0,45,64,62,56,75],
[84,60,85,0,94,95,71,70],
[55,68,66,36,0,78,57,63],
[52,59,68,35,52,0,66,61],
[74,53,74,59,73,64,0,64],
[70,59,55,60,67,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,64,64,59,62,75],
[70,0,50,56,57,48,47,64],
[63,80,0,67,72,72,74,77],
[66,74,63,0,63,66,64,74],
[66,73,58,67,0,63,63,70],
[71,82,58,64,67,0,56,70],
[68,83,56,66,67,74,0,70],
[55,66,53,56,60,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,53,69,60,69,64,68],
[72,0,65,69,82,74,79,74],
[77,65,0,73,80,73,73,76],
[61,61,57,0,65,70,72,63],
[70,48,50,65,0,72,68,69],
[61,56,57,60,58,0,69,68],
[66,51,57,58,62,61,0,59],
[62,56,54,67,61,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,91,89,2,130,40,91],
[88,0,130,128,88,130,39,90],
[39,0,0,79,39,79,39,39],
[41,2,51,0,2,81,0,2],
[128,42,91,128,0,130,79,130],
[0,0,51,49,0,0,0,51],
[90,91,91,130,51,130,0,91],
[39,40,91,128,0,79,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,79,63,71,67,71,48],
[64,0,68,77,84,96,52,71],
[51,62,0,61,62,67,28,51],
[67,53,69,0,58,75,64,22],
[59,46,68,72,0,58,32,24],
[63,34,63,55,72,0,60,58],
[59,78,102,66,98,70,0,34],
[82,59,79,108,106,72,96,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,59,66,69,60,65],
[68,0,64,62,62,66,65,66],
[69,66,0,70,69,62,71,69],
[71,68,60,0,61,69,72,68],
[64,68,61,69,0,78,69,52],
[61,64,68,61,52,0,63,60],
[70,65,59,58,61,67,0,65],
[65,64,61,62,78,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,66,71,66,64,71],
[62,0,75,68,74,71,62,68],
[57,55,0,58,72,65,58,61],
[64,62,72,0,73,63,68,67],
[59,56,58,57,0,55,59,67],
[64,59,65,67,75,0,55,70],
[66,68,72,62,71,75,0,68],
[59,62,69,63,63,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,77,77,63,69,68,79],
[61,0,79,74,64,67,69,71],
[53,51,0,49,50,62,47,68],
[53,56,81,0,57,60,55,72],
[67,66,80,73,0,74,63,74],
[61,63,68,70,56,0,63,74],
[62,61,83,75,67,67,0,74],
[51,59,62,58,56,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,65,62,67,70,80],
[70,0,71,63,82,60,63,85],
[66,59,0,66,85,73,53,59],
[65,67,64,0,60,62,71,77],
[68,48,45,70,0,68,59,67],
[63,70,57,68,62,0,70,77],
[60,67,77,59,71,60,0,78],
[50,45,71,53,63,53,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,55,61,64,61,56,57],
[59,0,61,43,52,53,47,49],
[75,69,0,56,69,62,50,61],
[69,87,74,0,69,71,74,62],
[66,78,61,61,0,64,70,62],
[69,77,68,59,66,0,72,66],
[74,83,80,56,60,58,0,60],
[73,81,69,68,68,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,75,69,74,86,83,62],
[59,0,71,64,61,63,71,66],
[55,59,0,57,56,66,61,54],
[61,66,73,0,77,78,59,54],
[56,69,74,53,0,71,69,71],
[44,67,64,52,59,0,53,52],
[47,59,69,71,61,77,0,67],
[68,64,76,76,59,78,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,41,35,47,43,44,41],
[72,0,57,60,71,44,52,54],
[89,73,0,59,75,60,56,54],
[95,70,71,0,74,57,62,77],
[83,59,55,56,0,53,66,57],
[87,86,70,73,77,0,63,78],
[86,78,74,68,64,67,0,64],
[89,76,76,53,73,52,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,71,72,66,65,73,78],
[54,0,61,64,66,56,65,57],
[59,69,0,64,66,60,70,64],
[58,66,66,0,60,70,74,70],
[64,64,64,70,0,68,65,62],
[65,74,70,60,62,0,64,69],
[57,65,60,56,65,66,0,70],
[52,73,66,60,68,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,71,62,63,71,65],
[69,0,63,75,66,70,62,66],
[66,67,0,75,59,58,64,69],
[59,55,55,0,56,56,62,68],
[68,64,71,74,0,63,72,68],
[67,60,72,74,67,0,71,68],
[59,68,66,68,58,59,0,61],
[65,64,61,62,62,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,77,69,66,63,70,66],
[54,0,59,56,60,61,56,57],
[53,71,0,57,61,64,63,61],
[61,74,73,0,68,69,67,70],
[64,70,69,62,0,66,73,64],
[67,69,66,61,64,0,71,62],
[60,74,67,63,57,59,0,55],
[64,73,69,60,66,68,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,61,63,60,58,65],
[64,0,62,57,56,62,53,58],
[63,68,0,65,62,73,63,71],
[69,73,65,0,66,70,63,61],
[67,74,68,64,0,63,62,61],
[70,68,57,60,67,0,53,47],
[72,77,67,67,68,77,0,65],
[65,72,59,69,69,83,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,57,66,63,63,63,70],
[76,0,58,63,74,64,64,65],
[73,72,0,65,79,65,68,63],
[64,67,65,0,66,70,60,64],
[67,56,51,64,0,53,52,58],
[67,66,65,60,77,0,59,66],
[67,66,62,70,78,71,0,70],
[60,65,67,66,72,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,74,76,46,71,73,73],
[57,0,86,74,90,110,98,88],
[56,44,0,24,63,60,74,64],
[54,56,106,0,63,58,101,81],
[84,40,67,67,0,90,86,91],
[59,20,70,72,40,0,67,45],
[57,32,56,29,44,63,0,66],
[57,42,66,49,39,85,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,68,63,60,63,70],
[74,0,68,79,63,77,67,74],
[73,62,0,78,61,72,70,67],
[62,51,52,0,54,65,59,62],
[67,67,69,76,0,67,63,83],
[70,53,58,65,63,0,53,67],
[67,63,60,71,67,77,0,69],
[60,56,63,68,47,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,60,59,68,57,59,58],
[76,0,58,61,60,52,59,62],
[70,72,0,65,59,72,75,67],
[71,69,65,0,58,56,64,73],
[62,70,71,72,0,63,68,71],
[73,78,58,74,67,0,74,72],
[71,71,55,66,62,56,0,62],
[72,68,63,57,59,58,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,57,75,86,65,73],
[63,0,74,58,61,66,69,58],
[63,56,0,61,60,69,72,67],
[73,72,69,0,63,70,71,63],
[55,69,70,67,0,69,65,80],
[44,64,61,60,61,0,58,69],
[65,61,58,59,65,72,0,77],
[57,72,63,67,50,61,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,65,56,81,67,50],
[60,0,56,68,70,58,63,58],
[63,74,0,62,60,52,51,52],
[65,62,68,0,66,62,49,51],
[74,60,70,64,0,62,62,56],
[49,72,78,68,68,0,63,61],
[63,67,79,81,68,67,0,72],
[80,72,78,79,74,69,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,59,63,62,61,62],
[70,0,66,64,72,66,66,68],
[64,64,0,67,60,59,72,58],
[71,66,63,0,64,63,60,69],
[67,58,70,66,0,63,64,59],
[68,64,71,67,67,0,66,76],
[69,64,58,70,66,64,0,73],
[68,62,72,61,71,54,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,43,49,29,33,45,62],
[77,0,32,60,44,35,48,77],
[87,98,0,73,88,67,45,57],
[81,70,57,0,56,64,76,69],
[101,86,42,74,0,61,47,49],
[97,95,63,66,69,0,45,73],
[85,82,85,54,83,85,0,97],
[68,53,73,61,81,57,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,54,71,58,66,70,67],
[63,0,64,70,73,66,68,75],
[76,66,0,66,64,75,76,70],
[59,60,64,0,70,69,70,59],
[72,57,66,60,0,71,74,71],
[64,64,55,61,59,0,70,60],
[60,62,54,60,56,60,0,56],
[63,55,60,71,59,70,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,70,70,65,75,71,78],
[55,0,64,60,66,64,60,63],
[60,66,0,65,62,66,66,72],
[60,70,65,0,65,71,69,72],
[65,64,68,65,0,63,66,70],
[55,66,64,59,67,0,66,66],
[59,70,64,61,64,64,0,74],
[52,67,58,58,60,64,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,58,61,67,63,66,74],
[65,0,65,62,65,66,78,80],
[72,65,0,71,71,65,86,70],
[69,68,59,0,64,60,72,74],
[63,65,59,66,0,62,70,73],
[67,64,65,70,68,0,66,76],
[64,52,44,58,60,64,0,69],
[56,50,60,56,57,54,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,54,70,59,65,44,68],
[70,0,62,56,60,59,71,77],
[76,68,0,58,53,62,60,66],
[60,74,72,0,62,82,47,61],
[71,70,77,68,0,69,53,69],
[65,71,68,48,61,0,54,69],
[86,59,70,83,77,76,0,94],
[62,53,64,69,61,61,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,79,55,64,67,70,72],
[57,0,69,62,69,64,69,61],
[51,61,0,51,53,59,67,58],
[75,68,79,0,72,65,68,64],
[66,61,77,58,0,66,67,62],
[63,66,71,65,64,0,69,63],
[60,61,63,62,63,61,0,61],
[58,69,72,66,68,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,86,86,52,57,54,82],
[58,0,58,79,55,45,76,69],
[44,72,0,75,58,64,66,73],
[44,51,55,0,53,53,40,72],
[78,75,72,77,0,56,48,99],
[73,85,66,77,74,0,43,84],
[76,54,64,90,82,87,0,77],
[48,61,57,58,31,46,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,54,55,58,52,49,54],
[65,0,58,66,66,60,64,67],
[76,72,0,70,68,68,65,69],
[75,64,60,0,76,56,65,71],
[72,64,62,54,0,55,57,66],
[78,70,62,74,75,0,63,64],
[81,66,65,65,73,67,0,68],
[76,63,61,59,64,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,61,69,91,85,81,69],
[60,0,66,58,81,71,58,55],
[69,64,0,60,77,73,69,56],
[61,72,70,0,77,77,78,60],
[39,49,53,53,0,57,52,48],
[45,59,57,53,73,0,58,54],
[49,72,61,52,78,72,0,51],
[61,75,74,70,82,76,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,59,59,60,55,55,70],
[74,0,70,59,74,65,69,84],
[71,60,0,67,69,69,59,68],
[71,71,63,0,76,71,64,66],
[70,56,61,54,0,58,51,72],
[75,65,61,59,72,0,54,72],
[75,61,71,66,79,76,0,94],
[60,46,62,64,58,58,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,69,64,61,65,62,69],
[78,0,71,69,61,64,64,68],
[61,59,0,70,54,56,67,60],
[66,61,60,0,55,61,62,54],
[69,69,76,75,0,63,72,67],
[65,66,74,69,67,0,66,64],
[68,66,63,68,58,64,0,62],
[61,62,70,76,63,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,71,60,68,64,63],
[69,0,75,71,69,76,64,66],
[60,55,0,57,58,67,57,50],
[59,59,73,0,65,72,69,65],
[70,61,72,65,0,69,66,64],
[62,54,63,58,61,0,66,60],
[66,66,73,61,64,64,0,63],
[67,64,80,65,66,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,65,77,50,62,90,66],
[50,0,53,44,34,69,59,44],
[65,77,0,51,59,64,72,63],
[53,86,79,0,69,79,94,53],
[80,96,71,61,0,61,83,76],
[68,61,66,51,69,0,72,59],
[40,71,58,36,47,58,0,48],
[64,86,67,77,54,71,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,94,66,54,73,81,68],
[45,0,99,36,40,68,84,51],
[36,31,0,32,49,49,54,44],
[64,94,98,0,66,92,109,87],
[76,90,81,64,0,71,107,92],
[57,62,81,38,59,0,60,80],
[49,46,76,21,23,70,0,57],
[62,79,86,43,38,50,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,77,65,67,62,80,54],
[61,0,56,60,46,55,66,54],
[53,74,0,67,55,59,69,55],
[65,70,63,0,71,66,81,65],
[63,84,75,59,0,62,74,64],
[68,75,71,64,68,0,73,57],
[50,64,61,49,56,57,0,51],
[76,76,75,65,66,73,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,60,64,47,65,74,55],
[62,0,57,68,51,67,75,52],
[70,73,0,60,54,73,87,66],
[66,62,70,0,42,53,73,48],
[83,79,76,88,0,79,84,62],
[65,63,57,77,51,0,80,54],
[56,55,43,57,46,50,0,54],
[75,78,64,82,68,76,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,57,60,67,63,70],
[64,0,64,62,60,52,67,70],
[70,66,0,54,64,58,73,60],
[73,68,76,0,69,60,71,66],
[70,70,66,61,0,57,68,65],
[63,78,72,70,73,0,68,70],
[67,63,57,59,62,62,0,63],
[60,60,70,64,65,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,64,71,67,76,64,60],
[74,0,78,61,78,83,74,70],
[66,52,0,58,56,79,45,47],
[59,69,72,0,74,68,56,57],
[63,52,74,56,0,80,55,58],
[54,47,51,62,50,0,55,54],
[66,56,85,74,75,75,0,65],
[70,60,83,73,72,76,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,77,69,64,105,93,88],
[40,0,28,47,69,107,97,82],
[53,102,0,80,87,104,80,84],
[61,83,50,0,53,117,93,97],
[66,61,43,77,0,100,96,87],
[25,23,26,13,30,0,62,56],
[37,33,50,37,34,68,0,58],
[42,48,46,33,43,74,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,47,70,57,53,65],
[70,0,48,60,60,68,56,53],
[73,82,0,66,78,78,75,59],
[83,70,64,0,76,74,66,63],
[60,70,52,54,0,62,48,41],
[73,62,52,56,68,0,58,59],
[77,74,55,64,82,72,0,58],
[65,77,71,67,89,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,67,62,50,71,63,67],
[69,0,61,63,54,65,62,71],
[63,69,0,59,48,49,52,59],
[68,67,71,0,66,64,73,63],
[80,76,82,64,0,72,70,80],
[59,65,81,66,58,0,65,62],
[67,68,78,57,60,65,0,69],
[63,59,71,67,50,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,76,76,62,53,68,77],
[61,0,74,72,66,51,71,62],
[54,56,0,74,67,57,69,72],
[54,58,56,0,60,55,63,63],
[68,64,63,70,0,65,71,71],
[77,79,73,75,65,0,73,71],
[62,59,61,67,59,57,0,63],
[53,68,58,67,59,59,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,73,41,39,93,66,54],
[64,0,69,77,49,63,63,42],
[57,61,0,52,41,76,45,41],
[89,53,78,0,68,91,61,50],
[91,81,89,62,0,84,52,74],
[37,67,54,39,46,0,68,55],
[64,67,85,69,78,62,0,65],
[76,88,89,80,56,75,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,58,59,52,46,54,56],
[73,0,76,71,69,58,64,73],
[72,54,0,63,63,66,54,55],
[71,59,67,0,64,48,56,61],
[78,61,67,66,0,54,55,67],
[84,72,64,82,76,0,70,70],
[76,66,76,74,75,60,0,72],
[74,57,75,69,63,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,66,64,65,66,72,58],
[72,0,71,77,55,64,64,64],
[64,59,0,66,51,66,67,59],
[66,53,64,0,56,66,63,51],
[65,75,79,74,0,71,65,72],
[64,66,64,64,59,0,69,58],
[58,66,63,67,65,61,0,56],
[72,66,71,79,58,72,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,58,61,66,70,74,66],
[54,0,62,52,56,82,65,57],
[72,68,0,55,69,79,77,68],
[69,78,75,0,75,91,71,64],
[64,74,61,55,0,70,62,67],
[60,48,51,39,60,0,66,61],
[56,65,53,59,68,64,0,58],
[64,73,62,66,63,69,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,69,63,61,69,62],
[61,0,56,73,56,63,70,57],
[64,74,0,67,69,70,73,64],
[61,57,63,0,62,61,79,61],
[67,74,61,68,0,67,67,74],
[69,67,60,69,63,0,69,65],
[61,60,57,51,63,61,0,55],
[68,73,66,69,56,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,50,63,63,63,58,60],
[69,0,71,69,72,70,67,64],
[80,59,0,71,73,80,66,69],
[67,61,59,0,69,69,63,69],
[67,58,57,61,0,70,63,64],
[67,60,50,61,60,0,57,64],
[72,63,64,67,67,73,0,67],
[70,66,61,61,66,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,49,67,59,69,77],
[70,0,67,49,66,52,57,72],
[66,63,0,69,71,67,71,75],
[81,81,61,0,82,66,64,87],
[63,64,59,48,0,53,53,54],
[71,78,63,64,77,0,64,72],
[61,73,59,66,77,66,0,74],
[53,58,55,43,76,58,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,103,77,90,80,53,59,59],
[27,0,90,79,70,56,62,52],
[53,40,0,79,61,82,59,68],
[40,51,51,0,67,38,59,33],
[50,60,69,63,0,62,68,60],
[77,74,48,92,68,0,72,71],
[71,68,71,71,62,58,0,59],
[71,78,62,97,70,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,76,71,67,64,68,58],
[57,0,57,70,60,61,61,56],
[54,73,0,52,54,63,58,58],
[59,60,78,0,62,61,65,62],
[63,70,76,68,0,70,71,66],
[66,69,67,69,60,0,68,58],
[62,69,72,65,59,62,0,65],
[72,74,72,68,64,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,61,68,68,69,63],
[63,0,67,57,67,72,65,66],
[67,63,0,67,67,63,75,70],
[69,73,63,0,77,70,66,73],
[62,63,63,53,0,65,65,64],
[62,58,67,60,65,0,64,64],
[61,65,55,64,65,66,0,68],
[67,64,60,57,66,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,80,73,79,59,59,81],
[71,0,76,70,72,72,64,81],
[50,54,0,59,56,60,51,68],
[57,60,71,0,63,54,53,71],
[51,58,74,67,0,61,57,71],
[71,58,70,76,69,0,69,79],
[71,66,79,77,73,61,0,80],
[49,49,62,59,59,51,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,60,66,56,67,65],
[68,0,63,62,64,56,62,62],
[66,67,0,68,68,62,67,66],
[70,68,62,0,63,70,68,61],
[64,66,62,67,0,62,66,66],
[74,74,68,60,68,0,67,67],
[63,68,63,62,64,63,0,66],
[65,68,64,69,64,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,65,53,57,53,55],
[68,0,57,52,48,42,50,55],
[67,73,0,60,55,60,57,67],
[65,78,70,0,59,56,61,63],
[77,82,75,71,0,56,67,61],
[73,88,70,74,74,0,63,76],
[77,80,73,69,63,67,0,63],
[75,75,63,67,69,54,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,63,62,75,74,67,78],
[60,0,64,53,76,74,69,75],
[67,66,0,65,79,80,78,76],
[68,77,65,0,59,72,87,69],
[55,54,51,71,0,60,61,73],
[56,56,50,58,70,0,62,66],
[63,61,52,43,69,68,0,55],
[52,55,54,61,57,64,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,46,55,60,61,81,76],
[52,0,30,45,62,53,66,57],
[84,100,0,57,83,85,88,75],
[75,85,73,0,90,59,86,100],
[70,68,47,40,0,50,63,76],
[69,77,45,71,80,0,84,74],
[49,64,42,44,67,46,0,84],
[54,73,55,30,54,56,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,52,63,56,61,57,57],
[75,0,69,68,63,67,68,69],
[78,61,0,67,72,73,74,71],
[67,62,63,0,64,63,71,70],
[74,67,58,66,0,68,66,71],
[69,63,57,67,62,0,66,63],
[73,62,56,59,64,64,0,66],
[73,61,59,60,59,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,61,60,69,45,68,78],
[63,0,74,67,75,65,72,71],
[69,56,0,61,59,63,65,60],
[70,63,69,0,53,52,72,78],
[61,55,71,77,0,55,66,73],
[85,65,67,78,75,0,71,76],
[62,58,65,58,64,59,0,59],
[52,59,70,52,57,54,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,77,66,69,69,74,62],
[67,0,68,55,56,59,58,63],
[53,62,0,48,63,63,66,69],
[64,75,82,0,81,68,72,75],
[61,74,67,49,0,65,67,60],
[61,71,67,62,65,0,63,67],
[56,72,64,58,63,67,0,68],
[68,67,61,55,70,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,61,70,62,63,67,59],
[77,0,66,79,68,68,73,64],
[69,64,0,80,68,66,71,67],
[60,51,50,0,56,64,61,60],
[68,62,62,74,0,73,73,61],
[67,62,64,66,57,0,72,64],
[63,57,59,69,57,58,0,62],
[71,66,63,70,69,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,81,53,66,68,66,71],
[55,0,66,60,56,46,47,63],
[49,64,0,54,69,53,55,62],
[77,70,76,0,85,41,75,73],
[64,74,61,45,0,66,61,57],
[62,84,77,89,64,0,63,74],
[64,83,75,55,69,67,0,67],
[59,67,68,57,73,56,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,64,59,76,68,65],
[64,0,56,61,62,62,58,62],
[64,74,0,66,67,79,61,69],
[66,69,64,0,65,74,67,70],
[71,68,63,65,0,79,67,70],
[54,68,51,56,51,0,53,53],
[62,72,69,63,63,77,0,75],
[65,68,61,60,60,77,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,55,50,69,63,68,71],
[85,0,83,78,91,78,64,71],
[75,47,0,55,66,69,66,66],
[80,52,75,0,73,80,72,79],
[61,39,64,57,0,66,56,55],
[67,52,61,50,64,0,62,69],
[62,66,64,58,74,68,0,56],
[59,59,64,51,75,61,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,62,61,63,59,61],
[69,0,73,70,66,70,65,75],
[68,57,0,62,64,69,48,66],
[68,60,68,0,68,66,66,56],
[69,64,66,62,0,72,59,61],
[67,60,61,64,58,0,62,58],
[71,65,82,64,71,68,0,63],
[69,55,64,74,69,72,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,82,63,67,68,70,66],
[50,0,73,53,56,52,49,67],
[48,57,0,60,59,53,62,59],
[67,77,70,0,58,61,68,62],
[63,74,71,72,0,71,66,82],
[62,78,77,69,59,0,65,68],
[60,81,68,62,64,65,0,56],
[64,63,71,68,48,62,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,73,57,64,54,60],
[71,0,68,76,64,63,56,56],
[66,62,0,73,57,60,52,54],
[57,54,57,0,54,51,54,51],
[73,66,73,76,0,62,59,65],
[66,67,70,79,68,0,63,68],
[76,74,78,76,71,67,0,63],
[70,74,76,79,65,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,75,52,79,57,81,58],
[61,0,69,65,77,86,81,58],
[55,61,0,50,65,72,77,63],
[78,65,80,0,87,65,89,68],
[51,53,65,43,0,48,75,53],
[73,44,58,65,82,0,78,40],
[49,49,53,41,55,52,0,54],
[72,72,67,62,77,90,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,75,71,77,54,67,64],
[54,0,71,65,73,48,56,54],
[55,59,0,70,70,54,35,45],
[59,65,60,0,73,65,60,66],
[53,57,60,57,0,56,55,46],
[76,82,76,65,74,0,68,64],
[63,74,95,70,75,62,0,65],
[66,76,85,64,84,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,56,48,39,54,48,63],
[62,0,54,60,50,63,70,68],
[74,76,0,80,61,85,65,80],
[82,70,50,0,64,73,80,79],
[91,80,69,66,0,50,88,90],
[76,67,45,57,80,0,80,83],
[82,60,65,50,42,50,0,58],
[67,62,50,51,40,47,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,60,56,57,68,67,65],
[82,0,72,67,63,68,63,76],
[70,58,0,56,65,64,67,63],
[74,63,74,0,71,77,75,74],
[73,67,65,59,0,69,63,73],
[62,62,66,53,61,0,61,69],
[63,67,63,55,67,69,0,72],
[65,54,67,56,57,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,72,68,64,58,71],
[58,0,66,74,65,65,75,54],
[64,64,0,70,63,62,74,67],
[58,56,60,0,58,59,55,61],
[62,65,67,72,0,59,59,56],
[66,65,68,71,71,0,66,68],
[72,55,56,75,71,64,0,57],
[59,76,63,69,74,62,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,107,77,109,90,69,45,106],
[23,0,23,70,47,47,24,74],
[53,107,0,102,77,56,79,83],
[21,60,28,0,57,60,45,34],
[40,83,53,73,0,83,70,77],
[61,83,74,70,47,0,44,74],
[85,106,51,85,60,86,0,76],
[24,56,47,96,53,56,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,48,49,52,43,52,54],
[68,0,43,39,57,43,43,70],
[82,87,0,59,68,70,72,70],
[81,91,71,0,67,68,78,64],
[78,73,62,63,0,72,52,66],
[87,87,60,62,58,0,69,79],
[78,87,58,52,78,61,0,71],
[76,60,60,66,64,51,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,56,75,55,72,58,61],
[75,0,59,72,71,64,65,76],
[74,71,0,67,60,69,70,70],
[55,58,63,0,58,62,54,65],
[75,59,70,72,0,75,61,69],
[58,66,61,68,55,0,59,62],
[72,65,60,76,69,71,0,79],
[69,54,60,65,61,68,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,57,48,52,58,58,57],
[66,0,59,65,53,66,65,59],
[73,71,0,47,53,67,55,62],
[82,65,83,0,67,76,73,72],
[78,77,77,63,0,64,71,67],
[72,64,63,54,66,0,59,55],
[72,65,75,57,59,71,0,69],
[73,71,68,58,63,75,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,58,50,55,66,62],
[67,0,64,44,48,62,77,66],
[68,66,0,64,48,69,77,65],
[72,86,66,0,55,65,78,65],
[80,82,82,75,0,63,79,77],
[75,68,61,65,67,0,71,60],
[64,53,53,52,51,59,0,57],
[68,64,65,65,53,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,68,72,77,63,84],
[65,0,72,72,68,74,55,64],
[65,58,0,66,69,68,75,56],
[62,58,64,0,58,58,71,59],
[58,62,61,72,0,67,70,76],
[53,56,62,72,63,0,64,66],
[67,75,55,59,60,66,0,76],
[46,66,74,71,54,64,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,65,57,59,71,57],
[69,0,74,72,74,79,64,72],
[62,56,0,58,63,64,57,64],
[65,58,72,0,53,62,62,54],
[73,56,67,77,0,69,64,67],
[71,51,66,68,61,0,57,50],
[59,66,73,68,66,73,0,64],
[73,58,66,76,63,80,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,70,51,75,60,67,66],
[73,0,69,64,68,58,64,50],
[60,61,0,47,67,50,60,54],
[79,66,83,0,71,59,63,65],
[55,62,63,59,0,52,54,49],
[70,72,80,71,78,0,65,70],
[63,66,70,67,76,65,0,63],
[64,80,76,65,81,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,58,65,65,71,55,69],
[54,0,70,66,58,57,59,64],
[72,60,0,74,58,68,74,74],
[65,64,56,0,65,66,57,62],
[65,72,72,65,0,71,68,71],
[59,73,62,64,59,0,58,67],
[75,71,56,73,62,72,0,70],
[61,66,56,68,59,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,67,64,66,68,61],
[68,0,55,61,71,58,64,65],
[65,75,0,69,66,59,64,65],
[63,69,61,0,65,59,65,64],
[66,59,64,65,0,57,63,58],
[64,72,71,71,73,0,76,66],
[62,66,66,65,67,54,0,70],
[69,65,65,66,72,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,77,56,62,61,62],
[65,0,64,78,75,69,70,68],
[61,66,0,73,64,53,67,73],
[53,52,57,0,52,55,53,61],
[74,55,66,78,0,63,58,61],
[68,61,77,75,67,0,67,74],
[69,60,63,77,72,63,0,64],
[68,62,57,69,69,56,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,54,51,51,42,72,47],
[72,0,60,77,64,70,96,79],
[76,70,0,73,49,53,75,62],
[79,53,57,0,70,67,79,47],
[79,66,81,60,0,76,91,49],
[88,60,77,63,54,0,78,39],
[58,34,55,51,39,52,0,36],
[83,51,68,83,81,91,94,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,86,80,57,96,43,72],
[44,0,65,85,93,126,75,112],
[44,65,0,58,65,64,50,89],
[50,45,72,0,90,75,48,112],
[73,37,65,40,0,56,40,59],
[34,4,66,55,74,0,36,103],
[87,55,80,82,90,94,0,103],
[58,18,41,18,71,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,72,68,68,53,63,69],
[59,0,69,73,73,64,74,56],
[58,61,0,72,62,55,61,61],
[62,57,58,0,60,57,63,51],
[62,57,68,70,0,58,72,69],
[77,66,75,73,72,0,64,63],
[67,56,69,67,58,66,0,61],
[61,74,69,79,61,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,67,73,66,64,63,69],
[59,0,66,63,67,69,58,69],
[63,64,0,64,63,67,57,75],
[57,67,66,0,75,63,65,65],
[64,63,67,55,0,66,56,64],
[66,61,63,67,64,0,60,61],
[67,72,73,65,74,70,0,65],
[61,61,55,65,66,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,89,79,69,65,63,72],
[56,0,91,74,78,67,70,74],
[41,39,0,57,58,55,54,55],
[51,56,73,0,60,51,61,59],
[61,52,72,70,0,61,73,65],
[65,63,75,79,69,0,77,71],
[67,60,76,69,57,53,0,70],
[58,56,75,71,65,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,56,64,58,60,58,63],
[66,0,63,70,60,72,61,62],
[74,67,0,65,66,60,67,72],
[66,60,65,0,63,63,65,68],
[72,70,64,67,0,68,65,70],
[70,58,70,67,62,0,65,65],
[72,69,63,65,65,65,0,63],
[67,68,58,62,60,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,76,63,44,72,58,63],
[63,0,72,67,70,56,66,74],
[54,58,0,70,50,78,65,61],
[67,63,60,0,69,59,62,62],
[86,60,80,61,0,65,75,77],
[58,74,52,71,65,0,67,40],
[72,64,65,68,55,63,0,44],
[67,56,69,68,53,90,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,70,72,66,63,67,64],
[58,0,70,65,64,59,58,63],
[60,60,0,62,63,57,54,64],
[58,65,68,0,66,55,62,56],
[64,66,67,64,0,70,68,61],
[67,71,73,75,60,0,65,63],
[63,72,76,68,62,65,0,67],
[66,67,66,74,69,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,73,52,61,53,63],
[65,0,87,75,61,69,53,96],
[58,43,0,51,38,58,51,68],
[57,55,79,0,56,53,69,72],
[78,69,92,74,0,62,69,78],
[69,61,72,77,68,0,65,84],
[77,77,79,61,61,65,0,81],
[67,34,62,58,52,46,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,64,65,61,64,59],
[72,0,64,64,64,59,62,72],
[69,66,0,70,69,62,69,58],
[66,66,60,0,67,65,62,64],
[65,66,61,63,0,61,59,61],
[69,71,68,65,69,0,69,69],
[66,68,61,68,71,61,0,70],
[71,58,72,66,69,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,96,79,70,65,90,108,111],
[34,0,47,57,37,75,48,111],
[51,83,0,59,79,92,108,89],
[60,73,71,0,63,89,105,89],
[65,93,51,67,0,84,110,94],
[40,55,38,41,46,0,51,86],
[22,82,22,25,20,79,0,82],
[19,19,41,41,36,44,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,58,56,55,58,65],
[73,0,73,70,56,59,61,66],
[68,57,0,64,59,56,58,60],
[72,60,66,0,50,66,69,57],
[74,74,71,80,0,64,83,52],
[75,71,74,64,66,0,66,66],
[72,69,72,61,47,64,0,52],
[65,64,70,73,78,64,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,74,72,75,64,63,68],
[44,0,61,55,52,46,54,62],
[56,69,0,60,69,62,73,65],
[58,75,70,0,63,73,58,71],
[55,78,61,67,0,56,64,69],
[66,84,68,57,74,0,70,63],
[67,76,57,72,66,60,0,60],
[62,68,65,59,61,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,84,74,77,91,93,63],
[51,0,80,62,64,77,61,60],
[46,50,0,59,61,79,58,50],
[56,68,71,0,72,73,64,64],
[53,66,69,58,0,80,49,53],
[39,53,51,57,50,0,60,46],
[37,69,72,66,81,70,0,73],
[67,70,80,66,77,84,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,66,89,76,62,72,67],
[48,0,74,80,66,65,64,74],
[64,56,0,80,64,76,77,79],
[41,50,50,0,67,55,64,63],
[54,64,66,63,0,58,72,64],
[68,65,54,75,72,0,65,64],
[58,66,53,66,58,65,0,55],
[63,56,51,67,66,66,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,63,48,83,71,63],
[68,0,58,73,63,69,31,52],
[56,72,0,73,50,76,55,61],
[67,57,57,0,40,57,40,70],
[82,67,80,90,0,82,58,55],
[47,61,54,73,48,0,46,71],
[59,99,75,90,72,84,0,74],
[67,78,69,60,75,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,64,81,58,69,47,54],
[55,0,62,48,59,59,54,55],
[66,68,0,40,36,73,67,43],
[49,82,90,0,39,71,68,47],
[72,71,94,91,0,68,60,62],
[61,71,57,59,62,0,51,54],
[83,76,63,62,70,79,0,68],
[76,75,87,83,68,76,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,74,70,71,62,69],
[68,0,63,78,73,71,68,74],
[70,67,0,69,66,61,72,61],
[56,52,61,0,61,62,61,63],
[60,57,64,69,0,70,70,77],
[59,59,69,68,60,0,64,71],
[68,62,58,69,60,66,0,63],
[61,56,69,67,53,59,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,38,97,81,81,97,85],
[37,0,70,59,85,49,77,85],
[92,60,0,71,87,76,91,95],
[33,71,59,0,64,70,86,77],
[49,45,43,66,0,57,58,105],
[49,81,54,60,73,0,73,111],
[33,53,39,44,72,57,0,68],
[45,45,35,53,25,19,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,56,62,49,68,69,65],
[62,0,60,59,61,59,63,41],
[74,70,0,76,63,58,71,61],
[68,71,54,0,57,58,72,52],
[81,69,67,73,0,66,65,62],
[62,71,72,72,64,0,72,54],
[61,67,59,58,65,58,0,53],
[65,89,69,78,68,76,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,55,66,55,57,60],
[69,0,68,67,57,57,59,63],
[62,62,0,55,54,59,55,60],
[75,63,75,0,58,61,60,63],
[64,73,76,72,0,62,63,67],
[75,73,71,69,68,0,71,62],
[73,71,75,70,67,59,0,68],
[70,67,70,67,63,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,57,61,63,60,59,50],
[63,0,57,67,59,72,60,64],
[73,73,0,67,65,69,61,73],
[69,63,63,0,55,64,58,66],
[67,71,65,75,0,73,57,57],
[70,58,61,66,57,0,55,58],
[71,70,69,72,73,75,0,57],
[80,66,57,64,73,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,63,63,67,50,78,61],
[78,0,69,59,78,72,68,54],
[67,61,0,80,71,62,34,44],
[67,71,50,0,71,67,44,48],
[63,52,59,59,0,41,64,72],
[80,58,68,63,89,0,64,62],
[52,62,96,86,66,66,0,33],
[69,76,86,82,58,68,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,58,58,59,67,66],
[64,0,64,66,45,68,66,62],
[67,66,0,67,66,61,80,63],
[72,64,63,0,48,56,79,54],
[72,85,64,82,0,52,75,76],
[71,62,69,74,78,0,77,62],
[63,64,50,51,55,53,0,52],
[64,68,67,76,54,68,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,62,75,66,55,57],
[65,0,58,74,65,53,57,59],
[64,72,0,75,71,57,73,71],
[68,56,55,0,67,57,60,66],
[55,65,59,63,0,62,63,58],
[64,77,73,73,68,0,74,81],
[75,73,57,70,67,56,0,59],
[73,71,59,64,72,49,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,72,60,80,73,71],
[66,0,61,65,62,78,78,71],
[59,69,0,65,66,78,63,74],
[58,65,65,0,60,77,67,68],
[70,68,64,70,0,81,73,79],
[50,52,52,53,49,0,61,50],
[57,52,67,63,57,69,0,66],
[59,59,56,62,51,80,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,61,55,65,59,62],
[76,0,72,69,63,71,78,71],
[71,58,0,74,59,55,71,66],
[69,61,56,0,65,61,66,65],
[75,67,71,65,0,73,74,66],
[65,59,75,69,57,0,71,58],
[71,52,59,64,56,59,0,51],
[68,59,64,65,64,72,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,68,66,66,70,69],
[66,0,66,67,62,60,69,67],
[59,64,0,61,62,58,62,73],
[62,63,69,0,68,61,73,73],
[64,68,68,62,0,64,66,68],
[64,70,72,69,66,0,66,66],
[60,61,68,57,64,64,0,68],
[61,63,57,57,62,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,53,58,64,97,75,66],
[60,0,34,53,59,81,47,67],
[77,96,0,62,79,98,77,99],
[72,77,68,0,83,95,58,92],
[66,71,51,47,0,72,71,54],
[33,49,32,35,58,0,49,70],
[55,83,53,72,59,81,0,71],
[64,63,31,38,76,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,63,73,77,60,74],
[71,0,72,63,79,83,66,65],
[63,58,0,66,62,78,66,71],
[67,67,64,0,75,85,66,58],
[57,51,68,55,0,69,56,57],
[53,47,52,45,61,0,53,42],
[70,64,64,64,74,77,0,79],
[56,65,59,72,73,88,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,59,65,69,56,69,70],
[60,0,68,67,73,60,63,67],
[71,62,0,65,54,64,66,68],
[65,63,65,0,67,72,73,66],
[61,57,76,63,0,60,70,63],
[74,70,66,58,70,0,70,75],
[61,67,64,57,60,60,0,60],
[60,63,62,64,67,55,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,76,67,85,61,68,61],
[54,0,42,40,69,52,42,60],
[54,88,0,67,70,89,59,72],
[63,90,63,0,69,61,69,81],
[45,61,60,61,0,62,44,79],
[69,78,41,69,68,0,42,63],
[62,88,71,61,86,88,0,106],
[69,70,58,49,51,67,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,69,59,62,80,67,73],
[57,0,64,56,55,69,72,70],
[61,66,0,69,67,75,77,75],
[71,74,61,0,63,73,82,73],
[68,75,63,67,0,70,72,68],
[50,61,55,57,60,0,66,67],
[63,58,53,48,58,64,0,57],
[57,60,55,57,62,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,46,47,60,64,51,54],
[68,0,46,39,59,59,49,50],
[84,84,0,62,88,79,67,71],
[83,91,68,0,76,83,58,71],
[70,71,42,54,0,71,49,53],
[66,71,51,47,59,0,54,61],
[79,81,63,72,81,76,0,74],
[76,80,59,59,77,69,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,69,64,67,73,80,78],
[52,0,68,69,68,64,63,82],
[61,62,0,65,56,64,75,81],
[66,61,65,0,69,59,82,68],
[63,62,74,61,0,65,81,80],
[57,66,66,71,65,0,78,72],
[50,67,55,48,49,52,0,64],
[52,48,49,62,50,58,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,83,58,68,72,62,70],
[59,0,71,60,63,64,60,62],
[47,59,0,49,55,54,54,60],
[72,70,81,0,63,75,76,67],
[62,67,75,67,0,66,68,73],
[58,66,76,55,64,0,63,68],
[68,70,76,54,62,67,0,73],
[60,68,70,63,57,62,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,83,72,66,88,67,55],
[51,0,71,79,62,67,56,67],
[47,59,0,64,63,61,56,50],
[58,51,66,0,57,67,54,45],
[64,68,67,73,0,67,72,56],
[42,63,69,63,63,0,55,51],
[63,74,74,76,58,75,0,58],
[75,63,80,85,74,79,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,78,54,73,65,74,67],
[67,0,71,66,60,68,76,74],
[52,59,0,56,63,66,67,58],
[76,64,74,0,72,71,84,82],
[57,70,67,58,0,71,74,78],
[65,62,64,59,59,0,67,69],
[56,54,63,46,56,63,0,57],
[63,56,72,48,52,61,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,67,63,71,67,58],
[72,0,61,73,65,63,69,62],
[72,69,0,78,66,79,71,64],
[63,57,52,0,57,73,64,58],
[67,65,64,73,0,67,68,65],
[59,67,51,57,63,0,64,57],
[63,61,59,66,62,66,0,61],
[72,68,66,72,65,73,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,68,61,83,77,62,69],
[63,0,67,60,72,73,54,66],
[62,63,0,59,74,73,64,68],
[69,70,71,0,84,72,63,63],
[47,58,56,46,0,68,55,52],
[53,57,57,58,62,0,52,54],
[68,76,66,67,75,78,0,65],
[61,64,62,67,78,76,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,62,72,68,85,81,76],
[51,0,60,54,73,67,59,74],
[68,70,0,64,70,75,58,62],
[58,76,66,0,63,76,68,61],
[62,57,60,67,0,61,58,74],
[45,63,55,54,69,0,52,60],
[49,71,72,62,72,78,0,77],
[54,56,68,69,56,70,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,63,51,53,44,52],
[65,0,69,67,56,73,53,62],
[67,61,0,54,51,62,54,60],
[67,63,76,0,65,72,57,59],
[79,74,79,65,0,78,66,67],
[77,57,68,58,52,0,57,53],
[86,77,76,73,64,73,0,75],
[78,68,70,71,63,77,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,63,58,67,64,52,62],
[56,0,69,66,54,48,55,65],
[67,61,0,58,59,59,67,67],
[72,64,72,0,66,73,79,66],
[63,76,71,64,0,72,66,62],
[66,82,71,57,58,0,70,65],
[78,75,63,51,64,60,0,63],
[68,65,63,64,68,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,51,59,73,59,67,62],
[70,0,56,65,58,65,64,59],
[79,74,0,61,72,64,76,74],
[71,65,69,0,78,65,75,72],
[57,72,58,52,0,60,69,58],
[71,65,66,65,70,0,75,71],
[63,66,54,55,61,55,0,58],
[68,71,56,58,72,59,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,77,70,59,83,67,74],
[57,0,76,65,64,75,75,67],
[53,54,0,63,54,63,53,69],
[60,65,67,0,65,69,71,69],
[71,66,76,65,0,66,70,62],
[47,55,67,61,64,0,60,56],
[63,55,77,59,60,70,0,66],
[56,63,61,61,68,74,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,72,64,69,63,65],
[66,0,60,66,69,66,68,75],
[71,70,0,73,68,66,65,71],
[58,64,57,0,61,61,62,60],
[66,61,62,69,0,60,62,68],
[61,64,64,69,70,0,65,71],
[67,62,65,68,68,65,0,64],
[65,55,59,70,62,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,49,57,69,63,45,48],
[52,0,41,45,51,40,58,43],
[81,89,0,85,61,55,70,72],
[73,85,45,0,68,62,51,48],
[61,79,69,62,0,56,64,65],
[67,90,75,68,74,0,65,72],
[85,72,60,79,66,65,0,53],
[82,87,58,82,65,58,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,63,81,60,66,56,65],
[56,0,59,64,62,57,55,53],
[67,71,0,76,74,56,66,63],
[49,66,54,0,54,52,57,57],
[70,68,56,76,0,63,59,67],
[64,73,74,78,67,0,72,63],
[74,75,64,73,71,58,0,61],
[65,77,67,73,63,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,63,45,63,57,62],
[66,0,63,68,52,74,57,77],
[71,67,0,56,60,74,55,66],
[67,62,74,0,69,78,64,85],
[85,78,70,61,0,88,77,88],
[67,56,56,52,42,0,58,55],
[73,73,75,66,53,72,0,70],
[68,53,64,45,42,75,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,67,60,58,80,75,59],
[79,0,67,78,65,81,72,58],
[63,63,0,73,53,76,70,69],
[70,52,57,0,56,91,56,65],
[72,65,77,74,0,90,74,75],
[50,49,54,39,40,0,53,58],
[55,58,60,74,56,77,0,53],
[71,72,61,65,55,72,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,85,74,85,65,62],
[67,0,50,78,71,77,58,61],
[72,80,0,83,88,86,75,61],
[45,52,47,0,64,59,50,36],
[56,59,42,66,0,68,64,60],
[45,53,44,71,62,0,55,42],
[65,72,55,80,66,75,0,69],
[68,69,69,94,70,88,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,61,66,73,69,74],
[61,0,70,65,70,89,75,74],
[69,60,0,58,53,81,73,71],
[69,65,72,0,68,79,74,81],
[64,60,77,62,0,82,78,71],
[57,41,49,51,48,0,60,54],
[61,55,57,56,52,70,0,63],
[56,56,59,49,59,76,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,48,58,66,71,73],
[72,0,56,54,51,64,58,71],
[68,74,0,65,67,73,76,58],
[82,76,65,0,62,77,76,72],
[72,79,63,68,0,67,85,91],
[64,66,57,53,63,0,72,78],
[59,72,54,54,45,58,0,58],
[57,59,72,58,39,52,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,63,61,65,65,68,70],
[72,0,62,63,68,65,78,63],
[67,68,0,65,54,67,70,70],
[69,67,65,0,55,66,69,67],
[65,62,76,75,0,59,75,73],
[65,65,63,64,71,0,69,64],
[62,52,60,61,55,61,0,65],
[60,67,60,63,57,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,72,68,69,68,71,67],
[68,0,69,73,64,53,66,53],
[58,61,0,74,71,60,57,62],
[62,57,56,0,63,50,53,58],
[61,66,59,67,0,58,60,58],
[62,77,70,80,72,0,66,70],
[59,64,73,77,70,64,0,64],
[63,77,68,72,72,60,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,65,71,61,66,62],
[66,0,64,63,59,60,63,56],
[66,66,0,63,71,54,60,58],
[65,67,67,0,74,61,55,65],
[59,71,59,56,0,64,72,62],
[69,70,76,69,66,0,59,58],
[64,67,70,75,58,71,0,61],
[68,74,72,65,68,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,79,62,60,83,69,52],
[68,0,79,54,58,68,78,80],
[51,51,0,52,60,69,50,61],
[68,76,78,0,60,70,70,60],
[70,72,70,70,0,86,54,82],
[47,62,61,60,44,0,72,44],
[61,52,80,60,76,58,0,62],
[78,50,69,70,48,86,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,51,53,34,66,77,65],
[64,0,86,42,33,51,42,41],
[79,44,0,53,33,45,55,43],
[77,88,77,0,56,88,76,66],
[96,97,97,74,0,62,64,63],
[64,79,85,42,68,0,77,65],
[53,88,75,54,66,53,0,43],
[65,89,87,64,67,65,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,63,60,56,56,58,62],
[71,0,78,66,74,60,64,69],
[67,52,0,66,61,61,61,68],
[70,64,64,0,70,62,66,76],
[74,56,69,60,0,60,65,72],
[74,70,69,68,70,0,59,71],
[72,66,69,64,65,71,0,69],
[68,61,62,54,58,59,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,87,55,45,71,87,98],
[59,0,86,81,58,53,60,85],
[43,44,0,56,44,61,70,77],
[75,49,74,0,68,76,83,84],
[85,72,86,62,0,71,78,86],
[59,77,69,54,59,0,49,92],
[43,70,60,47,52,81,0,77],
[32,45,53,46,44,38,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,77,67,61,71,78],
[67,0,64,65,57,73,58,64],
[57,66,0,69,69,64,68,61],
[53,65,61,0,46,65,65,74],
[63,73,61,84,0,55,71,67],
[69,57,66,65,75,0,65,73],
[59,72,62,65,59,65,0,81],
[52,66,69,56,63,57,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,58,64,65,58,53,69],
[66,0,54,66,71,66,62,55],
[72,76,0,67,82,64,68,69],
[66,64,63,0,59,60,64,63],
[65,59,48,71,0,52,63,64],
[72,64,66,70,78,0,67,71],
[77,68,62,66,67,63,0,74],
[61,75,61,67,66,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,64,65,62,70,49,62],
[76,0,80,75,67,74,65,67],
[66,50,0,63,54,68,58,60],
[65,55,67,0,53,67,63,65],
[68,63,76,77,0,67,53,63],
[60,56,62,63,63,0,53,61],
[81,65,72,67,77,77,0,70],
[68,63,70,65,67,69,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,0,130,130,0,0,130],
[130,0,130,130,130,65,65,130],
[130,0,0,130,130,0,65,130],
[0,0,0,0,65,0,0,65],
[0,0,0,65,0,0,0,130],
[130,65,130,130,130,0,65,130],
[130,65,65,130,130,65,0,130],
[0,0,0,65,0,0,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,111,78,76,93,95,73],
[72,0,111,74,56,74,93,71],
[19,19,0,58,0,37,39,19],
[52,56,72,0,37,91,111,52],
[54,74,130,93,0,74,94,54],
[37,56,93,39,56,0,73,54],
[35,37,91,19,36,57,0,17],
[57,59,111,78,76,76,113,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,65,66,64,67,65],
[60,0,66,49,62,57,68,60],
[70,64,0,64,71,64,68,63],
[65,81,66,0,75,76,82,65],
[64,68,59,55,0,67,62,70],
[66,73,66,54,63,0,59,65],
[63,62,62,48,68,71,0,61],
[65,70,67,65,60,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,58,58,60,64,63,60],
[68,0,66,70,66,61,69,70],
[72,64,0,67,68,64,71,59],
[72,60,63,0,71,63,77,69],
[70,64,62,59,0,62,70,60],
[66,69,66,67,68,0,68,61],
[67,61,59,53,60,62,0,51],
[70,60,71,61,70,69,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,70,75,67,69,60,69],
[67,0,62,64,69,68,65,61],
[60,68,0,68,73,64,72,64],
[55,66,62,0,61,62,60,55],
[63,61,57,69,0,75,69,65],
[61,62,66,68,55,0,62,60],
[70,65,58,70,61,68,0,59],
[61,69,66,75,65,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,73,65,75,71,78,79],
[63,0,74,60,74,77,69,64],
[57,56,0,53,66,71,62,73],
[65,70,77,0,64,79,77,77],
[55,56,64,66,0,71,66,71],
[59,53,59,51,59,0,64,60],
[52,61,68,53,64,66,0,65],
[51,66,57,53,59,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,55,56,70,56,55,50],
[71,0,50,77,66,65,58,57],
[75,80,0,81,78,67,63,82],
[74,53,49,0,58,56,68,69],
[60,64,52,72,0,58,65,58],
[74,65,63,74,72,0,64,53],
[75,72,67,62,65,66,0,72],
[80,73,48,61,72,77,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,78,65,76,74,75],
[60,0,64,59,86,72,84,53],
[61,66,0,66,78,76,80,69],
[52,71,64,0,69,64,71,54],
[65,44,52,61,0,72,53,55],
[54,58,54,66,58,0,56,31],
[56,46,50,59,77,74,0,61],
[55,77,61,76,75,99,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,66,68,62,78,72],
[64,0,68,71,65,69,63,66],
[70,62,0,67,75,73,64,69],
[64,59,63,0,67,71,69,70],
[62,65,55,63,0,58,57,61],
[68,61,57,59,72,0,68,65],
[52,67,66,61,73,62,0,59],
[58,64,61,60,69,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,64,62,47,52,62,66],
[58,0,52,50,53,53,52,51],
[66,78,0,73,58,68,74,78],
[68,80,57,0,61,74,75,81],
[83,77,72,69,0,78,60,66],
[78,77,62,56,52,0,51,77],
[68,78,56,55,70,79,0,63],
[64,79,52,49,64,53,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,79,93,76,79,92],
[65,0,89,95,97,86,83,92],
[59,41,0,67,71,53,62,75],
[51,35,63,0,64,39,61,60],
[37,33,59,66,0,54,65,65],
[54,44,77,91,76,0,78,80],
[51,47,68,69,65,52,0,72],
[38,38,55,70,65,50,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,55,56,58,55,63,42],
[79,0,77,78,44,85,64,63],
[75,53,0,80,34,65,62,38],
[74,52,50,0,56,69,53,50],
[72,86,96,74,0,91,66,57],
[75,45,65,61,39,0,53,58],
[67,66,68,77,64,77,0,65],
[88,67,92,80,73,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,78,69,86,63,71,81],
[65,0,47,54,81,50,46,74],
[52,83,0,75,68,65,69,70],
[61,76,55,0,67,58,80,59],
[44,49,62,63,0,52,42,57],
[67,80,65,72,78,0,78,100],
[59,84,61,50,88,52,0,68],
[49,56,60,71,73,30,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,47,58,63,65,49,75],
[74,0,61,68,72,53,49,72],
[83,69,0,64,68,60,62,78],
[72,62,66,0,64,59,63,81],
[67,58,62,66,0,52,53,72],
[65,77,70,71,78,0,65,83],
[81,81,68,67,77,65,0,88],
[55,58,52,49,58,47,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,61,48,59,54,43,55],
[74,0,64,51,63,55,56,71],
[69,66,0,53,65,59,60,67],
[82,79,77,0,76,64,64,70],
[71,67,65,54,0,51,54,72],
[76,75,71,66,79,0,65,71],
[87,74,70,66,76,65,0,77],
[75,59,63,60,58,59,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,67,72,70,77,77],
[62,0,57,57,72,60,71,74],
[67,73,0,65,80,70,76,85],
[63,73,65,0,72,63,73,72],
[58,58,50,58,0,63,66,67],
[60,70,60,67,67,0,72,79],
[53,59,54,57,64,58,0,72],
[53,56,45,58,63,51,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,61,47,45,45,56,53],
[80,0,86,64,47,46,52,71],
[69,44,0,55,47,29,39,52],
[83,66,75,0,75,45,65,80],
[85,83,83,55,0,66,64,89],
[85,84,101,85,64,0,70,80],
[74,78,91,65,66,60,0,71],
[77,59,78,50,41,50,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,79,72,69,70,62],
[62,0,71,81,80,61,70,66],
[59,59,0,76,65,67,60,58],
[51,49,54,0,57,49,56,54],
[58,50,65,73,0,62,64,58],
[61,69,63,81,68,0,65,69],
[60,60,70,74,66,65,0,58],
[68,64,72,76,72,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,66,57,70,57,55,72],
[44,0,46,62,53,56,45,43],
[64,84,0,63,55,60,54,64],
[73,68,67,0,60,78,60,82],
[60,77,75,70,0,73,72,71],
[73,74,70,52,57,0,62,69],
[75,85,76,70,58,68,0,76],
[58,87,66,48,59,61,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,27,28,0,28,28,27],
[116,0,56,74,74,59,57,56],
[103,74,0,73,74,45,73,73],
[102,56,57,0,57,44,41,70],
[130,56,56,73,0,73,57,56],
[102,71,85,86,57,0,86,70],
[102,73,57,89,73,44,0,57],
[103,74,57,60,74,60,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,54,62,68,62,58,60],
[67,0,60,63,57,61,65,65],
[76,70,0,76,67,62,74,67],
[68,67,54,0,63,60,62,64],
[62,73,63,67,0,70,75,74],
[68,69,68,70,60,0,76,71],
[72,65,56,68,55,54,0,71],
[70,65,63,66,56,59,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,58,67,64,72,64,63],
[55,0,54,65,69,67,62,59],
[72,76,0,72,72,71,67,65],
[63,65,58,0,69,69,61,51],
[66,61,58,61,0,60,56,62],
[58,63,59,61,70,0,70,58],
[66,68,63,69,74,60,0,60],
[67,71,65,79,68,72,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,0,130,65,65,65,65],
[130,0,0,130,65,65,65,65],
[130,130,0,130,130,130,65,65],
[0,0,0,0,65,0,0,0],
[65,65,0,65,0,65,65,65],
[65,65,0,130,65,0,65,65],
[65,65,65,130,65,65,0,65],
[65,65,65,130,65,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,49,63,69,52,27,41],
[73,0,37,81,94,49,52,30],
[81,93,0,62,92,89,81,83],
[67,49,68,0,48,62,58,60],
[61,36,38,82,0,41,53,30],
[78,81,41,68,89,0,58,61],
[103,78,49,72,77,72,0,81],
[89,100,47,70,100,69,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,62,53,54,60,69,62],
[57,0,56,58,49,57,64,53],
[68,74,0,61,57,62,77,65],
[77,72,69,0,66,66,74,65],
[76,81,73,64,0,77,82,72],
[70,73,68,64,53,0,81,62],
[61,66,53,56,48,49,0,62],
[68,77,65,65,58,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,61,67,74,79,61],
[67,0,62,69,64,75,68,65],
[69,68,0,66,62,67,71,61],
[69,61,64,0,68,70,68,59],
[63,66,68,62,0,70,66,71],
[56,55,63,60,60,0,58,51],
[51,62,59,62,64,72,0,59],
[69,65,69,71,59,79,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,69,68,74,58,71,83],
[47,0,59,58,49,36,48,65],
[61,71,0,68,77,68,75,76],
[62,72,62,0,74,60,71,68],
[56,81,53,56,0,61,73,79],
[72,94,62,70,69,0,82,84],
[59,82,55,59,57,48,0,66],
[47,65,54,62,51,46,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,63,65,64,62,72],
[68,0,65,67,74,69,65,59],
[70,65,0,62,57,69,66,65],
[67,63,68,0,75,74,66,67],
[65,56,73,55,0,66,66,62],
[66,61,61,56,64,0,53,65],
[68,65,64,64,64,77,0,64],
[58,71,65,63,68,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,64,65,74,61,66],
[61,0,58,57,70,73,55,69],
[68,72,0,58,70,65,68,68],
[66,73,72,0,76,78,65,73],
[65,60,60,54,0,59,61,68],
[56,57,65,52,71,0,49,65],
[69,75,62,65,69,81,0,74],
[64,61,62,57,62,65,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,64,60,50,46,70],
[61,0,66,65,62,56,68,68],
[66,64,0,59,67,64,64,59],
[66,65,71,0,72,62,62,83],
[70,68,63,58,0,66,70,51],
[80,74,66,68,64,0,55,73],
[84,62,66,68,60,75,0,80],
[60,62,71,47,79,57,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,50,57,57,65,60,55],
[76,0,75,72,60,68,69,59],
[80,55,0,57,62,62,62,56],
[73,58,73,0,69,71,72,62],
[73,70,68,61,0,68,75,67],
[65,62,68,59,62,0,63,62],
[70,61,68,58,55,67,0,58],
[75,71,74,68,63,68,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,111,39,93,92,74,56,56],
[19,0,19,37,56,36,56,19],
[91,111,0,91,110,55,56,73],
[37,93,39,0,73,36,37,36],
[38,74,20,57,0,55,57,39],
[56,94,75,94,75,0,76,56],
[74,74,74,93,73,54,0,56],
[74,111,57,94,91,74,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,74,66,65,66,71,73],
[66,0,69,63,63,68,66,75],
[56,61,0,51,62,63,60,67],
[64,67,79,0,71,76,77,70],
[65,67,68,59,0,75,71,69],
[64,62,67,54,55,0,68,65],
[59,64,70,53,59,62,0,67],
[57,55,63,60,61,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,59,62,65,73,64,72],
[64,0,58,62,71,58,62,62],
[71,72,0,60,71,84,68,64],
[68,68,70,0,68,69,58,57],
[65,59,59,62,0,69,48,55],
[57,72,46,61,61,0,62,50],
[66,68,62,72,82,68,0,67],
[58,68,66,73,75,80,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,74,64,67,66,60,71],
[55,0,70,59,66,55,54,60],
[56,60,0,55,56,60,48,63],
[66,71,75,0,65,72,67,75],
[63,64,74,65,0,65,65,68],
[64,75,70,58,65,0,61,72],
[70,76,82,63,65,69,0,67],
[59,70,67,55,62,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,53,52,53,80,37,66],
[80,0,69,42,70,69,80,69],
[77,61,0,65,27,55,50,64],
[78,88,65,0,81,67,92,93],
[77,60,103,49,0,67,63,64],
[50,61,75,63,63,0,64,51],
[93,50,80,38,67,66,0,55],
[64,61,66,37,66,79,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,68,69,71,71,75,65],
[58,0,58,71,63,73,71,66],
[62,72,0,66,69,74,70,60],
[61,59,64,0,63,68,77,58],
[59,67,61,67,0,73,71,66],
[59,57,56,62,57,0,67,54],
[55,59,60,53,59,63,0,56],
[65,64,70,72,64,76,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,74,67,77,59,73],
[61,0,64,65,65,63,64,63],
[58,66,0,69,63,64,54,65],
[56,65,61,0,68,68,61,66],
[63,65,67,62,0,61,62,67],
[53,67,66,62,69,0,67,65],
[71,66,76,69,68,63,0,74],
[57,67,65,64,63,65,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,57,60,71,62,54,61],
[63,0,55,51,54,59,57,54],
[73,75,0,70,79,67,62,78],
[70,79,60,0,74,63,61,71],
[59,76,51,56,0,64,48,65],
[68,71,63,67,66,0,59,69],
[76,73,68,69,82,71,0,65],
[69,76,52,59,65,61,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,75,83,57,70,62,61],
[68,0,76,77,63,74,72,62],
[55,54,0,68,55,65,58,53],
[47,53,62,0,58,54,55,59],
[73,67,75,72,0,70,76,65],
[60,56,65,76,60,0,67,57],
[68,58,72,75,54,63,0,55],
[69,68,77,71,65,73,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,58,77,57,52,55,52],
[76,0,81,85,76,66,65,67],
[72,49,0,86,60,59,63,63],
[53,45,44,0,48,43,57,51],
[73,54,70,82,0,55,66,61],
[78,64,71,87,75,0,54,64],
[75,65,67,73,64,76,0,63],
[78,63,67,79,69,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,57,48,54,37,62,68],
[75,0,67,68,82,59,96,90],
[73,63,0,72,68,58,99,76],
[82,62,58,0,74,68,81,83],
[76,48,62,56,0,53,77,85],
[93,71,72,62,77,0,86,83],
[68,34,31,49,53,44,0,66],
[62,40,54,47,45,47,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,108,67,44,65,87,66,107],
[22,0,45,22,43,22,22,107],
[63,85,0,107,85,85,107,107],
[86,108,23,0,43,87,65,108],
[65,87,45,87,0,87,65,130],
[43,108,45,43,43,0,22,107],
[64,108,23,65,65,108,0,130],
[23,23,23,22,0,23,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,60,60,70,53,80,87],
[59,0,69,77,76,71,54,58],
[70,61,0,52,79,70,78,60],
[70,53,78,0,70,62,53,68],
[60,54,51,60,0,62,72,86],
[77,59,60,68,68,0,79,69],
[50,76,52,77,58,51,0,58],
[43,72,70,62,44,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,61,82,71,78,77,61],
[45,0,54,67,55,64,66,52],
[69,76,0,79,68,73,64,66],
[48,63,51,0,67,54,63,56],
[59,75,62,63,0,71,56,57],
[52,66,57,76,59,0,62,64],
[53,64,66,67,74,68,0,55],
[69,78,64,74,73,66,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,67,69,70,74,81],
[70,0,69,61,83,72,80,75],
[69,61,0,80,75,71,76,92],
[63,69,50,0,78,50,62,79],
[61,47,55,52,0,54,58,57],
[60,58,59,80,76,0,71,83],
[56,50,54,68,72,59,0,58],
[49,55,38,51,73,47,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,62,66,67,71,66,69],
[59,0,61,54,70,60,63,53],
[68,69,0,61,72,60,62,64],
[64,76,69,0,65,73,62,63],
[63,60,58,65,0,57,61,56],
[59,70,70,57,73,0,67,66],
[64,67,68,68,69,63,0,67],
[61,77,66,67,74,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,76,78,73,72,73],
[66,0,55,75,78,78,68,74],
[68,75,0,70,78,73,66,65],
[54,55,60,0,72,61,56,59],
[52,52,52,58,0,68,60,63],
[57,52,57,69,62,0,59,66],
[58,62,64,74,70,71,0,67],
[57,56,65,71,67,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,50,26,104,27,53,54],
[79,0,50,79,80,53,52,54],
[80,80,0,53,80,80,79,54],
[104,51,77,0,104,54,77,78],
[26,50,50,26,0,26,26,54],
[103,77,50,76,104,0,103,78],
[77,78,51,53,104,27,0,54],
[76,76,76,52,76,52,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,81,77,75,64,73],
[55,0,69,64,65,57,59,73],
[57,61,0,59,70,59,58,75],
[49,66,71,0,63,55,58,70],
[53,65,60,67,0,61,60,62],
[55,73,71,75,69,0,68,69],
[66,71,72,72,70,62,0,72],
[57,57,55,60,68,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,68,79,67,66,65],
[64,0,65,63,67,55,64,70],
[70,65,0,61,66,73,52,67],
[62,67,69,0,63,66,62,64],
[51,63,64,67,0,63,58,64],
[63,75,57,64,67,0,57,67],
[64,66,78,68,72,73,0,78],
[65,60,63,66,66,63,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,62,71,61,62,64],
[67,0,69,63,68,65,62,71],
[57,61,0,60,71,64,59,68],
[68,67,70,0,71,61,68,72],
[59,62,59,59,0,63,58,63],
[69,65,66,69,67,0,66,67],
[68,68,71,62,72,64,0,76],
[66,59,62,58,67,63,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,74,74,74,77,86,55],
[66,0,78,62,65,92,75,71],
[56,52,0,65,55,57,68,58],
[56,68,65,0,69,69,78,64],
[56,65,75,61,0,73,77,61],
[53,38,73,61,57,0,78,56],
[44,55,62,52,53,52,0,62],
[75,59,72,66,69,74,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,43,49,46,55,48,49],
[76,0,60,62,65,70,47,51],
[87,70,0,62,71,71,65,68],
[81,68,68,0,68,72,65,74],
[84,65,59,62,0,64,69,61],
[75,60,59,58,66,0,55,57],
[82,83,65,65,61,75,0,58],
[81,79,62,56,69,73,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,62,57,55,58,66,60],
[75,0,58,59,72,68,69,67],
[68,72,0,55,65,67,68,66],
[73,71,75,0,69,64,65,69],
[75,58,65,61,0,67,70,64],
[72,62,63,66,63,0,75,70],
[64,61,62,65,60,55,0,63],
[70,63,64,61,66,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,67,78,72,63,65],
[62,0,65,69,71,73,48,58],
[67,65,0,66,70,68,52,51],
[63,61,64,0,69,68,56,54],
[52,59,60,61,0,74,54,51],
[58,57,62,62,56,0,49,59],
[67,82,78,74,76,81,0,59],
[65,72,79,76,79,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,60,58,68,72,59,62],
[78,0,70,61,65,74,70,71],
[70,60,0,63,66,70,62,62],
[72,69,67,0,62,70,67,68],
[62,65,64,68,0,73,62,68],
[58,56,60,60,57,0,61,73],
[71,60,68,63,68,69,0,71],
[68,59,68,62,62,57,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,62,69,60,61,68,61],
[52,0,53,43,39,60,66,54],
[68,77,0,61,83,80,70,86],
[61,87,69,0,82,80,85,82],
[70,91,47,48,0,70,65,58],
[69,70,50,50,60,0,66,66],
[62,64,60,45,65,64,0,67],
[69,76,44,48,72,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,87,82,72,77,70,63],
[61,0,67,67,59,68,70,67],
[43,63,0,58,62,73,48,59],
[48,63,72,0,64,68,61,66],
[58,71,68,66,0,64,59,57],
[53,62,57,62,66,0,57,55],
[60,60,82,69,71,73,0,64],
[67,63,71,64,73,75,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,67,55,72,63,43,59],
[76,0,70,74,65,81,55,73],
[63,60,0,62,72,63,43,82],
[75,56,68,0,85,68,66,73],
[58,65,58,45,0,65,41,71],
[67,49,67,62,65,0,44,68],
[87,75,87,64,89,86,0,87],
[71,57,48,57,59,62,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,49,56,56,46,55,34],
[80,0,60,67,58,57,74,46],
[81,70,0,71,77,65,81,50],
[74,63,59,0,65,52,69,47],
[74,72,53,65,0,47,71,60],
[84,73,65,78,83,0,57,74],
[75,56,49,61,59,73,0,48],
[96,84,80,83,70,56,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,56,67,57,63,77,71],
[70,0,72,69,69,74,79,65],
[74,58,0,64,60,69,62,67],
[63,61,66,0,63,68,66,60],
[73,61,70,67,0,71,69,71],
[67,56,61,62,59,0,70,62],
[53,51,68,64,61,60,0,63],
[59,65,63,70,59,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,59,86,61,84,58,75],
[57,0,70,59,34,71,47,64],
[71,60,0,95,71,92,71,61],
[44,71,35,0,34,60,56,73],
[69,96,59,96,0,97,71,86],
[46,59,38,70,33,0,58,50],
[72,83,59,74,59,72,0,75],
[55,66,69,57,44,80,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,62,66,64,77,59],
[70,0,64,71,74,71,83,66],
[70,66,0,65,68,69,71,67],
[68,59,65,0,56,64,73,63],
[64,56,62,74,0,75,70,60],
[66,59,61,66,55,0,74,61],
[53,47,59,57,60,56,0,56],
[71,64,63,67,70,69,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,53,55,66,72,66,71],
[59,0,43,58,56,57,51,69],
[77,87,0,65,78,69,71,80],
[75,72,65,0,76,65,69,67],
[64,74,52,54,0,55,58,60],
[58,73,61,65,75,0,64,66],
[64,79,59,61,72,66,0,67],
[59,61,50,63,70,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,57,56,74,65,56,64],
[66,0,69,68,73,75,64,69],
[73,61,0,68,63,74,63,61],
[74,62,62,0,72,65,69,64],
[56,57,67,58,0,63,51,65],
[65,55,56,65,67,0,64,58],
[74,66,67,61,79,66,0,65],
[66,61,69,66,65,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,60,65,63,73,61,61],
[76,0,63,75,66,83,72,74],
[70,67,0,67,60,77,60,68],
[65,55,63,0,60,68,68,59],
[67,64,70,70,0,78,67,61],
[57,47,53,62,52,0,56,58],
[69,58,70,62,63,74,0,58],
[69,56,62,71,69,72,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,62,63,75,71,70],
[71,0,68,64,71,67,67,77],
[66,62,0,50,61,69,63,70],
[68,66,80,0,69,64,72,72],
[67,59,69,61,0,63,68,67],
[55,63,61,66,67,0,68,70],
[59,63,67,58,62,62,0,69],
[60,53,60,58,63,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,72,71,85,78,51,77],
[40,0,61,53,53,65,53,75],
[58,69,0,57,68,62,61,79],
[59,77,73,0,61,65,77,73],
[45,77,62,69,0,67,61,73],
[52,65,68,65,63,0,57,55],
[79,77,69,53,69,73,0,71],
[53,55,51,57,57,75,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,62,64,71,59,64,68],
[48,0,53,64,61,55,54,66],
[68,77,0,62,72,64,71,74],
[66,66,68,0,64,65,70,58],
[59,69,58,66,0,69,65,56],
[71,75,66,65,61,0,67,63],
[66,76,59,60,65,63,0,51],
[62,64,56,72,74,67,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,72,57,63,80,69],
[73,0,68,63,80,83,66,86],
[62,62,0,64,68,60,70,77],
[58,67,66,0,66,54,70,61],
[73,50,62,64,0,55,70,58],
[67,47,70,76,75,0,76,85],
[50,64,60,60,60,54,0,71],
[61,44,53,69,72,45,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,62,60,53,57,62,57],
[77,0,66,74,54,69,67,60],
[68,64,0,76,69,59,76,72],
[70,56,54,0,54,47,58,60],
[77,76,61,76,0,58,64,66],
[73,61,71,83,72,0,73,67],
[68,63,54,72,66,57,0,63],
[73,70,58,70,64,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,77,73,65,71,67,70],
[76,0,68,84,50,63,66,69],
[53,62,0,62,53,49,61,58],
[57,46,68,0,61,63,62,58],
[65,80,77,69,0,70,83,75],
[59,67,81,67,60,0,74,72],
[63,64,69,68,47,56,0,75],
[60,61,72,72,55,58,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,51,57,72,54,65],
[66,0,56,60,59,66,62,70],
[68,74,0,60,52,81,74,73],
[79,70,70,0,66,73,60,62],
[73,71,78,64,0,65,69,63],
[58,64,49,57,65,0,67,67],
[76,68,56,70,61,63,0,47],
[65,60,57,68,67,63,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,43,86,43,43,86,86],
[42,0,63,21,0,42,43,63],
[87,67,0,43,0,0,66,43],
[44,109,87,0,22,66,66,108],
[87,130,130,108,0,65,108,108],
[87,88,130,64,65,0,66,107],
[44,87,64,64,22,64,0,64],
[44,67,87,22,22,23,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,58,71,65,65,72,67],
[63,0,61,74,68,66,67,70],
[72,69,0,85,79,65,64,77],
[59,56,45,0,65,64,66,68],
[65,62,51,65,0,64,63,66],
[65,64,65,66,66,0,63,65],
[58,63,66,64,67,67,0,75],
[63,60,53,62,64,65,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,65,64,69,73,69],
[66,0,59,68,58,66,67,68],
[62,71,0,69,65,62,70,67],
[65,62,61,0,65,62,74,70],
[66,72,65,65,0,57,67,66],
[61,64,68,68,73,0,68,67],
[57,63,60,56,63,62,0,67],
[61,62,63,60,64,63,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,81,64,54,88,69],
[60,0,48,69,51,62,73,64],
[64,82,0,78,66,70,73,67],
[49,61,52,0,51,46,62,57],
[66,79,64,79,0,52,76,73],
[76,68,60,84,78,0,74,59],
[42,57,57,68,54,56,0,53],
[61,66,63,73,57,71,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,79,64,73,68,70,70],
[59,0,70,64,65,67,68,67],
[51,60,0,55,64,60,54,61],
[66,66,75,0,71,67,73,64],
[57,65,66,59,0,56,62,61],
[62,63,70,63,74,0,71,75],
[60,62,76,57,68,59,0,69],
[60,63,69,66,69,55,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,56,51,61,59,56,64],
[64,0,55,61,61,61,46,63],
[74,75,0,70,63,65,60,71],
[79,69,60,0,62,62,55,71],
[69,69,67,68,0,71,58,80],
[71,69,65,68,59,0,66,71],
[74,84,70,75,72,64,0,72],
[66,67,59,59,50,59,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,71,61,67,65,64],
[61,0,58,65,57,65,65,63],
[63,72,0,64,53,66,60,62],
[59,65,66,0,73,67,62,72],
[69,73,77,57,0,69,67,67],
[63,65,64,63,61,0,65,60],
[65,65,70,68,63,65,0,71],
[66,67,68,58,63,70,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,78,66,68,43,80,79],
[53,0,51,41,68,55,55,79],
[52,79,0,53,67,43,80,40],
[64,89,77,0,80,67,92,65],
[62,62,63,50,0,51,92,50],
[87,75,87,63,79,0,117,63],
[50,75,50,38,38,13,0,51],
[51,51,90,65,80,67,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,78,69,65,65,74,63],
[44,0,71,58,54,56,52,55],
[52,59,0,57,50,56,67,56],
[61,72,73,0,54,65,63,56],
[65,76,80,76,0,78,72,67],
[65,74,74,65,52,0,57,59],
[56,78,63,67,58,73,0,66],
[67,75,74,74,63,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,57,58,62,65,56,66],
[69,0,65,72,74,71,66,58],
[73,65,0,60,74,65,64,60],
[72,58,70,0,73,65,71,67],
[68,56,56,57,0,53,65,54],
[65,59,65,65,77,0,75,68],
[74,64,66,59,65,55,0,69],
[64,72,70,63,76,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,56,61,64,57,69,68],
[71,0,58,74,60,73,66,70],
[74,72,0,61,67,69,58,76],
[69,56,69,0,67,72,55,65],
[66,70,63,63,0,58,61,66],
[73,57,61,58,72,0,60,72],
[61,64,72,75,69,70,0,65],
[62,60,54,65,64,58,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,46,66,64,52,57,58],
[75,0,64,73,73,67,62,72],
[84,66,0,69,68,65,68,66],
[64,57,61,0,72,64,65,65],
[66,57,62,58,0,65,53,61],
[78,63,65,66,65,0,57,64],
[73,68,62,65,77,73,0,70],
[72,58,64,65,69,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,89,81,68,82,66,64],
[62,0,66,87,73,86,68,70],
[41,64,0,78,65,63,64,61],
[49,43,52,0,60,59,44,50],
[62,57,65,70,0,75,68,63],
[48,44,67,71,55,0,58,48],
[64,62,66,86,62,72,0,65],
[66,60,69,80,67,82,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,68,69,67,60,69],
[61,0,60,58,51,52,56,53],
[65,70,0,69,60,54,62,62],
[62,72,61,0,59,65,62,63],
[61,79,70,71,0,62,66,68],
[63,78,76,65,68,0,69,63],
[70,74,68,68,64,61,0,65],
[61,77,68,67,62,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,71,52,73,73,71],
[60,0,61,76,51,70,67,75],
[65,69,0,75,58,71,69,75],
[59,54,55,0,55,66,68,66],
[78,79,72,75,0,63,84,81],
[57,60,59,64,67,0,66,68],
[57,63,61,62,46,64,0,63],
[59,55,55,64,49,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,71,68,79,64,68,73],
[68,0,63,63,77,74,66,64],
[59,67,0,69,74,62,74,62],
[62,67,61,0,62,64,71,51],
[51,53,56,68,0,56,75,59],
[66,56,68,66,74,0,68,66],
[62,64,56,59,55,62,0,53],
[57,66,68,79,71,64,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,71,62,68,68,68,68],
[69,0,68,69,64,62,67,64],
[59,62,0,62,52,62,64,57],
[68,61,68,0,71,68,66,73],
[62,66,78,59,0,63,64,56],
[62,68,68,62,67,0,63,60],
[62,63,66,64,66,67,0,73],
[62,66,73,57,74,70,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,68,63,59,59,62],
[62,0,58,73,57,58,56,57],
[69,72,0,75,60,68,71,68],
[62,57,55,0,60,54,51,53],
[67,73,70,70,0,54,62,57],
[71,72,62,76,76,0,74,62],
[71,74,59,79,68,56,0,67],
[68,73,62,77,73,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,69,57,67,75,68],
[65,0,68,83,81,70,76,73],
[65,62,0,66,71,76,80,83],
[61,47,64,0,59,67,78,70],
[73,49,59,71,0,68,77,71],
[63,60,54,63,62,0,62,70],
[55,54,50,52,53,68,0,57],
[62,57,47,60,59,60,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,64,70,68,77,61],
[64,0,58,55,64,77,76,66],
[64,72,0,66,70,67,76,70],
[66,75,64,0,79,77,75,64],
[60,66,60,51,0,70,74,65],
[62,53,63,53,60,0,70,58],
[53,54,54,55,56,60,0,51],
[69,64,60,66,65,72,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,56,63,56,47,72,40],
[70,0,66,63,68,45,70,57],
[74,64,0,61,75,54,67,66],
[67,67,69,0,76,56,74,51],
[74,62,55,54,0,38,67,44],
[83,85,76,74,92,0,73,56],
[58,60,63,56,63,57,0,25],
[90,73,64,79,86,74,105,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,59,51,56,49,51],
[65,0,69,55,69,70,58,67],
[70,61,0,51,61,48,53,75],
[71,75,79,0,75,59,79,72],
[79,61,69,55,0,48,58,71],
[74,60,82,71,82,0,62,82],
[81,72,77,51,72,68,0,93],
[79,63,55,58,59,48,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,79,72,67,78,72,60],
[55,0,56,47,60,66,48,53],
[51,74,0,64,68,67,62,61],
[58,83,66,0,80,72,64,54],
[63,70,62,50,0,65,60,56],
[52,64,63,58,65,0,63,62],
[58,82,68,66,70,67,0,68],
[70,77,69,76,74,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,62,66,63,61,69,56],
[59,0,61,56,59,50,67,55],
[68,69,0,62,64,66,77,62],
[64,74,68,0,61,62,77,70],
[67,71,66,69,0,58,71,67],
[69,80,64,68,72,0,77,73],
[61,63,53,53,59,53,0,63],
[74,75,68,60,63,57,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,56,50,48,56,65,54],
[69,0,56,52,60,77,62,56],
[74,74,0,71,64,90,61,62],
[80,78,59,0,58,96,60,87],
[82,70,66,72,0,85,53,70],
[74,53,40,34,45,0,51,33],
[65,68,69,70,77,79,0,67],
[76,74,68,43,60,97,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,62,66,62,70,71],
[61,0,68,65,65,71,70,61],
[60,62,0,73,67,65,68,56],
[68,65,57,0,62,64,69,60],
[64,65,63,68,0,73,71,57],
[68,59,65,66,57,0,68,59],
[60,60,62,61,59,62,0,63],
[59,69,74,70,73,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,59,94,47,54,67],
[65,0,58,66,74,64,57,82],
[62,72,0,80,96,76,70,79],
[71,64,50,0,80,53,63,81],
[36,56,34,50,0,40,66,58],
[83,66,54,77,90,0,74,77],
[76,73,60,67,64,56,0,74],
[63,48,51,49,72,53,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,75,58,71,66,65,72],
[44,0,59,60,53,69,73,67],
[55,71,0,55,49,62,59,63],
[72,70,75,0,68,75,63,64],
[59,77,81,62,0,77,67,75],
[64,61,68,55,53,0,67,60],
[65,57,71,67,63,63,0,66],
[58,63,67,66,55,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,70,70,77,56,63,63],
[91,0,54,92,76,68,71,49],
[60,76,0,82,58,76,69,54],
[60,38,48,0,60,48,47,41],
[53,54,72,70,0,86,55,66],
[74,62,54,82,44,0,52,71],
[67,59,61,83,75,78,0,53],
[67,81,76,89,64,59,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,87,78,64,56,68,58],
[63,0,99,70,61,81,69,52],
[43,31,0,58,44,54,49,38],
[52,60,72,0,47,55,73,48],
[66,69,86,83,0,67,61,75],
[74,49,76,75,63,0,82,53],
[62,61,81,57,69,48,0,57],
[72,78,92,82,55,77,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,68,64,75,64,72,69],
[54,0,57,61,64,62,63,58],
[62,73,0,77,72,68,67,76],
[66,69,53,0,68,62,48,67],
[55,66,58,62,0,43,61,66],
[66,68,62,68,87,0,65,77],
[58,67,63,82,69,65,0,62],
[61,72,54,63,64,53,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,80,68,76,74,83,64],
[66,0,56,69,82,70,71,77],
[50,74,0,71,81,69,66,59],
[62,61,59,0,65,68,64,69],
[54,48,49,65,0,65,53,69],
[56,60,61,62,65,0,67,64],
[47,59,64,66,77,63,0,67],
[66,53,71,61,61,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,55,60,58,61,65],
[67,0,63,60,61,61,67,61],
[71,67,0,61,66,60,62,66],
[75,70,69,0,71,71,73,60],
[70,69,64,59,0,72,66,65],
[72,69,70,59,58,0,68,66],
[69,63,68,57,64,62,0,65],
[65,69,64,70,65,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,51,77,78,77,77,77],
[53,0,53,53,27,53,53,53],
[79,77,0,52,27,26,53,26],
[53,77,78,0,27,52,53,51],
[52,103,103,103,0,52,52,77],
[53,77,104,78,78,0,78,78],
[53,77,77,77,78,52,0,51],
[53,77,104,79,53,52,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,59,69,71,66,67,72],
[58,0,61,60,63,57,62,63],
[71,69,0,67,64,65,65,69],
[61,70,63,0,66,55,62,60],
[59,67,66,64,0,59,60,68],
[64,73,65,75,71,0,62,71],
[63,68,65,68,70,68,0,74],
[58,67,61,70,62,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,73,73,77,77,54,35],
[92,0,73,92,57,112,73,92],
[57,57,0,92,76,77,73,72],
[57,38,38,0,58,58,36,72],
[53,73,54,72,0,93,35,53],
[53,18,53,72,37,0,53,72],
[76,57,57,94,95,77,0,56],
[95,38,58,58,77,58,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,78,90,62,82,67,66],
[70,0,60,69,60,58,49,63],
[52,70,0,80,47,62,47,62],
[40,61,50,0,56,70,40,68],
[68,70,83,74,0,65,61,83],
[48,72,68,60,65,0,48,65],
[63,81,83,90,69,82,0,69],
[64,67,68,62,47,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,61,57,58,73,64],
[62,0,63,61,68,55,71,66],
[67,67,0,53,67,50,71,60],
[69,69,77,0,68,62,78,68],
[73,62,63,62,0,50,73,64],
[72,75,80,68,80,0,81,64],
[57,59,59,52,57,49,0,58],
[66,64,70,62,66,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,31,49,59,59,30,60],
[68,0,68,67,91,51,50,78],
[99,62,0,91,119,90,80,78],
[81,63,39,0,70,60,61,58],
[71,39,11,60,0,20,30,59],
[71,79,40,70,110,0,60,59],
[100,80,50,69,100,70,0,68],
[70,52,52,72,71,71,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,67,74,74,64,83,73],
[66,0,55,63,68,60,70,60],
[63,75,0,74,67,68,74,77],
[56,67,56,0,65,59,75,58],
[56,62,63,65,0,65,74,62],
[66,70,62,71,65,0,73,64],
[47,60,56,55,56,57,0,56],
[57,70,53,72,68,66,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,68,67,58,75,56],
[63,0,62,66,62,61,65,62],
[64,68,0,66,69,56,56,60],
[62,64,64,0,66,65,60,63],
[63,68,61,64,0,54,62,53],
[72,69,74,65,76,0,65,71],
[55,65,74,70,68,65,0,63],
[74,68,70,67,77,59,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,79,66,41,27,80,40],
[78,0,79,81,56,81,80,68],
[51,51,0,66,51,64,51,41],
[64,49,64,0,78,51,76,50],
[89,74,79,52,0,62,78,51],
[103,49,66,79,68,0,79,52],
[50,50,79,54,52,51,0,40],
[90,62,89,80,79,78,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,65,65,65,0,0,0],
[130,0,130,130,65,0,65,65],
[65,0,0,130,65,0,0,65],
[65,0,0,0,0,0,0,0],
[65,65,65,130,0,65,65,65],
[130,130,130,130,65,0,65,65],
[130,65,130,130,65,65,0,130],
[130,65,65,130,65,65,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,73,66,62,83,58,66],
[60,0,63,65,58,70,58,50],
[57,67,0,56,63,73,67,57],
[64,65,74,0,60,72,60,55],
[68,72,67,70,0,77,60,65],
[47,60,57,58,53,0,60,59],
[72,72,63,70,70,70,0,70],
[64,80,73,75,65,71,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,67,59,55,67,72],
[71,0,67,69,67,65,67,73],
[65,63,0,56,57,59,62,68],
[63,61,74,0,60,58,77,74],
[71,63,73,70,0,59,83,65],
[75,65,71,72,71,0,70,67],
[63,63,68,53,47,60,0,73],
[58,57,62,56,65,63,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,65,75,86,98,59],
[61,0,81,81,73,94,88,70],
[61,49,0,66,65,79,79,65],
[65,49,64,0,67,69,60,45],
[55,57,65,63,0,66,79,49],
[44,36,51,61,64,0,87,62],
[32,42,51,70,51,43,0,39],
[71,60,65,85,81,68,91,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,65,59,41,73,68],
[63,0,53,66,62,63,57,60],
[70,77,0,71,76,74,72,63],
[65,64,59,0,76,59,80,63],
[71,68,54,54,0,45,60,48],
[89,67,56,71,85,0,74,77],
[57,73,58,50,70,56,0,72],
[62,70,67,67,82,53,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,54,46,65,68,78,51],
[76,0,71,63,62,92,69,74],
[76,59,0,58,78,77,93,64],
[84,67,72,0,54,85,75,77],
[65,68,52,76,0,76,85,62],
[62,38,53,45,54,0,67,47],
[52,61,37,55,45,63,0,56],
[79,56,66,53,68,83,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,61,62,58,62,57],
[70,0,58,61,64,58,56,68],
[61,72,0,71,69,60,66,72],
[69,69,59,0,68,59,57,63],
[68,66,61,62,0,57,63,61],
[72,72,70,71,73,0,68,65],
[68,74,64,73,67,62,0,66],
[73,62,58,67,69,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,70,89,72,64,79,90],
[58,0,67,75,53,45,84,76],
[60,63,0,89,54,61,69,79],
[41,55,41,0,55,45,70,59],
[58,77,76,75,0,85,74,84],
[66,85,69,85,45,0,85,102],
[51,46,61,60,56,45,0,63],
[40,54,51,71,46,28,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,60,62,92,71,83,69],
[72,0,57,73,83,67,72,68],
[70,73,0,61,87,82,80,71],
[68,57,69,0,80,69,65,62],
[38,47,43,50,0,44,47,49],
[59,63,48,61,86,0,72,65],
[47,58,50,65,83,58,0,56],
[61,62,59,68,81,65,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,54,60,77,61,63,60],
[60,0,68,52,71,79,56,69],
[76,62,0,70,78,65,80,62],
[70,78,60,0,68,69,68,90],
[53,59,52,62,0,54,64,75],
[69,51,65,61,76,0,47,83],
[67,74,50,62,66,83,0,76],
[70,61,68,40,55,47,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,65,59,63,59,59,66],
[75,0,74,65,71,71,72,80],
[65,56,0,57,65,69,64,66],
[71,65,73,0,70,74,69,81],
[67,59,65,60,0,66,62,71],
[71,59,61,56,64,0,58,71],
[71,58,66,61,68,72,0,67],
[64,50,64,49,59,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,78,75,81,67,73,66],
[67,0,66,71,71,58,66,61],
[52,64,0,74,66,57,67,65],
[55,59,56,0,62,41,55,52],
[49,59,64,68,0,51,54,70],
[63,72,73,89,79,0,82,79],
[57,64,63,75,76,48,0,61],
[64,69,65,78,60,51,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,77,45,54,22,54,66],
[96,0,87,65,74,63,74,64],
[53,43,0,64,63,11,33,42],
[85,65,66,0,54,32,53,54],
[76,56,67,76,0,67,66,67],
[108,67,119,98,63,0,86,76],
[76,56,97,77,64,44,0,77],
[64,66,88,76,63,54,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,83,81,81,67,69,60],
[68,0,70,73,70,62,62,69],
[47,60,0,52,66,48,48,70],
[49,57,78,0,76,51,54,78],
[49,60,64,54,0,30,41,49],
[63,68,82,79,100,0,68,86],
[61,68,82,76,89,62,0,69],
[70,61,60,52,81,44,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,66,56,54,65,75,53],
[74,0,63,62,65,68,66,63],
[64,67,0,72,65,72,76,68],
[74,68,58,0,71,72,74,76],
[76,65,65,59,0,75,67,58],
[65,62,58,58,55,0,73,66],
[55,64,54,56,63,57,0,66],
[77,67,62,54,72,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,77,80,59,57,53],
[68,0,69,71,70,53,57,61],
[57,61,0,68,64,48,48,51],
[53,59,62,0,63,48,58,51],
[50,60,66,67,0,60,49,54],
[71,77,82,82,70,0,65,69],
[73,73,82,72,81,65,0,70],
[77,69,79,79,76,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,67,50,54,57,63],
[68,0,61,69,56,65,52,59],
[70,69,0,68,56,62,62,64],
[63,61,62,0,50,61,60,70],
[80,74,74,80,0,71,62,70],
[76,65,68,69,59,0,66,64],
[73,78,68,70,68,64,0,70],
[67,71,66,60,60,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,69,70,79,79,74,62],
[56,0,57,62,65,69,56,60],
[61,73,0,71,68,64,72,68],
[60,68,59,0,74,72,72,60],
[51,65,62,56,0,72,73,65],
[51,61,66,58,58,0,52,55],
[56,74,58,58,57,78,0,50],
[68,70,62,70,65,75,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,70,62,71,75,73,67],
[58,0,66,53,70,59,59,56],
[60,64,0,54,68,49,58,64],
[68,77,76,0,68,61,71,72],
[59,60,62,62,0,68,65,63],
[55,71,81,69,62,0,69,62],
[57,71,72,59,65,61,0,70],
[63,74,66,58,67,68,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,62,66,65,68,63],
[58,0,69,65,62,59,80,62],
[65,61,0,56,60,61,56,67],
[68,65,74,0,67,65,65,73],
[64,68,70,63,0,66,70,61],
[65,71,69,65,64,0,70,64],
[62,50,74,65,60,60,0,60],
[67,68,63,57,69,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,67,70,65,67,72,67],
[74,0,66,71,61,66,68,74],
[63,64,0,65,62,68,64,65],
[60,59,65,0,60,68,75,70],
[65,69,68,70,0,72,69,68],
[63,64,62,62,58,0,61,59],
[58,62,66,55,61,69,0,55],
[63,56,65,60,62,71,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,68,78,74,59,69],
[66,0,65,78,82,77,72,79],
[70,65,0,76,70,71,68,64],
[62,52,54,0,69,70,60,61],
[52,48,60,61,0,68,58,62],
[56,53,59,60,62,0,62,59],
[71,58,62,70,72,68,0,70],
[61,51,66,69,68,71,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,67,72,65,68,67,91],
[45,0,49,59,59,60,48,60],
[63,81,0,62,75,66,64,79],
[58,71,68,0,67,66,62,74],
[65,71,55,63,0,60,57,75],
[62,70,64,64,70,0,64,87],
[63,82,66,68,73,66,0,67],
[39,70,51,56,55,43,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,80,70,60,72,78],
[67,0,64,75,62,68,66,69],
[71,66,0,68,70,65,79,73],
[50,55,62,0,61,66,64,67],
[60,68,60,69,0,63,76,61],
[70,62,65,64,67,0,68,74],
[58,64,51,66,54,62,0,55],
[52,61,57,63,69,56,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,79,70,67,66,61,70],
[61,0,86,71,63,66,76,65],
[51,44,0,61,64,54,55,57],
[60,59,69,0,58,57,61,71],
[63,67,66,72,0,65,52,60],
[64,64,76,73,65,0,54,64],
[69,54,75,69,78,76,0,72],
[60,65,73,59,70,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,77,61,61,75,68,62],
[50,0,64,62,67,62,66,55],
[53,66,0,66,60,66,71,60],
[69,68,64,0,49,69,74,66],
[69,63,70,81,0,70,78,65],
[55,68,64,61,60,0,65,58],
[62,64,59,56,52,65,0,57],
[68,75,70,64,65,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,65,65,82,48,65,97],
[48,0,34,48,34,63,63,97],
[65,96,0,48,51,80,96,113],
[65,82,82,0,65,65,65,99],
[48,96,79,65,0,63,79,113],
[82,67,50,65,67,0,66,81],
[65,67,34,65,51,64,0,80],
[33,33,17,31,17,49,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,59,59,44,74,75,42],
[73,0,87,43,43,59,60,41],
[71,43,0,60,43,74,76,58],
[71,87,70,0,57,44,72,71],
[86,87,87,73,0,44,60,72],
[56,71,56,86,86,0,87,84],
[55,70,54,58,70,43,0,41],
[88,89,72,59,58,46,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,62,62,59,63,77],
[63,0,62,66,60,64,62,76],
[64,68,0,68,66,61,62,73],
[68,64,62,0,67,67,59,73],
[68,70,64,63,0,67,65,75],
[71,66,69,63,63,0,60,78],
[67,68,68,71,65,70,0,73],
[53,54,57,57,55,52,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,74,83,86,87,61,71],
[61,0,74,82,74,71,66,67],
[56,56,0,85,74,72,52,69],
[47,48,45,0,80,78,52,69],
[44,56,56,50,0,56,54,62],
[43,59,58,52,74,0,51,60],
[69,64,78,78,76,79,0,78],
[59,63,61,61,68,70,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,59,68,50,55,62,60],
[75,0,69,75,60,66,69,69],
[71,61,0,75,58,59,61,60],
[62,55,55,0,58,52,58,62],
[80,70,72,72,0,67,68,65],
[75,64,71,78,63,0,64,67],
[68,61,69,72,62,66,0,51],
[70,61,70,68,65,63,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,68,67,58,66,61],
[71,0,70,76,72,65,63,72],
[64,60,0,67,64,57,60,66],
[62,54,63,0,69,61,66,62],
[63,58,66,61,0,56,64,62],
[72,65,73,69,74,0,65,71],
[64,67,70,64,66,65,0,68],
[69,58,64,68,68,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,50,72,65,41,63,70],
[83,0,45,74,56,50,40,75],
[80,85,0,79,73,64,66,85],
[58,56,51,0,53,47,38,45],
[65,74,57,77,0,66,71,64],
[89,80,66,83,64,0,60,80],
[67,90,64,92,59,70,0,83],
[60,55,45,85,66,50,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,57,58,69,59,68,69],
[60,0,60,55,72,71,65,57],
[73,70,0,54,70,53,82,57],
[72,75,76,0,67,70,71,60],
[61,58,60,63,0,75,67,53],
[71,59,77,60,55,0,74,57],
[62,65,48,59,63,56,0,59],
[61,73,73,70,77,73,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,51,63,54,64,59,58],
[71,0,69,65,65,63,59,75],
[79,61,0,61,60,72,76,68],
[67,65,69,0,62,66,63,74],
[76,65,70,68,0,66,71,71],
[66,67,58,64,64,0,70,62],
[71,71,54,67,59,60,0,64],
[72,55,62,56,59,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,56,62,57,65,59,64],
[68,0,62,62,67,62,61,62],
[74,68,0,64,66,71,74,66],
[68,68,66,0,61,60,64,67],
[73,63,64,69,0,80,77,61],
[65,68,59,70,50,0,63,61],
[71,69,56,66,53,67,0,63],
[66,68,64,63,69,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,66,66,58,62,52,69],
[73,0,65,69,66,65,63,78],
[64,65,0,61,50,64,65,53],
[64,61,69,0,56,59,63,69],
[72,64,80,74,0,69,69,79],
[68,65,66,71,61,0,53,74],
[78,67,65,67,61,77,0,79],
[61,52,77,61,51,56,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,45,69,56,72,59],
[67,0,74,67,68,57,78,72],
[58,56,0,59,80,58,68,50],
[85,63,71,0,88,78,83,76],
[61,62,50,42,0,57,75,56],
[74,73,72,52,73,0,74,68],
[58,52,62,47,55,56,0,49],
[71,58,80,54,74,62,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,54,69,81,65,79,44],
[83,0,76,80,79,64,72,65],
[76,54,0,75,78,74,88,67],
[61,50,55,0,66,63,71,69],
[49,51,52,64,0,42,61,62],
[65,66,56,67,88,0,73,62],
[51,58,42,59,69,57,0,58],
[86,65,63,61,68,68,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,83,56,62,59,58,68],
[52,0,55,53,56,61,46,61],
[47,75,0,60,59,51,54,55],
[74,77,70,0,65,61,53,73],
[68,74,71,65,0,72,62,71],
[71,69,79,69,58,0,65,64],
[72,84,76,77,68,65,0,77],
[62,69,75,57,59,66,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,69,73,67,76,70],
[65,0,69,73,76,70,73,67],
[60,61,0,64,66,63,65,56],
[61,57,66,0,65,65,66,60],
[57,54,64,65,0,67,66,62],
[63,60,67,65,63,0,67,56],
[54,57,65,64,64,63,0,65],
[60,63,74,70,68,74,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,51,72,62,70,75,75],
[69,0,55,80,60,71,77,73],
[79,75,0,80,65,83,77,74],
[58,50,50,0,64,62,65,73],
[68,70,65,66,0,65,66,74],
[60,59,47,68,65,0,71,74],
[55,53,53,65,64,59,0,64],
[55,57,56,57,56,56,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,53,50,55,62,71,54],
[65,0,53,50,70,73,62,56],
[77,77,0,60,60,73,69,63],
[80,80,70,0,64,79,78,69],
[75,60,70,66,0,76,75,64],
[68,57,57,51,54,0,62,53],
[59,68,61,52,55,68,0,54],
[76,74,67,61,66,77,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,67,67,69,68,66,67],
[69,0,66,70,72,61,66,77],
[63,64,0,63,67,60,62,76],
[63,60,67,0,79,47,63,71],
[61,58,63,51,0,60,56,68],
[62,69,70,83,70,0,65,75],
[64,64,68,67,74,65,0,77],
[63,53,54,59,62,55,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,58,68,59,60,72,59],
[64,0,52,60,65,73,69,61],
[72,78,0,68,70,61,69,70],
[62,70,62,0,55,45,66,61],
[71,65,60,75,0,58,65,61],
[70,57,69,85,72,0,63,69],
[58,61,61,64,65,67,0,63],
[71,69,60,69,69,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,53,77,55,83,61,71],
[60,0,67,57,69,66,69,64],
[77,63,0,89,68,87,68,82],
[53,73,41,0,48,59,48,64],
[75,61,62,82,0,66,66,64],
[47,64,43,71,64,0,56,62],
[69,61,62,82,64,74,0,72],
[59,66,48,66,66,68,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,52,49,55,52,56,52],
[69,0,57,60,64,68,78,61],
[78,73,0,67,70,60,70,60],
[81,70,63,0,71,63,74,72],
[75,66,60,59,0,49,68,59],
[78,62,70,67,81,0,68,77],
[74,52,60,56,62,62,0,55],
[78,69,70,58,71,53,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,65,71,77,82,75,70],
[54,0,59,65,75,72,73,61],
[65,71,0,63,76,76,70,69],
[59,65,67,0,64,66,61,61],
[53,55,54,66,0,63,66,60],
[48,58,54,64,67,0,65,59],
[55,57,60,69,64,65,0,61],
[60,69,61,69,70,71,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,73,78,62,66,78,70],
[56,0,66,65,68,71,64,62],
[57,64,0,53,62,65,57,50],
[52,65,77,0,56,68,70,69],
[68,62,68,74,0,69,64,61],
[64,59,65,62,61,0,58,57],
[52,66,73,60,66,72,0,61],
[60,68,80,61,69,73,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,69,64,56,70,64],
[62,0,57,63,57,56,64,49],
[64,73,0,76,61,62,61,67],
[61,67,54,0,59,59,65,58],
[66,73,69,71,0,61,67,63],
[74,74,68,71,69,0,68,58],
[60,66,69,65,63,62,0,58],
[66,81,63,72,67,72,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,58,64,62,64,63,57],
[81,0,69,71,63,72,71,80],
[72,61,0,67,71,75,68,83],
[66,59,63,0,65,69,63,63],
[68,67,59,65,0,66,65,77],
[66,58,55,61,64,0,54,60],
[67,59,62,67,65,76,0,78],
[73,50,47,67,53,70,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,89,63,61,72,72,66],
[54,0,71,70,48,76,52,60],
[41,59,0,53,51,63,38,53],
[67,60,77,0,53,63,52,55],
[69,82,79,77,0,85,54,70],
[58,54,67,67,45,0,55,53],
[58,78,92,78,76,75,0,69],
[64,70,77,75,60,77,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,39,42,53,47,62,68],
[80,0,50,68,64,60,58,73],
[91,80,0,72,59,54,69,71],
[88,62,58,0,64,63,62,63],
[77,66,71,66,0,67,61,63],
[83,70,76,67,63,0,66,79],
[68,72,61,68,69,64,0,78],
[62,57,59,67,67,51,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,80,84,77,76,82,48],
[52,0,53,82,54,60,59,47],
[50,77,0,77,56,69,63,63],
[46,48,53,0,40,47,53,47],
[53,76,74,90,0,89,74,66],
[54,70,61,83,41,0,67,60],
[48,71,67,77,56,63,0,48],
[82,83,67,83,64,70,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,59,67,68,67,67,76],
[68,0,62,67,66,73,67,82],
[71,68,0,61,62,67,52,72],
[63,63,69,0,64,63,56,76],
[62,64,68,66,0,70,70,81],
[63,57,63,67,60,0,61,81],
[63,63,78,74,60,69,0,76],
[54,48,58,54,49,49,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,61,60,68,58,57,62],
[77,0,77,71,80,65,67,68],
[69,53,0,65,78,66,69,67],
[70,59,65,0,67,71,68,75],
[62,50,52,63,0,60,57,52],
[72,65,64,59,70,0,68,69],
[73,63,61,62,73,62,0,64],
[68,62,63,55,78,61,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,55,59,67,61,64],
[69,0,63,64,62,65,59,65],
[67,67,0,70,66,68,62,66],
[75,66,60,0,63,65,63,61],
[71,68,64,67,0,76,68,68],
[63,65,62,65,54,0,64,64],
[69,71,68,67,62,66,0,73],
[66,65,64,69,62,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,71,52,63,56,62,65],
[76,0,76,60,84,66,65,69],
[59,54,0,66,68,50,45,55],
[78,70,64,0,76,55,57,66],
[67,46,62,54,0,59,53,71],
[74,64,80,75,71,0,71,80],
[68,65,85,73,77,59,0,68],
[65,61,75,64,59,50,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,50,83,66,74,71,80],
[69,0,73,94,74,75,67,61],
[80,57,0,77,72,82,59,68],
[47,36,53,0,65,56,61,62],
[64,56,58,65,0,66,72,58],
[56,55,48,74,64,0,65,49],
[59,63,71,69,58,65,0,65],
[50,69,62,68,72,81,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,54,62,55,62,68,56],
[72,0,52,49,62,69,70,56],
[76,78,0,69,64,78,77,67],
[68,81,61,0,63,75,81,65],
[75,68,66,67,0,70,80,61],
[68,61,52,55,60,0,71,57],
[62,60,53,49,50,59,0,46],
[74,74,63,65,69,73,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,54,54,54,60,55,61],
[73,0,58,76,70,61,61,68],
[76,72,0,71,65,66,61,73],
[76,54,59,0,58,61,57,58],
[76,60,65,72,0,67,69,74],
[70,69,64,69,63,0,65,71],
[75,69,69,73,61,65,0,69],
[69,62,57,72,56,59,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,68,55,52,51,54,57],
[72,0,62,61,47,53,66,56],
[62,68,0,60,57,52,56,53],
[75,69,70,0,62,61,66,60],
[78,83,73,68,0,68,66,65],
[79,77,78,69,62,0,61,76],
[76,64,74,64,64,69,0,66],
[73,74,77,70,65,54,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,81,72,75,66,61,68],
[66,0,68,60,72,54,60,65],
[49,62,0,66,66,64,53,56],
[58,70,64,0,70,71,63,74],
[55,58,64,60,0,54,52,61],
[64,76,66,59,76,0,61,67],
[69,70,77,67,78,69,0,64],
[62,65,74,56,69,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,52,73,63,72,52,58],
[74,0,76,78,64,72,76,74],
[78,54,0,77,60,63,69,67],
[57,52,53,0,61,58,53,52],
[67,66,70,69,0,68,58,59],
[58,58,67,72,62,0,61,62],
[78,54,61,77,72,69,0,65],
[72,56,63,78,71,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,54,58,58,67,63],
[72,0,68,64,58,64,65,65],
[68,62,0,64,64,66,80,60],
[76,66,66,0,65,66,71,69],
[72,72,66,65,0,63,76,70],
[72,66,64,64,67,0,67,70],
[63,65,50,59,54,63,0,65],
[67,65,70,61,60,60,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,60,75,67,69,60,78],
[54,0,57,65,63,60,55,73],
[70,73,0,58,61,62,60,70],
[55,65,72,0,54,61,56,70],
[63,67,69,76,0,67,67,74],
[61,70,68,69,63,0,54,65],
[70,75,70,74,63,76,0,79],
[52,57,60,60,56,65,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,72,66,63,68,70,67],
[59,0,66,65,58,61,63,72],
[58,64,0,74,65,61,69,65],
[64,65,56,0,60,66,63,66],
[67,72,65,70,0,54,72,67],
[62,69,69,64,76,0,58,79],
[60,67,61,67,58,72,0,65],
[63,58,65,64,63,51,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,56,67,49,62,59,57],
[79,0,69,71,57,72,67,64],
[74,61,0,73,65,64,79,63],
[63,59,57,0,54,60,60,58],
[81,73,65,76,0,71,74,68],
[68,58,66,70,59,0,67,63],
[71,63,51,70,56,63,0,63],
[73,66,67,72,62,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,68,56,59,67,62],
[66,0,76,68,61,69,71,63],
[60,54,0,60,49,64,63,60],
[62,62,70,0,61,64,67,69],
[74,69,81,69,0,71,76,65],
[71,61,66,66,59,0,62,71],
[63,59,67,63,54,68,0,59],
[68,67,70,61,65,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,62,40,66,52,46,47],
[77,0,68,49,45,52,52,55],
[68,62,0,59,53,39,51,54],
[90,81,71,0,51,84,89,75],
[64,85,77,79,0,72,66,75],
[78,78,91,46,58,0,40,49],
[84,78,79,41,64,90,0,68],
[83,75,76,55,55,81,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,59,67,64,67,67,66],
[61,0,65,59,68,74,68,72],
[71,65,0,74,77,69,77,77],
[63,71,56,0,68,70,69,82],
[66,62,53,62,0,67,64,76],
[63,56,61,60,63,0,66,58],
[63,62,53,61,66,64,0,73],
[64,58,53,48,54,72,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,76,63,70,66,69],
[65,0,72,67,63,60,64,66],
[60,58,0,61,64,60,61,61],
[54,63,69,0,70,66,64,64],
[67,67,66,60,0,71,61,70],
[60,70,70,64,59,0,68,69],
[64,66,69,66,69,62,0,65],
[61,64,69,66,60,61,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,74,65,59,69,64],
[60,0,65,63,59,56,62,56],
[62,65,0,66,60,56,66,64],
[56,67,64,0,56,48,63,62],
[65,71,70,74,0,68,68,72],
[71,74,74,82,62,0,75,74],
[61,68,64,67,62,55,0,67],
[66,74,66,68,58,56,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,74,61,74,59,61,71],
[39,0,65,43,46,58,48,37],
[56,65,0,49,69,69,56,58],
[69,87,81,0,71,74,68,65],
[56,84,61,59,0,82,55,63],
[71,72,61,56,48,0,53,62],
[69,82,74,62,75,77,0,73],
[59,93,72,65,67,68,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,72,71,61,55,65],
[60,0,67,65,67,62,48,56],
[66,63,0,61,67,65,55,65],
[58,65,69,0,69,63,68,64],
[59,63,63,61,0,58,52,53],
[69,68,65,67,72,0,54,63],
[75,82,75,62,78,76,0,69],
[65,74,65,66,77,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,72,61,73,60,63],
[59,0,55,65,56,77,62,65],
[60,75,0,68,66,72,66,65],
[58,65,62,0,53,62,57,52],
[69,74,64,77,0,71,57,69],
[57,53,58,68,59,0,46,54],
[70,68,64,73,73,84,0,76],
[67,65,65,78,61,76,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,74,63,74,73,74,57],
[61,0,64,67,58,67,73,64],
[56,66,0,68,69,69,70,67],
[67,63,62,0,66,63,85,47],
[56,72,61,64,0,72,72,54],
[57,63,61,67,58,0,80,54],
[56,57,60,45,58,50,0,39],
[73,66,63,83,76,76,91,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,58,74,71,65,62],
[60,0,61,59,59,66,60,51],
[61,69,0,59,70,72,66,58],
[72,71,71,0,81,62,62,65],
[56,71,60,49,0,57,59,55],
[59,64,58,68,73,0,63,59],
[65,70,64,68,71,67,0,64],
[68,79,72,65,75,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,51,71,77,65,37,54],
[72,0,65,70,78,60,49,54],
[79,65,0,62,81,49,60,53],
[59,60,68,0,78,55,41,50],
[53,52,49,52,0,45,47,42],
[65,70,81,75,85,0,65,68],
[93,81,70,89,83,65,0,69],
[76,76,77,80,88,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,87,71,65,78,67,80],
[52,0,91,50,57,59,68,72],
[43,39,0,29,47,33,43,46],
[59,80,101,0,65,77,71,82],
[65,73,83,65,0,64,59,81],
[52,71,97,53,66,0,72,77],
[63,62,87,59,71,58,0,81],
[50,58,84,48,49,53,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,69,59,68,62,64,62],
[75,0,76,65,71,70,74,72],
[61,54,0,55,55,62,65,74],
[71,65,75,0,74,73,69,82],
[62,59,75,56,0,64,64,76],
[68,60,68,57,66,0,67,71],
[66,56,65,61,66,63,0,74],
[68,58,56,48,54,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,61,74,67,69,62],
[60,0,53,60,65,62,63,68],
[62,77,0,69,70,65,66,69],
[69,70,61,0,77,75,68,68],
[56,65,60,53,0,58,62,66],
[63,68,65,55,72,0,68,65],
[61,67,64,62,68,62,0,49],
[68,62,61,62,64,65,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,56,70,62,60,60,62],
[69,0,59,65,63,63,66,60],
[74,71,0,69,72,74,74,63],
[60,65,61,0,65,59,62,59],
[68,67,58,65,0,58,71,57],
[70,67,56,71,72,0,72,68],
[70,64,56,68,59,58,0,69],
[68,70,67,71,73,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,64,62,68,79,68,62],
[55,0,59,53,61,69,61,60],
[66,71,0,63,71,73,67,69],
[68,77,67,0,66,72,54,65],
[62,69,59,64,0,77,60,60],
[51,61,57,58,53,0,62,55],
[62,69,63,76,70,68,0,57],
[68,70,61,65,70,75,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,94,66,70,71,72,64],
[50,0,68,67,80,76,94,76],
[36,62,0,60,65,60,62,56],
[64,63,70,0,80,74,85,74],
[60,50,65,50,0,68,56,57],
[59,54,70,56,62,0,60,52],
[58,36,68,45,74,70,0,51],
[66,54,74,56,73,78,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,55,72,58,67,62],
[64,0,70,53,66,55,60,68],
[63,60,0,61,57,56,56,58],
[75,77,69,0,81,64,69,65],
[58,64,73,49,0,51,52,56],
[72,75,74,66,79,0,74,65],
[63,70,74,61,78,56,0,57],
[68,62,72,65,74,65,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,82,82,74,74,82,103],
[65,0,75,74,76,65,46,57],
[48,55,0,43,47,63,28,49],
[48,56,87,0,57,45,47,40],
[56,54,83,73,0,54,54,58],
[56,65,67,85,76,0,65,65],
[48,84,102,83,76,65,0,67],
[27,73,81,90,72,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,77,68,68,77,60,62],
[61,0,78,57,69,69,61,63],
[53,52,0,50,58,65,48,49],
[62,73,80,0,76,63,71,67],
[62,61,72,54,0,63,63,58],
[53,61,65,67,67,0,67,65],
[70,69,82,59,67,63,0,67],
[68,67,81,63,72,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,44,61,67,47,53,71],
[83,0,65,74,70,61,53,60],
[86,65,0,76,80,64,64,81],
[69,56,54,0,68,48,66,62],
[63,60,50,62,0,53,50,61],
[83,69,66,82,77,0,61,73],
[77,77,66,64,80,69,0,76],
[59,70,49,68,69,57,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,65,53,60,46,62,40],
[77,0,76,79,70,65,75,58],
[65,54,0,72,74,62,68,61],
[77,51,58,0,88,70,67,69],
[70,60,56,42,0,63,57,50],
[84,65,68,60,67,0,64,65],
[68,55,62,63,73,66,0,60],
[90,72,69,61,80,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,49,32,65,65,49,65],
[81,0,97,48,49,97,64,82],
[81,33,0,65,33,65,65,82],
[98,82,65,0,81,98,49,66],
[65,81,97,49,0,65,65,49],
[65,33,65,32,65,0,48,50],
[81,66,65,81,65,82,0,82],
[65,48,48,64,81,80,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,49,52,58,45,68,50],
[74,0,61,61,60,37,77,54],
[81,69,0,67,66,63,78,67],
[78,69,63,0,56,54,73,53],
[72,70,64,74,0,45,73,61],
[85,93,67,76,85,0,83,65],
[62,53,52,57,57,47,0,52],
[80,76,63,77,69,65,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,77,63,68,71,65,72],
[53,0,69,67,66,61,57,70],
[53,61,0,63,66,63,61,64],
[67,63,67,0,63,62,61,67],
[62,64,64,67,0,58,62,67],
[59,69,67,68,72,0,63,77],
[65,73,69,69,68,67,0,66],
[58,60,66,63,63,53,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,77,77,66,71,75,59],
[56,0,73,77,44,72,70,63],
[53,57,0,55,69,67,67,61],
[53,53,75,0,61,58,83,58],
[64,86,61,69,0,58,75,67],
[59,58,63,72,72,0,69,66],
[55,60,63,47,55,61,0,45],
[71,67,69,72,63,64,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,64,45,46,55,59],
[72,0,79,71,61,61,69,70],
[66,51,0,69,52,53,50,67],
[66,59,61,0,57,54,57,63],
[85,69,78,73,0,61,73,75],
[84,69,77,76,69,0,74,64],
[75,61,80,73,57,56,0,63],
[71,60,63,67,55,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,70,51,42,62,53],
[61,0,52,76,49,49,53,48],
[60,78,0,65,56,58,65,58],
[60,54,65,0,47,36,42,44],
[79,81,74,83,0,62,68,58],
[88,81,72,94,68,0,68,60],
[68,77,65,88,62,62,0,65],
[77,82,72,86,72,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,71,61,73,61,71],
[66,0,59,64,71,67,47,63],
[61,71,0,84,77,79,56,61],
[59,66,46,0,62,59,54,49],
[69,59,53,68,0,74,54,69],
[57,63,51,71,56,0,62,60],
[69,83,74,76,76,68,0,55],
[59,67,69,81,61,70,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,59,57,55,62,62],
[67,0,62,78,53,57,71,61],
[63,68,0,65,62,62,69,66],
[71,52,65,0,65,69,68,71],
[73,77,68,65,0,64,67,73],
[75,73,68,61,66,0,67,59],
[68,59,61,62,63,63,0,67],
[68,69,64,59,57,71,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,72,56,51,70,55,60],
[69,0,71,70,64,70,66,64],
[58,59,0,52,53,62,59,56],
[74,60,78,0,49,70,56,54],
[79,66,77,81,0,73,68,61],
[60,60,68,60,57,0,53,55],
[75,64,71,74,62,77,0,67],
[70,66,74,76,69,75,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,66,75,55,66,62,57],
[80,0,79,83,61,73,75,68],
[64,51,0,64,55,64,56,51],
[55,47,66,0,59,63,59,65],
[75,69,75,71,0,66,65,64],
[64,57,66,67,64,0,51,57],
[68,55,74,71,65,79,0,65],
[73,62,79,65,66,73,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,49,59,50,41,62,47],
[78,0,52,75,54,58,56,65],
[81,78,0,70,69,74,78,64],
[71,55,60,0,50,73,67,54],
[80,76,61,80,0,79,78,61],
[89,72,56,57,51,0,66,50],
[68,74,52,63,52,64,0,65],
[83,65,66,76,69,80,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,62,72,68,62,79],
[60,0,57,66,82,66,78,66],
[65,73,0,71,73,72,75,68],
[68,64,59,0,69,65,62,59],
[58,48,57,61,0,55,62,68],
[62,64,58,65,75,0,79,62],
[68,52,55,68,68,51,0,58],
[51,64,62,71,62,68,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,77,69,66,56,61,71],
[77,0,78,67,70,59,63,61],
[53,52,0,70,62,61,72,37],
[61,63,60,0,70,65,60,40],
[64,60,68,60,0,40,61,43],
[74,71,69,65,90,0,65,59],
[69,67,58,70,69,65,0,56],
[59,69,93,90,87,71,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,68,70,82,68,82],
[64,0,66,69,71,72,64,66],
[66,64,0,67,72,74,59,74],
[62,61,63,0,75,83,62,71],
[60,59,58,55,0,82,56,68],
[48,58,56,47,48,0,48,69],
[62,66,71,68,74,82,0,75],
[48,64,56,59,62,61,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,59,60,68,64,61],
[61,0,69,76,64,72,61,58],
[65,61,0,75,68,73,64,55],
[71,54,55,0,55,61,66,59],
[70,66,62,75,0,77,69,76],
[62,58,57,69,53,0,58,60],
[66,69,66,64,61,72,0,61],
[69,72,75,71,54,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,57,67,55,60,59],
[66,0,66,56,66,67,59,67],
[67,64,0,56,71,62,56,64],
[73,74,74,0,81,74,78,62],
[63,64,59,49,0,53,59,51],
[75,63,68,56,77,0,65,70],
[70,71,74,52,71,65,0,60],
[71,63,66,68,79,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,76,70,95,67,65,68],
[50,0,77,58,83,73,45,58],
[54,53,0,62,74,72,45,56],
[60,72,68,0,82,64,53,53],
[35,47,56,48,0,66,44,52],
[63,57,58,66,64,0,49,62],
[65,85,85,77,86,81,0,82],
[62,72,74,77,78,68,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,61,71,63,64,63],
[65,0,68,67,66,60,63,63],
[58,62,0,54,65,58,55,59],
[69,63,76,0,67,60,67,57],
[59,64,65,63,0,62,58,59],
[67,70,72,70,68,0,61,70],
[66,67,75,63,72,69,0,72],
[67,67,71,73,71,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,63,69,63,66,59],
[61,0,60,62,65,65,64,62],
[64,70,0,62,64,67,63,59],
[67,68,68,0,65,63,66,64],
[61,65,66,65,0,64,64,55],
[67,65,63,67,66,0,56,63],
[64,66,67,64,66,74,0,67],
[71,68,71,66,75,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,64,82,58,68,73,64],
[44,0,34,49,33,48,69,46],
[66,96,0,80,67,69,79,61],
[48,81,50,0,59,58,73,68],
[72,97,63,71,0,44,72,75],
[62,82,61,72,86,0,65,71],
[57,61,51,57,58,65,0,65],
[66,84,69,62,55,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,69,68,65,66,73,66],
[68,0,63,59,56,63,60,57],
[61,67,0,67,61,63,68,62],
[62,71,63,0,66,65,71,63],
[65,74,69,64,0,68,79,69],
[64,67,67,65,62,0,68,64],
[57,70,62,59,51,62,0,63],
[64,73,68,67,61,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,48,53,46,57,40,55],
[77,0,58,69,65,71,54,65],
[82,72,0,58,62,69,67,66],
[77,61,72,0,56,75,65,70],
[84,65,68,74,0,81,62,71],
[73,59,61,55,49,0,54,58],
[90,76,63,65,68,76,0,67],
[75,65,64,60,59,72,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,72,59,68,73,67],
[61,0,60,56,54,67,68,66],
[58,70,0,57,62,79,68,67],
[58,74,73,0,68,71,68,72],
[71,76,68,62,0,73,67,70],
[62,63,51,59,57,0,77,67],
[57,62,62,62,63,53,0,64],
[63,64,63,58,60,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,61,66,47,52,46,52],
[79,0,58,69,53,61,60,63],
[69,72,0,68,53,53,55,58],
[64,61,62,0,50,53,59,56],
[83,77,77,80,0,83,64,75],
[78,69,77,77,47,0,65,65],
[84,70,75,71,66,65,0,56],
[78,67,72,74,55,65,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,74,34,46,57,51,55],
[54,0,64,50,46,52,39,56],
[56,66,0,32,63,55,42,46],
[96,80,98,0,48,76,47,75],
[84,84,67,82,0,77,60,68],
[73,78,75,54,53,0,59,51],
[79,91,88,83,70,71,0,63],
[75,74,84,55,62,79,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,74,70,64,69,69,78],
[63,0,75,74,65,77,70,80],
[56,55,0,60,56,62,65,73],
[60,56,70,0,59,65,65,72],
[66,65,74,71,0,71,72,73],
[61,53,68,65,59,0,65,68],
[61,60,65,65,58,65,0,70],
[52,50,57,58,57,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,44,69,77,58,70,68],
[54,0,34,65,67,47,49,51],
[86,96,0,64,88,69,71,60],
[61,65,66,0,78,63,58,54],
[53,63,42,52,0,42,53,40],
[72,83,61,67,88,0,73,60],
[60,81,59,72,77,57,0,60],
[62,79,70,76,90,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,64,70,66,72,71,71],
[51,0,75,70,65,59,65,64],
[66,55,0,64,66,61,74,63],
[60,60,66,0,69,66,69,64],
[64,65,64,61,0,63,68,62],
[58,71,69,64,67,0,67,59],
[59,65,56,61,62,63,0,57],
[59,66,67,66,68,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,69,51,65,59,70],
[61,0,65,65,61,58,68,66],
[67,65,0,67,63,66,65,69],
[61,65,63,0,60,56,65,77],
[79,69,67,70,0,64,68,72],
[65,72,64,74,66,0,66,76],
[71,62,65,65,62,64,0,70],
[60,64,61,53,58,54,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,39,57,81,60,74,61],
[64,0,69,81,81,81,75,92],
[91,61,0,71,84,88,85,84],
[73,49,59,0,81,69,83,66],
[49,49,46,49,0,63,56,67],
[70,49,42,61,67,0,69,71],
[56,55,45,47,74,61,0,59],
[69,38,46,64,63,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,64,71,57,54,61],
[59,0,71,70,71,52,57,67],
[59,59,0,69,60,62,58,59],
[66,60,61,0,74,49,54,62],
[59,59,70,56,0,58,59,60],
[73,78,68,81,72,0,65,67],
[76,73,72,76,71,65,0,74],
[69,63,71,68,70,63,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,59,58,57,56,53],
[66,0,66,53,49,52,52,52],
[65,64,0,59,56,50,51,58],
[71,77,71,0,59,54,64,65],
[72,81,74,71,0,66,63,65],
[73,78,80,76,64,0,74,73],
[74,78,79,66,67,56,0,71],
[77,78,72,65,65,57,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,46,57,42,53,52,56],
[78,0,58,74,78,75,72,73],
[84,72,0,77,64,64,79,73],
[73,56,53,0,66,70,78,65],
[88,52,66,64,0,67,67,68],
[77,55,66,60,63,0,67,62],
[78,58,51,52,63,63,0,61],
[74,57,57,65,62,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,75,72,62,65,74],
[71,0,69,66,71,65,60,74],
[64,61,0,71,76,74,68,75],
[55,64,59,0,79,63,65,78],
[58,59,54,51,0,57,57,65],
[68,65,56,67,73,0,60,64],
[65,70,62,65,73,70,0,72],
[56,56,55,52,65,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,48,99,49,74,82,74],
[73,0,89,92,65,74,59,81],
[82,41,0,98,68,57,74,65],
[31,38,32,0,41,47,55,39],
[81,65,62,89,0,81,64,105],
[56,56,73,83,49,0,74,72],
[48,71,56,75,66,56,0,80],
[56,49,65,91,25,58,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,79,62,78,72,65,66],
[63,0,71,72,76,72,66,75],
[51,59,0,65,65,64,56,61],
[68,58,65,0,70,73,58,64],
[52,54,65,60,0,66,59,62],
[58,58,66,57,64,0,60,66],
[65,64,74,72,71,70,0,71],
[64,55,69,66,68,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,75,58,65,53,62],
[63,0,59,68,66,52,54,59],
[66,71,0,71,58,61,65,60],
[55,62,59,0,56,56,53,54],
[72,64,72,74,0,67,68,71],
[65,78,69,74,63,0,56,66],
[77,76,65,77,62,74,0,76],
[68,71,70,76,59,64,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,53,48,40,63,58,44],
[68,0,71,57,52,59,66,58],
[77,59,0,52,55,65,67,53],
[82,73,78,0,70,76,88,56],
[90,78,75,60,0,70,72,69],
[67,71,65,54,60,0,71,62],
[72,64,63,42,58,59,0,59],
[86,72,77,74,61,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,62,66,64,58,66],
[64,0,71,64,60,69,64,60],
[58,59,0,63,59,59,51,56],
[68,66,67,0,63,62,65,62],
[64,70,71,67,0,67,61,65],
[66,61,71,68,63,0,60,67],
[72,66,79,65,69,70,0,71],
[64,70,74,68,65,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,86,69,79,72,78,55],
[51,0,54,59,65,65,52,53],
[44,76,0,66,69,77,61,68],
[61,71,64,0,67,63,58,62],
[51,65,61,63,0,63,67,49],
[58,65,53,67,67,0,54,63],
[52,78,69,72,63,76,0,56],
[75,77,62,68,81,67,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,92,70,65,69,71,75],
[45,0,61,59,52,54,56,65],
[38,69,0,66,52,60,67,60],
[60,71,64,0,58,57,68,57],
[65,78,78,72,0,73,71,71],
[61,76,70,73,57,0,69,71],
[59,74,63,62,59,61,0,75],
[55,65,70,73,59,59,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,56,66,60,61,58,61],
[77,0,68,70,65,69,72,76],
[74,62,0,75,67,76,71,72],
[64,60,55,0,55,58,68,71],
[70,65,63,75,0,65,70,73],
[69,61,54,72,65,0,62,74],
[72,58,59,62,60,68,0,70],
[69,54,58,59,57,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,50,63,65,66,57],
[62,0,66,61,70,69,70,69],
[66,64,0,68,66,67,69,58],
[80,69,62,0,62,70,64,62],
[67,60,64,68,0,61,62,59],
[65,61,63,60,69,0,62,62],
[64,60,61,66,68,68,0,61],
[73,61,72,68,71,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,55,69,64,61,72],
[68,0,68,57,66,81,73,73],
[67,62,0,42,42,72,69,95],
[75,73,88,0,63,82,85,97],
[61,64,88,67,0,79,72,82],
[66,49,58,48,51,0,56,74],
[69,57,61,45,58,74,0,75],
[58,57,35,33,48,56,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,71,61,68,67,69],
[64,0,61,61,61,68,55,62],
[62,69,0,68,64,68,55,72],
[59,69,62,0,59,65,55,66],
[69,69,66,71,0,74,60,72],
[62,62,62,65,56,0,58,68],
[63,75,75,75,70,72,0,69],
[61,68,58,64,58,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,74,62,81,68,74,74],
[70,0,83,49,55,61,48,71],
[56,47,0,69,56,43,43,62],
[68,81,61,0,65,72,75,68],
[49,75,74,65,0,51,64,77],
[62,69,87,58,79,0,69,58],
[56,82,87,55,66,61,0,56],
[56,59,68,62,53,72,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,59,65,70,85,55,47],
[63,0,73,77,68,82,82,46],
[71,57,0,71,79,74,56,58],
[65,53,59,0,47,68,34,35],
[60,62,51,83,0,77,65,64],
[45,48,56,62,53,0,52,44],
[75,48,74,96,65,78,0,66],
[83,84,72,95,66,86,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,63,49,54,54,60,61],
[72,0,64,65,64,58,78,57],
[67,66,0,60,53,54,73,68],
[81,65,70,0,77,67,76,70],
[76,66,77,53,0,60,69,63],
[76,72,76,63,70,0,80,72],
[70,52,57,54,61,50,0,62],
[69,73,62,60,67,58,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,74,82,69,54,52],
[70,0,38,50,67,37,69,69],
[64,92,0,84,101,65,64,71],
[56,80,46,0,87,66,57,56],
[48,63,29,43,0,56,62,47],
[61,93,65,64,74,0,71,83],
[76,61,66,73,68,59,0,53],
[78,61,59,74,83,47,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,59,68,77,72,67,66],
[62,0,62,70,71,64,56,57],
[71,68,0,71,71,64,63,58],
[62,60,59,0,61,59,62,57],
[53,59,59,69,0,67,63,49],
[58,66,66,71,63,0,65,55],
[63,74,67,68,67,65,0,54],
[64,73,72,73,81,75,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,55,62,61,73,72],
[68,0,59,51,59,50,66,76],
[70,71,0,65,64,64,65,68],
[75,79,65,0,65,73,73,82],
[68,71,66,65,0,70,70,72],
[69,80,66,57,60,0,71,79],
[57,64,65,57,60,59,0,64],
[58,54,62,48,58,51,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,68,61,71,65,53,69],
[52,0,58,55,44,58,43,59],
[62,72,0,59,54,57,57,72],
[69,75,71,0,77,69,60,69],
[59,86,76,53,0,61,62,75],
[65,72,73,61,69,0,70,68],
[77,87,73,70,68,60,0,82],
[61,71,58,61,55,62,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,65,59,62,57,69],
[65,0,62,59,69,65,62,60],
[60,68,0,70,69,72,71,76],
[65,71,60,0,68,72,75,68],
[71,61,61,62,0,64,63,67],
[68,65,58,58,66,0,64,71],
[73,68,59,55,67,66,0,70],
[61,70,54,62,63,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,66,67,70,61,72,58],
[49,0,56,57,69,52,61,55],
[64,74,0,65,71,66,62,66],
[63,73,65,0,63,55,65,66],
[60,61,59,67,0,59,66,59],
[69,78,64,75,71,0,65,69],
[58,69,68,65,64,65,0,63],
[72,75,64,64,71,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,59,72,65,64,69,74],
[64,0,62,63,65,70,63,67],
[71,68,0,66,68,68,65,74],
[58,67,64,0,68,68,59,68],
[65,65,62,62,0,57,63,67],
[66,60,62,62,73,0,67,73],
[61,67,65,71,67,63,0,68],
[56,63,56,62,63,57,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,72,49,57,42,54,54],
[86,0,72,78,63,64,55,68],
[58,58,0,53,63,69,63,70],
[81,52,77,0,65,73,91,89],
[73,67,67,65,0,69,63,71],
[88,66,61,57,61,0,66,65],
[76,75,67,39,67,64,0,73],
[76,62,60,41,59,65,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,61,67,75,74,62],
[62,0,60,51,60,60,56,52],
[57,70,0,58,63,56,58,62],
[69,79,72,0,75,61,61,67],
[63,70,67,55,0,63,57,60],
[55,70,74,69,67,0,63,65],
[56,74,72,69,73,67,0,73],
[68,78,68,63,70,65,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,73,71,76,65,77,84],
[57,0,80,60,68,65,72,75],
[57,50,0,47,60,52,44,54],
[59,70,83,0,82,73,73,79],
[54,62,70,48,0,54,50,57],
[65,65,78,57,76,0,66,82],
[53,58,86,57,80,64,0,76],
[46,55,76,51,73,48,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,64,65,64,58,59],
[67,0,62,58,63,63,60,57],
[72,68,0,62,65,69,58,60],
[66,72,68,0,69,70,66,64],
[65,67,65,61,0,76,67,63],
[66,67,61,60,54,0,68,59],
[72,70,72,64,63,62,0,65],
[71,73,70,66,67,71,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,61,70,65,62,63,60],
[74,0,67,90,70,73,65,54],
[69,63,0,75,71,71,57,62],
[60,40,55,0,61,70,54,43],
[65,60,59,69,0,66,69,58],
[68,57,59,60,64,0,63,60],
[67,65,73,76,61,67,0,71],
[70,76,68,87,72,70,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,88,65,46,84,65,42],
[111,0,111,109,88,65,90,86],
[42,19,0,19,44,42,0,19],
[65,21,111,0,65,42,46,0],
[84,42,86,65,0,84,42,42],
[46,65,88,88,46,0,69,65],
[65,40,130,84,88,61,0,84],
[88,44,111,130,88,65,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,75,51,85,38,81,40],
[72,0,74,77,98,89,107,65],
[55,56,0,82,82,69,82,70],
[79,53,48,0,85,82,82,47],
[45,32,48,45,0,57,61,47],
[92,41,61,48,73,0,82,51],
[49,23,48,48,69,48,0,49],
[90,65,60,83,83,79,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,60,69,69,67,75,78],
[58,0,62,57,79,67,75,61],
[70,68,0,71,81,62,68,61],
[61,73,59,0,76,65,81,71],
[61,51,49,54,0,60,68,61],
[63,63,68,65,70,0,74,68],
[55,55,62,49,62,56,0,59],
[52,69,69,59,69,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,69,50,60,71,59,64],
[68,0,63,64,68,76,74,61],
[61,67,0,60,59,73,78,61],
[80,66,70,0,56,73,65,61],
[70,62,71,74,0,74,76,68],
[59,54,57,57,56,0,55,58],
[71,56,52,65,54,75,0,63],
[66,69,69,69,62,72,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,77,86,70,66,70,65],
[55,0,57,69,63,68,76,64],
[53,73,0,77,64,73,69,58],
[44,61,53,0,54,57,52,43],
[60,67,66,76,0,70,71,69],
[64,62,57,73,60,0,64,61],
[60,54,61,78,59,66,0,66],
[65,66,72,87,61,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,101,60,46,74,30,74,60],
[29,0,29,46,75,59,74,60],
[70,101,0,60,74,59,59,88],
[84,84,70,0,58,87,72,72],
[56,55,56,72,0,71,57,56],
[100,71,71,43,59,0,59,59],
[56,56,71,58,73,71,0,57],
[70,70,42,58,74,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,59,77,67,58,63],
[58,0,72,56,60,67,58,61],
[64,58,0,55,63,58,65,58],
[71,74,75,0,73,63,55,61],
[53,70,67,57,0,62,49,55],
[63,63,72,67,68,0,52,56],
[72,72,65,75,81,78,0,77],
[67,69,72,69,75,74,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,69,57,75,64,60,63],
[54,0,53,60,63,58,56,57],
[61,77,0,61,63,63,56,65],
[73,70,69,0,77,66,72,62],
[55,67,67,53,0,63,59,55],
[66,72,67,64,67,0,63,64],
[70,74,74,58,71,67,0,62],
[67,73,65,68,75,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,71,70,69,69,73],
[64,0,62,59,67,65,66,64],
[70,68,0,62,56,66,58,80],
[59,71,68,0,73,66,65,60],
[60,63,74,57,0,66,67,64],
[61,65,64,64,64,0,56,61],
[61,64,72,65,63,74,0,77],
[57,66,50,70,66,69,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,64,64,69,63,61],
[70,0,69,65,74,68,68,66],
[65,61,0,58,63,61,66,61],
[66,65,72,0,69,69,65,69],
[66,56,67,61,0,64,62,63],
[61,62,69,61,66,0,64,61],
[67,62,64,65,68,66,0,63],
[69,64,69,61,67,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,69,67,73,47,67,73],
[82,0,80,63,81,65,74,85],
[61,50,0,65,73,50,55,84],
[63,67,65,0,67,61,46,75],
[57,49,57,63,0,55,53,67],
[83,65,80,69,75,0,69,80],
[63,56,75,84,77,61,0,71],
[57,45,46,55,63,50,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,57,69,55,65,59],
[68,0,69,75,64,71,59,64],
[57,61,0,59,66,53,56,59],
[73,55,71,0,63,55,60,51],
[61,66,64,67,0,63,62,58],
[75,59,77,75,67,0,72,73],
[65,71,74,70,68,58,0,67],
[71,66,71,79,72,57,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,72,85,54,63,58,60],
[73,0,80,80,76,72,66,63],
[58,50,0,75,62,66,57,67],
[45,50,55,0,60,48,50,59],
[76,54,68,70,0,63,68,60],
[67,58,64,82,67,0,61,69],
[72,64,73,80,62,69,0,76],
[70,67,63,71,70,61,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,76,80,69,75,81,71],
[65,0,71,70,65,64,69,65],
[54,59,0,72,57,72,68,67],
[50,60,58,0,54,67,65,69],
[61,65,73,76,0,76,77,82],
[55,66,58,63,54,0,72,64],
[49,61,62,65,53,58,0,68],
[59,65,63,61,48,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,84,82,57,52,63,63],
[61,0,82,80,64,72,69,60],
[46,48,0,71,52,52,49,48],
[48,50,59,0,48,56,65,68],
[73,66,78,82,0,74,60,81],
[78,58,78,74,56,0,57,66],
[67,61,81,65,70,73,0,85],
[67,70,82,62,49,64,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,70,70,71,66,64,72],
[44,0,64,69,80,69,65,69],
[60,66,0,57,65,55,58,60],
[60,61,73,0,86,64,68,74],
[59,50,65,44,0,54,54,57],
[64,61,75,66,76,0,68,68],
[66,65,72,62,76,62,0,54],
[58,61,70,56,73,62,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,59,59,58,70,63,62],
[63,0,63,55,50,72,63,54],
[71,67,0,76,63,81,76,73],
[71,75,54,0,55,66,74,67],
[72,80,67,75,0,64,76,66],
[60,58,49,64,66,0,59,58],
[67,67,54,56,54,71,0,54],
[68,76,57,63,64,72,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,74,72,58,66,62,75],
[59,0,63,65,72,69,62,75],
[56,67,0,60,72,59,60,63],
[58,65,70,0,66,69,65,83],
[72,58,58,64,0,60,68,66],
[64,61,71,61,70,0,69,72],
[68,68,70,65,62,61,0,68],
[55,55,67,47,64,58,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,68,68,58,58,63,61],
[74,0,70,69,52,64,66,71],
[62,60,0,60,62,58,66,59],
[62,61,70,0,63,64,67,69],
[72,78,68,67,0,65,64,76],
[72,66,72,66,65,0,68,66],
[67,64,64,63,66,62,0,62],
[69,59,71,61,54,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,67,76,78,56,60],
[66,0,49,60,69,75,59,59],
[66,81,0,62,75,75,72,73],
[63,70,68,0,70,67,60,60],
[54,61,55,60,0,65,50,49],
[52,55,55,63,65,0,55,53],
[74,71,58,70,80,75,0,69],
[70,71,57,70,81,77,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,69,65,67,66,67],
[57,0,75,70,61,63,66,66],
[63,55,0,63,54,57,64,49],
[61,60,67,0,59,67,65,61],
[65,69,76,71,0,71,71,66],
[63,67,73,63,59,0,68,59],
[64,64,66,65,59,62,0,52],
[63,64,81,69,64,71,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,50,43,58,62,37,43],
[80,0,55,58,77,59,65,66],
[80,75,0,66,77,61,69,74],
[87,72,64,0,88,51,68,63],
[72,53,53,42,0,44,53,42],
[68,71,69,79,86,0,45,63],
[93,65,61,62,77,85,0,78],
[87,64,56,67,88,67,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,59,67,73,59,69,69],
[64,0,67,61,76,68,75,66],
[71,63,0,66,73,61,71,66],
[63,69,64,0,67,65,73,66],
[57,54,57,63,0,55,64,65],
[71,62,69,65,75,0,71,69],
[61,55,59,57,66,59,0,63],
[61,64,64,64,65,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,52,62,50,67,65,67],
[54,0,62,64,48,71,60,58],
[78,68,0,71,65,82,60,67],
[68,66,59,0,65,74,76,75],
[80,82,65,65,0,81,51,61],
[63,59,48,56,49,0,45,50],
[65,70,70,54,79,85,0,62],
[63,72,63,55,69,80,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,50,70,50,65,59,63],
[74,0,51,90,60,72,73,78],
[80,79,0,89,60,73,83,71],
[60,40,41,0,60,57,59,56],
[80,70,70,70,0,72,64,64],
[65,58,57,73,58,0,58,42],
[71,57,47,71,66,72,0,50],
[67,52,59,74,66,88,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,63,61,56,64,65,60],
[59,0,68,49,48,63,67,58],
[67,62,0,64,65,68,65,64],
[69,81,66,0,66,73,87,64],
[74,82,65,64,0,76,76,68],
[66,67,62,57,54,0,68,62],
[65,63,65,43,54,62,0,53],
[70,72,66,66,62,68,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,76,64,55,64,67,63],
[65,0,81,61,60,64,68,58],
[54,49,0,56,48,51,59,62],
[66,69,74,0,65,60,68,60],
[75,70,82,65,0,76,75,70],
[66,66,79,70,54,0,60,58],
[63,62,71,62,55,70,0,68],
[67,72,68,70,60,72,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,71,74,61,60,63],
[66,0,76,82,50,73,81,69],
[61,54,0,67,56,56,59,50],
[59,48,63,0,52,54,56,61],
[56,80,74,78,0,66,75,67],
[69,57,74,76,64,0,73,67],
[70,49,71,74,55,57,0,62],
[67,61,80,69,63,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,75,66,69,70,78],
[57,0,51,70,62,72,59,81],
[67,79,0,64,79,74,68,86],
[55,60,66,0,55,77,68,73],
[64,68,51,75,0,79,56,73],
[61,58,56,53,51,0,53,62],
[60,71,62,62,74,77,0,79],
[52,49,44,57,57,68,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,72,58,63,71,75,67],
[55,0,68,61,55,60,66,49],
[58,62,0,60,51,62,62,50],
[72,69,70,0,61,60,57,43],
[67,75,79,69,0,71,71,64],
[59,70,68,70,59,0,71,64],
[55,64,68,73,59,59,0,50],
[63,81,80,87,66,66,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,50,54,57,69,59,60],
[66,0,60,62,73,61,64,63],
[80,70,0,62,74,71,74,71],
[76,68,68,0,75,68,56,68],
[73,57,56,55,0,66,62,58],
[61,69,59,62,64,0,57,59],
[71,66,56,74,68,73,0,70],
[70,67,59,62,72,71,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,67,74,58,71,61,73],
[68,0,65,77,59,74,63,73],
[63,65,0,64,63,69,63,67],
[56,53,66,0,58,63,56,68],
[72,71,67,72,0,74,65,66],
[59,56,61,67,56,0,54,54],
[69,67,67,74,65,76,0,73],
[57,57,63,62,64,76,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,63,54,54,72,64,55],
[58,0,52,67,60,72,63,59],
[67,78,0,80,62,84,63,66],
[76,63,50,0,60,86,61,48],
[76,70,68,70,0,71,62,66],
[58,58,46,44,59,0,59,47],
[66,67,67,69,68,71,0,58],
[75,71,64,82,64,83,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,61,67,63,69,52,53],
[81,0,73,65,80,74,72,66],
[69,57,0,71,71,81,68,67],
[63,65,59,0,73,74,60,54],
[67,50,59,57,0,57,54,52],
[61,56,49,56,73,0,74,58],
[78,58,62,70,76,56,0,52],
[77,64,63,76,78,72,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,72,61,62,61,65,63],
[63,0,64,63,64,62,66,69],
[58,66,0,60,67,59,62,69],
[69,67,70,0,68,66,64,65],
[68,66,63,62,0,71,74,70],
[69,68,71,64,59,0,71,69],
[65,64,68,66,56,59,0,62],
[67,61,61,65,60,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,75,72,63,73,66,65],
[57,0,55,55,53,56,51,48],
[55,75,0,68,52,54,51,57],
[58,75,62,0,53,61,51,62],
[67,77,78,77,0,71,63,71],
[57,74,76,69,59,0,58,64],
[64,79,79,79,67,72,0,68],
[65,82,73,68,59,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,72,65,63,71,67,70],
[68,0,72,68,62,71,65,63],
[58,58,0,62,61,70,62,61],
[65,62,68,0,70,71,68,64],
[67,68,69,60,0,74,68,67],
[59,59,60,59,56,0,56,68],
[63,65,68,62,62,74,0,64],
[60,67,69,66,63,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,68,75,73,58,64,64],
[59,0,70,68,72,66,54,58],
[62,60,0,61,60,58,52,56],
[55,62,69,0,65,60,57,63],
[57,58,70,65,0,65,60,67],
[72,64,72,70,65,0,65,59],
[66,76,78,73,70,65,0,68],
[66,72,74,67,63,71,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,72,65,66,70,69,69],
[55,0,54,45,62,50,62,56],
[58,76,0,58,67,59,58,67],
[65,85,72,0,71,73,73,73],
[64,68,63,59,0,61,67,74],
[60,80,71,57,69,0,69,75],
[61,68,72,57,63,61,0,63],
[61,74,63,57,56,55,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,54,58,72,69,54],
[65,0,67,75,75,74,75,77],
[64,63,0,58,62,61,70,66],
[76,55,72,0,63,71,68,53],
[72,55,68,67,0,60,71,60],
[58,56,69,59,70,0,75,57],
[61,55,60,62,59,55,0,50],
[76,53,64,77,70,73,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,89,69,76,67,68,89],
[73,0,64,41,73,54,41,63],
[41,66,0,44,76,42,44,66],
[61,89,86,0,85,65,77,75],
[54,57,54,45,0,66,57,68],
[63,76,88,65,64,0,64,65],
[62,89,86,53,73,66,0,76],
[41,67,64,55,62,65,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,62,66,64,62,65],
[61,0,52,52,57,59,65,66],
[62,78,0,64,75,73,69,79],
[68,78,66,0,61,76,63,74],
[64,73,55,69,0,62,59,68],
[66,71,57,54,68,0,55,49],
[68,65,61,67,71,75,0,68],
[65,64,51,56,62,81,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,70,70,64,73,63,63],
[70,0,72,72,67,74,67,65],
[60,58,0,67,57,66,57,54],
[60,58,63,0,64,60,63,52],
[66,63,73,66,0,69,59,61],
[57,56,64,70,61,0,65,53],
[67,63,73,67,71,65,0,62],
[67,65,76,78,69,77,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,55,73,55,36,74,36],
[57,0,93,94,76,57,112,74],
[75,37,0,76,39,76,76,39],
[57,36,54,0,55,36,92,36],
[75,54,91,75,0,92,130,74],
[94,73,54,94,38,0,112,74],
[56,18,54,38,0,18,0,39],
[94,56,91,94,56,56,91,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,53,65,71,63,70,63],
[66,0,60,54,62,64,65,59],
[77,70,0,69,67,63,75,65],
[65,76,61,0,64,69,69,59],
[59,68,63,66,0,64,68,63],
[67,66,67,61,66,0,70,59],
[60,65,55,61,62,60,0,53],
[67,71,65,71,67,71,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,64,57,63,62,62,61],
[88,0,67,83,91,80,88,65],
[66,63,0,64,67,59,72,62],
[73,47,66,0,71,66,73,67],
[67,39,63,59,0,64,65,47],
[68,50,71,64,66,0,62,59],
[68,42,58,57,65,68,0,48],
[69,65,68,63,83,71,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,66,66,69,69,65],
[62,0,62,65,58,61,67,63],
[69,68,0,68,53,61,64,66],
[64,65,62,0,60,55,64,64],
[64,72,77,70,0,67,70,66],
[61,69,69,75,63,0,61,67],
[61,63,66,66,60,69,0,68],
[65,67,64,66,64,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,48,59,67,53,56],
[66,0,64,61,59,67,54,62],
[69,66,0,65,57,77,65,53],
[82,69,65,0,57,80,68,69],
[71,71,73,73,0,80,65,59],
[63,63,53,50,50,0,52,50],
[77,76,65,62,65,78,0,76],
[74,68,77,61,71,80,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,56,45,45,54,52],
[71,0,70,72,67,61,66,64],
[64,60,0,74,69,67,57,60],
[74,58,56,0,58,63,54,64],
[85,63,61,72,0,76,61,65],
[85,69,63,67,54,0,61,71],
[76,64,73,76,69,69,0,65],
[78,66,70,66,65,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,62,42,63,51,59],
[66,0,74,57,62,58,67,64],
[61,56,0,52,67,61,65,56],
[68,73,78,0,70,68,61,63],
[88,68,63,60,0,71,66,63],
[67,72,69,62,59,0,69,52],
[79,63,65,69,64,61,0,67],
[71,66,74,67,67,78,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,50,55,61,52,57,65],
[76,0,60,57,72,57,62,80],
[80,70,0,69,64,61,66,69],
[75,73,61,0,67,65,66,76],
[69,58,66,63,0,53,62,74],
[78,73,69,65,77,0,73,77],
[73,68,64,64,68,57,0,74],
[65,50,61,54,56,53,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,73,58,70,80,73,78],
[53,0,68,61,66,68,52,68],
[57,62,0,49,62,65,66,64],
[72,69,81,0,64,61,68,76],
[60,64,68,66,0,79,65,65],
[50,62,65,69,51,0,60,67],
[57,78,64,62,65,70,0,76],
[52,62,66,54,65,63,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,73,72,67,70,81],
[65,0,62,73,67,61,76,71],
[67,68,0,69,73,69,70,64],
[57,57,61,0,76,52,65,66],
[58,63,57,54,0,51,60,73],
[63,69,61,78,79,0,70,70],
[60,54,60,65,70,60,0,66],
[49,59,66,64,57,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,60,57,61,56,63],
[65,0,73,70,66,72,67,67],
[66,57,0,65,62,58,58,68],
[70,60,65,0,54,64,56,57],
[73,64,68,76,0,75,67,64],
[69,58,72,66,55,0,61,66],
[74,63,72,74,63,69,0,68],
[67,63,62,73,66,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,55,65,45,64,65,57],
[71,0,68,57,58,66,75,66],
[75,62,0,57,47,57,81,66],
[65,73,73,0,74,66,75,79],
[85,72,83,56,0,77,79,78],
[66,64,73,64,53,0,79,65],
[65,55,49,55,51,51,0,56],
[73,64,64,51,52,65,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,55,60,67,61,48,59],
[76,0,64,68,72,71,68,73],
[75,66,0,77,74,81,72,59],
[70,62,53,0,74,65,65,70],
[63,58,56,56,0,65,55,65],
[69,59,49,65,65,0,52,61],
[82,62,58,65,75,78,0,73],
[71,57,71,60,65,69,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,69,53,47,52,43],
[60,0,72,62,41,54,56,54],
[70,58,0,81,55,65,61,52],
[61,68,49,0,44,51,60,57],
[77,89,75,86,0,61,89,75],
[83,76,65,79,69,0,83,58],
[78,74,69,70,41,47,0,49],
[87,76,78,73,55,72,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,57,63,67,54,65,72],
[64,0,53,59,50,57,64,81],
[73,77,0,64,66,76,82,88],
[67,71,66,0,65,74,68,80],
[63,80,64,65,0,67,72,75],
[76,73,54,56,63,0,76,78],
[65,66,48,62,58,54,0,70],
[58,49,42,50,55,52,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,59,68,67,69,69,72],
[64,0,62,72,59,65,65,65],
[71,68,0,70,63,71,73,68],
[62,58,60,0,58,60,56,65],
[63,71,67,72,0,67,78,69],
[61,65,59,70,63,0,73,62],
[61,65,57,74,52,57,0,61],
[58,65,62,65,61,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,34,32,42,41,60,34],
[84,0,65,64,71,65,70,40],
[96,65,0,63,78,74,82,66],
[98,66,67,0,69,52,60,53],
[88,59,52,61,0,80,61,38],
[89,65,56,78,50,0,71,48],
[70,60,48,70,69,59,0,41],
[96,90,64,77,92,82,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,51,54,63,57,62,70],
[64,0,51,60,58,61,64,75],
[79,79,0,65,73,74,69,88],
[76,70,65,0,74,58,69,78],
[67,72,57,56,0,53,72,74],
[73,69,56,72,77,0,73,82],
[68,66,61,61,58,57,0,69],
[60,55,42,52,56,48,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,104,104,53,77,77,104,77],
[26,0,75,79,75,25,75,78],
[26,55,0,53,53,53,106,28],
[77,51,77,0,49,24,102,24],
[53,55,77,81,0,28,130,54],
[53,105,77,106,102,0,102,78],
[26,55,24,28,0,28,0,28],
[53,52,102,106,76,52,102,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,63,69,58,65,73],
[58,0,57,58,62,59,64,62],
[65,73,0,70,61,63,70,65],
[67,72,60,0,63,64,76,66],
[61,68,69,67,0,60,66,60],
[72,71,67,66,70,0,69,65],
[65,66,60,54,64,61,0,65],
[57,68,65,64,70,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,68,65,54,63,56,61],
[77,0,70,69,66,65,77,60],
[62,60,0,69,62,63,54,66],
[65,61,61,0,57,61,69,66],
[76,64,68,73,0,73,69,72],
[67,65,67,69,57,0,67,56],
[74,53,76,61,61,63,0,71],
[69,70,64,64,58,74,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,77,76,74,81,76,79],
[67,0,66,57,62,73,75,82],
[53,64,0,62,62,64,65,64],
[54,73,68,0,68,56,70,77],
[56,68,68,62,0,70,70,75],
[49,57,66,74,60,0,83,66],
[54,55,65,60,60,47,0,58],
[51,48,66,53,55,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,59,68,64,61,63,58],
[59,0,67,71,62,60,63,68],
[71,63,0,73,62,64,71,69],
[62,59,57,0,53,63,61,65],
[66,68,68,77,0,65,67,74],
[69,70,66,67,65,0,74,68],
[67,67,59,69,63,56,0,65],
[72,62,61,65,56,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,58,56,50,70,55,66],
[81,0,65,62,63,75,64,71],
[72,65,0,59,58,73,57,70],
[74,68,71,0,63,77,75,76],
[80,67,72,67,0,76,61,73],
[60,55,57,53,54,0,53,54],
[75,66,73,55,69,77,0,76],
[64,59,60,54,57,76,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,75,42,46,55,66,63],
[90,0,86,37,71,56,58,83],
[55,44,0,48,53,61,64,61],
[88,93,82,0,55,99,90,73],
[84,59,77,75,0,75,82,66],
[75,74,69,31,55,0,65,81],
[64,72,66,40,48,65,0,60],
[67,47,69,57,64,49,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,69,68,69,67,70],
[65,0,69,74,68,62,67,72],
[62,61,0,65,65,62,73,65],
[61,56,65,0,67,58,69,51],
[62,62,65,63,0,64,65,55],
[61,68,68,72,66,0,68,55],
[63,63,57,61,65,62,0,58],
[60,58,65,79,75,75,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,56,71,61,59,58],
[68,0,64,65,74,72,71,76],
[65,66,0,62,71,62,59,65],
[74,65,68,0,78,67,68,72],
[59,56,59,52,0,64,63,59],
[69,58,68,63,66,0,58,65],
[71,59,71,62,67,72,0,63],
[72,54,65,58,71,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,71,63,68,68,64],
[65,0,67,61,65,67,70,65],
[64,63,0,63,61,61,67,58],
[59,69,67,0,63,65,68,59],
[67,65,69,67,0,70,72,70],
[62,63,69,65,60,0,67,61],
[62,60,63,62,58,63,0,58],
[66,65,72,71,60,69,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,65,65,60,71,60],
[63,0,70,63,71,70,74,69],
[64,60,0,61,69,72,67,64],
[65,67,69,0,72,67,74,66],
[65,59,61,58,0,59,67,59],
[70,60,58,63,71,0,72,61],
[59,56,63,56,63,58,0,59],
[70,61,66,64,71,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,53,55,67,60,60,52],
[65,0,48,53,51,61,57,59],
[77,82,0,68,67,71,78,62],
[75,77,62,0,67,58,63,62],
[63,79,63,63,0,70,82,71],
[70,69,59,72,60,0,63,65],
[70,73,52,67,48,67,0,61],
[78,71,68,68,59,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,67,60,66,62,60,68],
[68,0,66,63,63,68,65,72],
[63,64,0,61,58,59,68,61],
[70,67,69,0,64,71,66,63],
[64,67,72,66,0,68,63,70],
[68,62,71,59,62,0,65,61],
[70,65,62,64,67,65,0,64],
[62,58,69,67,60,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,58,60,62,70,68],
[70,0,60,71,68,65,71,77],
[64,70,0,61,53,59,68,68],
[72,59,69,0,66,65,75,73],
[70,62,77,64,0,67,77,72],
[68,65,71,65,63,0,68,74],
[60,59,62,55,53,62,0,61],
[62,53,62,57,58,56,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,72,63,77,70,71,72],
[56,0,72,67,69,68,66,68],
[58,58,0,61,62,62,65,58],
[67,63,69,0,62,68,67,59],
[53,61,68,68,0,56,61,53],
[60,62,68,62,74,0,53,64],
[59,64,65,63,69,77,0,60],
[58,62,72,71,77,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,55,66,90,58,60,73],
[65,0,59,51,72,52,73,54],
[75,71,0,61,83,63,73,66],
[64,79,69,0,79,57,67,71],
[40,58,47,51,0,33,50,49],
[72,78,67,73,97,0,71,61],
[70,57,57,63,80,59,0,63],
[57,76,64,59,81,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,58,62,62,54,55],
[62,0,71,61,70,64,57,53],
[59,59,0,60,70,61,61,53],
[72,69,70,0,61,61,42,52],
[68,60,60,69,0,47,62,69],
[68,66,69,69,83,0,54,53],
[76,73,69,88,68,76,0,57],
[75,77,77,78,61,77,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,64,63,60,68,68],
[66,0,66,61,62,59,60,69],
[64,64,0,74,67,63,69,65],
[66,69,56,0,67,61,70,63],
[67,68,63,63,0,54,63,62],
[70,71,67,69,76,0,67,62],
[62,70,61,60,67,63,0,64],
[62,61,65,67,68,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,64,74,61,61,73],
[64,0,67,63,58,60,57,64],
[62,63,0,70,66,74,69,75],
[66,67,60,0,66,61,58,74],
[56,72,64,64,0,58,56,74],
[69,70,56,69,72,0,69,73],
[69,73,61,72,74,61,0,78],
[57,66,55,56,56,57,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,46,57,59,63,54,46],
[98,0,74,78,99,84,71,55],
[84,56,0,75,62,63,77,72],
[73,52,55,0,86,71,87,55],
[71,31,68,44,0,67,59,53],
[67,46,67,59,63,0,60,73],
[76,59,53,43,71,70,0,54],
[84,75,58,75,77,57,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,49,58,63,61,58],
[61,0,60,61,58,57,58,58],
[67,70,0,55,51,63,59,55],
[81,69,75,0,67,64,69,69],
[72,72,79,63,0,71,75,67],
[67,73,67,66,59,0,68,60],
[69,72,71,61,55,62,0,57],
[72,72,75,61,63,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,68,76,54,64,72,53],
[71,0,68,75,74,69,72,63],
[62,62,0,69,59,74,64,58],
[54,55,61,0,59,58,60,60],
[76,56,71,71,0,65,70,57],
[66,61,56,72,65,0,67,52],
[58,58,66,70,60,63,0,65],
[77,67,72,70,73,78,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,59,72,56,59,57,58],
[74,0,71,71,68,65,66,63],
[71,59,0,63,51,54,53,55],
[58,59,67,0,54,54,57,59],
[74,62,79,76,0,60,73,63],
[71,65,76,76,70,0,70,70],
[73,64,77,73,57,60,0,68],
[72,67,75,71,67,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,62,49,58,66,59,59],
[77,0,65,56,61,64,60,62],
[68,65,0,69,62,68,64,60],
[81,74,61,0,66,61,79,76],
[72,69,68,64,0,69,77,59],
[64,66,62,69,61,0,59,55],
[71,70,66,51,53,71,0,63],
[71,68,70,54,71,75,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,72,74,67,55,60,64],
[69,0,73,86,89,65,70,72],
[58,57,0,65,69,58,57,55],
[56,44,65,0,61,59,53,45],
[63,41,61,69,0,63,61,46],
[75,65,72,71,67,0,68,60],
[70,60,73,77,69,62,0,58],
[66,58,75,85,84,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,78,65,69,68,73],
[64,0,64,74,73,62,64,78],
[63,66,0,79,68,69,66,73],
[52,56,51,0,56,50,57,65],
[65,57,62,74,0,61,64,77],
[61,68,61,80,69,0,63,69],
[62,66,64,73,66,67,0,69],
[57,52,57,65,53,61,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,67,72,70,75,69],
[68,0,65,74,69,67,73,71],
[67,65,0,80,79,81,80,77],
[63,56,50,0,67,64,64,59],
[58,61,51,63,0,64,73,70],
[60,63,49,66,66,0,69,61],
[55,57,50,66,57,61,0,62],
[61,59,53,71,60,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,69,72,65,65,56],
[63,0,63,72,64,72,68,54],
[66,67,0,52,68,77,62,64],
[61,58,78,0,69,68,69,65],
[58,66,62,61,0,68,74,53],
[65,58,53,62,62,0,57,63],
[65,62,68,61,56,73,0,55],
[74,76,66,65,77,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,71,66,53,72,65],
[70,0,73,69,69,65,74,64],
[62,57,0,68,59,54,77,60],
[59,61,62,0,60,60,75,54],
[64,61,71,70,0,59,71,61],
[77,65,76,70,71,0,81,68],
[58,56,53,55,59,49,0,47],
[65,66,70,76,69,62,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,67,59,50,60,66,46],
[56,0,56,69,53,57,66,40],
[63,74,0,62,57,69,77,68],
[71,61,68,0,66,60,72,46],
[80,77,73,64,0,60,76,68],
[70,73,61,70,70,0,73,61],
[64,64,53,58,54,57,0,48],
[84,90,62,84,62,69,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,64,69,71,67,68,67],
[56,0,56,56,61,60,63,61],
[66,74,0,63,76,64,61,68],
[61,74,67,0,75,60,63,64],
[59,69,54,55,0,55,61,61],
[63,70,66,70,75,0,61,70],
[62,67,69,67,69,69,0,73],
[63,69,62,66,69,60,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,59,61,57,63,53],
[66,0,60,71,58,49,58,63],
[66,70,0,75,62,62,65,67],
[71,59,55,0,61,50,63,64],
[69,72,68,69,0,66,73,62],
[73,81,68,80,64,0,69,66],
[67,72,65,67,57,61,0,54],
[77,67,63,66,68,64,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,45,67,54,71,55],
[67,0,75,55,83,57,68,64],
[58,55,0,47,66,44,66,66],
[85,75,83,0,80,66,65,75],
[63,47,64,50,0,59,64,65],
[76,73,86,64,71,0,71,64],
[59,62,64,65,66,59,0,62],
[75,66,64,55,65,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,67,65,67,102,63,50],
[39,0,79,39,39,78,65,65],
[63,51,0,78,51,90,51,63],
[65,91,52,0,51,78,53,53],
[63,91,79,79,0,103,51,75],
[28,52,40,52,27,0,52,64],
[67,65,79,77,79,78,0,64],
[80,65,67,77,55,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,130,65,130,65,130,130,130],
[0,0,0,0,0,0,0,0],
[65,130,0,130,65,130,130,130],
[0,130,0,0,65,65,65,130],
[65,130,65,65,0,130,65,130],
[0,130,0,65,0,0,65,65],
[0,130,0,65,65,65,0,130],
[0,130,0,0,0,65,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,64,58,64,66,56],
[67,0,57,52,57,65,71,57],
[73,73,0,67,70,68,72,64],
[66,78,63,0,69,67,59,64],
[72,73,60,61,0,61,71,60],
[66,65,62,63,69,0,74,53],
[64,59,58,71,59,56,0,65],
[74,73,66,66,70,77,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,84,69,59,70,65],
[68,0,61,70,78,66,61,55],
[70,69,0,78,80,64,61,65],
[46,60,52,0,69,64,48,58],
[61,52,50,61,0,62,67,52],
[71,64,66,66,68,0,69,64],
[60,69,69,82,63,61,0,72],
[65,75,65,72,78,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,51,51,51,51,27,27],
[53,0,104,77,54,54,80,80],
[79,26,0,76,53,53,106,53],
[79,53,54,0,54,53,54,54],
[79,76,77,76,0,79,79,53],
[79,76,77,77,51,0,80,80],
[103,50,24,76,51,50,0,50],
[103,50,77,76,77,50,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,71,74,79,60,72,82],
[71,0,70,68,67,50,60,70],
[59,60,0,64,60,57,64,65],
[56,62,66,0,69,70,69,66],
[51,63,70,61,0,56,56,64],
[70,80,73,60,74,0,79,81],
[58,70,66,61,74,51,0,62],
[48,60,65,64,66,49,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,66,63,66,67,71],
[67,0,82,59,89,66,82,88],
[72,48,0,66,81,58,60,77],
[64,71,64,0,64,66,62,63],
[67,41,49,66,0,59,52,78],
[64,64,72,64,71,0,74,72],
[63,48,70,68,78,56,0,71],
[59,42,53,67,52,58,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,61,62,59,61,58],
[68,0,72,58,59,71,54,60],
[56,58,0,53,54,58,50,57],
[69,72,77,0,71,69,71,65],
[68,71,76,59,0,69,61,60],
[71,59,72,61,61,0,54,54],
[69,76,80,59,69,76,0,62],
[72,70,73,65,70,76,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,52,68,71,54,71,60],
[64,0,55,59,60,59,62,62],
[78,75,0,76,74,59,63,67],
[62,71,54,0,71,53,61,55],
[59,70,56,59,0,47,57,56],
[76,71,71,77,83,0,70,64],
[59,68,67,69,73,60,0,61],
[70,68,63,75,74,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,28,29,42,30,41,41],
[99,0,69,69,83,71,56,69],
[102,61,0,59,44,71,87,86],
[101,61,71,0,75,71,87,41],
[88,47,86,55,0,72,57,70],
[100,59,59,59,58,0,71,55],
[89,74,43,43,73,59,0,69],
[89,61,44,89,60,75,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,79,67,52,65,94],
[61,0,63,50,65,51,63,67],
[63,67,0,89,92,65,79,79],
[51,80,41,0,64,37,80,66],
[63,65,38,66,0,54,52,65],
[78,79,65,93,76,0,92,92],
[65,67,51,50,78,38,0,80],
[36,63,51,64,65,38,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,68,79,60,76,55,65],
[55,0,63,51,34,77,51,63],
[62,67,0,52,60,70,52,50],
[51,79,78,0,45,81,67,55],
[70,96,70,85,0,84,64,70],
[54,53,60,49,46,0,54,64],
[75,79,78,63,66,76,0,55],
[65,67,80,75,60,66,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,55,53,55,55,44,66],
[67,0,69,48,70,55,52,61],
[75,61,0,64,68,65,54,58],
[77,82,66,0,62,59,57,70],
[75,60,62,68,0,64,65,78],
[75,75,65,71,66,0,62,77],
[86,78,76,73,65,68,0,78],
[64,69,72,60,52,53,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,69,73,66,67,70],
[66,0,71,80,70,64,67,67],
[60,59,0,71,65,57,67,58],
[61,50,59,0,59,50,65,64],
[57,60,65,71,0,52,65,61],
[64,66,73,80,78,0,65,72],
[63,63,63,65,65,65,0,70],
[60,63,72,66,69,58,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,67,62,70,66,70,73],
[52,0,56,61,52,76,57,73],
[63,74,0,67,63,71,67,83],
[68,69,63,0,68,70,72,71],
[60,78,67,62,0,67,67,81],
[64,54,59,60,63,0,69,66],
[60,73,63,58,63,61,0,75],
[57,57,47,59,49,64,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,77,56,59,72,70,71],
[64,0,64,56,61,69,64,61],
[53,66,0,61,55,69,70,56],
[74,74,69,0,65,73,79,68],
[71,69,75,65,0,75,79,71],
[58,61,61,57,55,0,57,56],
[60,66,60,51,51,73,0,64],
[59,69,74,62,59,74,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,55,60,72,64,58,58],
[66,0,59,70,71,75,62,54],
[75,71,0,68,72,70,66,61],
[70,60,62,0,65,64,63,59],
[58,59,58,65,0,57,45,44],
[66,55,60,66,73,0,61,58],
[72,68,64,67,85,69,0,77],
[72,76,69,71,86,72,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,71,63,67,76,58,53],
[88,0,86,83,103,100,73,65],
[59,44,0,60,73,67,72,58],
[67,47,70,0,75,71,61,48],
[63,27,57,55,0,53,67,37],
[54,30,63,59,77,0,60,52],
[72,57,58,69,63,70,0,44],
[77,65,72,82,93,78,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,66,58,55,58,60],
[72,0,70,65,67,65,69,63],
[65,60,0,69,59,62,67,61],
[64,65,61,0,51,63,67,62],
[72,63,71,79,0,69,71,70],
[75,65,68,67,61,0,71,65],
[72,61,63,63,59,59,0,66],
[70,67,69,68,60,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,60,78,88,49,71,79],
[42,0,41,49,60,31,64,81],
[70,89,0,60,59,48,53,82],
[52,81,70,0,79,61,102,92],
[42,70,71,51,0,71,62,81],
[81,99,82,69,59,0,82,91],
[59,66,77,28,68,48,0,69],
[51,49,48,38,49,39,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,83,84,64,66,88,83],
[52,0,69,55,59,59,60,84],
[47,61,0,70,58,52,79,76],
[46,75,60,0,59,44,54,68],
[66,71,72,71,0,59,50,64],
[64,71,78,86,71,0,57,85],
[42,70,51,76,80,73,0,50],
[47,46,54,62,66,45,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,60,66,50,58,73],
[65,0,67,69,61,63,64,68],
[63,63,0,70,64,60,52,70],
[70,61,60,0,56,56,61,63],
[64,69,66,74,0,66,55,77],
[80,67,70,74,64,0,65,73],
[72,66,78,69,75,65,0,73],
[57,62,60,67,53,57,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,60,55,63,56,57,56],
[62,0,59,66,67,58,65,73],
[70,71,0,70,76,73,65,71],
[75,64,60,0,60,64,73,62],
[67,63,54,70,0,72,66,67],
[74,72,57,66,58,0,71,63],
[73,65,65,57,64,59,0,75],
[74,57,59,68,63,67,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,67,62,67,71,69],
[66,0,70,67,65,65,70,71],
[69,60,0,68,65,73,70,70],
[63,63,62,0,61,64,60,65],
[68,65,65,69,0,71,70,71],
[63,65,57,66,59,0,63,64],
[59,60,60,70,60,67,0,68],
[61,59,60,65,59,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,60,66,65,73,59],
[61,0,61,50,64,62,61,61],
[63,69,0,65,65,61,72,59],
[70,80,65,0,66,70,72,61],
[64,66,65,64,0,65,58,59],
[65,68,69,60,65,0,61,59],
[57,69,58,58,72,69,0,66],
[71,69,71,69,71,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,65,60,45,62,66,75],
[55,0,54,51,51,66,66,68],
[65,76,0,56,66,70,83,73],
[70,79,74,0,64,73,77,82],
[85,79,64,66,0,76,82,88],
[68,64,60,57,54,0,61,66],
[64,64,47,53,48,69,0,82],
[55,62,57,48,42,64,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,82,65,65,89,69,69],
[45,0,68,68,59,81,61,53],
[48,62,0,64,54,65,44,39],
[65,62,66,0,56,60,47,66],
[65,71,76,74,0,70,63,70],
[41,49,65,70,60,0,46,51],
[61,69,86,83,67,84,0,70],
[61,77,91,64,60,79,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,56,61,64,59,59],
[68,0,67,60,60,65,67,63],
[68,63,0,51,66,64,70,57],
[74,70,79,0,68,68,75,64],
[69,70,64,62,0,71,70,68],
[66,65,66,62,59,0,67,65],
[71,63,60,55,60,63,0,64],
[71,67,73,66,62,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,61,56,68,65,54],
[69,0,62,66,59,71,62,66],
[68,68,0,65,68,71,68,68],
[69,64,65,0,64,65,62,63],
[74,71,62,66,0,73,71,66],
[62,59,59,65,57,0,61,56],
[65,68,62,68,59,69,0,58],
[76,64,62,67,64,74,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,58,76,73,58,67],
[67,0,56,58,84,79,68,57],
[61,74,0,62,78,68,54,73],
[72,72,68,0,73,71,69,56],
[54,46,52,57,0,54,51,44],
[57,51,62,59,76,0,44,51],
[72,62,76,61,79,86,0,69],
[63,73,57,74,86,79,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,54,61,69,62,63,61],
[59,0,64,60,65,62,60,61],
[76,66,0,73,69,66,71,60],
[69,70,57,0,67,70,66,64],
[61,65,61,63,0,70,68,60],
[68,68,64,60,60,0,63,66],
[67,70,59,64,62,67,0,59],
[69,69,70,66,70,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,65,58,44,87,44,51],
[73,0,52,65,45,86,29,59],
[65,78,0,71,65,78,44,65],
[72,65,59,0,42,57,36,28],
[86,85,65,88,0,93,73,57],
[43,44,52,73,37,0,44,36],
[86,101,86,94,57,86,0,73],
[79,71,65,102,73,94,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,48,64,66,58,58,66],
[77,0,58,83,82,74,85,89],
[82,72,0,84,75,82,62,75],
[66,47,46,0,68,58,59,58],
[64,48,55,62,0,56,66,51],
[72,56,48,72,74,0,68,65],
[72,45,68,71,64,62,0,73],
[64,41,55,72,79,65,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,70,60,59,59,55],
[67,0,68,64,60,66,67,65],
[69,62,0,68,57,58,67,60],
[60,66,62,0,59,55,59,59],
[70,70,73,71,0,65,66,62],
[71,64,72,75,65,0,71,73],
[71,63,63,71,64,59,0,64],
[75,65,70,71,68,57,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,72,71,68,60,56,60],
[72,0,74,81,75,77,70,65],
[58,56,0,69,69,57,63,65],
[59,49,61,0,67,62,52,61],
[62,55,61,63,0,67,51,49],
[70,53,73,68,63,0,59,49],
[74,60,67,78,79,71,0,66],
[70,65,65,69,81,81,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,66,63,59,68,65],
[60,0,62,62,60,54,59,63],
[64,68,0,67,64,62,61,69],
[64,68,63,0,54,52,61,61],
[67,70,66,76,0,73,64,75],
[71,76,68,78,57,0,71,71],
[62,71,69,69,66,59,0,69],
[65,67,61,69,55,59,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,43,43,43,45,66,43],
[107,0,88,86,86,68,86,65],
[87,42,0,84,63,87,107,65],
[87,44,46,0,22,68,67,23],
[87,44,67,108,0,89,67,44],
[85,62,43,62,41,0,85,85],
[64,44,23,63,63,45,0,0],
[87,65,65,107,86,45,130,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,60,78,41,49,57,49],
[80,0,39,79,52,50,70,79],
[70,91,0,81,62,69,69,70],
[52,51,49,0,42,30,41,40],
[89,78,68,88,0,60,78,88],
[81,80,61,100,70,0,80,68],
[73,60,61,89,52,50,0,59],
[81,51,60,90,42,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,65,67,70,61,69,68],
[55,0,59,62,60,54,58,54],
[65,71,0,71,70,67,58,60],
[63,68,59,0,65,60,60,64],
[60,70,60,65,0,66,60,64],
[69,76,63,70,64,0,59,62],
[61,72,72,70,70,71,0,66],
[62,76,70,66,66,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,71,71,71,71,76,63],
[73,0,65,58,64,77,74,56],
[59,65,0,56,58,62,58,56],
[59,72,74,0,60,71,71,56],
[59,66,72,70,0,74,66,56],
[59,53,68,59,56,0,70,59],
[54,56,72,59,64,60,0,70],
[67,74,74,74,74,71,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,72,67,73,74,60,65],
[70,0,79,71,66,75,70,64],
[58,51,0,59,63,59,62,59],
[63,59,71,0,59,60,60,64],
[57,64,67,71,0,61,62,68],
[56,55,71,70,69,0,63,59],
[70,60,68,70,68,67,0,65],
[65,66,71,66,62,71,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,84,73,66,37,45,64],
[50,0,70,58,37,19,36,47],
[46,60,0,55,46,42,53,55],
[57,72,75,0,49,37,45,64],
[64,93,84,81,0,65,68,87],
[93,111,88,93,65,0,64,74],
[85,94,77,85,62,66,0,79],
[66,83,75,66,43,56,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,48,40,62,50,68],
[66,0,68,64,58,89,77,77],
[67,62,0,46,68,101,98,59],
[82,66,84,0,63,82,61,71],
[90,72,62,67,0,93,82,68],
[68,41,29,48,37,0,50,59],
[80,53,32,69,48,80,0,68],
[62,53,71,59,62,71,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,74,58,65,67,65,59],
[59,0,74,65,63,66,69,60],
[56,56,0,64,61,64,63,61],
[72,65,66,0,76,71,69,60],
[65,67,69,54,0,72,64,67],
[63,64,66,59,58,0,65,60],
[65,61,67,61,66,65,0,57],
[71,70,69,70,63,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,57,58,69,64,60],
[62,0,59,51,58,55,59,52],
[66,71,0,56,63,64,67,60],
[73,79,74,0,68,68,76,64],
[72,72,67,62,0,79,70,72],
[61,75,66,62,51,0,59,55],
[66,71,63,54,60,71,0,63],
[70,78,70,66,58,75,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,68,77,65,74,71,76],
[53,0,71,60,61,66,66,63],
[62,59,0,72,68,66,60,67],
[53,70,58,0,65,65,63,74],
[65,69,62,65,0,70,80,77],
[56,64,64,65,60,0,62,63],
[59,64,70,67,50,68,0,65],
[54,67,63,56,53,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,69,79,56,84,73,92],
[53,0,74,57,53,68,66,69],
[61,56,0,73,70,73,63,80],
[51,73,57,0,62,62,66,75],
[74,77,60,68,0,83,67,88],
[46,62,57,68,47,0,65,74],
[57,64,67,64,63,65,0,71],
[38,61,50,55,42,56,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,58,63,60,77,73,63],
[84,0,67,63,79,77,76,68],
[72,63,0,68,82,85,80,68],
[67,67,62,0,58,78,78,54],
[70,51,48,72,0,65,63,50],
[53,53,45,52,65,0,61,52],
[57,54,50,52,67,69,0,58],
[67,62,62,76,80,78,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,95,33,49,66,64,49,64],
[35,0,33,33,66,31,33,32],
[97,97,0,49,66,97,66,65],
[81,97,81,0,66,80,66,65],
[64,64,64,64,0,47,31,47],
[66,99,33,50,83,0,51,49],
[81,97,64,64,99,79,0,65],
[66,98,65,65,83,81,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,75,69,68,64,69,70],
[55,0,52,43,56,45,57,58],
[55,78,0,71,62,63,67,69],
[61,87,59,0,71,66,71,63],
[62,74,68,59,0,67,71,66],
[66,85,67,64,63,0,66,64],
[61,73,63,59,59,64,0,80],
[60,72,61,67,64,66,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,56,64,61,55,69,66],
[71,0,53,66,69,64,64,75],
[74,77,0,67,65,69,66,77],
[66,64,63,0,65,65,62,69],
[69,61,65,65,0,67,64,79],
[75,66,61,65,63,0,58,78],
[61,66,64,68,66,72,0,82],
[64,55,53,61,51,52,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,68,71,72,74,71],
[57,0,61,65,70,62,72,63],
[67,69,0,70,78,61,73,70],
[62,65,60,0,77,64,68,73],
[59,60,52,53,0,60,62,62],
[58,68,69,66,70,0,69,69],
[56,58,57,62,68,61,0,63],
[59,67,60,57,68,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,39,74,84,99,79,68],
[56,0,58,56,50,72,59,60],
[91,72,0,62,98,79,98,86],
[56,74,68,0,83,71,76,83],
[46,80,32,47,0,73,71,92],
[31,58,51,59,57,0,53,68],
[51,71,32,54,59,77,0,63],
[62,70,44,47,38,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,38,44,46,38,39,36],
[81,0,58,78,63,80,73,66],
[92,72,0,81,74,60,76,61],
[86,52,49,0,61,72,72,53],
[84,67,56,69,0,52,84,63],
[92,50,70,58,78,0,64,82],
[91,57,54,58,46,66,0,50],
[94,64,69,77,67,48,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,69,78,89,78,79,56],
[73,0,64,54,65,85,54,73],
[61,66,0,65,98,67,77,56],
[52,76,65,0,87,98,65,76],
[41,65,32,43,0,65,44,66],
[52,45,63,32,65,0,41,55],
[51,76,53,65,86,89,0,66],
[74,57,74,54,64,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,56,45,57,69,53,53],
[73,0,62,75,63,72,71,71],
[74,68,0,76,61,65,53,67],
[85,55,54,0,57,66,53,73],
[73,67,69,73,0,73,71,61],
[61,58,65,64,57,0,58,67],
[77,59,77,77,59,72,0,63],
[77,59,63,57,69,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,68,61,66,68,66],
[66,0,63,80,61,62,67,72],
[61,67,0,68,63,58,67,65],
[62,50,62,0,51,53,58,64],
[69,69,67,79,0,67,70,52],
[64,68,72,77,63,0,69,72],
[62,63,63,72,60,61,0,57],
[64,58,65,66,78,58,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,53,42,65,66,60,65],
[73,0,65,68,63,79,71,78],
[77,65,0,67,68,79,77,75],
[88,62,63,0,74,67,71,62],
[65,67,62,56,0,64,62,58],
[64,51,51,63,66,0,63,66],
[70,59,53,59,68,67,0,64],
[65,52,55,68,72,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,57,61,64,66,54,62],
[72,0,65,69,64,76,61,63],
[73,65,0,60,69,70,65,72],
[69,61,70,0,68,69,64,71],
[66,66,61,62,0,75,63,71],
[64,54,60,61,55,0,59,59],
[76,69,65,66,67,71,0,67],
[68,67,58,59,59,71,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,63,61,57,61,57],
[73,0,69,65,60,68,63,67],
[68,61,0,65,64,61,58,52],
[67,65,65,0,66,64,60,63],
[69,70,66,64,0,61,66,62],
[73,62,69,66,69,0,65,65],
[69,67,72,70,64,65,0,59],
[73,63,78,67,68,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,63,49,58,61,67,57],
[72,0,70,68,63,72,73,58],
[67,60,0,57,60,61,64,62],
[81,62,73,0,64,71,74,63],
[72,67,70,66,0,61,75,70],
[69,58,69,59,69,0,73,65],
[63,57,66,56,55,57,0,53],
[73,72,68,67,60,65,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,55,65,53,57,56,65],
[65,0,45,64,56,55,56,55],
[75,85,0,66,46,65,57,94],
[65,66,64,0,45,55,57,66],
[77,74,84,85,0,58,84,74],
[73,75,65,75,72,0,56,65],
[74,74,73,73,46,74,0,73],
[65,75,36,64,56,65,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,64,55,64,60,68],
[74,0,74,70,67,73,65,65],
[67,56,0,63,68,69,61,63],
[66,60,67,0,64,69,68,59],
[75,63,62,66,0,67,62,66],
[66,57,61,61,63,0,58,63],
[70,65,69,62,68,72,0,63],
[62,65,67,71,64,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,66,56,42,39,51,61],
[75,0,73,74,70,56,70,74],
[64,57,0,65,42,49,62,61],
[74,56,65,0,51,65,67,79],
[88,60,88,79,0,60,63,75],
[91,74,81,65,70,0,81,74],
[79,60,68,63,67,49,0,62],
[69,56,69,51,55,56,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,47,52,53,49,54,57],
[54,0,64,49,64,48,63,59],
[83,66,0,68,70,63,62,70],
[78,81,62,0,64,62,61,74],
[77,66,60,66,0,72,68,71],
[81,82,67,68,58,0,67,66],
[76,67,68,69,62,63,0,70],
[73,71,60,56,59,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,103,67,64,72,67,73,88],
[27,0,49,62,67,32,85,67],
[63,81,0,62,63,66,58,73],
[66,68,68,0,67,56,72,66],
[58,63,67,63,0,56,67,69],
[63,98,64,74,74,0,68,71],
[57,45,72,58,63,62,0,57],
[42,63,57,64,61,59,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,65,63,59,64,62,78],
[76,0,85,80,65,76,77,88],
[65,45,0,58,51,71,48,90],
[67,50,72,0,47,78,56,75],
[71,65,79,83,0,87,71,89],
[66,54,59,52,43,0,41,75],
[68,53,82,74,59,89,0,90],
[52,42,40,55,41,55,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,78,63,57,64,62,62],
[62,0,71,63,70,67,62,62],
[52,59,0,58,64,50,59,63],
[67,67,72,0,71,68,58,67],
[73,60,66,59,0,62,66,69],
[66,63,80,62,68,0,62,67],
[68,68,71,72,64,68,0,66],
[68,68,67,63,61,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,83,76,63,74,62,54],
[58,0,63,62,68,68,58,69],
[47,67,0,58,65,67,60,77],
[54,68,72,0,64,66,65,51],
[67,62,65,66,0,73,67,63],
[56,62,63,64,57,0,53,70],
[68,72,70,65,63,77,0,63],
[76,61,53,79,67,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,75,65,76,71,78,63],
[46,0,56,55,64,76,66,60],
[55,74,0,67,62,70,69,64],
[65,75,63,0,77,61,73,59],
[54,66,68,53,0,62,62,59],
[59,54,60,69,68,0,80,68],
[52,64,61,57,68,50,0,60],
[67,70,66,71,71,62,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,47,72,56,51,70],
[60,0,77,30,76,42,38,50],
[65,53,0,43,78,48,40,51],
[83,100,87,0,89,84,35,63],
[58,54,52,41,0,63,41,56],
[74,88,82,46,67,0,65,70],
[79,92,90,95,89,65,0,96],
[60,80,79,67,74,60,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,52,61,60,61,58,61],
[71,0,60,66,63,66,61,67],
[78,70,0,78,65,72,73,74],
[69,64,52,0,66,67,66,67],
[70,67,65,64,0,72,62,66],
[69,64,58,63,58,0,64,64],
[72,69,57,64,68,66,0,65],
[69,63,56,63,64,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,63,64,60,56,53],
[70,0,77,72,80,65,69,60],
[63,53,0,65,66,54,71,62],
[67,58,65,0,70,72,68,65],
[66,50,64,60,0,55,62,51],
[70,65,76,58,75,0,58,66],
[74,61,59,62,68,72,0,51],
[77,70,68,65,79,64,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,65,78,81,68,75],
[61,0,63,64,67,68,54,70],
[67,67,0,64,67,77,65,81],
[65,66,66,0,68,69,64,73],
[52,63,63,62,0,68,66,71],
[49,62,53,61,62,0,63,73],
[62,76,65,66,64,67,0,75],
[55,60,49,57,59,57,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,60,60,64,59,53,41],
[79,0,59,65,58,73,65,70],
[70,71,0,62,56,60,43,54],
[70,65,68,0,68,68,68,68],
[66,72,74,62,0,76,51,50],
[71,57,70,62,54,0,54,49],
[77,65,87,62,79,76,0,65],
[89,60,76,62,80,81,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,63,64,65,61,64,50],
[75,0,64,66,72,61,62,58],
[67,66,0,67,61,66,73,62],
[66,64,63,0,72,52,65,66],
[65,58,69,58,0,62,73,59],
[69,69,64,78,68,0,72,58],
[66,68,57,65,57,58,0,57],
[80,72,68,64,71,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,78,56,67,79,63,63],
[67,0,60,64,69,97,70,55],
[52,70,0,74,70,88,73,49],
[74,66,56,0,78,86,58,71],
[63,61,60,52,0,77,43,36],
[51,33,42,44,53,0,59,33],
[67,60,57,72,87,71,0,62],
[67,75,81,59,94,97,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,70,56,72,63,59],
[70,0,66,72,70,75,69,60],
[63,64,0,68,61,67,55,67],
[60,58,62,0,67,63,66,65],
[74,60,69,63,0,69,66,62],
[58,55,63,67,61,0,63,59],
[67,61,75,64,64,67,0,61],
[71,70,63,65,68,71,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,63,72,67,63,63],
[66,0,77,70,64,74,64,74],
[60,53,0,58,58,67,66,66],
[67,60,72,0,69,72,59,68],
[58,66,72,61,0,66,67,64],
[63,56,63,58,64,0,64,58],
[67,66,64,71,63,66,0,67],
[67,56,64,62,66,72,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,78,72,68,70,80],
[68,0,64,76,76,71,69,81],
[65,66,0,78,77,74,68,77],
[52,54,52,0,60,66,58,56],
[58,54,53,70,0,70,69,71],
[62,59,56,64,60,0,72,70],
[60,61,62,72,61,58,0,72],
[50,49,53,74,59,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,66,60,65,66,66],
[67,0,69,71,65,67,64,68],
[71,61,0,67,56,62,72,62],
[64,59,63,0,59,71,67,73],
[70,65,74,71,0,68,75,64],
[65,63,68,59,62,0,71,73],
[64,66,58,63,55,59,0,60],
[64,62,68,57,66,57,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,76,59,64,63,63],
[67,0,53,67,52,49,52,65],
[72,77,0,62,67,66,71,74],
[54,63,68,0,61,62,53,74],
[71,78,63,69,0,59,65,72],
[66,81,64,68,71,0,68,69],
[67,78,59,77,65,62,0,78],
[67,65,56,56,58,61,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,76,69,64,59,68,66],
[64,0,78,67,66,64,75,69],
[54,52,0,67,47,67,72,70],
[61,63,63,0,53,55,66,48],
[66,64,83,77,0,83,78,68],
[71,66,63,75,47,0,76,69],
[62,55,58,64,52,54,0,58],
[64,61,60,82,62,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,65,59,62,63,63],
[74,0,79,72,63,65,77,72],
[67,51,0,60,50,61,65,63],
[65,58,70,0,65,66,83,83],
[71,67,80,65,0,73,75,68],
[68,65,69,64,57,0,76,61],
[67,53,65,47,55,54,0,73],
[67,58,67,47,62,69,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,71,74,68,62,60,69],
[57,0,71,68,65,64,58,61],
[59,59,0,66,51,53,61,61],
[56,62,64,0,58,61,56,58],
[62,65,79,72,0,70,77,67],
[68,66,77,69,60,0,66,73],
[70,72,69,74,53,64,0,68],
[61,69,69,72,63,57,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,70,64,59,58,68],
[60,0,68,71,67,61,58,67],
[70,62,0,78,68,60,60,72],
[60,59,52,0,58,65,59,62],
[66,63,62,72,0,64,70,76],
[71,69,70,65,66,0,60,71],
[72,72,70,71,60,70,0,74],
[62,63,58,68,54,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,68,65,69,64,55,67],
[57,0,59,62,61,62,53,64],
[62,71,0,58,58,64,58,64],
[65,68,72,0,65,78,58,71],
[61,69,72,65,0,73,65,68],
[66,68,66,52,57,0,53,67],
[75,77,72,72,65,77,0,74],
[63,66,66,59,62,63,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,61,73,69,71,70,74],
[55,0,54,52,57,60,56,54],
[69,76,0,68,66,70,65,66],
[57,78,62,0,59,69,62,67],
[61,73,64,71,0,73,65,72],
[59,70,60,61,57,0,70,69],
[60,74,65,68,65,60,0,61],
[56,76,64,63,58,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,0,130,0,0,65,0],
[130,0,0,130,65,65,65,65],
[130,130,0,130,65,65,130,65],
[0,0,0,0,0,0,0,0],
[130,65,65,130,0,65,130,65],
[130,65,65,130,65,0,65,65],
[65,65,0,130,0,65,0,65],
[130,65,65,130,65,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,60,60,52,57,57],
[72,0,68,70,68,71,74,65],
[72,62,0,73,67,65,66,63],
[70,60,57,0,59,55,60,64],
[70,62,63,71,0,66,69,61],
[78,59,65,75,64,0,67,68],
[73,56,64,70,61,63,0,62],
[73,65,67,66,69,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,95,83,72,57,81,60],
[58,0,94,91,48,67,56,68],
[35,36,0,68,37,22,34,56],
[47,39,62,0,37,36,22,60],
[58,82,93,93,0,80,56,80],
[73,63,108,94,50,0,82,108],
[49,74,96,108,74,48,0,72],
[70,62,74,70,50,22,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,60,69,55,65,64],
[65,0,67,64,61,52,67,73],
[69,63,0,61,65,62,68,71],
[70,66,69,0,64,65,69,72],
[61,69,65,66,0,62,71,70],
[75,78,68,65,68,0,77,80],
[65,63,62,61,59,53,0,71],
[66,57,59,58,60,50,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,52,57,48,64,57,47],
[81,0,64,61,64,76,72,61],
[78,66,0,72,69,68,63,66],
[73,69,58,0,60,66,53,59],
[82,66,61,70,0,77,65,68],
[66,54,62,64,53,0,59,70],
[73,58,67,77,65,71,0,69],
[83,69,64,71,62,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,52,54,62,61,45,60],
[50,0,71,66,58,68,46,54],
[78,59,0,85,88,82,69,55],
[76,64,45,0,51,63,47,50],
[68,72,42,79,0,68,51,61],
[69,62,48,67,62,0,47,51],
[85,84,61,83,79,83,0,73],
[70,76,75,80,69,79,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,51,61,69,62,78,66],
[56,0,50,66,83,81,82,71],
[79,80,0,59,81,97,88,79],
[69,64,71,0,80,80,79,77],
[61,47,49,50,0,62,71,64],
[68,49,33,50,68,0,64,63],
[52,48,42,51,59,66,0,47],
[64,59,51,53,66,67,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,58,75,61,65,70],
[60,0,67,70,70,55,70,66],
[70,63,0,69,73,69,71,70],
[72,60,61,0,75,57,74,64],
[55,60,57,55,0,46,58,64],
[69,75,61,73,84,0,67,64],
[65,60,59,56,72,63,0,62],
[60,64,60,66,66,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,76,74,65,64,67,64],
[61,0,66,79,52,52,63,63],
[54,64,0,82,60,63,63,76],
[56,51,48,0,45,51,57,60],
[65,78,70,85,0,70,63,70],
[66,78,67,79,60,0,67,73],
[63,67,67,73,67,63,0,67],
[66,67,54,70,60,57,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,87,67,65,67,68],
[64,0,64,88,43,85,64,68],
[64,66,0,88,87,85,66,68],
[43,42,42,0,21,64,42,22],
[63,87,43,109,0,85,109,68],
[65,45,45,66,45,0,65,46],
[63,66,64,88,21,65,0,68],
[62,62,62,108,62,84,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,85,62,62,87,90,93],
[90,0,75,52,58,84,82,89],
[45,55,0,73,68,100,76,92],
[68,78,57,0,90,101,85,106],
[68,72,62,40,0,72,62,80],
[43,46,30,29,58,0,42,52],
[40,48,54,45,68,88,0,78],
[37,41,38,24,50,78,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,75,61,63,68,57,64],
[67,0,72,58,64,70,58,60],
[55,58,0,50,59,61,54,68],
[69,72,80,0,66,63,65,74],
[67,66,71,64,0,68,62,71],
[62,60,69,67,62,0,54,71],
[73,72,76,65,68,76,0,76],
[66,70,62,56,59,59,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,63,68,70,67,70],
[64,0,63,61,59,63,66,71],
[65,67,0,65,59,60,54,67],
[67,69,65,0,61,60,65,68],
[62,71,71,69,0,66,67,71],
[60,67,70,70,64,0,57,70],
[63,64,76,65,63,73,0,74],
[60,59,63,62,59,60,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,63,57,49,72,57],
[61,0,74,62,60,67,82,47],
[64,56,0,65,74,76,68,53],
[67,68,65,0,58,60,78,59],
[73,70,56,72,0,74,85,72],
[81,63,54,70,56,0,85,57],
[58,48,62,52,45,45,0,54],
[73,83,77,71,58,73,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,77,80,55,69,68,61],
[64,0,75,73,61,75,61,68],
[53,55,0,55,51,60,50,50],
[50,57,75,0,63,64,52,58],
[75,69,79,67,0,74,64,61],
[61,55,70,66,56,0,57,53],
[62,69,80,78,66,73,0,64],
[69,62,80,72,69,77,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,54,63,64,80,49],
[67,0,86,66,61,62,72,59],
[63,44,0,60,56,53,66,56],
[76,64,70,0,89,67,76,69],
[67,69,74,41,0,74,82,58],
[66,68,77,63,56,0,83,68],
[50,58,64,54,48,47,0,31],
[81,71,74,61,72,62,99,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,73,102,69,100,71,59],
[60,0,44,75,59,59,58,75],
[57,86,0,58,56,56,72,89],
[28,55,72,0,56,42,56,58],
[61,71,74,74,0,72,57,60],
[30,71,74,88,58,0,58,46],
[59,72,58,74,73,72,0,60],
[71,55,41,72,70,84,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,70,60,74,80,65,78],
[53,0,70,59,57,82,59,76],
[60,60,0,67,69,76,45,72],
[70,71,63,0,64,77,57,63],
[56,73,61,66,0,73,58,65],
[50,48,54,53,57,0,47,64],
[65,71,85,73,72,83,0,74],
[52,54,58,67,65,66,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,61,57,54,68,64],
[63,0,55,64,63,67,69,60],
[65,75,0,71,71,73,79,76],
[69,66,59,0,65,62,81,58],
[73,67,59,65,0,73,74,55],
[76,63,57,68,57,0,74,61],
[62,61,51,49,56,56,0,59],
[66,70,54,72,75,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,72,78,73,75,73,64],
[56,0,60,71,59,62,57,66],
[58,70,0,64,60,67,52,56],
[52,59,66,0,56,70,53,56],
[57,71,70,74,0,70,67,62],
[55,68,63,60,60,0,58,52],
[57,73,78,77,63,72,0,63],
[66,64,74,74,68,78,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,58,63,71,58,57,72],
[76,0,63,70,69,63,73,85],
[72,67,0,73,78,60,84,83],
[67,60,57,0,64,68,69,73],
[59,61,52,66,0,61,69,71],
[72,67,70,62,69,0,74,67],
[73,57,46,61,61,56,0,66],
[58,45,47,57,59,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,69,72,63,63,58],
[67,0,65,75,70,58,58,60],
[67,65,0,67,65,63,65,67],
[61,55,63,0,68,65,72,61],
[58,60,65,62,0,51,63,64],
[67,72,67,65,79,0,69,71],
[67,72,65,58,67,61,0,61],
[72,70,63,69,66,59,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,84,65,65,110,110,87],
[42,0,84,41,64,45,64,64],
[46,46,0,46,46,46,46,68],
[65,89,84,0,23,45,64,45],
[65,66,84,107,0,91,110,87],
[20,85,84,85,39,0,65,84],
[20,66,84,66,20,65,0,42],
[43,66,62,85,43,46,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,67,63,55,65,53,58],
[72,0,67,72,63,73,66,69],
[63,63,0,69,65,78,61,69],
[67,58,61,0,59,75,66,64],
[75,67,65,71,0,82,67,71],
[65,57,52,55,48,0,56,65],
[77,64,69,64,63,74,0,71],
[72,61,61,66,59,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,59,63,61,53,59],
[71,0,60,61,64,53,52,59],
[65,70,0,69,67,66,61,65],
[71,69,61,0,50,58,63,60],
[67,66,63,80,0,58,60,71],
[69,77,64,72,72,0,66,65],
[77,78,69,67,70,64,0,68],
[71,71,65,70,59,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,89,74,96,80,78,80],
[68,0,88,64,73,80,66,65],
[41,42,0,58,71,42,56,48],
[56,66,72,0,80,58,73,58],
[34,57,59,50,0,52,58,40],
[50,50,88,72,78,0,57,62],
[52,64,74,57,72,73,0,62],
[50,65,82,72,90,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,69,58,50,61,59,44],
[81,0,75,64,40,45,62,51],
[61,55,0,50,36,53,62,34],
[72,66,80,0,52,68,70,51],
[80,90,94,78,0,66,91,65],
[69,85,77,62,64,0,69,51],
[71,68,68,60,39,61,0,37],
[86,79,96,79,65,79,93,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,54,80,72,63,71],
[69,0,78,74,80,59,74,74],
[68,52,0,59,80,64,85,74],
[76,56,71,0,82,64,79,76],
[50,50,50,48,0,51,56,47],
[58,71,66,66,79,0,71,62],
[67,56,45,51,74,59,0,53],
[59,56,56,54,83,68,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,74,45,70,57,59],
[60,0,59,67,51,47,48,57],
[66,71,0,70,52,68,58,66],
[56,63,60,0,43,54,53,51],
[85,79,78,87,0,68,75,57],
[60,83,62,76,62,0,57,64],
[73,82,72,77,55,73,0,66],
[71,73,64,79,73,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,65,62,57,59,59],
[69,0,60,66,59,55,56,55],
[71,70,0,65,73,72,61,62],
[65,64,65,0,67,63,68,60],
[68,71,57,63,0,61,56,61],
[73,75,58,67,69,0,63,68],
[71,74,69,62,74,67,0,70],
[71,75,68,70,69,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,67,60,68,59,59],
[63,0,65,59,55,66,64,65],
[65,65,0,61,60,60,63,56],
[63,71,69,0,57,69,64,64],
[70,75,70,73,0,72,65,67],
[62,64,70,61,58,0,63,65],
[71,66,67,66,65,67,0,60],
[71,65,74,66,63,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,73,60,51,75,72,87],
[64,0,71,46,50,63,45,67],
[57,59,0,46,47,52,44,73],
[70,84,84,0,59,74,62,91],
[79,80,83,71,0,79,63,94],
[55,67,78,56,51,0,53,91],
[58,85,86,68,67,77,0,80],
[43,63,57,39,36,39,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,64,69,70,71,60,61],
[77,0,62,67,72,69,53,68],
[66,68,0,71,68,66,63,72],
[61,63,59,0,70,70,66,65],
[60,58,62,60,0,61,54,63],
[59,61,64,60,69,0,52,56],
[70,77,67,64,76,78,0,67],
[69,62,58,65,67,74,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,64,54,60,59,57],
[66,0,59,66,60,53,61,59],
[67,71,0,73,74,69,62,59],
[66,64,57,0,66,55,54,59],
[76,70,56,64,0,62,58,62],
[70,77,61,75,68,0,75,62],
[71,69,68,76,72,55,0,65],
[73,71,71,71,68,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,79,77,70,72,67,65],
[56,0,65,64,67,67,67,67],
[51,65,0,60,68,68,68,64],
[53,66,70,0,57,68,60,55],
[60,63,62,73,0,70,63,67],
[58,63,62,62,60,0,64,66],
[63,63,62,70,67,66,0,64],
[65,63,66,75,63,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,65,68,65,63,65],
[69,0,66,62,72,57,63,66],
[62,64,0,64,57,53,65,61],
[65,68,66,0,67,57,55,60],
[62,58,73,63,0,60,63,52],
[65,73,77,73,70,0,65,72],
[67,67,65,75,67,65,0,72],
[65,64,69,70,78,58,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,70,86,69,67,71],
[58,0,52,66,73,80,71,56],
[65,78,0,77,74,67,82,70],
[60,64,53,0,58,74,78,68],
[44,57,56,72,0,61,70,70],
[61,50,63,56,69,0,69,66],
[63,59,48,52,60,61,0,61],
[59,74,60,62,60,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,72,63,76,78,65,61],
[69,0,75,67,62,75,72,68],
[58,55,0,59,59,71,64,54],
[67,63,71,0,68,77,64,60],
[54,68,71,62,0,69,66,66],
[52,55,59,53,61,0,54,51],
[65,58,66,66,64,76,0,66],
[69,62,76,70,64,79,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,63,73,71,69,77,78],
[45,0,57,46,57,67,69,72],
[67,73,0,71,73,57,63,60],
[57,84,59,0,77,65,69,70],
[59,73,57,53,0,57,75,63],
[61,63,73,65,73,0,75,78],
[53,61,67,61,55,55,0,64],
[52,58,70,60,67,52,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,56,72,71,52,61,56],
[55,0,54,59,64,44,63,50],
[74,76,0,69,62,66,83,73],
[58,71,61,0,61,66,67,65],
[59,66,68,69,0,67,76,61],
[78,86,64,64,63,0,68,74],
[69,67,47,63,54,62,0,50],
[74,80,57,65,69,56,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,53,66,57,56,75],
[70,0,81,59,58,47,76,72],
[69,49,0,71,54,40,69,70],
[77,71,59,0,78,84,77,78],
[64,72,76,52,0,57,49,88],
[73,83,90,46,73,0,65,82],
[74,54,61,53,81,65,0,74],
[55,58,60,52,42,48,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,53,56,65,93,52,61],
[67,0,63,58,64,104,82,86],
[77,67,0,58,69,69,66,79],
[74,72,72,0,64,102,88,85],
[65,66,61,66,0,95,55,65],
[37,26,61,28,35,0,8,26],
[78,48,64,42,75,122,0,70],
[69,44,51,45,65,104,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,57,56,50,78,49,43],
[53,0,55,61,63,61,47,31],
[73,75,0,63,78,74,58,59],
[74,69,67,0,61,89,55,55],
[80,67,52,69,0,81,66,57],
[52,69,56,41,49,0,40,39],
[81,83,72,75,64,90,0,70],
[87,99,71,75,73,91,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,67,59,61,63,61,60],
[59,0,47,54,49,58,56,61],
[63,83,0,66,63,64,61,55],
[71,76,64,0,62,61,64,63],
[69,81,67,68,0,61,74,70],
[67,72,66,69,69,0,62,60],
[69,74,69,66,56,68,0,65],
[70,69,75,67,60,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,71,57,48,62,56],
[67,0,70,75,75,57,70,71],
[70,60,0,57,51,69,66,60],
[59,55,73,0,70,69,86,67],
[73,55,79,60,0,53,62,69],
[82,73,61,61,77,0,84,69],
[68,60,64,44,68,46,0,55],
[74,59,70,63,61,61,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,74,64,67,72,66,71],
[61,0,56,56,68,66,58,66],
[56,74,0,60,64,66,68,66],
[66,74,70,0,68,64,71,71],
[63,62,66,62,0,64,56,71],
[58,64,64,66,66,0,57,62],
[64,72,62,59,74,73,0,64],
[59,64,64,59,59,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,58,66,75,58,52,81],
[63,0,58,64,77,66,55,79],
[72,72,0,77,76,58,70,74],
[64,66,53,0,71,70,57,75],
[55,53,54,59,0,46,50,70],
[72,64,72,60,84,0,61,77],
[78,75,60,73,80,69,0,70],
[49,51,56,55,60,53,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,80,74,66,72,71,66],
[68,0,73,76,67,71,65,77],
[50,57,0,58,44,60,64,62],
[56,54,72,0,56,69,59,58],
[64,63,86,74,0,66,70,69],
[58,59,70,61,64,0,67,66],
[59,65,66,71,60,63,0,73],
[64,53,68,72,61,64,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,62,82,55,61,79],
[59,0,71,59,69,56,53,67],
[60,59,0,57,66,41,47,61],
[68,71,73,0,77,64,64,77],
[48,61,64,53,0,44,62,55],
[75,74,89,66,86,0,61,81],
[69,77,83,66,68,69,0,65],
[51,63,69,53,75,49,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,67,55,71,71,62,70],
[53,0,58,43,50,67,46,60],
[63,72,0,66,65,71,71,67],
[75,87,64,0,80,98,68,84],
[59,80,65,50,0,83,64,78],
[59,63,59,32,47,0,54,66],
[68,84,59,62,66,76,0,84],
[60,70,63,46,52,64,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,59,61,68,66,65],
[64,0,61,67,61,69,73,62],
[66,69,0,55,69,73,73,64],
[71,63,75,0,66,76,71,67],
[69,69,61,64,0,68,70,67],
[62,61,57,54,62,0,66,60],
[64,57,57,59,60,64,0,62],
[65,68,66,63,63,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,60,70,75,71,63,68],
[72,0,71,70,63,79,65,54],
[70,59,0,56,72,69,71,60],
[60,60,74,0,68,66,67,68],
[55,67,58,62,0,66,68,58],
[59,51,61,64,64,0,64,56],
[67,65,59,63,62,66,0,66],
[62,76,70,62,72,74,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,66,60,74,64,51,41],
[84,0,61,75,66,62,78,73],
[64,69,0,63,58,66,82,51],
[70,55,67,0,45,52,64,48],
[56,64,72,85,0,64,57,46],
[66,68,64,78,66,0,67,54],
[79,52,48,66,73,63,0,45],
[89,57,79,82,84,76,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,60,64,51,68,68],
[65,0,56,49,55,57,49,56],
[62,74,0,65,68,64,63,74],
[70,81,65,0,78,76,77,68],
[66,75,62,52,0,66,71,67],
[79,73,66,54,64,0,65,70],
[62,81,67,53,59,65,0,75],
[62,74,56,62,63,60,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,66,73,68,68,55,87],
[72,0,69,73,86,56,66,86],
[64,61,0,74,84,76,60,89],
[57,57,56,0,82,67,38,77],
[62,44,46,48,0,54,27,70],
[62,74,54,63,76,0,60,83],
[75,64,70,92,103,70,0,97],
[43,44,41,53,60,47,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,70,69,78,74,65,66],
[60,0,73,77,65,87,57,58],
[60,57,0,66,58,68,51,54],
[61,53,64,0,67,66,58,53],
[52,65,72,63,0,77,52,52],
[56,43,62,64,53,0,49,48],
[65,73,79,72,78,81,0,81],
[64,72,76,77,78,82,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,58,45,56,59,51,72],
[73,0,68,53,69,70,62,60],
[72,62,0,65,56,63,60,69],
[85,77,65,0,69,71,66,87],
[74,61,74,61,0,65,62,80],
[71,60,67,59,65,0,60,72],
[79,68,70,64,68,70,0,73],
[58,70,61,43,50,58,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,59,73,73,73,70],
[59,0,54,54,61,60,58,55],
[60,76,0,69,75,68,73,73],
[71,76,61,0,77,75,65,74],
[57,69,55,53,0,61,62,56],
[57,70,62,55,69,0,66,59],
[57,72,57,65,68,64,0,59],
[60,75,57,56,74,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,96,66,66,32,99,0,34],
[34,0,34,34,0,34,34,34],
[64,96,0,66,32,99,0,34],
[64,96,64,0,96,64,64,67],
[98,130,98,34,0,98,98,67],
[31,96,31,66,32,0,0,34],
[130,96,130,66,32,130,0,66],
[96,96,96,63,63,96,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,68,61,66,69,72,55],
[56,0,59,44,45,58,64,62],
[62,71,0,49,62,64,65,57],
[69,86,81,0,68,66,72,62],
[64,85,68,62,0,71,67,72],
[61,72,66,64,59,0,64,57],
[58,66,65,58,63,66,0,59],
[75,68,73,68,58,73,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,55,57,61,67,64,64],
[56,0,48,57,59,53,62,76],
[75,82,0,67,61,66,68,69],
[73,73,63,0,62,68,78,65],
[69,71,69,68,0,60,67,64],
[63,77,64,62,70,0,76,68],
[66,68,62,52,63,54,0,66],
[66,54,61,65,66,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,65,0,65,0,0,65],
[130,0,130,130,65,0,65,130],
[65,0,0,65,65,0,0,130],
[130,0,65,0,65,0,0,130],
[65,65,65,65,0,0,65,65],
[130,130,130,130,130,0,65,130],
[130,65,130,130,65,65,0,130],
[65,0,0,0,65,0,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,62,71,80,68,66],
[62,0,58,58,68,70,71,62],
[65,72,0,61,66,70,73,63],
[68,72,69,0,63,85,76,72],
[59,62,64,67,0,82,63,61],
[50,60,60,45,48,0,56,52],
[62,59,57,54,67,74,0,63],
[64,68,67,58,69,78,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,69,64,65,67,53],
[67,0,70,62,73,73,71,69],
[69,60,0,82,84,70,73,60],
[61,68,48,0,66,53,57,60],
[66,57,46,64,0,53,56,50],
[65,57,60,77,77,0,63,57],
[63,59,57,73,74,67,0,55],
[77,61,70,70,80,73,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,63,65,64,64,75],
[63,0,75,55,60,70,61,75],
[65,55,0,53,65,54,57,63],
[67,75,77,0,77,78,62,91],
[65,70,65,53,0,68,59,81],
[66,60,76,52,62,0,65,72],
[66,69,73,68,71,65,0,87],
[55,55,67,39,49,58,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,69,66,69,62,72,67],
[57,0,68,55,78,58,69,72],
[61,62,0,55,72,66,69,66],
[64,75,75,0,78,66,82,77],
[61,52,58,52,0,67,64,63],
[68,72,64,64,63,0,73,67],
[58,61,61,48,66,57,0,59],
[63,58,64,53,67,63,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,67,57,61,66,59,63],
[46,0,52,41,46,54,49,51],
[63,78,0,57,60,60,60,60],
[73,89,73,0,68,67,64,69],
[69,84,70,62,0,51,56,76],
[64,76,70,63,79,0,54,67],
[71,81,70,66,74,76,0,64],
[67,79,70,61,54,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,56,55,65,58,65],
[70,0,65,62,53,56,59,65],
[69,65,0,60,66,68,75,63],
[74,68,70,0,62,67,65,68],
[75,77,64,68,0,65,65,77],
[65,74,62,63,65,0,66,77],
[72,71,55,65,65,64,0,63],
[65,65,67,62,53,53,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,64,64,78,67,64],
[58,0,56,56,64,63,64,59],
[63,74,0,65,68,78,73,69],
[66,74,65,0,65,66,73,67],
[66,66,62,65,0,72,66,69],
[52,67,52,64,58,0,69,62],
[63,66,57,57,64,61,0,66],
[66,71,61,63,61,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,64,59,68,67,65],
[67,0,73,71,69,65,63,60],
[70,57,0,66,64,57,60,62],
[66,59,64,0,65,60,54,58],
[71,61,66,65,0,65,65,60],
[62,65,73,70,65,0,73,60],
[63,67,70,76,65,57,0,58],
[65,70,68,72,70,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,54,57,74,57,53,62],
[63,0,63,67,67,55,58,65],
[76,67,0,71,77,64,73,73],
[73,63,59,0,72,62,61,67],
[56,63,53,58,0,55,49,58],
[73,75,66,68,75,0,62,71],
[77,72,57,69,81,68,0,78],
[68,65,57,63,72,59,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,68,60,61,71,65,75],
[52,0,60,64,58,71,54,72],
[62,70,0,63,67,88,64,64],
[70,66,67,0,66,83,62,87],
[69,72,63,64,0,84,74,75],
[59,59,42,47,46,0,48,60],
[65,76,66,68,56,82,0,66],
[55,58,66,43,55,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,55,63,61,62,60,58],
[77,0,70,59,72,81,86,67],
[75,60,0,66,58,67,76,67],
[67,71,64,0,62,66,73,68],
[69,58,72,68,0,71,65,70],
[68,49,63,64,59,0,75,63],
[70,44,54,57,65,55,0,57],
[72,63,63,62,60,67,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,64,93,69,53,74],
[67,0,60,75,87,61,68,82],
[70,70,0,76,76,43,54,69],
[66,55,54,0,83,62,59,63],
[37,43,54,47,0,63,28,71],
[61,69,87,68,67,0,62,86],
[77,62,76,71,102,68,0,84],
[56,48,61,67,59,44,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,66,69,68,65,66,59],
[50,0,58,55,48,55,53,49],
[64,72,0,71,65,65,63,58],
[61,75,59,0,62,61,59,53],
[62,82,65,68,0,67,66,59],
[65,75,65,69,63,0,66,66],
[64,77,67,71,64,64,0,69],
[71,81,72,77,71,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,56,57,56,55,54,57],
[62,0,56,71,52,66,62,61],
[74,74,0,72,61,63,65,61],
[73,59,58,0,59,70,61,72],
[74,78,69,71,0,70,69,64],
[75,64,67,60,60,0,61,63],
[76,68,65,69,61,69,0,68],
[73,69,69,58,66,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,74,60,79,75,68],
[59,0,76,81,60,75,79,60],
[59,54,0,72,68,75,71,53],
[56,49,58,0,43,56,70,56],
[70,70,62,87,0,80,85,71],
[51,55,55,74,50,0,56,50],
[55,51,59,60,45,74,0,59],
[62,70,77,74,59,80,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,92,64,84,66,72,64,58],
[38,0,56,77,49,65,55,49],
[66,74,0,83,48,58,72,66],
[46,53,47,0,46,22,46,55],
[64,81,82,84,0,65,77,76],
[58,65,72,108,65,0,62,67],
[66,75,58,84,53,68,0,61],
[72,81,64,75,54,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,56,49,47,67,54,41],
[71,0,51,66,60,89,66,56],
[74,79,0,59,63,72,69,70],
[81,64,71,0,53,83,59,63],
[83,70,67,77,0,67,63,59],
[63,41,58,47,63,0,54,55],
[76,64,61,71,67,76,0,56],
[89,74,60,67,71,75,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,57,74,56,59,72,72],
[59,0,29,72,71,16,29,74],
[73,101,0,73,87,43,43,74],
[56,58,57,0,57,60,58,59],
[74,59,43,73,0,45,29,88],
[71,114,87,70,85,0,29,74],
[58,101,87,72,101,101,0,72],
[58,56,56,71,42,56,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,41,26,53,59,53,54],
[76,0,69,53,60,61,51,53],
[89,61,0,45,39,60,63,71],
[104,77,85,0,78,86,60,76],
[77,70,91,52,0,94,78,81],
[71,69,70,44,36,0,43,78],
[77,79,67,70,52,87,0,77],
[76,77,59,54,49,52,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,74,68,64,65,69,67],
[59,0,66,61,59,61,59,70],
[56,64,0,64,65,66,65,63],
[62,69,66,0,65,64,67,60],
[66,71,65,65,0,73,69,76],
[65,69,64,66,57,0,69,83],
[61,71,65,63,61,61,0,63],
[63,60,67,70,54,47,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,83,70,60,71,66,61],
[49,0,79,56,71,61,59,48],
[47,51,0,34,53,46,51,44],
[60,74,96,0,63,79,93,70],
[70,59,77,67,0,69,79,57],
[59,69,84,51,61,0,57,49],
[64,71,79,37,51,73,0,47],
[69,82,86,60,73,81,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,71,69,68,59,63,66],
[71,0,77,67,61,67,69,68],
[59,53,0,67,60,66,63,68],
[61,63,63,0,61,60,66,72],
[62,69,70,69,0,67,70,75],
[71,63,64,70,63,0,75,68],
[67,61,67,64,60,55,0,66],
[64,62,62,58,55,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,65,64,73,62,69,66],
[55,0,41,61,73,66,53,65],
[65,89,0,80,80,68,78,73],
[66,69,50,0,76,62,74,75],
[57,57,50,54,0,58,63,43],
[68,64,62,68,72,0,80,73],
[61,77,52,56,67,50,0,66],
[64,65,57,55,87,57,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,67,53,62,68,63,49],
[75,0,72,72,72,72,76,62],
[63,58,0,63,62,59,61,54],
[77,58,67,0,72,71,71,65],
[68,58,68,58,0,70,65,46],
[62,58,71,59,60,0,56,50],
[67,54,69,59,65,74,0,57],
[81,68,76,65,84,80,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,64,56,67,61,54],
[74,0,60,65,55,58,60,64],
[73,70,0,62,74,71,57,61],
[66,65,68,0,64,61,64,68],
[74,75,56,66,0,51,55,61],
[63,72,59,69,79,0,67,68],
[69,70,73,66,75,63,0,58],
[76,66,69,62,69,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,53,62,80,72,72,56],
[62,0,66,68,74,75,63,61],
[77,64,0,71,67,78,67,66],
[68,62,59,0,69,67,72,61],
[50,56,63,61,0,69,65,62],
[58,55,52,63,61,0,59,65],
[58,67,63,58,65,71,0,60],
[74,69,64,69,68,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,67,53,53,64,65,48],
[74,0,50,70,78,71,58,67],
[63,80,0,63,73,77,62,68],
[77,60,67,0,72,69,65,64],
[77,52,57,58,0,78,63,47],
[66,59,53,61,52,0,70,70],
[65,72,68,65,67,60,0,67],
[82,63,62,66,83,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,62,64,69,79,65,77],
[54,0,61,50,67,74,61,61],
[68,69,0,62,63,78,65,63],
[66,80,68,0,73,75,65,65],
[61,63,67,57,0,59,60,61],
[51,56,52,55,71,0,55,60],
[65,69,65,65,70,75,0,70],
[53,69,67,65,69,70,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,59,57,54,66,55],
[68,0,63,63,57,59,68,59],
[66,67,0,62,58,58,69,65],
[71,67,68,0,60,58,64,62],
[73,73,72,70,0,65,72,68],
[76,71,72,72,65,0,82,69],
[64,62,61,66,58,48,0,56],
[75,71,65,68,62,61,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,86,66,60,73,60,58],
[68,0,67,59,61,62,62,63],
[44,63,0,62,55,52,58,61],
[64,71,68,0,57,68,71,61],
[70,69,75,73,0,74,75,62],
[57,68,78,62,56,0,59,64],
[70,68,72,59,55,71,0,66],
[72,67,69,69,68,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,63,58,64,61,57],
[63,0,60,62,55,62,51,55],
[65,70,0,65,68,70,64,66],
[67,68,65,0,56,61,59,56],
[72,75,62,74,0,74,66,69],
[66,68,60,69,56,0,55,62],
[69,79,66,71,64,75,0,66],
[73,75,64,74,61,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,67,70,63,65,68,84],
[56,0,70,61,63,80,71,68],
[63,60,0,66,66,73,77,72],
[60,69,64,0,66,71,75,83],
[67,67,64,64,0,71,71,79],
[65,50,57,59,59,0,59,63],
[62,59,53,55,59,71,0,70],
[46,62,58,47,51,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,73,62,73,69,65,73],
[61,0,72,66,67,50,61,60],
[57,58,0,65,51,54,61,73],
[68,64,65,0,70,61,59,78],
[57,63,79,60,0,60,70,67],
[61,80,76,69,70,0,71,81],
[65,69,69,71,60,59,0,66],
[57,70,57,52,63,49,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,61,50,48,65,49],
[71,0,43,53,57,59,56,66],
[71,87,0,69,65,59,67,68],
[69,77,61,0,69,66,69,59],
[80,73,65,61,0,60,70,56],
[82,71,71,64,70,0,64,68],
[65,74,63,61,60,66,0,76],
[81,64,62,71,74,62,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,53,53,56,45,43],
[61,0,49,31,27,44,36,58],
[62,81,0,50,67,40,50,61],
[77,99,80,0,65,65,65,70],
[77,103,63,65,0,80,57,82],
[74,86,90,65,50,0,52,54],
[85,94,80,65,73,78,0,74],
[87,72,69,60,48,76,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,72,63,59,64,65,75],
[50,0,62,57,55,56,58,62],
[58,68,0,66,55,63,69,69],
[67,73,64,0,62,69,59,79],
[71,75,75,68,0,65,68,79],
[66,74,67,61,65,0,64,70],
[65,72,61,71,62,66,0,72],
[55,68,61,51,51,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,50,56,61,44,53,80],
[75,0,63,77,59,75,68,73],
[80,67,0,74,73,65,42,58],
[74,53,56,0,54,64,54,70],
[69,71,57,76,0,63,54,62],
[86,55,65,66,67,0,62,74],
[77,62,88,76,76,68,0,84],
[50,57,72,60,68,56,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,64,77,66,78,88,73],
[50,0,60,73,57,75,74,72],
[66,70,0,82,60,80,80,74],
[53,57,48,0,46,61,65,63],
[64,73,70,84,0,81,81,69],
[52,55,50,69,49,0,63,63],
[42,56,50,65,49,67,0,71],
[57,58,56,67,61,67,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,66,60,59,60,62],
[67,0,71,67,61,69,61,58],
[63,59,0,66,59,72,64,67],
[64,63,64,0,65,76,59,64],
[70,69,71,65,0,72,67,64],
[71,61,58,54,58,0,58,55],
[70,69,66,71,63,72,0,62],
[68,72,63,66,66,75,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,58,61,65,71,79],
[70,0,70,67,65,63,65,81],
[64,60,0,56,64,48,74,71],
[72,63,74,0,64,75,72,84],
[69,65,66,66,0,56,63,80],
[65,67,82,55,74,0,74,84],
[59,65,56,58,67,56,0,76],
[51,49,59,46,50,46,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,50,68,65,89,90,92],
[65,0,65,55,66,62,77,79],
[80,65,0,53,77,52,80,53],
[62,75,77,0,76,74,90,89],
[65,64,53,54,0,64,79,106],
[41,68,78,56,66,0,67,67],
[40,53,50,40,51,63,0,40],
[38,51,77,41,24,63,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,64,68,65,58,63],
[66,0,66,61,57,62,53,62],
[60,64,0,54,66,68,56,59],
[66,69,76,0,68,69,55,61],
[62,73,64,62,0,73,66,64],
[65,68,62,61,57,0,54,66],
[72,77,74,75,64,76,0,67],
[67,68,71,69,66,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,82,64,69,66,69,68],
[69,0,86,72,58,78,82,77],
[48,44,0,56,51,52,61,64],
[66,58,74,0,74,84,77,83],
[61,72,79,56,0,75,68,71],
[64,52,78,46,55,0,64,59],
[61,48,69,53,62,66,0,66],
[62,53,66,47,59,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,62,66,67,63,64,63],
[59,0,55,59,59,56,56,58],
[68,75,0,63,75,65,65,65],
[64,71,67,0,69,60,61,63],
[63,71,55,61,0,65,60,62],
[67,74,65,70,65,0,73,66],
[66,74,65,69,70,57,0,58],
[67,72,65,67,68,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,63,63,63,65,65],
[71,0,69,79,68,71,64,78],
[71,61,0,76,69,70,66,75],
[67,51,54,0,65,68,71,64],
[67,62,61,65,0,70,77,73],
[67,59,60,62,60,0,65,65],
[65,66,64,59,53,65,0,67],
[65,52,55,66,57,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,76,69,55,75,56,78],
[66,0,69,53,44,49,56,71],
[54,61,0,46,53,59,53,69],
[61,77,84,0,69,62,51,71],
[75,86,77,61,0,74,65,79],
[55,81,71,68,56,0,60,75],
[74,74,77,79,65,70,0,84],
[52,59,61,59,51,55,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,72,65,76,74,66,70],
[57,0,66,67,74,73,64,62],
[58,64,0,58,66,67,61,43],
[65,63,72,0,74,74,60,60],
[54,56,64,56,0,73,51,56],
[56,57,63,56,57,0,52,50],
[64,66,69,70,79,78,0,70],
[60,68,87,70,74,80,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,49,61,59,59,58,59],
[82,0,67,71,73,67,62,71],
[81,63,0,72,75,77,68,64],
[69,59,58,0,70,75,67,64],
[71,57,55,60,0,69,53,63],
[71,63,53,55,61,0,60,67],
[72,68,62,63,77,70,0,67],
[71,59,66,66,67,63,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,78,52,75,42,52,59],
[54,0,64,50,60,47,61,57],
[52,66,0,55,50,64,42,53],
[78,80,75,0,74,58,62,67],
[55,70,80,56,0,57,87,53],
[88,83,66,72,73,0,61,81],
[78,69,88,68,43,69,0,63],
[71,73,77,63,77,49,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,76,55,67,67,69],
[59,0,56,77,66,62,68,72],
[64,74,0,81,70,72,70,80],
[54,53,49,0,61,57,65,55],
[75,64,60,69,0,79,69,69],
[63,68,58,73,51,0,71,64],
[63,62,60,65,61,59,0,70],
[61,58,50,75,61,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,58,62,54,66,68],
[72,0,76,65,69,66,78,71],
[68,54,0,56,58,66,67,62],
[72,65,74,0,66,68,75,59],
[68,61,72,64,0,63,69,59],
[76,64,64,62,67,0,68,67],
[64,52,63,55,61,62,0,62],
[62,59,68,71,71,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,55,53,53,49,57,56],
[57,0,66,57,69,46,65,63],
[75,64,0,73,66,60,61,59],
[77,73,57,0,64,65,52,69],
[77,61,64,66,0,53,80,62],
[81,84,70,65,77,0,67,72],
[73,65,69,78,50,63,0,61],
[74,67,71,61,68,58,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,59,45,59,64,63],
[74,0,55,61,64,76,65,85],
[73,75,0,71,74,76,65,73],
[71,69,59,0,60,77,57,76],
[85,66,56,70,0,81,74,73],
[71,54,54,53,49,0,55,75],
[66,65,65,73,56,75,0,84],
[67,45,57,54,57,55,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,67,84,71,62,69,64],
[52,0,58,71,62,57,66,54],
[63,72,0,76,68,60,67,55],
[46,59,54,0,59,51,60,48],
[59,68,62,71,0,64,64,65],
[68,73,70,79,66,0,79,59],
[61,64,63,70,66,51,0,57],
[66,76,75,82,65,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,61,62,71,73,77,52],
[63,0,62,68,62,65,73,66],
[69,68,0,76,72,68,67,65],
[68,62,54,0,75,71,72,58],
[59,68,58,55,0,61,62,56],
[57,65,62,59,69,0,71,61],
[53,57,63,58,68,59,0,51],
[78,64,65,72,74,69,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,63,65,74,56,60,52],
[72,0,64,69,81,68,71,61],
[67,66,0,72,79,69,73,60],
[65,61,58,0,76,63,54,52],
[56,49,51,54,0,57,51,51],
[74,62,61,67,73,0,69,65],
[70,59,57,76,79,61,0,59],
[78,69,70,78,79,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,59,68,48,61,64,58],
[75,0,59,71,56,71,73,60],
[71,71,0,73,63,72,78,68],
[62,59,57,0,53,61,62,56],
[82,74,67,77,0,76,76,64],
[69,59,58,69,54,0,65,55],
[66,57,52,68,54,65,0,63],
[72,70,62,74,66,75,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,44,42,45,49,52,50],
[75,0,53,51,61,60,62,54],
[86,77,0,63,67,59,72,75],
[88,79,67,0,59,62,71,72],
[85,69,63,71,0,57,71,70],
[81,70,71,68,73,0,75,65],
[78,68,58,59,59,55,0,57],
[80,76,55,58,60,65,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,59,62,63,61,53,54],
[62,0,57,58,60,64,65,58],
[71,73,0,67,63,61,64,57],
[68,72,63,0,66,67,64,65],
[67,70,67,64,0,58,61,58],
[69,66,69,63,72,0,64,60],
[77,65,66,66,69,66,0,62],
[76,72,73,65,72,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,105,69,43,61,58,58,58],
[25,0,68,56,28,43,57,57],
[61,62,0,57,60,43,71,58],
[87,74,73,0,60,87,54,69],
[69,102,70,70,0,56,69,69],
[72,87,87,43,74,0,56,69],
[72,73,59,76,61,74,0,102],
[72,73,72,61,61,61,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,72,78,70,63,71,49],
[59,0,61,72,75,53,66,52],
[58,69,0,66,62,56,58,52],
[52,58,64,0,60,55,60,48],
[60,55,68,70,0,52,64,59],
[67,77,74,75,78,0,68,65],
[59,64,72,70,66,62,0,52],
[81,78,78,82,71,65,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,62,64,75,68,70,73],
[51,0,61,67,66,56,59,67],
[68,69,0,66,65,64,73,69],
[66,63,64,0,69,65,60,59],
[55,64,65,61,0,56,58,62],
[62,74,66,65,74,0,72,72],
[60,71,57,70,72,58,0,70],
[57,63,61,71,68,58,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,52,51,34,41,49,43],
[86,0,72,75,73,61,63,75],
[78,58,0,58,56,70,56,68],
[79,55,72,0,65,58,61,52],
[96,57,74,65,0,63,56,57],
[89,69,60,72,67,0,68,72],
[81,67,74,69,74,62,0,72],
[87,55,62,78,73,58,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,65,63,70,77,80,64],
[51,0,47,44,54,59,67,47],
[65,83,0,74,65,74,73,82],
[67,86,56,0,74,75,72,54],
[60,76,65,56,0,78,59,53],
[53,71,56,55,52,0,71,46],
[50,63,57,58,71,59,0,52],
[66,83,48,76,77,84,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,61,50,62,72,50,68],
[75,0,63,51,82,61,76,77],
[69,67,0,65,68,63,61,76],
[80,79,65,0,73,76,73,65],
[68,48,62,57,0,51,58,52],
[58,69,67,54,79,0,64,62],
[80,54,69,57,72,66,0,69],
[62,53,54,65,78,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,35,59,71,71,48,68],
[71,0,72,84,34,84,72,57],
[95,58,0,83,69,81,60,80],
[71,46,47,0,36,71,61,45],
[59,96,61,94,0,97,60,70],
[59,46,49,59,33,0,36,44],
[82,58,70,69,70,94,0,57],
[62,73,50,85,60,86,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,65,59,56,66,53],
[64,0,64,70,59,56,53,56],
[69,66,0,64,64,56,57,56],
[65,60,66,0,68,48,58,53],
[71,71,66,62,0,64,65,58],
[74,74,74,82,66,0,52,51],
[64,77,73,72,65,78,0,66],
[77,74,74,77,72,79,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,72,60,80,67,73,73],
[53,0,66,63,77,62,82,68],
[58,64,0,60,75,70,62,56],
[70,67,70,0,66,62,75,59],
[50,53,55,64,0,56,74,53],
[63,68,60,68,74,0,77,59],
[57,48,68,55,56,53,0,46],
[57,62,74,71,77,71,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,34,65,48,49,57,46],
[89,0,63,74,80,72,71,67],
[96,67,0,79,62,78,74,77],
[65,56,51,0,47,52,59,54],
[82,50,68,83,0,70,76,63],
[81,58,52,78,60,0,58,66],
[73,59,56,71,54,72,0,68],
[84,63,53,76,67,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,69,73,76,58,68],
[61,0,65,54,61,70,69,58],
[62,65,0,64,64,70,65,61],
[61,76,66,0,70,71,70,66],
[57,69,66,60,0,72,65,60],
[54,60,60,59,58,0,64,66],
[72,61,65,60,65,66,0,64],
[62,72,69,64,70,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,71,53,68,60,55],
[62,0,67,61,60,52,62,56],
[68,63,0,61,63,58,65,56],
[59,69,69,0,54,61,64,56],
[77,70,67,76,0,64,70,69],
[62,78,72,69,66,0,70,70],
[70,68,65,66,60,60,0,59],
[75,74,74,74,61,60,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,60,59,70,61,50,57],
[58,0,70,70,58,58,37,69],
[70,60,0,80,70,71,85,45],
[71,60,50,0,58,36,50,45],
[60,72,60,72,0,48,72,60],
[69,72,59,94,82,0,60,69],
[80,93,45,80,58,70,0,68],
[73,61,85,85,70,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,65,47,49,62,57,60],
[74,0,56,67,83,71,69,59],
[65,74,0,70,60,73,63,54],
[83,63,60,0,64,80,67,64],
[81,47,70,66,0,74,62,78],
[68,59,57,50,56,0,65,51],
[73,61,67,63,68,65,0,76],
[70,71,76,66,52,79,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,65,40,61,72,61,54],
[85,0,85,64,79,82,84,65],
[65,45,0,70,55,83,64,46],
[90,66,60,0,57,86,68,56],
[69,51,75,73,0,87,67,59],
[58,48,47,44,43,0,58,47],
[69,46,66,62,63,72,0,73],
[76,65,84,74,71,83,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,73,68,72,79,65],
[61,0,67,62,63,58,67,60],
[66,63,0,65,59,61,67,64],
[57,68,65,0,59,59,64,61],
[62,67,71,71,0,71,74,71],
[58,72,69,71,59,0,72,61],
[51,63,63,66,56,58,0,64],
[65,70,66,69,59,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,63,53,64,68,56],
[66,0,64,67,65,64,67,65],
[64,66,0,63,60,58,63,61],
[67,63,67,0,54,59,63,53],
[77,65,70,76,0,69,71,62],
[66,66,72,71,61,0,70,56],
[62,63,67,67,59,60,0,56],
[74,65,69,77,68,74,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,58,69,57,78,62,63],
[53,0,59,64,58,61,64,66],
[72,71,0,75,62,73,59,62],
[61,66,55,0,54,69,69,62],
[73,72,68,76,0,70,74,64],
[52,69,57,61,60,0,63,73],
[68,66,71,61,56,67,0,65],
[67,64,68,68,66,57,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,55,65,59,66,58,65],
[74,0,66,61,70,75,66,57],
[75,64,0,66,66,68,64,65],
[65,69,64,0,64,68,66,65],
[71,60,64,66,0,66,63,63],
[64,55,62,62,64,0,59,61],
[72,64,66,64,67,71,0,66],
[65,73,65,65,67,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,56,49,52,59,57],
[68,0,60,66,47,51,57,56],
[67,70,0,61,71,69,61,67],
[74,64,69,0,69,55,68,59],
[81,83,59,61,0,65,59,63],
[78,79,61,75,65,0,84,64],
[71,73,69,62,71,46,0,58],
[73,74,63,71,67,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,77,56,63,57,70,64],
[71,0,55,72,71,58,56,55],
[53,75,0,82,72,70,75,43],
[74,58,48,0,78,66,71,50],
[67,59,58,52,0,62,66,64],
[73,72,60,64,68,0,90,69],
[60,74,55,59,64,40,0,49],
[66,75,87,80,66,61,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,67,58,68,62,54],
[62,0,58,61,62,76,66,66],
[66,72,0,61,69,77,76,69],
[63,69,69,0,63,77,66,70],
[72,68,61,67,0,69,60,61],
[62,54,53,53,61,0,50,52],
[68,64,54,64,70,80,0,55],
[76,64,61,60,69,78,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,57,63,73,69,70,62],
[58,0,56,55,61,58,68,60],
[73,74,0,67,71,65,77,69],
[67,75,63,0,69,63,76,72],
[57,69,59,61,0,59,70,66],
[61,72,65,67,71,0,75,68],
[60,62,53,54,60,55,0,58],
[68,70,61,58,64,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,64,55,57,66,69],
[66,0,67,57,59,56,57,57],
[68,63,0,67,60,56,64,66],
[66,73,63,0,68,67,61,69],
[75,71,70,62,0,66,65,75],
[73,74,74,63,64,0,69,75],
[64,73,66,69,65,61,0,76],
[61,73,64,61,55,55,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,68,72,64,71,66,70],
[78,0,52,67,62,52,65,81],
[62,78,0,66,72,66,75,60],
[58,63,64,0,61,66,68,69],
[66,68,58,69,0,56,73,63],
[59,78,64,64,74,0,84,68],
[64,65,55,62,57,46,0,54],
[60,49,70,61,67,62,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,80,64,84,88,89,90],
[50,0,61,51,52,65,52,73],
[50,69,0,58,65,65,67,81],
[66,79,72,0,58,86,77,70],
[46,78,65,72,0,74,69,72],
[42,65,65,44,56,0,66,55],
[41,78,63,53,61,64,0,64],
[40,57,49,60,58,75,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,62,68,68,74,77],
[68,0,67,62,61,68,62,76],
[56,63,0,55,54,58,63,70],
[68,68,75,0,56,73,66,79],
[62,69,76,74,0,64,75,81],
[62,62,72,57,66,0,67,73],
[56,68,67,64,55,63,0,74],
[53,54,60,51,49,57,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,72,65,65,62,68],
[70,0,76,69,70,73,61,71],
[64,54,0,65,68,65,61,67],
[58,61,65,0,68,71,68,78],
[65,60,62,62,0,69,49,64],
[65,57,65,59,61,0,51,65],
[68,69,69,62,81,79,0,65],
[62,59,63,52,66,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,60,65,73,74,66,64],
[61,0,65,57,72,70,74,70],
[70,65,0,68,75,64,71,61],
[65,73,62,0,79,80,78,67],
[57,58,55,51,0,66,61,67],
[56,60,66,50,64,0,62,68],
[64,56,59,52,69,68,0,62],
[66,60,69,63,63,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,63,67,75,57,70],
[65,0,61,62,69,71,74,62],
[69,69,0,75,66,68,63,77],
[67,68,55,0,62,78,71,66],
[63,61,64,68,0,69,62,68],
[55,59,62,52,61,0,65,65],
[73,56,67,59,68,65,0,70],
[60,68,53,64,62,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,76,78,58,75,60,62],
[73,0,69,64,59,68,56,68],
[54,61,0,56,55,50,36,56],
[52,66,74,0,52,64,44,40],
[72,71,75,78,0,86,64,69],
[55,62,80,66,44,0,55,52],
[70,74,94,86,66,75,0,62],
[68,62,74,90,61,78,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,67,61,61,71,60,69],
[74,0,74,68,72,61,67,77],
[63,56,0,56,65,69,61,70],
[69,62,74,0,72,73,69,74],
[69,58,65,58,0,57,61,69],
[59,69,61,57,73,0,56,71],
[70,63,69,61,69,74,0,72],
[61,53,60,56,61,59,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,72,66,60,82,57,66],
[60,0,71,60,65,82,63,64],
[58,59,0,54,50,70,52,62],
[64,70,76,0,58,75,53,66],
[70,65,80,72,0,81,74,67],
[48,48,60,55,49,0,59,49],
[73,67,78,77,56,71,0,68],
[64,66,68,64,63,81,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,75,66,62,69,66,62],
[68,0,76,71,70,69,73,65],
[55,54,0,66,59,55,61,50],
[64,59,64,0,64,66,70,59],
[68,60,71,66,0,63,63,68],
[61,61,75,64,67,0,67,63],
[64,57,69,60,67,63,0,62],
[68,65,80,71,62,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,59,71,73,71,72],
[63,0,67,59,69,67,60,63],
[63,63,0,65,65,68,69,63],
[71,71,65,0,70,67,73,72],
[59,61,65,60,0,62,64,62],
[57,63,62,63,68,0,71,73],
[59,70,61,57,66,59,0,68],
[58,67,67,58,68,57,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,65,21,109,65,43],
[64,0,43,42,64,108,86,43],
[64,87,0,87,43,87,86,86],
[65,88,43,0,86,88,65,65],
[109,66,87,44,0,88,109,64],
[21,22,43,42,42,0,65,43],
[65,44,44,65,21,65,0,0],
[87,87,44,65,66,87,130,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,63,51,54,50,50],
[88,0,61,69,71,71,70,87],
[87,69,0,72,72,67,73,60],
[67,61,58,0,70,67,62,62],
[79,59,58,60,0,65,62,60],
[76,59,63,63,65,0,76,61],
[80,60,57,68,68,54,0,68],
[80,43,70,68,70,69,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,67,70,65,65,62],
[67,0,62,69,65,61,71,65],
[63,68,0,60,65,68,49,63],
[63,61,70,0,68,64,62,65],
[60,65,65,62,0,62,61,63],
[65,69,62,66,68,0,54,66],
[65,59,81,68,69,76,0,72],
[68,65,67,65,67,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,47,74,52,48,51,59],
[61,0,73,78,59,84,83,68],
[83,57,0,71,85,96,59,71],
[56,52,59,0,58,83,55,51],
[78,71,45,72,0,72,83,51],
[82,46,34,47,58,0,51,50],
[79,47,71,75,47,79,0,63],
[71,62,59,79,79,80,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,75,61,61,62,68,53],
[52,0,64,55,48,51,56,42],
[55,66,0,61,60,72,57,63],
[69,75,69,0,58,59,73,65],
[69,82,70,72,0,52,63,57],
[68,79,58,71,78,0,72,67],
[62,74,73,57,67,58,0,50],
[77,88,67,65,73,63,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,67,60,51,70,61],
[64,0,63,63,64,62,72,66],
[69,67,0,67,65,59,78,66],
[63,67,63,0,60,67,71,66],
[70,66,65,70,0,66,79,63],
[79,68,71,63,64,0,76,61],
[60,58,52,59,51,54,0,50],
[69,64,64,64,67,69,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,67,69,64,60,64],
[65,0,71,69,60,67,61,62],
[58,59,0,59,57,55,48,49],
[63,61,71,0,68,62,65,61],
[61,70,73,62,0,59,64,58],
[66,63,75,68,71,0,62,70],
[70,69,82,65,66,68,0,71],
[66,68,81,69,72,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,67,58,67,74,64],
[67,0,52,65,57,63,62,58],
[63,78,0,69,50,61,68,62],
[63,65,61,0,56,56,65,58],
[72,73,80,74,0,64,74,60],
[63,67,69,74,66,0,78,76],
[56,68,62,65,56,52,0,61],
[66,72,68,72,70,54,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,56,61,55,50,53,66],
[74,0,76,66,66,74,55,69],
[74,54,0,52,51,66,46,62],
[69,64,78,0,71,48,66,70],
[75,64,79,59,0,68,71,75],
[80,56,64,82,62,0,62,77],
[77,75,84,64,59,68,0,83],
[64,61,68,60,55,53,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,77,54,70,65,67],
[64,0,69,74,68,64,71,62],
[64,61,0,61,55,59,53,57],
[53,56,69,0,58,63,55,66],
[76,62,75,72,0,70,63,60],
[60,66,71,67,60,0,58,68],
[65,59,77,75,67,72,0,63],
[63,68,73,64,70,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,130,65,65,65,65,65],
[65,0,65,0,65,0,0,0],
[0,65,0,65,65,65,65,65],
[65,130,65,0,130,65,130,130],
[65,65,65,0,0,0,65,0],
[65,130,65,65,130,0,130,130],
[65,130,65,0,65,0,0,65],
[65,130,65,0,130,0,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,71,65,72,66,80,76],
[39,0,56,63,74,58,71,74],
[59,74,0,65,75,69,64,77],
[65,67,65,0,73,52,68,69],
[58,56,55,57,0,48,63,60],
[64,72,61,78,82,0,67,75],
[50,59,66,62,67,63,0,78],
[54,56,53,61,70,55,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,60,63,61,68,58],
[64,0,69,76,52,65,63,61],
[62,61,0,77,70,71,56,55],
[70,54,53,0,62,65,54,58],
[67,78,60,68,0,69,66,63],
[69,65,59,65,61,0,59,54],
[62,67,74,76,64,71,0,74],
[72,69,75,72,67,76,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,74,70,61,79,70,55],
[74,0,73,75,62,68,78,64],
[56,57,0,48,69,74,70,53],
[60,55,82,0,65,71,72,65],
[69,68,61,65,0,82,75,59],
[51,62,56,59,48,0,67,51],
[60,52,60,58,55,63,0,46],
[75,66,77,65,71,79,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,51,60,69,59,65,86],
[57,0,48,44,60,48,60,69],
[79,82,0,73,81,60,73,88],
[70,86,57,0,79,72,70,84],
[61,70,49,51,0,47,58,78],
[71,82,70,58,83,0,71,74],
[65,70,57,60,72,59,0,76],
[44,61,42,46,52,56,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,67,70,72,74,68,61],
[77,0,70,53,78,71,64,56],
[63,60,0,72,59,70,70,61],
[60,77,58,0,71,78,58,66],
[58,52,71,59,0,59,62,63],
[56,59,60,52,71,0,49,47],
[62,66,60,72,68,81,0,59],
[69,74,69,64,67,83,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,81,68,70,77,72],
[67,0,64,77,77,79,75,77],
[62,66,0,68,72,67,71,63],
[49,53,62,0,60,64,59,62],
[62,53,58,70,0,69,69,59],
[60,51,63,66,61,0,75,66],
[53,55,59,71,61,55,0,59],
[58,53,67,68,71,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,76,65,69,64,59],
[65,0,64,68,62,67,67,59],
[60,66,0,69,61,68,59,67],
[54,62,61,0,58,60,61,59],
[65,68,69,72,0,72,70,64],
[61,63,62,70,58,0,60,58],
[66,63,71,69,60,70,0,61],
[71,71,63,71,66,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,63,70,65,70,65],
[68,0,61,59,65,62,66,60],
[65,69,0,63,73,63,70,64],
[67,71,67,0,67,59,70,67],
[60,65,57,63,0,60,60,63],
[65,68,67,71,70,0,59,67],
[60,64,60,60,70,71,0,62],
[65,70,66,63,67,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,58,82,77,79,41,58],
[75,0,56,75,75,73,53,58],
[72,74,0,78,82,72,45,61],
[48,55,52,0,85,79,35,39],
[53,55,48,45,0,71,39,59],
[51,57,58,51,59,0,53,65],
[89,77,85,95,91,77,0,55],
[72,72,69,91,71,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,64,69,63,68,59,47],
[53,0,54,60,62,57,71,49],
[66,76,0,72,54,57,67,62],
[61,70,58,0,71,70,48,61],
[67,68,76,59,0,69,59,58],
[62,73,73,60,61,0,51,61],
[71,59,63,82,71,79,0,68],
[83,81,68,69,72,69,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,66,76,67,72,63,70],
[79,0,67,69,67,65,73,71],
[64,63,0,62,69,70,68,75],
[54,61,68,0,62,57,69,72],
[63,63,61,68,0,69,55,71],
[58,65,60,73,61,0,69,74],
[67,57,62,61,75,61,0,73],
[60,59,55,58,59,56,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,55,51,66,53,72],
[76,0,61,78,71,81,56,86],
[71,69,0,78,65,74,66,79],
[75,52,52,0,66,72,54,63],
[79,59,65,64,0,68,53,68],
[64,49,56,58,62,0,54,68],
[77,74,64,76,77,76,0,77],
[58,44,51,67,62,62,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,74,58,81,72,63,62],
[61,0,60,63,65,64,67,63],
[56,70,0,56,69,73,65,63],
[72,67,74,0,76,68,64,72],
[49,65,61,54,0,69,56,54],
[58,66,57,62,61,0,63,55],
[67,63,65,66,74,67,0,63],
[68,67,67,58,76,75,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,65,52,60,70,58,59],
[55,0,49,40,60,60,51,48],
[65,81,0,54,58,67,52,64],
[78,90,76,0,68,84,58,60],
[70,70,72,62,0,61,57,66],
[60,70,63,46,69,0,46,58],
[72,79,78,72,73,84,0,56],
[71,82,66,70,64,72,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,85,69,84,70,76,59],
[56,0,70,64,63,64,70,66],
[45,60,0,61,69,60,65,46],
[61,66,69,0,76,66,64,60],
[46,67,61,54,0,60,55,54],
[60,66,70,64,70,0,60,63],
[54,60,65,66,75,70,0,55],
[71,64,84,70,76,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,92,68,82,75,80,65],
[39,0,62,46,28,57,54,48],
[38,68,0,37,47,61,61,47],
[62,84,93,0,58,80,83,78],
[48,102,83,72,0,73,70,62],
[55,73,69,50,57,0,61,67],
[50,76,69,47,60,69,0,45],
[65,82,83,52,68,63,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,82,58,64,72,76,67],
[47,0,67,35,48,48,60,48],
[48,63,0,55,47,58,61,59],
[72,95,75,0,61,73,82,62],
[66,82,83,69,0,66,93,57],
[58,82,72,57,64,0,77,48],
[54,70,69,48,37,53,0,49],
[63,82,71,68,73,82,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,67,73,75,73,65],
[61,0,76,62,54,76,57,71],
[60,54,0,50,43,60,45,62],
[63,68,80,0,68,68,69,65],
[57,76,87,62,0,73,70,77],
[55,54,70,62,57,0,52,55],
[57,73,85,61,60,78,0,81],
[65,59,68,65,53,75,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,76,68,66,72,68,55],
[60,0,69,61,67,63,59,50],
[54,61,0,68,64,67,60,52],
[62,69,62,0,57,63,76,56],
[64,63,66,73,0,66,64,58],
[58,67,63,67,64,0,64,61],
[62,71,70,54,66,66,0,69],
[75,80,78,74,72,69,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,79,70,64,75,78,66],
[43,0,66,66,56,57,48,45],
[51,64,0,52,59,59,54,63],
[60,64,78,0,64,60,58,69],
[66,74,71,66,0,60,62,70],
[55,73,71,70,70,0,61,62],
[52,82,76,72,68,69,0,72],
[64,85,67,61,60,68,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,70,62,66,76,65,55],
[53,0,63,54,71,68,64,58],
[60,67,0,59,65,62,59,67],
[68,76,71,0,82,56,56,66],
[64,59,65,48,0,67,50,54],
[54,62,68,74,63,0,59,60],
[65,66,71,74,80,71,0,64],
[75,72,63,64,76,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,64,60,62,68,64],
[65,0,70,70,62,67,68,79],
[66,60,0,65,64,65,69,73],
[66,60,65,0,60,72,68,67],
[70,68,66,70,0,61,72,78],
[68,63,65,58,69,0,65,69],
[62,62,61,62,58,65,0,70],
[66,51,57,63,52,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,43,43,67,57,74],
[63,0,71,35,50,63,67,61],
[70,59,0,45,45,61,53,57],
[87,95,85,0,77,77,74,64],
[87,80,85,53,0,66,64,68],
[63,67,69,53,64,0,53,61],
[73,63,77,56,66,77,0,80],
[56,69,73,66,62,69,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,54,69,65,55,48,55],
[47,0,48,55,55,55,43,48],
[76,82,0,86,70,68,63,69],
[61,75,44,0,64,58,45,56],
[65,75,60,66,0,59,54,53],
[75,75,62,72,71,0,66,64],
[82,87,67,85,76,64,0,61],
[75,82,61,74,77,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,60,70,58,74,70,60],
[62,0,64,65,58,58,59,55],
[70,66,0,69,62,59,61,61],
[60,65,61,0,53,63,61,72],
[72,72,68,77,0,65,64,70],
[56,72,71,67,65,0,67,64],
[60,71,69,69,66,63,0,71],
[70,75,69,58,60,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,58,71,102,70,74,101],
[57,0,87,87,117,86,43,101],
[72,43,0,101,103,56,59,85],
[59,43,29,0,89,30,45,86],
[28,13,27,41,0,28,28,41],
[60,44,74,100,102,0,60,87],
[56,87,71,85,102,70,0,85],
[29,29,45,44,89,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,74,66,68,69,61],
[60,0,66,82,61,71,73,59],
[61,64,0,72,53,59,56,57],
[56,48,58,0,61,50,49,57],
[64,69,77,69,0,65,60,57],
[62,59,71,80,65,0,65,66],
[61,57,74,81,70,65,0,64],
[69,71,73,73,73,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,71,69,61,57,66],
[65,0,67,64,66,66,67,70],
[67,63,0,65,72,73,67,68],
[59,66,65,0,60,69,66,67],
[61,64,58,70,0,60,68,59],
[69,64,57,61,70,0,60,55],
[73,63,63,64,62,70,0,57],
[64,60,62,63,71,75,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,69,72,73,64,75],
[61,0,69,76,73,73,65,65],
[58,61,0,70,69,72,73,64],
[61,54,60,0,63,49,63,54],
[58,57,61,67,0,57,54,61],
[57,57,58,81,73,0,69,70],
[66,65,57,67,76,61,0,57],
[55,65,66,76,69,60,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,71,61,78,61,61,56],
[55,0,55,65,67,59,77,62],
[59,75,0,61,68,67,82,81],
[69,65,69,0,73,69,64,60],
[52,63,62,57,0,66,55,73],
[69,71,63,61,64,0,64,67],
[69,53,48,66,75,66,0,77],
[74,68,49,70,57,63,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,68,66,72,68,66],
[67,0,72,71,57,63,68,65],
[67,58,0,64,56,73,61,56],
[62,59,66,0,55,65,58,55],
[64,73,74,75,0,74,73,63],
[58,67,57,65,56,0,58,63],
[62,62,69,72,57,72,0,60],
[64,65,74,75,67,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,67,66,65,56,66],
[68,0,49,59,59,63,61,62],
[68,81,0,71,68,72,65,74],
[63,71,59,0,58,63,63,64],
[64,71,62,72,0,69,68,64],
[65,67,58,67,61,0,68,64],
[74,69,65,67,62,62,0,68],
[64,68,56,66,66,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,72,66,72,70,65],
[64,0,60,70,62,71,73,66],
[62,70,0,59,63,68,71,69],
[58,60,71,0,62,69,67,63],
[64,68,67,68,0,70,71,70],
[58,59,62,61,60,0,65,63],
[60,57,59,63,59,65,0,62],
[65,64,61,67,60,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,58,73,64,69,65],
[61,0,63,58,62,68,66,66],
[62,67,0,60,67,69,68,58],
[72,72,70,0,67,64,68,57],
[57,68,63,63,0,60,64,61],
[66,62,61,66,70,0,70,59],
[61,64,62,62,66,60,0,59],
[65,64,72,73,69,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,63,60,63,69,62],
[67,0,67,65,66,67,66,65],
[68,63,0,60,73,61,67,64],
[67,65,70,0,65,62,66,69],
[70,64,57,65,0,58,55,71],
[67,63,69,68,72,0,68,64],
[61,64,63,64,75,62,0,63],
[68,65,66,61,59,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,65,81,70,66,54,63],
[54,0,64,46,57,51,41,48],
[65,66,0,52,64,49,61,60],
[49,84,78,0,61,61,50,69],
[60,73,66,69,0,51,59,57],
[64,79,81,69,79,0,66,71],
[76,89,69,80,71,64,0,72],
[67,82,70,61,73,59,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,97,63,53,75,74,64,56],
[33,0,45,54,45,45,65,56],
[67,85,0,75,56,97,76,77],
[77,76,55,0,89,75,43,46],
[55,85,74,41,0,85,62,56],
[56,85,33,55,45,0,62,57],
[66,65,54,87,68,68,0,89],
[74,74,53,84,74,73,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,55,57,70,67,64,63],
[67,0,71,57,71,65,69,67],
[75,59,0,61,74,69,70,63],
[73,73,69,0,72,67,66,61],
[60,59,56,58,0,63,67,54],
[63,65,61,63,67,0,69,64],
[66,61,60,64,63,61,0,68],
[67,63,67,69,76,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,63,56,57,60,74,60],
[71,0,66,53,73,57,84,61],
[67,64,0,65,68,58,76,62],
[74,77,65,0,65,72,74,71],
[73,57,62,65,0,60,73,78],
[70,73,72,58,70,0,76,60],
[56,46,54,56,57,54,0,57],
[70,69,68,59,52,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,77,73,86,61,62,67],
[39,0,78,52,64,56,55,64],
[53,52,0,64,63,51,60,72],
[57,78,66,0,75,65,52,70],
[44,66,67,55,0,67,44,58],
[69,74,79,65,63,0,42,48],
[68,75,70,78,86,88,0,61],
[63,66,58,60,72,82,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,76,68,55,66,79],
[66,0,57,70,65,74,69,74],
[59,73,0,66,71,77,72,80],
[54,60,64,0,65,71,70,82],
[62,65,59,65,0,71,65,67],
[75,56,53,59,59,0,63,74],
[64,61,58,60,65,67,0,70],
[51,56,50,48,63,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,71,71,65,67,67],
[63,0,67,68,69,68,65,65],
[68,63,0,71,63,69,60,66],
[59,62,59,0,68,57,60,59],
[59,61,67,62,0,61,60,61],
[65,62,61,73,69,0,67,62],
[63,65,70,70,70,63,0,63],
[63,65,64,71,69,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,56,89,67,75,60,64],
[63,0,55,67,57,60,56,58],
[74,75,0,89,69,65,62,64],
[41,63,41,0,48,49,51,52],
[63,73,61,82,0,64,65,76],
[55,70,65,81,66,0,67,74],
[70,74,68,79,65,63,0,74],
[66,72,66,78,54,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,63,78,65,61,62],
[66,0,55,63,74,60,63,58],
[68,75,0,70,80,64,61,64],
[67,67,60,0,73,70,67,69],
[52,56,50,57,0,61,53,61],
[65,70,66,60,69,0,61,67],
[69,67,69,63,77,69,0,63],
[68,72,66,61,69,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,71,76,58,67,50,65],
[41,0,58,75,53,60,43,55],
[59,72,0,73,59,75,40,55],
[54,55,57,0,58,58,52,65],
[72,77,71,72,0,62,69,43],
[63,70,55,72,68,0,60,67],
[80,87,90,78,61,70,0,71],
[65,75,75,65,87,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,61,69,57,65,66],
[68,0,60,63,56,55,69,65],
[69,70,0,64,63,62,76,66],
[69,67,66,0,60,59,73,66],
[61,74,67,70,0,65,71,79],
[73,75,68,71,65,0,70,70],
[65,61,54,57,59,60,0,54],
[64,65,64,64,51,60,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,71,69,62,64,69],
[66,0,74,67,71,63,77,73],
[60,56,0,60,63,66,70,73],
[59,63,70,0,65,66,66,65],
[61,59,67,65,0,72,75,72],
[68,67,64,64,58,0,70,70],
[66,53,60,64,55,60,0,60],
[61,57,57,65,58,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,49,62,71,74,54,62],
[84,0,66,72,65,74,64,74],
[81,64,0,70,77,74,71,67],
[68,58,60,0,63,78,72,59],
[59,65,53,67,0,71,63,60],
[56,56,56,52,59,0,60,53],
[76,66,59,58,67,70,0,59],
[68,56,63,71,70,77,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,80,73,63,59,67,72],
[64,0,73,70,63,57,62,65],
[50,57,0,60,65,69,60,56],
[57,60,70,0,64,63,56,65],
[67,67,65,66,0,67,71,72],
[71,73,61,67,63,0,57,62],
[63,68,70,74,59,73,0,72],
[58,65,74,65,58,68,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,75,65,65,82,70,69],
[45,0,67,54,54,66,67,53],
[55,63,0,54,50,78,55,65],
[65,76,76,0,70,84,76,68],
[65,76,80,60,0,86,64,64],
[48,64,52,46,44,0,52,43],
[60,63,75,54,66,78,0,66],
[61,77,65,62,66,87,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,70,74,66,65,70],
[68,0,60,68,77,64,82,69],
[70,70,0,61,64,66,69,72],
[60,62,69,0,62,70,64,75],
[56,53,66,68,0,59,66,67],
[64,66,64,60,71,0,68,68],
[65,48,61,66,64,62,0,70],
[60,61,58,55,63,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,78,75,65,59,58,57],
[64,0,80,65,48,53,59,56],
[52,50,0,54,63,61,63,60],
[55,65,76,0,49,68,55,66],
[65,82,67,81,0,66,66,69],
[71,77,69,62,64,0,61,54],
[72,71,67,75,64,69,0,67],
[73,74,70,64,61,76,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,89,51,77,79,81,68],
[73,0,52,51,70,62,93,61],
[41,78,0,41,57,80,72,68],
[79,79,89,0,58,80,102,58],
[53,60,73,72,0,80,93,52],
[51,68,50,50,50,0,70,50],
[49,37,58,28,37,60,0,17],
[62,69,62,72,78,80,113,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,55,91,73,76,70,69],
[37,0,51,39,45,61,41,43],
[75,79,0,73,60,71,61,70],
[39,91,57,0,48,66,58,64],
[57,85,70,82,0,68,62,74],
[54,69,59,64,62,0,53,66],
[60,89,69,72,68,77,0,69],
[61,87,60,66,56,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,71,65,59,72,67,69],
[69,0,64,60,66,73,68,73],
[59,66,0,72,62,59,63,69],
[65,70,58,0,55,62,65,76],
[71,64,68,75,0,68,74,71],
[58,57,71,68,62,0,61,76],
[63,62,67,65,56,69,0,64],
[61,57,61,54,59,54,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,57,68,52,46,59,46],
[76,0,62,71,62,66,51,56],
[73,68,0,68,67,68,49,46],
[62,59,62,0,47,58,60,51],
[78,68,63,83,0,67,57,46],
[84,64,62,72,63,0,72,48],
[71,79,81,70,73,58,0,66],
[84,74,84,79,84,82,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,75,70,66,61,64,67],
[69,0,74,58,60,65,70,54],
[55,56,0,58,53,54,55,58],
[60,72,72,0,60,68,71,63],
[64,70,77,70,0,71,69,57],
[69,65,76,62,59,0,69,61],
[66,60,75,59,61,61,0,53],
[63,76,72,67,73,69,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,51,55,60,56,66,52],
[60,0,57,54,60,55,68,59],
[79,73,0,63,73,76,77,69],
[75,76,67,0,69,70,82,56],
[70,70,57,61,0,62,68,52],
[74,75,54,60,68,0,77,60],
[64,62,53,48,62,53,0,45],
[78,71,61,74,78,70,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,57,62,61,56,65,66],
[64,0,60,62,58,57,60,67],
[73,70,0,70,54,55,58,64],
[68,68,60,0,59,63,65,68],
[69,72,76,71,0,67,66,63],
[74,73,75,67,63,0,69,69],
[65,70,72,65,64,61,0,60],
[64,63,66,62,67,61,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,62,65,66,63,71],
[70,0,67,67,69,65,65,71],
[69,63,0,56,69,65,62,74],
[68,63,74,0,76,68,78,88],
[65,61,61,54,0,65,61,63],
[64,65,65,62,65,0,72,78],
[67,65,68,52,69,58,0,69],
[59,59,56,42,67,52,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,60,68,57,71,66],
[61,0,70,61,68,63,74,62],
[62,60,0,61,58,67,66,63],
[70,69,69,0,62,68,69,61],
[62,62,72,68,0,72,67,72],
[73,67,63,62,58,0,62,62],
[59,56,64,61,63,68,0,62],
[64,68,67,69,58,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,69,70,55,64,65],
[71,0,79,71,75,63,74,73],
[66,51,0,72,70,63,61,61],
[61,59,58,0,68,66,62,59],
[60,55,60,62,0,54,59,56],
[75,67,67,64,76,0,65,65],
[66,56,69,68,71,65,0,61],
[65,57,69,71,74,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,60,62,56,57,58],
[68,0,67,69,76,62,59,72],
[64,63,0,64,63,59,50,57],
[70,61,66,0,59,54,60,55],
[68,54,67,71,0,58,53,60],
[74,68,71,76,72,0,65,67],
[73,71,80,70,77,65,0,67],
[72,58,73,75,70,63,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,63,65,73,75,69,75],
[50,0,53,57,68,56,67,55],
[67,77,0,55,71,71,76,55],
[65,73,75,0,67,82,63,70],
[57,62,59,63,0,65,77,58],
[55,74,59,48,65,0,72,54],
[61,63,54,67,53,58,0,57],
[55,75,75,60,72,76,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,59,57,57,47,68],
[68,0,70,73,72,61,73,64],
[60,60,0,61,78,68,63,62],
[71,57,69,0,76,65,70,78],
[73,58,52,54,0,65,58,60],
[73,69,62,65,65,0,72,75],
[83,57,67,60,72,58,0,65],
[62,66,68,52,70,55,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,79,49,80,79,67],
[70,0,48,89,60,92,79,78],
[65,82,0,89,50,94,81,80],
[51,41,41,0,72,72,71,69],
[81,70,80,58,0,102,92,101],
[50,38,36,58,28,0,59,65],
[51,51,49,59,38,71,0,47],
[63,52,50,61,29,65,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,65,68,64,65,59],
[66,0,69,55,66,61,68,77],
[71,61,0,65,74,71,70,77],
[65,75,65,0,73,62,53,83],
[62,64,56,57,0,60,52,67],
[66,69,59,68,70,0,64,71],
[65,62,60,77,78,66,0,73],
[71,53,53,47,63,59,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,63,69,56,60,58,66],
[84,0,65,86,77,67,84,73],
[67,65,0,75,75,68,75,67],
[61,44,55,0,67,51,67,61],
[74,53,55,63,0,50,71,61],
[70,63,62,79,80,0,73,74],
[72,46,55,63,59,57,0,55],
[64,57,63,69,69,56,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,72,74,65,54,75],
[68,0,65,68,71,66,69,66],
[64,65,0,72,71,61,70,70],
[58,62,58,0,53,48,54,59],
[56,59,59,77,0,53,61,61],
[65,64,69,82,77,0,64,80],
[76,61,60,76,69,66,0,65],
[55,64,60,71,69,50,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,60,56,56,62,60,63],
[73,0,78,71,64,68,63,66],
[70,52,0,51,58,59,51,63],
[74,59,79,0,71,73,65,76],
[74,66,72,59,0,62,63,68],
[68,62,71,57,68,0,59,71],
[70,67,79,65,67,71,0,77],
[67,64,67,54,62,59,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,58,63,63,61,77],
[64,0,59,60,81,75,61,76],
[69,71,0,67,65,60,55,74],
[72,70,63,0,75,68,68,74],
[67,49,65,55,0,69,67,76],
[67,55,70,62,61,0,60,73],
[69,69,75,62,63,70,0,71],
[53,54,56,56,54,57,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,74,69,66,64,68,72],
[49,0,62,69,56,54,55,51],
[56,68,0,64,54,49,55,62],
[61,61,66,0,55,60,61,57],
[64,74,76,75,0,54,76,74],
[66,76,81,70,76,0,66,63],
[62,75,75,69,54,64,0,70],
[58,79,68,73,56,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,55,50,57,54,54,59],
[71,0,55,57,56,54,51,61],
[75,75,0,58,74,66,60,62],
[80,73,72,0,65,72,70,68],
[73,74,56,65,0,66,61,61],
[76,76,64,58,64,0,70,70],
[76,79,70,60,69,60,0,63],
[71,69,68,62,69,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,86,68,65,79,87,71],
[55,0,70,65,56,59,63,60],
[44,60,0,62,63,65,74,61],
[62,65,68,0,63,68,75,60],
[65,74,67,67,0,62,85,64],
[51,71,65,62,68,0,78,59],
[43,67,56,55,45,52,0,66],
[59,70,69,70,66,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,66,77,80,78,76],
[61,0,82,66,77,81,82,81],
[65,48,0,50,67,69,70,62],
[64,64,80,0,76,76,72,71],
[53,53,63,54,0,73,77,62],
[50,49,61,54,57,0,77,61],
[52,48,60,58,53,53,0,63],
[54,49,68,59,68,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,58,59,64,40,52,48],
[70,0,65,65,80,60,63,74],
[72,65,0,69,71,68,67,67],
[71,65,61,0,68,60,58,64],
[66,50,59,62,0,60,53,56],
[90,70,62,70,70,0,63,68],
[78,67,63,72,77,67,0,68],
[82,56,63,66,74,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,56,55,58,57,53,56],
[77,0,71,67,74,54,51,63],
[74,59,0,52,61,54,45,64],
[75,63,78,0,61,70,57,61],
[72,56,69,69,0,73,63,64],
[73,76,76,60,57,0,68,63],
[77,79,85,73,67,62,0,70],
[74,67,66,69,66,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,92,69,62,87,73],
[64,0,55,80,52,39,62,69],
[61,75,0,95,63,65,71,66],
[38,50,35,0,35,50,63,64],
[61,78,67,95,0,86,89,69],
[68,91,65,80,44,0,87,60],
[43,68,59,67,41,43,0,53],
[57,61,64,66,61,70,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,80,72,78,70,64,68],
[71,0,82,69,72,78,62,66],
[50,48,0,64,55,60,55,55],
[58,61,66,0,78,63,70,64],
[52,58,75,52,0,63,58,67],
[60,52,70,67,67,0,61,52],
[66,68,75,60,72,69,0,58],
[62,64,75,66,63,78,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,72,60,56,51,59,53],
[69,0,69,53,60,48,61,65],
[58,61,0,66,69,55,62,69],
[70,77,64,0,62,55,60,48],
[74,70,61,68,0,68,58,55],
[79,82,75,75,62,0,74,65],
[71,69,68,70,72,56,0,49],
[77,65,61,82,75,65,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,57,62,69,54,63],
[73,0,65,67,67,65,64,70],
[68,65,0,58,64,58,54,73],
[73,63,72,0,72,63,69,72],
[68,63,66,58,0,72,61,68],
[61,65,72,67,58,0,62,65],
[76,66,76,61,69,68,0,75],
[67,60,57,58,62,65,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,82,49,44,56,46,48],
[69,0,65,68,59,62,65,58],
[48,65,0,48,49,65,55,42],
[81,62,82,0,50,52,64,67],
[86,71,81,80,0,72,63,59],
[74,68,65,78,58,0,52,72],
[84,65,75,66,67,78,0,59],
[82,72,88,63,71,58,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,65,72,68,84,71,69],
[56,0,64,50,61,74,68,52],
[65,66,0,75,69,73,72,72],
[58,80,55,0,75,86,68,66],
[62,69,61,55,0,83,62,63],
[46,56,57,44,47,0,58,47],
[59,62,58,62,68,72,0,65],
[61,78,58,64,67,83,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,60,45,57,56,54],
[72,0,65,61,54,56,58,70],
[69,65,0,82,60,54,50,62],
[70,69,48,0,71,60,62,59],
[85,76,70,59,0,70,65,64],
[73,74,76,70,60,0,66,66],
[74,72,80,68,65,64,0,70],
[76,60,68,71,66,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,64,77,79,82,52,66],
[58,0,58,73,70,75,53,64],
[66,72,0,68,83,63,73,81],
[53,57,62,0,66,59,41,55],
[51,60,47,64,0,62,41,49],
[48,55,67,71,68,0,48,57],
[78,77,57,89,89,82,0,83],
[64,66,49,75,81,73,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,68,69,72,74,72,68],
[71,0,67,65,77,80,80,83],
[62,63,0,58,92,89,77,88],
[61,65,72,0,86,75,87,83],
[58,53,38,44,0,59,74,83],
[56,50,41,55,71,0,64,55],
[58,50,53,43,56,66,0,44],
[62,47,42,47,47,75,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,63,67,70,66,67],
[73,0,70,68,62,81,74,74],
[68,60,0,63,62,68,65,69],
[67,62,67,0,61,71,62,71],
[63,68,68,69,0,81,56,73],
[60,49,62,59,49,0,65,65],
[64,56,65,68,74,65,0,67],
[63,56,61,59,57,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,69,40,79,59,76,75],
[57,0,69,55,76,54,47,39],
[61,61,0,44,90,54,47,59],
[90,75,86,0,91,49,66,55],
[51,54,40,39,0,39,25,32],
[71,76,76,81,91,0,61,61],
[54,83,83,64,105,69,0,67],
[55,91,71,75,98,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,44,86,86,21,64],
[85,0,65,85,108,85,65,85],
[86,65,0,63,87,64,43,41],
[86,45,67,0,87,87,43,64],
[44,22,43,43,0,85,43,21],
[44,45,66,43,45,0,43,44],
[109,65,87,87,87,87,0,87],
[66,45,89,66,109,86,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,54,63,59,76,71,73],
[63,0,68,66,70,77,74,65],
[76,62,0,71,81,84,71,67],
[67,64,59,0,74,74,76,65],
[71,60,49,56,0,71,74,77],
[54,53,46,56,59,0,62,63],
[59,56,59,54,56,68,0,54],
[57,65,63,65,53,67,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,70,54,64,57,65,65],
[46,0,53,49,54,48,45,45],
[60,77,0,54,54,54,58,52],
[76,81,76,0,71,67,68,61],
[66,76,76,59,0,68,66,63],
[73,82,76,63,62,0,70,64],
[65,85,72,62,64,60,0,58],
[65,85,78,69,67,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,74,62,73,83,75],
[64,0,57,60,75,65,72,75],
[61,73,0,60,72,60,81,74],
[56,70,70,0,66,47,64,77],
[68,55,58,64,0,60,70,80],
[57,65,70,83,70,0,86,84],
[47,58,49,66,60,44,0,67],
[55,55,56,53,50,46,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,69,71,66,68,65],
[67,0,60,66,62,61,63,63],
[66,70,0,68,62,62,64,54],
[61,64,62,0,61,65,61,55],
[59,68,68,69,0,68,67,66],
[64,69,68,65,62,0,66,68],
[62,67,66,69,63,64,0,61],
[65,67,76,75,64,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,64,57,68,71,70,62],
[55,0,65,54,66,55,65,59],
[66,65,0,55,66,69,73,70],
[73,76,75,0,65,69,77,66],
[62,64,64,65,0,68,66,65],
[59,75,61,61,62,0,63,58],
[60,65,57,53,64,67,0,64],
[68,71,60,64,65,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,64,67,63,63,66],
[67,0,68,57,68,61,77,63],
[57,62,0,63,59,73,70,61],
[66,73,67,0,65,72,74,64],
[63,62,71,65,0,76,73,59],
[67,69,57,58,54,0,66,54],
[67,53,60,56,57,64,0,54],
[64,67,69,66,71,76,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,61,55,64,56,63,49],
[75,0,62,66,83,71,73,74],
[69,68,0,62,70,56,66,71],
[75,64,68,0,73,64,63,67],
[66,47,60,57,0,53,56,58],
[74,59,74,66,77,0,59,62],
[67,57,64,67,74,71,0,55],
[81,56,59,63,72,68,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,82,70,73,76,68],
[68,0,67,67,74,62,71,61],
[57,63,0,63,67,59,74,61],
[48,63,67,0,70,69,62,59],
[60,56,63,60,0,57,68,54],
[57,68,71,61,73,0,74,68],
[54,59,56,68,62,56,0,56],
[62,69,69,71,76,62,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,62,59,64,50,42,84],
[52,0,47,53,56,51,43,61],
[68,83,0,65,61,46,62,79],
[71,77,65,0,68,67,58,81],
[66,74,69,62,0,58,61,78],
[80,79,84,63,72,0,65,72],
[88,87,68,72,69,65,0,79],
[46,69,51,49,52,58,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,71,57,58,65,71,56],
[52,0,65,54,55,45,48,52],
[59,65,0,45,58,60,60,50],
[73,76,85,0,68,75,74,57],
[72,75,72,62,0,71,76,68],
[65,85,70,55,59,0,67,61],
[59,82,70,56,54,63,0,66],
[74,78,80,73,62,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,61,87,72,56,70,62],
[53,0,60,62,56,49,62,46],
[69,70,0,77,50,56,81,56],
[43,68,53,0,47,47,63,69],
[58,74,80,83,0,69,69,82],
[74,81,74,83,61,0,81,66],
[60,68,49,67,61,49,0,93],
[68,84,74,61,48,64,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,71,76,73,73,74],
[60,0,79,57,68,71,72,69],
[65,51,0,58,64,57,65,75],
[59,73,72,0,63,63,64,58],
[54,62,66,67,0,61,58,63],
[57,59,73,67,69,0,72,60],
[57,58,65,66,72,58,0,66],
[56,61,55,72,67,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,57,58,66,61,67,66],
[71,0,65,70,67,65,67,66],
[73,65,0,72,59,61,71,72],
[72,60,58,0,58,67,65,63],
[64,63,71,72,0,62,67,64],
[69,65,69,63,68,0,76,64],
[63,63,59,65,63,54,0,65],
[64,64,58,67,66,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,69,53,62,57,53,54],
[81,0,81,74,64,76,65,70],
[61,49,0,57,60,56,57,59],
[77,56,73,0,58,71,57,59],
[68,66,70,72,0,63,67,67],
[73,54,74,59,67,0,60,67],
[77,65,73,73,63,70,0,69],
[76,60,71,71,63,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,71,65,70,54,62,54],
[50,0,67,44,60,76,53,48],
[59,63,0,60,50,45,61,45],
[65,86,70,0,76,76,67,74],
[60,70,80,54,0,61,61,69],
[76,54,85,54,69,0,74,51],
[68,77,69,63,69,56,0,73],
[76,82,85,56,61,79,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,100,60,71,50,81,71],
[80,0,80,60,62,40,59,40],
[30,50,0,41,62,40,41,60],
[70,70,89,0,51,48,68,79],
[59,68,68,79,0,77,48,58],
[80,90,90,82,53,0,51,51],
[49,71,89,62,82,79,0,70],
[59,90,70,51,72,79,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,54,55,59,56,62,58],
[73,0,77,70,62,54,71,58],
[76,53,0,70,65,61,65,58],
[75,60,60,0,56,54,72,55],
[71,68,65,74,0,61,73,51],
[74,76,69,76,69,0,85,65],
[68,59,65,58,57,45,0,56],
[72,72,72,75,79,65,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,64,51,55,69,68,61],
[78,0,77,73,65,86,76,78],
[66,53,0,60,69,76,61,64],
[79,57,70,0,55,77,73,68],
[75,65,61,75,0,65,71,66],
[61,44,54,53,65,0,67,60],
[62,54,69,57,59,63,0,54],
[69,52,66,62,64,70,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,57,44,63,65,57,59],
[69,0,73,62,68,75,67,70],
[73,57,0,57,57,67,64,48],
[86,68,73,0,65,74,62,69],
[67,62,73,65,0,72,67,68],
[65,55,63,56,58,0,64,55],
[73,63,66,68,63,66,0,64],
[71,60,82,61,62,75,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,99,99,99,68,81,67],
[67,0,69,82,69,54,67,69],
[31,61,0,63,100,50,67,69],
[31,48,67,0,67,54,67,52],
[31,61,30,63,0,50,32,33],
[62,76,80,76,80,0,96,80],
[49,63,63,63,98,34,0,63],
[63,61,61,78,97,50,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,80,52,49,65,74],
[65,0,70,73,50,42,50,48],
[67,60,0,84,58,56,61,67],
[50,57,46,0,42,42,50,67],
[78,80,72,88,0,65,73,68],
[81,88,74,88,65,0,60,75],
[65,80,69,80,57,70,0,65],
[56,82,63,63,62,55,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,98,90,68,98,109],
[69,0,57,89,59,70,86,77],
[62,73,0,93,82,83,78,83],
[32,41,37,0,59,69,46,56],
[40,71,48,71,0,51,65,38],
[62,60,47,61,79,0,75,72],
[32,44,52,84,65,55,0,63],
[21,53,47,74,92,58,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,73,66,62,72,62,65],
[74,0,68,59,65,64,65,71],
[57,62,0,73,58,69,57,56],
[64,71,57,0,57,61,62,72],
[68,65,72,73,0,74,60,71],
[58,66,61,69,56,0,57,64],
[68,65,73,68,70,73,0,66],
[65,59,74,58,59,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,73,73,68,64,72],
[65,0,68,72,62,59,54,71],
[64,62,0,68,74,68,65,69],
[57,58,62,0,63,63,50,75],
[57,68,56,67,0,78,52,68],
[62,71,62,67,52,0,53,70],
[66,76,65,80,78,77,0,85],
[58,59,61,55,62,60,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,52,68,78,66,67],
[67,0,79,65,75,75,68,82],
[61,51,0,54,63,58,53,63],
[78,65,76,0,71,72,65,72],
[62,55,67,59,0,68,65,69],
[52,55,72,58,62,0,48,72],
[64,62,77,65,65,82,0,78],
[63,48,67,58,61,58,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,56,38,61,66,73,80],
[58,0,63,55,70,67,62,60],
[74,67,0,58,52,74,65,72],
[92,75,72,0,65,82,73,90],
[69,60,78,65,0,79,57,78],
[64,63,56,48,51,0,54,65],
[57,68,65,57,73,76,0,78],
[50,70,58,40,52,65,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,50,45,55,61,48,65],
[81,0,71,63,66,71,66,72],
[80,59,0,64,59,58,55,70],
[85,67,66,0,63,77,75,72],
[75,64,71,67,0,69,79,83],
[69,59,72,53,61,0,66,66],
[82,64,75,55,51,64,0,76],
[65,58,60,58,47,64,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,55,60,69,56,63,61],
[69,0,55,68,74,63,70,58],
[75,75,0,69,79,66,62,70],
[70,62,61,0,68,63,56,65],
[61,56,51,62,0,60,46,61],
[74,67,64,67,70,0,69,60],
[67,60,68,74,84,61,0,64],
[69,72,60,65,69,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,74,57,64,69,74,72],
[50,0,61,62,61,61,66,68],
[56,69,0,67,55,59,70,94],
[73,68,63,0,70,82,60,66],
[66,69,75,60,0,79,80,86],
[61,69,71,48,51,0,75,89],
[56,64,60,70,50,55,0,76],
[58,62,36,64,44,41,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,58,46,60,39,58,57],
[70,0,65,60,60,62,72,51],
[72,65,0,71,64,59,71,77],
[84,70,59,0,66,70,68,56],
[70,70,66,64,0,68,69,71],
[91,68,71,60,62,0,71,70],
[72,58,59,62,61,59,0,61],
[73,79,53,74,59,60,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,73,69,63,75,73,68],
[53,0,65,65,62,64,57,56],
[57,65,0,63,54,62,55,49],
[61,65,67,0,55,66,57,58],
[67,68,76,75,0,63,56,61],
[55,66,68,64,67,0,66,69],
[57,73,75,73,74,64,0,66],
[62,74,81,72,69,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,91,108,99,68,59,73],
[73,0,112,93,95,71,62,76],
[39,18,0,81,72,44,44,38],
[22,37,49,0,54,33,37,53],
[31,35,58,76,0,23,35,50],
[62,59,86,97,107,0,73,82],
[71,68,86,93,95,57,0,71],
[57,54,92,77,80,48,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,68,63,66,50,61,58],
[75,0,77,74,94,83,65,70],
[62,53,0,56,68,65,62,64],
[67,56,74,0,67,72,59,83],
[64,36,62,63,0,66,73,65],
[80,47,65,58,64,0,49,62],
[69,65,68,71,57,81,0,63],
[72,60,66,47,65,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,57,73,62,59,57,61],
[52,0,46,55,59,52,49,54],
[73,84,0,75,73,63,70,68],
[57,75,55,0,65,67,56,61],
[68,71,57,65,0,67,64,63],
[71,78,67,63,63,0,58,59],
[73,81,60,74,66,72,0,64],
[69,76,62,69,67,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,94,73,93,71,101,84,58],
[36,0,58,72,28,71,69,56],
[57,72,0,81,47,79,71,50],
[37,58,49,0,48,85,77,41],
[59,102,83,82,0,108,85,65],
[29,59,51,45,22,0,76,40],
[46,61,59,53,45,54,0,56],
[72,74,80,89,65,90,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,75,65,66,70,73,74],
[59,0,63,60,66,66,63,60],
[55,67,0,59,66,62,69,64],
[65,70,71,0,67,65,72,67],
[64,64,64,63,0,72,71,73],
[60,64,68,65,58,0,66,64],
[57,67,61,58,59,64,0,66],
[56,70,66,63,57,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,60,69,68,59,65,66],
[72,0,63,64,75,63,66,65],
[70,67,0,68,75,68,66,65],
[61,66,62,0,60,56,58,60],
[62,55,55,70,0,65,62,66],
[71,67,62,74,65,0,61,63],
[65,64,64,72,68,69,0,73],
[64,65,65,70,64,67,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,75,70,72,71,74,65],
[48,0,57,57,57,68,48,60],
[55,73,0,68,60,80,68,61],
[60,73,62,0,60,72,64,56],
[58,73,70,70,0,62,50,65],
[59,62,50,58,68,0,50,60],
[56,82,62,66,80,80,0,77],
[65,70,69,74,65,70,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,82,62,75,76,65],
[66,0,65,73,69,66,70,53],
[62,65,0,64,64,63,62,60],
[48,57,66,0,68,52,71,48],
[68,61,66,62,0,69,75,66],
[55,64,67,78,61,0,67,62],
[54,60,68,59,55,63,0,58],
[65,77,70,82,64,68,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,68,67,63,69,73],
[60,0,61,53,69,56,64,73],
[61,69,0,60,81,63,70,71],
[62,77,70,0,68,69,67,76],
[63,61,49,62,0,56,63,67],
[67,74,67,61,74,0,63,75],
[61,66,60,63,67,67,0,72],
[57,57,59,54,63,55,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,78,78,62,73,77,77],
[62,0,70,68,57,64,57,68],
[52,60,0,71,50,63,61,61],
[52,62,59,0,61,54,52,58],
[68,73,80,69,0,70,61,70],
[57,66,67,76,60,0,62,71],
[53,73,69,78,69,68,0,79],
[53,62,69,72,60,59,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,64,63,59,69,48,48],
[77,0,89,70,73,76,65,75],
[66,41,0,50,66,57,34,49],
[67,60,80,0,72,65,45,40],
[71,57,64,58,0,58,44,52],
[61,54,73,65,72,0,47,48],
[82,65,96,85,86,83,0,67],
[82,55,81,90,78,82,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,67,53,69,63,62],
[66,0,64,66,67,73,67,72],
[62,66,0,54,58,61,60,55],
[63,64,76,0,67,62,65,61],
[77,63,72,63,0,61,55,69],
[61,57,69,68,69,0,56,72],
[67,63,70,65,75,74,0,64],
[68,58,75,69,61,58,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,60,69,70,63,66],
[68,0,68,60,62,72,67,61],
[60,62,0,64,64,61,60,64],
[70,70,66,0,71,73,63,66],
[61,68,66,59,0,70,65,69],
[60,58,69,57,60,0,59,59],
[67,63,70,67,65,71,0,65],
[64,69,66,64,61,71,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,82,57,68,69,48,60],
[74,0,92,86,85,95,91,63],
[48,38,0,49,54,60,41,48],
[73,44,81,0,66,75,53,50],
[62,45,76,64,0,61,60,50],
[61,35,70,55,69,0,47,53],
[82,39,89,77,70,83,0,76],
[70,67,82,80,80,77,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,69,50,59,78,59,66],
[63,0,69,69,61,79,78,58],
[61,61,0,55,49,59,55,56],
[80,61,75,0,76,65,61,69],
[71,69,81,54,0,71,80,54],
[52,51,71,65,59,0,66,58],
[71,52,75,69,50,64,0,57],
[64,72,74,61,76,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,57,60,65,51,76,54],
[78,0,61,60,60,56,73,68],
[73,69,0,66,71,57,75,61],
[70,70,64,0,54,67,77,65],
[65,70,59,76,0,62,70,65],
[79,74,73,63,68,0,75,70],
[54,57,55,53,60,55,0,65],
[76,62,69,65,65,60,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,53,60,59,71,57,61],
[49,0,42,48,54,40,48,55],
[77,88,0,66,58,68,69,80],
[70,82,64,0,77,65,72,87],
[71,76,72,53,0,66,82,70],
[59,90,62,65,64,0,51,75],
[73,82,61,58,48,79,0,77],
[69,75,50,43,60,55,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,63,65,59,63,61,71],
[56,0,68,59,56,72,70,70],
[67,62,0,57,63,67,66,72],
[65,71,73,0,65,71,66,72],
[71,74,67,65,0,73,69,71],
[67,58,63,59,57,0,64,71],
[69,60,64,64,61,66,0,65],
[59,60,58,58,59,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,76,65,72,72,66],
[58,0,61,59,55,62,65,60],
[63,69,0,70,57,60,69,54],
[54,71,60,0,59,59,64,54],
[65,75,73,71,0,65,70,61],
[58,68,70,71,65,0,69,58],
[58,65,61,66,60,61,0,64],
[64,70,76,76,69,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,29,58,37,29,58,58],
[94,0,87,79,68,80,92,64],
[101,43,0,92,67,66,62,78],
[72,51,38,0,45,44,65,62],
[93,62,63,85,0,32,82,72],
[101,50,64,86,98,0,106,73],
[72,38,68,65,48,24,0,68],
[72,66,52,68,58,57,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,72,61,64,55,56,63],
[70,0,74,61,65,58,68,62],
[58,56,0,61,65,61,60,60],
[69,69,69,0,66,78,64,67],
[66,65,65,64,0,63,58,65],
[75,72,69,52,67,0,63,64],
[74,62,70,66,72,67,0,67],
[67,68,70,63,65,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,110,75,71,84,53,64],
[50,0,50,60,52,62,42,53],
[20,80,0,53,50,82,51,42],
[55,70,77,0,50,81,60,71],
[59,78,80,80,0,102,62,62],
[46,68,48,49,28,0,52,60],
[77,88,79,70,68,78,0,58],
[66,77,88,59,68,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,58,70,71,94,68],
[70,0,82,63,65,55,63,75],
[73,48,0,53,54,38,72,43],
[72,67,77,0,62,48,76,62],
[60,65,76,68,0,60,78,61],
[59,75,92,82,70,0,96,75],
[36,67,58,54,52,34,0,50],
[62,55,87,68,69,55,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,64,74,66,78,68],
[60,0,57,53,54,62,69,47],
[59,73,0,64,70,59,78,63],
[66,77,66,0,72,62,77,70],
[56,76,60,58,0,66,84,64],
[64,68,71,68,64,0,72,69],
[52,61,52,53,46,58,0,48],
[62,83,67,60,66,61,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,55,53,50,52,56],
[69,0,57,62,63,54,57,57],
[65,73,0,72,68,63,71,67],
[75,68,58,0,61,61,57,62],
[77,67,62,69,0,64,64,68],
[80,76,67,69,66,0,65,73],
[78,73,59,73,66,65,0,62],
[74,73,63,68,62,57,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,84,65,83,56,82,87],
[60,0,77,68,84,75,60,91],
[46,53,0,46,72,36,60,63],
[65,62,84,0,98,57,75,91],
[47,46,58,32,0,30,66,64],
[74,55,94,73,100,0,85,83],
[48,70,70,55,64,45,0,80],
[43,39,67,39,66,47,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,74,72,70,61,54,70],
[61,0,64,52,70,65,60,72],
[56,66,0,62,67,64,48,59],
[58,78,68,0,64,67,63,82],
[60,60,63,66,0,69,47,68],
[69,65,66,63,61,0,68,77],
[76,70,82,67,83,62,0,81],
[60,58,71,48,62,53,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,58,67,49,56,46,50],
[71,0,70,79,65,63,62,60],
[72,60,0,69,52,53,55,61],
[63,51,61,0,56,58,51,58],
[81,65,78,74,0,70,63,66],
[74,67,77,72,60,0,66,63],
[84,68,75,79,67,64,0,68],
[80,70,69,72,64,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,99,81,87,65,73,68,77],
[31,0,58,63,42,69,48,49],
[49,72,0,65,77,80,77,71],
[43,67,65,0,48,67,47,59],
[65,88,53,82,0,85,54,87],
[57,61,50,63,45,0,59,79],
[62,82,53,83,76,71,0,76],
[53,81,59,71,43,51,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,88,75,64,71,65,75],
[62,0,76,70,64,78,53,52],
[42,54,0,50,50,55,52,44],
[55,60,80,0,54,56,54,51],
[66,66,80,76,0,82,67,54],
[59,52,75,74,48,0,59,50],
[65,77,78,76,63,71,0,53],
[55,78,86,79,76,80,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,69,76,72,73,66],
[70,0,54,65,64,60,67,58],
[65,76,0,61,70,77,68,56],
[61,65,69,0,69,72,68,69],
[54,66,60,61,0,62,60,55],
[58,70,53,58,68,0,72,65],
[57,63,62,62,70,58,0,64],
[64,72,74,61,75,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,54,61,47,38,42,45],
[68,0,77,74,65,71,54,68],
[76,53,0,67,66,45,58,76],
[69,56,63,0,62,50,46,78],
[83,65,64,68,0,63,55,50],
[92,59,85,80,67,0,71,81],
[88,76,72,84,75,59,0,84],
[85,62,54,52,80,49,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,73,70,61,55,84],
[63,0,60,60,56,58,58,62],
[63,70,0,80,69,65,63,72],
[57,70,50,0,64,55,59,62],
[60,74,61,66,0,52,56,73],
[69,72,65,75,78,0,70,71],
[75,72,67,71,74,60,0,74],
[46,68,58,68,57,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,66,86,42,86,87,108],
[86,0,87,65,86,87,87,87],
[64,43,0,43,64,63,65,42],
[44,65,87,0,65,86,65,65],
[88,44,66,65,0,108,87,108],
[44,43,67,44,22,0,87,86],
[43,43,65,65,43,43,0,64],
[22,43,88,65,22,44,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,92,59,99,67,83,83],
[41,0,40,50,71,40,83,75],
[38,90,0,68,106,60,83,84],
[71,80,62,0,70,49,91,81],
[31,59,24,60,0,25,53,66],
[63,90,70,81,105,0,90,74],
[47,47,47,39,77,40,0,65],
[47,55,46,49,64,56,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,73,79,72,75,60,63],
[58,0,69,56,64,76,71,66],
[57,61,0,60,48,76,51,58],
[51,74,70,0,67,70,52,69],
[58,66,82,63,0,65,63,64],
[55,54,54,60,65,0,49,58],
[70,59,79,78,67,81,0,65],
[67,64,72,61,66,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,68,60,61,72,66],
[66,0,64,68,60,69,71,65],
[64,66,0,70,62,70,72,60],
[62,62,60,0,66,65,66,65],
[70,70,68,64,0,72,71,67],
[69,61,60,65,58,0,69,66],
[58,59,58,64,59,61,0,59],
[64,65,70,65,63,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,65,69,64,59,68],
[65,0,69,70,73,69,65,60],
[70,61,0,67,76,75,62,68],
[65,60,63,0,56,62,64,50],
[61,57,54,74,0,62,61,58],
[66,61,55,68,68,0,60,64],
[71,65,68,66,69,70,0,57],
[62,70,62,80,72,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,70,59,55,66,68],
[64,0,77,67,57,67,65,72],
[61,53,0,73,65,70,63,72],
[60,63,57,0,55,60,56,60],
[71,73,65,75,0,68,73,81],
[75,63,60,70,62,0,73,66],
[64,65,67,74,57,57,0,67],
[62,58,58,70,49,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,73,67,77,68,65,61],
[50,0,62,62,73,54,55,55],
[57,68,0,70,73,46,48,68],
[63,68,60,0,66,62,54,58],
[53,57,57,64,0,53,54,63],
[62,76,84,68,77,0,67,70],
[65,75,82,76,76,63,0,59],
[69,75,62,72,67,60,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,76,64,56,61,70,58],
[79,0,78,77,73,85,75,65],
[54,52,0,58,52,78,59,56],
[66,53,72,0,58,73,69,62],
[74,57,78,72,0,80,77,76],
[69,45,52,57,50,0,63,56],
[60,55,71,61,53,67,0,66],
[72,65,74,68,54,74,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,78,59,67,58,74,76],
[61,0,78,65,81,62,74,81],
[52,52,0,37,48,46,56,70],
[71,65,93,0,66,72,74,86],
[63,49,82,64,0,58,61,77],
[72,68,84,58,72,0,74,76],
[56,56,74,56,69,56,0,68],
[54,49,60,44,53,54,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,95,63,0,30,97,63],
[67,0,67,67,35,67,67,67],
[35,63,0,30,35,0,65,0],
[67,63,100,0,35,32,97,0],
[130,95,95,95,0,62,130,95],
[100,63,130,98,68,0,130,68],
[33,63,65,33,0,0,0,33],
[67,63,130,130,35,62,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,70,62,72,74,62,70],
[56,0,60,52,58,64,57,61],
[60,70,0,66,69,81,60,68],
[68,78,64,0,70,76,66,66],
[58,72,61,60,0,69,52,64],
[56,66,49,54,61,0,54,57],
[68,73,70,64,78,76,0,69],
[60,69,62,64,66,73,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,74,60,54,76,70],
[68,0,53,74,63,55,74,76],
[67,77,0,66,64,68,91,86],
[56,56,64,0,52,41,71,58],
[70,67,66,78,0,58,69,83],
[76,75,62,89,72,0,88,71],
[54,56,39,59,61,42,0,58],
[60,54,44,72,47,59,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,67,84,66,63,68,70],
[66,0,57,81,76,68,47,67],
[63,73,0,81,63,67,55,84],
[46,49,49,0,46,45,48,52],
[64,54,67,84,0,49,60,56],
[67,62,63,85,81,0,65,71],
[62,83,75,82,70,65,0,76],
[60,63,46,78,74,59,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,59,51,39,40,34,54],
[80,0,80,65,66,67,57,74],
[71,50,0,59,51,67,55,64],
[79,65,71,0,60,73,58,77],
[91,64,79,70,0,79,68,82],
[90,63,63,57,51,0,53,67],
[96,73,75,72,62,77,0,80],
[76,56,66,53,48,63,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,80,52,75,73,35],
[73,0,69,70,43,66,76,46],
[62,61,0,63,57,76,67,51],
[50,60,67,0,52,58,66,48],
[78,87,73,78,0,87,94,65],
[55,64,54,72,43,0,67,37],
[57,54,63,64,36,63,0,46],
[95,84,79,82,65,93,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,80,62,69,79,78],
[70,0,67,79,58,64,81,72],
[64,63,0,90,68,60,75,68],
[50,51,40,0,52,45,57,53],
[68,72,62,78,0,73,88,73],
[61,66,70,85,57,0,78,66],
[51,49,55,73,42,52,0,50],
[52,58,62,77,57,64,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,78,73,53,58,66],
[64,0,63,76,69,61,60,64],
[68,67,0,75,59,63,65,75],
[52,54,55,0,46,50,55,59],
[57,61,71,84,0,59,63,67],
[77,69,67,80,71,0,64,73],
[72,70,65,75,67,66,0,65],
[64,66,55,71,63,57,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,77,55,61,73,71],
[67,0,56,88,62,60,83,61],
[73,74,0,74,50,65,73,57],
[53,42,56,0,62,47,59,41],
[75,68,80,68,0,47,82,71],
[69,70,65,83,83,0,79,65],
[57,47,57,71,48,51,0,52],
[59,69,73,89,59,65,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,63,53,54,52,63,76],
[88,0,52,64,77,52,64,76],
[67,78,0,56,79,78,55,56],
[77,66,74,0,65,54,65,64],
[76,53,51,65,0,52,52,64],
[78,78,52,76,78,0,65,55],
[67,66,75,65,78,65,0,65],
[54,54,74,66,66,75,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,68,70,54,79,71,68],
[44,0,48,38,53,60,53,29],
[62,82,0,59,62,75,69,56],
[60,92,71,0,50,75,68,75],
[76,77,68,80,0,76,80,61],
[51,70,55,55,54,0,70,58],
[59,77,61,62,50,60,0,60],
[62,101,74,55,69,72,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,73,65,61,63,61],
[65,0,74,70,60,57,69,61],
[62,56,0,52,57,54,49,58],
[57,60,78,0,62,55,67,66],
[65,70,73,68,0,60,67,73],
[69,73,76,75,70,0,63,73],
[67,61,81,63,63,67,0,65],
[69,69,72,64,57,57,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,72,83,62,57,67,66],
[56,0,58,54,56,55,56,59],
[58,72,0,62,62,55,55,65],
[47,76,68,0,56,53,51,75],
[68,74,68,74,0,55,56,65],
[73,75,75,77,75,0,53,65],
[63,74,75,79,74,77,0,79],
[64,71,65,55,65,65,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,58,57,62,55,58,50],
[81,0,63,71,63,65,72,60],
[72,67,0,56,61,58,59,59],
[73,59,74,0,73,63,60,67],
[68,67,69,57,0,56,66,67],
[75,65,72,67,74,0,61,65],
[72,58,71,70,64,69,0,64],
[80,70,71,63,63,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,62,77,76,58,73,61],
[59,0,57,67,72,53,64,64],
[68,73,0,75,78,63,76,67],
[53,63,55,0,69,43,67,51],
[54,58,52,61,0,57,56,55],
[72,77,67,87,73,0,69,62],
[57,66,54,63,74,61,0,53],
[69,66,63,79,75,68,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,59,48,76,77,84,45],
[45,0,70,46,43,46,41,67],
[71,60,0,49,71,50,49,50],
[82,84,81,0,97,85,73,52],
[54,87,59,33,0,64,64,55],
[53,84,80,45,66,0,63,63],
[46,89,81,57,66,67,0,67],
[85,63,80,78,75,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,69,69,71,66,58],
[61,0,58,60,58,60,53,60],
[69,72,0,70,75,63,64,62],
[61,70,60,0,59,54,60,59],
[61,72,55,71,0,57,66,68],
[59,70,67,76,73,0,61,67],
[64,77,66,70,64,69,0,67],
[72,70,68,71,62,63,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,67,48,54,59,84,50],
[87,0,82,65,71,68,78,61],
[63,48,0,40,57,50,66,60],
[82,65,90,0,74,82,91,67],
[76,59,73,56,0,62,86,54],
[71,62,80,48,68,0,81,57],
[46,52,64,39,44,49,0,49],
[80,69,70,63,76,73,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,64,67,53,60,70,54],
[53,0,67,52,61,75,61,53],
[66,63,0,85,67,78,64,47],
[63,78,45,0,61,60,69,51],
[77,69,63,69,0,81,70,72],
[70,55,52,70,49,0,71,69],
[60,69,66,61,60,59,0,61],
[76,77,83,79,58,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,73,70,64,71,64,79],
[58,0,80,73,75,65,73,70],
[57,50,0,63,61,63,64,60],
[60,57,67,0,62,66,64,67],
[66,55,69,68,0,72,65,64],
[59,65,67,64,58,0,61,61],
[66,57,66,66,65,69,0,64],
[51,60,70,63,66,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,72,58,68,57,78],
[70,0,57,74,58,68,70,80],
[71,73,0,74,56,72,64,80],
[58,56,56,0,53,67,52,66],
[72,72,74,77,0,77,63,77],
[62,62,58,63,53,0,58,65],
[73,60,66,78,67,72,0,75],
[52,50,50,64,53,65,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,62,56,74,67,63,68],
[87,0,68,71,59,66,62,60],
[68,62,0,69,71,58,80,67],
[74,59,61,0,71,57,63,51],
[56,71,59,59,0,64,65,49],
[63,64,72,73,66,0,67,63],
[67,68,50,67,65,63,0,59],
[62,70,63,79,81,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,67,51,55,69,67,62],
[72,0,60,67,65,69,72,63],
[63,70,0,50,57,56,55,64],
[79,63,80,0,78,74,75,71],
[75,65,73,52,0,58,64,54],
[61,61,74,56,72,0,73,65],
[63,58,75,55,66,57,0,60],
[68,67,66,59,76,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,61,66,58,75,67],
[63,0,64,59,68,60,72,73],
[68,66,0,65,68,65,69,69],
[69,71,65,0,72,66,73,72],
[64,62,62,58,0,67,74,65],
[72,70,65,64,63,0,69,70],
[55,58,61,57,56,61,0,63],
[63,57,61,58,65,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,72,58,51,55,77,56],
[58,0,54,59,35,46,65,68],
[58,76,0,67,52,53,95,62],
[72,71,63,0,50,60,72,63],
[79,95,78,80,0,65,94,82],
[75,84,77,70,65,0,61,75],
[53,65,35,58,36,69,0,65],
[74,62,68,67,48,55,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,71,59,72,61,53],
[59,0,75,78,63,79,72,73],
[64,55,0,67,60,51,58,58],
[59,52,63,0,51,57,47,61],
[71,67,70,79,0,68,66,62],
[58,51,79,73,62,0,63,57],
[69,58,72,83,64,67,0,60],
[77,57,72,69,68,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,75,73,56,37,75,94],
[74,0,38,54,18,54,73,94],
[55,92,0,92,54,73,73,94],
[57,76,38,0,75,57,75,94],
[74,112,76,55,0,93,92,113],
[93,76,57,73,37,0,94,113],
[55,57,57,55,38,36,0,76],
[36,36,36,36,17,17,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,62,75,65,60,77],
[68,0,66,52,72,53,59,73],
[66,64,0,61,74,65,59,64],
[68,78,69,0,73,65,73,76],
[55,58,56,57,0,54,60,62],
[65,77,65,65,76,0,70,70],
[70,71,71,57,70,60,0,70],
[53,57,66,54,68,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,63,55,78,81,78,59],
[49,0,52,43,55,55,60,43],
[67,78,0,64,68,74,71,69],
[75,87,66,0,78,75,72,58],
[52,75,62,52,0,62,71,56],
[49,75,56,55,68,0,66,51],
[52,70,59,58,59,64,0,52],
[71,87,61,72,74,79,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,61,75,69,73,72],
[61,0,59,63,72,55,61,66],
[60,71,0,65,75,63,70,66],
[69,67,65,0,69,70,71,65],
[55,58,55,61,0,63,61,69],
[61,75,67,60,67,0,74,70],
[57,69,60,59,69,56,0,69],
[58,64,64,65,61,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,63,63,59,59,69,76],
[72,0,69,61,72,70,67,70],
[67,61,0,65,68,71,58,69],
[67,69,65,0,73,73,70,70],
[71,58,62,57,0,67,60,67],
[71,60,59,57,63,0,62,69],
[61,63,72,60,70,68,0,68],
[54,60,61,60,63,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,59,64,61,59,60],
[69,0,68,60,73,74,65,68],
[66,62,0,68,72,66,69,70],
[71,70,62,0,72,73,74,72],
[66,57,58,58,0,60,60,59],
[69,56,64,57,70,0,65,61],
[71,65,61,56,70,65,0,64],
[70,62,60,58,71,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,68,71,69,75,61],
[72,0,61,80,80,67,82,79],
[69,69,0,65,65,74,89,68],
[62,50,65,0,83,69,71,65],
[59,50,65,47,0,50,72,59],
[61,63,56,61,80,0,83,56],
[55,48,41,59,58,47,0,59],
[69,51,62,65,71,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,82,62,70,71,63,63],
[67,0,65,65,65,70,55,63],
[48,65,0,62,59,66,60,54],
[68,65,68,0,69,76,69,69],
[60,65,71,61,0,71,57,58],
[59,60,64,54,59,0,62,58],
[67,75,70,61,73,68,0,67],
[67,67,76,61,72,72,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,62,57,62,54,61],
[67,0,66,74,63,64,67,65],
[57,64,0,64,66,64,61,53],
[68,56,66,0,59,58,62,59],
[73,67,64,71,0,62,62,66],
[68,66,66,72,68,0,62,61],
[76,63,69,68,68,68,0,60],
[69,65,77,71,64,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,73,74,66,72,66],
[67,0,63,75,72,68,66,67],
[62,67,0,70,60,68,65,63],
[57,55,60,0,58,60,63,59],
[56,58,70,72,0,65,67,67],
[64,62,62,70,65,0,62,63],
[58,64,65,67,63,68,0,55],
[64,63,67,71,63,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,59,76,64,48,62,78],
[61,0,38,79,75,56,54,72],
[71,92,0,68,70,69,60,84],
[54,51,62,0,69,50,66,86],
[66,55,60,61,0,51,70,72],
[82,74,61,80,79,0,75,79],
[68,76,70,64,60,55,0,79],
[52,58,46,44,58,51,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,72,64,58,61,79],
[67,0,63,80,75,70,66,80],
[71,67,0,70,77,77,59,86],
[58,50,60,0,65,53,55,84],
[66,55,53,65,0,65,49,87],
[72,60,53,77,65,0,64,83],
[69,64,71,75,81,66,0,87],
[51,50,44,46,43,47,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,64,62,62,65,64],
[67,0,73,66,67,65,66,70],
[69,57,0,65,73,55,58,69],
[66,64,65,0,65,57,61,63],
[68,63,57,65,0,50,56,59],
[68,65,75,73,80,0,69,67],
[65,64,72,69,74,61,0,71],
[66,60,61,67,71,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,68,80,65,83,70],
[60,0,70,66,77,62,74,60],
[62,60,0,65,84,63,79,60],
[62,64,65,0,72,71,74,62],
[50,53,46,58,0,60,63,45],
[65,68,67,59,70,0,67,60],
[47,56,51,56,67,63,0,44],
[60,70,70,68,85,70,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,57,43,61,45,60,56],
[76,0,56,66,61,69,69,59],
[73,74,0,64,68,64,70,65],
[87,64,66,0,73,76,70,63],
[69,69,62,57,0,70,67,51],
[85,61,66,54,60,0,65,63],
[70,61,60,60,63,65,0,60],
[74,71,65,67,79,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,64,67,64,81,79],
[68,0,63,76,69,69,83,76],
[68,67,0,64,67,63,91,74],
[66,54,66,0,65,61,73,66],
[63,61,63,65,0,72,76,72],
[66,61,67,69,58,0,74,68],
[49,47,39,57,54,56,0,57],
[51,54,56,64,58,62,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,59,54,62,64,72],
[65,0,61,71,60,54,72,70],
[59,69,0,75,58,59,77,74],
[71,59,55,0,56,59,78,77],
[76,70,72,74,0,65,77,79],
[68,76,71,71,65,0,82,68],
[66,58,53,52,53,48,0,56],
[58,60,56,53,51,62,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,65,64,61,64,59],
[63,0,62,71,61,66,66,57],
[67,68,0,65,69,58,67,63],
[65,59,65,0,68,62,58,53],
[66,69,61,62,0,62,63,62],
[69,64,72,68,68,0,65,67],
[66,64,63,72,67,65,0,63],
[71,73,67,77,68,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,70,69,66,73,71,64],
[51,0,62,69,63,67,62,67],
[60,68,0,66,63,86,59,72],
[61,61,64,0,66,75,55,74],
[64,67,67,64,0,72,67,56],
[57,63,44,55,58,0,48,62],
[59,68,71,75,63,82,0,74],
[66,63,58,56,74,68,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,77,75,68,73,74,65],
[57,0,59,59,59,64,53,57],
[53,71,0,52,51,66,59,74],
[55,71,78,0,79,63,57,60],
[62,71,79,51,0,67,61,72],
[57,66,64,67,63,0,69,69],
[56,77,71,73,69,61,0,74],
[65,73,56,70,58,61,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,51,51,59,65,59,48],
[77,0,74,69,79,65,84,76],
[79,56,0,56,65,66,63,61],
[79,61,74,0,68,78,72,74],
[71,51,65,62,0,69,63,70],
[65,65,64,52,61,0,70,66],
[71,46,67,58,67,60,0,53],
[82,54,69,56,60,64,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,56,58,61,65,72],
[65,0,64,47,57,72,60,64],
[62,66,0,64,68,63,73,56],
[74,83,66,0,59,67,59,68],
[72,73,62,71,0,76,69,60],
[69,58,67,63,54,0,69,60],
[65,70,57,71,61,61,0,66],
[58,66,74,62,70,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,76,59,65,69,64,65],
[57,0,57,52,58,41,49,56],
[54,73,0,70,59,62,62,62],
[71,78,60,0,60,56,69,66],
[65,72,71,70,0,70,64,60],
[61,89,68,74,60,0,63,71],
[66,81,68,61,66,67,0,51],
[65,74,68,64,70,59,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,60,59,72,58,60,59],
[80,0,74,67,74,74,61,75],
[70,56,0,69,66,65,63,65],
[71,63,61,0,70,67,62,66],
[58,56,64,60,0,65,63,64],
[72,56,65,63,65,0,64,68],
[70,69,67,68,67,66,0,63],
[71,55,65,64,66,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,82,70,68,82,60,65],
[69,0,78,55,89,82,67,69],
[48,52,0,42,44,72,47,38],
[60,75,88,0,74,87,67,58],
[62,41,86,56,0,88,61,53],
[48,48,58,43,42,0,57,34],
[70,63,83,63,69,73,0,48],
[65,61,92,72,77,96,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,62,62,66,65,69],
[74,0,69,65,73,63,71,68],
[67,61,0,59,68,60,70,68],
[68,65,71,0,68,65,70,68],
[68,57,62,62,0,67,67,65],
[64,67,70,65,63,0,73,75],
[65,59,60,60,63,57,0,66],
[61,62,62,62,65,55,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,59,64,59,68,58],
[65,0,62,64,61,77,69,70],
[69,68,0,61,66,67,79,75],
[71,66,69,0,65,71,75,74],
[66,69,64,65,0,73,78,60],
[71,53,63,59,57,0,67,63],
[62,61,51,55,52,63,0,61],
[72,60,55,56,70,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,50,59,46,55,65,52],
[63,0,54,60,55,53,62,50],
[80,76,0,68,65,65,71,67],
[71,70,62,0,67,58,69,54],
[84,75,65,63,0,62,74,68],
[75,77,65,72,68,0,71,64],
[65,68,59,61,56,59,0,65],
[78,80,63,76,62,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,74,61,71,55,57,74],
[52,0,66,46,49,56,42,57],
[56,64,0,66,77,66,50,76],
[69,84,64,0,64,67,74,71],
[59,81,53,66,0,72,60,59],
[75,74,64,63,58,0,58,71],
[73,88,80,56,70,72,0,79],
[56,73,54,59,71,59,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,78,72,74,71,65,70],
[72,0,76,66,68,62,57,71],
[52,54,0,55,58,62,57,64],
[58,64,75,0,64,68,63,68],
[56,62,72,66,0,73,65,60],
[59,68,68,62,57,0,60,63],
[65,73,73,67,65,70,0,66],
[60,59,66,62,70,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,61,58,61,65,65],
[70,0,70,63,67,61,70,61],
[65,60,0,60,65,60,67,52],
[69,67,70,0,56,69,67,63],
[72,63,65,74,0,59,72,74],
[69,69,70,61,71,0,71,72],
[65,60,63,63,58,59,0,66],
[65,69,78,67,56,58,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,89,65,66,91,91,54],
[66,0,79,58,82,74,82,65],
[41,51,0,42,42,51,57,33],
[65,72,88,0,72,66,81,65],
[64,48,88,58,0,65,83,46],
[39,56,79,64,65,0,73,69],
[39,48,73,49,47,57,0,22],
[76,65,97,65,84,61,108,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,70,67,63,53,61],
[64,0,66,59,60,61,53,59],
[67,64,0,68,65,55,59,67],
[60,71,62,0,67,53,53,69],
[63,70,65,63,0,53,56,68],
[67,69,75,77,77,0,63,71],
[77,77,71,77,74,67,0,65],
[69,71,63,61,62,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,66,57,56,65,57],
[62,0,58,63,60,66,61,57],
[65,72,0,76,68,75,66,63],
[64,67,54,0,57,60,63,64],
[73,70,62,73,0,65,68,73],
[74,64,55,70,65,0,61,71],
[65,69,64,67,62,69,0,72],
[73,73,67,66,57,59,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,79,69,69,70,63,62],
[56,0,75,60,49,58,51,59],
[51,55,0,57,48,56,48,56],
[61,70,73,0,74,60,67,60],
[61,81,82,56,0,62,61,66],
[60,72,74,70,68,0,69,61],
[67,79,82,63,69,61,0,66],
[68,71,74,70,64,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,66,61,67,68,58],
[65,0,65,71,54,65,61,50],
[67,65,0,63,61,61,62,57],
[64,59,67,0,65,56,59,56],
[69,76,69,65,0,70,70,65],
[63,65,69,74,60,0,62,65],
[62,69,68,71,60,68,0,60],
[72,80,73,74,65,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,85,87,59,75,86,100],
[40,0,26,57,57,71,56,70],
[45,104,0,75,73,75,74,75],
[43,73,55,0,59,58,74,72],
[71,73,57,71,0,71,85,86],
[55,59,55,72,59,0,57,100],
[44,74,56,56,45,73,0,87],
[30,60,55,58,44,30,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,66,66,80,50,48],
[64,0,81,33,49,47,32,31],
[65,49,0,51,50,65,35,31],
[64,97,79,0,64,47,79,79],
[64,81,80,66,0,79,80,48],
[50,83,65,83,51,0,50,65],
[80,98,95,51,50,80,0,48],
[82,99,99,51,82,65,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,105,66,65,59,90,65,81],
[25,0,66,66,33,68,66,73],
[64,64,0,57,74,82,59,75],
[65,64,73,0,66,92,66,71],
[71,97,56,64,0,97,57,65],
[40,62,48,38,33,0,33,48],
[65,64,71,64,73,97,0,83],
[49,57,55,59,65,82,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,69,64,73,75,64,75],
[53,0,66,61,61,64,52,57],
[61,64,0,58,67,74,55,73],
[66,69,72,0,75,58,74,72],
[57,69,63,55,0,82,51,71],
[55,66,56,72,48,0,50,56],
[66,78,75,56,79,80,0,73],
[55,73,57,58,59,74,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,76,57,70,72,73,77],
[64,0,80,69,64,69,71,73],
[54,50,0,55,50,63,62,67],
[73,61,75,0,61,67,73,74],
[60,66,80,69,0,68,74,75],
[58,61,67,63,62,0,71,70],
[57,59,68,57,56,59,0,67],
[53,57,63,56,55,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,54,72,60,63,68,64],
[74,0,62,83,68,51,71,68],
[76,68,0,58,57,54,74,61],
[58,47,72,0,58,49,69,53],
[70,62,73,72,0,60,79,61],
[67,79,76,81,70,0,72,63],
[62,59,56,61,51,58,0,71],
[66,62,69,77,69,67,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,68,73,64,75,66],
[68,0,59,77,72,57,70,60],
[62,71,0,72,73,76,78,75],
[62,53,58,0,68,57,60,52],
[57,58,57,62,0,50,69,56],
[66,73,54,73,80,0,72,64],
[55,60,52,70,61,58,0,54],
[64,70,55,78,74,66,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,73,37,69,59,52,42],
[63,0,66,62,74,61,59,66],
[57,64,0,54,71,68,57,65],
[93,68,76,0,77,77,62,63],
[61,56,59,53,0,75,54,63],
[71,69,62,53,55,0,59,48],
[78,71,73,68,76,71,0,62],
[88,64,65,67,67,82,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,59,43,61,65,68,27],
[83,0,59,72,67,97,72,65],
[71,71,0,69,53,76,68,51],
[87,58,61,0,69,85,76,71],
[69,63,77,61,0,82,69,43],
[65,33,54,45,48,0,63,47],
[62,58,62,54,61,67,0,44],
[103,65,79,59,87,83,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,57,81,88,88,65,49],
[41,0,24,57,63,64,40,24],
[73,106,0,82,105,97,65,65],
[49,73,48,0,80,80,49,41],
[42,67,25,50,0,75,58,34],
[42,66,33,50,55,0,24,24],
[65,90,65,81,72,106,0,49],
[81,106,65,89,96,106,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,88,72,78,60,65,68],
[57,0,67,72,70,72,66,70],
[42,63,0,63,68,51,62,51],
[58,58,67,0,60,58,71,65],
[52,60,62,70,0,43,73,68],
[70,58,79,72,87,0,73,80],
[65,64,68,59,57,57,0,51],
[62,60,79,65,62,50,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,73,62,68,58,61,64],
[57,0,65,55,60,61,55,59],
[57,65,0,61,58,55,50,66],
[68,75,69,0,68,57,69,65],
[62,70,72,62,0,65,65,68],
[72,69,75,73,65,0,66,70],
[69,75,80,61,65,64,0,61],
[66,71,64,65,62,60,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,66,63,64,64,68],
[64,0,62,70,69,67,67,77],
[59,68,0,72,63,72,63,72],
[64,60,58,0,67,70,61,65],
[67,61,67,63,0,69,66,73],
[66,63,58,60,61,0,66,64],
[66,63,67,69,64,64,0,63],
[62,53,58,65,57,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,79,79,53,104,79,104],
[77,0,79,53,105,78,53,103],
[51,51,0,51,77,77,78,51],
[51,77,79,0,104,104,53,77],
[77,25,53,26,0,51,53,51],
[26,52,53,26,79,0,79,77],
[51,77,52,77,77,51,0,77],
[26,27,79,53,79,53,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,72,67,67,66,66,62],
[71,0,65,66,74,70,71,60],
[58,65,0,70,67,68,59,64],
[63,64,60,0,56,64,61,67],
[63,56,63,74,0,67,56,63],
[64,60,62,66,63,0,69,64],
[64,59,71,69,74,61,0,70],
[68,70,66,63,67,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,53,74,68,55,62,62],
[69,0,55,75,64,63,63,61],
[77,75,0,83,81,67,74,65],
[56,55,47,0,62,50,57,56],
[62,66,49,68,0,51,67,68],
[75,67,63,80,79,0,76,74],
[68,67,56,73,63,54,0,63],
[68,69,65,74,62,56,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,74,55,67,60,58,64],
[69,0,65,61,66,65,64,67],
[56,65,0,58,67,60,61,65],
[75,69,72,0,73,63,71,69],
[63,64,63,57,0,57,60,68],
[70,65,70,67,73,0,68,69],
[72,66,69,59,70,62,0,67],
[66,63,65,61,62,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,79,62,78,60,64,64],
[62,0,60,66,71,54,55,47],
[51,70,0,61,65,58,56,63],
[68,64,69,0,77,55,52,52],
[52,59,65,53,0,55,56,54],
[70,76,72,75,75,0,63,71],
[66,75,74,78,74,67,0,60],
[66,83,67,78,76,59,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,70,59,56,62,62,65],
[73,0,74,65,60,67,65,76],
[60,56,0,55,51,55,60,73],
[71,65,75,0,72,75,66,76],
[74,70,79,58,0,70,65,73],
[68,63,75,55,60,0,62,71],
[68,65,70,64,65,68,0,70],
[65,54,57,54,57,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,67,65,74,63,67],
[60,0,60,69,81,76,68,58],
[62,70,0,67,70,64,66,66],
[63,61,63,0,66,61,61,63],
[65,49,60,64,0,63,60,54],
[56,54,66,69,67,0,66,59],
[67,62,64,69,70,64,0,62],
[63,72,64,67,76,71,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,59,70,63,60,65],
[69,0,70,62,62,69,65,71],
[62,60,0,64,65,61,60,63],
[71,68,66,0,59,65,72,78],
[60,68,65,71,0,66,58,68],
[67,61,69,65,64,0,62,63],
[70,65,70,58,72,68,0,72],
[65,59,67,52,62,67,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,31,96,64,48,47,49],
[49,0,33,96,65,17,32,34],
[99,97,0,130,114,51,98,65],
[34,34,0,0,49,35,50,50],
[66,65,16,81,0,34,50,50],
[82,113,79,95,96,0,82,65],
[83,98,32,80,80,48,0,49],
[81,96,65,80,80,65,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,67,44,58,78,71],
[72,0,62,71,59,67,67,67],
[68,68,0,72,65,64,79,77],
[63,59,58,0,49,66,67,65],
[86,71,65,81,0,75,80,88],
[72,63,66,64,55,0,60,75],
[52,63,51,63,50,70,0,67],
[59,63,53,65,42,55,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,66,62,59,56,52,47],
[86,0,82,75,64,59,68,62],
[64,48,0,69,54,50,53,45],
[68,55,61,0,56,60,44,46],
[71,66,76,74,0,66,60,55],
[74,71,80,70,64,0,65,69],
[78,62,77,86,70,65,0,72],
[83,68,85,84,75,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,60,63,50,59,63,74],
[76,0,62,70,60,73,75,62],
[70,68,0,72,62,59,67,65],
[67,60,58,0,55,57,69,68],
[80,70,68,75,0,61,72,76],
[71,57,71,73,69,0,70,69],
[67,55,63,61,58,60,0,56],
[56,68,65,62,54,61,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,60,54,56,52,59,42],
[72,0,66,68,68,60,68,62],
[70,64,0,82,73,49,58,53],
[76,62,48,0,66,65,72,59],
[74,62,57,64,0,68,68,56],
[78,70,81,65,62,0,71,77],
[71,62,72,58,62,59,0,67],
[88,68,77,71,74,53,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,57,64,73,51,56,65],
[62,0,47,62,42,43,69,54],
[73,83,0,103,53,59,57,67],
[66,68,27,0,44,38,45,37],
[57,88,77,86,0,66,65,56],
[79,87,71,92,64,0,56,87],
[74,61,73,85,65,74,0,66],
[65,76,63,93,74,43,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,32,75,66,42,53],
[98,0,66,87,99,89,65,76],
[98,64,0,66,76,89,54,88],
[98,43,64,0,86,77,65,76],
[55,31,54,44,0,56,43,65],
[64,41,41,53,74,0,51,63],
[88,65,76,65,87,79,0,65],
[77,54,42,54,65,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,68,60,59,62,59],
[67,0,53,67,62,67,57,63],
[73,77,0,69,65,70,63,64],
[62,63,61,0,57,62,61,65],
[70,68,65,73,0,72,68,71],
[71,63,60,68,58,0,66,65],
[68,73,67,69,62,64,0,63],
[71,67,66,65,59,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,71,72,72,69,62,69],
[55,0,72,65,66,66,58,60],
[59,58,0,62,62,73,51,71],
[58,65,68,0,60,67,62,59],
[58,64,68,70,0,74,65,62],
[61,64,57,63,56,0,53,61],
[68,72,79,68,65,77,0,72],
[61,70,59,71,68,69,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,70,62,73,58,67],
[61,0,64,59,61,62,60,66],
[66,66,0,56,69,70,60,74],
[60,71,74,0,67,77,60,66],
[68,69,61,63,0,64,63,71],
[57,68,60,53,66,0,66,61],
[72,70,70,70,67,64,0,67],
[63,64,56,64,59,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,67,62,67,60,58],
[68,0,69,61,52,62,58,62],
[62,61,0,67,58,68,61,58],
[63,69,63,0,60,65,59,59],
[68,78,72,70,0,70,58,70],
[63,68,62,65,60,0,67,56],
[70,72,69,71,72,63,0,70],
[72,68,72,71,60,74,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,73,73,70,79,62,75],
[70,0,60,67,70,71,62,70],
[57,70,0,77,62,78,51,66],
[57,63,53,0,64,68,68,66],
[60,60,68,66,0,62,59,71],
[51,59,52,62,68,0,53,64],
[68,68,79,62,71,77,0,76],
[55,60,64,64,59,66,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,47,66,66,58,61],
[61,0,59,48,53,61,53,58],
[61,71,0,49,66,61,73,57],
[83,82,81,0,84,78,65,74],
[64,77,64,46,0,57,62,53],
[64,69,69,52,73,0,58,61],
[72,77,57,65,68,72,0,56],
[69,72,73,56,77,69,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,57,64,63,63,67,70],
[66,0,54,70,67,57,56,71],
[73,76,0,74,68,69,56,78],
[66,60,56,0,61,72,62,65],
[67,63,62,69,0,71,63,75],
[67,73,61,58,59,0,64,76],
[63,74,74,68,67,66,0,66],
[60,59,52,65,55,54,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,43,66,65,67,57],
[57,0,49,49,66,66,59,51],
[67,81,0,58,71,72,71,68],
[87,81,72,0,74,84,78,65],
[64,64,59,56,0,73,68,57],
[65,64,58,46,57,0,57,47],
[63,71,59,52,62,73,0,52],
[73,79,62,65,73,83,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,50,62,55,56,60,50],
[69,0,55,65,61,67,65,56],
[80,75,0,85,72,74,75,64],
[68,65,45,0,55,64,57,56],
[75,69,58,75,0,70,71,68],
[74,63,56,66,60,0,61,52],
[70,65,55,73,59,69,0,56],
[80,74,66,74,62,78,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,44,57,58,73,29],
[71,0,72,87,71,71,102,57],
[71,58,0,73,57,72,102,43],
[86,43,57,0,71,71,88,28],
[73,59,73,59,0,88,88,44],
[72,59,58,59,42,0,88,72],
[57,28,28,42,42,42,0,28],
[101,73,87,102,86,58,102,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,78,58,72,67,44,65],
[72,0,79,76,66,70,62,86],
[52,51,0,48,70,59,67,62],
[72,54,82,0,88,75,60,73],
[58,64,60,42,0,66,49,51],
[63,60,71,55,64,0,62,58],
[86,68,63,70,81,68,0,75],
[65,44,68,57,79,72,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,55,62,69,66,68],
[64,0,59,60,71,68,58,71],
[70,71,0,59,73,75,64,71],
[75,70,71,0,75,77,64,75],
[68,59,57,55,0,62,56,63],
[61,62,55,53,68,0,58,62],
[64,72,66,66,74,72,0,69],
[62,59,59,55,67,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,69,64,59,67,64,65],
[73,0,68,70,64,71,66,58],
[61,62,0,64,63,64,62,61],
[66,60,66,0,66,72,58,71],
[71,66,67,64,0,71,64,73],
[63,59,66,58,59,0,60,62],
[66,64,68,72,66,70,0,64],
[65,72,69,59,57,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,64,64,67,76,61],
[68,0,60,61,69,66,71,61],
[68,70,0,76,60,70,77,64],
[66,69,54,0,58,66,71,63],
[66,61,70,72,0,64,72,67],
[63,64,60,64,66,0,71,68],
[54,59,53,59,58,59,0,63],
[69,69,66,67,63,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,46,108,43,43,65],
[66,0,0,45,86,43,22,21],
[66,130,0,68,109,64,86,43],
[84,85,62,0,130,84,86,62],
[22,44,21,0,0,43,23,42],
[87,87,66,46,87,0,66,87],
[87,108,44,44,107,64,0,65],
[65,109,87,68,88,43,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,0,52,52,27,78,52],
[53,0,53,53,27,26,53,26],
[130,77,0,77,52,77,130,103],
[78,77,53,0,52,27,78,78],
[78,103,78,78,0,51,78,78],
[103,104,53,103,79,0,103,78],
[52,77,0,52,52,27,0,27],
[78,104,27,52,52,52,103,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,65,60,64,62,69],
[65,0,52,72,65,71,68,68],
[67,78,0,63,61,72,72,78],
[65,58,67,0,60,64,60,81],
[70,65,69,70,0,64,67,68],
[66,59,58,66,66,0,69,69],
[68,62,58,70,63,61,0,71],
[61,62,52,49,62,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,67,59,62,61,70,57],
[68,0,62,49,62,68,74,57],
[63,68,0,67,71,68,69,62],
[71,81,63,0,63,62,76,65],
[68,68,59,67,0,55,66,54],
[69,62,62,68,75,0,81,70],
[60,56,61,54,64,49,0,56],
[73,73,68,65,76,60,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,73,63,66,58,73,60],
[64,0,81,66,75,60,70,67],
[57,49,0,62,66,54,63,54],
[67,64,68,0,64,59,62,60],
[64,55,64,66,0,55,57,63],
[72,70,76,71,75,0,58,62],
[57,60,67,68,73,72,0,60],
[70,63,76,70,67,68,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,67,64,68,55,63,66],
[66,0,65,59,63,57,61,57],
[63,65,0,62,55,61,64,63],
[66,71,68,0,70,64,62,76],
[62,67,75,60,0,66,70,71],
[75,73,69,66,64,0,73,77],
[67,69,66,68,60,57,0,64],
[64,73,67,54,59,53,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,75,88,87,74,82,74],
[68,0,86,84,87,67,63,71],
[55,44,0,76,52,56,49,49],
[42,46,54,0,67,41,47,48],
[43,43,78,63,0,52,40,44],
[56,63,74,89,78,0,67,61],
[48,67,81,83,90,63,0,58],
[56,59,81,82,86,69,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,73,74,65,65,82],
[72,0,65,68,57,69,68,74],
[66,65,0,65,74,62,69,70],
[57,62,65,0,64,61,67,59],
[56,73,56,66,0,63,72,60],
[65,61,68,69,67,0,61,75],
[65,62,61,63,58,69,0,60],
[48,56,60,71,70,55,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,50,56,53,68,64],
[69,0,53,41,47,50,55,47],
[71,77,0,68,69,65,64,64],
[80,89,62,0,63,68,81,70],
[74,83,61,67,0,70,76,68],
[77,80,65,62,60,0,69,61],
[62,75,66,49,54,61,0,57],
[66,83,66,60,62,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,57,71,63,62,54,53],
[55,0,36,73,60,73,59,54],
[73,94,0,71,76,77,73,64],
[59,57,59,0,65,63,44,62],
[67,70,54,65,0,66,60,52],
[68,57,53,67,64,0,51,52],
[76,71,57,86,70,79,0,66],
[77,76,66,68,78,78,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,68,73,69,77,79],
[67,0,65,72,61,66,74,70],
[73,65,0,69,69,73,66,72],
[62,58,61,0,83,68,65,69],
[57,69,61,47,0,63,69,76],
[61,64,57,62,67,0,60,64],
[53,56,64,65,61,70,0,74],
[51,60,58,61,54,66,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,75,58,61,65,51],
[64,0,65,73,68,64,61,62],
[67,65,0,71,57,64,70,62],
[55,57,59,0,57,52,60,54],
[72,62,73,73,0,68,69,62],
[69,66,66,78,62,0,64,63],
[65,69,60,70,61,66,0,67],
[79,68,68,76,68,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,65,68,66,82,80],
[67,0,58,57,72,79,84,74],
[59,72,0,67,66,81,84,73],
[65,73,63,0,66,70,79,79],
[62,58,64,64,0,68,71,74],
[64,51,49,60,62,0,71,60],
[48,46,46,51,59,59,0,58],
[50,56,57,51,56,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,68,61,59,81,66,63],
[71,0,70,65,60,74,67,69],
[62,60,0,60,61,73,64,68],
[69,65,70,0,63,82,68,65],
[71,70,69,67,0,73,62,67],
[49,56,57,48,57,0,59,59],
[64,63,66,62,68,71,0,65],
[67,61,62,65,63,71,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,59,73,60,49,62,62],
[65,0,65,56,64,62,63,67],
[71,65,0,65,70,65,69,59],
[57,74,65,0,65,51,62,74],
[70,66,60,65,0,55,67,69],
[81,68,65,79,75,0,75,72],
[68,67,61,68,63,55,0,69],
[68,63,71,56,61,58,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,85,67,61,77,59,67],
[58,0,72,65,40,60,56,64],
[45,58,0,70,58,67,65,70],
[63,65,60,0,51,65,61,65],
[69,90,72,79,0,79,63,70],
[53,70,63,65,51,0,49,71],
[71,74,65,69,67,81,0,69],
[63,66,60,65,60,59,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,58,66,68,78,68,68],
[60,0,64,70,57,67,50,56],
[72,66,0,68,66,74,65,60],
[64,60,62,0,55,65,57,62],
[62,73,64,75,0,84,68,63],
[52,63,56,65,46,0,57,54],
[62,80,65,73,62,73,0,65],
[62,74,70,68,67,76,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,77,64,83,80,69,64],
[75,0,67,69,50,58,69,53],
[53,63,0,64,65,79,57,70],
[66,61,66,0,62,78,76,69],
[47,80,65,68,0,80,64,52],
[50,72,51,52,50,0,51,68],
[61,61,73,54,66,79,0,58],
[66,77,60,61,78,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,55,72,70,71,68,70],
[58,0,63,72,74,74,66,62],
[75,67,0,73,68,76,65,64],
[58,58,57,0,61,64,53,62],
[60,56,62,69,0,63,58,63],
[59,56,54,66,67,0,53,56],
[62,64,65,77,72,77,0,69],
[60,68,66,68,67,74,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,57,54,59,72,70],
[62,0,55,64,69,61,63,67],
[68,75,0,65,65,62,66,68],
[73,66,65,0,77,77,77,71],
[76,61,65,53,0,61,67,63],
[71,69,68,53,69,0,70,67],
[58,67,64,53,63,60,0,58],
[60,63,62,59,67,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,48,65,48,56,52,58],
[83,0,57,67,70,62,64,68],
[82,73,0,67,61,75,77,70],
[65,63,63,0,52,73,58,61],
[82,60,69,78,0,81,87,68],
[74,68,55,57,49,0,68,79],
[78,66,53,72,43,62,0,60],
[72,62,60,69,62,51,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,68,69,65,65,70,68],
[50,0,59,51,58,49,55,60],
[62,71,0,66,64,64,67,65],
[61,79,64,0,66,60,73,63],
[65,72,66,64,0,53,67,60],
[65,81,66,70,77,0,73,67],
[60,75,63,57,63,57,0,60],
[62,70,65,67,70,63,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,69,74,72,66,54,54],
[85,0,74,82,95,59,88,72],
[61,56,0,81,81,61,77,69],
[56,48,49,0,84,44,57,71],
[58,35,49,46,0,56,45,33],
[64,71,69,86,74,0,53,48],
[76,42,53,73,85,77,0,61],
[76,58,61,59,97,82,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,76,63,62,68,74,68],
[59,0,70,60,65,64,67,63],
[54,60,0,65,52,57,59,57],
[67,70,65,0,67,58,63,65],
[68,65,78,63,0,66,59,65],
[62,66,73,72,64,0,65,59],
[56,63,71,67,71,65,0,66],
[62,67,73,65,65,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,70,63,57,59,44,74],
[86,0,85,88,74,58,63,80],
[60,45,0,66,45,50,37,54],
[67,42,64,0,61,47,38,67],
[73,56,85,69,0,62,58,70],
[71,72,80,83,68,0,60,66],
[86,67,93,92,72,70,0,63],
[56,50,76,63,60,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,56,55,60,66,61],
[64,0,60,52,53,51,63,53],
[59,70,0,58,58,61,70,63],
[74,78,72,0,61,71,72,78],
[75,77,72,69,0,63,69,61],
[70,79,69,59,67,0,70,66],
[64,67,60,58,61,60,0,60],
[69,77,67,52,69,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,55,71,68,64,56,48],
[61,0,64,73,60,68,58,55],
[75,66,0,82,64,69,57,67],
[59,57,48,0,62,63,56,54],
[62,70,66,68,0,67,61,54],
[66,62,61,67,63,0,62,40],
[74,72,73,74,69,68,0,59],
[82,75,63,76,76,90,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,41,61,60,61,62,51],
[73,0,69,80,82,58,64,50],
[89,61,0,81,82,77,87,81],
[69,50,49,0,75,69,75,52],
[70,48,48,55,0,64,54,41],
[69,72,53,61,66,0,67,71],
[68,66,43,55,76,63,0,59],
[79,80,49,78,89,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,61,64,65,66,57,56],
[59,0,59,60,56,58,62,51],
[69,71,0,65,65,64,59,61],
[66,70,65,0,66,53,67,64],
[65,74,65,64,0,60,71,63],
[64,72,66,77,70,0,67,65],
[73,68,71,63,59,63,0,61],
[74,79,69,66,67,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,54,55,68,55,57,59],
[75,0,58,61,70,75,70,68],
[76,72,0,63,69,57,55,54],
[75,69,67,0,85,53,51,62],
[62,60,61,45,0,52,44,55],
[75,55,73,77,78,0,78,92],
[73,60,75,79,86,52,0,74],
[71,62,76,68,75,38,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,72,65,63,70,76],
[68,0,66,66,78,56,68,70],
[66,64,0,75,60,71,79,73],
[58,64,55,0,69,60,66,65],
[65,52,70,61,0,58,64,66],
[67,74,59,70,72,0,69,66],
[60,62,51,64,66,61,0,69],
[54,60,57,65,64,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,62,68,60,77,65,54],
[75,0,56,64,63,74,63,60],
[68,74,0,58,73,74,68,64],
[62,66,72,0,63,70,70,54],
[70,67,57,67,0,72,73,72],
[53,56,56,60,58,0,56,61],
[65,67,62,60,57,74,0,69],
[76,70,66,76,58,69,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,61,66,62,60,63],
[63,0,49,57,71,61,60,59],
[67,81,0,62,73,69,68,65],
[69,73,68,0,79,70,64,69],
[64,59,57,51,0,63,63,66],
[68,69,61,60,67,0,68,60],
[70,70,62,66,67,62,0,64],
[67,71,65,61,64,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,52,63,70,58,65,46],
[57,0,45,53,69,53,58,67],
[78,85,0,63,88,84,60,76],
[67,77,67,0,83,65,75,66],
[60,61,42,47,0,50,60,47],
[72,77,46,65,80,0,66,72],
[65,72,70,55,70,64,0,60],
[84,63,54,64,83,58,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,66,55,62,56,66],
[61,0,63,66,54,65,60,60],
[64,67,0,62,56,68,57,62],
[64,64,68,0,58,62,66,68],
[75,76,74,72,0,70,65,72],
[68,65,62,68,60,0,61,63],
[74,70,73,64,65,69,0,68],
[64,70,68,62,58,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,55,41,61,58,58],
[64,0,53,72,55,71,65,70],
[70,77,0,63,57,62,59,59],
[75,58,67,0,55,63,66,84],
[89,75,73,75,0,72,63,84],
[69,59,68,67,58,0,67,59],
[72,65,71,64,67,63,0,72],
[72,60,71,46,46,71,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,52,55,60,58,60,55],
[69,0,59,65,57,62,66,61],
[78,71,0,71,60,60,66,61],
[75,65,59,0,71,55,63,58],
[70,73,70,59,0,60,70,57],
[72,68,70,75,70,0,71,61],
[70,64,64,67,60,59,0,68],
[75,69,69,72,73,69,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,56,81,69,56,72,72],
[63,0,72,73,75,58,63,49],
[74,58,0,83,76,72,74,70],
[49,57,47,0,57,47,59,55],
[61,55,54,73,0,64,67,63],
[74,72,58,83,66,0,77,83],
[58,67,56,71,63,53,0,61],
[58,81,60,75,67,47,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,64,46,47,65,72],
[67,0,66,66,60,58,80,76],
[73,64,0,68,55,52,69,77],
[66,64,62,0,75,52,71,73],
[84,70,75,55,0,65,72,77],
[83,72,78,78,65,0,78,84],
[65,50,61,59,58,52,0,71],
[58,54,53,57,53,46,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,67,71,65,77,64,73],
[55,0,70,75,40,67,59,70],
[63,60,0,73,50,79,64,73],
[59,55,57,0,47,62,59,77],
[65,90,80,83,0,71,78,78],
[53,63,51,68,59,0,66,66],
[66,71,66,71,52,64,0,63],
[57,60,57,53,52,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,69,65,67,76,73],
[61,0,61,59,64,57,65,62],
[62,69,0,59,59,56,67,65],
[61,71,71,0,67,65,62,63],
[65,66,71,63,0,63,64,58],
[63,73,74,65,67,0,69,67],
[54,65,63,68,66,61,0,68],
[57,68,65,67,72,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,67,69,69,61,55],
[61,0,58,59,60,63,57,62],
[64,72,0,69,66,63,67,58],
[63,71,61,0,72,49,68,62],
[61,70,64,58,0,59,59,61],
[61,67,67,81,71,0,71,67],
[69,73,63,62,71,59,0,57],
[75,68,72,68,69,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,54,54,54,45,43,76],
[76,0,65,66,65,67,66,86],
[76,65,0,88,88,99,76,54],
[76,64,42,0,66,56,77,75],
[76,65,42,64,0,89,65,65],
[85,63,31,74,41,0,31,74],
[87,64,54,53,65,99,0,86],
[54,44,76,55,65,56,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,54,55,53,69,60,66],
[73,0,55,69,72,72,69,64],
[76,75,0,57,60,71,77,63],
[75,61,73,0,69,80,74,69],
[77,58,70,61,0,71,78,65],
[61,58,59,50,59,0,69,71],
[70,61,53,56,52,61,0,53],
[64,66,67,61,65,59,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,57,53,55,60,57,51],
[69,0,68,68,64,71,72,68],
[73,62,0,60,56,61,69,62],
[77,62,70,0,64,67,65,63],
[75,66,74,66,0,63,63,66],
[70,59,69,63,67,0,68,67],
[73,58,61,65,67,62,0,61],
[79,62,68,67,64,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,55,70,52,66,72,71],
[77,0,62,72,71,75,67,73],
[75,68,0,65,77,67,78,75],
[60,58,65,0,71,48,59,74],
[78,59,53,59,0,51,75,87],
[64,55,63,82,79,0,79,79],
[58,63,52,71,55,51,0,63],
[59,57,55,56,43,51,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,63,64,71,55,58],
[62,0,60,63,63,77,63,58],
[68,70,0,67,65,74,70,69],
[67,67,63,0,72,71,67,60],
[66,67,65,58,0,70,62,67],
[59,53,56,59,60,0,47,58],
[75,67,60,63,68,83,0,56],
[72,72,61,70,63,72,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,78,61,72,71,63,74],
[63,0,70,64,66,67,62,72],
[52,60,0,55,71,61,60,59],
[69,66,75,0,69,61,65,71],
[58,64,59,61,0,59,64,69],
[59,63,69,69,71,0,59,68],
[67,68,70,65,66,71,0,72],
[56,58,71,59,61,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,60,65,66,84,56,67],
[55,0,48,55,57,67,61,65],
[70,82,0,65,69,64,74,69],
[65,75,65,0,65,74,64,67],
[64,73,61,65,0,64,59,55],
[46,63,66,56,66,0,61,62],
[74,69,56,66,71,69,0,68],
[63,65,61,63,75,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,57,68,70,67,60,63],
[57,0,60,64,63,61,51,55],
[73,70,0,73,76,76,59,68],
[62,66,57,0,65,64,65,61],
[60,67,54,65,0,61,59,69],
[63,69,54,66,69,0,58,70],
[70,79,71,65,71,72,0,61],
[67,75,62,69,61,60,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,55,53,65,69,50],
[67,0,70,58,52,62,61,55],
[58,60,0,53,46,63,62,54],
[75,72,77,0,65,72,76,53],
[77,78,84,65,0,74,84,69],
[65,68,67,58,56,0,69,58],
[61,69,68,54,46,61,0,56],
[80,75,76,77,61,72,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,45,51,55,69,48,64],
[67,0,43,52,48,74,66,64],
[85,87,0,61,87,95,72,90],
[79,78,69,0,61,84,58,77],
[75,82,43,69,0,79,65,72],
[61,56,35,46,51,0,49,53],
[82,64,58,72,65,81,0,75],
[66,66,40,53,58,77,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,84,62,74,76,76,65],
[59,0,78,55,67,63,68,65],
[46,52,0,39,55,56,53,53],
[68,75,91,0,79,64,70,67],
[56,63,75,51,0,60,72,55],
[54,67,74,66,70,0,65,59],
[54,62,77,60,58,65,0,59],
[65,65,77,63,75,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,64,65,73,69,64,59],
[58,0,71,62,59,55,66,54],
[66,59,0,63,63,56,65,52],
[65,68,67,0,65,62,61,61],
[57,71,67,65,0,60,66,56],
[61,75,74,68,70,0,71,68],
[66,64,65,69,64,59,0,58],
[71,76,78,69,74,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,64,63,67,69,64],
[58,0,60,54,63,65,70,64],
[64,70,0,66,65,66,63,67],
[66,76,64,0,70,67,69,70],
[67,67,65,60,0,66,65,63],
[63,65,64,63,64,0,60,60],
[61,60,67,61,65,70,0,66],
[66,66,63,60,67,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,71,69,64,60,58,61],
[58,0,68,71,55,54,60,59],
[59,62,0,64,46,52,66,58],
[61,59,66,0,52,45,61,71],
[66,75,84,78,0,65,69,68],
[70,76,78,85,65,0,76,71],
[72,70,64,69,61,54,0,70],
[69,71,72,59,62,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,67,62,63,69,67],
[68,0,67,67,67,68,74,62],
[57,63,0,57,56,61,61,59],
[63,63,73,0,64,69,75,67],
[68,63,74,66,0,76,72,66],
[67,62,69,61,54,0,71,62],
[61,56,69,55,58,59,0,59],
[63,68,71,63,64,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,61,76,65,62,79,82],
[60,0,74,83,78,71,88,78],
[69,56,0,60,57,67,73,75],
[54,47,70,0,57,54,65,67],
[65,52,73,73,0,64,62,69],
[68,59,63,76,66,0,79,66],
[51,42,57,65,68,51,0,68],
[48,52,55,63,61,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,70,61,72,73,66],
[65,0,68,67,58,60,65,56],
[57,62,0,56,61,70,72,58],
[60,63,74,0,58,72,72,65],
[69,72,69,72,0,77,78,64],
[58,70,60,58,53,0,71,54],
[57,65,58,58,52,59,0,46],
[64,74,72,65,66,76,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,58,71,49,56,49,61],
[84,0,75,84,77,59,65,72],
[72,55,0,78,61,52,54,57],
[59,46,52,0,47,42,44,43],
[81,53,69,83,0,63,50,62],
[74,71,78,88,67,0,58,68],
[81,65,76,86,80,72,0,80],
[69,58,73,87,68,62,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,57,48,59,55,55,73],
[53,0,48,60,65,73,72,53],
[73,82,0,66,85,55,65,66],
[82,70,64,0,77,66,82,64],
[71,65,45,53,0,56,61,37],
[75,57,75,64,74,0,83,59],
[75,58,65,48,69,47,0,65],
[57,77,64,66,93,71,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,59,48,61,55,60,50],
[73,0,62,69,63,56,74,63],
[71,68,0,64,72,66,75,65],
[82,61,66,0,73,69,73,71],
[69,67,58,57,0,62,70,67],
[75,74,64,61,68,0,69,69],
[70,56,55,57,60,61,0,59],
[80,67,65,59,63,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,67,59,73,63,64,56],
[55,0,67,65,73,62,63,65],
[63,63,0,65,67,60,63,65],
[71,65,65,0,73,60,64,58],
[57,57,63,57,0,71,64,54],
[67,68,70,70,59,0,69,71],
[66,67,67,66,66,61,0,70],
[74,65,65,72,76,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,60,71,64,61,67],
[69,0,71,61,72,67,61,74],
[64,59,0,60,68,65,56,67],
[70,69,70,0,77,66,65,69],
[59,58,62,53,0,57,62,59],
[66,63,65,64,73,0,57,67],
[69,69,74,65,68,73,0,68],
[63,56,63,61,71,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,68,69,65,68,70,62],
[55,0,62,64,62,57,56,51],
[62,68,0,61,69,63,54,58],
[61,66,69,0,57,64,68,65],
[65,68,61,73,0,60,64,57],
[62,73,67,66,70,0,77,64],
[60,74,76,62,66,53,0,53],
[68,79,72,65,73,66,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,65,65,52,51,67,58],
[73,0,55,49,66,45,79,46],
[65,75,0,50,51,59,66,51],
[65,81,80,0,52,62,73,38],
[78,64,79,78,0,59,65,81],
[79,85,71,68,71,0,63,58],
[63,51,64,57,65,67,0,66],
[72,84,79,92,49,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,63,64,60,65,64],
[71,0,59,62,56,64,80,66],
[63,71,0,61,70,66,74,61],
[67,68,69,0,83,63,88,67],
[66,74,60,47,0,72,80,62],
[70,66,64,67,58,0,81,59],
[65,50,56,42,50,49,0,48],
[66,64,69,63,68,71,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,89,66,63,75,68,69],
[55,0,75,46,52,58,54,54],
[41,55,0,54,53,45,60,52],
[64,84,76,0,71,65,77,67],
[67,78,77,59,0,67,66,62],
[55,72,85,65,63,0,64,67],
[62,76,70,53,64,66,0,62],
[61,76,78,63,68,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,55,72,74,68,64,68],
[65,0,59,71,70,62,63,69],
[75,71,0,65,76,71,77,64],
[58,59,65,0,75,63,67,50],
[56,60,54,55,0,58,57,53],
[62,68,59,67,72,0,66,68],
[66,67,53,63,73,64,0,68],
[62,61,66,80,77,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,65,70,75,68,56],
[65,0,61,70,78,72,61,66],
[65,69,0,66,74,78,67,64],
[65,60,64,0,74,73,63,58],
[60,52,56,56,0,73,67,60],
[55,58,52,57,57,0,57,54],
[62,69,63,67,63,73,0,61],
[74,64,66,72,70,76,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,67,66,72,72,80,76],
[74,0,71,85,68,70,77,51],
[63,59,0,58,49,56,61,53],
[64,45,72,0,58,60,61,56],
[58,62,81,72,0,61,88,64],
[58,60,74,70,69,0,78,70],
[50,53,69,69,42,52,0,58],
[54,79,77,74,66,60,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,69,66,60,67,71,63],
[63,0,66,70,65,67,72,64],
[61,64,0,66,60,65,59,59],
[64,60,64,0,56,60,63,62],
[70,65,70,74,0,65,68,63],
[63,63,65,70,65,0,73,67],
[59,58,71,67,62,57,0,59],
[67,66,71,68,67,63,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,73,70,72,71,65,72],
[63,0,65,69,61,65,65,67],
[57,65,0,63,65,63,57,62],
[60,61,67,0,67,68,62,61],
[58,69,65,63,0,72,64,66],
[59,65,67,62,58,0,56,67],
[65,65,73,68,66,74,0,72],
[58,63,68,69,64,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,68,68,65,65,56],
[67,0,65,66,68,64,58,59],
[61,65,0,60,68,68,56,56],
[62,64,70,0,70,74,67,67],
[62,62,62,60,0,71,63,67],
[65,66,62,56,59,0,56,57],
[65,72,74,63,67,74,0,66],
[74,71,74,63,63,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,88,75,63,62,67,76],
[56,0,73,60,66,67,65,63],
[42,57,0,50,57,54,56,47],
[55,70,80,0,56,58,74,65],
[67,64,73,74,0,70,73,69],
[68,63,76,72,60,0,65,66],
[63,65,74,56,57,65,0,61],
[54,67,83,65,61,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,84,43,59,71,55,57],
[44,0,71,58,46,58,70,87],
[46,59,0,43,46,43,70,72],
[87,72,87,0,45,73,72,102],
[71,84,84,85,0,85,55,71],
[59,72,87,57,45,0,100,87],
[75,60,60,58,75,30,0,73],
[73,43,58,28,59,43,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,94,75,57,57,55,39],
[73,0,74,93,36,73,55,56],
[36,56,0,75,36,18,37,57],
[55,37,55,0,37,55,56,37],
[73,94,94,93,0,75,55,94],
[73,57,112,75,55,0,55,57],
[75,75,93,74,75,75,0,57],
[91,74,73,93,36,73,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,91,70,65,64,74,70],
[60,0,76,70,66,83,85,74],
[39,54,0,57,63,63,75,52],
[60,60,73,0,81,60,72,71],
[65,64,67,49,0,61,67,60],
[66,47,67,70,69,0,66,66],
[56,45,55,58,63,64,0,46],
[60,56,78,59,70,64,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,49,59,45,55,39,63],
[84,0,77,64,66,65,63,65],
[81,53,0,61,80,70,62,70],
[71,66,69,0,65,60,50,64],
[85,64,50,65,0,70,58,78],
[75,65,60,70,60,0,69,74],
[91,67,68,80,72,61,0,70],
[67,65,60,66,52,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,70,66,64,56,62,62],
[78,0,79,79,71,66,72,63],
[60,51,0,64,59,51,66,60],
[64,51,66,0,63,52,61,57],
[66,59,71,67,0,52,68,54],
[74,64,79,78,78,0,76,75],
[68,58,64,69,62,54,0,62],
[68,67,70,73,76,55,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,59,71,72,86,101,116],
[44,0,45,58,43,43,58,74],
[71,85,0,57,57,71,71,86],
[59,72,73,0,57,71,87,87],
[58,87,73,73,0,43,73,101],
[44,87,59,59,87,0,102,88],
[29,72,59,43,57,28,0,116],
[14,56,44,43,29,42,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,81,77,74,73,81],
[65,0,71,69,54,78,75,83],
[57,59,0,72,68,73,55,82],
[49,61,58,0,50,77,63,75],
[53,76,62,80,0,77,54,85],
[56,52,57,53,53,0,61,76],
[57,55,75,67,76,69,0,82],
[49,47,48,55,45,54,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,52,59,43,53,51],
[67,0,66,61,57,58,54,50],
[72,64,0,61,59,63,49,61],
[78,69,69,0,81,64,66,64],
[71,73,71,49,0,61,66,71],
[87,72,67,66,69,0,61,69],
[77,76,81,64,64,69,0,71],
[79,80,69,66,59,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,62,62,71,57,72],
[70,0,72,72,71,70,63,69],
[66,58,0,55,55,58,60,67],
[68,58,75,0,65,65,67,76],
[68,59,75,65,0,69,68,71],
[59,60,72,65,61,0,64,75],
[73,67,70,63,62,66,0,67],
[58,61,63,54,59,55,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,68,52,71,51,69,68],
[54,0,55,46,50,54,64,51],
[62,75,0,63,60,55,69,50],
[78,84,67,0,63,68,62,73],
[59,80,70,67,0,61,68,66],
[79,76,75,62,69,0,80,63],
[61,66,61,68,62,50,0,63],
[62,79,80,57,64,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,54,58,58,66,66],
[71,0,70,77,63,66,71,75],
[71,60,0,71,68,66,73,76],
[76,53,59,0,63,58,65,61],
[72,67,62,67,0,71,70,67],
[72,64,64,72,59,0,78,76],
[64,59,57,65,60,52,0,67],
[64,55,54,69,63,54,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_8_130.csv", index=False, header=False)