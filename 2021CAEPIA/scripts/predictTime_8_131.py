
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,62,67,71,65,72,71,68],
[69,0,68,73,63,72,66,65],
[64,63,0,71,63,67,76,63],
[60,58,60,0,60,61,65,58],
[66,68,68,71,0,74,69,61],
[59,59,64,70,57,0,70,69],
[60,65,55,66,62,61,0,62],
[63,66,68,73,70,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,61,54,61,59,57,57],
[77,0,61,67,71,66,67,69],
[70,70,0,61,65,72,65,57],
[77,64,70,0,74,68,68,70],
[70,60,66,57,0,67,61,68],
[72,65,59,63,64,0,63,54],
[74,64,66,63,70,68,0,68],
[74,62,74,61,63,77,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,58,70,70,73,69],
[62,0,66,61,60,57,66,66],
[65,65,0,60,64,65,65,70],
[73,70,71,0,65,74,65,75],
[61,71,67,66,0,72,72,69],
[61,74,66,57,59,0,66,71],
[58,65,66,66,59,65,0,64],
[62,65,61,56,62,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,68,76,62,70,70,67],
[54,0,44,58,49,51,63,55],
[63,87,0,70,72,76,84,72],
[55,73,61,0,62,64,68,63],
[69,82,59,69,0,62,69,70],
[61,80,55,67,69,0,69,75],
[61,68,47,63,62,62,0,67],
[64,76,59,68,61,56,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,61,59,72,63,70,64],
[72,0,72,72,71,59,64,61],
[70,59,0,73,69,59,64,55],
[72,59,58,0,68,54,54,57],
[59,60,62,63,0,57,64,65],
[68,72,72,77,74,0,65,73],
[61,67,67,77,67,66,0,59],
[67,70,76,74,66,58,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,50,68,67,84,72,73],
[53,0,30,37,62,87,71,81],
[81,101,0,58,91,102,93,93],
[63,94,73,0,73,90,89,98],
[64,69,40,58,0,82,51,63],
[47,44,29,41,49,0,34,59],
[59,60,38,42,80,97,0,75],
[58,50,38,33,68,72,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,60,51,48,60,53],
[71,0,52,53,47,60,71,57],
[66,79,0,63,52,47,64,65],
[71,78,68,0,51,64,67,65],
[80,84,79,80,0,76,62,68],
[83,71,84,67,55,0,72,77],
[71,60,67,64,69,59,0,54],
[78,74,66,66,63,54,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,67,60,63,57,58],
[70,0,69,64,74,70,63,72],
[71,62,0,72,68,70,68,61],
[64,67,59,0,63,63,58,63],
[71,57,63,68,0,58,60,55],
[68,61,61,68,73,0,68,68],
[74,68,63,73,71,63,0,65],
[73,59,70,68,76,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,92,71,62,60,66,67,65],
[39,0,51,39,43,52,49,53],
[60,80,0,59,82,45,50,58],
[69,92,72,0,89,40,64,71],
[71,88,49,42,0,62,36,60],
[65,79,86,91,69,0,64,65],
[64,82,81,67,95,67,0,72],
[66,78,73,60,71,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,69,62,68,63,75,77],
[64,0,60,66,64,72,74,75],
[62,71,0,68,72,74,75,72],
[69,65,63,0,62,50,63,63],
[63,67,59,69,0,66,75,70],
[68,59,57,81,65,0,79,68],
[56,57,56,68,56,52,0,58],
[54,56,59,68,61,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,69,67,67,66,77],
[59,0,63,66,59,57,53,72],
[66,68,0,65,63,60,61,66],
[62,65,66,0,61,71,62,75],
[64,72,68,70,0,68,63,74],
[64,74,71,60,63,0,59,76],
[65,78,70,69,68,72,0,78],
[54,59,65,56,57,55,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,58,70,59,62,70,59],
[71,0,61,70,56,64,65,59],
[73,70,0,77,67,61,74,77],
[61,61,54,0,55,55,65,70],
[72,75,64,76,0,68,73,72],
[69,67,70,76,63,0,62,64],
[61,66,57,66,58,69,0,65],
[72,72,54,61,59,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,69,57,62,59,51],
[73,0,52,72,58,65,64,51],
[73,79,0,80,67,61,72,77],
[62,59,51,0,57,53,50,52],
[74,73,64,74,0,71,82,69],
[69,66,70,78,60,0,76,77],
[72,67,59,81,49,55,0,63],
[80,80,54,79,62,54,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,62,71,79,71,69],
[58,0,49,54,68,66,68,60],
[65,82,0,74,80,75,74,72],
[69,77,57,0,75,74,72,66],
[60,63,51,56,0,65,67,58],
[52,65,56,57,66,0,62,56],
[60,63,57,59,64,69,0,67],
[62,71,59,65,73,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,54,63,68,72,59,74],
[73,0,71,56,72,72,61,72],
[77,60,0,62,68,74,55,62],
[68,75,69,0,71,71,65,68],
[63,59,63,60,0,72,70,64],
[59,59,57,60,59,0,56,67],
[72,70,76,66,61,75,0,61],
[57,59,69,63,67,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,64,67,63,63,69],
[65,0,59,72,67,66,74,71],
[67,72,0,73,64,61,77,66],
[67,59,58,0,72,48,59,58],
[64,64,67,59,0,52,52,66],
[68,65,70,83,79,0,73,75],
[68,57,54,72,79,58,0,63],
[62,60,65,73,65,56,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,70,60,81,77,65,79],
[58,0,67,66,65,59,58,89],
[61,64,0,71,64,62,66,82],
[71,65,60,0,66,69,57,79],
[50,66,67,65,0,50,60,86],
[54,72,69,62,81,0,68,65],
[66,73,65,74,71,63,0,86],
[52,42,49,52,45,66,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,98,42,70,70,45,60],
[62,0,79,59,62,74,43,57],
[33,52,0,51,54,58,40,41],
[89,72,80,0,77,52,76,85],
[61,69,77,54,0,68,61,65],
[61,57,73,79,63,0,57,61],
[86,88,91,55,70,74,0,67],
[71,74,90,46,66,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,73,71,64,69,71,70],
[55,0,72,63,59,63,67,67],
[58,59,0,66,69,69,76,62],
[60,68,65,0,63,64,73,69],
[67,72,62,68,0,70,72,66],
[62,68,62,67,61,0,64,68],
[60,64,55,58,59,67,0,54],
[61,64,69,62,65,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,68,62,58,72,62,82],
[81,0,66,69,65,70,67,89],
[63,65,0,53,74,71,65,75],
[69,62,78,0,58,67,69,88],
[73,66,57,73,0,65,66,96],
[59,61,60,64,66,0,61,81],
[69,64,66,62,65,70,0,84],
[49,42,56,43,35,50,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,52,56,68,65,44,47],
[87,0,75,52,66,48,59,59],
[79,56,0,45,48,71,53,63],
[75,79,86,0,67,70,59,78],
[63,65,83,64,0,70,57,56],
[66,83,60,61,61,0,71,76],
[87,72,78,72,74,60,0,72],
[84,72,68,53,75,55,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,72,82,76,77,75,66],
[73,0,69,75,77,76,59,67],
[59,62,0,70,72,74,66,66],
[49,56,61,0,68,72,55,55],
[55,54,59,63,0,54,55,57],
[54,55,57,59,77,0,68,57],
[56,72,65,76,76,63,0,64],
[65,64,65,76,74,74,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,79,61,72,73,75,73],
[56,0,77,70,61,78,65,77],
[52,54,0,74,65,69,53,72],
[70,61,57,0,61,68,65,62],
[59,70,66,70,0,65,63,64],
[58,53,62,63,66,0,64,64],
[56,66,78,66,68,67,0,59],
[58,54,59,69,67,67,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,66,82,70,80,66],
[67,0,65,71,79,66,72,75],
[65,66,0,67,73,64,71,70],
[65,60,64,0,66,54,67,66],
[49,52,58,65,0,57,66,56],
[61,65,67,77,74,0,74,78],
[51,59,60,64,65,57,0,62],
[65,56,61,65,75,53,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,58,66,66,68,70,62],
[76,0,64,69,70,70,78,71],
[73,67,0,63,72,67,66,73],
[65,62,68,0,68,69,71,75],
[65,61,59,63,0,62,68,67],
[63,61,64,62,69,0,69,69],
[61,53,65,60,63,62,0,66],
[69,60,58,56,64,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,75,63,62,71,82,79],
[67,0,60,55,77,44,57,72],
[56,71,0,79,69,52,69,73],
[68,76,52,0,66,78,37,65],
[69,54,62,65,0,51,67,74],
[60,87,79,53,80,0,63,80],
[49,74,62,94,64,68,0,63],
[52,59,58,66,57,51,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,55,68,56,58,63],
[69,0,66,53,61,59,63,63],
[71,65,0,63,75,62,61,73],
[76,78,68,0,75,70,70,62],
[63,70,56,56,0,62,61,64],
[75,72,69,61,69,0,69,69],
[73,68,70,61,70,62,0,64],
[68,68,58,69,67,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,58,55,68,62,66],
[71,0,70,70,60,74,64,69],
[65,61,0,56,62,65,60,70],
[73,61,75,0,62,73,62,72],
[76,71,69,69,0,79,59,73],
[63,57,66,58,52,0,67,68],
[69,67,71,69,72,64,0,71],
[65,62,61,59,58,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,51,67,57,68,67],
[69,0,71,62,72,71,60,74],
[61,60,0,62,60,59,48,56],
[80,69,69,0,68,68,65,68],
[64,59,71,63,0,59,56,63],
[74,60,72,63,72,0,61,70],
[63,71,83,66,75,70,0,76],
[64,57,75,63,68,61,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,65,73,66,74,69],
[71,0,62,52,57,58,64,67],
[64,69,0,58,59,65,62,60],
[66,79,73,0,51,62,64,66],
[58,74,72,80,0,66,61,66],
[65,73,66,69,65,0,72,76],
[57,67,69,67,70,59,0,61],
[62,64,71,65,65,55,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,69,76,89,69,63,73],
[48,0,59,69,84,75,59,71],
[62,72,0,79,88,74,61,77],
[55,62,52,0,86,67,66,61],
[42,47,43,45,0,54,38,44],
[62,56,57,64,77,0,58,68],
[68,72,70,65,93,73,0,71],
[58,60,54,70,87,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,77,58,67,64,58,57],
[63,0,68,70,68,86,75,71],
[54,63,0,56,68,65,65,57],
[73,61,75,0,71,75,63,68],
[64,63,63,60,0,62,49,58],
[67,45,66,56,69,0,50,55],
[73,56,66,68,82,81,0,68],
[74,60,74,63,73,76,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,55,48,44,40,57,49],
[90,0,73,69,71,77,64,75],
[76,58,0,64,48,64,78,61],
[83,62,67,0,55,74,73,69],
[87,60,83,76,0,76,76,70],
[91,54,67,57,55,0,71,64],
[74,67,53,58,55,60,0,59],
[82,56,70,62,61,67,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,31,52,51,42,76,54],
[79,0,47,55,67,47,81,54],
[100,84,0,70,87,86,86,55],
[79,76,61,0,72,72,81,72],
[80,64,44,59,0,74,55,51],
[89,84,45,59,57,0,71,56],
[55,50,45,50,76,60,0,44],
[77,77,76,59,80,75,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,58,66,69,76,65],
[65,0,70,61,73,65,82,75],
[71,61,0,72,80,74,89,76],
[73,70,59,0,74,86,89,66],
[65,58,51,57,0,68,62,81],
[62,66,57,45,63,0,67,69],
[55,49,42,42,69,64,0,75],
[66,56,55,65,50,62,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,75,83,64,79,67,70],
[55,0,64,69,57,65,60,61],
[56,67,0,79,74,73,68,69],
[48,62,52,0,51,60,67,49],
[67,74,57,80,0,80,69,76],
[52,66,58,71,51,0,63,59],
[64,71,63,64,62,68,0,61],
[61,70,62,82,55,72,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,77,77,64,64,73],
[65,0,70,76,71,71,70,61],
[65,61,0,75,77,66,61,70],
[54,55,56,0,67,59,51,66],
[54,60,54,64,0,61,57,56],
[67,60,65,72,70,0,62,68],
[67,61,70,80,74,69,0,74],
[58,70,61,65,75,63,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,53,90,61,46,58,66],
[53,0,51,77,61,49,48,55],
[78,80,0,90,77,63,72,60],
[41,54,41,0,56,47,38,49],
[70,70,54,75,0,66,62,48],
[85,82,68,84,65,0,80,65],
[73,83,59,93,69,51,0,41],
[65,76,71,82,83,66,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,62,87,92,69,60,69],
[56,0,45,52,55,74,55,46],
[69,86,0,75,91,73,87,65],
[44,79,56,0,64,68,64,65],
[39,76,40,67,0,55,63,54],
[62,57,58,63,76,0,71,43],
[71,76,44,67,68,60,0,32],
[62,85,66,66,77,88,99,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,63,75,74,78,74],
[67,0,44,70,66,77,65,61],
[65,87,0,81,92,95,92,85],
[68,61,50,0,81,71,84,75],
[56,65,39,50,0,65,68,56],
[57,54,36,60,66,0,62,73],
[53,66,39,47,63,69,0,62],
[57,70,46,56,75,58,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,57,66,66,86,93,80],
[44,0,40,51,57,39,43,34],
[74,91,0,65,66,77,79,71],
[65,80,66,0,72,81,92,74],
[65,74,65,59,0,55,66,49],
[45,92,54,50,76,0,75,67],
[38,88,52,39,65,56,0,56],
[51,97,60,57,82,64,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,72,64,65,72,58],
[64,0,59,58,61,65,71,66],
[67,72,0,70,63,70,76,58],
[59,73,61,0,61,62,58,63],
[67,70,68,70,0,57,73,59],
[66,66,61,69,74,0,74,64],
[59,60,55,73,58,57,0,54],
[73,65,73,68,72,67,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,62,73,66,58,71,74],
[55,0,84,100,99,78,86,91],
[69,47,0,71,54,75,84,66],
[58,31,60,0,63,43,62,59],
[65,32,77,68,0,51,53,61],
[73,53,56,88,80,0,88,75],
[60,45,47,69,78,43,0,47],
[57,40,65,72,70,56,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,32,53,49,69,52,94],
[69,0,49,53,57,68,53,76],
[99,82,0,44,60,78,74,106],
[78,78,87,0,49,73,77,95],
[82,74,71,82,0,64,50,104],
[62,63,53,58,67,0,60,102],
[79,78,57,54,81,71,0,88],
[37,55,25,36,27,29,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,61,64,70,70,65,63],
[53,0,67,59,59,64,58,55],
[70,64,0,65,75,67,64,62],
[67,72,66,0,68,79,64,66],
[61,72,56,63,0,63,67,60],
[61,67,64,52,68,0,59,61],
[66,73,67,67,64,72,0,70],
[68,76,69,65,71,70,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,68,62,64,60,64,68],
[58,0,63,59,65,64,59,60],
[63,68,0,71,69,66,71,59],
[69,72,60,0,69,63,67,71],
[67,66,62,62,0,58,67,66],
[71,67,65,68,73,0,71,70],
[67,72,60,64,64,60,0,61],
[63,71,72,60,65,61,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,90,58,63,83,75,91],
[60,0,108,83,57,72,95,100],
[41,23,0,58,58,32,70,24],
[73,48,73,0,88,100,87,85],
[68,74,73,43,0,67,96,60],
[48,59,99,31,64,0,76,91],
[56,36,61,44,35,55,0,65],
[40,31,107,46,71,40,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,78,93,63,46,35,72],
[68,0,46,56,55,61,65,48],
[53,85,0,66,57,70,61,36],
[38,75,65,0,70,49,69,15],
[68,76,74,61,0,61,63,29],
[85,70,61,82,70,0,82,57],
[96,66,70,62,68,49,0,51],
[59,83,95,116,102,74,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,56,48,50,68,55,64],
[76,0,55,61,57,73,56,74],
[75,76,0,69,61,80,74,71],
[83,70,62,0,68,75,55,66],
[81,74,70,63,0,67,65,69],
[63,58,51,56,64,0,51,61],
[76,75,57,76,66,80,0,59],
[67,57,60,65,62,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,75,69,57,63,67,56],
[66,0,83,84,71,82,64,83],
[56,48,0,62,54,60,51,48],
[62,47,69,0,58,66,53,54],
[74,60,77,73,0,76,61,57],
[68,49,71,65,55,0,58,59],
[64,67,80,78,70,73,0,75],
[75,48,83,77,74,72,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,56,57,85,54,68,78],
[81,0,65,68,77,64,62,73],
[75,66,0,60,70,60,62,68],
[74,63,71,0,80,68,72,63],
[46,54,61,51,0,48,51,53],
[77,67,71,63,83,0,69,71],
[63,69,69,59,80,62,0,71],
[53,58,63,68,78,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,65,76,68,64,75],
[63,0,66,72,75,73,65,75],
[66,65,0,72,75,75,69,73],
[66,59,59,0,68,70,61,71],
[55,56,56,63,0,60,64,75],
[63,58,56,61,71,0,58,75],
[67,66,62,70,67,73,0,74],
[56,56,58,60,56,56,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,59,45,50,61,55,48],
[83,0,68,67,70,67,71,63],
[72,63,0,62,49,53,63,49],
[86,64,69,0,62,77,79,68],
[81,61,82,69,0,76,60,60],
[70,64,78,54,55,0,61,58],
[76,60,68,52,71,70,0,61],
[83,68,82,63,71,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,44,52,49,53,81,58],
[67,0,57,47,62,53,89,73],
[87,74,0,67,59,51,90,64],
[79,84,64,0,57,58,87,62],
[82,69,72,74,0,53,107,54],
[78,78,80,73,78,0,86,54],
[50,42,41,44,24,45,0,25],
[73,58,67,69,77,77,106,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,56,91,80,85,66,47],
[71,0,44,78,66,73,41,65],
[75,87,0,80,84,87,64,66],
[40,53,51,0,52,84,60,62],
[51,65,47,79,0,76,54,49],
[46,58,44,47,55,0,40,59],
[65,90,67,71,77,91,0,69],
[84,66,65,69,82,72,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,64,71,77,69,72,72],
[42,0,73,61,59,56,57,65],
[67,58,0,74,76,61,67,69],
[60,70,57,0,63,70,62,69],
[54,72,55,68,0,56,58,62],
[62,75,70,61,75,0,70,65],
[59,74,64,69,73,61,0,74],
[59,66,62,62,69,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,71,64,70,60,74],
[66,0,73,76,68,66,59,71],
[67,58,0,66,56,63,64,64],
[60,55,65,0,71,66,58,53],
[67,63,75,60,0,66,68,60],
[61,65,68,65,65,0,60,63],
[71,72,67,73,63,71,0,74],
[57,60,67,78,71,68,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,73,50,82,85,66,75],
[72,0,82,58,72,75,60,76],
[58,49,0,46,77,70,77,83],
[81,73,85,0,64,85,64,88],
[49,59,54,67,0,66,62,73],
[46,56,61,46,65,0,49,55],
[65,71,54,67,69,82,0,74],
[56,55,48,43,58,76,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,55,57,47,48,58,63],
[80,0,68,64,76,62,63,62],
[76,63,0,61,52,52,55,64],
[74,67,70,0,73,65,60,68],
[84,55,79,58,0,54,54,66],
[83,69,79,66,77,0,70,65],
[73,68,76,71,77,61,0,62],
[68,69,67,63,65,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,55,63,61,58,56],
[65,0,69,55,68,66,64,67],
[60,62,0,48,53,44,51,55],
[76,76,83,0,64,68,61,69],
[68,63,78,67,0,66,53,61],
[70,65,87,63,65,0,71,54],
[73,67,80,70,78,60,0,66],
[75,64,76,62,70,77,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,67,66,63,69,73,73],
[56,0,68,67,65,62,68,60],
[64,63,0,58,60,54,63,64],
[65,64,73,0,62,60,63,70],
[68,66,71,69,0,61,69,67],
[62,69,77,71,70,0,77,71],
[58,63,68,68,62,54,0,64],
[58,71,67,61,64,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,80,72,75,74,81],
[66,0,78,84,76,65,68,72],
[62,53,0,83,63,63,66,69],
[51,47,48,0,49,50,48,58],
[59,55,68,82,0,58,70,65],
[56,66,68,81,73,0,74,66],
[57,63,65,83,61,57,0,68],
[50,59,62,73,66,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,73,65,66,85,74,66],
[43,0,48,42,46,62,53,28],
[58,83,0,69,55,64,76,57],
[66,89,62,0,53,69,59,55],
[65,85,76,78,0,74,62,40],
[46,69,67,62,57,0,51,47],
[57,78,55,72,69,80,0,36],
[65,103,74,76,91,84,95,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,82,66,71,73,57,61],
[67,0,81,67,76,80,70,63],
[49,50,0,64,57,61,60,51],
[65,64,67,0,54,72,58,56],
[60,55,74,77,0,69,65,58],
[58,51,70,59,62,0,49,61],
[74,61,71,73,66,82,0,72],
[70,68,80,75,73,70,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,69,73,65,67,79,70],
[54,0,60,66,67,62,71,57],
[62,71,0,73,63,64,76,66],
[58,65,58,0,64,68,75,62],
[66,64,68,67,0,66,65,74],
[64,69,67,63,65,0,75,61],
[52,60,55,56,66,56,0,55],
[61,74,65,69,57,70,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,51,82,72,51,73,58],
[67,0,50,73,63,89,64,73],
[80,81,0,82,82,65,52,77],
[49,58,49,0,76,78,37,80],
[59,68,49,55,0,81,40,60],
[80,42,66,53,50,0,76,74],
[58,67,79,94,91,55,0,82],
[73,58,54,51,71,57,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,45,76,58,65,56],
[66,0,81,60,60,79,43,78],
[63,50,0,68,56,71,44,80],
[86,71,63,0,67,50,67,80],
[55,71,75,64,0,57,61,79],
[73,52,60,81,74,0,61,65],
[66,88,87,64,70,70,0,81],
[75,53,51,51,52,66,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,79,68,65,67,75,80],
[62,0,68,64,66,62,61,70],
[52,63,0,65,58,64,59,72],
[63,67,66,0,66,63,69,74],
[66,65,73,65,0,67,68,76],
[64,69,67,68,64,0,68,78],
[56,70,72,62,63,63,0,72],
[51,61,59,57,55,53,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,63,53,63,51,46,50],
[72,0,75,61,70,62,61,67],
[68,56,0,41,50,57,45,55],
[78,70,90,0,83,66,65,65],
[68,61,81,48,0,72,69,63],
[80,69,74,65,59,0,75,63],
[85,70,86,66,62,56,0,64],
[81,64,76,66,68,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,79,62,66,65,73,65],
[63,0,80,56,68,73,65,67],
[52,51,0,49,64,60,61,66],
[69,75,82,0,81,75,59,69],
[65,63,67,50,0,68,61,58],
[66,58,71,56,63,0,67,69],
[58,66,70,72,70,64,0,72],
[66,64,65,62,73,62,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,61,50,54,65,66,57],
[58,0,64,68,56,59,67,74],
[70,67,0,67,64,66,67,74],
[81,63,64,0,69,67,69,56],
[77,75,67,62,0,77,67,75],
[66,72,65,64,54,0,65,65],
[65,64,64,62,64,66,0,71],
[74,57,57,75,56,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,76,73,65,85,73,62],
[54,0,66,63,47,66,70,52],
[55,65,0,70,50,63,58,58],
[58,68,61,0,67,78,81,66],
[66,84,81,64,0,78,77,65],
[46,65,68,53,53,0,69,60],
[58,61,73,50,54,62,0,58],
[69,79,73,65,66,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,78,85,84,69,77,47],
[51,0,78,69,73,67,50,72],
[53,53,0,63,58,47,66,56],
[46,62,68,0,53,46,49,60],
[47,58,73,78,0,59,65,49],
[62,64,84,85,72,0,80,57],
[54,81,65,82,66,51,0,63],
[84,59,75,71,82,74,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,82,68,42,68,107,82],
[74,0,53,25,14,35,79,60],
[49,78,0,64,38,64,89,78],
[63,106,67,0,42,64,68,106],
[89,117,93,89,0,89,65,89],
[63,96,67,67,42,0,96,77],
[24,52,42,63,66,35,0,77],
[49,71,53,25,42,54,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,80,69,66,69,76,69],
[68,0,77,75,68,78,84,57],
[51,54,0,60,60,54,65,46],
[62,56,71,0,67,62,81,49],
[65,63,71,64,0,65,74,49],
[62,53,77,69,66,0,66,58],
[55,47,66,50,57,65,0,59],
[62,74,85,82,82,73,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,48,48,42,40,50,38],
[78,0,62,65,65,65,71,65],
[83,69,0,65,51,57,71,55],
[83,66,66,0,74,61,82,68],
[89,66,80,57,0,60,72,74],
[91,66,74,70,71,0,76,63],
[81,60,60,49,59,55,0,65],
[93,66,76,63,57,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,67,78,90,85,51,100],
[76,0,71,98,79,52,63,115],
[64,60,0,89,84,62,56,107],
[53,33,42,0,65,32,55,81],
[41,52,47,66,0,52,51,76],
[46,79,69,99,79,0,75,87],
[80,68,75,76,80,56,0,97],
[31,16,24,50,55,44,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,49,55,59,71,55,69],
[64,0,83,83,66,77,82,76],
[82,48,0,71,49,74,64,73],
[76,48,60,0,46,77,69,54],
[72,65,82,85,0,80,68,66],
[60,54,57,54,51,0,49,61],
[76,49,67,62,63,82,0,76],
[62,55,58,77,65,70,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,66,66,73,56,58],
[68,0,64,60,71,67,62,67],
[72,67,0,58,62,64,64,65],
[65,71,73,0,74,73,70,76],
[65,60,69,57,0,66,64,62],
[58,64,67,58,65,0,69,65],
[75,69,67,61,67,62,0,70],
[73,64,66,55,69,66,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,48,73,65,64,46,84],
[74,0,73,78,63,79,50,87],
[83,58,0,71,71,66,42,77],
[58,53,60,0,55,70,40,78],
[66,68,60,76,0,70,70,93],
[67,52,65,61,61,0,39,87],
[85,81,89,91,61,92,0,73],
[47,44,54,53,38,44,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,77,64,76,76,64],
[66,0,61,77,69,74,75,67],
[63,70,0,71,63,68,67,64],
[54,54,60,0,71,63,67,63],
[67,62,68,60,0,71,67,64],
[55,57,63,68,60,0,63,58],
[55,56,64,64,64,68,0,60],
[67,64,67,68,67,73,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,61,74,81,75,66],
[63,0,55,68,75,67,74,69],
[65,76,0,65,76,61,78,74],
[70,63,66,0,84,69,85,82],
[57,56,55,47,0,58,70,63],
[50,64,70,62,73,0,71,71],
[56,57,53,46,61,60,0,58],
[65,62,57,49,68,60,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,78,64,67,67,72],
[70,0,68,76,69,74,65,73],
[67,63,0,77,65,69,54,69],
[53,55,54,0,53,63,50,62],
[67,62,66,78,0,74,62,73],
[64,57,62,68,57,0,63,63],
[64,66,77,81,69,68,0,81],
[59,58,62,69,58,68,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,58,59,70,78,67,67],
[75,0,65,70,67,85,68,78],
[73,66,0,67,60,89,61,73],
[72,61,64,0,55,90,47,59],
[61,64,71,76,0,87,61,68],
[53,46,42,41,44,0,51,52],
[64,63,70,84,70,80,0,68],
[64,53,58,72,63,79,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,72,64,72,64,66,61],
[61,0,72,71,83,65,75,68],
[59,59,0,44,71,59,69,42],
[67,60,87,0,75,68,73,56],
[59,48,60,56,0,53,55,40],
[67,66,72,63,78,0,62,65],
[65,56,62,58,76,69,0,55],
[70,63,89,75,91,66,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,57,40,61,65,48,71],
[81,0,78,58,90,74,78,98],
[74,53,0,41,46,66,45,75],
[91,73,90,0,62,82,97,87],
[70,41,85,69,0,52,52,50],
[66,57,65,49,79,0,94,71],
[83,53,86,34,79,37,0,71],
[60,33,56,44,81,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,59,67,78,57,58,51],
[56,0,58,58,70,57,76,55],
[72,73,0,74,71,61,84,66],
[64,73,57,0,78,50,73,56],
[53,61,60,53,0,65,81,53],
[74,74,70,81,66,0,77,65],
[73,55,47,58,50,54,0,46],
[80,76,65,75,78,66,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,52,67,77,60,80,82],
[48,0,58,51,43,66,58,52],
[79,73,0,73,69,81,74,65],
[64,80,58,0,70,68,76,70],
[54,88,62,61,0,66,77,78],
[71,65,50,63,65,0,77,70],
[51,73,57,55,54,54,0,63],
[49,79,66,61,53,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,66,74,71,69,66],
[66,0,76,52,67,62,67,60],
[70,55,0,59,75,66,67,62],
[65,79,72,0,76,64,74,70],
[57,64,56,55,0,59,60,61],
[60,69,65,67,72,0,61,62],
[62,64,64,57,71,70,0,59],
[65,71,69,61,70,69,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,92,60,119,92,63,89],
[62,0,63,92,71,92,63,116],
[39,68,0,32,65,47,53,112],
[71,39,99,0,102,102,92,80],
[12,60,66,29,0,83,39,80],
[39,39,84,29,48,0,77,83],
[68,68,78,39,92,54,0,119],
[42,15,19,51,51,48,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,65,65,65,67,66],
[63,0,73,74,70,75,65,71],
[56,58,0,60,54,60,65,59],
[66,57,71,0,60,71,67,67],
[66,61,77,71,0,69,68,63],
[66,56,71,60,62,0,59,60],
[64,66,66,64,63,72,0,63],
[65,60,72,64,68,71,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,54,60,62,70,56,63],
[73,0,74,71,63,76,67,75],
[77,57,0,63,65,72,72,72],
[71,60,68,0,77,62,62,73],
[69,68,66,54,0,65,68,70],
[61,55,59,69,66,0,61,66],
[75,64,59,69,63,70,0,67],
[68,56,59,58,61,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,69,74,65,73,75,75],
[70,0,75,57,52,55,69,74],
[62,56,0,57,47,63,62,72],
[57,74,74,0,63,67,70,76],
[66,79,84,68,0,65,75,78],
[58,76,68,64,66,0,77,80],
[56,62,69,61,56,54,0,71],
[56,57,59,55,53,51,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,87,77,74,52,19,33],
[44,0,47,50,51,52,34,61],
[44,84,0,48,45,46,41,55],
[54,81,83,0,87,37,46,46],
[57,80,86,44,0,42,55,88],
[79,79,85,94,89,0,77,60],
[112,97,90,85,76,54,0,53],
[98,70,76,85,43,71,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,74,59,77,67,81,77],
[59,0,70,58,63,51,69,62],
[57,61,0,51,48,45,58,66],
[72,73,80,0,76,61,65,75],
[54,68,83,55,0,64,60,78],
[64,80,86,70,67,0,82,71],
[50,62,73,66,71,49,0,72],
[54,69,65,56,53,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,69,55,61,71,52,91],
[77,0,95,73,74,64,81,88],
[62,36,0,68,56,69,69,60],
[76,58,63,0,70,70,73,82],
[70,57,75,61,0,75,56,82],
[60,67,62,61,56,0,49,89],
[79,50,62,58,75,82,0,78],
[40,43,71,49,49,42,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,68,56,72,72,69,79],
[60,0,68,64,55,55,65,70],
[63,63,0,43,58,55,56,60],
[75,67,88,0,58,68,88,61],
[59,76,73,73,0,61,70,73],
[59,76,76,63,70,0,67,70],
[62,66,75,43,61,64,0,59],
[52,61,71,70,58,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,58,66,66,69,76,79],
[55,0,47,66,61,57,65,66],
[73,84,0,67,64,67,71,75],
[65,65,64,0,69,66,65,69],
[65,70,67,62,0,64,69,60],
[62,74,64,65,67,0,65,59],
[55,66,60,66,62,66,0,63],
[52,65,56,62,71,72,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,69,70,72,62,64],
[65,0,73,80,67,64,63,77],
[60,58,0,65,56,79,61,69],
[62,51,66,0,61,70,52,73],
[61,64,75,70,0,71,75,76],
[59,67,52,61,60,0,58,66],
[69,68,70,79,56,73,0,67],
[67,54,62,58,55,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,75,84,63,66,72],
[64,0,68,65,78,74,70,76],
[65,63,0,65,73,69,64,72],
[56,66,66,0,80,69,52,65],
[47,53,58,51,0,54,45,50],
[68,57,62,62,77,0,72,69],
[65,61,67,79,86,59,0,83],
[59,55,59,66,81,62,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,68,74,68,65,74,66],
[59,0,68,73,67,63,63,52],
[63,63,0,71,68,61,59,64],
[57,58,60,0,61,60,52,63],
[63,64,63,70,0,60,64,60],
[66,68,70,71,71,0,71,62],
[57,68,72,79,67,60,0,58],
[65,79,67,68,71,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,51,75,64,71,49,67],
[80,0,57,75,46,73,58,75],
[80,74,0,83,65,78,84,93],
[56,56,48,0,44,79,53,77],
[67,85,66,87,0,96,59,86],
[60,58,53,52,35,0,61,71],
[82,73,47,78,72,70,0,86],
[64,56,38,54,45,60,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,63,65,67,70,66,76],
[60,0,69,60,69,58,61,67],
[68,62,0,65,70,68,61,66],
[66,71,66,0,60,60,60,58],
[64,62,61,71,0,54,58,65],
[61,73,63,71,77,0,66,70],
[65,70,70,71,73,65,0,61],
[55,64,65,73,66,61,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,75,52,62,56,62,54],
[71,0,71,60,58,61,49,57],
[56,60,0,60,64,55,56,54],
[79,71,71,0,75,70,56,57],
[69,73,67,56,0,68,70,63],
[75,70,76,61,63,0,64,64],
[69,82,75,75,61,67,0,66],
[77,74,77,74,68,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,68,57,68,60,65],
[71,0,62,64,67,65,56,70],
[69,69,0,63,69,64,75,71],
[63,67,68,0,76,68,63,74],
[74,64,62,55,0,70,76,77],
[63,66,67,63,61,0,65,66],
[71,75,56,68,55,66,0,69],
[66,61,60,57,54,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,47,69,73,59,70],
[69,0,56,53,61,58,63,58],
[65,75,0,73,83,78,70,79],
[84,78,58,0,79,84,74,87],
[62,70,48,52,0,54,55,72],
[58,73,53,47,77,0,48,68],
[72,68,61,57,76,83,0,73],
[61,73,52,44,59,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,79,69,65,68,61,70],
[56,0,71,72,58,59,67,60],
[52,60,0,59,61,54,59,61],
[62,59,72,0,53,64,51,59],
[66,73,70,78,0,60,59,54],
[63,72,77,67,71,0,65,75],
[70,64,72,80,72,66,0,75],
[61,71,70,72,77,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,78,76,68,63,64,65],
[55,0,66,66,58,68,63,63],
[53,65,0,62,61,63,63,61],
[55,65,69,0,64,69,62,59],
[63,73,70,67,0,74,71,76],
[68,63,68,62,57,0,82,69],
[67,68,68,69,60,49,0,66],
[66,68,70,72,55,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,72,70,73,65,58,66],
[56,0,74,68,70,74,65,64],
[59,57,0,56,73,66,66,61],
[61,63,75,0,58,74,63,67],
[58,61,58,73,0,73,75,57],
[66,57,65,57,58,0,65,61],
[73,66,65,68,56,66,0,62],
[65,67,70,64,74,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,57,65,59,70,55],
[70,0,62,64,68,70,59,68],
[63,69,0,68,65,60,67,65],
[74,67,63,0,65,64,69,60],
[66,63,66,66,0,72,65,59],
[72,61,71,67,59,0,62,54],
[61,72,64,62,66,69,0,62],
[76,63,66,71,72,77,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,66,61,74,73,62,68],
[47,0,45,49,60,56,48,48],
[65,86,0,68,70,75,77,71],
[70,82,63,0,72,76,74,66],
[57,71,61,59,0,70,59,66],
[58,75,56,55,61,0,68,54],
[69,83,54,57,72,63,0,68],
[63,83,60,65,65,77,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,70,68,70,62,66],
[65,0,63,62,60,62,59,62],
[64,68,0,76,77,64,67,74],
[61,69,55,0,64,65,55,59],
[63,71,54,67,0,68,63,65],
[61,69,67,66,63,0,63,70],
[69,72,64,76,68,68,0,71],
[65,69,57,72,66,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,61,56,70,68,67,66],
[76,0,67,71,80,83,64,79],
[70,64,0,56,84,78,55,74],
[75,60,75,0,80,75,80,76],
[61,51,47,51,0,64,57,68],
[63,48,53,56,67,0,59,62],
[64,67,76,51,74,72,0,69],
[65,52,57,55,63,69,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,76,69,61,66,66,51],
[85,0,74,56,59,67,64,56],
[55,57,0,71,70,38,43,37],
[62,75,60,0,83,72,57,47],
[70,72,61,48,0,61,64,45],
[65,64,93,59,70,0,69,68],
[65,67,88,74,67,62,0,38],
[80,75,94,84,86,63,93,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,66,70,59,68,48],
[63,0,68,63,79,69,75,59],
[56,63,0,67,71,51,71,62],
[65,68,64,0,70,53,70,65],
[61,52,60,61,0,60,51,48],
[72,62,80,78,71,0,72,66],
[63,56,60,61,80,59,0,38],
[83,72,69,66,83,65,93,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,70,73,62,67,67,59],
[59,0,65,63,68,60,66,64],
[61,66,0,63,59,61,65,59],
[58,68,68,0,64,67,67,67],
[69,63,72,67,0,68,73,60],
[64,71,70,64,63,0,69,59],
[64,65,66,64,58,62,0,62],
[72,67,72,64,71,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,59,64,70,66,66],
[67,0,53,70,72,68,59,61],
[62,78,0,78,58,72,64,70],
[72,61,53,0,60,58,60,58],
[67,59,73,71,0,66,67,61],
[61,63,59,73,65,0,66,65],
[65,72,67,71,64,65,0,76],
[65,70,61,73,70,66,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,0,0,35,40,5,0],
[74,0,74,35,74,40,74,35],
[131,57,0,40,35,92,5,52],
[131,96,91,0,74,92,44,91],
[96,57,96,57,0,92,57,52],
[91,91,39,39,39,0,39,39],
[126,57,126,87,74,92,0,52],
[131,96,79,40,79,92,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,75,77,36,57,75,75],
[56,0,84,51,66,74,42,69],
[56,47,0,41,43,17,43,59],
[54,80,90,0,72,89,57,72],
[95,65,88,59,0,70,65,81],
[74,57,114,42,61,0,26,42],
[56,89,88,74,66,105,0,114],
[56,62,72,59,50,89,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,56,59,66,66,75],
[72,0,59,56,63,60,68,63],
[71,72,0,69,58,71,73,73],
[75,75,62,0,74,74,71,75],
[72,68,73,57,0,64,66,69],
[65,71,60,57,67,0,73,68],
[65,63,58,60,65,58,0,59],
[56,68,58,56,62,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,72,67,64,68,69],
[68,0,62,63,57,70,53,57],
[60,69,0,61,65,66,60,62],
[59,68,70,0,67,63,64,69],
[64,74,66,64,0,66,59,67],
[67,61,65,68,65,0,60,68],
[63,78,71,67,72,71,0,72],
[62,74,69,62,64,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,62,72,62,68,65],
[72,0,66,68,70,67,71,64],
[67,65,0,60,71,64,62,58],
[69,63,71,0,64,62,60,66],
[59,61,60,67,0,61,68,61],
[69,64,67,69,70,0,66,64],
[63,60,69,71,63,65,0,67],
[66,67,73,65,70,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,79,68,101,88,57,81],
[47,0,62,49,69,61,62,60],
[52,69,0,57,99,72,70,70],
[63,82,74,0,80,77,65,69],
[30,62,32,51,0,52,55,61],
[43,70,59,54,79,0,59,50],
[74,69,61,66,76,72,0,72],
[50,71,61,62,70,81,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,54,77,58,60,62,65],
[55,0,57,48,51,44,46,63],
[77,74,0,66,57,62,70,64],
[54,83,65,0,75,63,62,77],
[73,80,74,56,0,67,59,74],
[71,87,69,68,64,0,69,77],
[69,85,61,69,72,62,0,78],
[66,68,67,54,57,54,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,58,61,63,57,62,65],
[75,0,71,62,73,65,69,79],
[73,60,0,53,76,64,72,81],
[70,69,78,0,93,77,73,65],
[68,58,55,38,0,64,67,51],
[74,66,67,54,67,0,70,80],
[69,62,59,58,64,61,0,68],
[66,52,50,66,80,51,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,99,71,67,43,57,50],
[46,0,96,66,69,39,55,67],
[32,35,0,43,41,40,56,68],
[60,65,88,0,83,56,88,90],
[64,62,90,48,0,22,33,72],
[88,92,91,75,109,0,58,79],
[74,76,75,43,98,73,0,94],
[81,64,63,41,59,52,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,55,70,69,57,68,74],
[57,0,55,55,64,56,53,63],
[76,76,0,63,75,70,70,75],
[61,76,68,0,70,63,70,80],
[62,67,56,61,0,55,59,71],
[74,75,61,68,76,0,67,72],
[63,78,61,61,72,64,0,77],
[57,68,56,51,60,59,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,75,79,62,71,72,77],
[66,0,68,64,64,66,62,72],
[56,63,0,65,66,66,63,70],
[52,67,66,0,64,62,68,63],
[69,67,65,67,0,66,61,76],
[60,65,65,69,65,0,65,72],
[59,69,68,63,70,66,0,72],
[54,59,61,68,55,59,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,61,78,51,61,63],
[67,0,73,70,69,66,66,65],
[71,58,0,71,64,64,69,67],
[70,61,60,0,72,59,64,67],
[53,62,67,59,0,60,63,61],
[80,65,67,72,71,0,64,67],
[70,65,62,67,68,67,0,62],
[68,66,64,64,70,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,45,71,72,74,83,65],
[48,0,55,44,57,60,67,48],
[86,76,0,57,91,79,75,78],
[60,87,74,0,92,79,72,75],
[59,74,40,39,0,71,72,78],
[57,71,52,52,60,0,76,57],
[48,64,56,59,59,55,0,58],
[66,83,53,56,53,74,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,70,68,63,77,80,68],
[47,0,52,59,45,64,48,48],
[61,79,0,78,59,75,62,67],
[63,72,53,0,43,70,57,59],
[68,86,72,88,0,82,63,84],
[54,67,56,61,49,0,52,69],
[51,83,69,74,68,79,0,69],
[63,83,64,72,47,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,45,54,33,52,45,44],
[86,0,43,59,50,52,53,35],
[86,88,0,78,81,49,71,64],
[77,72,53,0,88,63,70,56],
[98,81,50,43,0,50,77,59],
[79,79,82,68,81,0,78,58],
[86,78,60,61,54,53,0,73],
[87,96,67,75,72,73,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,96,84,67,62,102,95],
[53,0,84,88,79,86,84,74],
[35,47,0,53,73,64,64,74],
[47,43,78,0,83,60,81,73],
[64,52,58,48,0,64,60,81],
[69,45,67,71,67,0,66,79],
[29,47,67,50,71,65,0,70],
[36,57,57,58,50,52,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,64,71,61,61,68],
[62,0,69,63,66,67,60,59],
[65,62,0,59,66,69,67,65],
[67,68,72,0,67,67,69,64],
[60,65,65,64,0,66,65,66],
[70,64,62,64,65,0,65,73],
[70,71,64,62,66,66,0,68],
[63,72,66,67,65,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,72,64,88,80,87,85],
[52,0,42,57,70,87,67,73],
[59,89,0,67,84,100,80,81],
[67,74,64,0,79,74,68,79],
[43,61,47,52,0,81,64,80],
[51,44,31,57,50,0,49,64],
[44,64,51,63,67,82,0,54],
[46,58,50,52,51,67,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,60,63,73,69,65,65],
[57,0,56,55,69,58,60,58],
[71,75,0,69,62,73,63,62],
[68,76,62,0,72,67,66,69],
[58,62,69,59,0,68,54,68],
[62,73,58,64,63,0,60,62],
[66,71,68,65,77,71,0,70],
[66,73,69,62,63,69,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,59,62,61,62,71,64],
[58,0,48,57,63,64,50,56],
[72,83,0,68,68,68,62,67],
[69,74,63,0,64,64,62,63],
[70,68,63,67,0,68,68,69],
[69,67,63,67,63,0,65,62],
[60,81,69,69,63,66,0,66],
[67,75,64,68,62,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,71,76,62,84,61,51],
[85,0,75,90,89,90,65,68],
[60,56,0,71,77,90,66,49],
[55,41,60,0,59,60,51,44],
[69,42,54,72,0,69,45,57],
[47,41,41,71,62,0,45,41],
[70,66,65,80,86,86,0,79],
[80,63,82,87,74,90,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,74,68,72,72,63,70],
[53,0,66,51,59,60,53,60],
[57,65,0,57,52,59,59,68],
[63,80,74,0,67,67,66,64],
[59,72,79,64,0,59,57,65],
[59,71,72,64,72,0,61,66],
[68,78,72,65,74,70,0,78],
[61,71,63,67,66,65,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,71,67,69,64,59],
[66,0,70,65,68,72,68,66],
[59,61,0,63,73,66,65,69],
[60,66,68,0,65,64,64,63],
[64,63,58,66,0,71,60,62],
[62,59,65,67,60,0,59,54],
[67,63,66,67,71,72,0,65],
[72,65,62,68,69,77,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,72,66,48,56,65,71],
[76,0,75,56,66,66,77,59],
[59,56,0,61,47,67,71,74],
[65,75,70,0,79,83,72,78],
[83,65,84,52,0,72,60,55],
[75,65,64,48,59,0,69,57],
[66,54,60,59,71,62,0,60],
[60,72,57,53,76,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,69,67,69,59,62],
[67,0,59,66,59,55,65,57],
[63,72,0,68,68,66,61,64],
[62,65,63,0,66,64,62,58],
[64,72,63,65,0,66,64,66],
[62,76,65,67,65,0,60,62],
[72,66,70,69,67,71,0,59],
[69,74,67,73,65,69,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,85,78,80,51,80,97],
[78,0,131,78,80,97,59,97],
[46,0,0,78,46,51,27,78],
[53,53,53,0,80,72,80,99],
[51,51,85,51,0,51,32,78],
[80,34,80,59,80,0,61,99],
[51,72,104,51,99,70,0,97],
[34,34,53,32,53,32,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,71,73,69,72,67,62],
[57,0,66,66,71,61,45,58],
[60,65,0,69,71,76,72,64],
[58,65,62,0,62,66,65,67],
[62,60,60,69,0,71,62,65],
[59,70,55,65,60,0,58,67],
[64,86,59,66,69,73,0,57],
[69,73,67,64,66,64,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,62,67,76,57,58],
[66,0,64,75,68,73,53,72],
[60,67,0,85,73,78,58,73],
[69,56,46,0,67,63,50,56],
[64,63,58,64,0,81,50,69],
[55,58,53,68,50,0,61,54],
[74,78,73,81,81,70,0,61],
[73,59,58,75,62,77,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,57,68,70,71,64],
[69,0,69,53,71,62,68,68],
[69,62,0,58,66,65,72,71],
[74,78,73,0,68,77,66,63],
[63,60,65,63,0,72,70,58],
[61,69,66,54,59,0,65,64],
[60,63,59,65,61,66,0,52],
[67,63,60,68,73,67,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,84,46,35,35,81,93],
[102,0,62,61,64,66,92,84],
[47,69,0,54,34,29,55,65],
[85,70,77,0,58,85,108,101],
[96,67,97,73,0,56,90,105],
[96,65,102,46,75,0,119,91],
[50,39,76,23,41,12,0,72],
[38,47,66,30,26,40,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,64,64,63,60,66],
[58,0,64,59,67,62,52,56],
[64,67,0,71,66,70,67,67],
[67,72,60,0,61,69,58,71],
[67,64,65,70,0,68,62,64],
[68,69,61,62,63,0,48,61],
[71,79,64,73,69,83,0,60],
[65,75,64,60,67,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,54,59,60,47,54,65],
[73,0,59,60,62,58,56,72],
[77,72,0,60,64,53,58,61],
[72,71,71,0,61,56,56,60],
[71,69,67,70,0,69,60,75],
[84,73,78,75,62,0,66,73],
[77,75,73,75,71,65,0,64],
[66,59,70,71,56,58,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,67,69,57,49,56,63],
[78,0,83,72,73,66,64,78],
[64,48,0,62,52,55,53,56],
[62,59,69,0,56,46,57,64],
[74,58,79,75,0,68,71,76],
[82,65,76,85,63,0,74,74],
[75,67,78,74,60,57,0,62],
[68,53,75,67,55,57,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,68,80,69,66,62,63],
[73,0,75,91,81,70,68,62],
[63,56,0,78,65,56,58,60],
[51,40,53,0,46,54,54,55],
[62,50,66,85,0,61,77,70],
[65,61,75,77,70,0,63,74],
[69,63,73,77,54,68,0,60],
[68,69,71,76,61,57,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,57,68,68,58,63,57],
[66,0,62,60,57,60,64,60],
[74,69,0,62,66,74,73,72],
[63,71,69,0,72,73,68,64],
[63,74,65,59,0,71,69,66],
[73,71,57,58,60,0,69,58],
[68,67,58,63,62,62,0,61],
[74,71,59,67,65,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,56,65,50,57,59],
[71,0,69,55,65,62,65,68],
[67,62,0,59,68,55,63,62],
[75,76,72,0,75,66,75,60],
[66,66,63,56,0,55,65,59],
[81,69,76,65,76,0,76,68],
[74,66,68,56,66,55,0,64],
[72,63,69,71,72,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,83,63,65,62,55],
[70,0,64,82,62,57,56,55],
[69,67,0,83,65,59,75,47],
[48,49,48,0,64,41,55,47],
[68,69,66,67,0,53,66,57],
[66,74,72,90,78,0,60,69],
[69,75,56,76,65,71,0,62],
[76,76,84,84,74,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,65,60,60,61,47],
[63,0,57,60,62,43,51,52],
[66,74,0,76,65,61,69,74],
[66,71,55,0,65,50,59,47],
[71,69,66,66,0,62,48,61],
[71,88,70,81,69,0,58,66],
[70,80,62,72,83,73,0,66],
[84,79,57,84,70,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,68,68,71,65,73],
[69,0,71,69,63,64,69,77],
[58,60,0,63,60,70,54,66],
[63,62,68,0,59,55,60,71],
[63,68,71,72,0,68,62,69],
[60,67,61,76,63,0,62,71],
[66,62,77,71,69,69,0,73],
[58,54,65,60,62,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,86,72,79,89,71,64],
[62,0,73,76,72,75,72,73],
[45,58,0,71,77,66,60,60],
[59,55,60,0,76,74,61,57],
[52,59,54,55,0,53,63,54],
[42,56,65,57,78,0,62,53],
[60,59,71,70,68,69,0,50],
[67,58,71,74,77,78,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,73,74,59,70,71],
[67,0,73,68,74,59,61,67],
[68,58,0,66,74,64,62,68],
[58,63,65,0,75,66,66,61],
[57,57,57,56,0,62,52,59],
[72,72,67,65,69,0,59,65],
[61,70,69,65,79,72,0,62],
[60,64,63,70,72,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,68,60,64,55,79,62],
[72,0,79,60,62,60,68,73],
[63,52,0,57,49,50,68,60],
[71,71,74,0,69,65,78,69],
[67,69,82,62,0,66,76,58],
[76,71,81,66,65,0,82,74],
[52,63,63,53,55,49,0,56],
[69,58,71,62,73,57,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,48,75,58,52,73,44],
[58,0,68,84,82,67,72,67],
[83,63,0,79,72,46,81,51],
[56,47,52,0,55,55,63,56],
[73,49,59,76,0,55,77,48],
[79,64,85,76,76,0,79,67],
[58,59,50,68,54,52,0,48],
[87,64,80,75,83,64,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,63,63,61,76,56,53],
[72,0,62,59,62,75,67,57],
[68,69,0,61,78,72,53,68],
[68,72,70,0,72,77,69,62],
[70,69,53,59,0,68,50,54],
[55,56,59,54,63,0,51,53],
[75,64,78,62,81,80,0,68],
[78,74,63,69,77,78,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,80,48,79,64,66],
[69,0,58,58,53,54,65,42],
[65,73,0,75,51,62,68,52],
[51,73,56,0,41,63,77,35],
[83,78,80,90,0,57,78,46],
[52,77,69,68,74,0,70,42],
[67,66,63,54,53,61,0,42],
[65,89,79,96,85,89,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,62,58,64,52,51],
[61,0,56,76,61,61,57,67],
[66,75,0,68,73,64,59,64],
[69,55,63,0,56,59,48,55],
[73,70,58,75,0,59,65,59],
[67,70,67,72,72,0,62,63],
[79,74,72,83,66,69,0,63],
[80,64,67,76,72,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,57,65,70,63,69,56],
[62,0,60,66,76,60,71,57],
[74,71,0,77,71,71,86,62],
[66,65,54,0,61,64,65,55],
[61,55,60,70,0,62,62,49],
[68,71,60,67,69,0,81,68],
[62,60,45,66,69,50,0,56],
[75,74,69,76,82,63,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,53,52,43,46,55,51],
[77,0,72,84,78,66,71,63],
[78,59,0,50,65,60,66,63],
[79,47,81,0,55,74,68,64],
[88,53,66,76,0,88,79,75],
[85,65,71,57,43,0,73,65],
[76,60,65,63,52,58,0,72],
[80,68,68,67,56,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,75,67,71,70,69,50],
[66,0,75,65,79,68,78,68],
[56,56,0,74,74,45,64,68],
[64,66,57,0,94,57,55,71],
[60,52,57,37,0,38,35,52],
[61,63,86,74,93,0,65,65],
[62,53,67,76,96,66,0,56],
[81,63,63,60,79,66,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,32,38,48,34,42],
[94,0,67,72,57,84,62,62],
[94,64,0,38,47,75,54,53],
[99,59,93,0,77,102,70,62],
[93,74,84,54,0,89,55,69],
[83,47,56,29,42,0,62,53],
[97,69,77,61,76,69,0,75],
[89,69,78,69,62,78,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,59,57,63,56,56,60],
[76,0,68,65,71,63,66,76],
[72,63,0,62,77,59,54,64],
[74,66,69,0,69,63,61,67],
[68,60,54,62,0,73,64,67],
[75,68,72,68,58,0,63,77],
[75,65,77,70,67,68,0,80],
[71,55,67,64,64,54,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,103,108,59,59,104,82],
[41,0,62,67,67,67,45,57],
[28,69,0,116,30,49,61,28],
[23,64,15,0,15,37,72,23],
[72,64,101,116,0,98,94,88],
[72,64,82,94,33,0,72,88],
[27,86,70,59,37,59,0,27],
[49,74,103,108,43,43,104,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,55,73,55,58,68,60],
[74,0,62,85,70,59,66,64],
[76,69,0,77,68,65,63,60],
[58,46,54,0,62,55,62,45],
[76,61,63,69,0,57,72,59],
[73,72,66,76,74,0,64,67],
[63,65,68,69,59,67,0,66],
[71,67,71,86,72,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,60,60,66,62,60],
[71,0,71,62,70,72,70,61],
[63,60,0,56,57,68,61,47],
[71,69,75,0,68,70,68,57],
[71,61,74,63,0,72,72,72],
[65,59,63,61,59,0,63,65],
[69,61,70,63,59,68,0,62],
[71,70,84,74,59,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,81,76,77,71,69],
[59,0,73,65,70,79,63,69],
[66,58,0,69,69,66,70,68],
[50,66,62,0,66,70,65,68],
[55,61,62,65,0,65,66,59],
[54,52,65,61,66,0,58,57],
[60,68,61,66,65,73,0,57],
[62,62,63,63,72,74,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,59,62,75,70,60,60],
[54,0,63,60,73,56,60,57],
[72,68,0,56,74,61,67,64],
[69,71,75,0,82,76,62,74],
[56,58,57,49,0,62,43,40],
[61,75,70,55,69,0,61,66],
[71,71,64,69,88,70,0,55],
[71,74,67,57,91,65,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,65,64,65,66,67,51],
[77,0,74,65,76,68,60,66],
[66,57,0,59,75,57,60,57],
[67,66,72,0,72,71,59,55],
[66,55,56,59,0,62,55,53],
[65,63,74,60,69,0,63,52],
[64,71,71,72,76,68,0,68],
[80,65,74,76,78,79,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,75,70,72,70,76],
[67,0,60,69,73,72,81,72],
[62,71,0,73,70,76,72,71],
[56,62,58,0,63,71,72,63],
[61,58,61,68,0,69,77,73],
[59,59,55,60,62,0,65,63],
[61,50,59,59,54,66,0,59],
[55,59,60,68,58,68,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,27,62,27,49,64],
[66,0,70,62,62,84,84,84],
[59,61,0,0,44,29,31,66],
[104,69,131,0,121,29,131,123],
[69,69,87,10,0,39,87,49],
[104,47,102,102,92,0,124,101],
[82,47,100,0,44,7,0,44],
[67,47,65,8,82,30,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,73,65,65,67,64],
[68,0,68,69,67,68,66,55],
[63,63,0,67,67,72,65,61],
[58,62,64,0,54,58,58,55],
[66,64,64,77,0,71,62,67],
[66,63,59,73,60,0,61,60],
[64,65,66,73,69,70,0,64],
[67,76,70,76,64,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,72,67,62,70,66,62],
[60,0,73,68,70,66,65,70],
[59,58,0,65,66,57,59,62],
[64,63,66,0,62,64,56,65],
[69,61,65,69,0,66,60,68],
[61,65,74,67,65,0,62,62],
[65,66,72,75,71,69,0,68],
[69,61,69,66,63,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,92,92,65,79,94,87,70],
[39,0,26,60,53,49,35,49],
[39,105,0,93,81,57,92,93],
[66,71,38,0,58,84,40,73],
[52,78,50,73,0,50,70,50],
[37,82,74,47,81,0,68,81],
[44,96,39,91,61,63,0,52],
[61,82,38,58,81,50,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,55,39,22,45,57,22],
[69,0,73,69,52,93,88,84],
[76,58,0,56,39,61,95,60],
[92,62,75,0,22,41,91,33],
[109,79,92,109,0,112,112,54],
[86,38,70,90,19,0,90,55],
[74,43,36,40,19,41,0,51],
[109,47,71,98,77,76,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,78,88,91,95,80,88],
[67,0,83,60,85,84,54,93],
[53,48,0,56,62,57,64,60],
[43,71,75,0,69,66,58,62],
[40,46,69,62,0,74,56,79],
[36,47,74,65,57,0,40,64],
[51,77,67,73,75,91,0,69],
[43,38,71,69,52,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,56,56,8,91,56,91],
[40,0,56,88,40,96,80,123],
[75,75,0,40,75,123,67,75],
[75,43,91,0,51,99,83,99],
[123,91,56,80,0,131,80,115],
[40,35,8,32,0,0,0,35],
[75,51,64,48,51,131,0,83],
[40,8,56,32,16,96,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,65,77,54,63,57,58],
[49,0,44,70,55,54,64,64],
[66,87,0,96,71,78,58,80],
[54,61,35,0,53,64,46,69],
[77,76,60,78,0,71,72,87],
[68,77,53,67,60,0,57,75],
[74,67,73,85,59,74,0,67],
[73,67,51,62,44,56,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,85,64,67,72,77,67],
[63,0,77,59,68,52,81,64],
[46,54,0,39,50,50,51,43],
[67,72,92,0,77,67,72,62],
[64,63,81,54,0,60,76,60],
[59,79,81,64,71,0,79,54],
[54,50,80,59,55,52,0,51],
[64,67,88,69,71,77,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,69,70,63,66,64],
[69,0,70,70,70,62,58,66],
[68,61,0,57,71,64,62,60],
[62,61,74,0,68,68,53,66],
[61,61,60,63,0,64,56,64],
[68,69,67,63,67,0,62,66],
[65,73,69,78,75,69,0,68],
[67,65,71,65,67,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,60,14,48,59,32,48],
[113,0,42,69,48,103,87,48],
[71,89,0,71,48,75,103,75],
[117,62,60,0,76,103,60,76],
[83,83,83,55,0,115,83,115],
[72,28,56,28,16,0,56,44],
[99,44,28,71,48,75,0,48],
[83,83,56,55,16,87,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,77,68,70,60,75],
[71,0,67,84,83,64,61,70],
[62,64,0,70,68,57,76,79],
[54,47,61,0,64,51,61,66],
[63,48,63,67,0,54,61,67],
[61,67,74,80,77,0,70,75],
[71,70,55,70,70,61,0,66],
[56,61,52,65,64,56,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,32,59,42,72,38,54],
[89,0,61,77,96,85,79,91],
[99,70,0,61,90,94,76,92],
[72,54,70,0,58,57,52,82],
[89,35,41,73,0,80,46,58],
[59,46,37,74,51,0,46,69],
[93,52,55,79,85,85,0,91],
[77,40,39,49,73,62,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,87,81,65,67,76,72],
[58,0,72,70,71,60,68,62],
[44,59,0,78,55,63,62,55],
[50,61,53,0,58,42,55,68],
[66,60,76,73,0,71,76,69],
[64,71,68,89,60,0,71,78],
[55,63,69,76,55,60,0,68],
[59,69,76,63,62,53,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,61,22,42,53,42,30],
[109,0,80,67,38,109,48,109],
[70,51,0,45,64,87,22,34],
[109,64,86,0,84,65,84,72],
[89,93,67,47,0,84,45,76],
[78,22,44,66,47,0,47,30],
[89,83,109,47,86,84,0,89],
[101,22,97,59,55,101,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,71,70,76,65,80,70],
[54,0,51,51,51,50,60,63],
[60,80,0,57,50,52,58,54],
[61,80,74,0,57,57,66,69],
[55,80,81,74,0,60,72,55],
[66,81,79,74,71,0,84,58],
[51,71,73,65,59,47,0,47],
[61,68,77,62,76,73,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,70,51,61,78,68,65],
[57,0,72,59,44,68,66,72],
[61,59,0,49,69,65,46,63],
[80,72,82,0,60,82,66,60],
[70,87,62,71,0,79,70,54],
[53,63,66,49,52,0,56,68],
[63,65,85,65,61,75,0,62],
[66,59,68,71,77,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,60,56,82,78,71,68],
[47,0,43,43,56,61,34,64],
[71,88,0,61,71,79,60,66],
[75,88,70,0,62,84,48,66],
[49,75,60,69,0,84,73,66],
[53,70,52,47,47,0,56,62],
[60,97,71,83,58,75,0,77],
[63,67,65,65,65,69,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,52,63,61,54,55],
[70,0,74,58,68,68,66,61],
[67,57,0,58,57,60,61,58],
[79,73,73,0,68,70,73,64],
[68,63,74,63,0,70,70,56],
[70,63,71,61,61,0,71,70],
[77,65,70,58,61,60,0,67],
[76,70,73,67,75,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,59,56,54,51,71,64],
[60,0,57,58,42,40,75,52],
[72,74,0,77,59,64,75,75],
[75,73,54,0,54,55,79,64],
[77,89,72,77,0,77,77,62],
[80,91,67,76,54,0,78,78],
[60,56,56,52,54,53,0,61],
[67,79,56,67,69,53,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,62,64,61,62,74],
[70,0,63,69,73,65,66,72],
[65,68,0,69,72,69,59,74],
[69,62,62,0,75,61,65,67],
[67,58,59,56,0,65,59,70],
[70,66,62,70,66,0,65,71],
[69,65,72,66,72,66,0,74],
[57,59,57,64,61,60,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,56,64,63,62,61,47],
[74,0,60,72,74,64,79,58],
[75,71,0,70,72,62,80,62],
[67,59,61,0,66,71,73,63],
[68,57,59,65,0,68,66,61],
[69,67,69,60,63,0,74,69],
[70,52,51,58,65,57,0,56],
[84,73,69,68,70,62,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,49,54,60,69,62,66],
[53,0,62,62,82,37,71,72],
[82,69,0,57,65,59,72,63],
[77,69,74,0,62,63,79,67],
[71,49,66,69,0,62,80,89],
[62,94,72,68,69,0,88,77],
[69,60,59,52,51,43,0,72],
[65,59,68,64,42,54,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,68,59,67,69,69,72],
[56,0,64,59,59,59,54,63],
[63,67,0,64,73,59,57,69],
[72,72,67,0,78,65,65,60],
[64,72,58,53,0,59,61,56],
[62,72,72,66,72,0,74,61],
[62,77,74,66,70,57,0,67],
[59,68,62,71,75,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,88,75,66,68,60,71],
[65,0,79,63,64,63,67,65],
[43,52,0,56,52,58,48,62],
[56,68,75,0,63,64,61,71],
[65,67,79,68,0,61,71,69],
[63,68,73,67,70,0,72,79],
[71,64,83,70,60,59,0,61],
[60,66,69,60,62,52,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,65,82,80,55,63,50],
[81,0,68,75,73,79,60,46],
[66,63,0,70,75,70,55,70],
[49,56,61,0,76,74,63,46],
[51,58,56,55,0,44,46,52],
[76,52,61,57,87,0,67,52],
[68,71,76,68,85,64,0,65],
[81,85,61,85,79,79,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,77,78,66,63,78],
[65,0,67,73,74,71,62,72],
[60,64,0,76,68,59,66,72],
[54,58,55,0,62,58,46,60],
[53,57,63,69,0,74,65,75],
[65,60,72,73,57,0,63,68],
[68,69,65,85,66,68,0,69],
[53,59,59,71,56,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,61,67,60,61,64],
[66,0,65,66,64,58,55,59],
[66,66,0,59,63,64,64,56],
[70,65,72,0,65,65,70,64],
[64,67,68,66,0,66,69,63],
[71,73,67,66,65,0,68,72],
[70,76,67,61,62,63,0,56],
[67,72,75,67,68,59,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,54,60,57,59,58,61],
[69,0,60,64,71,80,73,65],
[77,71,0,68,62,74,68,69],
[71,67,63,0,71,70,58,67],
[74,60,69,60,0,63,71,68],
[72,51,57,61,68,0,61,64],
[73,58,63,73,60,70,0,69],
[70,66,62,64,63,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,64,73,70,71,64],
[64,0,51,58,61,57,71,68],
[68,80,0,63,63,64,75,63],
[67,73,68,0,70,59,72,60],
[58,70,68,61,0,57,70,62],
[61,74,67,72,74,0,74,61],
[60,60,56,59,61,57,0,59],
[67,63,68,71,69,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,71,66,73,61,71,62],
[59,0,64,69,75,68,58,64],
[60,67,0,69,71,70,62,67],
[65,62,62,0,64,59,68,64],
[58,56,60,67,0,62,60,64],
[70,63,61,72,69,0,65,69],
[60,73,69,63,71,66,0,68],
[69,67,64,67,67,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,49,79,81,45,55,72],
[86,0,74,89,64,82,75,78],
[82,57,0,81,72,57,59,68],
[52,42,50,0,67,39,40,62],
[50,67,59,64,0,51,63,73],
[86,49,74,92,80,0,79,81],
[76,56,72,91,68,52,0,73],
[59,53,63,69,58,50,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,59,66,65,81,79,53],
[54,0,49,63,57,74,61,58],
[72,82,0,71,63,80,84,65],
[65,68,60,0,66,85,77,57],
[66,74,68,65,0,93,73,66],
[50,57,51,46,38,0,55,43],
[52,70,47,54,58,76,0,51],
[78,73,66,74,65,88,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,81,72,65,72,62],
[69,0,58,71,67,59,69,64],
[65,73,0,89,75,70,76,67],
[50,60,42,0,57,42,50,49],
[59,64,56,74,0,65,73,64],
[66,72,61,89,66,0,66,62],
[59,62,55,81,58,65,0,55],
[69,67,64,82,67,69,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,74,81,55,65,59],
[66,0,79,78,84,63,65,79],
[59,52,0,58,48,33,45,48],
[57,53,73,0,68,55,59,61],
[50,47,83,63,0,52,49,55],
[76,68,98,76,79,0,69,65],
[66,66,86,72,82,62,0,66],
[72,52,83,70,76,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,68,69,73,72,63,70],
[64,0,68,72,70,71,65,68],
[63,63,0,70,73,63,57,66],
[62,59,61,0,64,76,62,60],
[58,61,58,67,0,65,56,55],
[59,60,68,55,66,0,53,59],
[68,66,74,69,75,78,0,65],
[61,63,65,71,76,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,65,62,62,60,61],
[61,0,56,58,58,64,51,49],
[62,75,0,71,70,75,65,67],
[66,73,60,0,62,76,61,61],
[69,73,61,69,0,72,57,63],
[69,67,56,55,59,0,59,59],
[71,80,66,70,74,72,0,65],
[70,82,64,70,68,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,51,67,59,72,76,60],
[73,0,59,67,67,71,67,68],
[80,72,0,62,58,54,71,60],
[64,64,69,0,70,61,72,56],
[72,64,73,61,0,58,75,53],
[59,60,77,70,73,0,81,53],
[55,64,60,59,56,50,0,59],
[71,63,71,75,78,78,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,67,48,61,46,50,44],
[78,0,97,67,65,57,67,74],
[64,34,0,47,60,53,53,48],
[83,64,84,0,65,77,66,64],
[70,66,71,66,0,61,52,64],
[85,74,78,54,70,0,86,80],
[81,64,78,65,79,45,0,60],
[87,57,83,67,67,51,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,59,76,61,76,77],
[67,0,65,66,73,55,72,78],
[61,66,0,64,72,63,78,82],
[72,65,67,0,68,64,69,79],
[55,58,59,63,0,54,58,70],
[70,76,68,67,77,0,67,62],
[55,59,53,62,73,64,0,78],
[54,53,49,52,61,69,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,69,68,82,59,86,79],
[56,0,48,54,64,47,68,68],
[62,83,0,59,69,66,76,67],
[63,77,72,0,76,72,73,76],
[49,67,62,55,0,66,65,79],
[72,84,65,59,65,0,85,79],
[45,63,55,58,66,46,0,68],
[52,63,64,55,52,52,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,66,58,60,62,47,61],
[79,0,76,67,78,73,54,65],
[65,55,0,52,62,67,46,59],
[73,64,79,0,62,65,67,62],
[71,53,69,69,0,70,51,53],
[69,58,64,66,61,0,49,54],
[84,77,85,64,80,82,0,78],
[70,66,72,69,78,77,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,74,68,66,73,70],
[65,0,56,70,70,51,67,69],
[67,75,0,76,66,61,65,66],
[57,61,55,0,62,54,55,55],
[63,61,65,69,0,61,64,68],
[65,80,70,77,70,0,71,79],
[58,64,66,76,67,60,0,72],
[61,62,65,76,63,52,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,69,74,71,72,69],
[60,0,69,71,63,57,69,71],
[66,62,0,64,72,65,64,59],
[62,60,67,0,66,68,63,66],
[57,68,59,65,0,66,65,63],
[60,74,66,63,65,0,70,66],
[59,62,67,68,66,61,0,62],
[62,60,72,65,68,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,62,58,41,56,58,57],
[72,0,70,69,65,81,71,70],
[69,61,0,70,60,72,62,68],
[73,62,61,0,70,64,76,73],
[90,66,71,61,0,73,73,84],
[75,50,59,67,58,0,72,77],
[73,60,69,55,58,59,0,66],
[74,61,63,58,47,54,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,66,69,66,48,42,53],
[55,0,52,52,59,52,51,50],
[65,79,0,71,43,51,57,56],
[62,79,60,0,74,44,58,60],
[65,72,88,57,0,71,66,77],
[83,79,80,87,60,0,63,67],
[89,80,74,73,65,68,0,70],
[78,81,75,71,54,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,55,68,60,60,61],
[69,0,62,67,69,59,64,63],
[67,69,0,66,72,66,73,63],
[76,64,65,0,64,63,73,60],
[63,62,59,67,0,57,57,60],
[71,72,65,68,74,0,59,67],
[71,67,58,58,74,72,0,64],
[70,68,68,71,71,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,121,91,73,98,96,73,63],
[10,0,59,45,48,35,42,37],
[40,72,0,37,63,46,47,62],
[58,86,94,0,88,67,64,78],
[33,83,68,43,0,69,54,56],
[35,96,85,64,62,0,46,64],
[58,89,84,67,77,85,0,77],
[68,94,69,53,75,67,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,71,60,69,65,66],
[75,0,66,86,61,80,75,77],
[68,65,0,86,67,86,73,69],
[60,45,45,0,59,78,64,61],
[71,70,64,72,0,76,77,69],
[62,51,45,53,55,0,67,64],
[66,56,58,67,54,64,0,65],
[65,54,62,70,62,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,62,66,76,70,81,68],
[51,0,64,51,62,63,71,57],
[69,67,0,70,75,75,78,63],
[65,80,61,0,77,78,80,62],
[55,69,56,54,0,60,69,62],
[61,68,56,53,71,0,75,63],
[50,60,53,51,62,56,0,59],
[63,74,68,69,69,68,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,58,66,62,63,56,67],
[65,0,62,68,70,64,67,64],
[73,69,0,70,64,80,68,73],
[65,63,61,0,60,62,65,70],
[69,61,67,71,0,68,62,60],
[68,67,51,69,63,0,62,60],
[75,64,63,66,69,69,0,72],
[64,67,58,61,71,71,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,43,56,82,48,67,54],
[73,0,59,69,72,78,78,62],
[88,72,0,62,88,65,91,82],
[75,62,69,0,72,62,69,54],
[49,59,43,59,0,51,50,47],
[83,53,66,69,80,0,83,81],
[64,53,40,62,81,48,0,51],
[77,69,49,77,84,50,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,68,66,81,81,65,65],
[60,0,54,60,70,62,63,68],
[63,77,0,71,81,71,61,65],
[65,71,60,0,86,77,68,67],
[50,61,50,45,0,57,56,47],
[50,69,60,54,74,0,60,59],
[66,68,70,63,75,71,0,71],
[66,63,66,64,84,72,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,85,57,58,44,78,67],
[69,0,55,53,56,70,85,73],
[46,76,0,67,33,45,74,68],
[74,78,64,0,67,58,74,73],
[73,75,98,64,0,73,68,89],
[87,61,86,73,58,0,84,76],
[53,46,57,57,63,47,0,52],
[64,58,63,58,42,55,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,62,73,61,65,66],
[67,0,63,63,72,63,67,71],
[71,68,0,63,70,59,77,68],
[69,68,68,0,73,66,69,58],
[58,59,61,58,0,61,69,61],
[70,68,72,65,70,0,72,61],
[66,64,54,62,62,59,0,57],
[65,60,63,73,70,70,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,67,80,68,69,83],
[61,0,66,66,79,64,70,71],
[67,65,0,69,66,56,62,74],
[64,65,62,0,67,63,60,81],
[51,52,65,64,0,64,55,67],
[63,67,75,68,67,0,75,75],
[62,61,69,71,76,56,0,69],
[48,60,57,50,64,56,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,80,51,46,66,71,59],
[101,0,69,84,78,100,57,107],
[51,62,0,61,59,82,81,75],
[80,47,70,0,78,88,51,78],
[85,53,72,53,0,39,56,86],
[65,31,49,43,92,0,63,77],
[60,74,50,80,75,68,0,74],
[72,24,56,53,45,54,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,63,64,62,59,59,62],
[71,0,63,57,57,69,62,64],
[68,68,0,70,63,64,73,64],
[67,74,61,0,68,58,65,76],
[69,74,68,63,0,73,72,69],
[72,62,67,73,58,0,68,70],
[72,69,58,66,59,63,0,71],
[69,67,67,55,62,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,51,53,55,55,63,47],
[82,0,54,69,72,65,68,68],
[80,77,0,58,65,98,71,61],
[78,62,73,0,72,76,74,73],
[76,59,66,59,0,68,65,55],
[76,66,33,55,63,0,61,47],
[68,63,60,57,66,70,0,56],
[84,63,70,58,76,84,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,80,65,66,55,68],
[70,0,54,75,73,52,78,58],
[73,77,0,87,63,65,66,63],
[51,56,44,0,52,56,67,65],
[66,58,68,79,0,63,66,68],
[65,79,66,75,68,0,68,65],
[76,53,65,64,65,63,0,62],
[63,73,68,66,63,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,64,58,70,64,69],
[66,0,68,73,68,66,65,72],
[60,63,0,67,67,55,70,69],
[67,58,64,0,63,67,59,65],
[73,63,64,68,0,68,63,68],
[61,65,76,64,63,0,65,60],
[67,66,61,72,68,66,0,65],
[62,59,62,66,63,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,74,73,67,79,71,65],
[64,0,72,71,67,70,64,66],
[57,59,0,66,63,68,61,56],
[58,60,65,0,71,69,62,62],
[64,64,68,60,0,65,59,60],
[52,61,63,62,66,0,61,54],
[60,67,70,69,72,70,0,60],
[66,65,75,69,71,77,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,67,66,56,87,75],
[75,0,62,67,54,58,72,64],
[68,69,0,43,64,64,83,62],
[64,64,88,0,71,75,81,85],
[65,77,67,60,0,68,78,81],
[75,73,67,56,63,0,77,77],
[44,59,48,50,53,54,0,59],
[56,67,69,46,50,54,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,71,67,72,64,70],
[63,0,66,58,71,69,66,74],
[64,65,0,69,65,74,65,62],
[60,73,62,0,77,69,71,74],
[64,60,66,54,0,67,70,66],
[59,62,57,62,64,0,65,71],
[67,65,66,60,61,66,0,67],
[61,57,69,57,65,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,59,68,84,73,72,78],
[66,0,72,82,63,59,82,70],
[72,59,0,79,70,102,52,69],
[63,49,52,0,72,75,56,74],
[47,68,61,59,0,80,53,52],
[58,72,29,56,51,0,35,62],
[59,49,79,75,78,96,0,52],
[53,61,62,57,79,69,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,72,76,69,79,74,56],
[60,0,64,83,53,55,57,55],
[59,67,0,70,37,61,65,53],
[55,48,61,0,43,68,62,58],
[62,78,94,88,0,66,78,73],
[52,76,70,63,65,0,67,61],
[57,74,66,69,53,64,0,54],
[75,76,78,73,58,70,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,81,65,62,64,66,69],
[69,0,62,56,56,50,53,60],
[50,69,0,53,62,69,48,62],
[66,75,78,0,59,71,66,73],
[69,75,69,72,0,77,58,64],
[67,81,62,60,54,0,62,69],
[65,78,83,65,73,69,0,76],
[62,71,69,58,67,62,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,69,70,74,80,55,70],
[63,0,64,66,60,66,63,65],
[62,67,0,68,77,78,72,78],
[61,65,63,0,59,72,60,73],
[57,71,54,72,0,79,55,76],
[51,65,53,59,52,0,56,65],
[76,68,59,71,76,75,0,74],
[61,66,53,58,55,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,81,87,73,77,72,60],
[46,0,70,68,59,58,68,67],
[50,61,0,58,63,52,63,55],
[44,63,73,0,64,56,68,62],
[58,72,68,67,0,59,68,58],
[54,73,79,75,72,0,82,59],
[59,63,68,63,63,49,0,61],
[71,64,76,69,73,72,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,73,54,53,65,64],
[75,0,69,79,63,59,69,63],
[74,62,0,74,65,74,65,68],
[58,52,57,0,60,61,61,64],
[77,68,66,71,0,63,64,70],
[78,72,57,70,68,0,66,74],
[66,62,66,70,67,65,0,64],
[67,68,63,67,61,57,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,69,57,63,69,64,70],
[63,0,73,72,66,64,80,74],
[62,58,0,60,65,63,67,64],
[74,59,71,0,68,65,71,72],
[68,65,66,63,0,68,73,64],
[62,67,68,66,63,0,63,70],
[67,51,64,60,58,68,0,62],
[61,57,67,59,67,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,67,68,67,50,65],
[69,0,65,82,77,71,68,71],
[57,66,0,68,72,56,63,60],
[64,49,63,0,64,54,51,60],
[63,54,59,67,0,66,60,72],
[64,60,75,77,65,0,62,67],
[81,63,68,80,71,69,0,63],
[66,60,71,71,59,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,65,72,64,64,69],
[70,0,63,67,71,64,66,73],
[63,68,0,61,63,61,63,66],
[66,64,70,0,72,69,70,63],
[59,60,68,59,0,60,65,56],
[67,67,70,62,71,0,68,64],
[67,65,68,61,66,63,0,68],
[62,58,65,68,75,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,64,62,70,75,63,64],
[54,0,59,68,64,75,68,67],
[67,72,0,67,73,78,63,60],
[69,63,64,0,61,77,61,58],
[61,67,58,70,0,74,60,57],
[56,56,53,54,57,0,51,53],
[68,63,68,70,71,80,0,63],
[67,64,71,73,74,78,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,63,71,71,65,67,71],
[71,0,62,60,68,71,70,72],
[68,69,0,61,60,66,62,69],
[60,71,70,0,72,67,67,64],
[60,63,71,59,0,65,63,75],
[66,60,65,64,66,0,67,69],
[64,61,69,64,68,64,0,64],
[60,59,62,67,56,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,81,71,56,56,63,61],
[60,0,65,66,52,47,51,48],
[50,66,0,67,60,57,62,55],
[60,65,64,0,59,60,69,59],
[75,79,71,72,0,74,66,60],
[75,84,74,71,57,0,70,58],
[68,80,69,62,65,61,0,69],
[70,83,76,72,71,73,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,74,95,85,74,65,75],
[54,0,58,101,86,67,61,72],
[57,73,0,85,85,69,67,72],
[36,30,46,0,40,59,46,59],
[46,45,46,91,0,63,55,77],
[57,64,62,72,68,0,48,57],
[66,70,64,85,76,83,0,64],
[56,59,59,72,54,74,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,53,58,67,51,53,74],
[62,0,59,61,71,60,74,52],
[78,72,0,61,74,59,80,66],
[73,70,70,0,78,63,65,69],
[64,60,57,53,0,57,68,64],
[80,71,72,68,74,0,65,73],
[78,57,51,66,63,66,0,63],
[57,79,65,62,67,58,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,63,64,70,69,75,74],
[51,0,62,60,57,72,67,69],
[68,69,0,63,59,70,73,69],
[67,71,68,0,59,66,81,73],
[61,74,72,72,0,64,77,77],
[62,59,61,65,67,0,71,69],
[56,64,58,50,54,60,0,62],
[57,62,62,58,54,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,73,76,74,67,63,79],
[73,0,62,70,79,70,88,83],
[58,69,0,73,74,69,78,74],
[55,61,58,0,76,69,49,74],
[57,52,57,55,0,58,57,68],
[64,61,62,62,73,0,52,75],
[68,43,53,82,74,79,0,82],
[52,48,57,57,63,56,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,81,73,71,67,58,84],
[60,0,68,55,63,66,72,71],
[50,63,0,57,50,54,56,76],
[58,76,74,0,51,61,63,72],
[60,68,81,80,0,62,63,83],
[64,65,77,70,69,0,59,64],
[73,59,75,68,68,72,0,79],
[47,60,55,59,48,67,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,73,71,79,65,73,77],
[61,0,87,69,59,62,82,78],
[58,44,0,58,47,42,59,43],
[60,62,73,0,50,68,70,57],
[52,72,84,81,0,68,66,58],
[66,69,89,63,63,0,67,67],
[58,49,72,61,65,64,0,39],
[54,53,88,74,73,64,92,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,64,68,71,74,65],
[63,0,70,64,73,84,73,72],
[60,61,0,51,80,73,64,69],
[67,67,80,0,82,80,69,65],
[63,58,51,49,0,75,80,50],
[60,47,58,51,56,0,61,47],
[57,58,67,62,51,70,0,59],
[66,59,62,66,81,84,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,61,64,59,64,66],
[75,0,71,65,68,69,76,72],
[68,60,0,60,65,66,65,63],
[70,66,71,0,69,65,71,67],
[67,63,66,62,0,73,65,63],
[72,62,65,66,58,0,67,65],
[67,55,66,60,66,64,0,64],
[65,59,68,64,68,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,60,66,71,60,69,47],
[58,0,59,68,49,65,61,42],
[71,72,0,55,70,71,61,66],
[65,63,76,0,69,60,63,59],
[60,82,61,62,0,61,55,58],
[71,66,60,71,70,0,53,56],
[62,70,70,68,76,78,0,68],
[84,89,65,72,73,75,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,62,71,65,58,59,53],
[75,0,78,80,79,72,75,64],
[69,53,0,68,66,70,60,58],
[60,51,63,0,64,59,57,46],
[66,52,65,67,0,57,64,51],
[73,59,61,72,74,0,64,70],
[72,56,71,74,67,67,0,62],
[78,67,73,85,80,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,78,64,60,54,52,69],
[70,0,85,62,76,51,74,69],
[53,46,0,56,60,54,70,56],
[67,69,75,0,72,54,83,65],
[71,55,71,59,0,57,59,55],
[77,80,77,77,74,0,83,58],
[79,57,61,48,72,48,0,45],
[62,62,75,66,76,73,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,57,63,68,70,60],
[70,0,69,52,69,78,77,69],
[66,62,0,47,53,63,68,59],
[74,79,84,0,65,77,79,84],
[68,62,78,66,0,76,74,78],
[63,53,68,54,55,0,80,67],
[61,54,63,52,57,51,0,63],
[71,62,72,47,53,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,57,64,61,70,63,65],
[62,0,65,67,64,58,69,65],
[74,66,0,66,73,73,65,75],
[67,64,65,0,75,78,65,68],
[70,67,58,56,0,73,65,60],
[61,73,58,53,58,0,66,61],
[68,62,66,66,66,65,0,62],
[66,66,56,63,71,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,54,51,54,64,63,55],
[74,0,62,56,56,67,61,72],
[77,69,0,64,64,56,69,73],
[80,75,67,0,59,71,63,79],
[77,75,67,72,0,75,58,77],
[67,64,75,60,56,0,60,83],
[68,70,62,68,73,71,0,75],
[76,59,58,52,54,48,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,61,76,57,62,69,62],
[78,0,68,78,62,87,70,70],
[70,63,0,83,49,71,63,71],
[55,53,48,0,57,51,46,67],
[74,69,82,74,0,73,53,69],
[69,44,60,80,58,0,69,70],
[62,61,68,85,78,62,0,73],
[69,61,60,64,62,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,68,55,64,70,61],
[64,0,75,65,62,71,69,64],
[66,56,0,66,59,59,67,65],
[63,66,65,0,63,62,67,74],
[76,69,72,68,0,65,69,70],
[67,60,72,69,66,0,65,67],
[61,62,64,64,62,66,0,66],
[70,67,66,57,61,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,55,75,59,60,71],
[63,0,62,62,76,71,62,72],
[59,69,0,58,56,63,64,76],
[76,69,73,0,81,61,71,72],
[56,55,75,50,0,57,60,72],
[72,60,68,70,74,0,73,74],
[71,69,67,60,71,58,0,76],
[60,59,55,59,59,57,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,69,69,69,58,66,71],
[69,0,70,75,77,62,71,75],
[62,61,0,65,58,58,62,70],
[62,56,66,0,64,58,61,68],
[62,54,73,67,0,53,53,70],
[73,69,73,73,78,0,65,71],
[65,60,69,70,78,66,0,72],
[60,56,61,63,61,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,69,75,55,62,78,52],
[79,0,44,55,70,103,67,58],
[62,87,0,93,80,88,54,60],
[56,76,38,0,73,78,67,55],
[76,61,51,58,0,84,49,66],
[69,28,43,53,47,0,49,48],
[53,64,77,64,82,82,0,55],
[79,73,71,76,65,83,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,48,54,50,66,66,66],
[71,0,66,64,59,57,57,72],
[83,65,0,68,58,64,61,73],
[77,67,63,0,63,59,65,72],
[81,72,73,68,0,54,47,66],
[65,74,67,72,77,0,60,64],
[65,74,70,66,84,71,0,85],
[65,59,58,59,65,67,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,63,68,73,67,85,68],
[42,0,48,59,56,38,57,53],
[68,83,0,69,62,82,84,75],
[63,72,62,0,72,68,74,66],
[58,75,69,59,0,69,66,69],
[64,93,49,63,62,0,74,62],
[46,74,47,57,65,57,0,65],
[63,78,56,65,62,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,78,63,66,65,51],
[66,0,67,72,60,80,63,74],
[65,64,0,78,67,77,73,76],
[53,59,53,0,60,63,66,71],
[68,71,64,71,0,72,71,56],
[65,51,54,68,59,0,68,68],
[66,68,58,65,60,63,0,62],
[80,57,55,60,75,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,79,56,77,76,73,69],
[64,0,75,69,76,70,68,66],
[52,56,0,54,63,69,47,68],
[75,62,77,0,70,75,64,76],
[54,55,68,61,0,54,57,67],
[55,61,62,56,77,0,57,69],
[58,63,84,67,74,74,0,73],
[62,65,63,55,64,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,62,54,58,61,58,58],
[75,0,71,64,72,70,63,64],
[69,60,0,62,52,59,59,63],
[77,67,69,0,69,63,72,63],
[73,59,79,62,0,75,63,67],
[70,61,72,68,56,0,63,63],
[73,68,72,59,68,68,0,65],
[73,67,68,68,64,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,65,69,65,62,75,69],
[57,0,63,61,62,56,60,61],
[66,68,0,59,60,52,64,58],
[62,70,72,0,64,66,72,72],
[66,69,71,67,0,60,70,68],
[69,75,79,65,71,0,78,72],
[56,71,67,59,61,53,0,52],
[62,70,73,59,63,59,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,36,44,44,14,14,49],
[96,0,64,67,76,88,87,101],
[95,67,0,55,46,74,64,82],
[87,64,76,0,85,74,86,82],
[87,55,85,46,0,73,77,82],
[117,43,57,57,58,0,40,88],
[117,44,67,45,54,91,0,104],
[82,30,49,49,49,43,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,64,72,59,78,85],
[61,0,64,75,72,73,78,75],
[63,67,0,67,65,86,72,76],
[67,56,64,0,61,71,78,83],
[59,59,66,70,0,73,79,79],
[72,58,45,60,58,0,68,73],
[53,53,59,53,52,63,0,69],
[46,56,55,48,52,58,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,63,68,68,77,69,67],
[55,0,67,56,59,63,65,50],
[68,64,0,58,64,72,74,59],
[63,75,73,0,69,71,66,60],
[63,72,67,62,0,74,68,50],
[54,68,59,60,57,0,56,55],
[62,66,57,65,63,75,0,59],
[64,81,72,71,81,76,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,77,70,71,71,66,72],
[66,0,78,67,56,71,67,62],
[54,53,0,66,52,67,69,63],
[61,64,65,0,57,62,63,68],
[60,75,79,74,0,60,72,73],
[60,60,64,69,71,0,71,71],
[65,64,62,68,59,60,0,69],
[59,69,68,63,58,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,51,52,45,55,61,49],
[80,0,75,71,55,67,71,66],
[80,56,0,62,59,64,63,57],
[79,60,69,0,61,67,69,62],
[86,76,72,70,0,64,76,68],
[76,64,67,64,67,0,68,58],
[70,60,68,62,55,63,0,61],
[82,65,74,69,63,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,67,83,61,69,69,94],
[54,0,54,62,58,77,72,88],
[64,77,0,62,51,78,64,89],
[48,69,69,0,67,76,67,90],
[70,73,80,64,0,82,59,86],
[62,54,53,55,49,0,70,62],
[62,59,67,64,72,61,0,83],
[37,43,42,41,45,69,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,50,66,59,59,77,74],
[74,0,73,67,71,65,75,78],
[81,58,0,74,80,73,76,80],
[65,64,57,0,64,63,65,54],
[72,60,51,67,0,61,74,67],
[72,66,58,68,70,0,75,67],
[54,56,55,66,57,56,0,62],
[57,53,51,77,64,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,45,60,56,53,60,60],
[84,0,47,81,62,72,78,79],
[86,84,0,88,60,59,71,85],
[71,50,43,0,56,46,77,56],
[75,69,71,75,0,44,73,76],
[78,59,72,85,87,0,72,86],
[71,53,60,54,58,59,0,52],
[71,52,46,75,55,45,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,62,72,75,69,87],
[58,0,69,73,69,71,76,65],
[64,62,0,72,73,76,65,82],
[69,58,59,0,68,77,54,65],
[59,62,58,63,0,78,72,61],
[56,60,55,54,53,0,60,68],
[62,55,66,77,59,71,0,66],
[44,66,49,66,70,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,64,60,58,67,69],
[61,0,58,61,59,51,63,70],
[60,73,0,62,59,56,67,74],
[67,70,69,0,69,56,66,69],
[71,72,72,62,0,67,71,71],
[73,80,75,75,64,0,70,79],
[64,68,64,65,60,61,0,71],
[62,61,57,62,60,52,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,69,67,65,64,68,81],
[70,0,70,77,67,70,60,74],
[62,61,0,66,52,60,56,62],
[64,54,65,0,61,68,60,66],
[66,64,79,70,0,71,58,62],
[67,61,71,63,60,0,58,69],
[63,71,75,71,73,73,0,68],
[50,57,69,65,69,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,76,55,75,60,76,63],
[68,0,72,62,70,58,63,74],
[55,59,0,59,66,53,54,62],
[76,69,72,0,77,65,67,85],
[56,61,65,54,0,54,55,68],
[71,73,78,66,77,0,63,75],
[55,68,77,64,76,68,0,69],
[68,57,69,46,63,56,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,52,70,78,61,65,58],
[67,0,58,63,73,76,52,61],
[79,73,0,69,72,68,63,83],
[61,68,62,0,71,62,75,64],
[53,58,59,60,0,60,59,45],
[70,55,63,69,71,0,81,62],
[66,79,68,56,72,50,0,60],
[73,70,48,67,86,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,63,66,60,57,61],
[67,0,59,47,59,52,58,55],
[71,72,0,52,43,64,67,62],
[68,84,79,0,52,65,62,69],
[65,72,88,79,0,69,79,68],
[71,79,67,66,62,0,63,64],
[74,73,64,69,52,68,0,58],
[70,76,69,62,63,67,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,75,13,111,55,131,131],
[56,0,33,69,111,13,89,89],
[56,98,0,69,111,69,69,89],
[118,62,62,0,98,42,118,131],
[20,20,20,33,0,33,89,89],
[76,118,62,89,98,0,118,131],
[0,42,62,13,42,13,0,89],
[0,42,42,0,42,0,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,69,66,59,70,58],
[68,0,65,63,60,66,79,66],
[69,66,0,65,69,67,73,66],
[62,68,66,0,62,60,62,63],
[65,71,62,69,0,66,60,64],
[72,65,64,71,65,0,69,70],
[61,52,58,69,71,62,0,59],
[73,65,65,68,67,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,54,59,65,68,68,53],
[74,0,64,64,73,70,47,71],
[77,67,0,52,67,54,63,59],
[72,67,79,0,65,89,52,82],
[66,58,64,66,0,71,64,61],
[63,61,77,42,60,0,64,55],
[63,84,68,79,67,67,0,74],
[78,60,72,49,70,76,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,71,74,76,73,70],
[63,0,73,70,76,73,71,65],
[66,58,0,74,74,62,72,74],
[60,61,57,0,56,69,55,57],
[57,55,57,75,0,64,71,56],
[55,58,69,62,67,0,71,72],
[58,60,59,76,60,60,0,64],
[61,66,57,74,75,59,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,39,50,73,59,63,34],
[75,0,52,45,69,60,68,57],
[92,79,0,67,105,80,69,61],
[81,86,64,0,73,80,63,74],
[58,62,26,58,0,46,72,42],
[72,71,51,51,85,0,76,60],
[68,63,62,68,59,55,0,39],
[97,74,70,57,89,71,92,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,67,70,66,74,62,64],
[74,0,55,73,69,80,62,70],
[64,76,0,84,63,72,66,55],
[61,58,47,0,65,68,63,66],
[65,62,68,66,0,68,59,51],
[57,51,59,63,63,0,52,54],
[69,69,65,68,72,79,0,65],
[67,61,76,65,80,77,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,71,73,73,74,65],
[64,0,69,65,68,63,68,67],
[64,62,0,73,59,65,71,60],
[60,66,58,0,68,58,66,60],
[58,63,72,63,0,67,59,64],
[58,68,66,73,64,0,69,67],
[57,63,60,65,72,62,0,56],
[66,64,71,71,67,64,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,70,69,67,83,77],
[68,0,75,76,65,63,70,84],
[60,56,0,61,63,61,63,76],
[61,55,70,0,58,57,60,69],
[62,66,68,73,0,65,71,71],
[64,68,70,74,66,0,71,76],
[48,61,68,71,60,60,0,66],
[54,47,55,62,60,55,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,73,63,69,66,67,59],
[64,0,68,71,63,67,58,67],
[58,63,0,57,52,75,61,60],
[68,60,74,0,69,77,65,77],
[62,68,79,62,0,73,58,69],
[65,64,56,54,58,0,52,56],
[64,73,70,66,73,79,0,79],
[72,64,71,54,62,75,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,57,54,68,66,64,72],
[65,0,66,69,75,73,62,73],
[74,65,0,70,72,66,61,76],
[77,62,61,0,75,78,68,76],
[63,56,59,56,0,61,58,64],
[65,58,65,53,70,0,57,81],
[67,69,70,63,73,74,0,76],
[59,58,55,55,67,50,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,71,67,63,68,70],
[69,0,62,62,65,76,67,65],
[70,69,0,69,67,66,63,67],
[60,69,62,0,74,62,66,65],
[64,66,64,57,0,69,63,60],
[68,55,65,69,62,0,64,62],
[63,64,68,65,68,67,0,68],
[61,66,64,66,71,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,61,63,65,71,65,68],
[58,0,59,62,67,58,53,51],
[70,72,0,75,75,64,68,70],
[68,69,56,0,54,67,58,51],
[66,64,56,77,0,76,59,62],
[60,73,67,64,55,0,77,61],
[66,78,63,73,72,54,0,60],
[63,80,61,80,69,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,66,61,60,64,57],
[66,0,60,75,66,57,64,62],
[65,71,0,67,73,68,65,66],
[65,56,64,0,64,58,63,56],
[70,65,58,67,0,62,66,63],
[71,74,63,73,69,0,69,67],
[67,67,66,68,65,62,0,58],
[74,69,65,75,68,64,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,71,76,72,71,75,64],
[56,0,75,75,66,65,71,71],
[60,56,0,58,74,60,77,56],
[55,56,73,0,54,54,54,53],
[59,65,57,77,0,62,72,70],
[60,66,71,77,69,0,76,61],
[56,60,54,77,59,55,0,63],
[67,60,75,78,61,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,105,87,101,84,85,37],
[64,0,70,38,96,48,80,0],
[26,61,0,55,65,52,81,5],
[44,93,76,0,76,74,106,26],
[30,35,66,55,0,52,66,34],
[47,83,79,57,79,0,83,79],
[46,51,50,25,65,48,0,51],
[94,131,126,105,97,52,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,76,85,78,45,68,67],
[49,0,78,82,73,50,40,56],
[55,53,0,81,78,62,54,60],
[46,49,50,0,63,58,35,47],
[53,58,53,68,0,49,42,67],
[86,81,69,73,82,0,66,63],
[63,91,77,96,89,65,0,62],
[64,75,71,84,64,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,73,62,63,67,71],
[62,0,54,61,58,57,65,58],
[70,77,0,70,68,63,75,68],
[58,70,61,0,53,54,64,62],
[69,73,63,78,0,63,72,73],
[68,74,68,77,68,0,65,68],
[64,66,56,67,59,66,0,62],
[60,73,63,69,58,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,92,66,82,72,94,59,73],
[39,0,54,54,63,64,43,42],
[65,77,0,93,72,78,71,64],
[49,77,38,0,42,55,71,40],
[59,68,59,89,0,77,73,49],
[37,67,53,76,54,0,74,47],
[72,88,60,60,58,57,0,57],
[58,89,67,91,82,84,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,58,68,75,64,76,65],
[67,0,64,61,73,67,63,68],
[73,67,0,63,64,70,76,73],
[63,70,68,0,72,77,78,76],
[56,58,67,59,0,57,61,71],
[67,64,61,54,74,0,80,77],
[55,68,55,53,70,51,0,70],
[66,63,58,55,60,54,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,59,52,58,52,72,66],
[54,0,61,44,61,54,64,73],
[72,70,0,55,59,67,67,78],
[79,87,76,0,63,64,82,81],
[73,70,72,68,0,58,73,64],
[79,77,64,67,73,0,71,83],
[59,67,64,49,58,60,0,61],
[65,58,53,50,67,48,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,56,58,75,73,71],
[69,0,80,56,68,67,64,79],
[66,51,0,58,67,69,66,66],
[75,75,73,0,60,72,69,66],
[73,63,64,71,0,80,80,88],
[56,64,62,59,51,0,71,70],
[58,67,65,62,51,60,0,59],
[60,52,65,65,43,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,93,54,84,56,54,54],
[87,0,93,103,40,12,38,54],
[38,38,0,38,28,38,38,54],
[77,28,93,0,40,12,28,54],
[47,91,103,91,0,59,91,91],
[75,119,93,119,72,0,82,54],
[77,93,93,103,40,49,0,54],
[77,77,77,77,40,77,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,70,58,69,58,63],
[65,0,72,69,62,62,74,58],
[62,59,0,63,59,53,60,61],
[61,62,68,0,64,60,71,58],
[73,69,72,67,0,60,69,66],
[62,69,78,71,71,0,68,68],
[73,57,71,60,62,63,0,65],
[68,73,70,73,65,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,79,62,64,68,68,80],
[61,0,56,65,70,68,64,68],
[52,75,0,64,61,62,62,77],
[69,66,67,0,66,66,65,70],
[67,61,70,65,0,66,61,71],
[63,63,69,65,65,0,55,67],
[63,67,69,66,70,76,0,73],
[51,63,54,61,60,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,75,76,68,67,72,61],
[61,0,72,66,66,67,62,66],
[56,59,0,62,60,65,57,50],
[55,65,69,0,61,58,60,55],
[63,65,71,70,0,66,73,62],
[64,64,66,73,65,0,63,59],
[59,69,74,71,58,68,0,58],
[70,65,81,76,69,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,84,64,71,65,69,68],
[66,0,81,67,59,71,70,71],
[47,50,0,55,50,51,56,58],
[67,64,76,0,62,53,60,67],
[60,72,81,69,0,53,77,76],
[66,60,80,78,78,0,70,65],
[62,61,75,71,54,61,0,64],
[63,60,73,64,55,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,65,72,66,74,68,62],
[51,0,56,67,53,60,53,59],
[66,75,0,76,61,76,65,66],
[59,64,55,0,53,59,63,63],
[65,78,70,78,0,75,74,68],
[57,71,55,72,56,0,68,56],
[63,78,66,68,57,63,0,60],
[69,72,65,68,63,75,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,57,65,61,60,52],
[70,0,64,67,70,68,79,66],
[72,67,0,65,75,70,66,64],
[74,64,66,0,76,66,67,66],
[66,61,56,55,0,62,63,57],
[70,63,61,65,69,0,64,58],
[71,52,65,64,68,67,0,61],
[79,65,67,65,74,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,55,45,65,45,72,62],
[84,0,58,67,64,42,77,53],
[76,73,0,52,61,68,62,57],
[86,64,79,0,70,68,77,79],
[66,67,70,61,0,53,57,78],
[86,89,63,63,78,0,95,60],
[59,54,69,54,74,36,0,63],
[69,78,74,52,53,71,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,78,78,77,58,77,68],
[63,0,61,71,63,51,68,73],
[53,70,0,53,62,48,56,54],
[53,60,78,0,62,62,63,57],
[54,68,69,69,0,45,70,57],
[73,80,83,69,86,0,81,57],
[54,63,75,68,61,50,0,60],
[63,58,77,74,74,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,67,67,71,56,65],
[64,0,64,63,64,69,68,72],
[65,67,0,69,63,63,65,63],
[64,68,62,0,77,72,62,67],
[64,67,68,54,0,60,65,63],
[60,62,68,59,71,0,67,72],
[75,63,66,69,66,64,0,75],
[66,59,68,64,68,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,64,59,57,65,57],
[67,0,60,63,56,60,69,62],
[66,71,0,60,59,62,65,72],
[67,68,71,0,69,63,73,65],
[72,75,72,62,0,59,67,69],
[74,71,69,68,72,0,61,73],
[66,62,66,58,64,70,0,71],
[74,69,59,66,62,58,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,69,63,65,62,59],
[71,0,59,82,81,74,73,64],
[67,72,0,71,72,68,67,59],
[62,49,60,0,65,70,60,58],
[68,50,59,66,0,65,69,69],
[66,57,63,61,66,0,67,66],
[69,58,64,71,62,64,0,63],
[72,67,72,73,62,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,72,64,68,64,67],
[63,0,55,79,69,61,72,64],
[63,76,0,64,72,67,74,73],
[59,52,67,0,69,70,61,62],
[67,62,59,62,0,60,74,62],
[63,70,64,61,71,0,76,63],
[67,59,57,70,57,55,0,56],
[64,67,58,69,69,68,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,108,98,97,69,55,89,56],
[23,0,56,61,47,38,81,36],
[33,75,0,33,10,10,53,23],
[34,70,98,0,59,47,51,67],
[62,84,121,72,0,67,62,90],
[76,93,121,84,64,0,61,90],
[42,50,78,80,69,70,0,56],
[75,95,108,64,41,41,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,67,61,68,69,72],
[70,0,65,56,52,69,69,67],
[67,66,0,62,62,68,93,74],
[64,75,69,0,68,71,81,56],
[70,79,69,63,0,82,74,75],
[63,62,63,60,49,0,73,68],
[62,62,38,50,57,58,0,62],
[59,64,57,75,56,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,57,73,58,62,74,70],
[60,0,73,80,66,68,70,81],
[74,58,0,67,68,69,77,71],
[58,51,64,0,51,52,58,71],
[73,65,63,80,0,64,69,81],
[69,63,62,79,67,0,73,69],
[57,61,54,73,62,58,0,71],
[61,50,60,60,50,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,51,19,86,84,53],
[68,0,33,34,26,64,58,30],
[62,98,0,61,67,60,103,101],
[80,97,70,0,59,86,99,40],
[112,105,64,72,0,82,102,80],
[45,67,71,45,49,0,85,70],
[47,73,28,32,29,46,0,20],
[78,101,30,91,51,61,111,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,87,66,64,72,80],
[69,0,70,94,62,71,83,80],
[57,61,0,71,52,61,70,56],
[44,37,60,0,45,40,45,52],
[65,69,79,86,0,75,76,71],
[67,60,70,91,56,0,73,66],
[59,48,61,86,55,58,0,64],
[51,51,75,79,60,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,63,81,40,61,55,57],
[59,0,79,52,68,58,54,69],
[68,52,0,55,37,36,51,62],
[50,79,76,0,55,40,49,51],
[91,63,94,76,0,83,66,43],
[70,73,95,91,48,0,60,61],
[76,77,80,82,65,71,0,49],
[74,62,69,80,88,70,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,68,69,71,77,67],
[71,0,72,69,65,75,75,70],
[62,59,0,64,56,69,72,62],
[63,62,67,0,59,72,64,64],
[62,66,75,72,0,71,73,76],
[60,56,62,59,60,0,65,63],
[54,56,59,67,58,66,0,64],
[64,61,69,67,55,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,78,67,71,71,79,67],
[69,0,73,64,74,71,75,68],
[53,58,0,64,65,66,68,61],
[64,67,67,0,67,60,68,67],
[60,57,66,64,0,75,63,66],
[60,60,65,71,56,0,70,70],
[52,56,63,63,68,61,0,67],
[64,63,70,64,65,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,66,76,75,71,63],
[61,0,63,68,59,64,68,69],
[65,68,0,61,66,73,86,65],
[65,63,70,0,66,76,76,59],
[55,72,65,65,0,57,72,65],
[56,67,58,55,74,0,64,65],
[60,63,45,55,59,67,0,60],
[68,62,66,72,66,66,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,67,68,73,66,68],
[64,0,70,59,62,70,65,66],
[69,61,0,68,67,71,68,64],
[64,72,63,0,67,74,69,65],
[63,69,64,64,0,63,64,67],
[58,61,60,57,68,0,54,61],
[65,66,63,62,67,77,0,64],
[63,65,67,66,64,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,49,56,59,46,67,60],
[66,0,66,71,60,72,75,79],
[82,65,0,72,74,60,79,89],
[75,60,59,0,60,71,80,82],
[72,71,57,71,0,64,57,78],
[85,59,71,60,67,0,71,92],
[64,56,52,51,74,60,0,83],
[71,52,42,49,53,39,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,67,58,71,71,66],
[63,0,64,62,57,67,74,59],
[66,67,0,56,59,67,71,61],
[64,69,75,0,63,60,72,66],
[73,74,72,68,0,65,69,71],
[60,64,64,71,66,0,62,62],
[60,57,60,59,62,69,0,58],
[65,72,70,65,60,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,80,72,58,70,63],
[59,0,67,60,55,40,61,53],
[65,64,0,76,54,50,57,56],
[51,71,55,0,53,54,54,57],
[59,76,77,78,0,61,53,61],
[73,91,81,77,70,0,62,68],
[61,70,74,77,78,69,0,78],
[68,78,75,74,70,63,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,84,91,81,62,69],
[66,0,62,89,90,88,73,73],
[65,69,0,80,80,81,60,59],
[47,42,51,0,82,74,51,57],
[40,41,51,49,0,59,33,46],
[50,43,50,57,72,0,46,55],
[69,58,71,80,98,85,0,70],
[62,58,72,74,85,76,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,64,80,65,62,78,67],
[55,0,60,86,84,64,67,57],
[67,71,0,71,64,59,72,49],
[51,45,60,0,56,56,64,50],
[66,47,67,75,0,58,65,61],
[69,67,72,75,73,0,71,65],
[53,64,59,67,66,60,0,48],
[64,74,82,81,70,66,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,64,68,67,62,67,63],
[59,0,61,65,52,51,55,49],
[67,70,0,65,69,58,66,64],
[63,66,66,0,59,56,55,60],
[64,79,62,72,0,64,58,54],
[69,80,73,75,67,0,64,66],
[64,76,65,76,73,67,0,69],
[68,82,67,71,77,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,58,69,68,66,33],
[71,0,74,80,61,85,70,79],
[72,57,0,73,41,66,59,83],
[73,51,58,0,65,68,67,48],
[62,70,90,66,0,78,85,77],
[63,46,65,63,53,0,64,53],
[65,61,72,64,46,67,0,56],
[98,52,48,83,54,78,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,77,64,57,58,55,72],
[67,0,65,57,66,60,54,67],
[54,66,0,62,58,53,61,62],
[67,74,69,0,76,53,63,71],
[74,65,73,55,0,59,71,67],
[73,71,78,78,72,0,69,65],
[76,77,70,68,60,62,0,68],
[59,64,69,60,64,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,63,56,61,55,61,69],
[74,0,70,70,63,70,64,81],
[68,61,0,66,62,55,60,75],
[75,61,65,0,62,54,62,66],
[70,68,69,69,0,61,76,73],
[76,61,76,77,70,0,69,77],
[70,67,71,69,55,62,0,74],
[62,50,56,65,58,54,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,74,63,59,66,68],
[62,0,69,67,67,66,70,73],
[66,62,0,70,56,65,63,66],
[57,64,61,0,58,57,62,65],
[68,64,75,73,0,65,78,68],
[72,65,66,74,66,0,70,69],
[65,61,68,69,53,61,0,70],
[63,58,65,66,63,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,76,71,75,81,75],
[65,0,59,69,70,69,79,74],
[67,72,0,64,69,70,71,65],
[55,62,67,0,60,61,71,59],
[60,61,62,71,0,72,76,74],
[56,62,61,70,59,0,67,72],
[50,52,60,60,55,64,0,47],
[56,57,66,72,57,59,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,64,63,64,76,63],
[68,0,68,60,65,63,66,62],
[60,63,0,59,53,66,72,67],
[67,71,72,0,61,62,71,70],
[68,66,78,70,0,72,63,69],
[67,68,65,69,59,0,69,62],
[55,65,59,60,68,62,0,65],
[68,69,64,61,62,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,55,61,56,68,57,57],
[80,0,71,71,67,78,65,69],
[76,60,0,59,56,71,62,64],
[70,60,72,0,62,77,58,72],
[75,64,75,69,0,77,68,70],
[63,53,60,54,54,0,58,59],
[74,66,69,73,63,73,0,70],
[74,62,67,59,61,72,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,71,72,74,74,60,76],
[59,0,67,72,66,75,62,76],
[60,64,0,71,67,71,72,81],
[59,59,60,0,66,74,65,72],
[57,65,64,65,0,65,72,83],
[57,56,60,57,66,0,63,70],
[71,69,59,66,59,68,0,72],
[55,55,50,59,48,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,68,65,73,76,67,65],
[78,0,56,73,76,73,59,51],
[63,75,0,85,73,76,72,66],
[66,58,46,0,54,62,63,61],
[58,55,58,77,0,76,66,55],
[55,58,55,69,55,0,61,61],
[64,72,59,68,65,70,0,68],
[66,80,65,70,76,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,73,68,64,68,65,74],
[70,0,62,63,70,74,66,80],
[58,69,0,58,63,71,66,71],
[63,68,73,0,71,77,75,72],
[67,61,68,60,0,64,59,70],
[63,57,60,54,67,0,61,67],
[66,65,65,56,72,70,0,71],
[57,51,60,59,61,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,85,76,71,53,54],
[62,0,43,52,54,53,53,55],
[68,88,0,43,83,80,48,58],
[46,79,88,0,88,78,52,70],
[55,77,48,43,0,74,51,62],
[60,78,51,53,57,0,54,57],
[78,78,83,79,80,77,0,55],
[77,76,73,61,69,74,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,49,57,68,64,60,55],
[75,0,65,79,60,79,70,64],
[82,66,0,79,76,67,51,61],
[74,52,52,0,62,66,60,55],
[63,71,55,69,0,74,57,58],
[67,52,64,65,57,0,54,72],
[71,61,80,71,74,77,0,83],
[76,67,70,76,73,59,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,55,58,72,59,64,67],
[65,0,55,61,63,72,70,75],
[76,76,0,71,75,56,85,71],
[73,70,60,0,61,57,75,63],
[59,68,56,70,0,61,73,66],
[72,59,75,74,70,0,71,69],
[67,61,46,56,58,60,0,58],
[64,56,60,68,65,62,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,62,60,55,69,54,46],
[75,0,66,73,71,75,58,61],
[69,65,0,73,69,70,70,57],
[71,58,58,0,68,73,63,67],
[76,60,62,63,0,60,58,60],
[62,56,61,58,71,0,57,66],
[77,73,61,68,73,74,0,61],
[85,70,74,64,71,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,57,72,53,72,59,62],
[58,0,63,57,84,41,57,94],
[74,68,0,67,64,72,72,73],
[59,74,64,0,48,69,91,82],
[78,47,67,83,0,62,51,66],
[59,90,59,62,69,0,84,77],
[72,74,59,40,80,47,0,85],
[69,37,58,49,65,54,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,65,66,66,65,66],
[65,0,64,62,69,72,66,64],
[65,67,0,66,64,63,67,66],
[66,69,65,0,59,59,63,64],
[65,62,67,72,0,61,64,55],
[65,59,68,72,70,0,68,64],
[66,65,64,68,67,63,0,61],
[65,67,65,67,76,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,69,64,66,57,63],
[66,0,80,79,55,66,66,68],
[58,51,0,50,51,58,53,56],
[62,52,81,0,47,63,61,63],
[67,76,80,84,0,74,67,64],
[65,65,73,68,57,0,61,57],
[74,65,78,70,64,70,0,73],
[68,63,75,68,67,74,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,22,50,59,39,51,39],
[66,0,61,70,62,43,79,80],
[109,70,0,50,76,73,60,89],
[81,61,81,0,62,84,74,42],
[72,69,55,69,0,45,51,33],
[92,88,58,47,86,0,86,77],
[80,52,71,57,80,45,0,97],
[92,51,42,89,98,54,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,74,67,59,70,63],
[60,0,74,71,64,66,59,58],
[61,57,0,67,47,65,56,55],
[57,60,64,0,73,63,65,63],
[64,67,84,58,0,64,72,62],
[72,65,66,68,67,0,68,63],
[61,72,75,66,59,63,0,67],
[68,73,76,68,69,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,81,69,70,62,66,60],
[64,0,80,73,67,71,83,66],
[50,51,0,59,55,51,58,60],
[62,58,72,0,64,60,74,63],
[61,64,76,67,0,61,67,57],
[69,60,80,71,70,0,77,65],
[65,48,73,57,64,54,0,62],
[71,65,71,68,74,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,62,65,70,66,69],
[69,0,59,69,71,79,70,75],
[65,72,0,80,72,76,76,82],
[69,62,51,0,70,67,76,73],
[66,60,59,61,0,74,60,74],
[61,52,55,64,57,0,57,65],
[65,61,55,55,71,74,0,73],
[62,56,49,58,57,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,72,63,74,77,58,77],
[60,0,72,70,60,57,68,71],
[59,59,0,63,55,54,53,60],
[68,61,68,0,65,58,50,69],
[57,71,76,66,0,74,68,70],
[54,74,77,73,57,0,63,69],
[73,63,78,81,63,68,0,73],
[54,60,71,62,61,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,62,65,71,54,74],
[63,0,67,56,59,60,52,66],
[58,64,0,55,61,58,59,66],
[69,75,76,0,70,79,69,65],
[66,72,70,61,0,68,65,63],
[60,71,73,52,63,0,62,63],
[77,79,72,62,66,69,0,69],
[57,65,65,66,68,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,57,58,68,67,58],
[70,0,73,66,56,71,75,61],
[68,58,0,63,57,73,68,61],
[74,65,68,0,59,70,70,62],
[73,75,74,72,0,70,76,65],
[63,60,58,61,61,0,68,67],
[64,56,63,61,55,63,0,59],
[73,70,70,69,66,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,63,70,85,66,86,76],
[50,0,60,57,64,74,79,76],
[68,71,0,58,77,75,102,74],
[61,74,73,0,81,50,80,77],
[46,67,54,50,0,55,72,77],
[65,57,56,81,76,0,81,76],
[45,52,29,51,59,50,0,72],
[55,55,57,54,54,55,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,72,43,64,84,63,83],
[40,0,68,31,73,64,56,85],
[59,63,0,59,70,87,29,60],
[88,100,72,0,56,80,63,101],
[67,58,61,75,0,95,69,64],
[47,67,44,51,36,0,48,59],
[68,75,102,68,62,83,0,90],
[48,46,71,30,67,72,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,80,67,65,56,48],
[67,0,57,79,53,54,54,51],
[61,74,0,71,61,65,61,55],
[51,52,60,0,49,52,63,52],
[64,78,70,82,0,67,69,53],
[66,77,66,79,64,0,72,70],
[75,77,70,68,62,59,0,70],
[83,80,76,79,78,61,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,55,62,75,78,60,44],
[56,0,62,55,60,83,74,54],
[76,69,0,74,69,79,64,62],
[69,76,57,0,61,80,52,58],
[56,71,62,70,0,86,56,59],
[53,48,52,51,45,0,45,52],
[71,57,67,79,75,86,0,79],
[87,77,69,73,72,79,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,70,65,68,49,64],
[64,0,66,64,66,65,51,68],
[66,65,0,63,67,72,62,58],
[61,67,68,0,56,65,58,58],
[66,65,64,75,0,75,66,56],
[63,66,59,66,56,0,61,58],
[82,80,69,73,65,70,0,68],
[67,63,73,73,75,73,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,62,62,68,70,66],
[68,0,57,60,67,65,64,64],
[68,74,0,63,59,73,70,66],
[69,71,68,0,64,87,79,71],
[69,64,72,67,0,69,74,69],
[63,66,58,44,62,0,62,66],
[61,67,61,52,57,69,0,64],
[65,67,65,60,62,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,53,55,61,63,75],
[68,0,59,73,77,74,69,70],
[62,72,0,64,75,64,66,70],
[78,58,67,0,64,62,78,71],
[76,54,56,67,0,61,69,68],
[70,57,67,69,70,0,75,79],
[68,62,65,53,62,56,0,64],
[56,61,61,60,63,52,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,66,70,68,63,64,68],
[55,0,67,61,56,62,62,53],
[65,64,0,65,64,62,64,55],
[61,70,66,0,60,60,65,58],
[63,75,67,71,0,67,69,59],
[68,69,69,71,64,0,74,66],
[67,69,67,66,62,57,0,61],
[63,78,76,73,72,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,76,64,71,68,76],
[63,0,73,61,67,64,62,72],
[58,58,0,59,55,66,57,64],
[55,70,72,0,67,68,61,69],
[67,64,76,64,0,61,72,70],
[60,67,65,63,70,0,61,72],
[63,69,74,70,59,70,0,68],
[55,59,67,62,61,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,72,66,86,52,70,77],
[64,0,59,38,75,43,52,66],
[59,72,0,22,72,54,71,65],
[65,93,109,0,91,74,76,73],
[45,56,59,40,0,54,74,58],
[79,88,77,57,77,0,76,78],
[61,79,60,55,57,55,0,68],
[54,65,66,58,73,53,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,63,70,72,65,55,81],
[74,0,48,67,70,62,56,65],
[68,83,0,71,76,60,72,70],
[61,64,60,0,65,63,60,68],
[59,61,55,66,0,52,65,61],
[66,69,71,68,79,0,64,81],
[76,75,59,71,66,67,0,71],
[50,66,61,63,70,50,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,63,70,52,50,50,78],
[74,0,81,66,81,61,61,72],
[68,50,0,81,79,54,67,83],
[61,65,50,0,76,82,62,77],
[79,50,52,55,0,58,47,73],
[81,70,77,49,73,0,47,79],
[81,70,64,69,84,84,0,92],
[53,59,48,54,58,52,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,63,50,55,72,44,57],
[42,0,49,38,41,60,27,54],
[68,82,0,79,70,55,62,88],
[81,93,52,0,57,75,55,86],
[76,90,61,74,0,77,78,73],
[59,71,76,56,54,0,41,72],
[87,104,69,76,53,90,0,85],
[74,77,43,45,58,59,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,80,58,81,60,56],
[62,0,56,66,48,70,52,55],
[69,75,0,82,51,93,62,55],
[51,65,49,0,58,65,64,70],
[73,83,80,73,0,78,79,65],
[50,61,38,66,53,0,62,49],
[71,79,69,67,52,69,0,52],
[75,76,76,61,66,82,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,57,71,67,63,56],
[70,0,73,59,69,76,65,72],
[65,58,0,61,64,60,61,59],
[74,72,70,0,69,68,63,56],
[60,62,67,62,0,74,63,61],
[64,55,71,63,57,0,64,67],
[68,66,70,68,68,67,0,61],
[75,59,72,75,70,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,78,75,81,79,79,61],
[74,0,84,69,74,72,68,56],
[53,47,0,63,73,82,67,66],
[56,62,68,0,68,78,65,65],
[50,57,58,63,0,73,59,53],
[52,59,49,53,58,0,47,60],
[52,63,64,66,72,84,0,62],
[70,75,65,66,78,71,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,75,61,73,56,63,63],
[59,0,54,66,54,59,52,56],
[56,77,0,61,59,57,65,61],
[70,65,70,0,64,63,60,61],
[58,77,72,67,0,73,71,75],
[75,72,74,68,58,0,65,61],
[68,79,66,71,60,66,0,62],
[68,75,70,70,56,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,66,66,54,65,59,58],
[68,0,74,73,65,75,66,65],
[65,57,0,70,45,67,57,54],
[65,58,61,0,56,66,69,51],
[77,66,86,75,0,74,63,69],
[66,56,64,65,57,0,66,61],
[72,65,74,62,68,65,0,68],
[73,66,77,80,62,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,77,64,66,74,77,79],
[54,0,69,58,58,64,66,65],
[54,62,0,57,62,59,64,70],
[67,73,74,0,64,74,77,71],
[65,73,69,67,0,63,69,76],
[57,67,72,57,68,0,76,68],
[54,65,67,54,62,55,0,71],
[52,66,61,60,55,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,51,62,62,58,58,44],
[69,0,64,72,62,65,52,50],
[80,67,0,84,70,66,62,62],
[69,59,47,0,51,62,57,46],
[69,69,61,80,0,63,49,57],
[73,66,65,69,68,0,68,52],
[73,79,69,74,82,63,0,66],
[87,81,69,85,74,79,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,69,66,54,71,70,68],
[64,0,75,64,53,67,75,71],
[62,56,0,57,50,58,65,62],
[65,67,74,0,68,61,63,62],
[77,78,81,63,0,71,73,69],
[60,64,73,70,60,0,75,59],
[61,56,66,68,58,56,0,57],
[63,60,69,69,62,72,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,68,63,70,52,68,49],
[76,0,71,71,76,58,82,73],
[63,60,0,53,59,52,62,56],
[68,60,78,0,76,75,102,81],
[61,55,72,55,0,45,70,61],
[79,73,79,56,86,0,96,86],
[63,49,69,29,61,35,0,44],
[82,58,75,50,70,45,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,65,71,62,41,54,69],
[52,0,56,59,62,60,73,70],
[66,75,0,60,62,68,58,63],
[60,72,71,0,74,79,61,72],
[69,69,69,57,0,68,58,80],
[90,71,63,52,63,0,49,69],
[77,58,73,70,73,82,0,79],
[62,61,68,59,51,62,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,72,54,72,61,65,64],
[64,0,58,57,68,56,57,58],
[59,73,0,71,71,56,63,53],
[77,74,60,0,58,57,70,60],
[59,63,60,73,0,69,66,51],
[70,75,75,74,62,0,63,70],
[66,74,68,61,65,68,0,56],
[67,73,78,71,80,61,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,95,95,126,95,84,100,53],
[36,0,83,83,100,36,100,53],
[36,48,0,79,100,84,53,53],
[5,48,52,0,100,5,100,53],
[36,31,31,31,0,36,36,36],
[47,95,47,126,95,0,100,100],
[31,31,78,31,95,31,0,0],
[78,78,78,78,95,31,131,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,67,63,66,74,67],
[63,0,72,61,65,66,73,65],
[65,59,0,52,56,62,75,60],
[64,70,79,0,68,66,76,63],
[68,66,75,63,0,72,75,65],
[65,65,69,65,59,0,76,63],
[57,58,56,55,56,55,0,62],
[64,66,71,68,66,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,54,45,70,59,70,52],
[64,0,48,44,63,48,55,57],
[77,83,0,66,67,67,62,66],
[86,87,65,0,77,74,73,73],
[61,68,64,54,0,45,52,58],
[72,83,64,57,86,0,67,67],
[61,76,69,58,79,64,0,64],
[79,74,65,58,73,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,14,107,58,111,111,48],
[58,0,58,58,34,62,38,48],
[117,73,0,131,58,111,111,48],
[24,73,0,0,24,24,24,48],
[73,97,73,107,0,111,111,48],
[20,69,20,107,20,0,49,68],
[20,93,20,107,20,82,0,68],
[83,83,83,83,83,63,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,69,69,65,65,71],
[67,0,70,70,69,71,73,63],
[62,61,0,69,71,63,72,62],
[62,61,62,0,67,66,62,62],
[62,62,60,64,0,64,60,58],
[66,60,68,65,67,0,66,59],
[66,58,59,69,71,65,0,57],
[60,68,69,69,73,72,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,70,76,74,64,69,75],
[56,0,65,68,62,67,62,58],
[61,66,0,68,65,67,61,65],
[55,63,63,0,59,66,58,63],
[57,69,66,72,0,67,56,58],
[67,64,64,65,64,0,66,63],
[62,69,70,73,75,65,0,66],
[56,73,66,68,73,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,63,72,70,81,65,83],
[50,0,66,77,66,76,65,69],
[68,65,0,60,63,78,77,71],
[59,54,71,0,67,77,70,88],
[61,65,68,64,0,61,59,64],
[50,55,53,54,70,0,61,56],
[66,66,54,61,72,70,0,79],
[48,62,60,43,67,75,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,61,71,64,60,55,53],
[64,0,61,59,61,47,61,39],
[70,70,0,69,65,67,66,51],
[60,72,62,0,58,74,59,64],
[67,70,66,73,0,74,68,64],
[71,84,64,57,57,0,64,60],
[76,70,65,72,63,67,0,73],
[78,92,80,67,67,71,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,64,69,75,74,68,64],
[60,0,62,68,60,61,62,67],
[67,69,0,58,65,67,60,64],
[62,63,73,0,73,73,58,66],
[56,71,66,58,0,72,58,67],
[57,70,64,58,59,0,57,63],
[63,69,71,73,73,74,0,70],
[67,64,67,65,64,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,63,60,62,68,73,67],
[61,0,55,55,56,60,63,60],
[68,76,0,64,70,73,76,70],
[71,76,67,0,64,77,72,77],
[69,75,61,67,0,72,76,70],
[63,71,58,54,59,0,65,66],
[58,68,55,59,55,66,0,68],
[64,71,61,54,61,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,81,60,63,63,73,68],
[60,0,72,69,76,62,56,64],
[50,59,0,63,62,62,64,56],
[71,62,68,0,69,64,68,77],
[68,55,69,62,0,60,60,69],
[68,69,69,67,71,0,66,53],
[58,75,67,63,71,65,0,64],
[63,67,75,54,62,78,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,64,65,69,60,72],
[66,0,51,50,65,48,74,63],
[67,80,0,60,73,58,66,72],
[67,81,71,0,67,80,82,55],
[66,66,58,64,0,77,86,68],
[62,83,73,51,54,0,67,70],
[71,57,65,49,45,64,0,62],
[59,68,59,76,63,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,84,84,95,80,64,84],
[55,0,87,75,76,76,68,62],
[47,44,0,63,71,47,49,55],
[47,56,68,0,62,60,46,54],
[36,55,60,69,0,61,63,48],
[51,55,84,71,70,0,50,57],
[67,63,82,85,68,81,0,77],
[47,69,76,77,83,74,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,83,85,85,67,77,85],
[66,0,79,46,64,64,58,85],
[48,52,0,56,54,32,38,59],
[46,85,75,0,59,60,20,53],
[46,67,77,72,0,52,72,91],
[64,67,99,71,79,0,75,91],
[54,73,93,111,59,56,0,105],
[46,46,72,78,40,40,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,39,59,45,51,42,42],
[70,0,64,71,63,66,48,56],
[92,67,0,59,73,69,74,78],
[72,60,72,0,60,66,63,54],
[86,68,58,71,0,48,51,51],
[80,65,62,65,83,0,60,48],
[89,83,57,68,80,71,0,82],
[89,75,53,77,80,83,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,68,73,70,67,65],
[71,0,65,70,63,68,60,70],
[67,66,0,65,71,78,72,73],
[63,61,66,0,74,58,56,63],
[58,68,60,57,0,55,58,59],
[61,63,53,73,76,0,55,64],
[64,71,59,75,73,76,0,75],
[66,61,58,68,72,67,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,55,56,60,43,74,56],
[76,0,71,62,69,78,87,75],
[76,60,0,63,65,70,88,59],
[75,69,68,0,65,65,77,64],
[71,62,66,66,0,78,63,60],
[88,53,61,66,53,0,82,74],
[57,44,43,54,68,49,0,43],
[75,56,72,67,71,57,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,62,56,64,66,69],
[61,0,65,65,83,82,57,65],
[63,66,0,71,71,87,66,71],
[69,66,60,0,82,67,64,73],
[75,48,60,49,0,70,55,63],
[67,49,44,64,61,0,52,48],
[65,74,65,67,76,79,0,75],
[62,66,60,58,68,83,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,56,68,74,63,76],
[66,0,61,67,58,70,60,74],
[71,70,0,65,65,76,69,73],
[75,64,66,0,61,77,69,75],
[63,73,66,70,0,64,74,75],
[57,61,55,54,67,0,56,73],
[68,71,62,62,57,75,0,78],
[55,57,58,56,56,58,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,54,96,54,39,82,30],
[62,0,67,62,53,52,53,49],
[77,64,0,83,57,61,67,67],
[35,69,48,0,48,37,63,21],
[77,78,74,83,0,47,96,55],
[92,79,70,94,84,0,90,50],
[49,78,64,68,35,41,0,37],
[101,82,64,110,76,81,94,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,65,64,68,76,62],
[61,0,68,70,67,69,67,70],
[63,63,0,71,64,66,64,64],
[66,61,60,0,65,72,67,67],
[67,64,67,66,0,74,68,63],
[63,62,65,59,57,0,70,62],
[55,64,67,64,63,61,0,56],
[69,61,67,64,68,69,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,61,67,59,42,76,73],
[60,0,48,65,48,35,77,59],
[70,83,0,75,73,67,71,60],
[64,66,56,0,48,40,64,47],
[72,83,58,83,0,58,82,68],
[89,96,64,91,73,0,80,85],
[55,54,60,67,49,51,0,65],
[58,72,71,84,63,46,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,61,50,64,53,64,49],
[74,0,58,64,62,56,62,56],
[70,73,0,64,71,66,58,74],
[81,67,67,0,72,66,63,71],
[67,69,60,59,0,61,59,61],
[78,75,65,65,70,0,59,76],
[67,69,73,68,72,72,0,60],
[82,75,57,60,70,55,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,73,61,63,64,58,55],
[72,0,66,66,68,57,68,63],
[58,65,0,61,60,61,55,51],
[70,65,70,0,57,58,72,72],
[68,63,71,74,0,73,54,61],
[67,74,70,73,58,0,65,71],
[73,63,76,59,77,66,0,57],
[76,68,80,59,70,60,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,62,65,49,47,78,51],
[81,0,57,54,42,49,49,71],
[69,74,0,82,74,61,71,58],
[66,77,49,0,45,43,88,69],
[82,89,57,86,0,44,88,58],
[84,82,70,88,87,0,97,53],
[53,82,60,43,43,34,0,73],
[80,60,73,62,73,78,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,62,74,62,64,69],
[61,0,61,54,58,58,52,63],
[66,70,0,61,69,65,63,59],
[69,77,70,0,71,65,68,70],
[57,73,62,60,0,63,66,69],
[69,73,66,66,68,0,65,66],
[67,79,68,63,65,66,0,66],
[62,68,72,61,62,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,70,62,70,58,56,65],
[52,0,60,46,46,61,64,61],
[61,71,0,67,63,54,52,68],
[69,85,64,0,59,71,58,61],
[61,85,68,72,0,76,69,61],
[73,70,77,60,55,0,58,76],
[75,67,79,73,62,73,0,79],
[66,70,63,70,70,55,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,56,68,58,78,67],
[73,0,69,54,79,70,83,66],
[67,62,0,57,69,58,69,74],
[75,77,74,0,62,85,73,90],
[63,52,62,69,0,66,74,68],
[73,61,73,46,65,0,57,89],
[53,48,62,58,57,74,0,61],
[64,65,57,41,63,42,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,78,72,62,68,73,74],
[60,0,61,64,55,54,65,67],
[53,70,0,61,59,58,66,57],
[59,67,70,0,65,73,82,75],
[69,76,72,66,0,56,66,65],
[63,77,73,58,75,0,68,64],
[58,66,65,49,65,63,0,61],
[57,64,74,56,66,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,61,52,76,62,57,47],
[83,0,70,54,69,82,83,74],
[70,61,0,58,73,56,84,60],
[79,77,73,0,66,58,82,63],
[55,62,58,65,0,53,60,55],
[69,49,75,73,78,0,77,59],
[74,48,47,49,71,54,0,52],
[84,57,71,68,76,72,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,65,78,80,70,62,88],
[58,0,79,82,61,76,63,51],
[66,52,0,68,52,59,49,61],
[53,49,63,0,69,37,58,67],
[51,70,79,62,0,43,55,71],
[61,55,72,94,88,0,66,48],
[69,68,82,73,76,65,0,69],
[43,80,70,64,60,83,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,80,71,71,65,63],
[62,0,69,70,69,70,66,72],
[68,62,0,69,71,64,60,61],
[51,61,62,0,60,73,60,54],
[60,62,60,71,0,54,62,59],
[60,61,67,58,77,0,62,69],
[66,65,71,71,69,69,0,65],
[68,59,70,77,72,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,49,81,52,70,57,57],
[53,0,36,67,57,57,54,73],
[82,95,0,80,57,74,59,61],
[50,64,51,0,66,62,61,69],
[79,74,74,65,0,69,71,79],
[61,74,57,69,62,0,43,76],
[74,77,72,70,60,88,0,61],
[74,58,70,62,52,55,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,38,50,51,51,54],
[71,0,58,54,67,55,49,51],
[64,73,0,62,66,54,75,67],
[93,77,69,0,82,70,78,60],
[81,64,65,49,0,52,63,69],
[80,76,77,61,79,0,70,55],
[80,82,56,53,68,61,0,53],
[77,80,64,71,62,76,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,70,67,70,60,67,65],
[58,0,74,65,69,59,65,68],
[61,57,0,76,66,65,66,64],
[64,66,55,0,62,68,74,67],
[61,62,65,69,0,59,69,55],
[71,72,66,63,72,0,66,61],
[64,66,65,57,62,65,0,64],
[66,63,67,64,76,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,45,57,66,45,65,82],
[76,0,56,66,82,72,87,90],
[86,75,0,70,93,61,81,103],
[74,65,61,0,69,51,88,83],
[65,49,38,62,0,48,61,71],
[86,59,70,80,83,0,74,95],
[66,44,50,43,70,57,0,78],
[49,41,28,48,60,36,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,77,72,71,65,81,66],
[53,0,68,86,67,68,64,74],
[54,63,0,80,60,56,57,56],
[59,45,51,0,55,51,58,47],
[60,64,71,76,0,51,55,59],
[66,63,75,80,80,0,71,68],
[50,67,74,73,76,60,0,63],
[65,57,75,84,72,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,35,122,48,54,9,39],
[122,0,64,122,122,122,77,103],
[96,67,0,96,67,96,39,58],
[9,9,35,0,9,35,9,0],
[83,9,64,122,0,83,38,103],
[77,9,35,96,48,0,0,39],
[122,54,92,122,93,131,0,84],
[92,28,73,131,28,92,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,51,44,60,42,66,57],
[69,0,53,57,50,35,67,48],
[80,78,0,71,64,52,80,62],
[87,74,60,0,69,54,71,58],
[71,81,67,62,0,70,67,59],
[89,96,79,77,61,0,78,61],
[65,64,51,60,64,53,0,66],
[74,83,69,73,72,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,96,62,51,46,74,94,77],
[35,0,26,13,26,38,48,39],
[69,105,0,55,56,75,102,69],
[80,118,76,0,77,70,106,57],
[85,105,75,54,0,104,120,97],
[57,93,56,61,27,0,92,70],
[37,83,29,25,11,39,0,41],
[54,92,62,74,34,61,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,66,73,61,69,70,72],
[51,0,60,63,58,66,54,56],
[65,71,0,62,65,68,62,58],
[58,68,69,0,64,72,62,57],
[70,73,66,67,0,67,63,69],
[62,65,63,59,64,0,65,62],
[61,77,69,69,68,66,0,67],
[59,75,73,74,62,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,84,78,81,76,68,58],
[74,0,78,61,63,64,61,66],
[47,53,0,43,68,71,57,45],
[53,70,88,0,77,75,70,46],
[50,68,63,54,0,65,54,53],
[55,67,60,56,66,0,43,40],
[63,70,74,61,77,88,0,58],
[73,65,86,85,78,91,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,101,67,71,67,50,75,42],
[30,0,72,29,43,26,31,27],
[64,59,0,29,26,12,35,30],
[60,102,102,0,69,76,77,77],
[64,88,105,62,0,60,56,60],
[81,105,119,55,71,0,105,49],
[56,100,96,54,75,26,0,52],
[89,104,101,54,71,82,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,74,64,71,71,66,68],
[65,0,69,69,64,66,64,58],
[57,62,0,57,60,59,51,61],
[67,62,74,0,74,62,60,67],
[60,67,71,57,0,58,70,64],
[60,65,72,69,73,0,68,69],
[65,67,80,71,61,63,0,66],
[63,73,70,64,67,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,70,66,74,71,74],
[64,0,69,74,69,71,74,73],
[71,62,0,77,63,70,65,70],
[61,57,54,0,60,67,64,70],
[65,62,68,71,0,71,74,73],
[57,60,61,64,60,0,69,69],
[60,57,66,67,57,62,0,68],
[57,58,61,61,58,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,64,99,67,86,74,85],
[45,0,83,57,57,46,57,54],
[67,48,0,67,53,68,30,52],
[32,74,64,0,36,72,55,51],
[64,74,78,95,0,73,75,69],
[45,85,63,59,58,0,62,81],
[57,74,101,76,56,69,0,80],
[46,77,79,80,62,50,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,62,71,66,60,61,67],
[79,0,70,68,77,66,65,61],
[69,61,0,62,66,59,66,64],
[60,63,69,0,77,65,62,75],
[65,54,65,54,0,67,57,66],
[71,65,72,66,64,0,70,71],
[70,66,65,69,74,61,0,74],
[64,70,67,56,65,60,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,50,59,60,63,69,59],
[76,0,60,64,70,77,76,70],
[81,71,0,72,65,79,78,74],
[72,67,59,0,67,74,63,66],
[71,61,66,64,0,76,81,68],
[68,54,52,57,55,0,60,55],
[62,55,53,68,50,71,0,65],
[72,61,57,65,63,76,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,62,69,70,63,61],
[61,0,69,73,73,71,60,67],
[65,62,0,59,75,72,67,73],
[69,58,72,0,74,77,65,76],
[62,58,56,57,0,62,47,66],
[61,60,59,54,69,0,52,59],
[68,71,64,66,84,79,0,75],
[70,64,58,55,65,72,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,67,46,63,71,63,65],
[67,0,53,61,72,73,52,64],
[64,78,0,67,72,73,66,63],
[85,70,64,0,78,78,71,76],
[68,59,59,53,0,68,54,61],
[60,58,58,53,63,0,57,57],
[68,79,65,60,77,74,0,66],
[66,67,68,55,70,74,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,56,65,89,76,92,89],
[58,0,47,63,88,54,82,58],
[75,84,0,64,112,81,93,99],
[66,68,67,0,91,64,89,72],
[42,43,19,40,0,64,88,56],
[55,77,50,67,67,0,85,60],
[39,49,38,42,43,46,0,40],
[42,73,32,59,75,71,91,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,99,110,104,90,79],
[64,0,75,80,104,63,66,83],
[71,56,0,86,86,70,80,53],
[32,51,45,0,92,63,59,50],
[21,27,45,39,0,52,39,64],
[27,68,61,68,79,0,70,81],
[41,65,51,72,92,61,0,87],
[52,48,78,81,67,50,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,71,56,67,57,36],
[68,0,79,70,57,73,77,58],
[64,52,0,40,67,53,35,26],
[60,61,91,0,74,67,39,48],
[75,74,64,57,0,58,54,55],
[64,58,78,64,73,0,69,72],
[74,54,96,92,77,62,0,68],
[95,73,105,83,76,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,54,50,50,55,57,48],
[73,0,50,47,52,48,56,55],
[77,81,0,64,66,75,65,64],
[81,84,67,0,59,66,71,63],
[81,79,65,72,0,75,73,69],
[76,83,56,65,56,0,61,63],
[74,75,66,60,58,70,0,68],
[83,76,67,68,62,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,67,69,81,74,63],
[61,0,69,70,50,72,66,61],
[60,62,0,66,58,78,77,56],
[64,61,65,0,60,67,60,68],
[62,81,73,71,0,69,75,69],
[50,59,53,64,62,0,71,61],
[57,65,54,71,56,60,0,56],
[68,70,75,63,62,70,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,66,69,65,65,63,57],
[76,0,76,72,68,80,63,61],
[65,55,0,62,59,64,61,50],
[62,59,69,0,58,77,66,61],
[66,63,72,73,0,68,70,69],
[66,51,67,54,63,0,56,55],
[68,68,70,65,61,75,0,68],
[74,70,81,70,62,76,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,55,56,61,62,59,56],
[67,0,57,57,61,59,60,62],
[76,74,0,65,62,65,67,63],
[75,74,66,0,63,67,60,66],
[70,70,69,68,0,71,63,69],
[69,72,66,64,60,0,62,65],
[72,71,64,71,68,69,0,72],
[75,69,68,65,62,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,45,73,44,52,49,33],
[43,0,58,83,67,48,67,43],
[86,73,0,76,62,38,70,67],
[58,48,55,0,43,39,44,29],
[87,64,69,88,0,48,69,39],
[79,83,93,92,83,0,84,60],
[82,64,61,87,62,47,0,59],
[98,88,64,102,92,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,73,61,64,73,63,69],
[54,0,70,61,52,69,65,59],
[58,61,0,53,53,67,62,65],
[70,70,78,0,66,67,70,62],
[67,79,78,65,0,76,76,69],
[58,62,64,64,55,0,65,61],
[68,66,69,61,55,66,0,65],
[62,72,66,69,62,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,60,57,62,65,57],
[59,0,59,51,63,60,64,59],
[66,72,0,63,64,56,62,66],
[71,80,68,0,64,62,61,64],
[74,68,67,67,0,62,68,63],
[69,71,75,69,69,0,72,65],
[66,67,69,70,63,59,0,57],
[74,72,65,67,68,66,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,99,69,75,59,75,89,65],
[32,0,80,11,47,50,27,30],
[62,51,0,43,71,62,57,62],
[56,120,88,0,70,92,79,66],
[72,84,60,61,0,90,68,70],
[56,81,69,39,41,0,41,41],
[42,104,74,52,63,90,0,72],
[66,101,69,65,61,90,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,82,92,69,71,75,74],
[69,0,58,71,69,76,69,78],
[49,73,0,75,53,54,65,63],
[39,60,56,0,50,58,69,44],
[62,62,78,81,0,75,69,78],
[60,55,77,73,56,0,75,66],
[56,62,66,62,62,56,0,58],
[57,53,68,87,53,65,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,57,71,69,65,71],
[66,0,60,57,60,54,59,63],
[65,71,0,51,52,57,60,63],
[74,74,80,0,80,72,66,64],
[60,71,79,51,0,71,61,73],
[62,77,74,59,60,0,56,64],
[66,72,71,65,70,75,0,74],
[60,68,68,67,58,67,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,65,68,62,68,78],
[64,0,62,79,68,60,75,75],
[65,69,0,74,60,69,72,81],
[66,52,57,0,60,46,73,73],
[63,63,71,71,0,59,71,76],
[69,71,62,85,72,0,79,81],
[63,56,59,58,60,52,0,70],
[53,56,50,58,55,50,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,63,67,54,58,55,65],
[73,0,60,71,62,66,78,74],
[68,71,0,66,66,63,75,75],
[64,60,65,0,62,67,53,70],
[77,69,65,69,0,69,77,79],
[73,65,68,64,62,0,65,72],
[76,53,56,78,54,66,0,79],
[66,57,56,61,52,59,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,60,46,55,56,68,55],
[82,0,71,74,72,66,76,56],
[71,60,0,58,50,72,66,62],
[85,57,73,0,73,79,93,74],
[76,59,81,58,0,92,82,80],
[75,65,59,52,39,0,68,56],
[63,55,65,38,49,63,0,62],
[76,75,69,57,51,75,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,56,77,51,55,47,57],
[65,0,53,85,56,66,49,59],
[75,78,0,92,61,83,66,83],
[54,46,39,0,43,13,43,47],
[80,75,70,88,0,59,59,63],
[76,65,48,118,72,0,80,63],
[84,82,65,88,72,51,0,66],
[74,72,48,84,68,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,64,59,55,62,52],
[62,0,69,55,66,62,64,51],
[66,62,0,47,57,54,60,50],
[67,76,84,0,70,64,64,67],
[72,65,74,61,0,69,78,66],
[76,69,77,67,62,0,66,60],
[69,67,71,67,53,65,0,64],
[79,80,81,64,65,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,76,78,73,68,64,68],
[61,0,72,63,62,69,71,68],
[55,59,0,55,58,72,56,57],
[53,68,76,0,63,70,54,54],
[58,69,73,68,0,68,63,59],
[63,62,59,61,63,0,55,64],
[67,60,75,77,68,76,0,70],
[63,63,74,77,72,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,80,68,72,62,70,65],
[68,0,79,73,81,72,84,65],
[51,52,0,53,71,53,70,51],
[63,58,78,0,78,55,73,58],
[59,50,60,53,0,55,69,51],
[69,59,78,76,76,0,71,68],
[61,47,61,58,62,60,0,49],
[66,66,80,73,80,63,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,66,68,71,70,67,64],
[56,0,64,63,69,78,66,76],
[65,67,0,69,63,69,60,71],
[63,68,62,0,67,73,56,65],
[60,62,68,64,0,72,64,67],
[61,53,62,58,59,0,56,56],
[64,65,71,75,67,75,0,76],
[67,55,60,66,64,75,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,44,48,55,39,42,45],
[78,0,65,62,51,60,61,70],
[87,66,0,67,57,49,66,85],
[83,69,64,0,67,53,68,77],
[76,80,74,64,0,54,58,73],
[92,71,82,78,77,0,65,76],
[89,70,65,63,73,66,0,65],
[86,61,46,54,58,55,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,79,72,59,71,62,68],
[57,0,70,66,54,73,60,60],
[52,61,0,61,53,68,60,56],
[59,65,70,0,56,78,63,65],
[72,77,78,75,0,76,73,65],
[60,58,63,53,55,0,57,54],
[69,71,71,68,58,74,0,66],
[63,71,75,66,66,77,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,49,43,59,63,58,34],
[66,0,61,61,67,72,57,77],
[82,70,0,70,58,68,68,44],
[88,70,61,0,82,105,71,80],
[72,64,73,49,0,83,78,72],
[68,59,63,26,48,0,63,62],
[73,74,63,60,53,68,0,82],
[97,54,87,51,59,69,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,50,61,63,59,71],
[70,0,68,69,69,62,70,74],
[66,63,0,59,56,64,54,62],
[81,62,72,0,65,70,66,70],
[70,62,75,66,0,68,64,69],
[68,69,67,61,63,0,59,75],
[72,61,77,65,67,72,0,63],
[60,57,69,61,62,56,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,64,67,73,69,62,72],
[59,0,56,62,60,64,65,61],
[67,75,0,63,66,61,67,78],
[64,69,68,0,67,63,66,75],
[58,71,65,64,0,62,63,74],
[62,67,70,68,69,0,73,71],
[69,66,64,65,68,58,0,85],
[59,70,53,56,57,60,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,67,52,76,64,62,67],
[55,0,42,44,66,44,42,50],
[64,89,0,85,108,68,51,78],
[79,87,46,0,91,57,49,58],
[55,65,23,40,0,34,40,41],
[67,87,63,74,97,0,75,63],
[69,89,80,82,91,56,0,69],
[64,81,53,73,90,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,74,60,69,67,71,82],
[64,0,68,67,71,64,66,80],
[57,63,0,61,70,65,63,72],
[71,64,70,0,71,72,79,75],
[62,60,61,60,0,63,63,73],
[64,67,66,59,68,0,63,77],
[60,65,68,52,68,68,0,74],
[49,51,59,56,58,54,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,61,60,51,66,62,58],
[64,0,62,57,59,58,65,58],
[70,69,0,64,60,65,61,61],
[71,74,67,0,63,64,71,56],
[80,72,71,68,0,75,64,69],
[65,73,66,67,56,0,64,58],
[69,66,70,60,67,67,0,61],
[73,73,70,75,62,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,75,76,63,85,91,72],
[66,0,67,61,57,84,84,78],
[56,64,0,60,68,67,70,72],
[55,70,71,0,69,73,77,76],
[68,74,63,62,0,91,102,76],
[46,47,64,58,40,0,71,61],
[40,47,61,54,29,60,0,58],
[59,53,59,55,55,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,74,67,56,68,76],
[61,0,71,67,58,62,62,64],
[60,60,0,55,65,56,74,59],
[57,64,76,0,68,60,64,60],
[64,73,66,63,0,68,67,66],
[75,69,75,71,63,0,62,73],
[63,69,57,67,64,69,0,72],
[55,67,72,71,65,58,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,48,56,70,75,60],
[69,0,67,68,63,63,77,70],
[65,64,0,56,55,71,81,76],
[83,63,75,0,67,79,79,81],
[75,68,76,64,0,67,71,69],
[61,68,60,52,64,0,62,64],
[56,54,50,52,60,69,0,67],
[71,61,55,50,62,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,73,79,51,56,71],
[67,0,77,76,98,68,79,64],
[71,54,0,73,73,63,66,83],
[58,55,58,0,79,68,51,46],
[52,33,58,52,0,51,26,58],
[80,63,68,63,80,0,63,71],
[75,52,65,80,105,68,0,79],
[60,67,48,85,73,60,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,50,58,68,62,59,61],
[70,0,65,60,71,70,62,67],
[81,66,0,71,65,72,69,77],
[73,71,60,0,67,77,64,69],
[63,60,66,64,0,72,70,64],
[69,61,59,54,59,0,60,59],
[72,69,62,67,61,71,0,67],
[70,64,54,62,67,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,58,61,62,65,59],
[64,0,69,67,63,62,68,64],
[65,62,0,71,68,60,60,71],
[73,64,60,0,69,56,61,58],
[70,68,63,62,0,69,64,64],
[69,69,71,75,62,0,65,58],
[66,63,71,70,67,66,0,74],
[72,67,60,73,67,73,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,57,79,74,96,66,67],
[52,0,54,57,54,74,58,48],
[74,77,0,77,56,83,78,79],
[52,74,54,0,51,73,64,52],
[57,77,75,80,0,69,56,77],
[35,57,48,58,62,0,57,63],
[65,73,53,67,75,74,0,73],
[64,83,52,79,54,68,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,72,71,62,76,69,72],
[57,0,70,68,58,68,62,61],
[59,61,0,59,61,67,57,61],
[60,63,72,0,62,66,59,62],
[69,73,70,69,0,77,67,65],
[55,63,64,65,54,0,58,60],
[62,69,74,72,64,73,0,68],
[59,70,70,69,66,71,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,73,52,51,58,76,72],
[80,0,68,65,63,72,87,72],
[58,63,0,55,57,56,64,67],
[79,66,76,0,67,73,80,65],
[80,68,74,64,0,76,77,79],
[73,59,75,58,55,0,68,69],
[55,44,67,51,54,63,0,64],
[59,59,64,66,52,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,70,66,75,66,71],
[69,0,64,72,74,69,66,71],
[65,67,0,70,73,69,67,73],
[61,59,61,0,63,70,61,62],
[65,57,58,68,0,68,66,63],
[56,62,62,61,63,0,58,66],
[65,65,64,70,65,73,0,69],
[60,60,58,69,68,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,50,36,70,62,55,75],
[72,0,48,45,69,64,52,85],
[81,83,0,37,78,81,54,87],
[95,86,94,0,81,71,56,102],
[61,62,53,50,0,38,65,67],
[69,67,50,60,93,0,68,77],
[76,79,77,75,66,63,0,88],
[56,46,44,29,64,54,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,66,54,64,70,74],
[68,0,66,74,63,66,77,72],
[67,65,0,66,58,63,65,72],
[65,57,65,0,63,63,71,63],
[77,68,73,68,0,57,74,77],
[67,65,68,68,74,0,77,81],
[61,54,66,60,57,54,0,62],
[57,59,59,68,54,50,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,66,71,58,63,62],
[67,0,76,64,73,75,63,60],
[60,55,0,56,68,59,60,53],
[65,67,75,0,76,66,63,67],
[60,58,63,55,0,57,54,61],
[73,56,72,65,74,0,66,63],
[68,68,71,68,77,65,0,62],
[69,71,78,64,70,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,69,71,73,75,68],
[62,0,59,51,57,63,63,61],
[67,72,0,65,71,70,67,69],
[62,80,66,0,66,71,72,71],
[60,74,60,65,0,66,69,65],
[58,68,61,60,65,0,69,67],
[56,68,64,59,62,62,0,61],
[63,70,62,60,66,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,70,58,62,62,63],
[66,0,74,66,56,67,64,72],
[60,57,0,54,50,62,54,55],
[61,65,77,0,57,66,63,70],
[73,75,81,74,0,76,65,77],
[69,64,69,65,55,0,51,62],
[69,67,77,68,66,80,0,63],
[68,59,76,61,54,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,22,41,22,22,52],
[112,0,112,112,98,49,112,79],
[109,19,0,112,71,49,52,52],
[109,19,19,0,71,46,19,30],
[90,33,60,60,0,60,60,90],
[109,82,82,85,71,0,63,63],
[109,19,79,112,71,68,0,52],
[79,52,79,101,41,68,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,50,57,54,65,53,59],
[64,0,62,68,70,67,56,66],
[81,69,0,74,55,61,57,65],
[74,63,57,0,67,70,63,74],
[77,61,76,64,0,66,67,66],
[66,64,70,61,65,0,57,65],
[78,75,74,68,64,74,0,78],
[72,65,66,57,65,66,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,58,48,57,50,51,45],
[77,0,77,67,60,76,69,53],
[73,54,0,55,60,67,52,45],
[83,64,76,0,68,69,55,68],
[74,71,71,63,0,69,77,69],
[81,55,64,62,62,0,57,52],
[80,62,79,76,54,74,0,64],
[86,78,86,63,62,79,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,58,101,78,58,85,96],
[66,0,57,66,77,80,115,95],
[73,74,0,102,56,67,86,51],
[30,65,29,0,13,45,51,31],
[53,54,75,118,0,47,131,75],
[73,51,64,86,84,0,115,95],
[46,16,45,80,0,16,0,18],
[35,36,80,100,56,36,113,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,66,61,71,61,63,63],
[68,0,64,67,70,61,65,66],
[65,67,0,64,71,66,65,63],
[70,64,67,0,69,61,67,68],
[60,61,60,62,0,61,61,63],
[70,70,65,70,70,0,65,65],
[68,66,66,64,70,66,0,67],
[68,65,68,63,68,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,65,67,69,72,71,69],
[58,0,67,67,73,63,66,77],
[66,64,0,59,71,63,65,67],
[64,64,72,0,75,66,67,70],
[62,58,60,56,0,46,60,65],
[59,68,68,65,85,0,58,73],
[60,65,66,64,71,73,0,74],
[62,54,64,61,66,58,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,80,70,61,73,62],
[73,0,71,72,62,56,63,62],
[67,60,0,61,65,56,58,66],
[51,59,70,0,49,55,53,52],
[61,69,66,82,0,67,63,59],
[70,75,75,76,64,0,76,62],
[58,68,73,78,68,55,0,69],
[69,69,65,79,72,69,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,70,62,42,55,53,65],
[74,0,74,62,58,52,58,52],
[61,57,0,71,55,51,56,68],
[69,69,60,0,56,61,56,61],
[89,73,76,75,0,65,69,70],
[76,79,80,70,66,0,65,71],
[78,73,75,75,62,66,0,68],
[66,79,63,70,61,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,76,63,66,70,69,71],
[60,0,67,60,67,57,62,63],
[55,64,0,65,68,67,67,68],
[68,71,66,0,71,69,60,79],
[65,64,63,60,0,67,67,69],
[61,74,64,62,64,0,63,66],
[62,69,64,71,64,68,0,70],
[60,68,63,52,62,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,59,61,61,59,56,60],
[73,0,59,65,77,69,66,79],
[72,72,0,70,68,80,61,69],
[70,66,61,0,62,65,63,69],
[70,54,63,69,0,65,61,62],
[72,62,51,66,66,0,59,64],
[75,65,70,68,70,72,0,80],
[71,52,62,62,69,67,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,68,60,67,69,68],
[63,0,61,64,67,57,63,58],
[67,70,0,65,70,61,69,71],
[63,67,66,0,61,67,75,70],
[71,64,61,70,0,63,61,66],
[64,74,70,64,68,0,66,68],
[62,68,62,56,70,65,0,62],
[63,73,60,61,65,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,76,78,70,76,64,81],
[47,0,65,64,65,55,53,69],
[55,66,0,62,51,54,54,51],
[53,67,69,0,56,62,59,63],
[61,66,80,75,0,74,72,73],
[55,76,77,69,57,0,59,79],
[67,78,77,72,59,72,0,78],
[50,62,80,68,58,52,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,47,57,57,36,44,37],
[94,0,67,61,73,48,62,60],
[84,64,0,57,79,56,63,76],
[74,70,74,0,63,58,47,57],
[74,58,52,68,0,52,53,51],
[95,83,75,73,79,0,60,65],
[87,69,68,84,78,71,0,61],
[94,71,55,74,80,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,97,17,38,77,66,40,21],
[34,0,39,39,42,22,52,48],
[114,92,0,47,78,82,60,57],
[93,92,84,0,93,68,87,63],
[54,89,53,38,0,61,28,31],
[65,109,49,63,70,0,80,64],
[91,79,71,44,103,51,0,75],
[110,83,74,68,100,67,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,57,59,60,73,75],
[64,0,70,68,66,71,67,67],
[69,61,0,65,73,59,69,66],
[74,63,66,0,64,56,70,72],
[72,65,58,67,0,69,72,74],
[71,60,72,75,62,0,77,72],
[58,64,62,61,59,54,0,69],
[56,64,65,59,57,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,65,60,66,62,66,66],
[57,0,62,55,55,53,60,56],
[66,69,0,66,68,63,61,65],
[71,76,65,0,70,67,70,70],
[65,76,63,61,0,70,66,65],
[69,78,68,64,61,0,64,67],
[65,71,70,61,65,67,0,67],
[65,75,66,61,66,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,75,59,69,71,63],
[60,0,63,65,61,68,54,62],
[60,68,0,70,71,67,58,56],
[56,66,61,0,56,62,62,66],
[72,70,60,75,0,64,60,58],
[62,63,64,69,67,0,58,59],
[60,77,73,69,71,73,0,67],
[68,69,75,65,73,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,71,64,64,66,61],
[73,0,65,75,73,72,74,65],
[73,66,0,70,63,70,70,68],
[60,56,61,0,57,61,57,64],
[67,58,68,74,0,67,68,70],
[67,59,61,70,64,0,67,63],
[65,57,61,74,63,64,0,62],
[70,66,63,67,61,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,70,63,92,79,68,69],
[50,0,45,64,65,69,65,64],
[61,86,0,70,75,76,83,80],
[68,67,61,0,86,72,70,57],
[39,66,56,45,0,62,69,64],
[52,62,55,59,69,0,75,60],
[63,66,48,61,62,56,0,59],
[62,67,51,74,67,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,58,48,47,64,48,56],
[78,0,50,60,58,69,55,65],
[73,81,0,72,51,69,65,62],
[83,71,59,0,68,76,67,65],
[84,73,80,63,0,72,72,75],
[67,62,62,55,59,0,57,60],
[83,76,66,64,59,74,0,76],
[75,66,69,66,56,71,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,52,56,61,65,63,67],
[67,0,62,65,60,61,52,62],
[79,69,0,66,65,72,84,77],
[75,66,65,0,68,69,81,69],
[70,71,66,63,0,65,69,72],
[66,70,59,62,66,0,70,72],
[68,79,47,50,62,61,0,64],
[64,69,54,62,59,59,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,63,63,66,60,64],
[67,0,51,66,55,67,56,62],
[66,80,0,67,68,80,76,65],
[68,65,64,0,59,80,73,64],
[68,76,63,72,0,75,71,72],
[65,64,51,51,56,0,60,64],
[71,75,55,58,60,71,0,59],
[67,69,66,67,59,67,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,65,72,64,65,70,61],
[68,0,70,75,73,71,72,64],
[66,61,0,62,76,59,68,66],
[59,56,69,0,67,61,54,56],
[67,58,55,64,0,66,51,60],
[66,60,72,70,65,0,62,58],
[61,59,63,77,80,69,0,67],
[70,67,65,75,71,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,83,64,85,90,95],
[64,0,54,82,63,70,65,81],
[65,77,0,85,68,77,97,76],
[48,49,46,0,56,76,57,66],
[67,68,63,75,0,73,69,71],
[46,61,54,55,58,0,51,64],
[41,66,34,74,62,80,0,68],
[36,50,55,65,60,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,52,65,54,64,56,55],
[70,0,65,66,65,69,74,66],
[79,66,0,62,64,72,70,67],
[66,65,69,0,60,61,61,58],
[77,66,67,71,0,68,62,59],
[67,62,59,70,63,0,66,57],
[75,57,61,70,69,65,0,72],
[76,65,64,73,72,74,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,59,69,64,68,68,78],
[59,0,60,64,54,63,65,64],
[72,71,0,65,63,79,69,69],
[62,67,66,0,53,70,66,66],
[67,77,68,78,0,75,64,77],
[63,68,52,61,56,0,63,60],
[63,66,62,65,67,68,0,74],
[53,67,62,65,54,71,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,67,65,60,65,78,61],
[60,0,67,56,61,73,69,50],
[64,64,0,64,67,69,78,71],
[66,75,67,0,61,76,70,57],
[71,70,64,70,0,70,84,65],
[66,58,62,55,61,0,64,50],
[53,62,53,61,47,67,0,55],
[70,81,60,74,66,81,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,59,61,62,70,59],
[62,0,60,58,55,58,64,55],
[68,71,0,63,68,66,66,68],
[72,73,68,0,65,64,71,66],
[70,76,63,66,0,64,66,66],
[69,73,65,67,67,0,65,67],
[61,67,65,60,65,66,0,71],
[72,76,63,65,65,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,77,68,69,63,86,83],
[52,0,74,64,82,72,87,69],
[54,57,0,65,64,61,51,71],
[63,67,66,0,56,58,80,57],
[62,49,67,75,0,41,69,69],
[68,59,70,73,90,0,92,84],
[45,44,80,51,62,39,0,64],
[48,62,60,74,62,47,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,74,79,65,67,68,67],
[61,0,69,77,61,63,59,59],
[57,62,0,72,64,65,51,51],
[52,54,59,0,57,58,43,51],
[66,70,67,74,0,76,66,63],
[64,68,66,73,55,0,63,58],
[63,72,80,88,65,68,0,58],
[64,72,80,80,68,73,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,60,57,60,65,66,56],
[63,0,58,64,62,67,71,68],
[71,73,0,59,60,71,60,76],
[74,67,72,0,51,69,66,63],
[71,69,71,80,0,65,63,72],
[66,64,60,62,66,0,68,63],
[65,60,71,65,68,63,0,69],
[75,63,55,68,59,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,30,44,30,22,8,22],
[101,0,65,109,101,101,109,65],
[101,66,0,109,58,58,44,102],
[87,22,22,0,22,22,0,22],
[101,30,73,109,0,66,29,66],
[109,30,73,109,65,0,29,52],
[123,22,87,131,102,102,0,66],
[109,66,29,109,65,79,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,76,81,59,61,48,42],
[65,0,97,99,76,73,77,62],
[55,34,0,75,58,68,60,54],
[50,32,56,0,57,72,60,58],
[72,55,73,74,0,69,72,66],
[70,58,63,59,62,0,58,68],
[83,54,71,71,59,73,0,58],
[89,69,77,73,65,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,65,67,75,64,60,71],
[50,0,62,59,61,57,47,49],
[66,69,0,69,76,66,64,65],
[64,72,62,0,73,65,67,60],
[56,70,55,58,0,59,47,63],
[67,74,65,66,72,0,55,67],
[71,84,67,64,84,76,0,71],
[60,82,66,71,68,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,61,74,64,67,64,76],
[59,0,62,72,58,70,58,87],
[70,69,0,66,76,59,71,78],
[57,59,65,0,73,58,60,65],
[67,73,55,58,0,56,70,74],
[64,61,72,73,75,0,70,80],
[67,73,60,71,61,61,0,75],
[55,44,53,66,57,51,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,71,72,71,71,58],
[66,0,68,72,63,71,66,67],
[58,63,0,68,64,66,70,64],
[60,59,63,0,55,66,60,60],
[59,68,67,76,0,71,71,70],
[60,60,65,65,60,0,67,59],
[60,65,61,71,60,64,0,66],
[73,64,67,71,61,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,76,64,63,71,66],
[68,0,67,74,71,70,65,57],
[62,64,0,77,60,64,68,70],
[55,57,54,0,58,61,59,56],
[67,60,71,73,0,64,64,66],
[68,61,67,70,67,0,61,60],
[60,66,63,72,67,70,0,56],
[65,74,61,75,65,71,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,74,64,63,68,62],
[67,0,69,73,66,59,66,68],
[66,62,0,80,69,71,71,73],
[57,58,51,0,60,55,69,64],
[67,65,62,71,0,61,73,66],
[68,72,60,76,70,0,75,68],
[63,65,60,62,58,56,0,64],
[69,63,58,67,65,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,77,94,82,77,69,61],
[69,0,71,66,65,75,63,70],
[54,60,0,58,57,68,67,54],
[37,65,73,0,54,69,54,45],
[49,66,74,77,0,70,60,76],
[54,56,63,62,61,0,52,52],
[62,68,64,77,71,79,0,65],
[70,61,77,86,55,79,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,55,57,52,52,79,57],
[68,0,58,69,69,73,87,63],
[76,73,0,86,64,64,93,79],
[74,62,45,0,71,64,67,61],
[79,62,67,60,0,53,76,71],
[79,58,67,67,78,0,81,66],
[52,44,38,64,55,50,0,52],
[74,68,52,70,60,65,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,59,64,67,65,70],
[67,0,71,71,68,56,73,71],
[70,60,0,61,63,59,59,70],
[72,60,70,0,66,59,69,77],
[67,63,68,65,0,57,61,75],
[64,75,72,72,74,0,60,75],
[66,58,72,62,70,71,0,78],
[61,60,61,54,56,56,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,63,73,70,79,43,51],
[81,0,84,72,67,88,65,80],
[68,47,0,67,39,50,51,52],
[58,59,64,0,78,74,60,75],
[61,64,92,53,0,85,57,78],
[52,43,81,57,46,0,51,51],
[88,66,80,71,74,80,0,62],
[80,51,79,56,53,80,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,51,49,94,22,24,41],
[117,0,103,46,110,70,76,92],
[80,28,0,74,87,66,38,56],
[82,85,57,0,83,57,40,54],
[37,21,44,48,0,40,17,29],
[109,61,65,74,91,0,45,72],
[107,55,93,91,114,86,0,86],
[90,39,75,77,102,59,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,63,51,38,46,58,45],
[80,0,72,59,39,60,76,55],
[68,59,0,72,57,67,73,50],
[80,72,59,0,69,68,70,58],
[93,92,74,62,0,67,85,68],
[85,71,64,63,64,0,80,58],
[73,55,58,61,46,51,0,51],
[86,76,81,73,63,73,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,54,79,61,54,85,54],
[59,0,54,60,41,48,57,50],
[77,77,0,81,59,76,80,74],
[52,71,50,0,62,54,62,55],
[70,90,72,69,0,60,86,69],
[77,83,55,77,71,0,99,74],
[46,74,51,69,45,32,0,58],
[77,81,57,76,62,57,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,62,70,65,81,60,77],
[50,0,82,76,62,75,55,64],
[69,49,0,42,80,64,71,64],
[61,55,89,0,64,69,54,50],
[66,69,51,67,0,61,44,63],
[50,56,67,62,70,0,54,50],
[71,76,60,77,87,77,0,80],
[54,67,67,81,68,81,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,77,79,76,71,78,73],
[66,0,68,80,70,68,62,71],
[54,63,0,72,68,76,67,71],
[52,51,59,0,57,58,63,56],
[55,61,63,74,0,64,55,57],
[60,63,55,73,67,0,70,61],
[53,69,64,68,76,61,0,63],
[58,60,60,75,74,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,66,65,78,68,70],
[64,0,51,60,59,69,60,68],
[66,80,0,65,80,82,72,73],
[65,71,66,0,78,70,71,64],
[66,72,51,53,0,68,59,63],
[53,62,49,61,63,0,62,63],
[63,71,59,60,72,69,0,63],
[61,63,58,67,68,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,71,60,78,80,77,58],
[51,0,74,69,59,56,57,56],
[60,57,0,52,57,51,58,51],
[71,62,79,0,81,78,72,70],
[53,72,74,50,0,51,54,51],
[51,75,80,53,80,0,63,56],
[54,74,73,59,77,68,0,61],
[73,75,80,61,80,75,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,83,76,66,67,63,68],
[60,0,75,64,67,57,63,60],
[48,56,0,63,59,61,52,53],
[55,67,68,0,59,58,64,60],
[65,64,72,72,0,57,72,68],
[64,74,70,73,74,0,77,63],
[68,68,79,67,59,54,0,70],
[63,71,78,71,63,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,55,62,52,50,59,65],
[81,0,72,66,56,63,70,77],
[76,59,0,61,66,72,64,78],
[69,65,70,0,70,64,67,77],
[79,75,65,61,0,70,74,66],
[81,68,59,67,61,0,65,72],
[72,61,67,64,57,66,0,67],
[66,54,53,54,65,59,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,66,85,61,61,77],
[70,0,80,63,90,61,55,74],
[63,51,0,69,70,67,57,68],
[65,68,62,0,74,62,56,73],
[46,41,61,57,0,43,48,52],
[70,70,64,69,88,0,66,73],
[70,76,74,75,83,65,0,89],
[54,57,63,58,79,58,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,70,62,69,73,59],
[66,0,64,66,63,55,70,63],
[63,67,0,77,75,61,69,71],
[61,65,54,0,68,54,64,51],
[69,68,56,63,0,60,71,63],
[62,76,70,77,71,0,70,64],
[58,61,62,67,60,61,0,63],
[72,68,60,80,68,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,86,69,52,51,63,99],
[52,0,72,92,61,74,83,95],
[45,59,0,66,65,54,82,94],
[62,39,65,0,54,68,77,80],
[79,70,66,77,0,55,73,89],
[80,57,77,63,76,0,56,79],
[68,48,49,54,58,75,0,84],
[32,36,37,51,42,52,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,131,77,59,59,77,113,54],
[0,0,77,59,59,77,59,0],
[54,54,0,0,113,18,54,54],
[72,72,131,0,131,18,54,72],
[72,72,18,0,0,18,54,54],
[54,54,113,113,113,0,54,54],
[18,72,77,77,77,77,0,72],
[77,131,77,59,77,77,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,69,67,71,72,71,74],
[69,0,58,62,69,69,69,73],
[62,73,0,65,69,77,72,76],
[64,69,66,0,58,66,72,71],
[60,62,62,73,0,71,67,62],
[59,62,54,65,60,0,61,65],
[60,62,59,59,64,70,0,62],
[57,58,55,60,69,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,75,61,56,68,63],
[70,0,69,72,58,64,66,61],
[61,62,0,68,56,62,60,62],
[56,59,63,0,59,59,61,65],
[70,73,75,72,0,65,69,65],
[75,67,69,72,66,0,65,71],
[63,65,71,70,62,66,0,63],
[68,70,69,66,66,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,71,63,70,66,70],
[65,0,62,63,65,58,67,68],
[64,69,0,70,58,65,68,71],
[60,68,61,0,64,62,60,70],
[68,66,73,67,0,62,64,74],
[61,73,66,69,69,0,63,70],
[65,64,63,71,67,68,0,72],
[61,63,60,61,57,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,69,53,69,59,57],
[66,0,58,59,82,68,84,74],
[67,73,0,74,72,70,66,63],
[62,72,57,0,58,71,60,60],
[78,49,59,73,0,62,70,69],
[62,63,61,60,69,0,68,55],
[72,47,65,71,61,63,0,67],
[74,57,68,71,62,76,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,79,93,89,56,84,72],
[72,0,66,69,72,72,60,51],
[52,65,0,66,42,68,44,61],
[38,62,65,0,51,46,74,45],
[42,59,89,80,0,46,68,68],
[75,59,63,85,85,0,77,65],
[47,71,87,57,63,54,0,69],
[59,80,70,86,63,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,67,63,59,71,63,74],
[60,0,70,60,67,68,63,79],
[64,61,0,59,62,73,60,81],
[68,71,72,0,81,74,62,85],
[72,64,69,50,0,76,69,78],
[60,63,58,57,55,0,70,76],
[68,68,71,69,62,61,0,84],
[57,52,50,46,53,55,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,75,64,77,73,68,81],
[56,0,62,57,71,62,53,70],
[56,69,0,57,75,66,60,72],
[67,74,74,0,75,64,73,71],
[54,60,56,56,0,63,53,65],
[58,69,65,67,68,0,66,81],
[63,78,71,58,78,65,0,78],
[50,61,59,60,66,50,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,90,76,58,80,66,81],
[60,0,77,59,77,65,61,77],
[41,54,0,50,60,37,50,77],
[55,72,81,0,63,52,56,87],
[73,54,71,68,0,51,58,77],
[51,66,94,79,80,0,77,82],
[65,70,81,75,73,54,0,85],
[50,54,54,44,54,49,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,79,74,56,77,74],
[66,0,64,68,62,64,86,63],
[66,67,0,59,68,65,79,60],
[52,63,72,0,68,68,78,67],
[57,69,63,63,0,53,84,61],
[75,67,66,63,78,0,83,70],
[54,45,52,53,47,48,0,59],
[57,68,71,64,70,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,81,81,81,81,65,115],
[50,0,131,81,81,131,0,50],
[50,0,0,0,0,50,0,50],
[50,50,131,0,0,50,0,50],
[50,50,131,131,0,131,50,50],
[50,0,81,81,0,0,0,50],
[66,131,131,131,81,131,0,50],
[16,81,81,81,81,81,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,61,64,73,69,56,62],
[50,0,48,67,37,48,42,54],
[70,83,0,61,54,74,81,59],
[67,64,70,0,48,60,67,56],
[58,94,77,83,0,56,80,85],
[62,83,57,71,75,0,69,62],
[75,89,50,64,51,62,0,60],
[69,77,72,75,46,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,68,69,58,64,74],
[63,0,61,72,69,51,55,73],
[68,70,0,64,63,65,57,82],
[63,59,67,0,70,56,64,64],
[62,62,68,61,0,67,61,68],
[73,80,66,75,64,0,70,82],
[67,76,74,67,70,61,0,74],
[57,58,49,67,63,49,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,73,67,67,61,72],
[68,0,57,66,60,69,62,71],
[71,74,0,75,64,67,62,70],
[58,65,56,0,58,57,51,70],
[64,71,67,73,0,65,67,73],
[64,62,64,74,66,0,62,68],
[70,69,69,80,64,69,0,72],
[59,60,61,61,58,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,84,114,101,98,71,76],
[106,0,73,102,105,85,59,92],
[47,58,0,81,80,59,37,79],
[17,29,50,0,92,60,50,63],
[30,26,51,39,0,51,51,63],
[33,46,72,71,80,0,58,79],
[60,72,94,81,80,73,0,93],
[55,39,52,68,68,52,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,54,63,63,71,63,63],
[72,0,66,79,63,70,73,78],
[77,65,0,71,79,71,72,78],
[68,52,60,0,75,69,76,65],
[68,68,52,56,0,65,62,77],
[60,61,60,62,66,0,70,68],
[68,58,59,55,69,61,0,63],
[68,53,53,66,54,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,69,90,70,77,63,87],
[55,0,58,62,74,48,67,61],
[62,73,0,60,63,67,61,71],
[41,69,71,0,62,60,56,75],
[61,57,68,69,0,66,69,75],
[54,83,64,71,65,0,54,68],
[68,64,70,75,62,77,0,82],
[44,70,60,56,56,63,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,56,59,67,91,57,60],
[58,0,63,30,66,70,31,47],
[75,68,0,53,63,76,63,43],
[72,101,78,0,67,82,70,62],
[64,65,68,64,0,54,71,71],
[40,61,55,49,77,0,46,67],
[74,100,68,61,60,85,0,34],
[71,84,88,69,60,64,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,59,74,64,58,71,69],
[55,0,39,54,62,54,52,55],
[72,92,0,75,80,74,74,63],
[57,77,56,0,67,68,65,64],
[67,69,51,64,0,60,65,55],
[73,77,57,63,71,0,67,71],
[60,79,57,66,66,64,0,62],
[62,76,68,67,76,60,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,70,67,68,66,70,63],
[71,0,71,66,74,66,58,68],
[61,60,0,62,61,71,62,64],
[64,65,69,0,60,65,62,62],
[63,57,70,71,0,64,70,63],
[65,65,60,66,67,0,61,60],
[61,73,69,69,61,70,0,57],
[68,63,67,69,68,71,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,73,75,62,53,56,63],
[74,0,88,73,73,49,77,69],
[58,43,0,55,52,54,71,47],
[56,58,76,0,76,69,56,54],
[69,58,79,55,0,51,70,66],
[78,82,77,62,80,0,72,82],
[75,54,60,75,61,59,0,50],
[68,62,84,77,65,49,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,62,62,70,70,61],
[66,0,60,68,68,73,74,66],
[64,71,0,67,67,65,63,61],
[69,63,64,0,64,67,75,61],
[69,63,64,67,0,72,69,70],
[61,58,66,64,59,0,73,63],
[61,57,68,56,62,58,0,63],
[70,65,70,70,61,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,68,67,67,70,67,59],
[51,0,67,57,43,73,51,37],
[63,64,0,68,50,77,58,54],
[64,74,63,0,70,66,68,67],
[64,88,81,61,0,64,64,61],
[61,58,54,65,67,0,66,61],
[64,80,73,63,67,65,0,62],
[72,94,77,64,70,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,72,87,65,77,70,63],
[76,0,69,89,68,70,67,63],
[59,62,0,82,73,78,66,64],
[44,42,49,0,53,62,58,62],
[66,63,58,78,0,66,76,69],
[54,61,53,69,65,0,59,57],
[61,64,65,73,55,72,0,60],
[68,68,67,69,62,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,72,63,59,69,61],
[62,0,64,69,57,61,65,71],
[62,67,0,63,64,68,61,67],
[59,62,68,0,60,55,59,64],
[68,74,67,71,0,67,63,69],
[72,70,63,76,64,0,63,70],
[62,66,70,72,68,68,0,64],
[70,60,64,67,62,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,59,44,54,66,51,64],
[56,0,46,59,55,78,72,57],
[72,85,0,67,63,71,80,71],
[87,72,64,0,68,78,72,74],
[77,76,68,63,0,75,75,71],
[65,53,60,53,56,0,56,59],
[80,59,51,59,56,75,0,54],
[67,74,60,57,60,72,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,72,64,75,75,53,68],
[72,0,67,63,76,80,68,63],
[59,64,0,51,70,75,58,59],
[67,68,80,0,79,83,65,75],
[56,55,61,52,0,70,54,61],
[56,51,56,48,61,0,52,58],
[78,63,73,66,77,79,0,68],
[63,68,72,56,70,73,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,67,68,63,76,73],
[62,0,56,75,61,65,70,72],
[64,75,0,79,80,72,82,74],
[64,56,52,0,63,61,70,65],
[63,70,51,68,0,65,61,65],
[68,66,59,70,66,0,63,68],
[55,61,49,61,70,68,0,65],
[58,59,57,66,66,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,88,64,60,60,68,74],
[60,0,78,73,64,63,74,55],
[43,53,0,58,62,42,59,58],
[67,58,73,0,69,62,65,52],
[71,67,69,62,0,67,58,59],
[71,68,89,69,64,0,75,73],
[63,57,72,66,73,56,0,59],
[57,76,73,79,72,58,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,78,68,79,70,69,64],
[70,0,64,79,77,73,69,75],
[53,67,0,64,72,60,56,62],
[63,52,67,0,69,73,60,60],
[52,54,59,62,0,59,54,56],
[61,58,71,58,72,0,54,65],
[62,62,75,71,77,77,0,73],
[67,56,69,71,75,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,69,65,66,57,64],
[61,0,54,66,68,64,59,60],
[67,77,0,68,68,69,65,67],
[62,65,63,0,66,61,66,67],
[66,63,63,65,0,61,66,70],
[65,67,62,70,70,0,63,63],
[74,72,66,65,65,68,0,69],
[67,71,64,64,61,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,58,67,52,62,52,58],
[61,0,76,72,52,55,57,64],
[73,55,0,81,53,67,70,63],
[64,59,50,0,46,80,57,62],
[79,79,78,85,0,73,56,63],
[69,76,64,51,58,0,62,53],
[79,74,61,74,75,69,0,66],
[73,67,68,69,68,78,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,43,72,82,62,87],
[73,0,58,51,53,82,61,65],
[70,73,0,42,21,82,35,66],
[88,80,89,0,57,113,80,82],
[59,78,110,74,0,104,40,96],
[49,49,49,18,27,0,23,56],
[69,70,96,51,91,108,0,89],
[44,66,65,49,35,75,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,67,66,66,72,61,61],
[76,0,63,78,85,80,74,78],
[64,68,0,75,74,89,77,71],
[65,53,56,0,71,76,47,57],
[65,46,57,60,0,75,77,61],
[59,51,42,55,56,0,54,58],
[70,57,54,84,54,77,0,62],
[70,53,60,74,70,73,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,75,73,58,101,70,69],
[70,0,56,42,48,71,72,61],
[56,75,0,51,54,72,69,69],
[58,89,80,0,56,84,73,70],
[73,83,77,75,0,117,62,62],
[30,60,59,47,14,0,33,50],
[61,59,62,58,69,98,0,87],
[62,70,62,61,69,81,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,67,62,54,67,51,49],
[70,0,67,62,64,75,59,60],
[64,64,0,41,62,70,59,49],
[69,69,90,0,69,86,72,52],
[77,67,69,62,0,88,69,67],
[64,56,61,45,43,0,44,46],
[80,72,72,59,62,87,0,68],
[82,71,82,79,64,85,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,60,65,57,67,68],
[63,0,61,65,69,60,65,76],
[69,70,0,64,67,71,69,79],
[71,66,67,0,75,65,68,69],
[66,62,64,56,0,63,54,67],
[74,71,60,66,68,0,68,68],
[64,66,62,63,77,63,0,71],
[63,55,52,62,64,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,76,70,54,72,73,70],
[67,0,69,67,54,69,70,72],
[55,62,0,69,48,74,56,54],
[61,64,62,0,69,73,59,68],
[77,77,83,62,0,80,73,76],
[59,62,57,58,51,0,67,61],
[58,61,75,72,58,64,0,64],
[61,59,77,63,55,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,66,60,67,67,59],
[66,0,72,73,66,66,70,64],
[71,59,0,68,69,61,68,71],
[65,58,63,0,63,60,65,72],
[71,65,62,68,0,65,73,59],
[64,65,70,71,66,0,72,69],
[64,61,63,66,58,59,0,62],
[72,67,60,59,72,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,66,70,63,59,63,56],
[75,0,67,63,68,71,77,60],
[65,64,0,68,68,67,73,59],
[61,68,63,0,66,72,74,61],
[68,63,63,65,0,65,70,68],
[72,60,64,59,66,0,72,60],
[68,54,58,57,61,59,0,55],
[75,71,72,70,63,71,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,69,59,58,68,60,63],
[73,0,68,72,70,70,69,62],
[62,63,0,63,61,63,64,53],
[72,59,68,0,63,65,75,66],
[73,61,70,68,0,66,67,68],
[63,61,68,66,65,0,72,71],
[71,62,67,56,64,59,0,64],
[68,69,78,65,63,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,77,61,69,63,72,61],
[66,0,74,67,63,63,72,70],
[54,57,0,54,49,57,60,67],
[70,64,77,0,66,66,76,67],
[62,68,82,65,0,61,72,77],
[68,68,74,65,70,0,74,63],
[59,59,71,55,59,57,0,56],
[70,61,64,64,54,68,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,63,66,64,68,55],
[62,0,75,72,64,66,61,59],
[63,56,0,66,60,68,74,54],
[68,59,65,0,54,72,68,57],
[65,67,71,77,0,73,71,68],
[67,65,63,59,58,0,67,55],
[63,70,57,63,60,64,0,57],
[76,72,77,74,63,76,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,63,60,64,70,69],
[74,0,71,63,75,68,73,64],
[63,60,0,66,66,65,75,73],
[68,68,65,0,65,63,72,70],
[71,56,65,66,0,59,64,67],
[67,63,66,68,72,0,61,66],
[61,58,56,59,67,70,0,65],
[62,67,58,61,64,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,55,66,61,74,59,83],
[51,0,54,74,66,81,58,66],
[76,77,0,77,59,71,71,79],
[65,57,54,0,50,67,60,71],
[70,65,72,81,0,80,61,79],
[57,50,60,64,51,0,41,63],
[72,73,60,71,70,90,0,85],
[48,65,52,60,52,68,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,76,85,82,70,69,68],
[77,0,85,74,82,80,78,65],
[55,46,0,74,70,66,81,58],
[46,57,57,0,42,49,61,52],
[49,49,61,89,0,65,66,66],
[61,51,65,82,66,0,65,66],
[62,53,50,70,65,66,0,54],
[63,66,73,79,65,65,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,75,63,71,69,64],
[62,0,71,68,65,69,71,61],
[61,60,0,72,67,64,68,70],
[56,63,59,0,68,59,58,60],
[68,66,64,63,0,65,70,67],
[60,62,67,72,66,0,67,58],
[62,60,63,73,61,64,0,63],
[67,70,61,71,64,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,59,60,61,67,63],
[65,0,69,65,64,68,65,63],
[65,62,0,64,65,58,64,67],
[72,66,67,0,64,66,69,70],
[71,67,66,67,0,62,75,67],
[70,63,73,65,69,0,67,67],
[64,66,67,62,56,64,0,64],
[68,68,64,61,64,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,54,61,59,52,68,64],
[69,0,61,66,52,65,71,65],
[77,70,0,68,55,61,70,65],
[70,65,63,0,54,66,63,56],
[72,79,76,77,0,58,71,69],
[79,66,70,65,73,0,72,64],
[63,60,61,68,60,59,0,54],
[67,66,66,75,62,67,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,75,64,72,70,64,75],
[61,0,74,71,77,75,76,71],
[56,57,0,57,63,66,69,70],
[67,60,74,0,81,70,65,64],
[59,54,68,50,0,65,69,63],
[61,56,65,61,66,0,64,60],
[67,55,62,66,62,67,0,70],
[56,60,61,67,68,71,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,55,54,50,61,52,55],
[75,0,73,52,69,55,64,65],
[76,58,0,55,60,48,43,38],
[77,79,76,0,66,59,66,64],
[81,62,71,65,0,71,66,60],
[70,76,83,72,60,0,68,70],
[79,67,88,65,65,63,0,67],
[76,66,93,67,71,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,49,54,71,51,71,71],
[72,0,77,59,66,60,76,62],
[82,54,0,69,63,63,73,58],
[77,72,62,0,89,74,91,67],
[60,65,68,42,0,50,80,56],
[80,71,68,57,81,0,92,81],
[60,55,58,40,51,39,0,55],
[60,69,73,64,75,50,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,24,80,40,16,62],
[110,0,65,67,85,83,85,88],
[108,66,0,59,75,96,54,101],
[107,64,72,0,75,58,72,79],
[51,46,56,56,0,55,44,88],
[91,48,35,73,76,0,55,82],
[115,46,77,59,87,76,0,99],
[69,43,30,52,43,49,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,80,78,68,62,79,88],
[65,0,77,69,79,66,81,75],
[51,54,0,64,62,55,59,74],
[53,62,67,0,63,54,55,62],
[63,52,69,68,0,61,55,74],
[69,65,76,77,70,0,64,80],
[52,50,72,76,76,67,0,67],
[43,56,57,69,57,51,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,49,50,35,28,57,36],
[97,0,90,53,60,64,82,61],
[82,41,0,69,42,49,87,52],
[81,78,62,0,69,39,77,70],
[96,71,89,62,0,56,83,71],
[103,67,82,92,75,0,93,64],
[74,49,44,54,48,38,0,44],
[95,70,79,61,60,67,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,62,70,75,68,73,73],
[60,0,60,66,70,64,74,68],
[69,71,0,62,68,71,72,68],
[61,65,69,0,71,72,65,71],
[56,61,63,60,0,51,69,69],
[63,67,60,59,80,0,74,75],
[58,57,59,66,62,57,0,66],
[58,63,63,60,62,56,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,69,71,65,69,73],
[72,0,70,68,68,62,67,65],
[65,61,0,71,65,66,64,65],
[62,63,60,0,71,65,63,72],
[60,63,66,60,0,66,63,73],
[66,69,65,66,65,0,62,82],
[62,64,67,68,68,69,0,74],
[58,66,66,59,58,49,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,66,67,66,64,68],
[69,0,72,66,65,70,68,68],
[57,59,0,62,60,64,59,63],
[65,65,69,0,67,66,66,73],
[64,66,71,64,0,63,64,62],
[65,61,67,65,68,0,62,63],
[67,63,72,65,67,69,0,69],
[63,63,68,58,69,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,53,61,64,55,63,58],
[67,0,65,71,67,58,56,61],
[78,66,0,76,64,69,68,77],
[70,60,55,0,63,54,63,51],
[67,64,67,68,0,56,62,52],
[76,73,62,77,75,0,70,74],
[68,75,63,68,69,61,0,61],
[73,70,54,80,79,57,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,60,64,75,63,69],
[59,0,61,57,53,58,53,63],
[64,70,0,50,59,60,56,60],
[71,74,81,0,72,75,65,77],
[67,78,72,59,0,70,59,70],
[56,73,71,56,61,0,66,70],
[68,78,75,66,72,65,0,77],
[62,68,71,54,61,61,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,73,57,80,52,57,61],
[70,0,73,53,69,61,57,64],
[58,58,0,56,58,47,48,57],
[74,78,75,0,76,60,65,78],
[51,62,73,55,0,43,54,54],
[79,70,84,71,88,0,65,72],
[74,74,83,66,77,66,0,63],
[70,67,74,53,77,59,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,71,67,64,67,66],
[67,0,77,65,74,69,68,68],
[66,54,0,62,63,69,67,75],
[60,66,69,0,69,62,67,66],
[64,57,68,62,0,60,63,59],
[67,62,62,69,71,0,72,66],
[64,63,64,64,68,59,0,62],
[65,63,56,65,72,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,65,66,73,66,64],
[71,0,78,68,67,68,65,57],
[65,53,0,52,68,62,56,57],
[66,63,79,0,74,71,66,62],
[65,64,63,57,0,69,62,63],
[58,63,69,60,62,0,61,65],
[65,66,75,65,69,70,0,69],
[67,74,74,69,68,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,66,62,75,66,64],
[65,0,62,62,63,71,72,71],
[63,69,0,56,64,72,59,66],
[65,69,75,0,69,68,76,66],
[69,68,67,62,0,67,71,65],
[56,60,59,63,64,0,64,61],
[65,59,72,55,60,67,0,72],
[67,60,65,65,66,70,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,90,78,61,67,72,64],
[57,0,58,56,56,49,46,66],
[41,73,0,64,50,58,59,70],
[53,75,67,0,70,51,60,70],
[70,75,81,61,0,61,69,77],
[64,82,73,80,70,0,58,65],
[59,85,72,71,62,73,0,78],
[67,65,61,61,54,66,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,78,69,62,62,69,64],
[67,0,78,77,67,58,61,66],
[53,53,0,62,47,60,59,48],
[62,54,69,0,54,52,52,62],
[69,64,84,77,0,69,74,64],
[69,73,71,79,62,0,83,63],
[62,70,72,79,57,48,0,58],
[67,65,83,69,67,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,45,70,65,64,68],
[60,0,84,64,77,79,74,72],
[61,47,0,45,68,63,74,73],
[86,67,86,0,83,65,81,85],
[61,54,63,48,0,63,59,67],
[66,52,68,66,68,0,72,76],
[67,57,57,50,72,59,0,74],
[63,59,58,46,64,55,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,58,63,47,68,60,65],
[50,0,47,60,53,55,76,63],
[73,84,0,58,78,80,84,74],
[68,71,73,0,63,81,73,70],
[84,78,53,68,0,79,82,82],
[63,76,51,50,52,0,82,64],
[71,55,47,58,49,49,0,66],
[66,68,57,61,49,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,56,71,61,62,66,63],
[66,0,63,72,61,73,72,69],
[75,68,0,68,69,60,65,76],
[60,59,63,0,56,67,57,64],
[70,70,62,75,0,66,66,72],
[69,58,71,64,65,0,64,70],
[65,59,66,74,65,67,0,75],
[68,62,55,67,59,61,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,51,56,54,49,59,73],
[66,0,59,59,58,59,68,67],
[80,72,0,70,65,60,65,75],
[75,72,61,0,71,66,73,71],
[77,73,66,60,0,59,67,68],
[82,72,71,65,72,0,73,71],
[72,63,66,58,64,58,0,73],
[58,64,56,60,63,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,57,77,57,75,74],
[67,0,40,56,89,59,58,44],
[69,91,0,63,78,74,75,85],
[74,75,68,0,63,62,66,59],
[54,42,53,68,0,45,66,55],
[74,72,57,69,86,0,52,58],
[56,73,56,65,65,79,0,77],
[57,87,46,72,76,73,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,70,80,62,67,66,70],
[65,0,74,78,60,70,66,73],
[61,57,0,69,60,67,61,57],
[51,53,62,0,57,65,55,66],
[69,71,71,74,0,66,62,71],
[64,61,64,66,65,0,66,69],
[65,65,70,76,69,65,0,70],
[61,58,74,65,60,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,67,59,71,65,87],
[60,0,57,61,69,52,63,61],
[60,74,0,67,65,64,59,67],
[64,70,64,0,75,73,65,68],
[72,62,66,56,0,69,68,79],
[60,79,67,58,62,0,67,84],
[66,68,72,66,63,64,0,75],
[44,70,64,63,52,47,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,97,56,75,69,67,84,63],
[34,0,47,59,75,41,75,63],
[75,84,0,86,100,61,81,95],
[56,72,45,0,82,56,71,58],
[62,56,31,49,0,21,71,30],
[64,90,70,75,110,0,90,82],
[47,56,50,60,60,41,0,50],
[68,68,36,73,101,49,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,76,80,74,78,71],
[62,0,58,79,63,73,68,58],
[67,73,0,67,67,71,63,67],
[55,52,64,0,65,62,68,74],
[51,68,64,66,0,67,54,66],
[57,58,60,69,64,0,73,74],
[53,63,68,63,77,58,0,71],
[60,73,64,57,65,57,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,64,70,78,67,64],
[61,0,66,67,66,88,59,62],
[67,65,0,58,56,85,59,58],
[67,64,73,0,62,83,67,63],
[61,65,75,69,0,84,70,74],
[53,43,46,48,47,0,50,51],
[64,72,72,64,61,81,0,67],
[67,69,73,68,57,80,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,64,66,65,67,72,62],
[58,0,68,61,62,66,62,62],
[67,63,0,63,62,60,62,56],
[65,70,68,0,65,58,63,65],
[66,69,69,66,0,62,71,60],
[64,65,71,73,69,0,68,68],
[59,69,69,68,60,63,0,64],
[69,69,75,66,71,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,77,76,79,78,77,80],
[67,0,63,74,70,61,65,70],
[54,68,0,69,60,58,62,63],
[55,57,62,0,67,63,61,65],
[52,61,71,64,0,64,69,66],
[53,70,73,68,67,0,67,71],
[54,66,69,70,62,64,0,67],
[51,61,68,66,65,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,69,62,65,60,62],
[61,0,65,69,55,62,61,67],
[66,66,0,74,61,60,68,65],
[62,62,57,0,52,58,68,60],
[69,76,70,79,0,65,68,54],
[66,69,71,73,66,0,73,61],
[71,70,63,63,63,58,0,61],
[69,64,66,71,77,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,77,70,76,68,66,63],
[67,0,71,68,67,67,60,59],
[54,60,0,69,66,60,60,62],
[61,63,62,0,70,57,64,54],
[55,64,65,61,0,60,61,62],
[63,64,71,74,71,0,67,68],
[65,71,71,67,70,64,0,54],
[68,72,69,77,69,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,53,63,62,70,72,70],
[72,0,64,77,66,72,70,68],
[78,67,0,73,65,79,75,70],
[68,54,58,0,63,65,63,62],
[69,65,66,68,0,71,69,67],
[61,59,52,66,60,0,61,58],
[59,61,56,68,62,70,0,68],
[61,63,61,69,64,73,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,67,48,62,81,61,22],
[84,0,78,58,82,85,64,35],
[64,53,0,49,70,60,37,29],
[83,73,82,0,86,72,67,61],
[69,49,61,45,0,68,18,53],
[50,46,71,59,63,0,48,42],
[70,67,94,64,113,83,0,71],
[109,96,102,70,78,89,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,62,68,68,59,59,64],
[66,0,69,66,70,62,65,66],
[69,62,0,69,64,60,65,65],
[63,65,62,0,65,58,57,64],
[63,61,67,66,0,63,61,67],
[72,69,71,73,68,0,69,64],
[72,66,66,74,70,62,0,71],
[67,65,66,67,64,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,78,72,74,64,76,45],
[74,0,71,72,61,62,64,70],
[53,60,0,62,51,50,70,45],
[59,59,69,0,59,52,73,59],
[57,70,80,72,0,54,79,74],
[67,69,81,79,77,0,70,64],
[55,67,61,58,52,61,0,61],
[86,61,86,72,57,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,80,62,77,84,77,66],
[69,0,75,61,77,75,65,71],
[51,56,0,73,79,69,60,59],
[69,70,58,0,58,68,55,59],
[54,54,52,73,0,83,53,60],
[47,56,62,63,48,0,51,50],
[54,66,71,76,78,80,0,60],
[65,60,72,72,71,81,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,59,70,67,69,64],
[75,0,70,65,79,72,70,79],
[74,61,0,71,70,66,69,72],
[72,66,60,0,73,71,64,62],
[61,52,61,58,0,56,57,60],
[64,59,65,60,75,0,60,80],
[62,61,62,67,74,71,0,63],
[67,52,59,69,71,51,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,69,64,67,71,69],
[63,0,67,65,62,58,72,68],
[59,64,0,64,60,63,58,68],
[62,66,67,0,70,69,77,73],
[67,69,71,61,0,69,69,66],
[64,73,68,62,62,0,70,67],
[60,59,73,54,62,61,0,64],
[62,63,63,58,65,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,56,61,52,52,61,61],
[57,0,38,48,54,64,53,54],
[75,93,0,64,69,82,70,82],
[70,83,67,0,55,64,70,70],
[79,77,62,76,0,81,68,88],
[79,67,49,67,50,0,56,68],
[70,78,61,61,63,75,0,82],
[70,77,49,61,43,63,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,59,68,72,61,63,62],
[64,0,53,69,62,61,62,63],
[72,78,0,68,71,64,61,57],
[63,62,63,0,61,56,64,62],
[59,69,60,70,0,66,56,62],
[70,70,67,75,65,0,66,70],
[68,69,70,67,75,65,0,69],
[69,68,74,69,69,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,72,68,68,69,73],
[62,0,61,67,66,59,73,68],
[67,70,0,70,69,55,69,71],
[59,64,61,0,59,60,69,65],
[63,65,62,72,0,60,70,69],
[63,72,76,71,71,0,76,78],
[62,58,62,62,61,55,0,58],
[58,63,60,66,62,53,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,71,67,70,56,69],
[68,0,74,78,71,62,67,71],
[68,57,0,65,62,59,60,61],
[60,53,66,0,60,64,59,77],
[64,60,69,71,0,66,58,80],
[61,69,72,67,65,0,58,65],
[75,64,71,72,73,73,0,76],
[62,60,70,54,51,66,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,55,56,62,54,66,56],
[71,0,60,65,72,66,73,73],
[76,71,0,82,76,72,56,58],
[75,66,49,0,56,59,64,58],
[69,59,55,75,0,61,59,63],
[77,65,59,72,70,0,66,67],
[65,58,75,67,72,65,0,59],
[75,58,73,73,68,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,69,70,68,66,67],
[68,0,65,65,70,65,70,66],
[67,66,0,61,72,70,64,64],
[62,66,70,0,74,68,64,68],
[61,61,59,57,0,65,57,61],
[63,66,61,63,66,0,62,74],
[65,61,67,67,74,69,0,66],
[64,65,67,63,70,57,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,61,61,65,64,75],
[67,0,60,66,69,62,65,72],
[71,71,0,68,66,54,73,82],
[70,65,63,0,64,67,67,72],
[70,62,65,67,0,57,70,70],
[66,69,77,64,74,0,72,80],
[67,66,58,64,61,59,0,73],
[56,59,49,59,61,51,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,54,31,54,60,64,61],
[75,0,47,49,59,47,68,91],
[77,84,0,60,52,62,78,100],
[100,82,71,0,66,71,64,87],
[77,72,79,65,0,94,82,82],
[71,84,69,60,37,0,82,69],
[67,63,53,67,49,49,0,81],
[70,40,31,44,49,62,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,68,63,79,63,61],
[71,0,67,71,65,69,69,63],
[63,64,0,56,62,65,57,52],
[63,60,75,0,62,70,69,69],
[68,66,69,69,0,86,68,59],
[52,62,66,61,45,0,64,54],
[68,62,74,62,63,67,0,68],
[70,68,79,62,72,77,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,73,71,54,73,74],
[63,0,70,75,77,77,78,70],
[60,61,0,71,67,62,76,72],
[58,56,60,0,60,54,54,61],
[60,54,64,71,0,71,70,72],
[77,54,69,77,60,0,76,73],
[58,53,55,77,61,55,0,58],
[57,61,59,70,59,58,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,47,56,62,47,72,50],
[77,0,58,58,71,56,84,73],
[84,73,0,61,79,69,88,73],
[75,73,70,0,70,63,76,68],
[69,60,52,61,0,61,76,71],
[84,75,62,68,70,0,75,77],
[59,47,43,55,55,56,0,56],
[81,58,58,63,60,54,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,59,58,59,62,58],
[68,0,71,68,66,70,57,66],
[72,60,0,67,64,72,54,63],
[72,63,64,0,62,65,61,61],
[73,65,67,69,0,69,64,66],
[72,61,59,66,62,0,66,62],
[69,74,77,70,67,65,0,69],
[73,65,68,70,65,69,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,49,47,51,53,35,50],
[84,0,83,68,63,80,76,65],
[82,48,0,49,25,38,68,34],
[84,63,82,0,68,70,74,54],
[80,68,106,63,0,56,70,55],
[78,51,93,61,75,0,77,73],
[96,55,63,57,61,54,0,52],
[81,66,97,77,76,58,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,76,63,67,56,69,64],
[60,0,64,70,68,58,61,55],
[55,67,0,62,63,59,58,68],
[68,61,69,0,73,67,64,65],
[64,63,68,58,0,68,68,71],
[75,73,72,64,63,0,56,69],
[62,70,73,67,63,75,0,67],
[67,76,63,66,60,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,58,59,54,71,67,68],
[62,0,56,60,52,65,51,61],
[73,75,0,70,67,71,63,70],
[72,71,61,0,53,76,58,69],
[77,79,64,78,0,80,66,74],
[60,66,60,55,51,0,59,59],
[64,80,68,73,65,72,0,60],
[63,70,61,62,57,72,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,53,52,50,48,66,53],
[61,0,55,61,58,63,69,75],
[78,76,0,77,78,63,62,73],
[79,70,54,0,66,72,69,52],
[81,73,53,65,0,84,79,71],
[83,68,68,59,47,0,70,65],
[65,62,69,62,52,61,0,56],
[78,56,58,79,60,66,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,76,67,69,71,74,65],
[51,0,68,53,56,71,54,55],
[55,63,0,56,57,62,59,58],
[64,78,75,0,60,67,77,68],
[62,75,74,71,0,76,74,66],
[60,60,69,64,55,0,61,54],
[57,77,72,54,57,70,0,57],
[66,76,73,63,65,77,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,74,63,57,68,67],
[70,0,73,76,70,67,72,63],
[70,58,0,72,73,55,60,74],
[57,55,59,0,63,57,57,66],
[68,61,58,68,0,68,64,62],
[74,64,76,74,63,0,72,72],
[63,59,71,74,67,59,0,66],
[64,68,57,65,69,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,74,72,80,60,65,73],
[56,0,75,57,65,49,56,68],
[57,56,0,62,56,51,49,65],
[59,74,69,0,71,67,58,68],
[51,66,75,60,0,58,56,71],
[71,82,80,64,73,0,73,77],
[66,75,82,73,75,58,0,76],
[58,63,66,63,60,54,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,64,56,56,66,63],
[71,0,66,63,60,61,71,61],
[71,65,0,59,68,64,83,64],
[67,68,72,0,71,73,77,60],
[75,71,63,60,0,76,72,67],
[75,70,67,58,55,0,67,64],
[65,60,48,54,59,64,0,51],
[68,70,67,71,64,67,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,58,68,57,76,63],
[69,0,60,70,64,59,68,68],
[70,71,0,67,75,64,72,63],
[73,61,64,0,65,53,69,55],
[63,67,56,66,0,58,65,54],
[74,72,67,78,73,0,73,62],
[55,63,59,62,66,58,0,64],
[68,63,68,76,77,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,60,79,80,81,77],
[64,0,49,72,54,76,62,67],
[65,82,0,71,77,87,82,67],
[71,59,60,0,58,72,58,57],
[52,77,54,73,0,79,88,73],
[51,55,44,59,52,0,58,60],
[50,69,49,73,43,73,0,48],
[54,64,64,74,58,71,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,77,72,46,77,68,48],
[82,0,93,94,61,73,74,76],
[54,38,0,68,67,83,67,67],
[59,37,63,0,47,72,64,51],
[85,70,64,84,0,78,71,67],
[54,58,48,59,53,0,69,47],
[63,57,64,67,60,62,0,64],
[83,55,64,80,64,84,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,111,55,10,75,10,10,0],
[20,0,65,30,75,0,30,20],
[76,66,0,66,86,66,10,0],
[121,101,65,0,65,0,45,65],
[56,56,45,66,0,0,0,0],
[121,131,65,131,131,0,75,65],
[121,101,121,86,131,56,0,121],
[131,111,131,66,131,66,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,69,67,75,77,73],
[61,0,58,64,57,63,69,70],
[67,73,0,70,68,63,66,66],
[62,67,61,0,62,65,73,69],
[64,74,63,69,0,59,75,74],
[56,68,68,66,72,0,77,76],
[54,62,65,58,56,54,0,67],
[58,61,65,62,57,55,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,58,65,65,62,71],
[63,0,73,67,65,66,66,61],
[59,58,0,59,56,59,51,49],
[73,64,72,0,73,67,68,83],
[66,66,75,58,0,61,71,59],
[66,65,72,64,70,0,63,64],
[69,65,80,63,60,68,0,68],
[60,70,82,48,72,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,54,64,62,61,66,64],
[64,0,65,74,61,61,72,66],
[77,66,0,78,67,70,70,60],
[67,57,53,0,64,62,64,57],
[69,70,64,67,0,59,71,69],
[70,70,61,69,72,0,66,67],
[65,59,61,67,60,65,0,55],
[67,65,71,74,62,64,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,61,79,62,65,57,60],
[75,0,59,75,65,65,63,56],
[70,72,0,80,61,73,56,75],
[52,56,51,0,53,63,42,61],
[69,66,70,78,0,61,66,73],
[66,66,58,68,70,0,67,63],
[74,68,75,89,65,64,0,75],
[71,75,56,70,58,68,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,59,71,64,65,65],
[68,0,74,69,79,71,61,71],
[71,57,0,72,72,68,67,72],
[72,62,59,0,73,64,65,70],
[60,52,59,58,0,56,61,59],
[67,60,63,67,75,0,69,69],
[66,70,64,66,70,62,0,62],
[66,60,59,61,72,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,60,66,62,59,60,65],
[63,0,59,64,67,49,64,49],
[71,72,0,62,66,57,57,60],
[65,67,69,0,70,54,57,61],
[69,64,65,61,0,65,65,56],
[72,82,74,77,66,0,70,64],
[71,67,74,74,66,61,0,67],
[66,82,71,70,75,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,51,65,64,60,64,60],
[63,0,51,56,65,60,59,62],
[80,80,0,66,75,65,62,79],
[66,75,65,0,67,63,67,73],
[67,66,56,64,0,72,69,65],
[71,71,66,68,59,0,68,61],
[67,72,69,64,62,63,0,62],
[71,69,52,58,66,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,62,61,76,66,66,65],
[57,0,66,67,69,63,64,67],
[69,65,0,60,73,71,70,75],
[70,64,71,0,74,69,70,73],
[55,62,58,57,0,57,70,61],
[65,68,60,62,74,0,67,73],
[65,67,61,61,61,64,0,65],
[66,64,56,58,70,58,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,70,87,72,55,73,79],
[65,0,78,75,71,75,75,88],
[61,53,0,77,68,64,65,80],
[44,56,54,0,40,37,56,65],
[59,60,63,91,0,41,59,76],
[76,56,67,94,90,0,71,96],
[58,56,66,75,72,60,0,72],
[52,43,51,66,55,35,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,50,97,65,69,41,61],
[87,0,53,80,81,95,71,75],
[81,78,0,82,33,89,62,73],
[34,51,49,0,30,81,44,55],
[66,50,98,101,0,72,57,86],
[62,36,42,50,59,0,74,61],
[90,60,69,87,74,57,0,72],
[70,56,58,76,45,70,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,73,58,66,66,73,70],
[67,0,70,66,68,71,74,63],
[58,61,0,60,59,63,71,63],
[73,65,71,0,70,74,71,72],
[65,63,72,61,0,72,79,66],
[65,60,68,57,59,0,71,68],
[58,57,60,60,52,60,0,56],
[61,68,68,59,65,63,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,67,65,72,88,62,65],
[76,0,75,62,70,79,69,74],
[64,56,0,73,62,76,57,43],
[66,69,58,0,62,74,51,42],
[59,61,69,69,0,78,75,63],
[43,52,55,57,53,0,56,50],
[69,62,74,80,56,75,0,50],
[66,57,88,89,68,81,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,63,47,61,46,54,67],
[59,0,56,57,78,62,57,71],
[68,75,0,44,53,55,53,42],
[84,74,87,0,83,80,52,79],
[70,53,78,48,0,72,40,67],
[85,69,76,51,59,0,49,66],
[77,74,78,79,91,82,0,61],
[64,60,89,52,64,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,64,69,65,58,75],
[69,0,68,59,70,62,57,68],
[70,63,0,67,68,63,66,77],
[67,72,64,0,76,68,64,76],
[62,61,63,55,0,57,62,67],
[66,69,68,63,74,0,55,79],
[73,74,65,67,69,76,0,71],
[56,63,54,55,64,52,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,67,65,52,59,58,59],
[69,0,66,68,63,61,61,62],
[64,65,0,66,58,64,65,71],
[66,63,65,0,59,66,58,71],
[79,68,73,72,0,63,68,70],
[72,70,67,65,68,0,74,66],
[73,70,66,73,63,57,0,70],
[72,69,60,60,61,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,67,82,64,73,68,77],
[52,0,60,66,50,73,56,54],
[64,71,0,72,64,71,61,74],
[49,65,59,0,45,63,52,56],
[67,81,67,86,0,75,58,77],
[58,58,60,68,56,0,51,55],
[63,75,70,79,73,80,0,82],
[54,77,57,75,54,76,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,63,58,70,55,70],
[58,0,67,62,45,62,63,55],
[65,64,0,67,51,63,67,53],
[68,69,64,0,69,69,59,71],
[73,86,80,62,0,78,71,73],
[61,69,68,62,53,0,61,62],
[76,68,64,72,60,70,0,64],
[61,76,78,60,58,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,70,64,76,66,73],
[67,0,74,65,59,68,62,70],
[60,57,0,63,58,63,51,59],
[61,66,68,0,64,64,60,69],
[67,72,73,67,0,72,67,64],
[55,63,68,67,59,0,53,55],
[65,69,80,71,64,78,0,65],
[58,61,72,62,67,76,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,56,60,59,57,67,60],
[73,0,62,62,57,56,69,66],
[75,69,0,63,69,64,75,72],
[71,69,68,0,56,62,74,75],
[72,74,62,75,0,76,85,85],
[74,75,67,69,55,0,69,67],
[64,62,56,57,46,62,0,60],
[71,65,59,56,46,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,72,48,58,83,69,63],
[82,0,69,62,74,76,68,66],
[59,62,0,60,66,45,68,75],
[83,69,71,0,64,90,68,86],
[73,57,65,67,0,93,55,87],
[48,55,86,41,38,0,52,72],
[62,63,63,63,76,79,0,60],
[68,65,56,45,44,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,65,79,66,69,64],
[63,0,62,63,72,66,63,69],
[64,69,0,75,73,66,68,77],
[66,68,56,0,73,65,63,63],
[52,59,58,58,0,69,62,63],
[65,65,65,66,62,0,63,71],
[62,68,63,68,69,68,0,63],
[67,62,54,68,68,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,63,69,71,67,70],
[62,0,60,58,67,64,58,65],
[65,71,0,72,64,66,67,72],
[68,73,59,0,68,62,67,63],
[62,64,67,63,0,66,60,61],
[60,67,65,69,65,0,61,66],
[64,73,64,64,71,70,0,62],
[61,66,59,68,70,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,83,71,50,44,83,36],
[73,0,79,58,61,51,82,82],
[48,52,0,57,57,52,98,43],
[60,73,74,0,39,46,73,46],
[81,70,74,92,0,56,87,57],
[87,80,79,85,75,0,106,57],
[48,49,33,58,44,25,0,30],
[95,49,88,85,74,74,101,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,65,63,65,67,57],
[66,0,71,65,70,65,72,58],
[67,60,0,61,63,58,71,66],
[66,66,70,0,71,59,67,61],
[68,61,68,60,0,59,72,70],
[66,66,73,72,72,0,72,61],
[64,59,60,64,59,59,0,58],
[74,73,65,70,61,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,61,61,60,65,61],
[63,0,76,71,74,51,67,66],
[64,55,0,68,68,59,58,64],
[70,60,63,0,65,59,62,63],
[70,57,63,66,0,65,62,66],
[71,80,72,72,66,0,64,74],
[66,64,73,69,69,67,0,72],
[70,65,67,68,65,57,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,42,60,78,58,65,57],
[53,0,66,83,97,73,62,66],
[89,65,0,75,100,80,90,78],
[71,48,56,0,74,51,81,50],
[53,34,31,57,0,46,74,38],
[73,58,51,80,85,0,69,67],
[66,69,41,50,57,62,0,72],
[74,65,53,81,93,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,61,59,54,57,55,65],
[81,0,69,72,54,71,59,68],
[70,62,0,68,79,71,73,75],
[72,59,63,0,56,59,66,70],
[77,77,52,75,0,65,78,89],
[74,60,60,72,66,0,63,80],
[76,72,58,65,53,68,0,78],
[66,63,56,61,42,51,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,79,63,69,68,64,70],
[65,0,66,63,69,69,63,74],
[52,65,0,58,69,60,70,61],
[68,68,73,0,69,59,80,75],
[62,62,62,62,0,62,71,63],
[63,62,71,72,69,0,64,73],
[67,68,61,51,60,67,0,64],
[61,57,70,56,68,58,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,74,68,65,72,70,70],
[75,0,85,72,72,77,70,63],
[57,46,0,59,44,57,58,58],
[63,59,72,0,59,61,62,64],
[66,59,87,72,0,75,73,64],
[59,54,74,70,56,0,60,59],
[61,61,73,69,58,71,0,65],
[61,68,73,67,67,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,79,65,79,75,64,68],
[66,0,73,69,79,68,63,73],
[52,58,0,56,66,62,58,58],
[66,62,75,0,75,69,70,71],
[52,52,65,56,0,56,59,58],
[56,63,69,62,75,0,55,56],
[67,68,73,61,72,76,0,67],
[63,58,73,60,73,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,75,54,82,62,78,78],
[47,0,66,53,50,47,64,45],
[56,65,0,66,66,73,58,60],
[77,78,65,0,66,85,69,71],
[49,81,65,65,0,60,86,66],
[69,84,58,46,71,0,64,66],
[53,67,73,62,45,67,0,69],
[53,86,71,60,65,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,78,72,76,106,73,65],
[55,0,62,62,53,86,57,57],
[53,69,0,50,55,84,58,79],
[59,69,81,0,92,99,67,73],
[55,78,76,39,0,82,60,70],
[25,45,47,32,49,0,51,44],
[58,74,73,64,71,80,0,83],
[66,74,52,58,61,87,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,75,64,65,74,71,74],
[77,0,61,70,67,73,62,67],
[56,70,0,67,72,83,54,72],
[67,61,64,0,66,61,57,77],
[66,64,59,65,0,67,60,70],
[57,58,48,70,64,0,44,69],
[60,69,77,74,71,87,0,94],
[57,64,59,54,61,62,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,62,80,68,63,66,68],
[48,0,70,73,68,71,63,70],
[69,61,0,79,72,59,58,56],
[51,58,52,0,57,69,53,54],
[63,63,59,74,0,61,56,64],
[68,60,72,62,70,0,62,67],
[65,68,73,78,75,69,0,73],
[63,61,75,77,67,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,69,65,59,61,78,63],
[51,0,79,68,61,47,75,56],
[62,52,0,60,48,66,66,69],
[66,63,71,0,58,60,58,58],
[72,70,83,73,0,59,76,68],
[70,84,65,71,72,0,72,79],
[53,56,65,73,55,59,0,60],
[68,75,62,73,63,52,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,77,52,79,83,60,73],
[57,0,63,65,62,87,49,59],
[54,68,0,58,58,95,65,91],
[79,66,73,0,41,60,84,73],
[52,69,73,90,0,80,54,70],
[48,44,36,71,51,0,59,37],
[71,82,66,47,77,72,0,78],
[58,72,40,58,61,94,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,78,67,68,67,62],
[63,0,73,84,61,79,59,68],
[60,58,0,75,62,63,64,61],
[53,47,56,0,51,62,61,55],
[64,70,69,80,0,79,69,67],
[63,52,68,69,52,0,46,51],
[64,72,67,70,62,85,0,62],
[69,63,70,76,64,80,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,55,73,62,44,75,68],
[73,0,56,60,76,60,65,71],
[76,75,0,80,80,65,84,78],
[58,71,51,0,79,72,74,75],
[69,55,51,52,0,64,75,71],
[87,71,66,59,67,0,63,81],
[56,66,47,57,56,68,0,69],
[63,60,53,56,60,50,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,55,69,68,58,71,68],
[70,0,56,64,70,68,63,63],
[76,75,0,75,62,75,75,74],
[62,67,56,0,59,57,67,71],
[63,61,69,72,0,59,67,76],
[73,63,56,74,72,0,76,65],
[60,68,56,64,64,55,0,64],
[63,68,57,60,55,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,71,54,56,52,64],
[65,0,61,75,64,58,63,76],
[68,70,0,72,67,65,70,69],
[60,56,59,0,56,62,49,60],
[77,67,64,75,0,73,72,70],
[75,73,66,69,58,0,61,67],
[79,68,61,82,59,70,0,64],
[67,55,62,71,61,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,73,64,67,64,75,66],
[61,0,63,55,62,54,61,47],
[58,68,0,59,63,64,64,52],
[67,76,72,0,75,62,73,62],
[64,69,68,56,0,60,56,56],
[67,77,67,69,71,0,65,66],
[56,70,67,58,75,66,0,72],
[65,84,79,69,75,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,61,54,61,73,59,68],
[59,0,58,66,63,67,60,62],
[70,73,0,67,58,78,72,70],
[77,65,64,0,66,60,63,67],
[70,68,73,65,0,69,68,65],
[58,64,53,71,62,0,65,63],
[72,71,59,68,63,66,0,72],
[63,69,61,64,66,68,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,51,47,67,63,72],
[61,0,74,67,47,48,68,70],
[62,57,0,62,45,38,68,81],
[80,64,69,0,68,57,75,52],
[84,84,86,63,0,74,87,99],
[64,83,93,74,57,0,93,76],
[68,63,63,56,44,38,0,61],
[59,61,50,79,32,55,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,61,64,69,92,71,83],
[56,0,52,50,58,62,58,61],
[70,79,0,55,68,68,74,74],
[67,81,76,0,69,64,76,78],
[62,73,63,62,0,50,70,72],
[39,69,63,67,81,0,69,72],
[60,73,57,55,61,62,0,65],
[48,70,57,53,59,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,75,69,75,60,70,76],
[62,0,75,68,78,69,65,69],
[56,56,0,56,60,57,56,56],
[62,63,75,0,74,60,66,74],
[56,53,71,57,0,64,65,66],
[71,62,74,71,67,0,70,69],
[61,66,75,65,66,61,0,67],
[55,62,75,57,65,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,58,64,53,46,47,72],
[78,0,71,82,63,53,61,75],
[73,60,0,88,47,66,63,80],
[67,49,43,0,45,54,59,57],
[78,68,84,86,0,57,70,85],
[85,78,65,77,74,0,82,91],
[84,70,68,72,61,49,0,81],
[59,56,51,74,46,40,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,76,60,59,45,51,72],
[54,0,78,75,69,57,55,67],
[55,53,0,43,75,63,52,83],
[71,56,88,0,74,62,73,77],
[72,62,56,57,0,63,54,67],
[86,74,68,69,68,0,59,84],
[80,76,79,58,77,72,0,84],
[59,64,48,54,64,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,71,82,63,68,67,82],
[48,0,58,75,59,80,66,69],
[60,73,0,80,70,67,73,83],
[49,56,51,0,61,63,58,62],
[68,72,61,70,0,65,70,69],
[63,51,64,68,66,0,48,75],
[64,65,58,73,61,83,0,75],
[49,62,48,69,62,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,57,51,67,71,63,67],
[73,0,68,67,71,79,65,69],
[74,63,0,60,56,68,72,71],
[80,64,71,0,84,76,64,65],
[64,60,75,47,0,64,64,75],
[60,52,63,55,67,0,64,66],
[68,66,59,67,67,67,0,60],
[64,62,60,66,56,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,51,53,60,59,48,53],
[80,0,64,65,74,64,74,62],
[80,67,0,64,69,67,67,64],
[78,66,67,0,84,65,72,78],
[71,57,62,47,0,53,65,60],
[72,67,64,66,78,0,59,64],
[83,57,64,59,66,72,0,59],
[78,69,67,53,71,67,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,69,60,66,62,68,66],
[60,0,78,77,73,73,77,76],
[62,53,0,63,59,62,62,58],
[71,54,68,0,66,66,77,65],
[65,58,72,65,0,71,72,72],
[69,58,69,65,60,0,66,70],
[63,54,69,54,59,65,0,73],
[65,55,73,66,59,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,54,61,53,53,72,52],
[66,0,59,48,41,55,57,47],
[77,72,0,52,62,63,65,63],
[70,83,79,0,60,68,78,68],
[78,90,69,71,0,70,79,64],
[78,76,68,63,61,0,83,67],
[59,74,66,53,52,48,0,45],
[79,84,68,63,67,64,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,56,61,62,53,54,60],
[77,0,64,72,75,62,70,68],
[75,67,0,63,73,68,65,61],
[70,59,68,0,63,53,64,54],
[69,56,58,68,0,69,66,62],
[78,69,63,78,62,0,69,73],
[77,61,66,67,65,62,0,67],
[71,63,70,77,69,58,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,70,59,61,68,52,57],
[75,0,62,75,59,78,65,68],
[61,69,0,73,66,70,64,75],
[72,56,58,0,61,76,59,72],
[70,72,65,70,0,86,71,74],
[63,53,61,55,45,0,59,68],
[79,66,67,72,60,72,0,77],
[74,63,56,59,57,63,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,57,62,57,69,57,67],
[67,0,67,70,67,71,62,72],
[74,64,0,68,66,68,64,66],
[69,61,63,0,66,73,63,63],
[74,64,65,65,0,70,66,75],
[62,60,63,58,61,0,56,63],
[74,69,67,68,65,75,0,68],
[64,59,65,68,56,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,71,80,63,67,71,68],
[57,0,69,66,64,68,64,71],
[60,62,0,68,68,70,68,75],
[51,65,63,0,53,66,71,58],
[68,67,63,78,0,78,73,74],
[64,63,61,65,53,0,61,67],
[60,67,63,60,58,70,0,64],
[63,60,56,73,57,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,55,32,38,84,49,45],
[100,0,66,59,73,82,73,83],
[76,65,0,88,62,74,73,56],
[99,72,43,0,68,76,41,58],
[93,58,69,63,0,91,70,77],
[47,49,57,55,40,0,61,44],
[82,58,58,90,61,70,0,69],
[86,48,75,73,54,87,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,47,49,72,55,51,65],
[84,0,57,77,71,72,80,74],
[84,74,0,61,69,66,67,74],
[82,54,70,0,55,69,64,65],
[59,60,62,76,0,69,57,75],
[76,59,65,62,62,0,47,80],
[80,51,64,67,74,84,0,78],
[66,57,57,66,56,51,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,69,66,66,70,65],
[66,0,75,65,58,62,64,69],
[66,56,0,71,55,71,63,60],
[62,66,60,0,67,71,65,67],
[65,73,76,64,0,70,65,67],
[65,69,60,60,61,0,64,66],
[61,67,68,66,66,67,0,65],
[66,62,71,64,64,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,57,72,67,63,71,65],
[66,0,63,65,54,52,68,59],
[74,68,0,68,64,62,68,60],
[59,66,63,0,59,67,66,57],
[64,77,67,72,0,60,66,64],
[68,79,69,64,71,0,77,67],
[60,63,63,65,65,54,0,65],
[66,72,71,74,67,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,60,91,60,82,55],
[65,0,56,53,72,41,61,66],
[62,75,0,53,83,39,76,59],
[71,78,78,0,86,66,62,71],
[40,59,48,45,0,50,50,68],
[71,90,92,65,81,0,57,68],
[49,70,55,69,81,74,0,59],
[76,65,72,60,63,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,73,88,73,64,55],
[73,0,57,74,84,70,60,56],
[70,74,0,82,86,65,70,59],
[58,57,49,0,78,70,61,52],
[43,47,45,53,0,48,51,46],
[58,61,66,61,83,0,70,62],
[67,71,61,70,80,61,0,68],
[76,75,72,79,85,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,122,122,83,83,83,54,93],
[9,0,66,27,27,27,27,66],
[9,65,0,63,83,92,63,102],
[48,104,68,0,56,65,102,48],
[48,104,48,75,0,104,75,48],
[48,104,39,66,27,0,66,48],
[77,104,68,29,56,65,0,77],
[38,65,29,83,83,83,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,57,59,74,59,68],
[68,0,54,76,61,63,60,78],
[70,77,0,68,66,76,63,79],
[74,55,63,0,56,65,73,68],
[72,70,65,75,0,71,68,84],
[57,68,55,66,60,0,71,69],
[72,71,68,58,63,60,0,79],
[63,53,52,63,47,62,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,69,51,61,79,77],
[62,0,47,67,64,46,68,62],
[70,84,0,85,68,61,79,68],
[62,64,46,0,69,44,71,59],
[80,67,63,62,0,80,95,73],
[70,85,70,87,51,0,73,73],
[52,63,52,60,36,58,0,53],
[54,69,63,72,58,58,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,75,69,68,65,73,83],
[51,0,63,54,57,67,65,63],
[56,68,0,56,68,66,67,74],
[62,77,75,0,56,67,69,69],
[63,74,63,75,0,69,64,74],
[66,64,65,64,62,0,62,60],
[58,66,64,62,67,69,0,68],
[48,68,57,62,57,71,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,56,46,46,50,59,49],
[79,0,65,58,48,58,55,65],
[75,66,0,61,60,75,66,61],
[85,73,70,0,61,75,70,69],
[85,83,71,70,0,75,74,65],
[81,73,56,56,56,0,61,56],
[72,76,65,61,57,70,0,64],
[82,66,70,62,66,75,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,63,70,71,79,75],
[68,0,64,64,74,74,81,76],
[59,67,0,66,67,64,73,75],
[68,67,65,0,67,80,80,75],
[61,57,64,64,0,72,73,81],
[60,57,67,51,59,0,68,76],
[52,50,58,51,58,63,0,69],
[56,55,56,56,50,55,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,75,43,75,68,74,32],
[56,0,88,25,32,56,99,88],
[56,43,0,68,43,68,99,32],
[88,106,63,0,75,131,131,63],
[56,99,88,56,0,56,99,88],
[63,75,63,0,75,0,74,63],
[57,32,32,0,32,57,0,32],
[99,43,99,68,43,68,99,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,62,70,54,78,74],
[67,0,75,64,72,70,84,70],
[59,56,0,47,67,50,71,49],
[69,67,84,0,74,58,84,61],
[61,59,64,57,0,55,78,62],
[77,61,81,73,76,0,78,92],
[53,47,60,47,53,53,0,64],
[57,61,82,70,69,39,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,67,57,79,74,64,72],
[54,0,60,58,65,76,63,60],
[64,71,0,66,79,66,76,74],
[74,73,65,0,71,75,75,73],
[52,66,52,60,0,67,64,53],
[57,55,65,56,64,0,65,57],
[67,68,55,56,67,66,0,71],
[59,71,57,58,78,74,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,80,83,68,87,63,70],
[57,0,47,67,67,78,46,56],
[51,84,0,72,43,67,57,60],
[48,64,59,0,52,69,53,50],
[63,64,88,79,0,90,58,60],
[44,53,64,62,41,0,35,54],
[68,85,74,78,73,96,0,64],
[61,75,71,81,71,77,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,77,56,67,66,74],
[72,0,80,77,62,72,73,79],
[67,51,0,65,65,68,60,66],
[54,54,66,0,58,53,60,58],
[75,69,66,73,0,70,63,64],
[64,59,63,78,61,0,63,67],
[65,58,71,71,68,68,0,73],
[57,52,65,73,67,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,35,75,35,61,35,57],
[96,0,74,96,79,131,74,57],
[96,57,0,96,79,114,35,57],
[56,35,35,0,39,96,70,39],
[96,52,52,92,0,113,52,74],
[70,0,17,35,18,0,0,57],
[96,57,96,61,79,131,0,57],
[74,74,74,92,57,74,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,73,64,64,61,66],
[64,0,56,72,72,69,69,70],
[66,75,0,64,72,69,70,74],
[58,59,67,0,67,63,51,68],
[67,59,59,64,0,60,54,70],
[67,62,62,68,71,0,63,68],
[70,62,61,80,77,68,0,77],
[65,61,57,63,61,63,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,69,55,68,71,45],
[70,0,53,56,54,65,70,54],
[69,78,0,72,71,83,70,59],
[62,75,59,0,60,58,69,64],
[76,77,60,71,0,73,70,71],
[63,66,48,73,58,0,64,54],
[60,61,61,62,61,67,0,56],
[86,77,72,67,60,77,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,55,64,58,62,58,60],
[88,0,70,87,60,87,65,84],
[76,61,0,55,64,62,56,82],
[67,44,76,0,60,76,60,82],
[73,71,67,71,0,56,66,79],
[69,44,69,55,75,0,67,61],
[73,66,75,71,65,64,0,65],
[71,47,49,49,52,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,72,66,62,62,75,68],
[64,0,61,66,65,60,61,61],
[59,70,0,73,60,63,79,68],
[65,65,58,0,61,61,66,67],
[69,66,71,70,0,70,75,61],
[69,71,68,70,61,0,72,66],
[56,70,52,65,56,59,0,59],
[63,70,63,64,70,65,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,98,94,67,63,66,62,76],
[33,0,56,48,56,49,56,58],
[37,75,0,48,46,47,45,68],
[64,83,83,0,71,50,60,77],
[68,75,85,60,0,58,76,77],
[65,82,84,81,73,0,71,76],
[69,75,86,71,55,60,0,71],
[55,73,63,54,54,55,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,58,58,62,62,53,59],
[78,0,64,64,68,69,53,62],
[73,67,0,63,66,72,67,69],
[73,67,68,0,67,75,59,75],
[69,63,65,64,0,72,59,67],
[69,62,59,56,59,0,62,63],
[78,78,64,72,72,69,0,72],
[72,69,62,56,64,68,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,70,79,75,71,77],
[71,0,74,86,65,84,71,80],
[65,57,0,73,69,74,69,78],
[61,45,58,0,59,70,50,64],
[52,66,62,72,0,64,55,77],
[56,47,57,61,67,0,57,57],
[60,60,62,81,76,74,0,78],
[54,51,53,67,54,74,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,53,55,53,63,58],
[70,0,67,66,50,61,58,55],
[68,64,0,67,59,64,66,70],
[78,65,64,0,69,66,70,65],
[76,81,72,62,0,61,70,53],
[78,70,67,65,70,0,65,51],
[68,73,65,61,61,66,0,56],
[73,76,61,66,78,80,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,25,39,34,20,58,22],
[115,0,70,119,80,115,54,64],
[106,61,0,106,79,61,78,36],
[92,12,25,0,45,45,29,47],
[97,51,52,86,0,57,70,37],
[111,16,70,86,74,0,58,2],
[73,77,53,102,61,73,0,73],
[109,67,95,84,94,129,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,46,56,67,38,49,61],
[93,0,65,68,76,55,52,54],
[85,66,0,88,83,82,64,78],
[75,63,43,0,76,64,60,73],
[64,55,48,55,0,54,49,62],
[93,76,49,67,77,0,46,54],
[82,79,67,71,82,85,0,63],
[70,77,53,58,69,77,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,66,66,68,75,73],
[64,0,64,65,69,88,78,66],
[67,67,0,53,57,70,61,66],
[65,66,78,0,61,67,82,61],
[65,62,74,70,0,74,69,69],
[63,43,61,64,57,0,59,51],
[56,53,70,49,62,72,0,84],
[58,65,65,70,62,80,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,68,54,62,58,59],
[71,0,81,72,50,73,53,72],
[74,50,0,75,50,70,56,61],
[63,59,56,0,49,63,50,71],
[77,81,81,82,0,76,64,95],
[69,58,61,68,55,0,57,75],
[73,78,75,81,67,74,0,64],
[72,59,70,60,36,56,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,39,60,50,55,63,80],
[81,0,81,69,58,77,56,73],
[92,50,0,62,65,84,62,78],
[71,62,69,0,59,76,81,95],
[81,73,66,72,0,63,56,80],
[76,54,47,55,68,0,57,59],
[68,75,69,50,75,74,0,63],
[51,58,53,36,51,72,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,50,52,78,43,61],
[73,0,62,51,59,98,67,72],
[69,69,0,44,63,77,46,70],
[81,80,87,0,66,78,60,80],
[79,72,68,65,0,85,59,68],
[53,33,54,53,46,0,34,57],
[88,64,85,71,72,97,0,80],
[70,59,61,51,63,74,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,57,65,65,74,71,60],
[64,0,67,66,78,69,72,68],
[74,64,0,63,66,57,68,60],
[66,65,68,0,73,75,67,65],
[66,53,65,58,0,65,71,60],
[57,62,74,56,66,0,62,56],
[60,59,63,64,60,69,0,61],
[71,63,71,66,71,75,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,61,39,73,76,59,40],
[52,0,37,35,46,73,43,30],
[70,94,0,72,85,79,72,48],
[92,96,59,0,69,80,66,72],
[58,85,46,62,0,82,68,24],
[55,58,52,51,49,0,80,50],
[72,88,59,65,63,51,0,86],
[91,101,83,59,107,81,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,72,67,67,74,72],
[66,0,60,75,71,69,73,76],
[62,71,0,72,62,66,67,66],
[59,56,59,0,65,73,70,61],
[64,60,69,66,0,68,68,66],
[64,62,65,58,63,0,71,64],
[57,58,64,61,63,60,0,59],
[59,55,65,70,65,67,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,66,76,61,69,59,61],
[52,0,46,51,45,55,53,53],
[65,85,0,78,70,74,69,71],
[55,80,53,0,66,56,62,69],
[70,86,61,65,0,63,65,80],
[62,76,57,75,68,0,65,68],
[72,78,62,69,66,66,0,72],
[70,78,60,62,51,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,60,60,63,62,78],
[74,0,65,57,70,74,72,68],
[69,66,0,69,68,71,71,62],
[71,74,62,0,65,67,66,67],
[71,61,63,66,0,71,70,73],
[68,57,60,64,60,0,63,62],
[69,59,60,65,61,68,0,62],
[53,63,69,64,58,69,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,70,64,61,59,76,70],
[68,0,65,62,70,59,71,68],
[61,66,0,61,60,64,74,74],
[67,69,70,0,73,70,75,64],
[70,61,71,58,0,58,68,68],
[72,72,67,61,73,0,77,69],
[55,60,57,56,63,54,0,64],
[61,63,57,67,63,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,66,67,59,65,61,66],
[85,0,76,76,65,69,70,73],
[65,55,0,70,55,59,64,59],
[64,55,61,0,55,64,61,55],
[72,66,76,76,0,65,67,69],
[66,62,72,67,66,0,66,62],
[70,61,67,70,64,65,0,65],
[65,58,72,76,62,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,69,63,69,79,75,63],
[57,0,64,59,57,67,56,65],
[62,67,0,57,53,63,61,55],
[68,72,74,0,62,63,51,69],
[62,74,78,69,0,67,65,66],
[52,64,68,68,64,0,73,60],
[56,75,70,80,66,58,0,63],
[68,66,76,62,65,71,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,35,56,17,37,79,27],
[52,0,44,81,48,57,65,52],
[96,87,0,63,67,67,109,73],
[75,50,68,0,49,72,84,84],
[114,83,64,82,0,74,108,75],
[94,74,64,59,57,0,88,56],
[52,66,22,47,23,43,0,38],
[104,79,58,47,56,75,93,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,70,59,57,75,61],
[66,0,72,67,65,72,73,66],
[65,59,0,69,66,65,71,62],
[61,64,62,0,69,66,86,64],
[72,66,65,62,0,57,77,66],
[74,59,66,65,74,0,80,69],
[56,58,60,45,54,51,0,62],
[70,65,69,67,65,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,67,47,60,64,53],
[71,0,68,71,54,61,69,67],
[74,63,0,67,56,62,74,59],
[64,60,64,0,51,54,65,58],
[84,77,75,80,0,77,83,64],
[71,70,69,77,54,0,74,62],
[67,62,57,66,48,57,0,61],
[78,64,72,73,67,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,64,67,66,62,72],
[64,0,64,59,55,57,69,69],
[64,67,0,62,56,63,65,65],
[67,72,69,0,73,54,68,61],
[64,76,75,58,0,62,71,58],
[65,74,68,77,69,0,68,63],
[69,62,66,63,60,63,0,57],
[59,62,66,70,73,68,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,70,63,53,66,74],
[68,0,73,59,71,66,78,76],
[62,58,0,74,74,70,66,74],
[61,72,57,0,69,59,64,76],
[68,60,57,62,0,70,81,77],
[78,65,61,72,61,0,71,85],
[65,53,65,67,50,60,0,72],
[57,55,57,55,54,46,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,64,52,80,64,53,60],
[58,0,52,62,62,63,56,51],
[67,79,0,66,75,64,68,66],
[79,69,65,0,71,54,60,58],
[51,69,56,60,0,62,51,46],
[67,68,67,77,69,0,59,63],
[78,75,63,71,80,72,0,63],
[71,80,65,73,85,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,86,72,77,50,51,79],
[44,0,60,46,43,25,51,55],
[45,71,0,78,43,44,50,48],
[59,85,53,0,29,48,49,51],
[54,88,88,102,0,72,87,94],
[81,106,87,83,59,0,69,86],
[80,80,81,82,44,62,0,67],
[52,76,83,80,37,45,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,69,75,65,71,64,70],
[60,0,64,75,56,65,59,61],
[62,67,0,73,56,64,67,62],
[56,56,58,0,59,71,57,59],
[66,75,75,72,0,67,62,64],
[60,66,67,60,64,0,53,60],
[67,72,64,74,69,78,0,62],
[61,70,69,72,67,71,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,73,65,74,67,63],
[62,0,65,61,55,65,62,49],
[69,66,0,77,69,78,67,60],
[58,70,54,0,51,73,56,53],
[66,76,62,80,0,81,71,62],
[57,66,53,58,50,0,60,63],
[64,69,64,75,60,71,0,74],
[68,82,71,78,69,68,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,61,80,71,75,66,61],
[56,0,59,72,47,72,58,67],
[70,72,0,54,62,77,57,59],
[51,59,77,0,56,71,67,72],
[60,84,69,75,0,88,68,75],
[56,59,54,60,43,0,58,42],
[65,73,74,64,63,73,0,72],
[70,64,72,59,56,89,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,57,55,69,58,64,61],
[79,0,71,67,78,60,70,65],
[74,60,0,72,62,63,67,68],
[76,64,59,0,67,68,75,56],
[62,53,69,64,0,61,75,62],
[73,71,68,63,70,0,78,65],
[67,61,64,56,56,53,0,58],
[70,66,63,75,69,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,56,60,51,68,59],
[72,0,61,67,60,60,70,67],
[71,70,0,70,71,63,70,66],
[75,64,61,0,71,61,69,65],
[71,71,60,60,0,60,66,71],
[80,71,68,70,71,0,76,65],
[63,61,61,62,65,55,0,63],
[72,64,65,66,60,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,62,52,59,63,71],
[65,0,56,63,54,60,64,66],
[69,75,0,72,56,71,73,78],
[69,68,59,0,58,66,54,82],
[79,77,75,73,0,68,63,78],
[72,71,60,65,63,0,68,80],
[68,67,58,77,68,63,0,72],
[60,65,53,49,53,51,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,70,57,58,66,61,78],
[68,0,73,65,63,60,63,76],
[61,58,0,62,52,56,60,64],
[74,66,69,0,67,64,65,71],
[73,68,79,64,0,61,65,79],
[65,71,75,67,70,0,71,72],
[70,68,71,66,66,60,0,71],
[53,55,67,60,52,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,82,98,37,63,26,67],
[68,0,86,102,83,71,65,106],
[49,45,0,45,45,49,49,75],
[33,29,86,0,7,26,7,33],
[94,48,86,124,0,52,65,49],
[68,60,82,105,79,0,42,102],
[105,66,82,124,66,89,0,63],
[64,25,56,98,82,29,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,131,47,82,35,84,84,82],
[0,0,47,0,0,84,0,35],
[84,84,0,35,84,84,84,35],
[49,131,96,0,49,84,49,84],
[96,131,47,82,0,84,96,82],
[47,47,47,47,47,0,47,47],
[47,131,47,82,35,84,0,82],
[49,96,96,47,49,84,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,75,67,65,65,66,61],
[56,0,56,67,68,49,58,64],
[56,75,0,64,62,66,53,65],
[64,64,67,0,59,57,57,62],
[66,63,69,72,0,61,52,68],
[66,82,65,74,70,0,69,71],
[65,73,78,74,79,62,0,69],
[70,67,66,69,63,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,73,71,65,68,60,71],
[58,0,66,64,66,58,58,71],
[58,65,0,75,67,66,68,67],
[60,67,56,0,74,64,55,68],
[66,65,64,57,0,68,66,68],
[63,73,65,67,63,0,57,73],
[71,73,63,76,65,74,0,71],
[60,60,64,63,63,58,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,69,66,62,80,64,68],
[70,0,68,64,69,70,59,77],
[62,63,0,60,62,71,57,68],
[65,67,71,0,63,73,60,67],
[69,62,69,68,0,77,71,80],
[51,61,60,58,54,0,53,49],
[67,72,74,71,60,78,0,77],
[63,54,63,64,51,82,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,61,60,69,65,72,67],
[79,0,77,74,80,70,65,70],
[70,54,0,58,65,67,64,63],
[71,57,73,0,67,63,74,63],
[62,51,66,64,0,62,67,55],
[66,61,64,68,69,0,73,68],
[59,66,67,57,64,58,0,58],
[64,61,68,68,76,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,75,69,78,87,75,65],
[71,0,66,63,71,66,73,66],
[56,65,0,68,70,78,72,66],
[62,68,63,0,64,72,77,55],
[53,60,61,67,0,61,61,53],
[44,65,53,59,70,0,67,61],
[56,58,59,54,70,64,0,58],
[66,65,65,76,78,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,67,63,59,74,68,69],
[56,0,56,66,64,57,54,57],
[64,75,0,75,62,60,70,58],
[68,65,56,0,60,56,61,46],
[72,67,69,71,0,62,75,66],
[57,74,71,75,69,0,70,54],
[63,77,61,70,56,61,0,60],
[62,74,73,85,65,77,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,71,57,68,54,62],
[67,0,70,77,64,64,59,59],
[66,61,0,67,60,63,51,60],
[60,54,64,0,61,52,59,55],
[74,67,71,70,0,57,59,66],
[63,67,68,79,74,0,64,68],
[77,72,80,72,72,67,0,56],
[69,72,71,76,65,63,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,68,56,73,88,78],
[66,0,65,64,68,56,59,81],
[58,66,0,62,59,56,83,81],
[63,67,69,0,71,59,82,75],
[75,63,72,60,0,65,84,85],
[58,75,75,72,66,0,75,73],
[43,72,48,49,47,56,0,66],
[53,50,50,56,46,58,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,49,62,58,65,61],
[71,0,71,61,63,71,66,69],
[66,60,0,58,70,70,69,76],
[82,70,73,0,75,62,67,80],
[69,68,61,56,0,56,62,71],
[73,60,61,69,75,0,70,71],
[66,65,62,64,69,61,0,73],
[70,62,55,51,60,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,52,65,61,62,70,66],
[73,0,73,65,84,79,89,72],
[79,58,0,71,83,76,80,67],
[66,66,60,0,70,61,81,76],
[70,47,48,61,0,62,57,61],
[69,52,55,70,69,0,64,62],
[61,42,51,50,74,67,0,56],
[65,59,64,55,70,69,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,67,71,59,69,54,67],
[51,0,58,61,67,54,51,65],
[64,73,0,81,67,69,41,69],
[60,70,50,0,64,63,58,64],
[72,64,64,67,0,73,69,63],
[62,77,62,68,58,0,47,60],
[77,80,90,73,62,84,0,78],
[64,66,62,67,68,71,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,72,63,68,70,59,67],
[55,0,58,64,60,66,63,62],
[59,73,0,76,69,75,60,63],
[68,67,55,0,55,67,62,66],
[63,71,62,76,0,68,66,69],
[61,65,56,64,63,0,61,63],
[72,68,71,69,65,70,0,67],
[64,69,68,65,62,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,67,67,79,52,69],
[58,0,59,59,65,75,65,67],
[68,72,0,63,76,83,69,70],
[64,72,68,0,68,75,71,61],
[64,66,55,63,0,66,67,62],
[52,56,48,56,65,0,59,56],
[79,66,62,60,64,72,0,59],
[62,64,61,70,69,75,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,61,82,72,79,79,65],
[56,0,52,100,72,66,72,54],
[70,79,0,94,64,57,80,62],
[49,31,37,0,36,56,49,35],
[59,59,67,95,0,66,69,52],
[52,65,74,75,65,0,69,71],
[52,59,51,82,62,62,0,42],
[66,77,69,96,79,60,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,73,59,72,66,63],
[71,0,62,74,61,60,52,70],
[72,69,0,58,63,62,70,70],
[58,57,73,0,53,58,51,63],
[72,70,68,78,0,77,64,67],
[59,71,69,73,54,0,63,61],
[65,79,61,80,67,68,0,80],
[68,61,61,68,64,70,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,60,74,60,73,57],
[71,0,65,62,72,74,76,65],
[71,66,0,58,73,69,61,70],
[71,69,73,0,72,70,70,61],
[57,59,58,59,0,50,58,56],
[71,57,62,61,81,0,70,66],
[58,55,70,61,73,61,0,68],
[74,66,61,70,75,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,81,80,58,62,74,76],
[66,0,62,82,67,61,75,59],
[50,69,0,88,58,55,72,72],
[51,49,43,0,59,59,71,50],
[73,64,73,72,0,75,63,82],
[69,70,76,72,56,0,70,79],
[57,56,59,60,68,61,0,68],
[55,72,59,81,49,52,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,78,69,64,69,79,81],
[54,0,65,59,67,65,75,68],
[53,66,0,59,64,63,67,68],
[62,72,72,0,62,70,75,67],
[67,64,67,69,0,59,72,72],
[62,66,68,61,72,0,81,74],
[52,56,64,56,59,50,0,66],
[50,63,63,64,59,57,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,68,72,61,62,67,60],
[55,0,67,68,55,61,59,57],
[63,64,0,66,61,62,65,56],
[59,63,65,0,64,65,63,53],
[70,76,70,67,0,65,69,70],
[69,70,69,66,66,0,70,65],
[64,72,66,68,62,61,0,67],
[71,74,75,78,61,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,61,58,60,57,71,52],
[81,0,68,63,77,67,72,70],
[70,63,0,61,72,69,67,65],
[73,68,70,0,67,71,74,58],
[71,54,59,64,0,58,62,55],
[74,64,62,60,73,0,73,55],
[60,59,64,57,69,58,0,54],
[79,61,66,73,76,76,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,63,60,65,65,64],
[64,0,67,62,59,61,58,60],
[64,64,0,62,60,57,65,63],
[68,69,69,0,63,65,58,53],
[71,72,71,68,0,68,68,62],
[66,70,74,66,63,0,63,74],
[66,73,66,73,63,68,0,54],
[67,71,68,78,69,57,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,63,61,68,50,61],
[70,0,82,78,82,66,58,76],
[61,49,0,62,56,61,71,57],
[68,53,69,0,72,61,63,63],
[70,49,75,59,0,66,66,70],
[63,65,70,70,65,0,50,70],
[81,73,60,68,65,81,0,69],
[70,55,74,68,61,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,69,65,69,70,77],
[70,0,63,61,70,70,58,62],
[61,68,0,64,66,80,63,53],
[62,70,67,0,58,71,78,74],
[66,61,65,73,0,70,70,83],
[62,61,51,60,61,0,68,63],
[61,73,68,53,61,63,0,58],
[54,69,78,57,48,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,45,53,48,63,55,58],
[56,0,55,36,27,53,62,60],
[86,76,0,68,68,66,56,58],
[78,95,63,0,65,74,56,80],
[83,104,63,66,0,81,68,73],
[68,78,65,57,50,0,66,69],
[76,69,75,75,63,65,0,67],
[73,71,73,51,58,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,56,49,86,70,74,57],
[66,0,58,58,75,72,77,81],
[75,73,0,71,70,79,73,48],
[82,73,60,0,76,72,76,74],
[45,56,61,55,0,60,91,52],
[61,59,52,59,71,0,55,61],
[57,54,58,55,40,76,0,45],
[74,50,83,57,79,70,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,37,67,53,67,55,40],
[42,0,29,90,63,51,46,80],
[94,102,0,80,74,74,62,51],
[64,41,51,0,61,17,29,36],
[78,68,57,70,0,35,75,78],
[64,80,57,114,96,0,64,84],
[76,85,69,102,56,67,0,63],
[91,51,80,95,53,47,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,67,89,69,50,58,77],
[52,0,44,49,51,61,60,56],
[64,87,0,109,54,50,63,80],
[42,82,22,0,31,49,44,44],
[62,80,77,100,0,50,83,57],
[81,70,81,82,81,0,82,60],
[73,71,68,87,48,49,0,60],
[54,75,51,87,74,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,69,66,69,64,59],
[58,0,61,60,53,65,61,62],
[64,70,0,60,67,71,64,70],
[62,71,71,0,72,71,70,58],
[65,78,64,59,0,68,59,60],
[62,66,60,60,63,0,63,59],
[67,70,67,61,72,68,0,62],
[72,69,61,73,71,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,66,60,64,61,63],
[62,0,58,60,64,64,60,64],
[68,73,0,70,63,66,74,76],
[65,71,61,0,69,69,77,75],
[71,67,68,62,0,62,72,70],
[67,67,65,62,69,0,63,65],
[70,71,57,54,59,68,0,67],
[68,67,55,56,61,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,49,63,57,53,70,48],
[85,0,59,82,64,70,73,60],
[82,72,0,66,71,57,87,66],
[68,49,65,0,54,50,71,64],
[74,67,60,77,0,53,74,62],
[78,61,74,81,78,0,82,72],
[61,58,44,60,57,49,0,45],
[83,71,65,67,69,59,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,68,61,67,58,66,62],
[56,0,62,63,60,52,68,66],
[63,69,0,60,69,61,69,72],
[70,68,71,0,67,60,75,62],
[64,71,62,64,0,62,74,67],
[73,79,70,71,69,0,79,63],
[65,63,62,56,57,52,0,52],
[69,65,59,69,64,68,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,66,69,72,64,68,74],
[51,0,48,65,69,50,52,58],
[65,83,0,58,77,55,82,67],
[62,66,73,0,77,62,64,58],
[59,62,54,54,0,71,79,70],
[67,81,76,69,60,0,66,75],
[63,79,49,67,52,65,0,52],
[57,73,64,73,61,56,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,60,53,71,38,0,53],
[93,0,60,86,124,86,86,86],
[71,71,0,33,71,71,71,71],
[78,45,98,0,71,38,45,131],
[60,7,60,60,0,60,7,60],
[93,45,60,93,71,0,7,93],
[131,45,60,86,124,124,0,93],
[78,45,60,0,71,38,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,61,83,76,83,47,64],
[38,0,55,43,48,66,34,43],
[70,76,0,58,60,51,54,52],
[48,88,73,0,57,93,67,72],
[55,83,71,74,0,79,57,82],
[48,65,80,38,52,0,55,70],
[84,97,77,64,74,76,0,80],
[67,88,79,59,49,61,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,56,56,57,60,44,50],
[58,0,74,57,58,67,57,62],
[75,57,0,46,47,62,66,73],
[75,74,85,0,69,72,76,62],
[74,73,84,62,0,78,74,77],
[71,64,69,59,53,0,61,71],
[87,74,65,55,57,70,0,76],
[81,69,58,69,54,60,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,63,43,60,59,53,63],
[61,0,55,65,68,66,61,57],
[68,76,0,53,65,59,68,72],
[88,66,78,0,75,61,68,79],
[71,63,66,56,0,55,66,51],
[72,65,72,70,76,0,67,58],
[78,70,63,63,65,64,0,60],
[68,74,59,52,80,73,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,81,81,47,71,78,63],
[38,0,72,54,46,54,64,62],
[50,59,0,54,48,40,65,48],
[50,77,77,0,77,58,75,70],
[84,85,83,54,0,74,93,50],
[60,77,91,73,57,0,85,70],
[53,67,66,56,38,46,0,48],
[68,69,83,61,81,61,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,70,63,68,76,66,64],
[55,0,61,60,65,65,58,53],
[61,70,0,61,57,68,58,59],
[68,71,70,0,69,73,71,63],
[63,66,74,62,0,71,60,66],
[55,66,63,58,60,0,61,57],
[65,73,73,60,71,70,0,66],
[67,78,72,68,65,74,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,94,64,56,25,63,64,38],
[37,0,46,55,7,63,64,38],
[67,85,0,53,67,68,131,61],
[75,76,78,0,32,52,96,25],
[106,124,64,99,0,81,64,81],
[68,68,63,79,50,0,88,36],
[67,67,0,35,67,43,0,43],
[93,93,70,106,50,95,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,68,68,60,71,73],
[72,0,80,67,63,73,77,69],
[65,51,0,64,60,59,68,65],
[63,64,67,0,61,64,72,65],
[63,68,71,70,0,69,76,69],
[71,58,72,67,62,0,70,70],
[60,54,63,59,55,61,0,60],
[58,62,66,66,62,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,75,74,74,74,61,70],
[62,0,64,66,67,68,56,61],
[56,67,0,61,61,68,52,56],
[57,65,70,0,60,71,65,64],
[57,64,70,71,0,73,62,64],
[57,63,63,60,58,0,60,54],
[70,75,79,66,69,71,0,62],
[61,70,75,67,67,77,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,65,54,68,67,72],
[72,0,64,75,67,71,68,71],
[72,67,0,80,62,71,62,67],
[66,56,51,0,65,66,65,65],
[77,64,69,66,0,71,68,62],
[63,60,60,65,60,0,63,60],
[64,63,69,66,63,68,0,67],
[59,60,64,66,69,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,56,59,68,63,63],
[73,0,67,58,66,73,69,65],
[69,64,0,69,76,68,74,71],
[75,73,62,0,72,67,73,67],
[72,65,55,59,0,66,68,71],
[63,58,63,64,65,0,63,61],
[68,62,57,58,63,68,0,65],
[68,66,60,64,60,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,51,78,55,43,57,42],
[91,0,75,69,82,57,83,85],
[80,56,0,81,95,81,98,75],
[53,62,50,0,48,69,51,38],
[76,49,36,83,0,92,93,86],
[88,74,50,62,39,0,77,88],
[74,48,33,80,38,54,0,57],
[89,46,56,93,45,43,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,55,70,68,60,66],
[70,0,60,67,64,76,73,64],
[68,71,0,59,77,71,74,62],
[76,64,72,0,68,68,69,67],
[61,67,54,63,0,62,63,67],
[63,55,60,63,69,0,70,64],
[71,58,57,62,68,61,0,63],
[65,67,69,64,64,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,72,72,63,73,71,69],
[55,0,61,71,60,66,70,62],
[59,70,0,72,65,78,66,67],
[59,60,59,0,69,68,69,70],
[68,71,66,62,0,72,68,65],
[58,65,53,63,59,0,70,62],
[60,61,65,62,63,61,0,57],
[62,69,64,61,66,69,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,55,61,63,49,69,61],
[68,0,43,49,70,49,76,49],
[76,88,0,76,27,68,76,76],
[70,82,55,0,82,43,70,63],
[68,61,104,49,0,49,49,61],
[82,82,63,88,82,0,131,63],
[62,55,55,61,82,0,0,12],
[70,82,55,68,70,68,119,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,51,50,44,57,55,67],
[61,0,51,58,55,71,55,67],
[80,80,0,60,78,80,74,85],
[81,73,71,0,75,87,64,74],
[87,76,53,56,0,71,55,83],
[74,60,51,44,60,0,50,65],
[76,76,57,67,76,81,0,78],
[64,64,46,57,48,66,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,42,53,82,66,77,76],
[74,0,61,78,57,77,69,76],
[89,70,0,60,81,76,79,82],
[78,53,71,0,86,59,74,68],
[49,74,50,45,0,67,77,65],
[65,54,55,72,64,0,75,83],
[54,62,52,57,54,56,0,72],
[55,55,49,63,66,48,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,64,68,74,60,63,67],
[58,0,45,52,58,54,53,54],
[67,86,0,66,65,66,68,71],
[63,79,65,0,68,65,70,65],
[57,73,66,63,0,52,61,58],
[71,77,65,66,79,0,67,65],
[68,78,63,61,70,64,0,70],
[64,77,60,66,73,66,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,75,76,63,75,79,69],
[54,0,64,63,61,68,66,80],
[56,67,0,58,58,58,65,67],
[55,68,73,0,75,69,78,69],
[68,70,73,56,0,67,65,66],
[56,63,73,62,64,0,62,72],
[52,65,66,53,66,69,0,59],
[62,51,64,62,65,59,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,61,54,90,65,72,83],
[59,0,55,59,74,69,69,74],
[70,76,0,64,76,63,67,68],
[77,72,67,0,82,57,73,74],
[41,57,55,49,0,58,66,68],
[66,62,68,74,73,0,79,75],
[59,62,64,58,65,52,0,59],
[48,57,63,57,63,56,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,100,64,74,26,54,74,61],
[31,0,39,80,31,54,67,36],
[67,92,0,92,80,54,80,66],
[57,51,39,0,13,54,70,38],
[105,100,51,118,0,54,118,61],
[77,77,77,77,77,0,77,38],
[57,64,51,61,13,54,0,61],
[70,95,65,93,70,93,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,63,54,60,71,71],
[73,0,61,60,54,62,59,60],
[67,70,0,62,58,60,58,66],
[68,71,69,0,61,76,72,67],
[77,77,73,70,0,62,75,73],
[71,69,71,55,69,0,60,76],
[60,72,73,59,56,71,0,75],
[60,71,65,64,58,55,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,77,76,84,67,71],
[70,0,69,80,72,75,64,69],
[61,62,0,76,76,76,71,65],
[54,51,55,0,68,76,57,53],
[55,59,55,63,0,68,62,61],
[47,56,55,55,63,0,53,53],
[64,67,60,74,69,78,0,61],
[60,62,66,78,70,78,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,58,63,67,52,64,54],
[63,0,54,67,62,59,62,46],
[73,77,0,69,70,64,69,66],
[68,64,62,0,62,62,58,60],
[64,69,61,69,0,61,60,50],
[79,72,67,69,70,0,64,51],
[67,69,62,73,71,67,0,54],
[77,85,65,71,81,80,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,59,63,69,68,58,66],
[58,0,58,63,64,67,52,68],
[72,73,0,66,63,74,68,64],
[68,68,65,0,67,60,61,69],
[62,67,68,64,0,65,56,66],
[63,64,57,71,66,0,50,63],
[73,79,63,70,75,81,0,70],
[65,63,67,62,65,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,63,55,63,59,65,56],
[54,0,71,55,58,66,64,55],
[68,60,0,60,52,63,53,57],
[76,76,71,0,67,64,73,69],
[68,73,79,64,0,63,74,60],
[72,65,68,67,68,0,67,65],
[66,67,78,58,57,64,0,67],
[75,76,74,62,71,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,69,67,73,66,62,64],
[72,0,76,74,79,69,64,69],
[62,55,0,57,61,59,54,55],
[64,57,74,0,79,66,65,66],
[58,52,70,52,0,57,55,60],
[65,62,72,65,74,0,58,64],
[69,67,77,66,76,73,0,64],
[67,62,76,65,71,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,76,59,66,72,52,66],
[63,0,50,60,57,65,51,65],
[55,81,0,73,61,76,73,60],
[72,71,58,0,56,74,59,59],
[65,74,70,75,0,84,62,72],
[59,66,55,57,47,0,55,69],
[79,80,58,72,69,76,0,65],
[65,66,71,72,59,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,52,78,41,66,48,38],
[69,0,67,72,67,58,52,44],
[79,64,0,80,65,76,74,60],
[53,59,51,0,71,73,72,61],
[90,64,66,60,0,73,67,69],
[65,73,55,58,58,0,69,52],
[83,79,57,59,64,62,0,58],
[93,87,71,70,62,79,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,70,73,67,75,69,61],
[71,0,64,88,69,79,83,68],
[61,67,0,58,64,66,64,61],
[58,43,73,0,57,62,71,57],
[64,62,67,74,0,64,71,67],
[56,52,65,69,67,0,69,61],
[62,48,67,60,60,62,0,66],
[70,63,70,74,64,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,69,63,63,70,58],
[72,0,63,76,62,65,75,66],
[72,68,0,79,68,66,66,60],
[62,55,52,0,63,54,60,55],
[68,69,63,68,0,62,69,63],
[68,66,65,77,69,0,61,65],
[61,56,65,71,62,70,0,62],
[73,65,71,76,68,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,81,76,93,63,75,82],
[57,0,53,72,87,64,63,76],
[50,78,0,54,64,56,59,55],
[55,59,77,0,69,65,59,69],
[38,44,67,62,0,63,51,62],
[68,67,75,66,68,0,54,67],
[56,68,72,72,80,77,0,76],
[49,55,76,62,69,64,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,68,61,68,66,75,74],
[57,0,69,64,67,63,62,65],
[63,62,0,66,56,65,54,62],
[70,67,65,0,64,57,59,55],
[63,64,75,67,0,70,63,56],
[65,68,66,74,61,0,59,71],
[56,69,77,72,68,72,0,72],
[57,66,69,76,75,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,55,93,52,83,66],
[69,0,81,75,78,66,91,51],
[61,50,0,47,67,31,66,46],
[76,56,84,0,78,45,87,57],
[38,53,64,53,0,40,85,47],
[79,65,100,86,91,0,92,62],
[48,40,65,44,46,39,0,41],
[65,80,85,74,84,69,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,65,65,61,68,63],
[66,0,74,61,61,63,69,63],
[60,57,0,57,63,55,63,58],
[66,70,74,0,73,65,61,70],
[66,70,68,58,0,65,72,63],
[70,68,76,66,66,0,64,61],
[63,62,68,70,59,67,0,60],
[68,68,73,61,68,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,49,48,63,45,58,57],
[62,0,55,47,66,63,61,59],
[82,76,0,68,68,61,76,66],
[83,84,63,0,81,79,73,81],
[68,65,63,50,0,71,58,66],
[86,68,70,52,60,0,68,68],
[73,70,55,58,73,63,0,66],
[74,72,65,50,65,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,77,81,60,72,74],
[68,0,67,64,66,72,63,71],
[62,64,0,71,69,65,64,70],
[54,67,60,0,65,58,72,72],
[50,65,62,66,0,49,66,71],
[71,59,66,73,82,0,64,73],
[59,68,67,59,65,67,0,80],
[57,60,61,59,60,58,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,61,55,66,50,63,62],
[72,0,87,53,62,72,76,53],
[70,44,0,55,53,69,69,65],
[76,78,76,0,54,79,69,52],
[65,69,78,77,0,60,63,77],
[81,59,62,52,71,0,63,63],
[68,55,62,62,68,68,0,45],
[69,78,66,79,54,68,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,86,70,68,68,65,73],
[43,0,54,59,60,59,66,67],
[45,77,0,60,65,63,53,62],
[61,72,71,0,61,62,68,78],
[63,71,66,70,0,77,66,73],
[63,72,68,69,54,0,66,61],
[66,65,78,63,65,65,0,62],
[58,64,69,53,58,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,56,59,54,61,61],
[62,0,62,51,61,52,64,61],
[66,69,0,62,65,55,67,56],
[75,80,69,0,76,74,85,62],
[72,70,66,55,0,62,56,64],
[77,79,76,57,69,0,62,65],
[70,67,64,46,75,69,0,66],
[70,70,75,69,67,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,74,61,70,61,66],
[68,0,63,68,55,62,64,69],
[60,68,0,69,62,58,72,73],
[57,63,62,0,61,64,56,67],
[70,76,69,70,0,61,66,71],
[61,69,73,67,70,0,59,69],
[70,67,59,75,65,72,0,71],
[65,62,58,64,60,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,80,74,45,84,73,77],
[60,0,49,71,38,66,53,68],
[51,82,0,67,71,51,38,87],
[57,60,64,0,51,70,54,66],
[86,93,60,80,0,96,66,91],
[47,65,80,61,35,0,53,68],
[58,78,93,77,65,78,0,89],
[54,63,44,65,40,63,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,62,60,62,68,59],
[66,0,77,69,67,63,65,64],
[68,54,0,58,64,61,59,60],
[69,62,73,0,70,71,74,63],
[71,64,67,61,0,65,64,72],
[69,68,70,60,66,0,60,59],
[63,66,72,57,67,71,0,61],
[72,67,71,68,59,72,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,65,79,65,62,66],
[75,0,71,70,78,65,68,72],
[74,60,0,61,71,60,71,71],
[66,61,70,0,70,63,60,73],
[52,53,60,61,0,62,62,60],
[66,66,71,68,69,0,61,70],
[69,63,60,71,69,70,0,72],
[65,59,60,58,71,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,86,67,57,61,76,76],
[51,0,56,64,47,50,48,60],
[45,75,0,72,60,61,67,68],
[64,67,59,0,67,56,60,70],
[74,84,71,64,0,66,63,76],
[70,81,70,75,65,0,78,73],
[55,83,64,71,68,53,0,81],
[55,71,63,61,55,58,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,71,69,69,71,71],
[67,0,70,66,63,65,73,85],
[59,61,0,66,66,68,70,66],
[60,65,65,0,63,66,65,66],
[62,68,65,68,0,72,73,66],
[62,66,63,65,59,0,66,69],
[60,58,61,66,58,65,0,69],
[60,46,65,65,65,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,71,69,53,62,50,70],
[52,0,59,62,50,59,54,58],
[60,72,0,66,59,71,60,70],
[62,69,65,0,52,58,58,66],
[78,81,72,79,0,70,64,68],
[69,72,60,73,61,0,53,62],
[81,77,71,73,67,78,0,64],
[61,73,61,65,63,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,69,94,66,62,80],
[64,0,59,47,66,48,52,58],
[68,72,0,54,86,52,73,59],
[62,84,77,0,84,58,70,73],
[37,65,45,47,0,35,48,53],
[65,83,79,73,96,0,95,86],
[69,79,58,61,83,36,0,67],
[51,73,72,58,78,45,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,45,49,44,30,45,46],
[82,0,56,52,82,57,60,57],
[86,75,0,56,69,87,80,86],
[82,79,75,0,48,55,64,36],
[87,49,62,83,0,46,69,71],
[101,74,44,76,85,0,87,54],
[86,71,51,67,62,44,0,57],
[85,74,45,95,60,77,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,72,67,67,60,56,66],
[73,0,76,78,62,72,77,84],
[59,55,0,56,68,59,47,69],
[64,53,75,0,74,54,63,66],
[64,69,63,57,0,62,54,67],
[71,59,72,77,69,0,66,66],
[75,54,84,68,77,65,0,79],
[65,47,62,65,64,65,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,76,81,56,72,69],
[73,0,56,73,92,79,93,76],
[73,75,0,64,97,76,54,55],
[55,58,67,0,89,75,86,67],
[50,39,34,42,0,50,55,44],
[75,52,55,56,81,0,65,49],
[59,38,77,45,76,66,0,59],
[62,55,76,64,87,82,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,63,79,55,60,77],
[66,0,70,64,85,61,75,75],
[67,61,0,62,81,73,66,75],
[68,67,69,0,75,59,62,76],
[52,46,50,56,0,56,54,68],
[76,70,58,72,75,0,58,77],
[71,56,65,69,77,73,0,76],
[54,56,56,55,63,54,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,67,61,71,64,67],
[69,0,72,72,62,67,63,64],
[57,59,0,55,51,63,54,62],
[64,59,76,0,66,68,67,63],
[70,69,80,65,0,76,75,65],
[60,64,68,63,55,0,63,59],
[67,68,77,64,56,68,0,63],
[64,67,69,68,66,72,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,59,71,77,67,58,82],
[55,0,69,57,54,87,54,71],
[72,62,0,67,65,53,74,76],
[60,74,64,0,60,60,59,58],
[54,77,66,71,0,58,66,79],
[64,44,78,71,73,0,67,65],
[73,77,57,72,65,64,0,66],
[49,60,55,73,52,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,52,66,55,56,53,43],
[58,0,61,85,71,50,61,45],
[79,70,0,77,62,76,69,65],
[65,46,54,0,63,48,57,53],
[76,60,69,68,0,68,64,69],
[75,81,55,83,63,0,76,74],
[78,70,62,74,67,55,0,64],
[88,86,66,78,62,57,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,55,66,57,57,68,68],
[58,0,49,63,52,53,65,62],
[76,82,0,74,69,65,79,82],
[65,68,57,0,59,58,65,65],
[74,79,62,72,0,74,81,72],
[74,78,66,73,57,0,81,71],
[63,66,52,66,50,50,0,70],
[63,69,49,66,59,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,49,79,65,62,56],
[63,0,75,53,66,65,60,72],
[56,56,0,59,77,52,53,51],
[82,78,72,0,75,75,59,61],
[52,65,54,56,0,57,45,56],
[66,66,79,56,74,0,40,62],
[69,71,78,72,86,91,0,56],
[75,59,80,70,75,69,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,94,61,58,123,55,44],
[87,0,87,87,69,87,19,37],
[37,44,0,69,69,81,63,52],
[70,44,62,0,102,70,52,70],
[73,62,62,29,0,73,73,62],
[8,44,50,61,58,0,11,0],
[76,112,68,79,58,120,0,70],
[87,94,79,61,69,131,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,69,76,71,69,64,72],
[58,0,55,64,68,59,65,61],
[62,76,0,71,77,67,70,63],
[55,67,60,0,70,55,62,75],
[60,63,54,61,0,67,74,53],
[62,72,64,76,64,0,59,66],
[67,66,61,69,57,72,0,67],
[59,70,68,56,78,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,60,61,60,62,70],
[60,0,71,53,71,59,66,66],
[65,60,0,57,59,57,61,65],
[71,78,74,0,61,69,77,74],
[70,60,72,70,0,62,70,63],
[71,72,74,62,69,0,71,69],
[69,65,70,54,61,60,0,73],
[61,65,66,57,68,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,67,68,73,64,72,63],
[74,0,75,61,68,70,59,69],
[64,56,0,65,68,65,57,60],
[63,70,66,0,54,62,57,50],
[58,63,63,77,0,65,73,58],
[67,61,66,69,66,0,50,63],
[59,72,74,74,58,81,0,65],
[68,62,71,81,73,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,30,35,57,45,62,50],
[61,0,30,47,82,73,63,65],
[101,101,0,57,72,74,86,84],
[96,84,74,0,85,66,57,69],
[74,49,59,46,0,67,64,66],
[86,58,57,65,64,0,61,75],
[69,68,45,74,67,70,0,93],
[81,66,47,62,65,56,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,71,65,63,68,71,75],
[58,0,66,66,70,66,61,76],
[60,65,0,59,67,67,67,72],
[66,65,72,0,73,77,65,69],
[68,61,64,58,0,69,68,65],
[63,65,64,54,62,0,63,60],
[60,70,64,66,63,68,0,72],
[56,55,59,62,66,71,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,77,70,61,76,70,68],
[61,0,75,63,66,74,68,60],
[54,56,0,67,57,69,68,55],
[61,68,64,0,64,73,67,67],
[70,65,74,67,0,77,72,70],
[55,57,62,58,54,0,59,53],
[61,63,63,64,59,72,0,55],
[63,71,76,64,61,78,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,68,64,69,70,71,67],
[64,0,53,51,70,57,55,53],
[63,78,0,62,73,79,58,56],
[67,80,69,0,72,71,59,61],
[62,61,58,59,0,65,59,50],
[61,74,52,60,66,0,61,53],
[60,76,73,72,72,70,0,64],
[64,78,75,70,81,78,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,76,63,66,65,55,83],
[53,0,64,76,55,56,59,71],
[55,67,0,67,42,53,51,81],
[68,55,64,0,54,69,67,75],
[65,76,89,77,0,72,70,85],
[66,75,78,62,59,0,58,75],
[76,72,80,64,61,73,0,81],
[48,60,50,56,46,56,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,60,67,52,60,69],
[65,0,72,64,87,66,75,73],
[66,59,0,58,69,52,62,63],
[71,67,73,0,81,57,71,65],
[64,44,62,50,0,53,61,61],
[79,65,79,74,78,0,75,78],
[71,56,69,60,70,56,0,59],
[62,58,68,66,70,53,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,55,48,64,61,58,68],
[77,0,62,71,66,67,73,71],
[76,69,0,66,62,68,68,73],
[83,60,65,0,60,79,75,77],
[67,65,69,71,0,74,76,80],
[70,64,63,52,57,0,76,80],
[73,58,63,56,55,55,0,73],
[63,60,58,54,51,51,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,66,87,65,72,59,66],
[79,0,84,76,66,74,70,58],
[65,47,0,70,47,63,56,52],
[44,55,61,0,63,48,44,57],
[66,65,84,68,0,70,54,45],
[59,57,68,83,61,0,51,56],
[72,61,75,87,77,80,0,48],
[65,73,79,74,86,75,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,57,68,71,65,56],
[67,0,73,64,68,79,68,72],
[70,58,0,74,66,88,65,64],
[74,67,57,0,69,78,70,71],
[63,63,65,62,0,77,66,69],
[60,52,43,53,54,0,60,56],
[66,63,66,61,65,71,0,66],
[75,59,67,60,62,75,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,70,76,70,66,72],
[64,0,74,71,82,68,61,67],
[71,57,0,66,77,74,62,57],
[61,60,65,0,63,71,58,59],
[55,49,54,68,0,60,60,61],
[61,63,57,60,71,0,62,58],
[65,70,69,73,71,69,0,75],
[59,64,74,72,70,73,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,72,77,60,77,71,65],
[72,0,72,67,75,73,58,64],
[59,59,0,75,61,67,82,65],
[54,64,56,0,57,60,64,67],
[71,56,70,74,0,73,65,55],
[54,58,64,71,58,0,65,57],
[60,73,49,67,66,66,0,60],
[66,67,66,64,76,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,77,76,75,65,78,70],
[62,0,69,62,77,59,71,62],
[54,62,0,66,65,55,56,51],
[55,69,65,0,72,66,64,62],
[56,54,66,59,0,48,57,60],
[66,72,76,65,83,0,68,73],
[53,60,75,67,74,63,0,65],
[61,69,80,69,71,58,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,81,71,74,82,61,66],
[57,0,70,58,64,56,68,61],
[50,61,0,60,59,59,55,56],
[60,73,71,0,77,69,71,67],
[57,67,72,54,0,67,69,65],
[49,75,72,62,64,0,68,65],
[70,63,76,60,62,63,0,55],
[65,70,75,64,66,66,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,66,68,47,79,69,61],
[45,0,65,55,55,75,79,78],
[65,66,0,85,76,74,98,60],
[63,76,46,0,42,62,78,66],
[84,76,55,89,0,54,57,57],
[52,56,57,69,77,0,55,59],
[62,52,33,53,74,76,0,56],
[70,53,71,65,74,72,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,54,45,53,70,63,72],
[70,0,48,44,55,67,35,83],
[77,83,0,65,67,70,70,92],
[86,87,66,0,57,86,84,97],
[78,76,64,74,0,67,65,86],
[61,64,61,45,64,0,74,80],
[68,96,61,47,66,57,0,76],
[59,48,39,34,45,51,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,79,69,61,67,75,64],
[61,0,68,61,57,60,59,63],
[52,63,0,56,48,64,67,60],
[62,70,75,0,57,58,62,61],
[70,74,83,74,0,62,74,71],
[64,71,67,73,69,0,66,68],
[56,72,64,69,57,65,0,59],
[67,68,71,70,60,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,44,60,63,45,56,70],
[78,0,54,71,75,67,73,78],
[87,77,0,66,68,65,81,86],
[71,60,65,0,71,50,67,86],
[68,56,63,60,0,53,60,70],
[86,64,66,81,78,0,80,92],
[75,58,50,64,71,51,0,76],
[61,53,45,45,61,39,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,64,61,65,75,67],
[63,0,62,60,61,48,72,64],
[70,69,0,56,62,54,63,69],
[67,71,75,0,72,75,65,79],
[70,70,69,59,0,61,67,68],
[66,83,77,56,70,0,62,71],
[56,59,68,66,64,69,0,63],
[64,67,62,52,63,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,80,49,56,49,65,69],
[75,0,77,54,76,53,57,95],
[51,54,0,50,66,64,66,68],
[82,77,81,0,69,63,53,74],
[75,55,65,62,0,45,61,62],
[82,78,67,68,86,0,53,72],
[66,74,65,78,70,78,0,80],
[62,36,63,57,69,59,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,74,79,58,70,65],
[63,0,61,65,65,71,72,64],
[64,70,0,82,78,69,74,70],
[57,66,49,0,68,66,57,62],
[52,66,53,63,0,63,64,61],
[73,60,62,65,68,0,70,68],
[61,59,57,74,67,61,0,64],
[66,67,61,69,70,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,90,76,68,70,69,57],
[56,0,87,64,76,75,51,72],
[41,44,0,46,29,48,58,42],
[55,67,85,0,75,65,72,72],
[63,55,102,56,0,49,65,61],
[61,56,83,66,82,0,71,59],
[62,80,73,59,66,60,0,52],
[74,59,89,59,70,72,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,81,67,75,64,80],
[77,0,69,84,71,64,73,78],
[72,62,0,72,75,67,62,72],
[50,47,59,0,53,51,60,53],
[64,60,56,78,0,66,57,59],
[56,67,64,80,65,0,63,54],
[67,58,69,71,74,68,0,63],
[51,53,59,78,72,77,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,74,58,63,59,69,61],
[66,0,66,48,61,63,62,65],
[57,65,0,60,68,75,60,79],
[73,83,71,0,75,61,79,82],
[68,70,63,56,0,70,70,76],
[72,68,56,70,61,0,70,67],
[62,69,71,52,61,61,0,76],
[70,66,52,49,55,64,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,68,69,73,64,67,82],
[55,0,63,73,86,70,62,85],
[63,68,0,61,73,74,57,73],
[62,58,70,0,81,63,61,75],
[58,45,58,50,0,60,53,65],
[67,61,57,68,71,0,56,75],
[64,69,74,70,78,75,0,80],
[49,46,58,56,66,56,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,44,60,56,61,54],
[67,0,62,47,57,53,59,60],
[63,69,0,46,63,68,54,58],
[87,84,85,0,63,67,68,62],
[71,74,68,68,0,67,60,62],
[75,78,63,64,64,0,67,69],
[70,72,77,63,71,64,0,74],
[77,71,73,69,69,62,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,63,71,67,69,64],
[67,0,67,66,72,76,59,57],
[66,64,0,68,70,65,63,66],
[68,65,63,0,77,63,67,70],
[60,59,61,54,0,64,59,56],
[64,55,66,68,67,0,60,58],
[62,72,68,64,72,71,0,63],
[67,74,65,61,75,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,89,64,57,80,68,68],
[62,0,73,64,58,72,52,67],
[42,58,0,44,52,61,49,56],
[67,67,87,0,55,62,54,73],
[74,73,79,76,0,72,65,68],
[51,59,70,69,59,0,53,80],
[63,79,82,77,66,78,0,79],
[63,64,75,58,63,51,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,61,66,67,61,62],
[70,0,69,58,59,67,69,64],
[66,62,0,63,62,68,62,61],
[70,73,68,0,70,71,69,64],
[65,72,69,61,0,70,65,71],
[64,64,63,60,61,0,61,71],
[70,62,69,62,66,70,0,69],
[69,67,70,67,60,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,57,64,56,70,52,60],
[79,0,66,69,67,69,52,65],
[74,65,0,66,66,71,62,65],
[67,62,65,0,68,71,69,51],
[75,64,65,63,0,76,64,71],
[61,62,60,60,55,0,61,57],
[79,79,69,62,67,70,0,61],
[71,66,66,80,60,74,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,68,61,69,75,59],
[69,0,66,73,71,64,81,66],
[69,65,0,59,64,60,74,64],
[63,58,72,0,65,67,79,63],
[70,60,67,66,0,64,74,67],
[62,67,71,64,67,0,80,61],
[56,50,57,52,57,51,0,61],
[72,65,67,68,64,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,74,62,72,65,67,60],
[70,0,76,63,75,68,74,70],
[57,55,0,64,70,63,59,60],
[69,68,67,0,72,63,66,67],
[59,56,61,59,0,66,66,59],
[66,63,68,68,65,0,65,54],
[64,57,72,65,65,66,0,55],
[71,61,71,64,72,77,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,56,70,93,75,74,76],
[56,0,47,58,86,65,86,60],
[75,84,0,46,104,68,86,76],
[61,73,85,0,117,71,87,69],
[38,45,27,14,0,41,61,45],
[56,66,63,60,90,0,87,60],
[57,45,45,44,70,44,0,51],
[55,71,55,62,86,71,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,53,36,54,57,55,56],
[84,0,59,55,80,67,71,61],
[78,72,0,71,76,84,64,67],
[95,76,60,0,86,76,63,65],
[77,51,55,45,0,51,48,51],
[74,64,47,55,80,0,73,71],
[76,60,67,68,83,58,0,47],
[75,70,64,66,80,60,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,77,79,75,52,70],
[61,0,68,78,65,75,73,67],
[65,63,0,62,71,74,70,61],
[54,53,69,0,72,81,73,79],
[52,66,60,59,0,76,67,62],
[56,56,57,50,55,0,61,45],
[79,58,61,58,64,70,0,65],
[61,64,70,52,69,86,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,72,56,74,73,70,79],
[59,0,80,62,61,77,65,69],
[59,51,0,64,45,69,70,64],
[75,69,67,0,64,55,69,73],
[57,70,86,67,0,65,60,76],
[58,54,62,76,66,0,72,75],
[61,66,61,62,71,59,0,66],
[52,62,67,58,55,56,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,75,74,77,74,70,73],
[68,0,74,67,73,68,58,63],
[56,57,0,70,62,65,67,65],
[57,64,61,0,68,69,66,59],
[54,58,69,63,0,65,63,65],
[57,63,66,62,66,0,64,64],
[61,73,64,65,68,67,0,63],
[58,68,66,72,66,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,69,59,77,88,69],
[60,0,62,73,86,67,90,82],
[65,69,0,54,76,66,73,67],
[62,58,77,0,70,92,74,85],
[72,45,55,61,0,64,71,67],
[54,64,65,39,67,0,51,65],
[43,41,58,57,60,80,0,66],
[62,49,64,46,64,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,94,73,58,76,91,81],
[64,0,73,66,64,56,83,57],
[37,58,0,66,74,61,83,79],
[58,65,65,0,65,60,73,65],
[73,67,57,66,0,69,73,73],
[55,75,70,71,62,0,75,81],
[40,48,48,58,58,56,0,48],
[50,74,52,66,58,50,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,69,68,75,66,70],
[68,0,66,75,66,78,64,71],
[64,65,0,69,61,78,60,64],
[62,56,62,0,59,66,68,58],
[63,65,70,72,0,77,66,65],
[56,53,53,65,54,0,55,55],
[65,67,71,63,65,76,0,59],
[61,60,67,73,66,76,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,68,62,65,69,72],
[68,0,64,69,57,75,74,71],
[72,67,0,70,61,68,80,70],
[63,62,61,0,63,63,75,68],
[69,74,70,68,0,68,75,65],
[66,56,63,68,63,0,79,75],
[62,57,51,56,56,52,0,65],
[59,60,61,63,66,56,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,68,62,77,69,62,76],
[50,0,62,51,67,65,65,76],
[63,69,0,61,76,70,57,81],
[69,80,70,0,67,62,71,65],
[54,64,55,64,0,62,55,68],
[62,66,61,69,69,0,65,63],
[69,66,74,60,76,66,0,74],
[55,55,50,66,63,68,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,55,55,58,66,55,61],
[71,0,55,73,55,57,44,67],
[76,76,0,66,66,62,59,75],
[76,58,65,0,55,64,61,63],
[73,76,65,76,0,68,64,67],
[65,74,69,67,63,0,67,72],
[76,87,72,70,67,64,0,82],
[70,64,56,68,64,59,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,58,31,54,40,54,67],
[113,0,58,72,74,70,103,74],
[73,73,0,67,75,37,77,66],
[100,59,64,0,78,72,85,65],
[77,57,56,53,0,43,101,63],
[91,61,94,59,88,0,84,75],
[77,28,54,46,30,47,0,70],
[64,57,65,66,68,56,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,85,73,78,74,65,67],
[65,0,80,69,73,66,67,65],
[46,51,0,56,57,59,60,43],
[58,62,75,0,67,66,59,56],
[53,58,74,64,0,61,53,54],
[57,65,72,65,70,0,62,60],
[66,64,71,72,78,69,0,63],
[64,66,88,75,77,71,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,86,46,102,45,79,55],
[65,0,75,66,85,55,79,65],
[45,56,0,59,81,38,34,44],
[85,65,72,0,100,60,82,76],
[29,46,50,31,0,29,50,54],
[86,76,93,71,102,0,88,55],
[52,52,97,49,81,43,0,55],
[76,66,87,55,77,76,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,40,39,44,22,49,46],
[65,0,81,65,57,67,65,51],
[91,50,0,68,50,66,68,33],
[92,66,63,0,76,87,97,68],
[87,74,81,55,0,64,80,46],
[109,64,65,44,67,0,67,72],
[82,66,63,34,51,64,0,45],
[85,80,98,63,85,59,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,58,70,56,67,63,73],
[69,0,71,70,66,63,66,84],
[73,60,0,82,64,74,70,81],
[61,61,49,0,53,67,55,59],
[75,65,67,78,0,68,65,72],
[64,68,57,64,63,0,65,69],
[68,65,61,76,66,66,0,74],
[58,47,50,72,59,62,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,64,72,58,32,70,72],
[54,0,64,61,59,39,62,61],
[67,67,0,57,47,34,82,79],
[59,70,74,0,52,46,51,63],
[73,72,84,79,0,67,61,79],
[99,92,97,85,64,0,68,93],
[61,69,49,80,70,63,0,60],
[59,70,52,68,52,38,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,44,67,58,71,61,77],
[76,0,71,77,62,77,72,70],
[87,60,0,63,70,88,76,95],
[64,54,68,0,68,80,61,72],
[73,69,61,63,0,71,69,76],
[60,54,43,51,60,0,45,48],
[70,59,55,70,62,86,0,70],
[54,61,36,59,55,83,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,58,70,59,57,63],
[68,0,61,66,66,50,55,60],
[62,70,0,64,71,51,55,55],
[73,65,67,0,72,65,61,61],
[61,65,60,59,0,51,53,55],
[72,81,80,66,80,0,73,63],
[74,76,76,70,78,58,0,71],
[68,71,76,70,76,68,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,43,43,43,57,35,64],
[100,0,70,71,62,102,71,72],
[88,61,0,47,40,70,58,71],
[88,60,84,0,67,69,71,66],
[88,69,91,64,0,79,63,94],
[74,29,61,62,52,0,56,78],
[96,60,73,60,68,75,0,71],
[67,59,60,65,37,53,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,56,53,49,74,69,75],
[67,0,71,68,62,68,77,69],
[75,60,0,55,53,73,69,69],
[78,63,76,0,74,74,71,77],
[82,69,78,57,0,81,77,79],
[57,63,58,57,50,0,65,78],
[62,54,62,60,54,66,0,71],
[56,62,62,54,52,53,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,61,64,64,71,74,62],
[75,0,58,72,64,73,72,63],
[70,73,0,68,64,75,67,66],
[67,59,63,0,59,72,67,66],
[67,67,67,72,0,75,69,57],
[60,58,56,59,56,0,61,54],
[57,59,64,64,62,70,0,60],
[69,68,65,65,74,77,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,74,69,96,43,71,64],
[64,0,48,56,68,64,64,65],
[57,83,0,67,71,63,62,83],
[62,75,64,0,73,70,85,89],
[35,63,60,58,0,50,39,53],
[88,67,68,61,81,0,83,76],
[60,67,69,46,92,48,0,72],
[67,66,48,42,78,55,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,69,55,71,66,60],
[71,0,77,82,68,75,69,60],
[71,54,0,77,56,70,62,61],
[62,49,54,0,74,64,63,60],
[76,63,75,57,0,69,70,73],
[60,56,61,67,62,0,45,65],
[65,62,69,68,61,86,0,56],
[71,71,70,71,58,66,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,64,72,60,70,77],
[66,0,62,66,70,65,70,71],
[63,69,0,64,70,63,68,77],
[67,65,67,0,73,62,68,69],
[59,61,61,58,0,67,65,72],
[71,66,68,69,64,0,71,73],
[61,61,63,63,66,60,0,63],
[54,60,54,62,59,58,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,56,67,54,64,59,51],
[74,0,63,70,72,71,67,70],
[75,68,0,65,63,70,65,71],
[64,61,66,0,66,70,71,64],
[77,59,68,65,0,64,66,71],
[67,60,61,61,67,0,62,65],
[72,64,66,60,65,69,0,64],
[80,61,60,67,60,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,122,64,89,64,77,84,73],
[9,0,17,43,8,17,19,17],
[67,114,0,91,81,61,94,102],
[42,88,40,0,19,28,24,53],
[67,123,50,112,0,76,86,68],
[54,114,70,103,55,0,70,70],
[47,112,37,107,45,61,0,92],
[58,114,29,78,63,61,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,33,53,80,29,36,22],
[87,0,45,58,75,70,72,63],
[98,86,0,71,103,65,63,57],
[78,73,60,0,88,69,58,59],
[51,56,28,43,0,42,49,46],
[102,61,66,62,89,0,64,37],
[95,59,68,73,82,67,0,79],
[109,68,74,72,85,94,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,73,60,45,54,75,76],
[44,0,65,42,45,37,71,52],
[58,66,0,63,45,54,78,71],
[71,89,68,0,66,62,82,69],
[86,86,86,65,0,71,79,73],
[77,94,77,69,60,0,82,76],
[56,60,53,49,52,49,0,57],
[55,79,60,62,58,55,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,73,64,61,57,64,68],
[62,0,78,69,66,63,70,64],
[58,53,0,73,61,62,64,49],
[67,62,58,0,62,59,69,57],
[70,65,70,69,0,69,68,56],
[74,68,69,72,62,0,70,66],
[67,61,67,62,63,61,0,59],
[63,67,82,74,75,65,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,71,68,70,67,62,69],
[55,0,61,66,71,53,70,64],
[60,70,0,65,70,54,68,65],
[63,65,66,0,68,46,54,67],
[61,60,61,63,0,53,70,63],
[64,78,77,85,78,0,78,70],
[69,61,63,77,61,53,0,56],
[62,67,66,64,68,61,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,73,59,72,72,65,61],
[40,0,61,36,43,59,64,44],
[58,70,0,37,55,51,39,37],
[72,95,94,0,77,75,68,55],
[59,88,76,54,0,61,58,50],
[59,72,80,56,70,0,77,70],
[66,67,92,63,73,54,0,50],
[70,87,94,76,81,61,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,61,69,62,67,61],
[71,0,69,62,74,68,71,57],
[69,62,0,66,68,67,63,55],
[70,69,65,0,73,69,76,65],
[62,57,63,58,0,65,60,58],
[69,63,64,62,66,0,64,66],
[64,60,68,55,71,67,0,63],
[70,74,76,66,73,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,60,65,67,67,60],
[62,0,59,63,63,59,61,65],
[66,72,0,69,66,68,71,63],
[71,68,62,0,72,63,75,70],
[66,68,65,59,0,69,59,56],
[64,72,63,68,62,0,66,62],
[64,70,60,56,72,65,0,61],
[71,66,68,61,75,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,49,59,53,67,79,44],
[95,0,77,72,86,76,61,47],
[82,54,0,61,72,70,88,63],
[72,59,70,0,53,38,83,63],
[78,45,59,78,0,69,102,51],
[64,55,61,93,62,0,79,78],
[52,70,43,48,29,52,0,60],
[87,84,68,68,80,53,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,61,66,63,76,61],
[67,0,62,74,57,64,81,74],
[67,69,0,61,56,74,76,73],
[70,57,70,0,62,70,81,60],
[65,74,75,69,0,67,79,83],
[68,67,57,61,64,0,84,70],
[55,50,55,50,52,47,0,66],
[70,57,58,71,48,61,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,65,67,64,69,69],
[64,0,68,67,60,64,67,61],
[69,63,0,66,60,61,60,65],
[66,64,65,0,62,69,62,59],
[64,71,71,69,0,69,66,67],
[67,67,70,62,62,0,65,64],
[62,64,71,69,65,66,0,68],
[62,70,66,72,64,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,62,75,75,58,56,67],
[58,0,65,68,64,53,59,65],
[69,66,0,58,64,53,57,68],
[56,63,73,0,72,53,66,52],
[56,67,67,59,0,53,53,67],
[73,78,78,78,78,0,56,71],
[75,72,74,65,78,75,0,76],
[64,66,63,79,64,60,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,71,68,76,65,66],
[67,0,71,64,65,67,59,67],
[59,60,0,65,65,69,66,58],
[60,67,66,0,67,69,63,63],
[63,66,66,64,0,69,63,68],
[55,64,62,62,62,0,54,53],
[66,72,65,68,68,77,0,69],
[65,64,73,68,63,78,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,60,65,68,58,59],
[67,0,61,68,67,61,59,66],
[67,70,0,63,72,72,67,58],
[71,63,68,0,68,72,60,59],
[66,64,59,63,0,59,54,59],
[63,70,59,59,72,0,58,57],
[73,72,64,71,77,73,0,67],
[72,65,73,72,72,74,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,54,74,84,55,64,63],
[73,0,77,74,70,69,65,79],
[77,54,0,74,71,68,73,71],
[57,57,57,0,58,52,77,72],
[47,61,60,73,0,60,65,61],
[76,62,63,79,71,0,68,70],
[67,66,58,54,66,63,0,67],
[68,52,60,59,70,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,75,54,47,70,58],
[70,0,49,70,68,54,67,55],
[73,82,0,76,54,66,72,56],
[56,61,55,0,62,56,78,61],
[77,63,77,69,0,69,80,68],
[84,77,65,75,62,0,68,72],
[61,64,59,53,51,63,0,39],
[73,76,75,70,63,59,92,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,75,61,77,64,64],
[66,0,71,70,67,70,70,64],
[63,60,0,63,79,82,79,67],
[56,61,68,0,63,71,57,62],
[70,64,52,68,0,59,67,64],
[54,61,49,60,72,0,61,51],
[67,61,52,74,64,70,0,60],
[67,67,64,69,67,80,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,65,69,63,59,67,70],
[76,0,71,71,66,68,65,69],
[66,60,0,57,60,62,62,60],
[62,60,74,0,60,61,71,66],
[68,65,71,71,0,67,73,63],
[72,63,69,70,64,0,67,68],
[64,66,69,60,58,64,0,75],
[61,62,71,65,68,63,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,109,57,57,109,70,60,29],
[22,0,79,76,32,48,60,48],
[74,52,0,100,84,70,54,71],
[74,55,31,0,55,41,53,44],
[22,99,47,76,0,48,79,19],
[61,83,61,90,83,0,60,33],
[71,71,77,78,52,71,0,49],
[102,83,60,87,112,98,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,59,63,63,75,63],
[65,0,57,57,52,61,57,63],
[66,74,0,64,66,58,79,67],
[72,74,67,0,58,67,66,67],
[68,79,65,73,0,65,77,69],
[68,70,73,64,66,0,76,63],
[56,74,52,65,54,55,0,58],
[68,68,64,64,62,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,67,84,69,83,61,74],
[53,0,61,76,62,73,61,73],
[64,70,0,73,76,77,68,72],
[47,55,58,0,46,49,45,57],
[62,69,55,85,0,66,66,72],
[48,58,54,82,65,0,55,67],
[70,70,63,86,65,76,0,73],
[57,58,59,74,59,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,78,49,72,90,72,81],
[58,0,79,78,73,85,72,86],
[53,52,0,53,81,78,58,55],
[82,53,78,0,73,88,75,58],
[59,58,50,58,0,63,66,62],
[41,46,53,43,68,0,58,57],
[59,59,73,56,65,73,0,74],
[50,45,76,73,69,74,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,69,76,105,67,70,57],
[69,0,58,71,66,71,75,78],
[62,73,0,50,84,62,79,54],
[55,60,81,0,86,79,58,65],
[26,65,47,45,0,41,46,44],
[64,60,69,52,90,0,58,48],
[61,56,52,73,85,73,0,59],
[74,53,77,66,87,83,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,54,35,0,31,54,58],
[77,0,54,42,54,96,96,65],
[77,77,0,0,12,54,54,23],
[96,89,131,0,12,54,54,112],
[131,77,119,119,0,54,96,100],
[100,35,77,77,77,0,100,100],
[77,35,77,77,35,31,0,77],
[73,66,108,19,31,31,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,51,65,60,51,58,57],
[70,0,57,68,60,45,64,41],
[80,74,0,81,47,65,90,68],
[66,63,50,0,56,50,61,48],
[71,71,84,75,0,58,74,69],
[80,86,66,81,73,0,69,40],
[73,67,41,70,57,62,0,49],
[74,90,63,83,62,91,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,70,49,72,68,77,91],
[47,0,60,50,59,62,56,66],
[61,71,0,63,59,67,76,81],
[82,81,68,0,63,76,72,83],
[59,72,72,68,0,77,73,77],
[63,69,64,55,54,0,64,72],
[54,75,55,59,58,67,0,75],
[40,65,50,48,54,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,69,65,66,61,68,58],
[73,0,66,66,67,64,63,64],
[62,65,0,69,68,62,64,71],
[66,65,62,0,66,62,62,67],
[65,64,63,65,0,66,63,63],
[70,67,69,69,65,0,68,69],
[63,68,67,69,68,63,0,63],
[73,67,60,64,68,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,57,66,58,58,67],
[58,0,64,66,58,58,62,65],
[68,67,0,63,65,66,64,68],
[74,65,68,0,57,59,63,70],
[65,73,66,74,0,67,68,66],
[73,73,65,72,64,0,69,70],
[73,69,67,68,63,62,0,72],
[64,66,63,61,65,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,67,68,68,73,62],
[66,0,67,60,70,62,62,55],
[59,64,0,59,70,53,52,65],
[64,71,72,0,68,64,74,72],
[63,61,61,63,0,68,66,62],
[63,69,78,67,63,0,69,61],
[58,69,79,57,65,62,0,71],
[69,76,66,59,69,70,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,69,66,76,61,77],
[67,0,62,72,78,73,60,74],
[65,69,0,64,78,75,69,70],
[62,59,67,0,71,66,60,72],
[65,53,53,60,0,67,49,61],
[55,58,56,65,64,0,51,64],
[70,71,62,71,82,80,0,75],
[54,57,61,59,70,67,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,73,63,75,83,67,86],
[61,0,60,58,48,71,60,75],
[58,71,0,64,66,75,70,73],
[68,73,67,0,60,75,73,85],
[56,83,65,71,0,76,67,78],
[48,60,56,56,55,0,57,65],
[64,71,61,58,64,74,0,77],
[45,56,58,46,53,66,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,73,71,69,73,68],
[67,0,68,67,64,72,66,73],
[63,63,0,59,63,68,66,57],
[58,64,72,0,64,70,73,73],
[60,67,68,67,0,67,69,64],
[62,59,63,61,64,0,63,59],
[58,65,65,58,62,68,0,60],
[63,58,74,58,67,72,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,59,57,71,59,73,64],
[62,0,64,64,74,65,77,64],
[72,67,0,67,70,70,77,64],
[74,67,64,0,77,71,73,66],
[60,57,61,54,0,62,67,56],
[72,66,61,60,69,0,76,64],
[58,54,54,58,64,55,0,60],
[67,67,67,65,75,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,59,69,70,70,65,67],
[62,0,65,65,59,71,60,71],
[72,66,0,67,63,73,63,64],
[62,66,64,0,61,65,60,65],
[61,72,68,70,0,69,69,66],
[61,60,58,66,62,0,58,67],
[66,71,68,71,62,73,0,62],
[64,60,67,66,65,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,59,59,37,63,45,102],
[76,0,60,51,51,61,63,77],
[72,71,0,56,70,45,56,57],
[72,80,75,0,48,66,78,94],
[94,80,61,83,0,62,39,80],
[68,70,86,65,69,0,60,73],
[86,68,75,53,92,71,0,72],
[29,54,74,37,51,58,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,76,95,76,48,79,104],
[72,0,64,83,80,39,46,48],
[55,67,0,46,43,30,46,51],
[36,48,85,0,7,75,51,32],
[55,51,88,124,0,87,70,51],
[83,92,101,56,44,0,75,79],
[52,85,85,80,61,56,0,76],
[27,83,80,99,80,52,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,70,65,67,61,76],
[70,0,71,78,65,66,66,82],
[70,60,0,80,66,69,63,82],
[61,53,51,0,60,64,58,65],
[66,66,65,71,0,74,68,77],
[64,65,62,67,57,0,53,67],
[70,65,68,73,63,78,0,79],
[55,49,49,66,54,64,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,66,71,71,72,67],
[62,0,73,65,70,70,61,68],
[66,58,0,64,67,66,56,74],
[65,66,67,0,72,78,72,72],
[60,61,64,59,0,66,57,63],
[60,61,65,53,65,0,64,65],
[59,70,75,59,74,67,0,59],
[64,63,57,59,68,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,57,56,51,62,67,53],
[76,0,59,61,59,74,68,62],
[74,72,0,62,60,67,79,72],
[75,70,69,0,66,56,79,72],
[80,72,71,65,0,69,76,69],
[69,57,64,75,62,0,76,64],
[64,63,52,52,55,55,0,59],
[78,69,59,59,62,67,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,50,59,57,52,52],
[93,0,78,71,94,64,80,84],
[87,53,0,48,75,59,62,63],
[81,60,83,0,82,62,69,80],
[72,37,56,49,0,45,54,51],
[74,67,72,69,86,0,77,64],
[79,51,69,62,77,54,0,54],
[79,47,68,51,80,67,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,47,64,38,69,63,60],
[62,0,87,63,78,51,62,107],
[84,44,0,57,73,52,84,71],
[67,68,74,0,78,61,86,105],
[93,53,58,53,0,74,69,44],
[62,80,79,70,57,0,77,84],
[68,69,47,45,62,54,0,59],
[71,24,60,26,87,47,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,54,60,55,58,60,48],
[80,0,74,74,71,64,69,74],
[77,57,0,58,54,68,71,51],
[71,57,73,0,62,68,67,69],
[76,60,77,69,0,57,80,64],
[73,67,63,63,74,0,84,66],
[71,62,60,64,51,47,0,56],
[83,57,80,62,67,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,59,67,66,63,62],
[69,0,64,66,67,70,59,71],
[71,67,0,65,67,66,67,68],
[72,65,66,0,70,66,65,70],
[64,64,64,61,0,66,66,62],
[65,61,65,65,65,0,67,69],
[68,72,64,66,65,64,0,68],
[69,60,63,61,69,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,61,64,58,61,57,53],
[74,0,67,67,58,51,68,57],
[70,64,0,55,59,60,60,50],
[67,64,76,0,72,70,69,69],
[73,73,72,59,0,72,71,74],
[70,80,71,61,59,0,65,67],
[74,63,71,62,60,66,0,66],
[78,74,81,62,57,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,83,87,75,67,78,76],
[69,0,80,74,65,70,69,63],
[48,51,0,57,63,45,57,61],
[44,57,74,0,72,57,47,61],
[56,66,68,59,0,67,70,70],
[64,61,86,74,64,0,64,68],
[53,62,74,84,61,67,0,78],
[55,68,70,70,61,63,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,70,64,63,63,75,58],
[59,0,66,69,68,62,67,56],
[61,65,0,60,64,62,61,61],
[67,62,71,0,67,67,70,65],
[68,63,67,64,0,67,66,67],
[68,69,69,64,64,0,67,57],
[56,64,70,61,65,64,0,69],
[73,75,70,66,64,74,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,56,53,54,64,64,69],
[74,0,62,66,69,73,73,72],
[75,69,0,60,55,68,67,73],
[78,65,71,0,73,65,75,78],
[77,62,76,58,0,72,83,74],
[67,58,63,66,59,0,69,75],
[67,58,64,56,48,62,0,66],
[62,59,58,53,57,56,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,61,55,60,72,59,65],
[72,0,59,56,69,74,74,68],
[70,72,0,65,67,82,88,81],
[76,75,66,0,65,70,70,72],
[71,62,64,66,0,72,57,79],
[59,57,49,61,59,0,69,55],
[72,57,43,61,74,62,0,64],
[66,63,50,59,52,76,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,73,77,65,69,72,69],
[62,0,66,62,66,70,63,62],
[58,65,0,68,57,57,64,72],
[54,69,63,0,52,57,68,62],
[66,65,74,79,0,62,64,73],
[62,61,74,74,69,0,61,71],
[59,68,67,63,67,70,0,66],
[62,69,59,69,58,60,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,53,74,79,67,64,56],
[61,0,65,82,73,65,71,50],
[78,66,0,55,62,71,52,62],
[57,49,76,0,46,64,43,44],
[52,58,69,85,0,76,55,53],
[64,66,60,67,55,0,61,47],
[67,60,79,88,76,70,0,68],
[75,81,69,87,78,84,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,70,64,78,64,70,64],
[57,0,67,59,74,66,68,57],
[61,64,0,59,76,67,64,63],
[67,72,72,0,75,67,75,63],
[53,57,55,56,0,60,63,51],
[67,65,64,64,71,0,60,66],
[61,63,67,56,68,71,0,56],
[67,74,68,68,80,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,79,68,76,73,71],
[66,0,57,65,53,65,59,44],
[62,74,0,80,62,73,63,72],
[52,66,51,0,55,67,66,59],
[63,78,69,76,0,69,70,61],
[55,66,58,64,62,0,55,46],
[58,72,68,65,61,76,0,64],
[60,87,59,72,70,85,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,102,59,69,79,87,68,99],
[29,0,47,39,64,68,56,80],
[72,84,0,63,77,75,75,86],
[62,92,68,0,93,75,63,81],
[52,67,54,38,0,63,36,60],
[44,63,56,56,68,0,53,75],
[63,75,56,68,95,78,0,91],
[32,51,45,50,71,56,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,62,70,86,66,79,71],
[72,0,68,58,72,71,77,60],
[69,63,0,59,76,66,66,70],
[61,73,72,0,74,66,70,77],
[45,59,55,57,0,61,56,61],
[65,60,65,65,70,0,79,76],
[52,54,65,61,75,52,0,64],
[60,71,61,54,70,55,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,79,69,65,74,71],
[60,0,61,64,54,51,66,62],
[60,70,0,70,62,72,73,69],
[52,67,61,0,61,61,59,59],
[62,77,69,70,0,61,69,63],
[66,80,59,70,70,0,72,74],
[57,65,58,72,62,59,0,70],
[60,69,62,72,68,57,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,56,93,78,59,70,78],
[73,0,50,66,86,79,83,104],
[75,81,0,98,65,94,80,118],
[38,65,33,0,69,73,67,91],
[53,45,66,62,0,72,68,91],
[72,52,37,58,59,0,63,59],
[61,48,51,64,63,68,0,105],
[53,27,13,40,40,72,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,65,68,62,64,74],
[67,0,66,77,62,72,70,82],
[62,65,0,69,74,66,64,74],
[66,54,62,0,62,63,65,72],
[63,69,57,69,0,59,62,72],
[69,59,65,68,72,0,67,67],
[67,61,67,66,69,64,0,90],
[57,49,57,59,59,64,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,52,58,61,57,51,62],
[73,0,74,65,64,61,59,61],
[79,57,0,72,71,61,73,67],
[73,66,59,0,71,60,61,73],
[70,67,60,60,0,61,58,70],
[74,70,70,71,70,0,59,76],
[80,72,58,70,73,72,0,69],
[69,70,64,58,61,55,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,59,66,72,71,69],
[72,0,58,71,62,68,58,69],
[67,73,0,73,67,63,58,67],
[72,60,58,0,64,63,62,61],
[65,69,64,67,0,74,54,60],
[59,63,68,68,57,0,62,65],
[60,73,73,69,77,69,0,74],
[62,62,64,70,71,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,60,83,71,59,70],
[70,0,82,71,91,63,55,69],
[61,49,0,65,74,65,63,48],
[71,60,66,0,74,76,67,75],
[48,40,57,57,0,56,62,37],
[60,68,66,55,75,0,58,52],
[72,76,68,64,69,73,0,72],
[61,62,83,56,94,79,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,50,85,63,49,59,66],
[74,0,70,92,80,59,73,78],
[81,61,0,79,69,53,73,65],
[46,39,52,0,47,36,39,35],
[68,51,62,84,0,59,74,58],
[82,72,78,95,72,0,67,62],
[72,58,58,92,57,64,0,68],
[65,53,66,96,73,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,69,63,63,72,72],
[62,0,71,86,78,81,62,60],
[69,60,0,77,73,89,75,66],
[62,45,54,0,66,61,73,56],
[68,53,58,65,0,69,70,61],
[68,50,42,70,62,0,60,50],
[59,69,56,58,61,71,0,58],
[59,71,65,75,70,81,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,56,56,49,53,49,51],
[90,0,67,76,66,79,75,62],
[75,64,0,75,68,64,57,69],
[75,55,56,0,52,60,55,64],
[82,65,63,79,0,50,63,57],
[78,52,67,71,81,0,63,72],
[82,56,74,76,68,68,0,63],
[80,69,62,67,74,59,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,78,76,62,77,71,59],
[55,0,60,48,58,61,52,40],
[53,71,0,69,62,74,66,67],
[55,83,62,0,64,72,68,70],
[69,73,69,67,0,72,62,62],
[54,70,57,59,59,0,64,60],
[60,79,65,63,69,67,0,64],
[72,91,64,61,69,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,65,70,68,72,74],
[61,0,68,64,65,58,64,72],
[60,63,0,65,58,63,62,68],
[66,67,66,0,65,63,71,64],
[61,66,73,66,0,59,72,72],
[63,73,68,68,72,0,62,68],
[59,67,69,60,59,69,0,64],
[57,59,63,67,59,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,72,61,59,61,69,64],
[76,0,84,70,70,71,80,65],
[59,47,0,60,52,64,66,51],
[70,61,71,0,68,68,71,74],
[72,61,79,63,0,68,71,62],
[70,60,67,63,63,0,64,69],
[62,51,65,60,60,67,0,58],
[67,66,80,57,69,62,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,62,76,60,57,75],
[60,0,62,63,64,64,55,71],
[61,69,0,71,70,66,60,79],
[69,68,60,0,75,57,57,74],
[55,67,61,56,0,49,58,67],
[71,67,65,74,82,0,74,75],
[74,76,71,74,73,57,0,72],
[56,60,52,57,64,56,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,99,105,78,61,90,90,95],
[32,0,86,67,53,61,64,84],
[26,45,0,34,46,50,58,72],
[53,64,97,0,53,78,93,72],
[70,78,85,78,0,65,81,88],
[41,70,81,53,66,0,49,81],
[41,67,73,38,50,82,0,70],
[36,47,59,59,43,50,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,74,65,69,66,65],
[63,0,70,68,71,73,68,66],
[61,61,0,61,68,71,64,62],
[57,63,70,0,66,75,73,66],
[66,60,63,65,0,67,66,60],
[62,58,60,56,64,0,59,59],
[65,63,67,58,65,72,0,60],
[66,65,69,65,71,72,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,1,22,41,1,41],
[91,0,110,35,56,70,36,75],
[90,21,0,21,56,1,22,62],
[130,96,110,0,91,76,57,110],
[109,75,75,40,0,75,75,40],
[90,61,130,55,56,0,56,96],
[130,95,109,74,56,75,0,75],
[90,56,69,21,91,35,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,74,59,70,72,67,64],
[65,0,66,62,57,67,64,59],
[57,65,0,62,56,61,64,58],
[72,69,69,0,77,58,65,60],
[61,74,75,54,0,67,74,60],
[59,64,70,73,64,0,63,65],
[64,67,67,66,57,68,0,67],
[67,72,73,71,71,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,77,71,69,70,59,67],
[64,0,84,59,63,62,62,66],
[54,47,0,41,55,45,50,48],
[60,72,90,0,65,64,59,70],
[62,68,76,66,0,60,60,64],
[61,69,86,67,71,0,69,75],
[72,69,81,72,71,62,0,71],
[64,65,83,61,67,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,66,63,57,64,51],
[69,0,61,76,69,70,64,67],
[70,70,0,79,67,68,65,64],
[65,55,52,0,64,61,54,48],
[68,62,64,67,0,62,65,60],
[74,61,63,70,69,0,64,52],
[67,67,66,77,66,67,0,56],
[80,64,67,83,71,79,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,72,69,70,69,65],
[60,0,66,73,69,68,65,67],
[65,65,0,65,67,73,65,61],
[59,58,66,0,66,61,54,59],
[62,62,64,65,0,71,60,58],
[61,63,58,70,60,0,62,60],
[62,66,66,77,71,69,0,60],
[66,64,70,72,73,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,67,65,68,58,60],
[66,0,65,70,69,79,76,71],
[65,66,0,67,69,71,74,59],
[64,61,64,0,65,72,66,68],
[66,62,62,66,0,74,66,62],
[63,52,60,59,57,0,52,48],
[73,55,57,65,65,79,0,68],
[71,60,72,63,69,83,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,45,61,50,56,58,70],
[85,0,71,65,69,70,73,72],
[86,60,0,51,58,55,67,63],
[70,66,80,0,64,59,66,63],
[81,62,73,67,0,62,77,66],
[75,61,76,72,69,0,78,64],
[73,58,64,65,54,53,0,56],
[61,59,68,68,65,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,65,66,79,74,78],
[69,0,70,73,56,83,64,71],
[66,61,0,82,67,64,70,68],
[66,58,49,0,60,71,71,73],
[65,75,64,71,0,77,67,77],
[52,48,67,60,54,0,50,68],
[57,67,61,60,64,81,0,59],
[53,60,63,58,54,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,58,60,68,59,53,62],
[63,0,60,62,66,67,58,67],
[73,71,0,70,73,69,65,68],
[71,69,61,0,68,64,66,63],
[63,65,58,63,0,63,58,67],
[72,64,62,67,68,0,60,61],
[78,73,66,65,73,71,0,73],
[69,64,63,68,64,70,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,67,69,72,67,70],
[70,0,70,64,70,67,71,73],
[69,61,0,64,77,65,75,71],
[64,67,67,0,80,71,63,76],
[62,61,54,51,0,63,66,66],
[59,64,66,60,68,0,59,79],
[64,60,56,68,65,72,0,61],
[61,58,60,55,65,52,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,63,77,69,69,63],
[65,0,89,87,83,84,71,71],
[59,42,0,67,74,74,57,60],
[68,44,64,0,69,74,69,62],
[54,48,57,62,0,65,66,59],
[62,47,57,57,66,0,56,66],
[62,60,74,62,65,75,0,60],
[68,60,71,69,72,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,58,53,63,59,62,59],
[74,0,68,66,66,65,70,68],
[73,63,0,73,72,76,67,70],
[78,65,58,0,71,71,68,66],
[68,65,59,60,0,69,67,62],
[72,66,55,60,62,0,65,59],
[69,61,64,63,64,66,0,58],
[72,63,61,65,69,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,66,53,55,70,60],
[59,0,59,67,56,55,66,62],
[66,72,0,68,61,70,66,71],
[65,64,63,0,52,54,55,58],
[78,75,70,79,0,67,78,64],
[76,76,61,77,64,0,76,66],
[61,65,65,76,53,55,0,66],
[71,69,60,73,67,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,58,65,53,52,61],
[65,0,67,72,70,69,53,76],
[63,64,0,58,74,49,54,56],
[73,59,73,0,80,50,56,66],
[66,61,57,51,0,61,58,52],
[78,62,82,81,70,0,70,64],
[79,78,77,75,73,61,0,68],
[70,55,75,65,79,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,80,52,68,58,59,56],
[65,0,56,75,58,46,67,35],
[51,75,0,60,66,47,61,51],
[79,56,71,0,74,73,75,77],
[63,73,65,57,0,60,77,64],
[73,85,84,58,71,0,85,61],
[72,64,70,56,54,46,0,67],
[75,96,80,54,67,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,65,58,61,61,66],
[71,0,65,73,61,63,69,69],
[67,66,0,72,64,65,68,64],
[66,58,59,0,60,63,59,63],
[73,70,67,71,0,63,60,69],
[70,68,66,68,68,0,60,65],
[70,62,63,72,71,71,0,72],
[65,62,67,68,62,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,85,63,68,71,50],
[65,0,75,96,64,70,87,56],
[66,56,0,80,71,65,55,59],
[46,35,51,0,46,48,42,52],
[68,67,60,85,0,65,72,71],
[63,61,66,83,66,0,57,83],
[60,44,76,89,59,74,0,65],
[81,75,72,79,60,48,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,65,56,51,68,56,60],
[74,0,63,55,47,65,67,69],
[66,68,0,58,75,70,72,52],
[75,76,73,0,64,77,73,63],
[80,84,56,67,0,66,65,65],
[63,66,61,54,65,0,43,45],
[75,64,59,58,66,88,0,59],
[71,62,79,68,66,86,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,70,72,65,62,74],
[66,0,61,70,75,67,67,56],
[63,70,0,79,72,71,68,59],
[61,61,52,0,66,64,54,55],
[59,56,59,65,0,53,60,54],
[66,64,60,67,78,0,65,61],
[69,64,63,77,71,66,0,64],
[57,75,72,76,77,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,65,83,69,61,76],
[67,0,55,58,75,64,66,72],
[68,76,0,69,90,69,62,80],
[66,73,62,0,86,65,68,74],
[48,56,41,45,0,57,48,69],
[62,67,62,66,74,0,65,75],
[70,65,69,63,83,66,0,83],
[55,59,51,57,62,56,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,50,59,69,62,54],
[62,0,65,70,67,68,61,54],
[62,66,0,71,70,71,65,55],
[81,61,60,0,66,71,73,65],
[72,64,61,65,0,73,71,70],
[62,63,60,60,58,0,59,58],
[69,70,66,58,60,72,0,63],
[77,77,76,66,61,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,71,62,68,83,69,57],
[52,0,57,62,48,68,57,44],
[60,74,0,66,61,73,68,71],
[69,69,65,0,60,73,63,59],
[63,83,70,71,0,90,59,54],
[48,63,58,58,41,0,63,52],
[62,74,63,68,72,68,0,83],
[74,87,60,72,77,79,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,51,46,51,67,55],
[67,0,47,60,70,58,61,52],
[67,84,0,68,76,57,63,65],
[80,71,63,0,57,74,78,61],
[85,61,55,74,0,71,76,71],
[80,73,74,57,60,0,74,52],
[64,70,68,53,55,57,0,61],
[76,79,66,70,60,79,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,59,76,64,63,63],
[71,0,76,73,80,78,64,76],
[67,55,0,67,68,58,69,63],
[72,58,64,0,73,77,69,70],
[55,51,63,58,0,64,59,67],
[67,53,73,54,67,0,70,64],
[68,67,62,62,72,61,0,72],
[68,55,68,61,64,67,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,37,38,39,38,57,42],
[83,0,62,58,77,51,58,66],
[94,69,0,82,71,48,73,61],
[93,73,49,0,69,46,65,59],
[92,54,60,62,0,49,62,57],
[93,80,83,85,82,0,96,61],
[74,73,58,66,69,35,0,47],
[89,65,70,72,74,70,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,72,63,61,61,61],
[61,0,74,75,61,72,51,53],
[65,57,0,57,59,70,52,65],
[59,56,74,0,48,57,54,61],
[68,70,72,83,0,67,49,69],
[70,59,61,74,64,0,41,61],
[70,80,79,77,82,90,0,58],
[70,78,66,70,62,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,57,62,68,62,63],
[66,0,65,60,61,64,64,63],
[66,66,0,56,72,66,61,65],
[74,71,75,0,65,71,73,67],
[69,70,59,66,0,67,64,67],
[63,67,65,60,64,0,63,69],
[69,67,70,58,67,68,0,65],
[68,68,66,64,64,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,61,66,68,68,58],
[73,0,64,68,70,73,61,58],
[66,67,0,59,73,65,69,57],
[70,63,72,0,65,64,70,67],
[65,61,58,66,0,69,61,47],
[63,58,66,67,62,0,58,60],
[63,70,62,61,70,73,0,59],
[73,73,74,64,84,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,69,66,68,73,71],
[66,0,60,63,57,65,60,57],
[61,71,0,69,65,70,65,66],
[62,68,62,0,74,66,72,61],
[65,74,66,57,0,61,71,69],
[63,66,61,65,70,0,66,64],
[58,71,66,59,60,65,0,63],
[60,74,65,70,62,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,63,73,68,62,64],
[61,0,46,61,65,58,48,61],
[71,85,0,59,74,77,66,75],
[68,70,72,0,63,71,56,64],
[58,66,57,68,0,66,54,69],
[63,73,54,60,65,0,54,61],
[69,83,65,75,77,77,0,72],
[67,70,56,67,62,70,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,72,62,53,63,73],
[68,0,46,58,55,58,69,68],
[68,85,0,80,61,59,68,73],
[59,73,51,0,56,53,63,66],
[69,76,70,75,0,67,61,76],
[78,73,72,78,64,0,72,83],
[68,62,63,68,70,59,0,69],
[58,63,58,65,55,48,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,57,70,62,85,54],
[64,0,54,44,69,60,75,60],
[71,77,0,68,73,56,79,55],
[74,87,63,0,69,67,78,76],
[61,62,58,62,0,57,68,55],
[69,71,75,64,74,0,77,74],
[46,56,52,53,63,54,0,64],
[77,71,76,55,76,57,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,56,62,68,64,64,60],
[74,0,60,71,78,70,81,67],
[75,71,0,61,73,70,65,68],
[69,60,70,0,72,63,69,70],
[63,53,58,59,0,53,65,62],
[67,61,61,68,78,0,74,67],
[67,50,66,62,66,57,0,65],
[71,64,63,61,69,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,77,75,60,74,69,71],
[67,0,77,69,69,64,68,65],
[54,54,0,55,63,57,64,58],
[56,62,76,0,58,55,56,60],
[71,62,68,73,0,67,72,65],
[57,67,74,76,64,0,66,59],
[62,63,67,75,59,65,0,73],
[60,66,73,71,66,72,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,66,61,70,60,63],
[67,0,66,60,55,53,64,64],
[62,65,0,56,46,61,54,56],
[65,71,75,0,67,62,62,64],
[70,76,85,64,0,78,66,81],
[61,78,70,69,53,0,64,75],
[71,67,77,69,65,67,0,74],
[68,67,75,67,50,56,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,50,67,41,52,66,60],
[72,0,53,68,73,77,72,63],
[81,78,0,76,64,67,78,67],
[64,63,55,0,63,70,83,56],
[90,58,67,68,0,73,80,73],
[79,54,64,61,58,0,66,63],
[65,59,53,48,51,65,0,55],
[71,68,64,75,58,68,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,31,60,57,52,41,67],
[64,0,57,51,65,60,43,58],
[100,74,0,59,82,61,85,76],
[71,80,72,0,72,59,65,63],
[74,66,49,59,0,52,59,58],
[79,71,70,72,79,0,64,71],
[90,88,46,66,72,67,0,80],
[64,73,55,68,73,60,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,62,70,56,75,60,58],
[61,0,64,66,65,58,55,53],
[69,67,0,68,68,59,71,58],
[61,65,63,0,64,57,71,46],
[75,66,63,67,0,56,67,66],
[56,73,72,74,75,0,64,58],
[71,76,60,60,64,67,0,67],
[73,78,73,85,65,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,58,75,64,60,49,70],
[57,0,64,80,60,59,55,64],
[73,67,0,79,68,60,58,70],
[56,51,52,0,56,47,51,61],
[67,71,63,75,0,71,69,70],
[71,72,71,84,60,0,58,69],
[82,76,73,80,62,73,0,79],
[61,67,61,70,61,62,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,71,61,61,59,65,68],
[62,0,49,53,58,51,60,56],
[60,82,0,67,59,69,74,60],
[70,78,64,0,57,56,61,61],
[70,73,72,74,0,65,68,64],
[72,80,62,75,66,0,68,74],
[66,71,57,70,63,63,0,61],
[63,75,71,70,67,57,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,57,62,61,62,57,63],
[74,0,68,65,63,76,70,75],
[74,63,0,59,64,77,68,61],
[69,66,72,0,71,74,72,64],
[70,68,67,60,0,69,70,67],
[69,55,54,57,62,0,61,62],
[74,61,63,59,61,70,0,66],
[68,56,70,67,64,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,60,68,49,65,49,55],
[79,0,62,53,53,65,46,54],
[71,69,0,71,66,70,65,63],
[63,78,60,0,57,66,53,62],
[82,78,65,74,0,79,67,59],
[66,66,61,65,52,0,63,62],
[82,85,66,78,64,68,0,70],
[76,77,68,69,72,69,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,92,75,61,57,58,71,82],
[39,0,46,32,45,40,46,65],
[56,85,0,55,49,57,59,93],
[70,99,76,0,65,76,68,81],
[74,86,82,66,0,61,57,91],
[73,91,74,55,70,0,72,87],
[60,85,72,63,74,59,0,82],
[49,66,38,50,40,44,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,60,88,72,90,58,88],
[43,0,58,58,28,30,43,45],
[71,73,0,43,43,73,87,89],
[43,73,88,0,42,30,59,74],
[59,103,88,89,0,75,88,104],
[41,101,58,101,56,0,71,101],
[73,88,44,72,43,60,0,87],
[43,86,42,57,27,30,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,55,53,67,61,59],
[63,0,62,57,62,64,71,69],
[69,69,0,60,66,67,62,62],
[76,74,71,0,61,74,63,58],
[78,69,65,70,0,70,63,66],
[64,67,64,57,61,0,60,66],
[70,60,69,68,68,71,0,65],
[72,62,69,73,65,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,82,68,67,98,65,87],
[48,0,53,55,63,70,55,67],
[49,78,0,51,56,80,60,82],
[63,76,80,0,68,91,70,95],
[64,68,75,63,0,81,68,86],
[33,61,51,40,50,0,57,63],
[66,76,71,61,63,74,0,81],
[44,64,49,36,45,68,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,70,60,59,66,64,60],
[75,0,59,68,65,66,72,58],
[61,72,0,68,60,65,68,69],
[71,63,63,0,70,61,60,61],
[72,66,71,61,0,72,69,64],
[65,65,66,70,59,0,67,64],
[67,59,63,71,62,64,0,62],
[71,73,62,70,67,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,68,66,68,67,62],
[62,0,48,67,53,69,66,67],
[70,83,0,73,73,78,78,63],
[63,64,58,0,55,62,62,60],
[65,78,58,76,0,73,72,68],
[63,62,53,69,58,0,69,57],
[64,65,53,69,59,62,0,59],
[69,64,68,71,63,74,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,81,61,60,77,79,61],
[49,0,69,48,65,51,66,62],
[50,62,0,63,68,65,57,56],
[70,83,68,0,80,51,79,71],
[71,66,63,51,0,57,71,71],
[54,80,66,80,74,0,82,58],
[52,65,74,52,60,49,0,62],
[70,69,75,60,60,73,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,62,71,67,78,60,87],
[51,0,60,69,52,50,69,72],
[69,71,0,80,57,74,72,73],
[60,62,51,0,65,68,56,77],
[64,79,74,66,0,64,73,79],
[53,81,57,63,67,0,62,83],
[71,62,59,75,58,69,0,88],
[44,59,58,54,52,48,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,66,56,66,53,73,55],
[77,0,80,67,56,68,66,60],
[65,51,0,62,54,69,65,62],
[75,64,69,0,76,75,79,65],
[65,75,77,55,0,71,82,58],
[78,63,62,56,60,0,73,57],
[58,65,66,52,49,58,0,72],
[76,71,69,66,73,74,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,54,62,57,63,74,62],
[69,0,65,69,63,65,76,70],
[77,66,0,75,66,62,79,72],
[69,62,56,0,55,67,75,67],
[74,68,65,76,0,73,70,72],
[68,66,69,64,58,0,80,71],
[57,55,52,56,61,51,0,55],
[69,61,59,64,59,60,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,68,65,78,58,60,68],
[85,0,52,74,60,71,61,62],
[63,79,0,75,39,56,75,58],
[66,57,56,0,66,59,61,55],
[53,71,92,65,0,81,77,79],
[73,60,75,72,50,0,87,69],
[71,70,56,70,54,44,0,63],
[63,69,73,76,52,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,75,87,60,72,67],
[58,0,71,81,76,68,73,67],
[65,60,0,70,68,63,63,65],
[56,50,61,0,59,55,53,51],
[44,55,63,72,0,60,54,55],
[71,63,68,76,71,0,68,65],
[59,58,68,78,77,63,0,74],
[64,64,66,80,76,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,85,65,48,32,34,34],
[65,0,49,64,84,49,16,33],
[46,82,0,47,49,17,31,64],
[66,67,84,0,49,34,51,33],
[83,47,82,82,0,33,18,66],
[99,82,114,97,98,0,81,63],
[97,115,100,80,113,50,0,99],
[97,98,67,98,65,68,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,60,54,47,53,58,49],
[73,0,66,57,64,56,58,53],
[71,65,0,62,69,65,62,56],
[77,74,69,0,68,65,69,63],
[84,67,62,63,0,66,76,60],
[78,75,66,66,65,0,77,68],
[73,73,69,62,55,54,0,63],
[82,78,75,68,71,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,82,64,99,76,71,66],
[56,0,64,57,100,58,63,73],
[49,67,0,58,83,58,62,58],
[67,74,73,0,84,58,64,58],
[32,31,48,47,0,48,38,47],
[55,73,73,73,83,0,61,63],
[60,68,69,67,93,70,0,59],
[65,58,73,73,84,68,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,77,64,60,67,66,66],
[66,0,69,53,66,68,66,64],
[54,62,0,68,55,72,71,70],
[67,78,63,0,69,79,81,72],
[71,65,76,62,0,76,70,76],
[64,63,59,52,55,0,67,62],
[65,65,60,50,61,64,0,63],
[65,67,61,59,55,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,72,60,56,62,64,69],
[59,0,62,59,72,66,60,68],
[59,69,0,61,62,61,53,70],
[71,72,70,0,58,55,62,76],
[75,59,69,73,0,66,64,70],
[69,65,70,76,65,0,72,72],
[67,71,78,69,67,59,0,72],
[62,63,61,55,61,59,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,72,66,64,60,56],
[67,0,68,69,59,69,65,58],
[72,63,0,69,60,67,56,58],
[59,62,62,0,66,69,63,65],
[65,72,71,65,0,74,67,59],
[67,62,64,62,57,0,70,61],
[71,66,75,68,64,61,0,66],
[75,73,73,66,72,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,73,61,49,59,50,67],
[67,0,61,45,63,57,57,56],
[58,70,0,55,57,60,66,66],
[70,86,76,0,77,86,65,82],
[82,68,74,54,0,69,64,77],
[72,74,71,45,62,0,52,73],
[81,74,65,66,67,79,0,66],
[64,75,65,49,54,58,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,67,68,60,72,70],
[59,0,73,60,57,60,64,66],
[65,58,0,71,65,63,64,69],
[64,71,60,0,60,59,60,62],
[63,74,66,71,0,65,69,69],
[71,71,68,72,66,0,63,77],
[59,67,67,71,62,68,0,69],
[61,65,62,69,62,54,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,68,71,69,63,71,68],
[58,0,64,65,72,75,73,71],
[63,67,0,67,78,58,61,65],
[60,66,64,0,71,63,68,66],
[62,59,53,60,0,60,68,70],
[68,56,73,68,71,0,72,79],
[60,58,70,63,63,59,0,68],
[63,60,66,65,61,52,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,70,59,61,81,59,67],
[57,0,72,61,50,64,73,50],
[61,59,0,61,60,75,52,67],
[72,70,70,0,56,64,64,63],
[70,81,71,75,0,101,44,73],
[50,67,56,67,30,0,37,44],
[72,58,79,67,87,94,0,66],
[64,81,64,68,58,87,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,53,81,64,53,39,79],
[77,0,93,103,77,66,51,52],
[78,38,0,79,78,67,26,66],
[50,28,52,0,12,26,14,53],
[67,54,53,119,0,41,40,80],
[78,65,64,105,90,0,66,79],
[92,80,105,117,91,65,0,67],
[52,79,65,78,51,52,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,69,70,84,62,62,59],
[60,0,53,58,69,55,60,57],
[62,78,0,66,77,49,70,64],
[61,73,65,0,86,55,64,55],
[47,62,54,45,0,53,45,51],
[69,76,82,76,78,0,60,69],
[69,71,61,67,86,71,0,78],
[72,74,67,76,80,62,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,74,69,80,72,59,71],
[56,0,51,53,53,55,57,51],
[57,80,0,72,69,74,63,57],
[62,78,59,0,68,69,71,59],
[51,78,62,63,0,53,53,43],
[59,76,57,62,78,0,61,57],
[72,74,68,60,78,70,0,62],
[60,80,74,72,88,74,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,60,62,63,63,66],
[66,0,64,59,64,60,57,61],
[70,67,0,60,62,72,55,72],
[71,72,71,0,72,78,66,65],
[69,67,69,59,0,66,64,56],
[68,71,59,53,65,0,59,59],
[68,74,76,65,67,72,0,64],
[65,70,59,66,75,72,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,65,64,68,68,58],
[69,0,69,60,68,65,76,63],
[63,62,0,53,65,60,69,58],
[66,71,78,0,67,67,63,53],
[67,63,66,64,0,74,74,66],
[63,66,71,64,57,0,73,55],
[63,55,62,68,57,58,0,57],
[73,68,73,78,65,76,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,63,71,63,67,65],
[68,0,71,72,72,73,64,67],
[58,60,0,59,65,54,55,63],
[68,59,72,0,63,57,57,54],
[60,59,66,68,0,65,61,61],
[68,58,77,74,66,0,71,70],
[64,67,76,74,70,60,0,69],
[66,64,68,77,70,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,66,64,67,74,71],
[65,0,70,68,76,79,76,73],
[59,61,0,61,63,66,72,65],
[65,63,70,0,68,70,72,70],
[67,55,68,63,0,66,74,65],
[64,52,65,61,65,0,76,69],
[57,55,59,59,57,55,0,58],
[60,58,66,61,66,62,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,61,73,68,72,59,66],
[50,0,69,56,60,59,64,57],
[70,62,0,68,60,67,68,55],
[58,75,63,0,59,65,70,60],
[63,71,71,72,0,74,61,57],
[59,72,64,66,57,0,71,53],
[72,67,63,61,70,60,0,56],
[65,74,76,71,74,78,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,78,79,68,71,91],
[68,0,52,58,75,71,82,93],
[62,79,0,78,77,82,63,89],
[53,73,53,0,82,68,71,83],
[52,56,54,49,0,57,73,90],
[63,60,49,63,74,0,76,76],
[60,49,68,60,58,55,0,85],
[40,38,42,48,41,55,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,69,67,61,63,68,77],
[58,0,67,66,67,68,71,63],
[62,64,0,62,64,65,65,59],
[64,65,69,0,74,65,76,63],
[70,64,67,57,0,71,67,58],
[68,63,66,66,60,0,59,57],
[63,60,66,55,64,72,0,62],
[54,68,72,68,73,74,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,75,64,63,57,56,60],
[78,0,70,63,68,70,65,69],
[56,61,0,59,61,58,52,56],
[67,68,72,0,67,53,64,62],
[68,63,70,64,0,55,58,58],
[74,61,73,78,76,0,61,65],
[75,66,79,67,73,70,0,65],
[71,62,75,69,73,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,60,72,64,65,71,73],
[53,0,63,53,59,66,66,64],
[71,68,0,68,70,75,75,60],
[59,78,63,0,69,73,88,66],
[67,72,61,62,0,76,71,60],
[66,65,56,58,55,0,71,58],
[60,65,56,43,60,60,0,55],
[58,67,71,65,71,73,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,58,71,67,62,59,56],
[64,0,66,68,57,68,53,62],
[73,65,0,71,71,66,61,52],
[60,63,60,0,59,69,61,67],
[64,74,60,72,0,63,53,59],
[69,63,65,62,68,0,62,60],
[72,78,70,70,78,69,0,61],
[75,69,79,64,72,71,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,69,65,62,64,58],
[67,0,62,70,59,74,68,72],
[69,69,0,62,72,64,66,69],
[62,61,69,0,59,71,68,64],
[66,72,59,72,0,75,67,69],
[69,57,67,60,56,0,61,63],
[67,63,65,63,64,70,0,71],
[73,59,62,67,62,68,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,52,66,70,63,77,69],
[80,0,65,70,71,79,74,67],
[79,66,0,64,68,71,69,72],
[65,61,67,0,63,77,63,70],
[61,60,63,68,0,67,61,51],
[68,52,60,54,64,0,73,64],
[54,57,62,68,70,58,0,53],
[62,64,59,61,80,67,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,67,83,50,58,61,62],
[48,0,56,56,37,55,50,55],
[64,75,0,78,67,73,64,64],
[48,75,53,0,45,58,62,62],
[81,94,64,86,0,61,85,81],
[73,76,58,73,70,0,78,68],
[70,81,67,69,46,53,0,58],
[69,76,67,69,50,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,68,62,62,68,59],
[65,0,66,61,63,75,69,62],
[65,65,0,61,59,67,68,66],
[63,70,70,0,65,65,75,66],
[69,68,72,66,0,61,69,68],
[69,56,64,66,70,0,61,56],
[63,62,63,56,62,70,0,54],
[72,69,65,65,63,75,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,67,83,83,67,65,50],
[48,0,82,66,98,82,63,65],
[64,49,0,48,98,64,80,65],
[48,65,83,0,83,67,48,82],
[48,33,33,48,0,32,80,33],
[64,49,67,64,99,0,81,50],
[66,68,51,83,51,50,0,34],
[81,66,66,49,98,81,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,66,67,54,58,62,72],
[68,0,64,67,62,56,58,63],
[65,67,0,68,60,60,62,73],
[64,64,63,0,57,65,65,61],
[77,69,71,74,0,64,68,82],
[73,75,71,66,67,0,62,80],
[69,73,69,66,63,69,0,70],
[59,68,58,70,49,51,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,44,44,131,44,87,0],
[43,0,43,87,87,87,43,43],
[87,88,0,87,131,44,87,0],
[87,44,44,0,87,44,43,0],
[0,44,0,44,0,44,0,0],
[87,44,87,87,87,0,87,87],
[44,88,44,88,131,44,0,0],
[131,88,131,131,131,44,131,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,64,55,66,63,66],
[62,0,54,58,59,60,57,56],
[61,77,0,65,66,59,63,61],
[67,73,66,0,59,68,65,67],
[76,72,65,72,0,68,66,65],
[65,71,72,63,63,0,60,66],
[68,74,68,66,65,71,0,66],
[65,75,70,64,66,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,70,82,83,83,58,97],
[71,0,61,46,71,70,60,98],
[61,70,0,36,59,61,72,86],
[49,85,95,0,107,84,107,97],
[48,60,72,24,0,84,69,73],
[48,61,70,47,47,0,69,74],
[73,71,59,24,62,62,0,75],
[34,33,45,34,58,57,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,76,67,65,69,75,69],
[63,0,69,68,62,61,72,72],
[55,62,0,56,58,58,68,60],
[64,63,75,0,62,62,71,68],
[66,69,73,69,0,61,70,71],
[62,70,73,69,70,0,71,73],
[56,59,63,60,61,60,0,67],
[62,59,71,63,60,58,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,64,73,71,67,65,56],
[59,0,59,62,58,64,59,58],
[67,72,0,70,61,72,63,60],
[58,69,61,0,57,71,65,65],
[60,73,70,74,0,74,64,70],
[64,67,59,60,57,0,59,60],
[66,72,68,66,67,72,0,58],
[75,73,71,66,61,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,69,67,64,62,72,63],
[70,0,83,58,64,69,85,72],
[62,48,0,68,56,67,61,61],
[64,73,63,0,68,72,73,66],
[67,67,75,63,0,81,88,81],
[69,62,64,59,50,0,69,58],
[59,46,70,58,43,62,0,56],
[68,59,70,65,50,73,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,67,65,73,70,72,66],
[55,0,65,73,74,55,64,65],
[64,66,0,69,74,58,70,69],
[66,58,62,0,72,64,69,63],
[58,57,57,59,0,49,64,55],
[61,76,73,67,82,0,78,65],
[59,67,61,62,67,53,0,63],
[65,66,62,68,76,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,71,67,61,75,62],
[64,0,68,68,67,57,73,65],
[65,63,0,69,60,57,68,63],
[60,63,62,0,60,64,60,63],
[64,64,71,71,0,63,76,67],
[70,74,74,67,68,0,70,62],
[56,58,63,71,55,61,0,59],
[69,66,68,68,64,69,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,54,63,59,56,49,63],
[58,0,60,58,49,53,54,47],
[77,71,0,65,57,55,68,60],
[68,73,66,0,67,55,71,66],
[72,82,74,64,0,58,61,59],
[75,78,76,76,73,0,71,65],
[82,77,63,60,70,60,0,64],
[68,84,71,65,72,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,100,59,75,104,103,91],
[44,0,58,45,76,76,116,91],
[31,73,0,29,75,91,73,76],
[72,86,102,0,46,90,71,90],
[56,55,56,85,0,73,87,75],
[27,55,40,41,58,0,71,74],
[28,15,58,60,44,60,0,76],
[40,40,55,41,56,57,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,71,64,69,70,72,68],
[70,0,64,57,62,69,71,70],
[60,67,0,67,74,73,71,75],
[67,74,64,0,58,73,67,71],
[62,69,57,73,0,69,66,73],
[61,62,58,58,62,0,65,56],
[59,60,60,64,65,66,0,74],
[63,61,56,60,58,75,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,68,66,82,65,77,74],
[59,0,63,54,60,70,73,57],
[63,68,0,57,65,56,73,60],
[65,77,74,0,62,81,84,59],
[49,71,66,69,0,69,69,63],
[66,61,75,50,62,0,79,62],
[54,58,58,47,62,52,0,47],
[57,74,71,72,68,69,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,48,89,77,65,79,61],
[58,0,55,50,54,35,69,54],
[83,76,0,84,62,51,60,66],
[42,81,47,0,63,51,73,58],
[54,77,69,68,0,73,73,58],
[66,96,80,80,58,0,103,86],
[52,62,71,58,58,28,0,51],
[70,77,65,73,73,45,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,64,36,58,53,62,59],
[83,0,62,69,84,61,59,61],
[67,69,0,61,63,60,64,70],
[95,62,70,0,69,57,74,67],
[73,47,68,62,0,53,33,42],
[78,70,71,74,78,0,64,66],
[69,72,67,57,98,67,0,60],
[72,70,61,64,89,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,65,68,64,74,76,73],
[46,0,61,49,49,54,56,57],
[66,70,0,61,52,59,65,50],
[63,82,70,0,59,66,74,56],
[67,82,79,72,0,84,75,65],
[57,77,72,65,47,0,70,61],
[55,75,66,57,56,61,0,69],
[58,74,81,75,66,70,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,79,69,77,57,63,74],
[72,0,71,73,78,62,66,76],
[52,60,0,70,65,57,56,70],
[62,58,61,0,71,58,51,66],
[54,53,66,60,0,56,51,65],
[74,69,74,73,75,0,61,77],
[68,65,75,80,80,70,0,84],
[57,55,61,65,66,54,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,70,60,69,69,72,69],
[61,0,72,65,59,63,63,68],
[61,59,0,63,62,67,72,60],
[71,66,68,0,65,61,70,68],
[62,72,69,66,0,71,73,65],
[62,68,64,70,60,0,72,67],
[59,68,59,61,58,59,0,64],
[62,63,71,63,66,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,87,58,74,83,73,66],
[60,0,84,75,64,70,71,53],
[44,47,0,54,40,61,47,44],
[73,56,77,0,58,63,58,52],
[57,67,91,73,0,76,77,58],
[48,61,70,68,55,0,50,56],
[58,60,84,73,54,81,0,65],
[65,78,87,79,73,75,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,56,58,51,58,54,61],
[71,0,70,64,69,70,69,73],
[75,61,0,67,71,77,67,71],
[73,67,64,0,62,72,62,74],
[80,62,60,69,0,79,63,68],
[73,61,54,59,52,0,59,74],
[77,62,64,69,68,72,0,71],
[70,58,60,57,63,57,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,67,58,66,62,76],
[64,0,67,56,54,62,67,53],
[67,64,0,61,67,61,59,58],
[64,75,70,0,63,62,59,66],
[73,77,64,68,0,57,57,66],
[65,69,70,69,74,0,62,66],
[69,64,72,72,74,69,0,69],
[55,78,73,65,65,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,73,74,60,83,73,73],
[73,0,66,64,81,75,74,75],
[58,65,0,71,75,71,74,78],
[57,67,60,0,74,69,60,69],
[71,50,56,57,0,66,63,62],
[48,56,60,62,65,0,76,56],
[58,57,57,71,68,55,0,59],
[58,56,53,62,69,75,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,94,71,63,61,61],
[69,0,69,84,56,59,61,57],
[58,62,0,81,54,49,68,64],
[37,47,50,0,53,42,48,43],
[60,75,77,78,0,70,70,61],
[68,72,82,89,61,0,71,76],
[70,70,63,83,61,60,0,52],
[70,74,67,88,70,55,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,79,55,55,53,56],
[67,0,59,69,62,67,68,68],
[67,72,0,70,66,53,64,67],
[52,62,61,0,55,67,57,57],
[76,69,65,76,0,60,66,71],
[76,64,78,64,71,0,63,67],
[78,63,67,74,65,68,0,82],
[75,63,64,74,60,64,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,62,59,64,60,60],
[62,0,59,68,64,70,60,55],
[67,72,0,73,62,69,67,80],
[69,63,58,0,54,68,64,57],
[72,67,69,77,0,73,64,71],
[67,61,62,63,58,0,64,65],
[71,71,64,67,67,67,0,65],
[71,76,51,74,60,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,56,75,48,67,58,62],
[62,0,62,59,59,63,68,60],
[75,69,0,60,57,52,82,63],
[56,72,71,0,73,59,71,68],
[83,72,74,58,0,76,75,76],
[64,68,79,72,55,0,71,69],
[73,63,49,60,56,60,0,59],
[69,71,68,63,55,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,48,56,62,57,78,61],
[72,0,55,50,70,60,77,61],
[83,76,0,69,70,72,84,65],
[75,81,62,0,76,64,81,67],
[69,61,61,55,0,60,67,58],
[74,71,59,67,71,0,75,62],
[53,54,47,50,64,56,0,52],
[70,70,66,64,73,69,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,47,44,58,46,38,51],
[91,0,73,76,80,77,62,82],
[84,58,0,67,69,68,56,65],
[87,55,64,0,75,59,66,78],
[73,51,62,56,0,66,60,68],
[85,54,63,72,65,0,44,78],
[93,69,75,65,71,87,0,74],
[80,49,66,53,63,53,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,70,84,78,66,84,64],
[75,0,64,78,80,68,80,71],
[61,67,0,67,66,50,61,55],
[47,53,64,0,57,60,65,57],
[53,51,65,74,0,64,71,57],
[65,63,81,71,67,0,68,61],
[47,51,70,66,60,63,0,59],
[67,60,76,74,74,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,58,64,54,48,67,59],
[75,0,71,60,63,63,70,72],
[73,60,0,69,57,67,64,64],
[67,71,62,0,54,63,66,64],
[77,68,74,77,0,62,66,66],
[83,68,64,68,69,0,70,73],
[64,61,67,65,65,61,0,60],
[72,59,67,67,65,58,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,67,73,75,69,75],
[64,0,68,74,67,66,66,67],
[69,63,0,71,62,67,71,66],
[64,57,60,0,67,72,59,64],
[58,64,69,64,0,68,72,68],
[56,65,64,59,63,0,68,60],
[62,65,60,72,59,63,0,61],
[56,64,65,67,63,71,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,51,63,60,71,54],
[66,0,65,68,77,66,67,55],
[71,66,0,48,65,57,72,65],
[80,63,83,0,93,63,53,71],
[68,54,66,38,0,62,59,52],
[71,65,74,68,69,0,77,57],
[60,64,59,78,72,54,0,70],
[77,76,66,60,79,74,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,67,60,69,66,71],
[62,0,64,60,64,54,63,55],
[67,67,0,59,64,60,66,60],
[64,71,72,0,60,70,68,66],
[71,67,67,71,0,65,67,66],
[62,77,71,61,66,0,62,64],
[65,68,65,63,64,69,0,66],
[60,76,71,65,65,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,57,56,58,56,57,58],
[79,0,77,66,75,69,65,64],
[74,54,0,54,61,61,55,57],
[75,65,77,0,68,69,67,63],
[73,56,70,63,0,77,57,60],
[75,62,70,62,54,0,58,66],
[74,66,76,64,74,73,0,77],
[73,67,74,68,71,65,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,83,80,76,77,63,65],
[57,0,68,62,57,56,63,54],
[48,63,0,69,68,68,70,75],
[51,69,62,0,65,55,59,63],
[55,74,63,66,0,73,65,70],
[54,75,63,76,58,0,68,65],
[68,68,61,72,66,63,0,76],
[66,77,56,68,61,66,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,79,66,65,68,84],
[68,0,68,75,60,59,74,79],
[64,63,0,74,59,60,64,71],
[52,56,57,0,58,53,58,59],
[65,71,72,73,0,66,69,73],
[66,72,71,78,65,0,61,69],
[63,57,67,73,62,70,0,70],
[47,52,60,72,58,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,58,73,75,69,66,71],
[74,0,68,77,70,73,57,73],
[73,63,0,73,78,72,73,72],
[58,54,58,0,62,62,59,66],
[56,61,53,69,0,71,68,65],
[62,58,59,69,60,0,74,72],
[65,74,58,72,63,57,0,61],
[60,58,59,65,66,59,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,56,49,58,53,58,66],
[75,0,70,57,69,63,65,74],
[75,61,0,51,63,52,54,73],
[82,74,80,0,70,62,74,82],
[73,62,68,61,0,62,60,71],
[78,68,79,69,69,0,65,74],
[73,66,77,57,71,66,0,76],
[65,57,58,49,60,57,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,64,61,66,64,68],
[69,0,73,70,71,60,67,72],
[65,58,0,64,67,58,68,60],
[67,61,67,0,66,58,63,59],
[70,60,64,65,0,64,61,64],
[65,71,73,73,67,0,66,67],
[67,64,63,68,70,65,0,69],
[63,59,71,72,67,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,57,58,60,61,52,50],
[72,0,72,77,83,74,76,58],
[74,59,0,64,61,84,77,47],
[73,54,67,0,51,66,71,61],
[71,48,70,80,0,71,86,66],
[70,57,47,65,60,0,80,73],
[79,55,54,60,45,51,0,57],
[81,73,84,70,65,58,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,65,69,65,60,63],
[71,0,65,63,65,70,66,69],
[69,66,0,67,70,62,63,70],
[66,68,64,0,63,69,63,67],
[62,66,61,68,0,67,57,66],
[66,61,69,62,64,0,61,65],
[71,65,68,68,74,70,0,74],
[68,62,61,64,65,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,65,64,73,61,56,57],
[74,0,58,60,73,73,70,83],
[66,73,0,56,72,66,63,71],
[67,71,75,0,75,65,62,70],
[58,58,59,56,0,62,63,62],
[70,58,65,66,69,0,55,68],
[75,61,68,69,68,76,0,65],
[74,48,60,61,69,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,66,52,63,82,63,62],
[56,0,63,55,75,79,72,76],
[65,68,0,68,69,70,85,54],
[79,76,63,0,52,67,85,60],
[68,56,62,79,0,69,77,66],
[49,52,61,64,62,0,53,67],
[68,59,46,46,54,78,0,63],
[69,55,77,71,65,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,79,55,57,68,52],
[67,0,61,67,55,57,70,58],
[68,70,0,72,64,61,66,57],
[52,64,59,0,58,60,62,55],
[76,76,67,73,0,58,62,70],
[74,74,70,71,73,0,75,64],
[63,61,65,69,69,56,0,57],
[79,73,74,76,61,67,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,46,39,73,65,52,61],
[83,0,64,71,93,88,73,81],
[85,67,0,66,77,86,52,60],
[92,60,65,0,92,81,45,74],
[58,38,54,39,0,71,45,46],
[66,43,45,50,60,0,35,46],
[79,58,79,86,86,96,0,60],
[70,50,71,57,85,85,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,68,60,36,47,64,43],
[82,0,74,81,70,93,78,63],
[63,57,0,59,58,73,51,36],
[71,50,72,0,52,55,60,36],
[95,61,73,79,0,85,73,72],
[84,38,58,76,46,0,57,33],
[67,53,80,71,58,74,0,50],
[88,68,95,95,59,98,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,61,68,62,62,70],
[70,0,68,65,65,69,67,74],
[63,63,0,63,60,59,69,63],
[70,66,68,0,64,71,67,64],
[63,66,71,67,0,67,64,72],
[69,62,72,60,64,0,66,63],
[69,64,62,64,67,65,0,66],
[61,57,68,67,59,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,66,69,61,68,60],
[71,0,66,64,72,63,69,67],
[65,65,0,64,63,64,62,59],
[65,67,67,0,60,59,70,62],
[62,59,68,71,0,66,65,60],
[70,68,67,72,65,0,73,72],
[63,62,69,61,66,58,0,59],
[71,64,72,69,71,59,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,68,37,67,51,49,60],
[75,0,79,71,78,72,59,70],
[63,52,0,49,68,56,58,57],
[94,60,82,0,81,67,75,77],
[64,53,63,50,0,64,62,57],
[80,59,75,64,67,0,60,63],
[82,72,73,56,69,71,0,67],
[71,61,74,54,74,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,66,58,70,72,63],
[65,0,63,74,66,59,66,62],
[67,68,0,80,70,62,64,57],
[65,57,51,0,53,59,66,55],
[73,65,61,78,0,68,66,68],
[61,72,69,72,63,0,62,58],
[59,65,67,65,65,69,0,60],
[68,69,74,76,63,73,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,75,70,57,63,81],
[59,0,61,67,62,67,57,66],
[64,70,0,76,63,64,71,66],
[56,64,55,0,51,55,70,55],
[61,69,68,80,0,62,67,65],
[74,64,67,76,69,0,71,58],
[68,74,60,61,64,60,0,59],
[50,65,65,76,66,73,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,64,67,57,67,72],
[68,0,62,66,63,63,71,59],
[64,69,0,56,71,63,68,65],
[67,65,75,0,77,70,77,77],
[64,68,60,54,0,55,68,66],
[74,68,68,61,76,0,69,65],
[64,60,63,54,63,62,0,67],
[59,72,66,54,65,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,52,73,60,54,65],
[69,0,72,59,69,66,61,67],
[67,59,0,67,68,67,69,77],
[79,72,64,0,73,69,68,78],
[58,62,63,58,0,54,52,61],
[71,65,64,62,77,0,67,72],
[77,70,62,63,79,64,0,74],
[66,64,54,53,70,59,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,64,55,61,66,58,60],
[60,0,59,62,64,57,61,61],
[67,72,0,56,62,63,49,61],
[76,69,75,0,70,63,68,66],
[70,67,69,61,0,66,74,65],
[65,74,68,68,65,0,73,63],
[73,70,82,63,57,58,0,67],
[71,70,70,65,66,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,76,71,90,71,69],
[65,0,65,76,61,74,53,63],
[70,66,0,64,55,74,46,51],
[55,55,67,0,59,65,60,62],
[60,70,76,72,0,79,56,62],
[41,57,57,66,52,0,59,51],
[60,78,85,71,75,72,0,77],
[62,68,80,69,69,80,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,29,55,33,59,26],
[93,0,79,64,78,73,83,79],
[89,52,0,74,74,57,65,50],
[102,67,57,0,71,61,69,52],
[76,53,57,60,0,63,69,45],
[98,58,74,70,68,0,61,54],
[72,48,66,62,62,70,0,56],
[105,52,81,79,86,77,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,55,51,65,56,58,58],
[65,0,64,65,63,55,59,65],
[76,67,0,69,67,58,56,59],
[80,66,62,0,54,54,59,56],
[66,68,64,77,0,59,62,66],
[75,76,73,77,72,0,75,58],
[73,72,75,72,69,56,0,67],
[73,66,72,75,65,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,41,41,51,43,41,63],
[66,0,68,68,80,60,48,48],
[90,63,0,71,81,71,61,59],
[90,63,60,0,61,43,74,72],
[80,51,50,70,0,32,43,60],
[88,71,60,88,99,0,80,69],
[90,83,70,57,88,51,0,101],
[68,83,72,59,71,62,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,54,61,81,64,60],
[71,0,57,51,47,64,60,66],
[63,74,0,69,61,73,72,65],
[77,80,62,0,71,76,83,70],
[70,84,70,60,0,80,81,54],
[50,67,58,55,51,0,57,58],
[67,71,59,48,50,74,0,59],
[71,65,66,61,77,73,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,81,65,72,80,76],
[66,0,74,77,55,59,65,59],
[59,57,0,68,51,57,56,61],
[50,54,63,0,54,63,56,72],
[66,76,80,77,0,56,62,77],
[59,72,74,68,75,0,69,74],
[51,66,75,75,69,62,0,76],
[55,72,70,59,54,57,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,56,55,59,60,51],
[70,0,66,67,65,74,75,64],
[68,65,0,67,61,68,70,68],
[75,64,64,0,61,74,69,63],
[76,66,70,70,0,64,71,65],
[72,57,63,57,67,0,68,62],
[71,56,61,62,60,63,0,69],
[80,67,63,68,66,69,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,58,59,70,59,47,53],
[67,0,66,76,68,62,61,60],
[73,65,0,79,74,56,64,58],
[72,55,52,0,64,57,65,50],
[61,63,57,67,0,52,53,47],
[72,69,75,74,79,0,60,69],
[84,70,67,66,78,71,0,52],
[78,71,73,81,84,62,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,75,57,60,61,80],
[62,0,66,70,80,66,69,88],
[64,65,0,70,67,68,60,90],
[56,61,61,0,62,56,43,69],
[74,51,64,69,0,67,51,79],
[71,65,63,75,64,0,63,85],
[70,62,71,88,80,68,0,92],
[51,43,41,62,52,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,69,67,69,71,63],
[71,0,57,69,79,76,70,81],
[64,74,0,61,68,65,67,64],
[62,62,70,0,70,72,62,61],
[64,52,63,61,0,57,56,61],
[62,55,66,59,74,0,67,68],
[60,61,64,69,75,64,0,68],
[68,50,67,70,70,63,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,49,60,73,50,46,50],
[76,0,53,67,78,67,59,63],
[82,78,0,84,68,65,69,81],
[71,64,47,0,75,63,57,59],
[58,53,63,56,0,61,53,56],
[81,64,66,68,70,0,65,65],
[85,72,62,74,78,66,0,72],
[81,68,50,72,75,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,60,67,69,62,75],
[69,0,71,71,75,64,62,78],
[71,60,0,60,69,63,69,66],
[71,60,71,0,70,68,57,69],
[64,56,62,61,0,59,57,72],
[62,67,68,63,72,0,66,72],
[69,69,62,74,74,65,0,72],
[56,53,65,62,59,59,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,78,72,73,83,70],
[63,0,62,68,56,64,64,66],
[66,69,0,71,72,64,69,56],
[53,63,60,0,61,48,64,54],
[59,75,59,70,0,62,75,69],
[58,67,67,83,69,0,79,61],
[48,67,62,67,56,52,0,60],
[61,65,75,77,62,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,45,82,57,59,58],
[72,0,59,69,95,93,81,82],
[72,72,0,82,108,93,86,45],
[86,62,49,0,86,73,74,72],
[49,36,23,45,0,57,34,22],
[74,38,38,58,74,0,38,36],
[72,50,45,57,97,93,0,69],
[73,49,86,59,109,95,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,61,62,74,69,55,72],
[72,0,62,72,65,62,65,75],
[70,69,0,78,64,65,65,72],
[69,59,53,0,61,52,62,69],
[57,66,67,70,0,65,69,66],
[62,69,66,79,66,0,76,77],
[76,66,66,69,62,55,0,77],
[59,56,59,62,65,54,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,65,58,58,60,54],
[77,0,66,78,68,66,77,57],
[72,65,0,67,71,69,70,68],
[66,53,64,0,64,58,68,64],
[73,63,60,67,0,53,70,59],
[73,65,62,73,78,0,68,56],
[71,54,61,63,61,63,0,58],
[77,74,63,67,72,75,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,60,68,60,62,69],
[70,0,67,66,65,62,67,69],
[71,64,0,68,64,65,60,69],
[71,65,63,0,71,67,67,64],
[63,66,67,60,0,61,61,67],
[71,69,66,64,70,0,62,65],
[69,64,71,64,70,69,0,67],
[62,62,62,67,64,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,54,61,58,66,63,58],
[73,0,66,65,60,77,69,72],
[77,65,0,65,69,71,69,67],
[70,66,66,0,56,69,71,74],
[73,71,62,75,0,63,73,76],
[65,54,60,62,68,0,62,65],
[68,62,62,60,58,69,0,70],
[73,59,64,57,55,66,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,76,65,84,66,73,80],
[66,0,89,66,77,77,67,64],
[55,42,0,65,67,59,57,56],
[66,65,66,0,76,64,66,55],
[47,54,64,55,0,66,59,55],
[65,54,72,67,65,0,77,75],
[58,64,74,65,72,54,0,70],
[51,67,75,76,76,56,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,80,73,71,52,60,57],
[81,0,101,80,84,76,75,62],
[51,30,0,53,57,52,47,42],
[58,51,78,0,66,62,60,53],
[60,47,74,65,0,55,60,48],
[79,55,79,69,76,0,67,64],
[71,56,84,71,71,64,0,70],
[74,69,89,78,83,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,53,50,49,54,63,50],
[75,0,73,78,60,63,80,63],
[78,58,0,68,63,59,80,55],
[81,53,63,0,54,81,67,58],
[82,71,68,77,0,80,72,55],
[77,68,72,50,51,0,76,77],
[68,51,51,64,59,55,0,56],
[81,68,76,73,76,54,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,71,59,68,63,59,64],
[78,0,68,66,59,73,74,62],
[60,63,0,65,49,60,64,60],
[72,65,66,0,56,68,57,56],
[63,72,82,75,0,66,70,68],
[68,58,71,63,65,0,66,70],
[72,57,67,74,61,65,0,66],
[67,69,71,75,63,61,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,83,84,64,67,89,83],
[53,0,70,55,59,60,61,84],
[48,61,0,70,58,53,80,76],
[47,76,61,0,59,45,55,69],
[67,72,73,72,0,60,51,65],
[64,71,78,86,71,0,57,85],
[42,70,51,76,80,74,0,50],
[48,47,55,62,66,46,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,55,64,72,55,50,65],
[65,0,59,66,67,66,59,71],
[76,72,0,73,77,74,57,71],
[67,65,58,0,63,64,60,67],
[59,64,54,68,0,70,50,73],
[76,65,57,67,61,0,69,67],
[81,72,74,71,81,62,0,89],
[66,60,60,64,58,64,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,62,63,84,69,65,58],
[48,0,58,73,82,60,79,63],
[69,73,0,73,84,54,70,75],
[68,58,58,0,80,72,71,75],
[47,49,47,51,0,52,71,75],
[62,71,77,59,79,0,89,69],
[66,52,61,60,60,42,0,49],
[73,68,56,56,56,62,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,105,80,80,105,105,50,78],
[26,0,0,0,0,53,25,51],
[51,131,0,28,50,79,51,79],
[51,131,103,0,77,131,76,76],
[26,131,81,54,0,79,51,79],
[26,78,52,0,52,0,50,76],
[81,106,80,55,80,81,0,54],
[53,80,52,55,52,55,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,66,60,61,68,62],
[66,0,61,66,74,67,63,69],
[68,70,0,71,58,69,76,67],
[65,65,60,0,62,73,65,73],
[71,57,73,69,0,63,53,66],
[70,64,62,58,68,0,68,69],
[63,68,55,66,78,63,0,67],
[69,62,64,58,65,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,67,79,60,65,75],
[63,0,61,58,76,62,45,65],
[67,70,0,76,83,71,75,65],
[64,73,55,0,61,50,53,69],
[52,55,48,70,0,70,54,63],
[71,69,60,81,61,0,69,73],
[66,86,56,78,77,62,0,76],
[56,66,66,62,68,58,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,62,66,61,53,42,47],
[79,0,66,75,68,64,66,64],
[69,65,0,79,68,60,63,59],
[65,56,52,0,58,55,56,51],
[70,63,63,73,0,64,50,53],
[78,67,71,76,67,0,63,67],
[89,65,68,75,81,68,0,66],
[84,67,72,80,78,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,67,75,75,64,73],
[64,0,72,69,71,87,77,80],
[61,59,0,58,53,73,58,64],
[64,62,73,0,73,75,65,70],
[56,60,78,58,0,72,65,54],
[56,44,58,56,59,0,57,72],
[67,54,73,66,66,74,0,78],
[58,51,67,61,77,59,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,57,76,59,63,74,66],
[74,0,58,56,56,79,65,67],
[74,73,0,68,58,64,71,55],
[55,75,63,0,56,61,75,73],
[72,75,73,75,0,64,58,69],
[68,52,67,70,67,0,73,67],
[57,66,60,56,73,58,0,60],
[65,64,76,58,62,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,63,50,70,63,62],
[67,0,68,67,59,70,72,67],
[61,63,0,64,56,65,69,68],
[68,64,67,0,63,67,69,67],
[81,72,75,68,0,80,72,59],
[61,61,66,64,51,0,58,55],
[68,59,62,62,59,73,0,55],
[69,64,63,64,72,76,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,64,63,74,70,71,72],
[47,0,50,60,51,51,51,59],
[67,81,0,78,74,78,64,88],
[68,71,53,0,64,58,66,77],
[57,80,57,67,0,67,68,86],
[61,80,53,73,64,0,62,86],
[60,80,67,65,63,69,0,75],
[59,72,43,54,45,45,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,66,62,67,68,67],
[62,0,59,63,65,66,60,60],
[64,72,0,56,65,69,59,66],
[65,68,75,0,67,68,66,70],
[69,66,66,64,0,74,63,69],
[64,65,62,63,57,0,57,61],
[63,71,72,65,68,74,0,67],
[64,71,65,61,62,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,61,67,65,65,60],
[65,0,53,68,64,65,64,61],
[66,78,0,73,70,74,64,63],
[70,63,58,0,66,76,59,67],
[64,67,61,65,0,73,62,64],
[66,66,57,55,58,0,58,65],
[66,67,67,72,69,73,0,64],
[71,70,68,64,67,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,43,66,75,86,77,43],
[66,0,47,78,76,87,72,52],
[88,84,0,65,86,63,84,72],
[65,53,66,0,64,87,76,51],
[56,55,45,67,0,97,67,75],
[45,44,68,44,34,0,78,44],
[54,59,47,55,64,53,0,54],
[88,79,59,80,56,87,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,72,81,65,68,72],
[58,0,52,66,72,64,65,65],
[64,79,0,78,70,66,67,78],
[59,65,53,0,73,69,66,68],
[50,59,61,58,0,63,59,59],
[66,67,65,62,68,0,66,64],
[63,66,64,65,72,65,0,71],
[59,66,53,63,72,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,75,63,77,70,57],
[69,0,63,57,61,74,63,59],
[70,68,0,62,73,74,65,66],
[56,74,69,0,66,76,64,72],
[68,70,58,65,0,71,61,64],
[54,57,57,55,60,0,49,58],
[61,68,66,67,70,82,0,63],
[74,72,65,59,67,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,80,78,64,67,73,69],
[58,0,67,59,58,57,64,68],
[51,64,0,61,54,53,74,62],
[53,72,70,0,68,69,77,69],
[67,73,77,63,0,71,78,79],
[64,74,78,62,60,0,70,73],
[58,67,57,54,53,61,0,59],
[62,63,69,62,52,58,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,75,70,78,71,71,67],
[72,0,61,74,71,68,68,64],
[56,70,0,71,68,68,73,64],
[61,57,60,0,66,71,73,54],
[53,60,63,65,0,57,65,55],
[60,63,63,60,74,0,66,59],
[60,63,58,58,66,65,0,54],
[64,67,67,77,76,72,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,50,62,64,62,66,61],
[71,0,66,63,63,69,65,69],
[81,65,0,67,71,66,78,72],
[69,68,64,0,63,58,75,73],
[67,68,60,68,0,59,78,71],
[69,62,65,73,72,0,71,69],
[65,66,53,56,53,60,0,59],
[70,62,59,58,60,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,77,75,64,80,89,71],
[57,0,67,66,62,69,74,64],
[54,64,0,68,62,63,66,59],
[56,65,63,0,70,70,70,62],
[67,69,69,61,0,90,80,74],
[51,62,68,61,41,0,67,53],
[42,57,65,61,51,64,0,50],
[60,67,72,69,57,78,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,68,62,62,62,76],
[63,0,57,66,60,63,60,61],
[64,74,0,63,69,72,72,69],
[63,65,68,0,62,63,70,70],
[69,71,62,69,0,63,64,67],
[69,68,59,68,68,0,65,63],
[69,71,59,61,67,66,0,66],
[55,70,62,61,64,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,74,86,80,95,48],
[71,0,77,67,80,77,82,60],
[63,54,0,68,80,65,88,70],
[57,64,63,0,83,71,86,73],
[45,51,51,48,0,57,68,60],
[51,54,66,60,74,0,69,56],
[36,49,43,45,63,62,0,32],
[83,71,61,58,71,75,99,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,52,54,49,53,77,70],
[66,0,50,66,49,62,63,67],
[79,81,0,79,58,68,79,75],
[77,65,52,0,48,49,68,57],
[82,82,73,83,0,60,77,75],
[78,69,63,82,71,0,68,72],
[54,68,52,63,54,63,0,54],
[61,64,56,74,56,59,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,64,66,68,69,83],
[69,0,70,72,74,67,57,72],
[57,61,0,60,70,59,54,64],
[67,59,71,0,80,71,76,68],
[65,57,61,51,0,64,58,69],
[63,64,72,60,67,0,56,65],
[62,74,77,55,73,75,0,72],
[48,59,67,63,62,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,71,62,62,57,65,63],
[62,0,63,68,75,70,67,68],
[60,68,0,64,58,61,60,71],
[69,63,67,0,65,73,66,73],
[69,56,73,66,0,65,62,63],
[74,61,70,58,66,0,68,59],
[66,64,71,65,69,63,0,70],
[68,63,60,58,68,72,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,65,63,63,53,58],
[67,0,48,68,73,54,54,40],
[71,83,0,77,75,66,63,71],
[66,63,54,0,72,55,54,56],
[68,58,56,59,0,65,57,53],
[68,77,65,76,66,0,66,68],
[78,77,68,77,74,65,0,76],
[73,91,60,75,78,63,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,58,64,69,76,64,63],
[61,0,66,63,78,82,62,72],
[73,65,0,71,69,78,65,69],
[67,68,60,0,72,76,60,56],
[62,53,62,59,0,68,55,56],
[55,49,53,55,63,0,66,61],
[67,69,66,71,76,65,0,60],
[68,59,62,75,75,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,54,77,26,26,0,52],
[77,0,79,77,51,26,52,52],
[77,52,0,77,26,26,52,52],
[54,54,54,0,54,54,54,54],
[105,80,105,77,0,54,80,54],
[105,105,105,77,77,0,52,51],
[131,79,79,77,51,79,0,77],
[79,79,79,77,77,80,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,62,59,57,51,58,45],
[76,0,64,55,75,64,64,70],
[69,67,0,74,72,73,65,68],
[72,76,57,0,65,59,78,80],
[74,56,59,66,0,65,68,54],
[80,67,58,72,66,0,65,61],
[73,67,66,53,63,66,0,55],
[86,61,63,51,77,70,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,65,63,66,65,68],
[64,0,64,69,67,60,66,63],
[68,67,0,63,66,69,66,65],
[66,62,68,0,66,67,69,70],
[68,64,65,65,0,62,68,63],
[65,71,62,64,69,0,75,69],
[66,65,65,62,63,56,0,55],
[63,68,66,61,68,62,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,66,72,65,72,79],
[60,0,77,71,81,71,72,81],
[65,54,0,65,78,60,78,63],
[65,60,66,0,59,65,68,63],
[59,50,53,72,0,59,57,63],
[66,60,71,66,72,0,67,61],
[59,59,53,63,74,64,0,61],
[52,50,68,68,68,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,79,64,75,66,71,64],
[60,0,61,56,63,49,59,52],
[52,70,0,64,63,56,63,67],
[67,75,67,0,78,59,67,71],
[56,68,68,53,0,67,68,62],
[65,82,75,72,64,0,67,62],
[60,72,68,64,63,64,0,60],
[67,79,64,60,69,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,82,51,61,50,51],
[89,0,67,100,58,69,77,70],
[91,64,0,103,83,72,90,74],
[49,31,28,0,39,30,59,39],
[80,73,48,92,0,83,90,82],
[70,62,59,101,48,0,80,48],
[81,54,41,72,41,51,0,41],
[80,61,57,92,49,83,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,87,67,69,66,60,67],
[60,0,56,64,62,45,50,45],
[44,75,0,60,68,54,54,58],
[64,67,71,0,71,68,63,64],
[62,69,63,60,0,58,74,54],
[65,86,77,63,73,0,72,72],
[71,81,77,68,57,59,0,51],
[64,86,73,67,77,59,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,79,71,63,77,70,68],
[70,0,69,65,65,85,78,83],
[52,62,0,67,67,78,72,75],
[60,66,64,0,52,88,74,62],
[68,66,64,79,0,93,75,77],
[54,46,53,43,38,0,67,58],
[61,53,59,57,56,64,0,63],
[63,48,56,69,54,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,56,72,55,62,72],
[64,0,77,69,63,72,67,76],
[67,54,0,51,53,48,67,69],
[75,62,80,0,80,79,64,77],
[59,68,78,51,0,64,72,79],
[76,59,83,52,67,0,74,66],
[69,64,64,67,59,57,0,71],
[59,55,62,54,52,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,72,77,75,60,66,74],
[57,0,65,86,73,76,65,69],
[59,66,0,76,64,63,71,81],
[54,45,55,0,67,49,56,65],
[56,58,67,64,0,34,70,70],
[71,55,68,82,97,0,74,82],
[65,66,60,75,61,57,0,84],
[57,62,50,66,61,49,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,66,64,72,64,58,55],
[78,0,80,65,75,67,80,68],
[65,51,0,59,69,61,64,53],
[67,66,72,0,73,70,69,56],
[59,56,62,58,0,65,61,48],
[67,64,70,61,66,0,61,50],
[73,51,67,62,70,70,0,66],
[76,63,78,75,83,81,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,66,64,64,71,68],
[66,0,66,60,63,64,62,68],
[65,65,0,65,76,60,62,65],
[65,71,66,0,72,59,66,60],
[67,68,55,59,0,64,63,65],
[67,67,71,72,67,0,65,60],
[60,69,69,65,68,66,0,64],
[63,63,66,71,66,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,61,54,60,62,53],
[65,0,57,64,56,57,63,69],
[68,74,0,62,50,68,62,74],
[70,67,69,0,59,66,66,65],
[77,75,81,72,0,62,79,65],
[71,74,63,65,69,0,75,73],
[69,68,69,65,52,56,0,61],
[78,62,57,66,66,58,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,63,60,68,73,54],
[69,0,79,72,71,63,75,72],
[66,52,0,56,64,67,68,66],
[68,59,75,0,72,77,77,68],
[71,60,67,59,0,63,69,72],
[63,68,64,54,68,0,69,59],
[58,56,63,54,62,62,0,54],
[77,59,65,63,59,72,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,74,62,71,64,53,68],
[55,0,66,61,55,59,53,61],
[57,65,0,50,51,55,47,54],
[69,70,81,0,67,75,57,69],
[60,76,80,64,0,77,71,67],
[67,72,76,56,54,0,55,66],
[78,78,84,74,60,76,0,72],
[63,70,77,62,64,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,71,79,61,49,68],
[65,0,47,57,80,68,54,68],
[63,84,0,66,76,73,58,76],
[60,74,65,0,78,73,63,90],
[52,51,55,53,0,47,48,54],
[70,63,58,58,84,0,76,63],
[82,77,73,68,83,55,0,66],
[63,63,55,41,77,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,62,57,68,67,69],
[68,0,81,63,62,75,78,62],
[72,50,0,58,82,65,72,65],
[69,68,73,0,70,72,68,65],
[74,69,49,61,0,67,56,74],
[63,56,66,59,64,0,62,54],
[64,53,59,63,75,69,0,75],
[62,69,66,66,57,77,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,97,32,63,56,43,67,44],
[34,0,43,63,55,53,67,33],
[99,88,0,75,56,75,76,99],
[68,68,56,0,68,67,99,78],
[75,76,75,63,0,74,78,65],
[88,78,56,64,57,0,78,89],
[64,64,55,32,53,53,0,64],
[87,98,32,53,66,42,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,52,74,62,62,43,81],
[65,0,60,67,66,61,62,74],
[79,71,0,75,65,69,75,79],
[57,64,56,0,61,72,52,70],
[69,65,66,70,0,68,56,81],
[69,70,62,59,63,0,41,71],
[88,69,56,79,75,90,0,96],
[50,57,52,61,50,60,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,71,70,75,68,69],
[66,0,70,63,71,73,64,73],
[68,61,0,61,75,81,60,62],
[60,68,70,0,71,73,64,70],
[61,60,56,60,0,68,59,67],
[56,58,50,58,63,0,45,57],
[63,67,71,67,72,86,0,72],
[62,58,69,61,64,74,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,65,76,57,71,65],
[68,0,67,66,63,53,68,68],
[72,64,0,66,72,64,73,72],
[66,65,65,0,72,68,70,74],
[55,68,59,59,0,60,70,63],
[74,78,67,63,71,0,69,77],
[60,63,58,61,61,62,0,70],
[66,63,59,57,68,54,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,97,65,108,90,77,87],
[75,0,75,64,86,109,108,97],
[34,56,0,57,89,101,67,90],
[66,67,74,0,76,89,65,99],
[23,45,42,55,0,79,65,87],
[41,22,30,42,52,0,53,53],
[54,23,64,66,66,78,0,66],
[44,34,41,32,44,78,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,76,73,53,60,56,74],
[78,0,68,67,68,76,63,80],
[55,63,0,71,69,42,43,67],
[58,64,60,0,58,34,60,58],
[78,63,62,73,0,67,65,81],
[71,55,89,97,64,0,68,93],
[75,68,88,71,66,63,0,71],
[57,51,64,73,50,38,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,59,70,74,72,70,77],
[66,0,54,63,70,76,58,69],
[72,77,0,76,84,74,60,71],
[61,68,55,0,72,63,56,65],
[57,61,47,59,0,61,63,65],
[59,55,57,68,70,0,54,71],
[61,73,71,75,68,77,0,61],
[54,62,60,66,66,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,61,70,72,64,68,73],
[57,0,57,65,64,63,63,63],
[70,74,0,78,67,65,67,68],
[61,66,53,0,63,59,58,58],
[59,67,64,68,0,64,63,64],
[67,68,66,72,67,0,59,63],
[63,68,64,73,68,72,0,69],
[58,68,63,73,67,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,62,64,72,73,61,68],
[55,0,70,67,65,60,64,70],
[69,61,0,51,59,65,63,71],
[67,64,80,0,79,78,71,78],
[59,66,72,52,0,64,63,75],
[58,71,66,53,67,0,65,72],
[70,67,68,60,68,66,0,77],
[63,61,60,53,56,59,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,77,66,74,77,54,68],
[61,0,70,59,62,60,56,68],
[54,61,0,60,71,65,53,68],
[65,72,71,0,74,66,64,68],
[57,69,60,57,0,70,63,63],
[54,71,66,65,61,0,66,66],
[77,75,78,67,68,65,0,71],
[63,63,63,63,68,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,67,67,57,70,77],
[58,0,61,55,63,68,73,60],
[68,70,0,61,66,74,69,71],
[64,76,70,0,69,64,77,76],
[64,68,65,62,0,60,75,69],
[74,63,57,67,71,0,73,67],
[61,58,62,54,56,58,0,65],
[54,71,60,55,62,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,56,66,63,68,72],
[67,0,74,60,57,62,64,71],
[68,57,0,59,61,59,48,69],
[75,71,72,0,63,70,68,68],
[65,74,70,68,0,67,57,70],
[68,69,72,61,64,0,62,74],
[63,67,83,63,74,69,0,73],
[59,60,62,63,61,57,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,82,66,64,66,69],
[62,0,67,85,57,69,54,61],
[59,64,0,69,65,65,59,67],
[49,46,62,0,64,57,47,48],
[65,74,66,67,0,70,59,52],
[67,62,66,74,61,0,61,63],
[65,77,72,84,72,70,0,60],
[62,70,64,83,79,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,93,72,71,84,83,58],
[61,0,54,60,59,46,32,82],
[38,77,0,39,86,61,47,65],
[59,71,92,0,69,85,34,83],
[60,72,45,62,0,57,36,60],
[47,85,70,46,74,0,36,69],
[48,99,84,97,95,95,0,72],
[73,49,66,48,71,62,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,56,67,53,64,62,65],
[67,0,69,64,64,64,59,62],
[75,62,0,70,65,70,63,66],
[64,67,61,0,69,68,64,73],
[78,67,66,62,0,69,58,67],
[67,67,61,63,62,0,58,71],
[69,72,68,67,73,73,0,63],
[66,69,65,58,64,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,76,82,83,72,86,62],
[56,0,59,62,73,64,70,57],
[55,72,0,65,71,59,64,53],
[49,69,66,0,75,51,71,50],
[48,58,60,56,0,67,69,59],
[59,67,72,80,64,0,78,68],
[45,61,67,60,62,53,0,57],
[69,74,78,81,72,63,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,66,85,71,83,58],
[63,0,70,58,85,65,71,70],
[67,61,0,64,72,65,63,63],
[65,73,67,0,87,80,73,68],
[46,46,59,44,0,60,54,56],
[60,66,66,51,71,0,62,62],
[48,60,68,58,77,69,0,57],
[73,61,68,63,75,69,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,61,69,57,58,61],
[65,0,53,70,59,53,65,65],
[69,78,0,72,70,56,81,71],
[70,61,59,0,56,55,66,66],
[62,72,61,75,0,59,73,68],
[74,78,75,76,72,0,77,64],
[73,66,50,65,58,54,0,64],
[70,66,60,65,63,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,48,50,56,53,54,51],
[83,0,72,67,76,61,74,61],
[83,59,0,70,74,71,75,74],
[81,64,61,0,79,71,74,61],
[75,55,57,52,0,51,75,61],
[78,70,60,60,80,0,78,67],
[77,57,56,57,56,53,0,55],
[80,70,57,70,70,64,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,71,61,62,58,57],
[67,0,74,69,62,62,59,62],
[63,57,0,78,67,65,62,72],
[60,62,53,0,55,57,67,69],
[70,69,64,76,0,71,69,68],
[69,69,66,74,60,0,64,74],
[73,72,69,64,62,67,0,73],
[74,69,59,62,63,57,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,55,68,61,65,60,66],
[75,0,73,70,66,63,57,57],
[76,58,0,71,62,70,62,63],
[63,61,60,0,66,60,63,62],
[70,65,69,65,0,69,70,79],
[66,68,61,71,62,0,68,74],
[71,74,69,68,61,63,0,64],
[65,74,68,69,52,57,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,82,51,101,50,98,30],
[63,0,47,35,114,63,114,63],
[49,84,0,67,100,66,84,49],
[80,96,64,0,96,80,114,80],
[30,17,31,35,0,16,49,30],
[81,68,65,51,115,0,98,48],
[33,17,47,17,82,33,0,32],
[101,68,82,51,101,83,99,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,71,67,66,68,59],
[61,0,64,63,68,61,61,61],
[64,67,0,61,77,66,69,60],
[60,68,70,0,62,61,66,54],
[64,63,54,69,0,61,60,59],
[65,70,65,70,70,0,71,62],
[63,70,62,65,71,60,0,66],
[72,70,71,77,72,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,69,57,69,76,68],
[73,0,72,66,70,65,86,73],
[66,59,0,59,39,61,66,65],
[62,65,72,0,68,59,77,68],
[74,61,92,63,0,65,83,61],
[62,66,70,72,66,0,81,72],
[55,45,65,54,48,50,0,60],
[63,58,66,63,70,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,75,63,66,70,63,61],
[57,0,72,75,73,74,58,65],
[56,59,0,56,50,64,57,66],
[68,56,75,0,60,77,61,71],
[65,58,81,71,0,69,71,58],
[61,57,67,54,62,0,65,59],
[68,73,74,70,60,66,0,73],
[70,66,65,60,73,72,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,74,83,65,71,59],
[62,0,76,61,79,67,62,60],
[63,55,0,53,60,55,55,53],
[57,70,78,0,81,66,61,67],
[48,52,71,50,0,62,52,56],
[66,64,76,65,69,0,70,63],
[60,69,76,70,79,61,0,58],
[72,71,78,64,75,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,61,68,74,74,75],
[67,0,67,57,66,64,72,62],
[65,64,0,67,70,64,68,70],
[70,74,64,0,70,65,67,72],
[63,65,61,61,0,73,65,66],
[57,67,67,66,58,0,60,63],
[57,59,63,64,66,71,0,63],
[56,69,61,59,65,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,60,57,54,64,63,59],
[75,0,67,70,65,66,84,74],
[71,64,0,60,64,63,76,74],
[74,61,71,0,67,60,79,72],
[77,66,67,64,0,61,79,67],
[67,65,68,71,70,0,80,69],
[68,47,55,52,52,51,0,52],
[72,57,57,59,64,62,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,76,68,71,66,81],
[69,0,62,64,71,71,56,76],
[57,69,0,66,59,64,64,62],
[55,67,65,0,65,71,63,68],
[63,60,72,66,0,67,63,69],
[60,60,67,60,64,0,67,60],
[65,75,67,68,68,64,0,58],
[50,55,69,63,62,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,68,69,63,60,58],
[72,0,57,55,65,50,69,61],
[64,74,0,62,66,85,56,64],
[63,76,69,0,62,66,64,82],
[62,66,65,69,0,67,73,70],
[68,81,46,65,64,0,64,65],
[71,62,75,67,58,67,0,64],
[73,70,67,49,61,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,72,68,83,63,81,90],
[43,0,57,63,69,65,79,74],
[59,74,0,61,70,75,82,83],
[63,68,70,0,71,63,74,80],
[48,62,61,60,0,55,78,89],
[68,66,56,68,76,0,80,79],
[50,52,49,57,53,51,0,74],
[41,57,48,51,42,52,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,72,76,77,67,70],
[71,0,82,65,69,77,72,58],
[69,49,0,62,82,66,70,53],
[59,66,69,0,78,74,73,69],
[55,62,49,53,0,67,59,56],
[54,54,65,57,64,0,62,58],
[64,59,61,58,72,69,0,64],
[61,73,78,62,75,73,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,64,62,53,67,63],
[71,0,73,74,67,72,64,68],
[64,58,0,67,62,65,69,57],
[67,57,64,0,53,58,60,69],
[69,64,69,78,0,66,52,70],
[78,59,66,73,65,0,70,74],
[64,67,62,71,79,61,0,69],
[68,63,74,62,61,57,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,50,80,73,72,58,75],
[47,0,51,71,33,63,49,40],
[81,80,0,79,57,88,48,58],
[51,60,52,0,68,82,59,60],
[58,98,74,63,0,80,75,75],
[59,68,43,49,51,0,61,52],
[73,82,83,72,56,70,0,55],
[56,91,73,71,56,79,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,58,75,59,61,74],
[72,0,71,62,75,69,69,72],
[71,60,0,63,73,63,62,66],
[73,69,68,0,69,54,60,76],
[56,56,58,62,0,52,59,58],
[72,62,68,77,79,0,65,79],
[70,62,69,71,72,66,0,71],
[57,59,65,55,73,52,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,56,65,62,64,65,70],
[73,0,61,70,61,70,62,72],
[75,70,0,80,71,74,69,65],
[66,61,51,0,61,59,54,65],
[69,70,60,70,0,61,67,75],
[67,61,57,72,70,0,60,61],
[66,69,62,77,64,71,0,69],
[61,59,66,66,56,70,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,77,71,80,65,69,73],
[58,0,54,66,67,54,58,59],
[54,77,0,80,77,73,72,81],
[60,65,51,0,75,53,57,65],
[51,64,54,56,0,62,61,51],
[66,77,58,78,69,0,68,63],
[62,73,59,74,70,63,0,66],
[58,72,50,66,80,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,70,56,55,69,55,64],
[57,0,71,61,62,64,61,56],
[61,60,0,40,63,59,60,49],
[75,70,91,0,74,62,68,63],
[76,69,68,57,0,71,63,75],
[62,67,72,69,60,0,65,68],
[76,70,71,63,68,66,0,62],
[67,75,82,68,56,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,86,108,89,42,89,66],
[44,0,21,89,43,23,43,43],
[45,110,0,89,91,87,112,68],
[23,42,42,0,45,42,45,45],
[42,88,40,86,0,42,44,23],
[89,108,44,89,89,0,89,66],
[42,88,19,86,87,42,0,64],
[65,88,63,86,108,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,71,64,78,67,60],
[72,0,65,63,59,71,73,54],
[65,66,0,62,74,74,73,67],
[60,68,69,0,77,82,68,77],
[67,72,57,54,0,81,69,65],
[53,60,57,49,50,0,64,58],
[64,58,58,63,62,67,0,66],
[71,77,64,54,66,73,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,35,67,67,67,67,99],
[64,0,67,64,99,99,99,99],
[96,64,0,32,99,99,32,64],
[64,67,99,0,67,99,99,99],
[64,32,32,64,0,131,64,96],
[64,32,32,32,0,0,32,96],
[64,32,99,32,67,99,0,131],
[32,32,67,32,35,35,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,99,48,55,76,81,71],
[60,0,82,36,52,67,68,52],
[32,49,0,24,34,69,55,47],
[83,95,107,0,69,83,88,60],
[76,79,97,62,0,75,86,62],
[55,64,62,48,56,0,65,55],
[50,63,76,43,45,66,0,44],
[60,79,84,71,69,76,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,97,66,76,96,69,88,46],
[34,0,47,44,66,37,81,59],
[65,84,0,63,97,55,76,90],
[55,87,68,0,109,57,66,67],
[35,65,34,22,0,25,57,25],
[62,94,76,74,106,0,89,68],
[43,50,55,65,74,42,0,46],
[85,72,41,64,106,63,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,68,70,77,66,65],
[60,0,62,68,67,68,65,63],
[65,69,0,64,70,71,72,69],
[63,63,67,0,64,74,68,66],
[61,64,61,67,0,79,62,67],
[54,63,60,57,52,0,59,61],
[65,66,59,63,69,72,0,66],
[66,68,62,65,64,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,50,79,70,45,66],
[63,0,66,65,71,66,49,65],
[69,65,0,70,80,75,73,84],
[81,66,61,0,61,78,86,67],
[52,60,51,70,0,56,68,40],
[61,65,56,53,75,0,57,60],
[86,82,58,45,63,74,0,55],
[65,66,47,64,91,71,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,57,64,60,58,50,59],
[78,0,65,64,70,68,62,67],
[74,66,0,63,66,71,62,62],
[67,67,68,0,78,69,68,65],
[71,61,65,53,0,64,62,59],
[73,63,60,62,67,0,55,57],
[81,69,69,63,69,76,0,59],
[72,64,69,66,72,74,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,54,50,72,69,79,53],
[63,0,55,46,53,55,71,52],
[77,76,0,62,78,79,88,79],
[81,85,69,0,65,82,77,62],
[59,78,53,66,0,77,72,62],
[62,76,52,49,54,0,69,75],
[52,60,43,54,59,62,0,54],
[78,79,52,69,69,56,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,75,71,66,75,63,71],
[64,0,69,69,74,66,68,67],
[56,62,0,70,59,64,57,62],
[60,62,61,0,62,66,54,67],
[65,57,72,69,0,70,56,64],
[56,65,67,65,61,0,65,73],
[68,63,74,77,75,66,0,76],
[60,64,69,64,67,58,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,67,59,57,52,64],
[68,0,75,79,70,72,60,64],
[68,56,0,71,67,58,61,56],
[64,52,60,0,66,55,62,68],
[72,61,64,65,0,74,73,56],
[74,59,73,76,57,0,67,69],
[79,71,70,69,58,64,0,65],
[67,67,75,63,75,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,55,49,56,77,64,59],
[65,0,56,65,66,62,60,62],
[76,75,0,57,74,64,64,72],
[82,66,74,0,66,88,48,47],
[75,65,57,65,0,62,56,56],
[54,69,67,43,69,0,58,50],
[67,71,67,83,75,73,0,59],
[72,69,59,84,75,81,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,64,58,71,65,58,61],
[60,0,55,61,65,59,55,60],
[67,76,0,59,74,60,66,65],
[73,70,72,0,77,71,65,75],
[60,66,57,54,0,63,59,55],
[66,72,71,60,68,0,59,67],
[73,76,65,66,72,72,0,79],
[70,71,66,56,76,64,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,82,81,70,79,64,67],
[64,0,78,72,73,71,94,64],
[49,53,0,64,68,60,55,33],
[50,59,67,0,68,63,69,51],
[61,58,63,63,0,53,64,45],
[52,60,71,68,78,0,50,60],
[67,37,76,62,67,81,0,60],
[64,67,98,80,86,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,47,94,46,61,61,42],
[56,0,54,75,48,38,50,52],
[84,77,0,79,55,55,65,51],
[37,56,52,0,42,51,44,46],
[85,83,76,89,0,73,64,69],
[70,93,76,80,58,0,54,61],
[70,81,66,87,67,77,0,61],
[89,79,80,85,62,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,77,62,80,71,74,70],
[57,0,69,56,61,61,64,67],
[54,62,0,57,63,58,58,65],
[69,75,74,0,66,65,68,79],
[51,70,68,65,0,62,69,70],
[60,70,73,66,69,0,77,69],
[57,67,73,63,62,54,0,63],
[61,64,66,52,61,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,51,67,67,33,84],
[64,0,100,67,51,115,33,100],
[64,31,0,16,82,15,48,48],
[80,64,115,0,99,48,81,97],
[64,80,49,32,0,64,63,80],
[64,16,116,83,67,0,33,84],
[98,98,83,50,68,98,0,114],
[47,31,83,34,51,47,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,62,69,54,59,63,78],
[75,0,60,79,73,63,70,70],
[69,71,0,76,64,63,67,71],
[62,52,55,0,59,55,61,67],
[77,58,67,72,0,61,72,76],
[72,68,68,76,70,0,64,75],
[68,61,64,70,59,67,0,71],
[53,61,60,64,55,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,64,74,68,65,68],
[62,0,62,66,62,64,60,59],
[62,69,0,61,64,68,67,63],
[67,65,70,0,71,64,64,72],
[57,69,67,60,0,64,66,61],
[63,67,63,67,67,0,67,67],
[66,71,64,67,65,64,0,65],
[63,72,68,59,70,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,76,55,65,73,55,53],
[78,0,71,67,80,70,48,50],
[55,60,0,55,72,68,55,43],
[76,64,76,0,78,84,70,63],
[66,51,59,53,0,71,55,53],
[58,61,63,47,60,0,58,37],
[76,83,76,61,76,73,0,74],
[78,81,88,68,78,94,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,62,68,67,62,66],
[68,0,60,55,75,66,62,74],
[73,71,0,66,78,75,61,66],
[69,76,65,0,79,62,68,68],
[63,56,53,52,0,56,52,60],
[64,65,56,69,75,0,58,64],
[69,69,70,63,79,73,0,74],
[65,57,65,63,71,67,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,70,60,66,73,58,55],
[76,0,77,73,76,73,73,62],
[61,54,0,52,64,59,60,54],
[71,58,79,0,62,66,72,73],
[65,55,67,69,0,75,63,62],
[58,58,72,65,56,0,54,52],
[73,58,71,59,68,77,0,58],
[76,69,77,58,69,79,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,51,71,50,59,66],
[72,0,74,44,65,59,82,67],
[71,57,0,62,68,70,68,75],
[80,87,69,0,69,59,83,68],
[60,66,63,62,0,39,71,70],
[81,72,61,72,92,0,86,84],
[72,49,63,48,60,45,0,47],
[65,64,56,63,61,47,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,52,55,55,63,44],
[70,0,47,58,75,67,59,62],
[73,84,0,64,84,69,65,61],
[79,73,67,0,69,67,72,55],
[76,56,47,62,0,68,66,50],
[76,64,62,64,63,0,78,68],
[68,72,66,59,65,53,0,59],
[87,69,70,76,81,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,54,57,69,66,64,87],
[87,0,69,85,73,80,65,79],
[77,62,0,75,82,73,65,81],
[74,46,56,0,70,63,56,78],
[62,58,49,61,0,67,59,63],
[65,51,58,68,64,0,70,77],
[67,66,66,75,72,61,0,71],
[44,52,50,53,68,54,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,53,59,57,58,56],
[71,0,70,66,64,73,75,68],
[71,61,0,57,62,66,65,68],
[78,65,74,0,66,63,62,69],
[72,67,69,65,0,67,62,68],
[74,58,65,68,64,0,77,71],
[73,56,66,69,69,54,0,71],
[75,63,63,62,63,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,64,62,56,56,65,53],
[74,0,57,55,54,63,68,64],
[67,74,0,57,54,55,76,71],
[69,76,74,0,66,59,70,64],
[75,77,77,65,0,67,71,71],
[75,68,76,72,64,0,72,63],
[66,63,55,61,60,59,0,58],
[78,67,60,67,60,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,51,61,49,63,47,69],
[85,0,62,65,64,75,69,94],
[80,69,0,67,62,66,71,78],
[70,66,64,0,50,60,62,79],
[82,67,69,81,0,78,63,72],
[68,56,65,71,53,0,47,71],
[84,62,60,69,68,84,0,73],
[62,37,53,52,59,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,76,73,80,78,64,69],
[66,0,83,74,80,65,69,63],
[55,48,0,61,70,66,57,74],
[58,57,70,0,78,70,50,61],
[51,51,61,53,0,60,58,62],
[53,66,65,61,71,0,53,68],
[67,62,74,81,73,78,0,66],
[62,68,57,70,69,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,77,65,65,68,70,77],
[52,0,57,52,58,55,64,61],
[54,74,0,65,60,65,72,70],
[66,79,66,0,73,73,65,85],
[66,73,71,58,0,67,67,72],
[63,76,66,58,64,0,66,69],
[61,67,59,66,64,65,0,66],
[54,70,61,46,59,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,74,78,60,72,72,71],
[58,0,61,79,67,70,65,63],
[57,70,0,75,61,70,72,66],
[53,52,56,0,49,58,59,66],
[71,64,70,82,0,78,70,69],
[59,61,61,73,53,0,62,57],
[59,66,59,72,61,69,0,64],
[60,68,65,65,62,74,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,56,58,65,58,83,63],
[62,0,60,55,58,63,43,53],
[75,71,0,64,71,78,68,58],
[73,76,67,0,70,65,83,64],
[66,73,60,61,0,70,76,78],
[73,68,53,66,61,0,74,59],
[48,88,63,48,55,57,0,55],
[68,78,73,67,53,72,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,53,53,63,64,62,56],
[64,0,55,60,69,58,70,53],
[78,76,0,68,79,78,75,61],
[78,71,63,0,68,67,76,72],
[68,62,52,63,0,61,68,62],
[67,73,53,64,70,0,72,57],
[69,61,56,55,63,59,0,54],
[75,78,70,59,69,74,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,77,69,70,61,69,66],
[64,0,73,52,62,70,65,62],
[54,58,0,48,60,69,48,61],
[62,79,83,0,64,61,52,56],
[61,69,71,67,0,69,64,68],
[70,61,62,70,62,0,54,70],
[62,66,83,79,67,77,0,63],
[65,69,70,75,63,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,85,59,61,78,50,84],
[89,0,59,44,69,53,58,60],
[46,72,0,61,89,63,46,65],
[72,87,70,0,68,44,77,71],
[70,62,42,63,0,43,68,62],
[53,78,68,87,88,0,67,87],
[81,73,85,54,63,64,0,77],
[47,71,66,60,69,44,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,71,78,65,82,66,62],
[51,0,64,71,62,80,57,53],
[60,67,0,61,53,73,66,53],
[53,60,70,0,70,82,63,64],
[66,69,78,61,0,83,69,60],
[49,51,58,49,48,0,61,51],
[65,74,65,68,62,70,0,69],
[69,78,78,67,71,80,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,74,70,63,73,80,64],
[62,0,54,70,57,70,79,70],
[57,77,0,61,55,65,63,66],
[61,61,70,0,62,63,61,57],
[68,74,76,69,0,65,73,57],
[58,61,66,68,66,0,82,70],
[51,52,68,70,58,49,0,62],
[67,61,65,74,74,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,65,64,61,57,70],
[68,0,70,59,69,68,64,60],
[59,61,0,60,70,64,55,60],
[66,72,71,0,71,70,62,61],
[67,62,61,60,0,69,60,56],
[70,63,67,61,62,0,57,66],
[74,67,76,69,71,74,0,63],
[61,71,71,70,75,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,67,57,58,63,71],
[61,0,63,69,50,59,59,64],
[60,68,0,59,54,64,61,65],
[64,62,72,0,58,71,69,63],
[74,81,77,73,0,64,76,75],
[73,72,67,60,67,0,69,74],
[68,72,70,62,55,62,0,66],
[60,67,66,68,56,57,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,51,66,57,59,56,66],
[73,0,58,70,63,65,63,65],
[80,73,0,66,60,74,60,75],
[65,61,65,0,62,66,58,79],
[74,68,71,69,0,69,72,65],
[72,66,57,65,62,0,68,71],
[75,68,71,73,59,63,0,77],
[65,66,56,52,66,60,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,55,67,56,73,52,51],
[77,0,67,75,70,77,58,69],
[76,64,0,79,66,74,74,68],
[64,56,52,0,64,68,52,57],
[75,61,65,67,0,62,61,62],
[58,54,57,63,69,0,60,49],
[79,73,57,79,70,71,0,69],
[80,62,63,74,69,82,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,58,56,63,64,50,50],
[82,0,71,75,77,76,58,71],
[73,60,0,71,76,63,67,55],
[75,56,60,0,73,71,65,63],
[68,54,55,58,0,61,53,57],
[67,55,68,60,70,0,55,68],
[81,73,64,66,78,76,0,65],
[81,60,76,68,74,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,71,67,63,56,68],
[70,0,68,71,67,57,59,71],
[66,63,0,64,66,73,64,73],
[60,60,67,0,67,62,57,64],
[64,64,65,64,0,66,52,75],
[68,74,58,69,65,0,66,75],
[75,72,67,74,79,65,0,73],
[63,60,58,67,56,56,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,64,66,56,58,69],
[75,0,75,65,73,64,73,63],
[68,56,0,64,66,56,52,55],
[67,66,67,0,72,64,61,80],
[65,58,65,59,0,67,70,61],
[75,67,75,67,64,0,70,76],
[73,58,79,70,61,61,0,63],
[62,68,76,51,70,55,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,75,63,61,64,58],
[65,0,70,68,71,66,66,66],
[64,61,0,67,59,56,60,76],
[56,63,64,0,64,59,69,51],
[68,60,72,67,0,56,76,77],
[70,65,75,72,75,0,65,73],
[67,65,71,62,55,66,0,62],
[73,65,55,80,54,58,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,82,61,79,82,71,64],
[61,0,60,81,72,71,48,71],
[49,71,0,51,69,49,60,39],
[70,50,80,0,91,91,49,72],
[52,59,62,40,0,63,51,63],
[49,60,82,40,68,0,49,63],
[60,83,71,82,80,82,0,71],
[67,60,92,59,68,68,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,54,53,0,53,54],
[105,0,82,81,54,50,27,55],
[103,49,0,49,76,50,76,76],
[77,50,82,0,77,50,50,78],
[78,77,55,54,0,23,54,77],
[131,81,81,81,108,0,108,54],
[78,104,55,81,77,23,0,51],
[77,76,55,53,54,77,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,72,58,73,63,69,72],
[53,0,59,60,63,60,61,67],
[59,72,0,68,66,71,65,69],
[73,71,63,0,70,67,63,69],
[58,68,65,61,0,64,67,70],
[68,71,60,64,67,0,67,71],
[62,70,66,68,64,64,0,69],
[59,64,62,62,61,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,50,55,67,67,68],
[74,0,63,65,47,63,70,62],
[63,68,0,66,57,63,74,65],
[81,66,65,0,68,70,86,80],
[76,84,74,63,0,66,78,90],
[64,68,68,61,65,0,81,76],
[64,61,57,45,53,50,0,69],
[63,69,66,51,41,55,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,75,73,63,71,75],
[56,0,74,68,67,77,72,70],
[58,57,0,62,69,62,57,59],
[56,63,69,0,60,62,70,58],
[58,64,62,71,0,54,66,60],
[68,54,69,69,77,0,67,57],
[60,59,74,61,65,64,0,65],
[56,61,72,73,71,74,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,94,113,95,93,75,39,57],
[37,0,93,77,55,75,58,94],
[18,38,0,58,73,38,20,57],
[36,54,73,0,73,56,57,55],
[38,76,58,58,0,76,58,76],
[56,56,93,75,55,0,76,56],
[92,73,111,74,73,55,0,73],
[74,37,74,76,55,75,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,59,57,82,61,63,58],
[54,0,64,53,68,67,51,45],
[72,67,0,59,75,47,62,42],
[74,78,72,0,78,73,60,57],
[49,63,56,53,0,51,55,47],
[70,64,84,58,80,0,70,67],
[68,80,69,71,76,61,0,62],
[73,86,89,74,84,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,58,69,54,57,67,60],
[64,0,64,66,70,61,75,66],
[73,67,0,74,61,67,66,63],
[62,65,57,0,55,64,60,57],
[77,61,70,76,0,67,82,70],
[74,70,64,67,64,0,66,63],
[64,56,65,71,49,65,0,61],
[71,65,68,74,61,68,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,68,64,63,62,72],
[71,0,65,80,56,72,78,78],
[63,66,0,73,46,77,69,75],
[63,51,58,0,48,63,66,63],
[67,75,85,83,0,81,65,70],
[68,59,54,68,50,0,57,65],
[69,53,62,65,66,74,0,74],
[59,53,56,68,61,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,49,72,71,80,71,64],
[54,0,52,58,62,84,55,44],
[82,79,0,78,79,82,72,63],
[59,73,53,0,66,76,68,55],
[60,69,52,65,0,91,47,58],
[51,47,49,55,40,0,48,50],
[60,76,59,63,84,83,0,70],
[67,87,68,76,73,81,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,74,77,67,80,71,79],
[73,0,66,71,63,69,72,63],
[57,65,0,77,63,65,64,65],
[54,60,54,0,57,57,58,59],
[64,68,68,74,0,81,72,71],
[51,62,66,74,50,0,51,56],
[60,59,67,73,59,80,0,65],
[52,68,66,72,60,75,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,68,89,68,87,63],
[62,0,65,57,67,59,64,57],
[59,66,0,64,72,61,78,74],
[63,74,67,0,68,64,74,54],
[42,64,59,63,0,50,75,47],
[63,72,70,67,81,0,82,69],
[44,67,53,57,56,49,0,54],
[68,74,57,77,84,62,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,78,74,64,73,54],
[61,0,70,79,67,59,73,74],
[62,61,0,88,60,61,59,67],
[53,52,43,0,63,64,64,42],
[57,64,71,68,0,64,63,63],
[67,72,70,67,67,0,77,65],
[58,58,72,67,68,54,0,49],
[77,57,64,89,68,66,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,72,66,60,58,60],
[72,0,49,57,67,60,66,70],
[64,82,0,68,74,66,66,67],
[59,74,63,0,76,71,71,70],
[65,64,57,55,0,58,67,66],
[71,71,65,60,73,0,58,73],
[73,65,65,60,64,73,0,63],
[71,61,64,61,65,58,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,72,49,73,72,49],
[70,0,61,106,73,85,96,49],
[70,70,0,94,46,83,82,94],
[59,25,37,0,61,73,73,37],
[82,58,85,70,0,97,58,95],
[58,46,48,58,34,0,58,83],
[59,35,49,58,73,73,0,59],
[82,82,37,94,36,48,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,65,60,70,49,42],
[71,0,56,60,64,83,50,57],
[67,75,0,72,67,88,53,57],
[66,71,59,0,50,66,64,69],
[71,67,64,81,0,90,72,66],
[61,48,43,65,41,0,49,55],
[82,81,78,67,59,82,0,75],
[89,74,74,62,65,76,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,80,81,61,64,68,62],
[61,0,62,67,63,75,74,68],
[51,69,0,64,57,62,72,65],
[50,64,67,0,62,57,72,66],
[70,68,74,69,0,61,76,61],
[67,56,69,74,70,0,63,63],
[63,57,59,59,55,68,0,68],
[69,63,66,65,70,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,74,75,87,64,61,73],
[56,0,51,63,66,63,67,54],
[57,80,0,71,73,63,72,66],
[56,68,60,0,77,71,60,59],
[44,65,58,54,0,50,51,50],
[67,68,68,60,81,0,61,59],
[70,64,59,71,80,70,0,64],
[58,77,65,72,81,72,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,55,64,67,70,57],
[71,0,75,55,68,61,69,61],
[67,56,0,54,60,55,60,54],
[76,76,77,0,68,65,76,69],
[67,63,71,63,0,63,68,58],
[64,70,76,66,68,0,68,59],
[61,62,71,55,63,63,0,57],
[74,70,77,62,73,72,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,56,53,55,59,56,52],
[95,0,67,71,75,77,65,70],
[75,64,0,74,72,76,69,66],
[78,60,57,0,62,69,69,67],
[76,56,59,69,0,67,63,59],
[72,54,55,62,64,0,51,62],
[75,66,62,62,68,80,0,61],
[79,61,65,64,72,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,71,69,64,65,62,54],
[64,0,67,67,65,71,64,60],
[60,64,0,72,58,64,63,63],
[62,64,59,0,64,72,59,65],
[67,66,73,67,0,73,66,65],
[66,60,67,59,58,0,60,63],
[69,67,68,72,65,71,0,69],
[77,71,68,66,66,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,65,62,66,60,66,70],
[68,0,54,64,61,56,66,65],
[66,77,0,64,58,69,66,73],
[69,67,67,0,67,61,63,71],
[65,70,73,64,0,62,67,76],
[71,75,62,70,69,0,67,71],
[65,65,65,68,64,64,0,67],
[61,66,58,60,55,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,66,62,64,47,67,80],
[81,0,76,74,59,73,81,88],
[65,55,0,63,60,62,73,75],
[69,57,68,0,75,72,78,69],
[67,72,71,56,0,64,78,72],
[84,58,69,59,67,0,76,81],
[64,50,58,53,53,55,0,83],
[51,43,56,62,59,50,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,55,61,63,65,61,67],
[62,0,63,74,71,71,69,63],
[76,68,0,58,71,78,79,72],
[70,57,73,0,68,67,60,54],
[68,60,60,63,0,66,54,54],
[66,60,53,64,65,0,55,66],
[70,62,52,71,77,76,0,73],
[64,68,59,77,77,65,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,88,65,88,87,43],
[65,0,88,109,65,66,87,65],
[65,43,0,65,43,43,43,43],
[43,22,66,0,43,22,43,43],
[66,66,88,88,0,44,44,66],
[43,65,88,109,87,0,65,65],
[44,44,88,88,87,66,0,22],
[88,66,88,88,65,66,109,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,51,57,65,47,64,45],
[79,0,63,68,86,53,59,64],
[80,68,0,68,76,66,56,67],
[74,63,63,0,72,60,60,49],
[66,45,55,59,0,48,48,41],
[84,78,65,71,83,0,81,74],
[67,72,75,71,83,50,0,64],
[86,67,64,82,90,57,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,58,52,64,74,59,58],
[65,0,63,61,62,67,62,57],
[73,68,0,66,70,72,62,69],
[79,70,65,0,66,77,72,56],
[67,69,61,65,0,75,60,61],
[57,64,59,54,56,0,56,52],
[72,69,69,59,71,75,0,63],
[73,74,62,75,70,79,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,76,84,52,79,89,87],
[63,0,59,81,68,88,94,85],
[55,72,0,76,75,91,83,82],
[47,50,55,0,77,74,76,62],
[79,63,56,54,0,70,94,71],
[52,43,40,57,61,0,73,78],
[42,37,48,55,37,58,0,51],
[44,46,49,69,60,53,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,64,56,70,65,59],
[72,0,77,60,70,59,78,64],
[66,54,0,61,70,60,72,55],
[67,71,70,0,65,70,78,64],
[75,61,61,66,0,66,70,71],
[61,72,71,61,65,0,75,68],
[66,53,59,53,61,56,0,54],
[72,67,76,67,60,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,36,71,62,60,49],
[106,0,59,80,94,72,59,72],
[105,72,0,58,83,84,72,73],
[95,51,73,0,109,62,73,62],
[60,37,48,22,0,48,37,61],
[69,59,47,69,83,0,71,73],
[71,72,59,58,94,60,0,61],
[82,59,58,69,70,58,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,78,77,76,51,62,64],
[46,0,37,82,50,42,53,21],
[53,94,0,70,69,41,37,55],
[54,49,61,0,51,51,53,48],
[55,81,62,80,0,52,56,66],
[80,89,90,80,79,0,80,65],
[69,78,94,78,75,51,0,56],
[67,110,76,83,65,66,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,70,70,63,63,67],
[61,0,67,64,65,61,67,65],
[60,64,0,64,60,66,62,59],
[61,67,67,0,68,66,63,65],
[61,66,71,63,0,61,60,61],
[68,70,65,65,70,0,68,59],
[68,64,69,68,71,63,0,62],
[64,66,72,66,70,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,57,70,62,70,68,66],
[61,0,62,65,66,64,66,61],
[74,69,0,71,64,70,66,76],
[61,66,60,0,66,60,66,66],
[69,65,67,65,0,71,68,74],
[61,67,61,71,60,0,67,64],
[63,65,65,65,63,64,0,71],
[65,70,55,65,57,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,67,54,69,77,59],
[66,0,65,67,67,72,78,65],
[67,66,0,66,68,63,73,57],
[64,64,65,0,55,67,68,55],
[77,64,63,76,0,74,72,69],
[62,59,68,64,57,0,74,52],
[54,53,58,63,59,57,0,46],
[72,66,74,76,62,79,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,52,71,67,68,70,79],
[41,0,49,54,61,62,55,56],
[79,82,0,60,71,67,76,66],
[60,77,71,0,68,71,65,71],
[64,70,60,63,0,59,65,68],
[63,69,64,60,72,0,63,66],
[61,76,55,66,66,68,0,65],
[52,75,65,60,63,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,71,77,80,74,77],
[66,0,60,78,71,76,77,76],
[63,71,0,75,72,83,74,79],
[60,53,56,0,62,66,67,63],
[54,60,59,69,0,74,71,61],
[51,55,48,65,57,0,62,70],
[57,54,57,64,60,69,0,66],
[54,55,52,68,70,61,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,105,51,54,80,80,51,105],
[26,0,26,26,55,26,26,55],
[80,105,0,80,79,80,54,105],
[77,105,51,0,105,106,51,105],
[51,76,52,26,0,26,77,77],
[51,105,51,25,105,0,51,105],
[80,105,77,80,54,80,0,131],
[26,76,26,26,54,26,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,66,63,73,75,63,68],
[57,0,68,60,74,67,70,70],
[65,63,0,64,67,67,68,67],
[68,71,67,0,73,64,71,64],
[58,57,64,58,0,67,65,59],
[56,64,64,67,64,0,71,65],
[68,61,63,60,66,60,0,59],
[63,61,64,67,72,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,69,64,75,69,62],
[59,0,56,62,63,78,68,64],
[64,75,0,66,71,73,73,64],
[62,69,65,0,63,76,64,67],
[67,68,60,68,0,68,59,62],
[56,53,58,55,63,0,56,56],
[62,63,58,67,72,75,0,56],
[69,67,67,64,69,75,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,76,57,68,65,66,72],
[72,0,78,75,65,82,77,73],
[55,53,0,55,60,67,52,56],
[74,56,76,0,58,65,58,78],
[63,66,71,73,0,54,66,66],
[66,49,64,66,77,0,58,62],
[65,54,79,73,65,73,0,72],
[59,58,75,53,65,69,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,70,70,72,58,66,62],
[68,0,72,67,73,67,68,60],
[61,59,0,66,65,57,60,66],
[61,64,65,0,74,58,75,65],
[59,58,66,57,0,59,56,58],
[73,64,74,73,72,0,76,79],
[65,63,71,56,75,55,0,61],
[69,71,65,66,73,52,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,70,61,61,72,71],
[65,0,65,59,62,73,68,60],
[60,66,0,68,74,66,68,62],
[61,72,63,0,71,72,61,78],
[70,69,57,60,0,67,72,58],
[70,58,65,59,64,0,63,59],
[59,63,63,70,59,68,0,62],
[60,71,69,53,73,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,69,78,57,78,86],
[63,0,66,61,78,64,79,78],
[60,65,0,64,66,66,72,81],
[62,70,67,0,62,74,87,66],
[53,53,65,69,0,63,72,77],
[74,67,65,57,68,0,70,73],
[53,52,59,44,59,61,0,59],
[45,53,50,65,54,58,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,62,58,59,57,66],
[71,0,67,70,72,66,64,68],
[67,64,0,63,74,69,70,70],
[69,61,68,0,71,68,67,74],
[73,59,57,60,0,64,54,61],
[72,65,62,63,67,0,62,63],
[74,67,61,64,77,69,0,63],
[65,63,61,57,70,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,55,55,63,67,56],
[73,0,69,54,67,60,62,59],
[67,62,0,50,57,56,72,58],
[76,77,81,0,68,65,82,66],
[76,64,74,63,0,58,68,54],
[68,71,75,66,73,0,69,61],
[64,69,59,49,63,62,0,60],
[75,72,73,65,77,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,51,54,73,65,65,85],
[60,0,70,64,64,59,69,69],
[80,61,0,71,84,79,79,79],
[77,67,60,0,83,91,103,84],
[58,67,47,48,0,54,65,75],
[66,72,52,40,77,0,59,71],
[66,62,52,28,66,72,0,61],
[46,62,52,47,56,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,61,71,72,62,67,64],
[61,0,64,60,62,64,60,67],
[70,67,0,65,60,61,71,64],
[60,71,66,0,61,59,55,63],
[59,69,71,70,0,73,79,66],
[69,67,70,72,58,0,72,68],
[64,71,60,76,52,59,0,75],
[67,64,67,68,65,63,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,69,64,79,64,64],
[67,0,77,71,66,71,63,69],
[65,54,0,59,72,73,78,65],
[62,60,72,0,77,71,73,67],
[67,65,59,54,0,64,67,66],
[52,60,58,60,67,0,53,56],
[67,68,53,58,64,78,0,57],
[67,62,66,64,65,75,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,66,83,60,62,64,78],
[85,0,76,96,65,74,75,76],
[65,55,0,72,51,52,56,61],
[48,35,59,0,59,67,64,53],
[71,66,80,72,0,73,65,79],
[69,57,79,64,58,0,56,74],
[67,56,75,67,66,75,0,72],
[53,55,70,78,52,57,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,74,70,68,65,63],
[68,0,68,73,70,67,68,63],
[58,63,0,72,64,59,66,55],
[57,58,59,0,62,58,60,56],
[61,61,67,69,0,58,58,66],
[63,64,72,73,73,0,63,68],
[66,63,65,71,73,68,0,63],
[68,68,76,75,65,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,67,59,69,66,72,67],
[70,0,65,62,73,59,66,69],
[64,66,0,57,74,69,64,62],
[72,69,74,0,67,59,68,71],
[62,58,57,64,0,57,67,60],
[65,72,62,72,74,0,73,76],
[59,65,67,63,64,58,0,64],
[64,62,69,60,71,55,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,57,65,56,66,70,53],
[60,0,66,74,59,72,69,65],
[74,65,0,69,75,80,67,69],
[66,57,62,0,62,70,71,55],
[75,72,56,69,0,72,71,57],
[65,59,51,61,59,0,57,59],
[61,62,64,60,60,74,0,58],
[78,66,62,76,74,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,61,54,49,63,47],
[69,0,70,61,73,70,72,65],
[71,61,0,55,65,58,72,64],
[70,70,76,0,60,64,73,70],
[77,58,66,71,0,70,97,79],
[82,61,73,67,61,0,84,57],
[68,59,59,58,34,47,0,49],
[84,66,67,61,52,74,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,56,65,59,59,60,65],
[74,0,59,65,66,69,67,69],
[75,72,0,73,62,72,76,71],
[66,66,58,0,49,73,58,56],
[72,65,69,82,0,74,69,68],
[72,62,59,58,57,0,61,66],
[71,64,55,73,62,70,0,65],
[66,62,60,75,63,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,54,61,63,43,56,64],
[74,0,77,65,76,63,67,77],
[77,54,0,59,68,66,56,74],
[70,66,72,0,70,47,60,76],
[68,55,63,61,0,61,62,72],
[88,68,65,84,70,0,67,83],
[75,64,75,71,69,64,0,80],
[67,54,57,55,59,48,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,64,65,67,76,69],
[63,0,69,71,67,72,75,70],
[60,62,0,61,63,54,53,63],
[67,60,70,0,59,62,55,80],
[66,64,68,72,0,66,63,73],
[64,59,77,69,65,0,68,75],
[55,56,78,76,68,63,0,74],
[62,61,68,51,58,56,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,53,64,57,68,54],
[66,0,72,66,57,69,63,60],
[66,59,0,75,77,72,57,64],
[78,65,56,0,67,66,65,67],
[67,74,54,64,0,56,60,58],
[74,62,59,65,75,0,59,64],
[63,68,74,66,71,72,0,75],
[77,71,67,64,73,67,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,80,60,57,76,57,60],
[68,0,68,59,54,66,60,62],
[51,63,0,50,59,74,65,69],
[71,72,81,0,63,75,62,75],
[74,77,72,68,0,69,64,75],
[55,65,57,56,62,0,56,58],
[74,71,66,69,67,75,0,63],
[71,69,62,56,56,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,68,56,58,65,71],
[62,0,66,62,59,60,62,56],
[63,65,0,60,63,57,60,69],
[63,69,71,0,51,61,58,69],
[75,72,68,80,0,63,71,79],
[73,71,74,70,68,0,64,70],
[66,69,71,73,60,67,0,70],
[60,75,62,62,52,61,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,68,52,64,62,71],
[65,0,71,59,65,61,63,71],
[66,60,0,61,67,53,54,60],
[63,72,70,0,61,69,62,67],
[79,66,64,70,0,68,61,71],
[67,70,78,62,63,0,59,64],
[69,68,77,69,70,72,0,64],
[60,60,71,64,60,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,75,73,63,75,73],
[63,0,62,69,72,72,63,72],
[65,69,0,64,71,72,63,71],
[56,62,67,0,68,70,57,74],
[58,59,60,63,0,61,63,66],
[68,59,59,61,70,0,63,68],
[56,68,68,74,68,68,0,65],
[58,59,60,57,65,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,60,74,70,69,60,71],
[52,0,58,56,52,47,56,62],
[71,73,0,74,70,67,68,56],
[57,75,57,0,62,58,69,62],
[61,79,61,69,0,65,62,67],
[62,84,64,73,66,0,63,70],
[71,75,63,62,69,68,0,73],
[60,69,75,69,64,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,72,66,61,77,63],
[65,0,72,71,65,65,82,72],
[69,59,0,75,70,66,72,75],
[59,60,56,0,64,65,66,66],
[65,66,61,67,0,56,69,64],
[70,66,65,66,75,0,65,74],
[54,49,59,65,62,66,0,58],
[68,59,56,65,67,57,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,73,53,58,55,73,65],
[76,0,52,65,59,52,64,63],
[58,79,0,72,76,75,71,58],
[78,66,59,0,59,52,85,70],
[73,72,55,72,0,81,71,71],
[76,79,56,79,50,0,68,56],
[58,67,60,46,60,63,0,50],
[66,68,73,61,60,75,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,57,60,54,48,54],
[69,0,60,72,55,64,62,56],
[69,71,0,69,66,66,58,61],
[74,59,62,0,56,54,51,59],
[71,76,65,75,0,70,60,67],
[77,67,65,77,61,0,62,57],
[83,69,73,80,71,69,0,64],
[77,75,70,72,64,74,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,48,50,65,51,61,40],
[83,0,80,64,78,84,85,77],
[83,51,0,59,73,65,72,55],
[81,67,72,0,74,68,61,67],
[66,53,58,57,0,62,66,55],
[80,47,66,63,69,0,68,69],
[70,46,59,70,65,63,0,48],
[91,54,76,64,76,62,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,69,75,56,70,64],
[65,0,73,64,76,67,69,78],
[69,58,0,68,73,56,70,60],
[62,67,63,0,77,61,72,58],
[56,55,58,54,0,55,65,57],
[75,64,75,70,76,0,54,68],
[61,62,61,59,66,77,0,63],
[67,53,71,73,74,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,60,72,60,62,64],
[68,0,74,62,77,65,68,69],
[67,57,0,62,71,73,66,59],
[71,69,69,0,73,71,65,73],
[59,54,60,58,0,59,57,59],
[71,66,58,60,72,0,64,63],
[69,63,65,66,74,67,0,63],
[67,62,72,58,72,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,74,76,76,72,63,56],
[66,0,81,65,56,80,78,62],
[57,50,0,35,43,58,48,48],
[55,66,96,0,85,73,74,66],
[55,75,88,46,0,62,70,58],
[59,51,73,58,69,0,51,67],
[68,53,83,57,61,80,0,63],
[75,69,83,65,73,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,74,59,61,64,66,60],
[65,0,69,54,63,69,68,62],
[57,62,0,51,52,58,65,56],
[72,77,80,0,64,65,80,71],
[70,68,79,67,0,63,67,58],
[67,62,73,66,68,0,74,61],
[65,63,66,51,64,57,0,62],
[71,69,75,60,73,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,72,66,79,75,67],
[68,0,71,63,51,73,73,58],
[64,60,0,67,62,76,77,67],
[59,68,64,0,43,78,85,54],
[65,80,69,88,0,77,85,68],
[52,58,55,53,54,0,68,58],
[56,58,54,46,46,63,0,55],
[64,73,64,77,63,73,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,54,58,83,75,61,73],
[46,0,67,47,62,64,48,71],
[77,64,0,63,68,72,49,60],
[73,84,68,0,82,80,62,63],
[48,69,63,49,0,66,58,56],
[56,67,59,51,65,0,60,42],
[70,83,82,69,73,71,0,58],
[58,60,71,68,75,89,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,57,56,64,55,61,67],
[50,0,46,50,49,64,63,54],
[74,85,0,63,74,71,66,64],
[75,81,68,0,58,66,58,63],
[67,82,57,73,0,70,72,66],
[76,67,60,65,61,0,65,58],
[70,68,65,73,59,66,0,54],
[64,77,67,68,65,73,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,90,62,60,56,52,71],
[74,0,81,60,67,71,48,60],
[41,50,0,51,50,63,41,53],
[69,71,80,0,62,52,70,62],
[71,64,81,69,0,62,53,63],
[75,60,68,79,69,0,63,65],
[79,83,90,61,78,68,0,67],
[60,71,78,69,68,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,76,71,58,74,73],
[67,0,77,73,71,62,74,70],
[59,54,0,61,64,59,68,63],
[55,58,70,0,65,53,51,55],
[60,60,67,66,0,66,64,59],
[73,69,72,78,65,0,76,68],
[57,57,63,80,67,55,0,60],
[58,61,68,76,72,63,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,55,48,62,54,47,61],
[64,0,60,56,71,66,69,62],
[76,71,0,67,64,64,62,62],
[83,75,64,0,75,61,63,70],
[69,60,67,56,0,66,66,61],
[77,65,67,70,65,0,60,77],
[84,62,69,68,65,71,0,67],
[70,69,69,61,70,54,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,64,58,63,54,56,59],
[58,0,63,56,64,43,55,61],
[67,68,0,58,68,51,62,64],
[73,75,73,0,76,69,71,65],
[68,67,63,55,0,66,51,70],
[77,88,80,62,65,0,73,77],
[75,76,69,60,80,58,0,75],
[72,70,67,66,61,54,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,24,35,48,35,35,49],
[58,0,35,35,47,47,35,60],
[107,96,0,71,62,71,83,84],
[96,96,60,0,85,71,47,72],
[83,84,69,46,0,34,57,60],
[96,84,60,60,97,0,60,85],
[96,96,48,84,74,71,0,48],
[82,71,47,59,71,46,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,73,83,65,74,68,79],
[57,0,55,62,68,66,68,58],
[58,76,0,67,67,62,73,65],
[48,69,64,0,63,62,65,66],
[66,63,64,68,0,78,73,66],
[57,65,69,69,53,0,65,58],
[63,63,58,66,58,66,0,62],
[52,73,66,65,65,73,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,52,70,54,77,62,57],
[66,0,51,62,46,68,60,64],
[79,80,0,73,57,79,68,74],
[61,69,58,0,69,79,73,66],
[77,85,74,62,0,75,62,73],
[54,63,52,52,56,0,71,59],
[69,71,63,58,69,60,0,63],
[74,67,57,65,58,72,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,84,90,82,64,70,66],
[58,0,55,77,53,62,59,64],
[47,76,0,91,67,54,55,65],
[41,54,40,0,54,55,37,42],
[49,78,64,77,0,53,56,59],
[67,69,77,76,78,0,52,61],
[61,72,76,94,75,79,0,74],
[65,67,66,89,72,70,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,59,77,69,75,72],
[58,0,60,55,67,74,64,64],
[68,71,0,66,79,74,79,63],
[72,76,65,0,75,71,75,64],
[54,64,52,56,0,65,67,61],
[62,57,57,60,66,0,71,62],
[56,67,52,56,64,60,0,57],
[59,67,68,67,70,69,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,66,59,52,76,80,85],
[54,0,48,53,54,45,62,78],
[65,83,0,72,73,56,76,76],
[72,78,59,0,65,60,79,85],
[79,77,58,66,0,63,72,86],
[55,86,75,71,68,0,73,73],
[51,69,55,52,59,58,0,76],
[46,53,55,46,45,58,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,60,62,70,58,57],
[72,0,75,69,58,71,61,58],
[72,56,0,64,56,68,67,64],
[71,62,67,0,58,60,74,69],
[69,73,75,73,0,63,66,71],
[61,60,63,71,68,0,58,55],
[73,70,64,57,65,73,0,61],
[74,73,67,62,60,76,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,63,62,59,61,78],
[69,0,65,63,65,50,57,71],
[70,66,0,59,67,67,62,71],
[68,68,72,0,73,61,63,77],
[69,66,64,58,0,49,66,72],
[72,81,64,70,82,0,55,85],
[70,74,69,68,65,76,0,76],
[53,60,60,54,59,46,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,62,60,68,71,62],
[65,0,68,60,75,65,69,65],
[67,63,0,65,66,63,67,66],
[69,71,66,0,68,78,61,70],
[71,56,65,63,0,66,59,64],
[63,66,68,53,65,0,59,60],
[60,62,64,70,72,72,0,61],
[69,66,65,61,67,71,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,78,47,84,55,70,72],
[79,0,73,57,66,68,64,69],
[53,58,0,63,70,44,57,57],
[84,74,68,0,86,57,65,82],
[47,65,61,45,0,45,42,67],
[76,63,87,74,86,0,79,77],
[61,67,74,66,89,52,0,77],
[59,62,74,49,64,54,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,97,97,97,97,33,97],
[66,0,98,66,98,32,99,131],
[34,33,0,65,99,32,67,131],
[34,65,66,0,66,64,67,99],
[34,33,32,65,0,32,33,99],
[34,99,99,67,99,0,67,99],
[98,32,64,64,98,64,0,131],
[34,0,0,32,32,32,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,63,78,60,67,65],
[68,0,63,67,69,62,64,61],
[73,68,0,67,79,60,61,67],
[68,64,64,0,75,68,67,68],
[53,62,52,56,0,53,56,64],
[71,69,71,63,78,0,67,71],
[64,67,70,64,75,64,0,67],
[66,70,64,63,67,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,62,52,45,54,74,55],
[54,0,69,58,55,41,70,51],
[69,62,0,66,55,56,97,55],
[79,73,65,0,79,67,92,77],
[86,76,76,52,0,73,101,46],
[77,90,75,64,58,0,97,73],
[57,61,34,39,30,34,0,32],
[76,80,76,54,85,58,99,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,67,70,61,71,66],
[62,0,72,72,65,59,71,69],
[65,59,0,68,58,60,76,47],
[64,59,63,0,56,56,72,54],
[61,66,73,75,0,59,68,73],
[70,72,71,75,72,0,69,63],
[60,60,55,59,63,62,0,54],
[65,62,84,77,58,68,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,69,75,73,98,71,54],
[74,0,64,78,86,95,74,66],
[62,67,0,68,83,100,91,72],
[56,53,63,0,77,85,64,68],
[58,45,48,54,0,77,56,57],
[33,36,31,46,54,0,54,30],
[60,57,40,67,75,77,0,51],
[77,65,59,63,74,101,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,71,65,60,56,60,71],
[70,0,73,66,71,61,72,78],
[60,58,0,57,64,60,63,73],
[66,65,74,0,66,64,67,69],
[71,60,67,65,0,71,77,77],
[75,70,71,67,60,0,72,77],
[71,59,68,64,54,59,0,67],
[60,53,58,62,54,54,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,72,60,67,66,61,65],
[55,0,61,60,66,63,68,68],
[59,70,0,57,67,58,70,63],
[71,71,74,0,73,76,77,59],
[64,65,64,58,0,63,73,62],
[65,68,73,55,68,0,73,60],
[70,63,61,54,58,58,0,68],
[66,63,68,72,69,71,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,69,59,62,58,59,68],
[63,0,65,56,61,57,58,70],
[62,66,0,53,64,56,55,64],
[72,75,78,0,61,74,62,74],
[69,70,67,70,0,60,57,65],
[73,74,75,57,71,0,66,68],
[72,73,76,69,74,65,0,71],
[63,61,67,57,66,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,70,69,70,69,69,65],
[61,0,67,64,61,67,56,66],
[61,64,0,61,61,66,60,69],
[62,67,70,0,65,73,60,66],
[61,70,70,66,0,71,71,65],
[62,64,65,58,60,0,62,59],
[62,75,71,71,60,69,0,62],
[66,65,62,65,66,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,61,78,64,66,68],
[69,0,61,58,77,63,64,70],
[70,70,0,55,79,68,66,68],
[70,73,76,0,80,63,64,81],
[53,54,52,51,0,62,58,67],
[67,68,63,68,69,0,57,70],
[65,67,65,67,73,74,0,77],
[63,61,63,50,64,61,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,77,72,67,65,67,64],
[63,0,79,69,64,73,75,61],
[54,52,0,71,57,57,67,55],
[59,62,60,0,60,56,70,54],
[64,67,74,71,0,61,68,66],
[66,58,74,75,70,0,70,56],
[64,56,64,61,63,61,0,58],
[67,70,76,77,65,75,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,69,62,56,57,55],
[71,0,65,66,52,54,58,53],
[67,66,0,62,58,59,63,60],
[62,65,69,0,56,68,57,74],
[69,79,73,75,0,60,60,71],
[75,77,72,63,71,0,61,64],
[74,73,68,74,71,70,0,65],
[76,78,71,57,60,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,62,58,66,53,75],
[66,0,63,70,70,69,69,68],
[70,68,0,68,75,71,63,69],
[69,61,63,0,71,73,67,69],
[73,61,56,60,0,61,63,64],
[65,62,60,58,70,0,59,70],
[78,62,68,64,68,72,0,65],
[56,63,62,62,67,61,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,65,66,71,72,68],
[69,0,56,66,64,80,73,68],
[61,75,0,74,63,70,77,76],
[66,65,57,0,61,60,70,70],
[65,67,68,70,0,73,81,79],
[60,51,61,71,58,0,64,73],
[59,58,54,61,50,67,0,67],
[63,63,55,61,52,58,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,52,44,63,38,66,71],
[88,0,74,65,78,76,74,79],
[79,57,0,73,85,75,74,79],
[87,66,58,0,85,105,82,71],
[68,53,46,46,0,71,62,66],
[93,55,56,26,60,0,57,55],
[65,57,57,49,69,74,0,54],
[60,52,52,60,65,76,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,73,65,55,58,57,71],
[71,0,77,63,66,69,67,66],
[58,54,0,60,53,54,48,63],
[66,68,71,0,60,69,67,70],
[76,65,78,71,0,70,70,74],
[73,62,77,62,61,0,71,67],
[74,64,83,64,61,60,0,63],
[60,65,68,61,57,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,56,68,58,69,68,68],
[56,0,61,71,53,74,68,61],
[75,70,0,70,65,75,72,79],
[63,60,61,0,58,68,61,69],
[73,78,66,73,0,80,70,57],
[62,57,56,63,51,0,58,55],
[63,63,59,70,61,73,0,66],
[63,70,52,62,74,76,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,53,62,58,69,63],
[69,0,64,59,55,63,66,74],
[71,67,0,65,52,56,61,67],
[78,72,66,0,63,71,75,75],
[69,76,79,68,0,73,76,65],
[73,68,75,60,58,0,71,66],
[62,65,70,56,55,60,0,61],
[68,57,64,56,66,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,48,67,52,56,58,64],
[72,0,56,63,71,68,70,63],
[83,75,0,68,75,71,67,64],
[64,68,63,0,58,60,64,62],
[79,60,56,73,0,73,68,67],
[75,63,60,71,58,0,65,61],
[73,61,64,67,63,66,0,66],
[67,68,67,69,64,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,60,65,57,63,62],
[66,0,71,69,71,65,74,66],
[65,60,0,70,62,66,66,72],
[71,62,61,0,60,60,68,59],
[66,60,69,71,0,67,73,69],
[74,66,65,71,64,0,64,66],
[68,57,65,63,58,67,0,66],
[69,65,59,72,62,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,19,30,29,81,50,50],
[49,0,31,50,39,80,52,51],
[112,100,0,69,61,100,70,72],
[101,81,62,0,62,101,62,83],
[102,92,70,69,0,90,61,72],
[50,51,31,30,41,0,29,39],
[81,79,61,69,70,102,0,92],
[81,80,59,48,59,92,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,62,67,60,70,56],
[67,0,62,54,58,53,71,58],
[65,69,0,61,58,67,75,50],
[69,77,70,0,67,60,82,53],
[64,73,73,64,0,60,76,61],
[71,78,64,71,71,0,79,75],
[61,60,56,49,55,52,0,51],
[75,73,81,78,70,56,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,60,67,67,67,63],
[64,0,64,68,65,69,69,61],
[71,67,0,63,64,69,76,66],
[71,63,68,0,70,79,73,71],
[64,66,67,61,0,66,68,61],
[64,62,62,52,65,0,67,65],
[64,62,55,58,63,64,0,59],
[68,70,65,60,70,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,70,71,76,65,79,60],
[58,0,62,51,72,64,77,73],
[61,69,0,61,80,71,59,64],
[60,80,70,0,81,71,80,68],
[55,59,51,50,0,55,58,58],
[66,67,60,60,76,0,70,57],
[52,54,72,51,73,61,0,57],
[71,58,67,63,73,74,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,58,70,63,55,72],
[63,0,67,56,70,61,53,67],
[68,64,0,64,77,51,71,74],
[73,75,67,0,79,60,65,74],
[61,61,54,52,0,53,61,58],
[68,70,80,71,78,0,67,65],
[76,78,60,66,70,64,0,84],
[59,64,57,57,73,66,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,63,66,65,75,69],
[61,0,66,67,63,59,76,62],
[65,65,0,66,67,70,77,59],
[68,64,65,0,63,71,66,64],
[65,68,64,68,0,69,75,64],
[66,72,61,60,62,0,80,59],
[56,55,54,65,56,51,0,58],
[62,69,72,67,67,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,63,67,62,61,63],
[65,0,70,60,58,59,66,63],
[66,61,0,65,61,63,60,66],
[68,71,66,0,69,57,65,80],
[64,73,70,62,0,70,61,74],
[69,72,68,74,61,0,76,78],
[70,65,71,66,70,55,0,64],
[68,68,65,51,57,53,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,54,61,69,52,66,66],
[78,0,56,75,62,67,64,73],
[77,75,0,60,62,61,77,73],
[70,56,71,0,50,59,57,67],
[62,69,69,81,0,75,56,78],
[79,64,70,72,56,0,68,77],
[65,67,54,74,75,63,0,77],
[65,58,58,64,53,54,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,56,44,46,45,53,57],
[81,0,70,80,62,67,79,71],
[75,61,0,52,43,57,60,61],
[87,51,79,0,69,69,67,71],
[85,69,88,62,0,72,75,73],
[86,64,74,62,59,0,76,71],
[78,52,71,64,56,55,0,80],
[74,60,70,60,58,60,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,72,69,68,67,65,72],
[53,0,63,65,65,62,54,55],
[59,68,0,67,67,56,67,58],
[62,66,64,0,66,62,65,60],
[63,66,64,65,0,48,73,58],
[64,69,75,69,83,0,69,59],
[66,77,64,66,58,62,0,66],
[59,76,73,71,73,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,79,92,69,70,50,91],
[63,0,62,72,82,63,73,82],
[52,69,0,52,60,52,63,50],
[39,59,79,0,47,70,60,80],
[62,49,71,84,0,91,83,82],
[61,68,79,61,40,0,64,49],
[81,58,68,71,48,67,0,60],
[40,49,81,51,49,82,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,58,75,65,59,63,66],
[69,0,65,76,73,60,73,67],
[73,66,0,70,66,63,74,78],
[56,55,61,0,62,57,61,62],
[66,58,65,69,0,57,65,71],
[72,71,68,74,74,0,75,62],
[68,58,57,70,66,56,0,69],
[65,64,53,69,60,69,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,54,44,66,55,63,65],
[70,0,57,56,72,65,68,81],
[77,74,0,68,77,62,78,73],
[87,75,63,0,75,73,72,77],
[65,59,54,56,0,60,67,68],
[76,66,69,58,71,0,74,76],
[68,63,53,59,64,57,0,67],
[66,50,58,54,63,55,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,62,72,76,69,69,73],
[66,0,69,64,62,57,59,60],
[69,62,0,73,67,64,73,66],
[59,67,58,0,61,64,62,64],
[55,69,64,70,0,72,74,66],
[62,74,67,67,59,0,69,59],
[62,72,58,69,57,62,0,61],
[58,71,65,67,65,72,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,61,78,60,68,70],
[68,0,68,70,67,64,70,64],
[69,63,0,74,66,69,63,72],
[70,61,57,0,69,62,73,68],
[53,64,65,62,0,57,61,62],
[71,67,62,69,74,0,78,74],
[63,61,68,58,70,53,0,65],
[61,67,59,63,69,57,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,54,79,79,77,79,79],
[53,0,80,80,80,53,80,54],
[77,51,0,104,104,77,51,51],
[52,51,27,0,0,52,0,25],
[52,51,27,131,0,52,26,25],
[54,78,54,79,79,0,79,79],
[52,51,80,131,105,52,0,78],
[52,77,80,106,106,52,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,92,93,63,95,84,96,83],
[39,0,60,48,65,55,103,47],
[38,71,0,64,69,52,74,45],
[68,83,67,0,73,65,93,69],
[36,66,62,58,0,51,75,52],
[47,76,79,66,80,0,87,64],
[35,28,57,38,56,44,0,31],
[48,84,86,62,79,67,100,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,56,70,55,59,65],
[63,0,71,54,71,56,59,63],
[66,60,0,55,75,60,63,74],
[75,77,76,0,64,74,68,73],
[61,60,56,67,0,51,71,74],
[76,75,71,57,80,0,57,75],
[72,72,68,63,60,74,0,75],
[66,68,57,58,57,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,65,81,65,77,69,54],
[75,0,72,88,68,71,60,67],
[66,59,0,60,62,68,53,54],
[50,43,71,0,63,64,39,67],
[66,63,69,68,0,77,53,50],
[54,60,63,67,54,0,49,58],
[62,71,78,92,78,82,0,70],
[77,64,77,64,81,73,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,76,69,65,70,70],
[68,0,72,80,70,61,66,62],
[68,59,0,70,62,55,56,66],
[55,51,61,0,60,58,58,60],
[62,61,69,71,0,60,57,64],
[66,70,76,73,71,0,61,72],
[61,65,75,73,74,70,0,72],
[61,69,65,71,67,59,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,60,60,83,61,68],
[71,0,65,79,75,85,79,65],
[67,66,0,59,65,74,57,75],
[71,52,72,0,65,69,62,71],
[71,56,66,66,0,97,74,83],
[48,46,57,62,34,0,56,52],
[70,52,74,69,57,75,0,73],
[63,66,56,60,48,79,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,38,55,66,81,65],
[67,0,72,57,63,65,69,61],
[72,59,0,64,68,73,77,56],
[93,74,67,0,67,62,104,76],
[76,68,63,64,0,61,83,85],
[65,66,58,69,70,0,67,75],
[50,62,54,27,48,64,0,43],
[66,70,75,55,46,56,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,68,71,71,67,64,57],
[59,0,82,64,71,73,66,69],
[63,49,0,62,54,60,66,48],
[60,67,69,0,56,48,54,61],
[60,60,77,75,0,60,58,66],
[64,58,71,83,71,0,71,62],
[67,65,65,77,73,60,0,68],
[74,62,83,70,65,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,70,66,67,64,60,67],
[72,0,70,62,65,66,75,68],
[61,61,0,63,58,72,63,65],
[65,69,68,0,64,71,69,66],
[64,66,73,67,0,79,72,64],
[67,65,59,60,52,0,57,60],
[71,56,68,62,59,74,0,66],
[64,63,66,65,67,71,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,48,50,57,65,68],
[67,0,67,48,59,70,62,57],
[72,64,0,54,54,62,65,65],
[83,83,77,0,61,81,72,75],
[81,72,77,70,0,71,60,77],
[74,61,69,50,60,0,69,61],
[66,69,66,59,71,62,0,60],
[63,74,66,56,54,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,42,62,66,65,66,55],
[43,0,51,37,30,51,58,38],
[89,80,0,55,66,83,83,64],
[69,94,76,0,54,77,68,71],
[65,101,65,77,0,76,70,64],
[66,80,48,54,55,0,64,51],
[65,73,48,63,61,67,0,65],
[76,93,67,60,67,80,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,68,63,79,69,77],
[66,0,63,65,63,63,55,81],
[63,68,0,69,70,71,68,72],
[63,66,62,0,60,68,61,68],
[68,68,61,71,0,66,74,76],
[52,68,60,63,65,0,63,71],
[62,76,63,70,57,68,0,82],
[54,50,59,63,55,60,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,59,60,67,73,77,70],
[61,0,68,78,79,76,84,79],
[72,63,0,74,62,77,74,80],
[71,53,57,0,68,70,80,78],
[64,52,69,63,0,68,79,66],
[58,55,54,61,63,0,76,59],
[54,47,57,51,52,55,0,51],
[61,52,51,53,65,72,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,52,57,58,52,51,60],
[79,0,68,67,64,67,64,80],
[79,63,0,67,72,69,59,80],
[74,64,64,0,67,65,62,63],
[73,67,59,64,0,53,63,66],
[79,64,62,66,78,0,64,75],
[80,67,72,69,68,67,0,64],
[71,51,51,68,65,56,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,69,60,73,65,66,60],
[54,0,72,56,62,75,56,57],
[62,59,0,63,60,49,60,50],
[71,75,68,0,71,69,64,68],
[58,69,71,60,0,64,68,69],
[66,56,82,62,67,0,70,63],
[65,75,71,67,63,61,0,68],
[71,74,81,63,62,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,74,64,78,67,73,69],
[71,0,81,83,77,55,88,69],
[57,50,0,56,60,56,66,60],
[67,48,75,0,68,63,76,69],
[53,54,71,63,0,61,69,54],
[64,76,75,68,70,0,85,54],
[58,43,65,55,62,46,0,44],
[62,62,71,62,77,77,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,58,64,49,59,47],
[70,0,67,67,66,66,74,58],
[73,64,0,60,72,60,66,64],
[73,64,71,0,79,75,74,67],
[67,65,59,52,0,57,52,57],
[82,65,71,56,74,0,65,69],
[72,57,65,57,79,66,0,57],
[84,73,67,64,74,62,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,64,72,71,66,71],
[69,0,66,65,71,79,70,67],
[70,65,0,66,69,75,76,69],
[67,66,65,0,69,76,63,74],
[59,60,62,62,0,70,64,69],
[60,52,56,55,61,0,59,53],
[65,61,55,68,67,72,0,66],
[60,64,62,57,62,78,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,66,72,67,70,61],
[63,0,76,64,68,70,72,67],
[66,55,0,65,68,64,67,58],
[65,67,66,0,68,68,76,63],
[59,63,63,63,0,54,66,48],
[64,61,67,63,77,0,66,56],
[61,59,64,55,65,65,0,55],
[70,64,73,68,83,75,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,69,76,59,68,56],
[61,0,64,66,67,41,56,52],
[65,67,0,72,83,61,76,50],
[62,65,59,0,79,50,56,61],
[55,64,48,52,0,57,66,52],
[72,90,70,81,74,0,65,73],
[63,75,55,75,65,66,0,66],
[75,79,81,70,79,58,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,64,65,68,64,57],
[66,0,62,59,64,71,65,70],
[65,69,0,61,67,60,64,64],
[67,72,70,0,68,67,65,68],
[66,67,64,63,0,70,72,66],
[63,60,71,64,61,0,57,67],
[67,66,67,66,59,74,0,72],
[74,61,67,63,65,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,57,49,49,55,62,65],
[70,0,62,60,71,65,65,67],
[74,69,0,66,53,67,59,69],
[82,71,65,0,54,72,70,77],
[82,60,78,77,0,71,75,80],
[76,66,64,59,60,0,64,67],
[69,66,72,61,56,67,0,69],
[66,64,62,54,51,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,59,56,81,66,62],
[73,0,54,67,82,78,79,71],
[73,77,0,70,68,71,56,77],
[72,64,61,0,63,75,65,69],
[75,49,63,68,0,62,61,69],
[50,53,60,56,69,0,63,67],
[65,52,75,66,70,68,0,73],
[69,60,54,62,62,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,58,79,57,63,61],
[70,0,60,74,74,67,72,67],
[71,71,0,70,75,63,72,76],
[73,57,61,0,77,64,63,65],
[52,57,56,54,0,64,41,61],
[74,64,68,67,67,0,68,66],
[68,59,59,68,90,63,0,72],
[70,64,55,66,70,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,85,74,65,67,60,83],
[62,0,74,77,77,69,65,74],
[46,57,0,59,59,60,58,68],
[57,54,72,0,62,64,53,75],
[66,54,72,69,0,67,66,70],
[64,62,71,67,64,0,58,76],
[71,66,73,78,65,73,0,67],
[48,57,63,56,61,55,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,78,77,83,74,72,84],
[67,0,80,68,67,69,69,60],
[53,51,0,54,67,62,76,67],
[54,63,77,0,73,73,68,80],
[48,64,64,58,0,68,72,74],
[57,62,69,58,63,0,70,80],
[59,62,55,63,59,61,0,77],
[47,71,64,51,57,51,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,35,56,73,60,44,54],
[55,0,36,38,55,45,36,55],
[96,95,0,70,94,75,78,63],
[75,93,61,0,82,72,54,68],
[58,76,37,49,0,73,57,53],
[71,86,56,59,58,0,35,57],
[87,95,53,77,74,96,0,69],
[77,76,68,63,78,74,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,77,76,68,67,64,70],
[52,0,63,63,57,65,58,64],
[54,68,0,53,63,60,60,61],
[55,68,78,0,61,67,60,60],
[63,74,68,70,0,77,69,68],
[64,66,71,64,54,0,58,50],
[67,73,71,71,62,73,0,75],
[61,67,70,71,63,81,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,65,61,74,67,68],
[63,0,59,64,69,69,67,73],
[66,72,0,53,61,64,65,60],
[66,67,78,0,67,74,64,67],
[70,62,70,64,0,68,66,77],
[57,62,67,57,63,0,56,76],
[64,64,66,67,65,75,0,68],
[63,58,71,64,54,55,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,69,71,63,76,65,54],
[72,0,79,62,69,71,66,66],
[62,52,0,55,70,70,70,56],
[60,69,76,0,67,69,68,60],
[68,62,61,64,0,64,77,65],
[55,60,61,62,67,0,66,55],
[66,65,61,63,54,65,0,50],
[77,65,75,71,66,76,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,64,67,70,85,65,72],
[55,0,69,68,66,74,53,69],
[67,62,0,69,67,75,67,66],
[64,63,62,0,73,81,58,67],
[61,65,64,58,0,68,62,58],
[46,57,56,50,63,0,61,59],
[66,78,64,73,69,70,0,76],
[59,62,65,64,73,72,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,59,46,73,76,56,62],
[75,0,65,68,82,79,65,63],
[72,66,0,63,69,68,44,72],
[85,63,68,0,88,81,70,70],
[58,49,62,43,0,68,53,67],
[55,52,63,50,63,0,44,50],
[75,66,87,61,78,87,0,67],
[69,68,59,61,64,81,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,67,67,66,64,63,57],
[76,0,60,53,61,66,67,62],
[64,71,0,71,65,72,73,67],
[64,78,60,0,74,75,68,66],
[65,70,66,57,0,73,70,64],
[67,65,59,56,58,0,69,66],
[68,64,58,63,61,62,0,63],
[74,69,64,65,67,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,58,65,68,69,66,68],
[65,0,52,62,67,60,52,60],
[73,79,0,72,67,68,61,70],
[66,69,59,0,73,65,64,63],
[63,64,64,58,0,61,65,63],
[62,71,63,66,70,0,70,74],
[65,79,70,67,66,61,0,60],
[63,71,61,68,68,57,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,77,49,64,78,62,62],
[70,0,74,67,75,86,71,60],
[54,57,0,61,66,72,63,62],
[82,64,70,0,69,77,66,80],
[67,56,65,62,0,71,58,58],
[53,45,59,54,60,0,58,52],
[69,60,68,65,73,73,0,70],
[69,71,69,51,73,79,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,51,56,66,54,60,55],
[74,0,64,70,67,73,77,72],
[80,67,0,64,74,72,69,67],
[75,61,67,0,69,62,68,66],
[65,64,57,62,0,69,64,59],
[77,58,59,69,62,0,68,63],
[71,54,62,63,67,63,0,63],
[76,59,64,65,72,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,64,55,55,72,60],
[68,0,60,57,46,51,68,53],
[62,71,0,72,69,54,74,57],
[67,74,59,0,63,63,71,58],
[76,85,62,68,0,64,81,69],
[76,80,77,68,67,0,71,64],
[59,63,57,60,50,60,0,58],
[71,78,74,73,62,67,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,65,76,71,71,75,71],
[68,0,63,72,64,71,69,64],
[66,68,0,75,72,65,74,66],
[55,59,56,0,57,61,73,71],
[60,67,59,74,0,63,82,80],
[60,60,66,70,68,0,77,71],
[56,62,57,58,49,54,0,74],
[60,67,65,60,51,60,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,55,59,66,60,62,56],
[46,0,52,62,44,55,43,54],
[76,79,0,75,64,83,63,64],
[72,69,56,0,69,83,68,73],
[65,87,67,62,0,64,52,59],
[71,76,48,48,67,0,55,60],
[69,88,68,63,79,76,0,73],
[75,77,67,58,72,71,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,66,82,74,71,56],
[67,0,58,71,84,75,76,67],
[61,73,0,88,81,75,82,60],
[65,60,43,0,81,66,74,61],
[49,47,50,50,0,57,60,47],
[57,56,56,65,74,0,64,55],
[60,55,49,57,71,67,0,56],
[75,64,71,70,84,76,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,72,85,82,90,50,77],
[53,0,84,60,72,96,48,72],
[59,47,0,58,53,59,48,49],
[46,71,73,0,60,64,54,62],
[49,59,78,71,0,83,48,47],
[41,35,72,67,48,0,40,58],
[81,83,83,77,83,91,0,61],
[54,59,82,69,84,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,62,58,67,57,54],
[71,0,61,69,64,68,64,61],
[70,70,0,72,70,74,64,62],
[69,62,59,0,67,63,70,62],
[73,67,61,64,0,71,62,60],
[64,63,57,68,60,0,70,55],
[74,67,67,61,69,61,0,75],
[77,70,69,69,71,76,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,60,54,61,73,62,70],
[79,0,83,73,68,78,72,59],
[71,48,0,72,68,87,72,74],
[77,58,59,0,59,74,54,62],
[70,63,63,72,0,83,74,80],
[58,53,44,57,48,0,62,58],
[69,59,59,77,57,69,0,61],
[61,72,57,69,51,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,63,68,66,63,64],
[73,0,62,72,73,67,67,75],
[66,69,0,71,74,64,67,60],
[68,59,60,0,74,67,57,56],
[63,58,57,57,0,57,57,58],
[65,64,67,64,74,0,63,61],
[68,64,64,74,74,68,0,65],
[67,56,71,75,73,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,74,78,66,60,63,75],
[67,0,64,70,78,72,66,86],
[57,67,0,70,65,67,63,74],
[53,61,61,0,55,50,59,63],
[65,53,66,76,0,69,63,81],
[71,59,64,81,62,0,70,80],
[68,65,68,72,68,61,0,77],
[56,45,57,68,50,51,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,57,75,71,66,61,63],
[54,0,68,62,85,58,74,67],
[74,63,0,70,69,73,62,57],
[56,69,61,0,77,52,61,69],
[60,46,62,54,0,59,51,50],
[65,73,58,79,72,0,66,60],
[70,57,69,70,80,65,0,64],
[68,64,74,62,81,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,48,65,57,69,65,55],
[70,0,48,74,50,74,60,74],
[83,83,0,68,70,85,63,76],
[66,57,63,0,58,66,69,71],
[74,81,61,73,0,82,65,51],
[62,57,46,65,49,0,61,46],
[66,71,68,62,66,70,0,62],
[76,57,55,60,80,85,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,54,65,66,70,62,70],
[67,0,61,65,59,70,71,57],
[77,70,0,64,72,77,77,62],
[66,66,67,0,77,69,70,60],
[65,72,59,54,0,72,76,62],
[61,61,54,62,59,0,70,56],
[69,60,54,61,55,61,0,56],
[61,74,69,71,69,75,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,67,70,79,61,73],
[71,0,66,67,67,78,65,73],
[70,65,0,73,70,82,65,79],
[64,64,58,0,69,67,60,71],
[61,64,61,62,0,76,66,72],
[52,53,49,64,55,0,53,58],
[70,66,66,71,65,78,0,70],
[58,58,52,60,59,73,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,63,65,59,57,65],
[68,0,69,62,65,60,71,61],
[63,62,0,63,67,63,67,64],
[68,69,68,0,66,77,64,70],
[66,66,64,65,0,63,61,62],
[72,71,68,54,68,0,65,62],
[74,60,64,67,70,66,0,68],
[66,70,67,61,69,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,64,72,64,72,67],
[59,0,57,59,59,60,75,62],
[65,74,0,65,68,59,77,67],
[67,72,66,0,71,64,73,62],
[59,72,63,60,0,64,69,58],
[67,71,72,67,67,0,68,63],
[59,56,54,58,62,63,0,61],
[64,69,64,69,73,68,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,74,68,86,74,67,56],
[54,0,66,71,71,62,65,49],
[57,65,0,67,65,61,64,47],
[63,60,64,0,66,73,60,66],
[45,60,66,65,0,56,62,44],
[57,69,70,58,75,0,60,52],
[64,66,67,71,69,71,0,52],
[75,82,84,65,87,79,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,57,70,72,86,98,84],
[69,0,59,65,71,74,84,69],
[74,72,0,61,81,79,79,88],
[61,66,70,0,74,58,72,84],
[59,60,50,57,0,62,74,82],
[45,57,52,73,69,0,68,61],
[33,47,52,59,57,63,0,51],
[47,62,43,47,49,70,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,69,69,63,57,54,61],
[64,0,62,60,67,60,63,59],
[62,69,0,62,54,52,56,60],
[62,71,69,0,65,64,65,67],
[68,64,77,66,0,69,64,66],
[74,71,79,67,62,0,70,73],
[77,68,75,66,67,61,0,66],
[70,72,71,64,65,58,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,64,62,61,65,67,60],
[60,0,74,66,56,82,78,69],
[67,57,0,72,49,61,61,49],
[69,65,59,0,55,72,65,59],
[70,75,82,76,0,83,72,65],
[66,49,70,59,48,0,60,52],
[64,53,70,66,59,71,0,55],
[71,62,82,72,66,79,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,56,63,57,54,55,59],
[73,0,66,73,57,62,61,58],
[75,65,0,66,58,63,59,62],
[68,58,65,0,58,56,57,66],
[74,74,73,73,0,66,63,69],
[77,69,68,75,65,0,63,66],
[76,70,72,74,68,68,0,65],
[72,73,69,65,62,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,59,96,46,73,48,47],
[47,0,61,86,59,75,62,23],
[72,70,0,70,72,59,72,48],
[35,45,61,0,35,58,61,23],
[85,72,59,96,0,96,74,83],
[58,56,72,73,35,0,62,34],
[83,69,59,70,57,69,0,81],
[84,108,83,108,48,97,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,48,63,50,41,51,53],
[82,0,53,57,56,55,61,71],
[83,78,0,66,69,73,73,61],
[68,74,65,0,63,64,53,68],
[81,75,62,68,0,61,67,67],
[90,76,58,67,70,0,59,79],
[80,70,58,78,64,72,0,72],
[78,60,70,63,64,52,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,60,48,64,60,71],
[63,0,65,62,58,58,54,79],
[68,66,0,80,66,68,62,89],
[71,69,51,0,47,60,38,67],
[83,73,65,84,0,79,73,80],
[67,73,63,71,52,0,54,83],
[71,77,69,93,58,77,0,95],
[60,52,42,64,51,48,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,68,66,73,71,50],
[66,0,66,67,66,77,63,59],
[59,65,0,82,78,72,73,72],
[63,64,49,0,65,70,82,55],
[65,65,53,66,0,62,67,55],
[58,54,59,61,69,0,61,59],
[60,68,58,49,64,70,0,54],
[81,72,59,76,76,72,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,67,73,50,64,82],
[60,0,63,70,74,57,69,74],
[65,68,0,64,76,54,62,82],
[64,61,67,0,72,54,57,66],
[58,57,55,59,0,59,59,71],
[81,74,77,77,72,0,60,79],
[67,62,69,74,72,71,0,72],
[49,57,49,65,60,52,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,65,81,76,90,85,75],
[51,0,67,70,63,77,71,57],
[66,64,0,83,84,76,82,77],
[50,61,48,0,58,74,68,47],
[55,68,47,73,0,76,64,59],
[41,54,55,57,55,0,57,60],
[46,60,49,63,67,74,0,72],
[56,74,54,84,72,71,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,65,56,70,63,67],
[66,0,66,61,60,79,67,65],
[66,65,0,74,58,73,66,66],
[66,70,57,0,58,71,64,62],
[75,71,73,73,0,74,65,64],
[61,52,58,60,57,0,68,66],
[68,64,65,67,66,63,0,69],
[64,66,65,69,67,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,66,68,70,76,66],
[61,0,67,62,59,68,65,62],
[66,64,0,70,67,69,68,63],
[65,69,61,0,68,67,67,68],
[63,72,64,63,0,74,66,65],
[61,63,62,64,57,0,71,61],
[55,66,63,64,65,60,0,60],
[65,69,68,63,66,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,77,56,55,65,67,69],
[62,0,75,75,66,70,72,65],
[54,56,0,49,60,63,57,48],
[75,56,82,0,68,59,68,73],
[76,65,71,63,0,62,61,57],
[66,61,68,72,69,0,61,58],
[64,59,74,63,70,70,0,65],
[62,66,83,58,74,73,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,65,61,70,71,70,75],
[55,0,56,56,53,56,54,53],
[66,75,0,68,63,72,74,76],
[70,75,63,0,63,78,68,80],
[61,78,68,68,0,76,77,79],
[60,75,59,53,55,0,72,72],
[61,77,57,63,54,59,0,69],
[56,78,55,51,52,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,74,60,62,63,71],
[63,0,70,64,61,66,64,66],
[66,61,0,66,60,60,60,72],
[57,67,65,0,60,59,63,61],
[71,70,71,71,0,59,67,72],
[69,65,71,72,72,0,71,74],
[68,67,71,68,64,60,0,66],
[60,65,59,70,59,57,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,70,72,68,68,56],
[65,0,71,67,71,59,63,60],
[62,60,0,65,63,47,57,58],
[61,64,66,0,63,58,59,55],
[59,60,68,68,0,56,58,61],
[63,72,84,73,75,0,67,69],
[63,68,74,72,73,64,0,55],
[75,71,73,76,70,62,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,74,69,71,64,62,77],
[63,0,80,65,77,73,72,76],
[57,51,0,56,55,57,53,58],
[62,66,75,0,75,74,64,79],
[60,54,76,56,0,70,66,77],
[67,58,74,57,61,0,57,59],
[69,59,78,67,65,74,0,79],
[54,55,73,52,54,72,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,60,70,57,65,56,66],
[75,0,68,69,52,67,68,73],
[71,63,0,73,68,72,61,79],
[61,62,58,0,60,66,59,77],
[74,79,63,71,0,74,69,82],
[66,64,59,65,57,0,61,72],
[75,63,70,72,62,70,0,65],
[65,58,52,54,49,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,73,69,67,66,70],
[63,0,66,71,78,71,66,65],
[68,65,0,66,62,63,68,72],
[58,60,65,0,58,54,64,62],
[62,53,69,73,0,57,56,60],
[64,60,68,77,74,0,64,71],
[65,65,63,67,75,67,0,64],
[61,66,59,69,71,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,59,64,62,59,62,71],
[73,0,60,63,67,61,71,68],
[72,71,0,66,67,65,76,79],
[67,68,65,0,70,67,64,71],
[69,64,64,61,0,69,67,75],
[72,70,66,64,62,0,66,77],
[69,60,55,67,64,65,0,69],
[60,63,52,60,56,54,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,72,72,60,66,68],
[65,0,72,74,74,73,68,69],
[65,59,0,71,69,52,73,62],
[59,57,60,0,61,54,63,52],
[59,57,62,70,0,49,60,59],
[71,58,79,77,82,0,74,77],
[65,63,58,68,71,57,0,64],
[63,62,69,79,72,54,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,84,71,112,90,63],
[66,0,75,74,74,76,75,57],
[58,56,0,66,73,77,85,64],
[47,57,65,0,55,93,75,58],
[60,57,58,76,0,96,86,85],
[19,55,54,38,35,0,63,57],
[41,56,46,56,45,68,0,45],
[68,74,67,73,46,74,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,66,66,94,78,58,70],
[81,0,59,71,76,71,64,70],
[65,72,0,72,85,74,65,69],
[65,60,59,0,69,72,59,61],
[37,55,46,62,0,56,55,55],
[53,60,57,59,75,0,66,63],
[73,67,66,72,76,65,0,62],
[61,61,62,70,76,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,63,57,63,64,48],
[73,0,71,73,67,75,76,60],
[69,60,0,59,57,67,67,60],
[68,58,72,0,64,75,69,68],
[74,64,74,67,0,69,73,66],
[68,56,64,56,62,0,65,57],
[67,55,64,62,58,66,0,51],
[83,71,71,63,65,74,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,41,46,102,56,53,48],
[84,0,94,85,109,93,77,64],
[90,37,0,51,91,67,53,38],
[85,46,80,0,108,79,68,69],
[29,22,40,23,0,54,38,38],
[75,38,64,52,77,0,54,40],
[78,54,78,63,93,77,0,70],
[83,67,93,62,93,91,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,54,61,62,71,62],
[64,0,67,65,69,67,60,66],
[64,64,0,71,45,72,60,74],
[77,66,60,0,59,74,54,48],
[70,62,86,72,0,83,69,78],
[69,64,59,57,48,0,61,69],
[60,71,71,77,62,70,0,78],
[69,65,57,83,53,62,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,39,52,62,39,66,66],
[58,0,48,63,57,56,71,64],
[92,83,0,77,65,74,79,83],
[79,68,54,0,77,56,89,82],
[69,74,66,54,0,63,76,90],
[92,75,57,75,68,0,90,73],
[65,60,52,42,55,41,0,67],
[65,67,48,49,41,58,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,85,62,84,66,68,96],
[53,0,77,60,64,54,67,87],
[46,54,0,50,41,46,46,66],
[69,71,81,0,62,57,74,66],
[47,67,90,69,0,57,59,95],
[65,77,85,74,74,0,77,79],
[63,64,85,57,72,54,0,95],
[35,44,65,65,36,52,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,69,69,81,72,58],
[63,0,69,75,76,75,66,61],
[66,62,0,81,75,68,55,59],
[62,56,50,0,57,62,50,48],
[62,55,56,74,0,64,52,62],
[50,56,63,69,67,0,62,63],
[59,65,76,81,79,69,0,68],
[73,70,72,83,69,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,75,61,61,66,71,60],
[71,0,81,67,83,66,61,63],
[56,50,0,59,62,61,53,54],
[70,64,72,0,64,65,75,68],
[70,48,69,67,0,65,68,62],
[65,65,70,66,66,0,66,70],
[60,70,78,56,63,65,0,60],
[71,68,77,63,69,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,66,76,60,71,73],
[71,0,66,67,79,65,70,71],
[72,65,0,67,76,73,74,79],
[65,64,64,0,74,61,66,76],
[55,52,55,57,0,60,61,61],
[71,66,58,70,71,0,62,77],
[60,61,57,65,70,69,0,76],
[58,60,52,55,70,54,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,41,63,61,63,66,61],
[69,0,49,59,49,43,64,59],
[90,82,0,89,81,80,83,64],
[68,72,42,0,51,61,50,79],
[70,82,50,80,0,69,76,52],
[68,88,51,70,62,0,71,64],
[65,67,48,81,55,60,0,63],
[70,72,67,52,79,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,68,65,57,68,63],
[67,0,71,74,67,61,70,71],
[59,60,0,70,69,59,70,62],
[63,57,61,0,60,54,53,60],
[66,64,62,71,0,55,64,63],
[74,70,72,77,76,0,62,70],
[63,61,61,78,67,69,0,72],
[68,60,69,71,68,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,71,57,66,67,68,65],
[56,0,70,59,66,69,56,72],
[60,61,0,54,58,56,60,61],
[74,72,77,0,62,67,67,73],
[65,65,73,69,0,63,66,58],
[64,62,75,64,68,0,65,71],
[63,75,71,64,65,66,0,69],
[66,59,70,58,73,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,58,55,65,67,62,51],
[80,0,63,65,88,83,72,79],
[73,68,0,79,83,84,64,69],
[76,66,52,0,79,76,70,77],
[66,43,48,52,0,67,53,54],
[64,48,47,55,64,0,46,58],
[69,59,67,61,78,85,0,76],
[80,52,62,54,77,73,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,68,72,61,69,76,57],
[60,0,62,63,60,73,67,62],
[63,69,0,78,64,65,92,61],
[59,68,53,0,74,59,76,58],
[70,71,67,57,0,64,76,58],
[62,58,66,72,67,0,74,66],
[55,64,39,55,55,57,0,58],
[74,69,70,73,73,65,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,69,63,82,63,76],
[66,0,61,68,67,80,58,69],
[58,70,0,62,74,78,60,60],
[62,63,69,0,75,77,70,69],
[68,64,57,56,0,80,69,61],
[49,51,53,54,51,0,56,63],
[68,73,71,61,62,75,0,78],
[55,62,71,62,70,68,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,56,59,75,64,54,70],
[73,0,63,58,79,59,62,72],
[75,68,0,66,83,74,59,70],
[72,73,65,0,78,70,65,72],
[56,52,48,53,0,55,50,57],
[67,72,57,61,76,0,68,70],
[77,69,72,66,81,63,0,73],
[61,59,61,59,74,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,70,69,71,69,70,64],
[73,0,73,70,87,58,83,77],
[61,58,0,61,72,65,56,70],
[62,61,70,0,75,75,67,72],
[60,44,59,56,0,61,63,59],
[62,73,66,56,70,0,65,61],
[61,48,75,64,68,66,0,64],
[67,54,61,59,72,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,72,66,75,81,74,64],
[54,0,56,52,58,58,60,52],
[59,75,0,65,67,68,65,71],
[65,79,66,0,71,73,66,63],
[56,73,64,60,0,66,69,60],
[50,73,63,58,65,0,62,63],
[57,71,66,65,62,69,0,60],
[67,79,60,68,71,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,75,73,57,73,72],
[68,0,71,55,70,71,73,71],
[64,60,0,58,70,69,50,62],
[56,76,73,0,73,69,64,67],
[58,61,61,58,0,63,76,58],
[74,60,62,62,68,0,69,53],
[58,58,81,67,55,62,0,55],
[59,60,69,64,73,78,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,79,51,77,51,51,79],
[106,0,80,79,103,52,79,54],
[52,51,0,51,77,77,51,54],
[80,52,80,0,52,52,26,54],
[54,28,54,79,0,54,79,28],
[80,79,54,79,77,0,79,54],
[80,52,80,105,52,52,0,54],
[52,77,77,77,103,77,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,79,88,73,65,72],
[64,0,70,73,74,77,68,78],
[61,61,0,55,81,62,56,64],
[52,58,76,0,57,76,60,66],
[43,57,50,74,0,66,58,72],
[58,54,69,55,65,0,61,62],
[66,63,75,71,73,70,0,70],
[59,53,67,65,59,69,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,57,64,59,64,61,75],
[70,0,67,58,62,68,67,70],
[74,64,0,74,67,69,61,79],
[67,73,57,0,68,74,63,75],
[72,69,64,63,0,72,63,71],
[67,63,62,57,59,0,52,66],
[70,64,70,68,68,79,0,77],
[56,61,52,56,60,65,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,69,55,52,71,68],
[60,0,71,69,70,67,78,58],
[66,60,0,67,58,62,67,58],
[62,62,64,0,55,62,73,51],
[76,61,73,76,0,69,80,72],
[79,64,69,69,62,0,68,67],
[60,53,64,58,51,63,0,54],
[63,73,73,80,59,64,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,64,63,62,62,71],
[70,0,65,66,68,77,56,69],
[70,66,0,73,66,75,63,67],
[67,65,58,0,70,58,53,66],
[68,63,65,61,0,74,56,63],
[69,54,56,73,57,0,51,73],
[69,75,68,78,75,80,0,65],
[60,62,64,65,68,58,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,67,75,70,59,52,60],
[74,0,74,75,83,72,61,71],
[64,57,0,78,71,62,61,69],
[56,56,53,0,64,69,64,54],
[61,48,60,67,0,61,56,58],
[72,59,69,62,70,0,68,61],
[79,70,70,67,75,63,0,57],
[71,60,62,77,73,70,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,49,68,53,44,56,37],
[64,0,61,64,67,75,50,54],
[82,70,0,71,56,71,53,50],
[63,67,60,0,63,56,48,70],
[78,64,75,68,0,52,69,83],
[87,56,60,75,79,0,55,52],
[75,81,78,83,62,76,0,75],
[94,77,81,61,48,79,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,68,64,67,57,54,62],
[77,0,67,73,64,56,57,63],
[63,64,0,74,76,62,57,65],
[67,58,57,0,71,52,70,72],
[64,67,55,60,0,50,41,54],
[74,75,69,79,81,0,49,86],
[77,74,74,61,90,82,0,86],
[69,68,66,59,77,45,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,72,64,48,65,74,52],
[71,0,80,77,58,67,75,60],
[59,51,0,59,63,69,64,52],
[67,54,72,0,50,64,61,57],
[83,73,68,81,0,65,84,78],
[66,64,62,67,66,0,69,67],
[57,56,67,70,47,62,0,65],
[79,71,79,74,53,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,62,66,75,71,64],
[67,0,67,53,81,66,82,64],
[66,64,0,44,59,66,60,66],
[69,78,87,0,71,78,77,64],
[65,50,72,60,0,71,63,68],
[56,65,65,53,60,0,71,79],
[60,49,71,54,68,60,0,70],
[67,67,65,67,63,52,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,71,62,62,67,58],
[72,0,58,65,69,68,77,60],
[66,73,0,70,70,65,62,68],
[60,66,61,0,68,64,76,57],
[69,62,61,63,0,57,66,59],
[69,63,66,67,74,0,74,63],
[64,54,69,55,65,57,0,58],
[73,71,63,74,72,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,79,73,58,65,50,65],
[67,0,68,89,66,60,68,65],
[52,63,0,79,68,59,60,61],
[58,42,52,0,57,44,52,44],
[73,65,63,74,0,54,54,68],
[66,71,72,87,77,0,56,57],
[81,63,71,79,77,75,0,69],
[66,66,70,87,63,74,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,49,68,56,64,62,66],
[60,0,46,69,55,65,59,69],
[82,85,0,74,72,73,62,81],
[63,62,57,0,56,54,63,65],
[75,76,59,75,0,67,70,70],
[67,66,58,77,64,0,52,85],
[69,72,69,68,61,79,0,75],
[65,62,50,66,61,46,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,56,65,57,55,74],
[66,0,71,66,67,62,63,81],
[64,60,0,59,61,58,69,64],
[75,65,72,0,69,71,68,75],
[66,64,70,62,0,62,65,73],
[74,69,73,60,69,0,69,68],
[76,68,62,63,66,62,0,77],
[57,50,67,56,58,63,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,55,75,65,68,62],
[64,0,65,75,71,67,54,57],
[66,66,0,68,66,60,63,52],
[76,56,63,0,66,60,67,52],
[56,60,65,65,0,66,70,67],
[66,64,71,71,65,0,64,53],
[63,77,68,64,61,67,0,62],
[69,74,79,79,64,78,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,75,70,67,68,71,62],
[64,0,66,67,60,59,59,64],
[56,65,0,66,58,59,63,61],
[61,64,65,0,62,66,71,63],
[64,71,73,69,0,67,66,66],
[63,72,72,65,64,0,65,60],
[60,72,68,60,65,66,0,59],
[69,67,70,68,65,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,48,62,52,53,62,70],
[68,0,66,59,71,70,76,74],
[83,65,0,81,76,71,74,87],
[69,72,50,0,67,70,57,78],
[79,60,55,64,0,72,68,68],
[78,61,60,61,59,0,69,66],
[69,55,57,74,63,62,0,71],
[61,57,44,53,63,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,55,51,64,48,62,53],
[71,0,52,67,68,70,65,65],
[76,79,0,77,82,64,82,67],
[80,64,54,0,79,72,56,56],
[67,63,49,52,0,59,56,48],
[83,61,67,59,72,0,57,56],
[69,66,49,75,75,74,0,50],
[78,66,64,75,83,75,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,68,70,50,75,61,56],
[53,0,75,81,47,47,59,47],
[63,56,0,75,56,65,57,68],
[61,50,56,0,46,54,50,54],
[81,84,75,85,0,69,65,73],
[56,84,66,77,62,0,68,59],
[70,72,74,81,66,63,0,75],
[75,84,63,77,58,72,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,52,57,54,56,57,55],
[66,0,66,64,53,69,67,60],
[79,65,0,62,69,59,68,55],
[74,67,69,0,59,61,61,52],
[77,78,62,72,0,65,66,73],
[75,62,72,70,66,0,71,70],
[74,64,63,70,65,60,0,63],
[76,71,76,79,58,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,54,77,72,61,39,64],
[59,0,47,58,57,65,54,50],
[77,84,0,83,64,70,81,74],
[54,73,48,0,55,62,42,68],
[59,74,67,76,0,71,54,67],
[70,66,61,69,60,0,57,64],
[92,77,50,89,77,74,0,60],
[67,81,57,63,64,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,51,78,63,44,69,59],
[66,0,67,78,61,66,75,59],
[80,64,0,82,69,59,77,59],
[53,53,49,0,58,51,69,49],
[68,70,62,73,0,52,74,55],
[87,65,72,80,79,0,74,66],
[62,56,54,62,57,57,0,56],
[72,72,72,82,76,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,66,74,67,60,63,68],
[73,0,73,70,74,74,65,78],
[65,58,0,70,71,61,67,55],
[57,61,61,0,68,63,58,61],
[64,57,60,63,0,62,60,61],
[71,57,70,68,69,0,66,73],
[68,66,64,73,71,65,0,74],
[63,53,76,70,70,58,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,62,62,71,61,59,55],
[72,0,75,62,72,77,66,64],
[69,56,0,70,72,68,70,64],
[69,69,61,0,81,72,64,66],
[60,59,59,50,0,63,61,63],
[70,54,63,59,68,0,64,64],
[72,65,61,67,70,67,0,61],
[76,67,67,65,68,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,68,57,66,57,67],
[68,0,65,60,69,58,63,68],
[73,66,0,61,67,58,65,65],
[63,71,70,0,68,64,67,66],
[74,62,64,63,0,71,67,68],
[65,73,73,67,60,0,67,76],
[74,68,66,64,64,64,0,72],
[64,63,66,65,63,55,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,53,70,45,62,45,64],
[96,0,62,95,88,62,87,80],
[78,69,0,78,89,62,97,53],
[61,36,53,0,62,35,62,28],
[86,43,42,69,0,61,61,44],
[69,69,69,96,70,0,88,62],
[86,44,34,69,70,43,0,46],
[67,51,78,103,87,69,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,76,60,69,60,78,77],
[61,0,69,66,71,69,88,72],
[55,62,0,73,60,49,67,62],
[71,65,58,0,69,68,79,71],
[62,60,71,62,0,50,77,65],
[71,62,82,63,81,0,74,85],
[53,43,64,52,54,57,0,62],
[54,59,69,60,66,46,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,61,70,67,68,65],
[63,0,64,57,57,78,68,65],
[59,67,0,60,58,69,69,71],
[70,74,71,0,58,67,71,66],
[61,74,73,73,0,80,80,72],
[64,53,62,64,51,0,58,59],
[63,63,62,60,51,73,0,67],
[66,66,60,65,59,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,81,73,74,74,66,69],
[70,0,71,65,65,64,59,71],
[50,60,0,56,58,69,55,73],
[58,66,75,0,60,72,64,74],
[57,66,73,71,0,70,58,62],
[57,67,62,59,61,0,54,67],
[65,72,76,67,73,77,0,73],
[62,60,58,57,69,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,59,48,73,69,65,62],
[74,0,67,51,84,61,84,61],
[72,64,0,88,88,79,77,65],
[83,80,43,0,95,79,85,70],
[58,47,43,36,0,68,70,55],
[62,70,52,52,63,0,77,67],
[66,47,54,46,61,54,0,50],
[69,70,66,61,76,64,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,57,61,66,71,63],
[70,0,74,60,62,63,73,67],
[66,57,0,52,63,58,69,58],
[74,71,79,0,59,78,68,72],
[70,69,68,72,0,58,75,84],
[65,68,73,53,73,0,76,74],
[60,58,62,63,56,55,0,70],
[68,64,73,59,47,57,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,49,82,82,115,98,97],
[66,0,49,65,65,98,65,65],
[82,82,0,65,49,82,65,65],
[49,66,66,0,49,82,82,66],
[49,66,82,82,0,82,65,98],
[16,33,49,49,49,0,64,65],
[33,66,66,49,66,67,0,66],
[34,66,66,65,33,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,71,83,73,81,91,61],
[80,0,72,81,92,82,101,60],
[60,59,0,70,91,71,100,79],
[48,50,61,0,90,61,100,69],
[58,39,40,41,0,49,81,50],
[50,49,60,70,82,0,81,50],
[40,30,31,31,50,50,0,49],
[70,71,52,62,81,81,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,57,40,42,60,62,47],
[69,0,76,77,63,87,41,75],
[74,55,0,53,74,52,60,46],
[91,54,78,0,64,78,67,55],
[89,68,57,67,0,77,46,55],
[71,44,79,53,54,0,63,61],
[69,90,71,64,85,68,0,56],
[84,56,85,76,76,70,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,77,73,63,69,72,69],
[59,0,73,81,75,80,57,70],
[54,58,0,66,71,76,53,69],
[58,50,65,0,72,73,53,68],
[68,56,60,59,0,65,54,63],
[62,51,55,58,66,0,45,66],
[59,74,78,78,77,86,0,97],
[62,61,62,63,68,65,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,77,63,60,73,69],
[61,0,54,66,64,61,60,62],
[62,77,0,80,74,75,74,71],
[54,65,51,0,50,51,59,67],
[68,67,57,81,0,67,63,75],
[71,70,56,80,64,0,59,74],
[58,71,57,72,68,72,0,73],
[62,69,60,64,56,57,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,69,73,74,74,71,64],
[48,0,62,53,54,51,61,55],
[62,69,0,61,52,59,60,57],
[58,78,70,0,69,61,76,66],
[57,77,79,62,0,60,72,67],
[57,80,72,70,71,0,72,58],
[60,70,71,55,59,59,0,56],
[67,76,74,65,64,73,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,80,67,69,74,78],
[67,0,64,72,62,55,63,76],
[67,67,0,74,61,67,62,65],
[51,59,57,0,51,53,50,61],
[64,69,70,80,0,64,75,71],
[62,76,64,78,67,0,70,73],
[57,68,69,81,56,61,0,68],
[53,55,66,70,60,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,66,67,54,53,53,67],
[78,0,52,77,78,90,50,38],
[65,79,0,65,65,91,52,39],
[64,54,66,0,67,66,53,40],
[77,53,66,64,0,77,50,26],
[78,41,40,65,54,0,51,41],
[78,81,79,78,81,80,0,40],
[64,93,92,91,105,90,91,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,51,57,53,60,58,63],
[63,0,58,67,54,61,60,58],
[80,73,0,64,75,67,65,77],
[74,64,67,0,68,66,71,66],
[78,77,56,63,0,59,54,68],
[71,70,64,65,72,0,65,64],
[73,71,66,60,77,66,0,71],
[68,73,54,65,63,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,80,74,66,58,80,77],
[64,0,56,69,63,71,74,66],
[51,75,0,70,50,64,81,68],
[57,62,61,0,43,64,82,81],
[65,68,81,88,0,48,88,80],
[73,60,67,67,83,0,68,86],
[51,57,50,49,43,63,0,73],
[54,65,63,50,51,45,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,71,71,59,63,61,54],
[64,0,56,53,46,63,56,51],
[60,75,0,61,58,53,71,57],
[60,78,70,0,56,65,56,57],
[72,85,73,75,0,69,68,54],
[68,68,78,66,62,0,71,68],
[70,75,60,75,63,60,0,57],
[77,80,74,74,77,63,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,61,45,63,62,67],
[64,0,65,52,46,58,64,53],
[68,66,0,57,48,69,62,66],
[70,79,74,0,63,70,71,63],
[86,85,83,68,0,71,65,73],
[68,73,62,61,60,0,63,70],
[69,67,69,60,66,68,0,77],
[64,78,65,68,58,61,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,44,55,59,63,64,61],
[66,0,50,67,60,49,70,66],
[87,81,0,66,66,60,73,69],
[76,64,65,0,71,52,66,59],
[72,71,65,60,0,58,68,61],
[68,82,71,79,73,0,75,63],
[67,61,58,65,63,56,0,71],
[70,65,62,72,70,68,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,53,48,64,50,79,48],
[72,0,70,50,71,59,79,66],
[78,61,0,57,60,54,66,70],
[83,81,74,0,65,63,89,64],
[67,60,71,66,0,51,80,57],
[81,72,77,68,80,0,71,62],
[52,52,65,42,51,60,0,49],
[83,65,61,67,74,69,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,69,72,68,67,73,65],
[59,0,73,71,65,67,72,71],
[62,58,0,78,59,70,65,69],
[59,60,53,0,54,66,72,67],
[63,66,72,77,0,79,76,71],
[64,64,61,65,52,0,66,70],
[58,59,66,59,55,65,0,62],
[66,60,62,64,60,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,67,45,60,60,51,63],
[75,0,63,61,71,84,77,68],
[64,68,0,55,73,75,61,70],
[86,70,76,0,74,64,79,72],
[71,60,58,57,0,64,64,75],
[71,47,56,67,67,0,62,65],
[80,54,70,52,67,69,0,71],
[68,63,61,59,56,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,76,69,53,65,57],
[65,0,51,70,65,46,67,55],
[69,80,0,75,61,63,62,64],
[55,61,56,0,58,45,50,54],
[62,66,70,73,0,60,65,69],
[78,85,68,86,71,0,76,65],
[66,64,69,81,66,55,0,65],
[74,76,67,77,62,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,70,68,69,68,70],
[66,0,66,72,69,66,65,73],
[63,65,0,65,63,63,62,66],
[61,59,66,0,71,65,72,61],
[63,62,68,60,0,67,63,73],
[62,65,68,66,64,0,68,70],
[63,66,69,59,68,63,0,72],
[61,58,65,70,58,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,58,61,78,59,67],
[68,0,69,63,68,73,73,61],
[60,62,0,50,59,62,63,56],
[73,68,81,0,73,62,76,69],
[70,63,72,58,0,73,73,60],
[53,58,69,69,58,0,64,70],
[72,58,68,55,58,67,0,63],
[64,70,75,62,71,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,66,62,66,54,63,70],
[53,0,58,59,65,61,64,54],
[65,73,0,54,71,59,62,62],
[69,72,77,0,75,65,77,77],
[65,66,60,56,0,69,56,66],
[77,70,72,66,62,0,72,61],
[68,67,69,54,75,59,0,67],
[61,77,69,54,65,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,68,69,64,78,62],
[56,0,59,56,65,59,62,61],
[58,72,0,65,67,70,81,67],
[63,75,66,0,67,68,86,70],
[62,66,64,64,0,70,77,54],
[67,72,61,63,61,0,69,67],
[53,69,50,45,54,62,0,51],
[69,70,64,61,77,64,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,68,58,73,80,52,56],
[55,0,62,55,46,60,61,59],
[63,69,0,62,65,70,56,50],
[73,76,69,0,61,70,74,59],
[58,85,66,70,0,76,64,59],
[51,71,61,61,55,0,48,42],
[79,70,75,57,67,83,0,71],
[75,72,81,72,72,89,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,61,47,41,48,45,45],
[79,0,83,57,76,77,62,68],
[70,48,0,37,60,66,51,53],
[84,74,94,0,56,75,69,68],
[90,55,71,75,0,97,62,72],
[83,54,65,56,34,0,46,62],
[86,69,80,62,69,85,0,57],
[86,63,78,63,59,69,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,17,49,83,49,33],
[66,0,68,67,51,84,51,51],
[64,63,0,32,48,66,64,48],
[114,64,99,0,81,116,66,65],
[82,80,83,50,0,99,50,66],
[48,47,65,15,32,0,31,15],
[82,80,67,65,81,100,0,49],
[98,80,83,66,65,116,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,73,66,72,66,66],
[64,0,70,65,62,74,66,71],
[66,61,0,66,63,70,65,72],
[58,66,65,0,65,60,69,76],
[65,69,68,66,0,62,63,75],
[59,57,61,71,69,0,58,61],
[65,65,66,62,68,73,0,69],
[65,60,59,55,56,70,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,73,64,74,75,77],
[65,0,53,48,55,64,63,62],
[69,78,0,69,55,71,74,74],
[58,83,62,0,63,77,69,65],
[67,76,76,68,0,65,76,78],
[57,67,60,54,66,0,48,69],
[56,68,57,62,55,83,0,70],
[54,69,57,66,53,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,70,70,65,69,70],
[63,0,70,68,74,65,58,69],
[61,61,0,63,68,68,64,68],
[61,63,68,0,72,66,64,68],
[61,57,63,59,0,61,55,63],
[66,66,63,65,70,0,64,67],
[62,73,67,67,76,67,0,71],
[61,62,63,63,68,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,72,67,75,74,64],
[62,0,75,73,69,80,59,65],
[63,56,0,59,68,64,58,70],
[59,58,72,0,58,69,78,70],
[64,62,63,73,0,78,70,66],
[56,51,67,62,53,0,55,60],
[57,72,73,53,61,76,0,67],
[67,66,61,61,65,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,74,64,68,58,60],
[68,0,56,69,67,74,59,67],
[69,75,0,67,69,76,62,62],
[57,62,64,0,62,66,63,74],
[67,64,62,69,0,74,61,78],
[63,57,55,65,57,0,62,78],
[73,72,69,68,70,69,0,63],
[71,64,69,57,53,53,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,61,76,78,76,64,71],
[59,0,61,70,81,66,58,64],
[70,70,0,81,74,77,48,61],
[55,61,50,0,74,65,66,50],
[53,50,57,57,0,61,50,47],
[55,65,54,66,70,0,54,62],
[67,73,83,65,81,77,0,66],
[60,67,70,81,84,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,64,75,58,48,59],
[67,0,64,67,56,54,60,52],
[68,67,0,50,61,66,59,70],
[67,64,81,0,75,59,69,55],
[56,75,70,56,0,51,58,45],
[73,77,65,72,80,0,84,63],
[83,71,72,62,73,47,0,58],
[72,79,61,76,86,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,62,66,64,69,61,67],
[59,0,59,51,64,62,65,64],
[69,72,0,59,73,66,66,70],
[65,80,72,0,68,84,72,73],
[67,67,58,63,0,65,66,63],
[62,69,65,47,66,0,73,58],
[70,66,65,59,65,58,0,71],
[64,67,61,58,68,73,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,69,69,70,69,64],
[56,0,65,60,61,61,62,65],
[58,66,0,58,57,60,63,59],
[62,71,73,0,58,68,63,72],
[62,70,74,73,0,61,60,64],
[61,70,71,63,70,0,61,67],
[62,69,68,68,71,70,0,72],
[67,66,72,59,67,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,58,65,75,65,74],
[66,0,70,63,52,72,69,71],
[63,61,0,58,58,66,72,61],
[73,68,73,0,65,76,73,75],
[66,79,73,66,0,67,69,60],
[56,59,65,55,64,0,73,72],
[66,62,59,58,62,58,0,60],
[57,60,70,56,71,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,50,75,79,57,72,65],
[74,0,51,68,62,52,54,65],
[81,80,0,84,73,70,61,84],
[56,63,47,0,60,57,49,63],
[52,69,58,71,0,64,62,78],
[74,79,61,74,67,0,68,79],
[59,77,70,82,69,63,0,72],
[66,66,47,68,53,52,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,71,63,68,65,67],
[65,0,58,72,68,72,71,73],
[66,73,0,71,60,64,69,70],
[60,59,60,0,59,66,70,55],
[68,63,71,72,0,70,65,77],
[63,59,67,65,61,0,62,61],
[66,60,62,61,66,69,0,67],
[64,58,61,76,54,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,71,60,71,68,81,87],
[51,0,37,48,47,59,46,51],
[60,94,0,47,46,57,33,72],
[71,83,84,0,60,95,84,97],
[60,84,85,71,0,106,81,72],
[63,72,74,36,25,0,60,74],
[50,85,98,47,50,71,0,73],
[44,80,59,34,59,57,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,61,60,70,65,68,61],
[74,0,66,65,62,72,74,64],
[70,65,0,62,70,60,67,66],
[71,66,69,0,67,69,69,65],
[61,69,61,64,0,65,70,70],
[66,59,71,62,66,0,74,71],
[63,57,64,62,61,57,0,63],
[70,67,65,66,61,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,71,62,67,69,70],
[61,0,58,70,63,53,62,64],
[63,73,0,72,66,63,61,66],
[60,61,59,0,60,64,66,73],
[69,68,65,71,0,67,67,69],
[64,78,68,67,64,0,66,69],
[62,69,70,65,64,65,0,74],
[61,67,65,58,62,62,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,74,65,73,70,85,72],
[64,0,75,71,79,73,83,71],
[57,56,0,50,61,59,60,50],
[66,60,81,0,75,74,75,71],
[58,52,70,56,0,58,60,62],
[61,58,72,57,73,0,79,57],
[46,48,71,56,71,52,0,60],
[59,60,81,60,69,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,64,56,61,60,74,74],
[54,0,50,49,53,47,62,60],
[67,81,0,62,64,63,71,76],
[75,82,69,0,64,69,78,77],
[70,78,67,67,0,62,73,74],
[71,84,68,62,69,0,74,71],
[57,69,60,53,58,57,0,69],
[57,71,55,54,57,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,60,63,58,79,71],
[69,0,62,66,66,61,72,74],
[70,69,0,59,71,62,72,74],
[71,65,72,0,69,73,75,84],
[68,65,60,62,0,71,73,72],
[73,70,69,58,60,0,76,70],
[52,59,59,56,58,55,0,74],
[60,57,57,47,59,61,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,78,59,74,61,68],
[67,0,57,72,50,75,66,60],
[67,74,0,75,67,68,52,55],
[53,59,56,0,65,65,63,44],
[72,81,64,66,0,72,66,65],
[57,56,63,66,59,0,58,66],
[70,65,79,68,65,73,0,74],
[63,71,76,87,66,65,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,63,62,63,73,77,59],
[84,0,69,64,82,84,74,72],
[68,62,0,82,61,69,74,69],
[69,67,49,0,71,75,66,65],
[68,49,70,60,0,63,70,70],
[58,47,62,56,68,0,55,69],
[54,57,57,65,61,76,0,75],
[72,59,62,66,61,62,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,57,65,66,64,71,73],
[61,0,54,66,70,61,72,68],
[74,77,0,70,73,59,84,74],
[66,65,61,0,57,66,74,69],
[65,61,58,74,0,63,71,63],
[67,70,72,65,68,0,65,74],
[60,59,47,57,60,66,0,65],
[58,63,57,62,68,57,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,66,67,48,16,50,47],
[99,0,82,83,65,50,50,48],
[65,49,0,49,82,50,16,64],
[64,48,82,0,65,65,50,64],
[83,66,49,66,0,83,49,47],
[115,81,81,66,48,0,66,47],
[81,81,115,81,82,65,0,81],
[84,83,67,67,84,84,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,75,61,76,63,67],
[65,0,65,80,70,79,71,74],
[66,66,0,69,60,74,72,74],
[56,51,62,0,53,66,53,63],
[70,61,71,78,0,66,65,72],
[55,52,57,65,65,0,66,65],
[68,60,59,78,66,65,0,64],
[64,57,57,68,59,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,70,70,73,65,70],
[60,0,76,63,66,72,69,59],
[61,55,0,61,51,66,60,64],
[61,68,70,0,58,65,60,66],
[61,65,80,73,0,70,67,70],
[58,59,65,66,61,0,68,59],
[66,62,71,71,64,63,0,64],
[61,72,67,65,61,72,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,56,66,59,56,60,74],
[69,0,57,60,62,57,65,66],
[75,74,0,74,61,60,61,68],
[65,71,57,0,60,62,51,75],
[72,69,70,71,0,60,66,72],
[75,74,71,69,71,0,64,76],
[71,66,70,80,65,67,0,78],
[57,65,63,56,59,55,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,69,67,73,45,69,44],
[72,0,60,35,82,47,58,69],
[62,71,0,46,62,49,72,48],
[64,96,85,0,85,74,86,96],
[58,49,69,46,0,45,47,46],
[86,84,82,57,86,0,74,85],
[62,73,59,45,84,57,0,85],
[87,62,83,35,85,46,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,61,67,64,54,51],
[74,0,79,72,73,62,64,59],
[69,52,0,51,58,65,54,55],
[70,59,80,0,76,65,61,55],
[64,58,73,55,0,66,68,55],
[67,69,66,66,65,0,57,70],
[77,67,77,70,63,74,0,79],
[80,72,76,76,76,61,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,70,70,71,79,74,68],
[72,0,63,61,75,83,76,71],
[61,68,0,70,73,73,75,69],
[61,70,61,0,72,74,76,62],
[60,56,58,59,0,66,71,63],
[52,48,58,57,65,0,72,58],
[57,55,56,55,60,59,0,56],
[63,60,62,69,68,73,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,68,64,65,56,65,60],
[64,0,70,61,63,60,60,55],
[63,61,0,60,61,59,73,62],
[67,70,71,0,74,67,64,72],
[66,68,70,57,0,66,70,65],
[75,71,72,64,65,0,77,73],
[66,71,58,67,61,54,0,61],
[71,76,69,59,66,58,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,72,72,71,53,70],
[65,0,64,53,58,60,54,67],
[60,67,0,64,75,65,53,68],
[59,78,67,0,63,70,56,68],
[59,73,56,68,0,63,69,64],
[60,71,66,61,68,0,50,71],
[78,77,78,75,62,81,0,68],
[61,64,63,63,67,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,77,62,61,80,64],
[71,0,65,70,60,71,74,62],
[63,66,0,71,58,58,73,59],
[54,61,60,0,58,48,62,51],
[69,71,73,73,0,58,77,67],
[70,60,73,83,73,0,83,76],
[51,57,58,69,54,48,0,58],
[67,69,72,80,64,55,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,104,61,60,77,97,77],
[45,0,71,52,72,46,47,46],
[27,60,0,62,45,52,81,43],
[70,79,69,0,89,71,54,70],
[71,59,86,42,0,51,62,53],
[54,85,79,60,80,0,81,62],
[34,84,50,77,69,50,0,59],
[54,85,88,61,78,69,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,63,67,57,63,71],
[69,0,70,67,60,67,73,64],
[68,61,0,58,53,58,76,68],
[68,64,73,0,65,70,69,65],
[64,71,78,66,0,65,71,67],
[74,64,73,61,66,0,76,64],
[68,58,55,62,60,55,0,54],
[60,67,63,66,64,67,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,72,68,63,68,76,73],
[57,0,66,65,60,70,63,67],
[59,65,0,62,61,69,67,72],
[63,66,69,0,56,66,68,67],
[68,71,70,75,0,74,62,73],
[63,61,62,65,57,0,79,65],
[55,68,64,63,69,52,0,64],
[58,64,59,64,58,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,62,65,76,67,62,57],
[58,0,58,68,76,69,56,64],
[69,73,0,78,77,77,65,65],
[66,63,53,0,74,71,71,66],
[55,55,54,57,0,51,48,51],
[64,62,54,60,80,0,55,59],
[69,75,66,60,83,76,0,71],
[74,67,66,65,80,72,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,59,67,61,57,59,52],
[60,0,53,58,59,66,62,52],
[72,78,0,58,71,70,64,60],
[64,73,73,0,70,70,63,70],
[70,72,60,61,0,66,67,53],
[74,65,61,61,65,0,64,56],
[72,69,67,68,64,67,0,60],
[79,79,71,61,78,75,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,73,75,78,87,71],
[62,0,71,79,71,81,92,96],
[67,60,0,68,59,74,79,66],
[58,52,63,0,83,76,86,80],
[56,60,72,48,0,69,80,89],
[53,50,57,55,62,0,70,61],
[44,39,52,45,51,61,0,66],
[60,35,65,51,42,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,73,63,54,94,62,59],
[60,0,66,73,56,92,68,54],
[58,65,0,65,48,79,69,61],
[68,58,66,0,47,86,76,56],
[77,75,83,84,0,80,65,71],
[37,39,52,45,51,0,54,36],
[69,63,62,55,66,77,0,48],
[72,77,70,75,60,95,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,48,63,52,52,64,37],
[66,0,57,68,75,51,74,50],
[83,74,0,68,72,63,55,68],
[68,63,63,0,66,46,61,48],
[79,56,59,65,0,50,68,51],
[79,80,68,85,81,0,86,57],
[67,57,76,70,63,45,0,46],
[94,81,63,83,80,74,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,53,69,65,78,52,58],
[68,0,66,76,65,86,60,59],
[78,65,0,74,78,73,76,60],
[62,55,57,0,55,75,63,61],
[66,66,53,76,0,79,66,69],
[53,45,58,56,52,0,55,50],
[79,71,55,68,65,76,0,61],
[73,72,71,70,62,81,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,59,51,66,51,64,75],
[78,0,62,67,81,78,86,81],
[72,69,0,56,68,62,77,59],
[80,64,75,0,69,60,80,78],
[65,50,63,62,0,70,63,73],
[80,53,69,71,61,0,82,78],
[67,45,54,51,68,49,0,57],
[56,50,72,53,58,53,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,73,66,85,70,89,81],
[76,0,68,54,83,95,92,65],
[58,63,0,66,79,83,103,67],
[65,77,65,0,75,68,88,76],
[46,48,52,56,0,63,62,68],
[61,36,48,63,68,0,69,59],
[42,39,28,43,69,62,0,55],
[50,66,64,55,63,72,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,58,60,46,58,51],
[73,0,78,57,70,55,71,70],
[73,53,0,50,61,65,59,45],
[73,74,81,0,59,66,78,67],
[71,61,70,72,0,71,58,66],
[85,76,66,65,60,0,70,58],
[73,60,72,53,73,61,0,59],
[80,61,86,64,65,73,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,64,62,72,67,65],
[67,0,69,70,52,65,73,65],
[69,62,0,71,63,73,65,64],
[67,61,60,0,60,54,63,64],
[69,79,68,71,0,75,61,72],
[59,66,58,77,56,0,72,62],
[64,58,66,68,70,59,0,73],
[66,66,67,67,59,69,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,67,75,72,64,79,69],
[80,0,73,82,64,70,80,71],
[64,58,0,79,67,51,87,78],
[56,49,52,0,56,53,71,61],
[59,67,64,75,0,60,89,72],
[67,61,80,78,71,0,92,77],
[52,51,44,60,42,39,0,42],
[62,60,53,70,59,54,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,72,60,65,66,64,70],
[58,0,68,60,59,57,62,60],
[59,63,0,51,58,53,59,65],
[71,71,80,0,64,68,66,72],
[66,72,73,67,0,63,65,77],
[65,74,78,63,68,0,70,71],
[67,69,72,65,66,61,0,75],
[61,71,66,59,54,60,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,69,50,51,60,58],
[69,0,72,75,66,62,70,59],
[69,59,0,63,60,63,60,52],
[62,56,68,0,53,59,62,63],
[81,65,71,78,0,64,72,69],
[80,69,68,72,67,0,67,63],
[71,61,71,69,59,64,0,67],
[73,72,79,68,62,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,73,71,76,64,76],
[68,0,64,75,60,61,67,70],
[60,67,0,75,66,74,57,72],
[58,56,56,0,48,62,58,61],
[60,71,65,83,0,72,69,73],
[55,70,57,69,59,0,58,73],
[67,64,74,73,62,73,0,68],
[55,61,59,70,58,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,52,93,94,93,112,131],
[58,0,17,76,74,58,92,94],
[79,114,0,59,77,75,112,97],
[38,55,72,0,55,91,72,57],
[37,57,54,76,0,54,89,72],
[38,73,56,40,77,0,90,75],
[19,39,19,59,42,41,0,57],
[0,37,34,74,59,56,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,56,55,65,54,62,54],
[62,0,62,52,61,63,67,66],
[75,69,0,63,67,57,79,65],
[76,79,68,0,66,64,61,69],
[66,70,64,65,0,69,67,72],
[77,68,74,67,62,0,77,69],
[69,64,52,70,64,54,0,54],
[77,65,66,62,59,62,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,0,131,43,88,45,86],
[43,0,43,88,86,88,45,86],
[131,88,0,131,43,88,88,86],
[0,43,0,0,43,43,0,86],
[88,45,88,88,0,88,45,86],
[43,43,43,88,43,0,88,43],
[86,86,43,131,86,43,0,86],
[45,45,45,45,45,88,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,70,79,89,60,50,72],
[81,0,81,100,68,59,58,72],
[61,50,0,90,90,61,29,53],
[52,31,41,0,58,41,40,33],
[42,63,41,73,0,62,30,33],
[71,72,70,90,69,0,49,43],
[81,73,102,91,101,82,0,64],
[59,59,78,98,98,88,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,62,63,73,72,72,75],
[47,0,62,55,69,60,65,64],
[69,69,0,68,70,64,63,64],
[68,76,63,0,77,75,75,70],
[58,62,61,54,0,56,62,62],
[59,71,67,56,75,0,68,56],
[59,66,68,56,69,63,0,56],
[56,67,67,61,69,75,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,74,74,70,65,69,69],
[51,0,57,64,51,64,52,58],
[57,74,0,65,67,68,57,66],
[57,67,66,0,67,55,50,65],
[61,80,64,64,0,59,68,66],
[66,67,63,76,72,0,71,69],
[62,79,74,81,63,60,0,73],
[62,73,65,66,65,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,56,55,60,66,61],
[65,0,60,52,53,52,64,53],
[60,71,0,58,58,62,71,63],
[75,79,73,0,61,72,73,79],
[76,78,73,70,0,64,70,62],
[71,79,69,59,67,0,71,66],
[65,67,60,58,61,60,0,60],
[70,78,68,52,69,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,56,72,68,65,58,46],
[63,0,67,75,61,71,61,55],
[75,64,0,83,64,69,60,66],
[59,56,48,0,62,63,58,53],
[63,70,67,69,0,69,63,54],
[66,60,62,68,62,0,64,39],
[73,70,71,73,68,67,0,57],
[85,76,65,78,77,92,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,42,62,60,62,62,52],
[73,0,70,81,82,59,64,51],
[89,61,0,82,82,78,87,82],
[69,50,49,0,75,69,75,53],
[71,49,49,56,0,65,54,42],
[69,72,53,62,66,0,67,72],
[69,67,44,56,77,64,0,60],
[79,80,49,78,89,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,58,68,68,63,61,70],
[59,0,61,65,72,46,47,59],
[73,70,0,81,75,63,70,89],
[63,66,50,0,57,47,61,63],
[63,59,56,74,0,49,60,68],
[68,85,68,84,82,0,58,76],
[70,84,61,70,71,73,0,64],
[61,72,42,68,63,55,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,60,77,72,46,63],
[66,0,55,50,61,67,59,53],
[71,76,0,74,85,90,65,60],
[71,81,57,0,67,68,78,67],
[54,70,46,64,0,57,43,52],
[59,64,41,63,74,0,55,56],
[85,72,66,53,88,76,0,68],
[68,78,71,64,79,75,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,36,76,57,55,75,74],
[74,0,74,76,57,55,75,37],
[95,57,0,94,76,55,75,56],
[55,55,37,0,75,74,76,74],
[74,74,55,56,0,74,55,93],
[76,76,76,57,57,0,57,56],
[56,56,56,55,76,74,0,56],
[57,94,75,57,38,75,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,53,55,66,60,52],
[65,0,63,68,68,74,76,74],
[70,68,0,66,75,65,70,73],
[78,63,65,0,67,76,78,72],
[76,63,56,64,0,66,69,79],
[65,57,66,55,65,0,64,71],
[71,55,61,53,62,67,0,59],
[79,57,58,59,52,60,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,56,89,121,86,88,74],
[43,0,43,89,98,85,85,74],
[75,88,0,98,108,75,85,63],
[42,42,33,0,86,42,64,64],
[10,33,23,45,0,41,42,52],
[45,46,56,89,90,0,78,77],
[43,46,46,67,89,53,0,52],
[57,57,68,67,79,54,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,57,70,69,62,64],
[60,0,59,68,74,53,71,55],
[66,72,0,81,68,56,76,64],
[74,63,50,0,71,61,74,71],
[61,57,63,60,0,62,68,64],
[62,78,75,70,69,0,73,77],
[69,60,55,57,63,58,0,60],
[67,76,67,60,67,54,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,61,66,60,62,67,64],
[61,0,56,62,55,62,64,58],
[70,75,0,64,62,59,66,65],
[65,69,67,0,69,60,70,63],
[71,76,69,62,0,67,73,63],
[69,69,72,71,64,0,72,68],
[64,67,65,61,58,59,0,65],
[67,73,66,68,68,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,75,74,75,71,59,61],
[58,0,55,62,66,72,57,64],
[56,76,0,65,71,77,64,56],
[57,69,66,0,62,74,64,67],
[56,65,60,69,0,62,60,60],
[60,59,54,57,69,0,61,60],
[72,74,67,67,71,70,0,58],
[70,67,75,64,71,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,69,73,65,81,72,81],
[50,0,74,69,55,63,55,58],
[62,57,0,75,54,78,61,78],
[58,62,56,0,44,62,60,82],
[66,76,77,87,0,71,62,78],
[50,68,53,69,60,0,49,69],
[59,76,70,71,69,82,0,74],
[50,73,53,49,53,62,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,52,65,61,56,52],
[71,0,70,58,74,57,59,62],
[70,61,0,65,70,58,64,66],
[79,73,66,0,73,66,67,58],
[66,57,61,58,0,53,52,55],
[70,74,73,65,78,0,67,75],
[75,72,67,64,79,64,0,67],
[79,69,65,73,76,56,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,57,60,59,66,62],
[71,0,69,66,66,62,61,64],
[66,62,0,66,65,67,64,65],
[74,65,65,0,77,69,59,70],
[71,65,66,54,0,62,58,58],
[72,69,64,62,69,0,58,61],
[65,70,67,72,73,73,0,66],
[69,67,66,61,73,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,58,51,59,53,66],
[65,0,62,62,51,54,64,71],
[70,69,0,68,60,56,67,71],
[73,69,63,0,61,69,63,79],
[80,80,71,70,0,60,73,73],
[72,77,75,62,71,0,68,69],
[78,67,64,68,58,63,0,62],
[65,60,60,52,58,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,72,84,72,66,61,66],
[53,0,62,70,55,66,54,65],
[59,69,0,78,69,65,69,78],
[47,61,53,0,62,63,53,55],
[59,76,62,69,0,66,69,61],
[65,65,66,68,65,0,67,62],
[70,77,62,78,62,64,0,79],
[65,66,53,76,70,69,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,55,62,52,58,77],
[67,0,71,68,66,60,53,70],
[69,60,0,59,51,55,60,71],
[76,63,72,0,66,60,67,75],
[69,65,80,65,0,65,77,77],
[79,71,76,71,66,0,74,64],
[73,78,71,64,54,57,0,71],
[54,61,60,56,54,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,66,71,75,69,61],
[71,0,62,70,79,80,72,65],
[64,69,0,72,75,77,66,70],
[65,61,59,0,61,67,62,68],
[60,52,56,70,0,70,63,63],
[56,51,54,64,61,0,62,56],
[62,59,65,69,68,69,0,64],
[70,66,61,63,68,75,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,71,64,75,70,79],
[60,0,75,75,70,84,66,74],
[61,56,0,58,53,68,58,65],
[60,56,73,0,64,76,68,73],
[67,61,78,67,0,78,75,70],
[56,47,63,55,53,0,60,60],
[61,65,73,63,56,71,0,65],
[52,57,66,58,61,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,65,77,66,69,67,71],
[53,0,61,73,69,70,66,58],
[66,70,0,65,61,70,59,66],
[54,58,66,0,56,59,53,64],
[65,62,70,75,0,75,65,61],
[62,61,61,72,56,0,63,62],
[64,65,72,78,66,68,0,68],
[60,73,65,67,70,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,75,55,64,56,78,65],
[67,0,60,56,57,67,43,68],
[56,71,0,61,38,64,58,66],
[76,75,70,0,60,64,65,75],
[67,74,93,71,0,70,59,77],
[75,64,67,67,61,0,64,84],
[53,88,73,66,72,67,0,77],
[66,63,65,56,54,47,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,50,61,67,59,53,74],
[85,0,66,63,77,63,61,73],
[81,65,0,69,71,63,59,82],
[70,68,62,0,64,68,64,68],
[64,54,60,67,0,52,55,62],
[72,68,68,63,79,0,68,74],
[78,70,72,67,76,63,0,76],
[57,58,49,63,69,57,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,56,65,61,72,63,78],
[77,0,63,69,69,68,65,68],
[75,68,0,63,64,68,62,76],
[66,62,68,0,61,64,74,77],
[70,62,67,70,0,61,69,72],
[59,63,63,67,70,0,66,63],
[68,66,69,57,62,65,0,72],
[53,63,55,54,59,68,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,96,63,81,76,80,84],
[59,0,77,76,72,77,77,78],
[35,54,0,55,47,51,62,61],
[68,55,76,0,60,70,73,69],
[50,59,84,71,0,66,69,68],
[55,54,80,61,65,0,73,75],
[51,54,69,58,62,58,0,57],
[47,53,70,62,63,56,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,61,73,71,73,62,74],
[55,0,53,68,77,73,60,63],
[70,78,0,65,71,71,80,76],
[58,63,66,0,70,75,68,68],
[60,54,60,61,0,68,71,72],
[58,58,60,56,63,0,76,80],
[69,71,51,63,60,55,0,62],
[57,68,55,63,59,51,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,50,57,78,59,82,77],
[64,0,48,58,87,52,69,94],
[81,83,0,78,93,64,86,93],
[74,73,53,0,82,70,70,86],
[53,44,38,49,0,32,65,62],
[72,79,67,61,99,0,72,98],
[49,62,45,61,66,59,0,84],
[54,37,38,45,69,33,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,49,41,60,64,43,40],
[81,0,74,57,82,76,72,66],
[82,57,0,59,60,69,53,62],
[90,74,72,0,63,77,65,77],
[71,49,71,68,0,63,58,68],
[67,55,62,54,68,0,60,65],
[88,59,78,66,73,71,0,73],
[91,65,69,54,63,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,70,68,73,58,64,72],
[65,0,70,63,50,66,75,80],
[61,61,0,61,50,55,63,81],
[63,68,70,0,65,51,79,73],
[58,81,81,66,0,57,58,80],
[73,65,76,80,74,0,77,82],
[67,56,68,52,73,54,0,65],
[59,51,50,58,51,49,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,73,72,76,85,76],
[68,0,89,65,81,75,77,75],
[58,42,0,64,63,57,60,48],
[58,66,67,0,67,56,82,59],
[59,50,68,64,0,49,75,70],
[55,56,74,75,82,0,79,76],
[46,54,71,49,56,52,0,70],
[55,56,83,72,61,55,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,66,47,54,48,51,77],
[73,0,95,53,67,61,78,83],
[65,36,0,49,57,35,38,75],
[84,78,82,0,65,83,79,78],
[77,64,74,66,0,61,56,70],
[83,70,96,48,70,0,66,83],
[80,53,93,52,75,65,0,80],
[54,48,56,53,61,48,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,72,67,54,55,54,55],
[76,0,78,79,67,78,68,63],
[59,53,0,64,62,59,56,56],
[64,52,67,0,60,65,49,54],
[77,64,69,71,0,70,57,65],
[76,53,72,66,61,0,57,65],
[77,63,75,82,74,74,0,67],
[76,68,75,77,66,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,56,67,66,69,75],
[67,0,60,67,62,72,73,58],
[66,71,0,58,67,70,65,65],
[75,64,73,0,71,78,78,76],
[64,69,64,60,0,67,76,71],
[65,59,61,53,64,0,67,61],
[62,58,66,53,55,64,0,65],
[56,73,66,55,60,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,72,64,68,68,68],
[68,0,56,66,66,66,73,76],
[73,75,0,66,68,65,75,77],
[59,65,65,0,69,55,62,60],
[67,65,63,62,0,65,65,68],
[63,65,66,76,66,0,67,72],
[63,58,56,69,66,64,0,78],
[63,55,54,71,63,59,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,65,76,78,89,59,72],
[52,0,58,64,72,74,60,58],
[66,73,0,63,78,72,74,78],
[55,67,68,0,81,75,59,64],
[53,59,53,50,0,64,54,65],
[42,57,59,56,67,0,52,49],
[72,71,57,72,77,79,0,68],
[59,73,53,67,66,82,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,62,64,64,59,64],
[69,0,71,65,69,66,68,77],
[61,60,0,68,61,68,62,63],
[69,66,63,0,64,70,67,74],
[67,62,70,67,0,58,56,71],
[67,65,63,61,73,0,65,70],
[72,63,69,64,75,66,0,73],
[67,54,68,57,60,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,63,68,68,55,66],
[62,0,73,71,66,76,66,68],
[65,58,0,57,71,60,66,60],
[68,60,74,0,70,66,61,64],
[63,65,60,61,0,59,61,64],
[63,55,71,65,72,0,59,61],
[76,65,65,70,70,72,0,70],
[65,63,71,67,67,70,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,53,60,71,73,64,67],
[64,0,62,62,70,64,58,51],
[78,69,0,77,78,75,64,61],
[71,69,54,0,73,67,70,62],
[60,61,53,58,0,61,63,61],
[58,67,56,64,70,0,65,65],
[67,73,67,61,68,66,0,62],
[64,80,70,69,70,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,83,56,48,67,78,66],
[66,0,85,59,68,56,87,77],
[48,46,0,59,41,56,57,54],
[75,72,72,0,72,83,75,62],
[83,63,90,59,0,55,76,64],
[64,75,75,48,76,0,94,57],
[53,44,74,56,55,37,0,45],
[65,54,77,69,67,74,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,63,67,69,68,52,70],
[77,0,72,73,61,69,67,67],
[68,59,0,59,70,71,58,70],
[64,58,72,0,61,65,45,68],
[62,70,61,70,0,72,62,64],
[63,62,60,66,59,0,53,70],
[79,64,73,86,69,78,0,85],
[61,64,61,63,67,61,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,67,55,50,53,66,57],
[82,0,71,58,70,67,73,67],
[64,60,0,49,58,58,68,67],
[76,73,82,0,74,60,74,69],
[81,61,73,57,0,77,80,61],
[78,64,73,71,54,0,74,73],
[65,58,63,57,51,57,0,57],
[74,64,64,62,70,58,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,63,64,65,71,63,68],
[61,0,70,60,70,72,68,72],
[68,61,0,59,65,70,61,66],
[67,71,72,0,73,70,69,65],
[66,61,66,58,0,71,64,60],
[60,59,61,61,60,0,57,66],
[68,63,70,62,67,74,0,61],
[63,59,65,66,71,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,70,68,63,68,56,62],
[41,0,76,59,52,62,62,58],
[61,55,0,59,62,55,52,53],
[63,72,72,0,67,65,46,65],
[68,79,69,64,0,62,60,66],
[63,69,76,66,69,0,62,60],
[75,69,79,85,71,69,0,64],
[69,73,78,66,65,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,64,53,79,72,58,59],
[60,0,56,59,67,53,58,39],
[67,75,0,68,68,59,63,45],
[78,72,63,0,73,69,70,73],
[52,64,63,58,0,62,69,52],
[59,78,72,62,69,0,66,68],
[73,73,68,61,62,65,0,48],
[72,92,86,58,79,63,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,96,60,83,96,60,85,71],
[35,0,60,60,83,47,83,35],
[71,71,0,81,84,60,96,48],
[48,71,50,0,59,35,83,23],
[35,48,47,72,0,47,84,46],
[71,84,71,96,84,0,95,46],
[46,48,35,48,47,36,0,11],
[60,96,83,108,85,85,120,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,76,62,66,67,60,73],
[68,0,73,65,77,72,76,91],
[55,58,0,59,58,57,57,67],
[69,66,72,0,71,72,62,80],
[65,54,73,60,0,67,55,72],
[64,59,74,59,64,0,68,78],
[71,55,74,69,76,63,0,86],
[58,40,64,51,59,53,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,74,64,58,71,64,65],
[56,0,71,54,61,75,67,62],
[57,60,0,60,61,64,59,65],
[67,77,71,0,64,63,66,70],
[73,70,70,67,0,71,61,67],
[60,56,67,68,60,0,53,59],
[67,64,72,65,70,78,0,70],
[66,69,66,61,64,72,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,56,80,64,52,66,71],
[82,0,65,81,48,59,66,79],
[75,66,0,91,66,67,83,63],
[51,50,40,0,50,59,51,57],
[67,83,65,81,0,77,84,74],
[79,72,64,72,54,0,47,80],
[65,65,48,80,47,84,0,82],
[60,52,68,74,57,51,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,54,41,43,74,77,87],
[87,0,59,80,68,72,77,73],
[77,72,0,62,48,59,52,64],
[90,51,69,0,68,82,84,96],
[88,63,83,63,0,91,86,86],
[57,59,72,49,40,0,40,72],
[54,54,79,47,45,91,0,83],
[44,58,67,35,45,59,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,56,63,61,65,60,61],
[54,0,57,59,60,66,53,59],
[75,74,0,72,72,64,64,66],
[68,72,59,0,72,66,68,69],
[70,71,59,59,0,56,57,65],
[66,65,67,65,75,0,59,71],
[71,78,67,63,74,72,0,72],
[70,72,65,62,66,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,58,70,63,59,66,70],
[52,0,57,65,60,51,63,61],
[73,74,0,65,60,63,69,68],
[61,66,66,0,65,61,65,60],
[68,71,71,66,0,61,64,60],
[72,80,68,70,70,0,80,63],
[65,68,62,66,67,51,0,65],
[61,70,63,71,71,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,72,62,64,71,62,54],
[40,0,37,39,59,46,58,28],
[59,94,0,46,68,46,76,39],
[69,92,85,0,76,54,65,55],
[67,72,63,55,0,46,65,45],
[60,85,85,77,85,0,87,76],
[69,73,55,66,66,44,0,37],
[77,103,92,76,86,55,94,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,65,78,73,68,90],
[64,0,81,63,72,75,74,82],
[61,50,0,58,78,58,57,76],
[66,68,73,0,64,57,74,52],
[53,59,53,67,0,59,55,67],
[58,56,73,74,72,0,69,69],
[63,57,74,57,76,62,0,75],
[41,49,55,79,64,62,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,69,72,69,60,73,63],
[81,0,75,63,72,71,78,63],
[62,56,0,56,69,61,59,58],
[59,68,75,0,81,87,71,68],
[62,59,62,50,0,58,68,60],
[71,60,70,44,73,0,72,58],
[58,53,72,60,63,59,0,65],
[68,68,73,63,71,73,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,64,64,64,69,76],
[65,0,68,75,68,67,66,70],
[64,63,0,75,66,55,67,66],
[67,56,56,0,70,56,60,56],
[67,63,65,61,0,60,63,66],
[67,64,76,75,71,0,67,67],
[62,65,64,71,68,64,0,63],
[55,61,65,75,65,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,69,69,54,76,57],
[65,0,55,58,65,46,75,55],
[66,76,0,56,81,58,65,54],
[62,73,75,0,84,74,73,80],
[62,66,50,47,0,59,52,51],
[77,85,73,57,72,0,57,67],
[55,56,66,58,79,74,0,63],
[74,76,77,51,80,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,58,55,55,55,67],
[63,0,74,57,64,63,59,72],
[68,57,0,51,61,54,55,67],
[73,74,80,0,69,61,69,73],
[76,67,70,62,0,67,70,71],
[76,68,77,70,64,0,73,80],
[76,72,76,62,61,58,0,71],
[64,59,64,58,60,51,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,68,74,61,71,63],
[63,0,66,65,68,58,55,71],
[56,65,0,76,70,66,60,68],
[63,66,55,0,72,58,66,70],
[57,63,61,59,0,57,55,61],
[70,73,65,73,74,0,64,68],
[60,76,71,65,76,67,0,76],
[68,60,63,61,70,63,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,57,66,62,55,52,62],
[76,0,66,78,55,72,77,78],
[74,65,0,76,73,70,68,73],
[65,53,55,0,59,45,63,63],
[69,76,58,72,0,69,68,74],
[76,59,61,86,62,0,60,65],
[79,54,63,68,63,71,0,59],
[69,53,58,68,57,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,72,66,71,66,67],
[66,0,68,64,60,67,62,64],
[66,63,0,69,68,67,67,63],
[59,67,62,0,70,58,67,57],
[65,71,63,61,0,69,64,67],
[60,64,64,73,62,0,59,71],
[65,69,64,64,67,72,0,63],
[64,67,68,74,64,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,62,49,66,53,69,50],
[79,0,72,53,82,66,64,72],
[69,59,0,44,75,75,74,61],
[82,78,87,0,81,65,69,67],
[65,49,56,50,0,55,55,51],
[78,65,56,66,76,0,69,73],
[62,67,57,62,76,62,0,55],
[81,59,70,64,80,58,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,49,57,53,61,47,54],
[67,0,56,64,62,76,34,63],
[82,75,0,76,64,72,67,77],
[74,67,55,0,69,66,54,77],
[78,69,67,62,0,69,54,65],
[70,55,59,65,62,0,55,64],
[84,97,64,77,77,76,0,89],
[77,68,54,54,66,67,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,66,76,73,67,76],
[67,0,58,56,64,75,69,65],
[63,73,0,64,68,82,71,72],
[65,75,67,0,62,68,80,69],
[55,67,63,69,0,72,70,79],
[58,56,49,63,59,0,76,52],
[64,62,60,51,61,55,0,56],
[55,66,59,62,52,79,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,84,77,66,73,71],
[68,0,57,80,70,62,80,64],
[74,74,0,76,77,73,81,63],
[47,51,55,0,75,51,88,50],
[54,61,54,56,0,47,60,70],
[65,69,58,80,84,0,70,70],
[58,51,50,43,71,61,0,58],
[60,67,68,81,61,61,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,79,87,69,66,62],
[61,0,83,75,83,80,71,81],
[63,48,0,66,73,67,60,62],
[52,56,65,0,63,72,68,52],
[44,48,58,68,0,70,51,59],
[62,51,64,59,61,0,64,69],
[65,60,71,63,80,67,0,60],
[69,50,69,79,72,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,72,75,61,65,57],
[64,0,63,73,70,74,66,56],
[61,68,0,67,76,59,61,59],
[59,58,64,0,67,66,66,61],
[56,61,55,64,0,62,68,66],
[70,57,72,65,69,0,68,67],
[66,65,70,65,63,63,0,66],
[74,75,72,70,65,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,48,49,65,62,50,60],
[66,0,55,49,66,46,60,52],
[83,76,0,76,68,60,71,59],
[82,82,55,0,61,71,67,62],
[66,65,63,70,0,66,67,72],
[69,85,71,60,65,0,69,64],
[81,71,60,64,64,62,0,60],
[71,79,72,69,59,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,72,75,84,77,79,61],
[64,0,77,71,87,77,67,56],
[59,54,0,53,74,63,46,59],
[56,60,78,0,91,72,62,63],
[47,44,57,40,0,57,48,47],
[54,54,68,59,74,0,62,62],
[52,64,85,69,83,69,0,68],
[70,75,72,68,84,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,71,70,74,71,64],
[62,0,55,49,63,54,64,46],
[65,76,0,53,63,67,72,57],
[60,82,78,0,85,74,76,72],
[61,68,68,46,0,60,59,65],
[57,77,64,57,71,0,67,64],
[60,67,59,55,72,64,0,65],
[67,85,74,59,66,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,73,62,73,75,64,66],
[51,0,53,59,78,69,63,55],
[58,78,0,70,79,79,74,67],
[69,72,61,0,69,77,63,65],
[58,53,52,62,0,67,60,58],
[56,62,52,54,64,0,41,66],
[67,68,57,68,71,90,0,70],
[65,76,64,66,73,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,78,67,81,80,85,61],
[60,0,79,72,73,89,83,63],
[53,52,0,54,62,79,75,71],
[64,59,77,0,75,100,88,71],
[50,58,69,56,0,69,71,61],
[51,42,52,31,62,0,59,48],
[46,48,56,43,60,72,0,51],
[70,68,60,60,70,83,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,60,68,54,53,51,68],
[83,0,73,80,59,71,66,75],
[71,58,0,73,65,58,54,75],
[63,51,58,0,66,53,57,57],
[77,72,66,65,0,53,60,66],
[78,60,73,78,78,0,66,86],
[80,65,77,74,71,65,0,82],
[63,56,56,74,65,45,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,43,69,54,81,42],
[63,0,78,91,63,50,92,78],
[64,53,0,54,27,52,119,26],
[88,40,77,0,78,78,65,41],
[62,68,104,53,0,63,92,28],
[77,81,79,53,68,0,94,28],
[50,39,12,66,39,37,0,38],
[89,53,105,90,103,103,93,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,64,62,53,63,67],
[67,0,62,77,68,63,73,68],
[71,69,0,71,67,65,67,74],
[67,54,60,0,60,51,61,66],
[69,63,64,71,0,68,65,73],
[78,68,66,80,63,0,70,72],
[68,58,64,70,66,61,0,61],
[64,63,57,65,58,59,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,58,66,62,66,65],
[68,0,61,81,63,69,73,68],
[70,70,0,79,63,57,83,65],
[73,50,52,0,53,53,62,51],
[65,68,68,78,0,77,69,76],
[69,62,74,78,54,0,79,75],
[65,58,48,69,62,52,0,59],
[66,63,66,80,55,56,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,62,61,57,59,68],
[67,0,71,64,69,67,65,70],
[66,60,0,63,67,61,64,74],
[69,67,68,0,74,60,63,72],
[70,62,64,57,0,58,59,67],
[74,64,70,71,73,0,66,74],
[72,66,67,68,72,65,0,81],
[63,61,57,59,64,57,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,52,68,73,57,66,64],
[67,0,58,52,64,57,67,69],
[79,73,0,70,64,71,69,81],
[63,79,61,0,58,64,63,66],
[58,67,67,73,0,69,59,68],
[74,74,60,67,62,0,56,83],
[65,64,62,68,72,75,0,80],
[67,62,50,65,63,48,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,51,57,56,60,59,65],
[71,0,62,66,73,71,64,75],
[80,69,0,73,69,80,63,78],
[74,65,58,0,57,62,62,61],
[75,58,62,74,0,72,69,71],
[71,60,51,69,59,0,59,72],
[72,67,68,69,62,72,0,75],
[66,56,53,70,60,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,56,66,56,56,63],
[70,0,77,72,56,75,52,60],
[61,54,0,65,53,73,45,60],
[75,59,66,0,57,61,40,59],
[65,75,78,74,0,76,72,84],
[75,56,58,70,55,0,41,57],
[75,79,86,91,59,90,0,75],
[68,71,71,72,47,74,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,57,71,59,68,75,65],
[69,0,60,72,64,63,67,68],
[74,71,0,75,64,85,72,87],
[60,59,56,0,56,71,67,64],
[72,67,67,75,0,65,60,74],
[63,68,46,60,66,0,56,64],
[56,64,59,64,71,75,0,60],
[66,63,44,67,57,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,58,77,73,64,66],
[69,0,57,66,68,66,60,64],
[67,74,0,63,70,72,68,67],
[73,65,68,0,69,76,67,72],
[54,63,61,62,0,73,53,58],
[58,65,59,55,58,0,55,59],
[67,71,63,64,78,76,0,66],
[65,67,64,59,73,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,74,65,65,68,70],
[66,0,61,59,59,68,60,67],
[68,70,0,68,60,61,63,70],
[57,72,63,0,51,68,67,63],
[66,72,71,80,0,75,69,62],
[66,63,70,63,56,0,59,55],
[63,71,68,64,62,72,0,60],
[61,64,61,68,69,76,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,77,69,67,69,72],
[72,0,67,79,71,61,63,59],
[64,64,0,70,66,69,62,68],
[54,52,61,0,53,59,54,54],
[62,60,65,78,0,71,64,63],
[64,70,62,72,60,0,68,64],
[62,68,69,77,67,63,0,69],
[59,72,63,77,68,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,74,58,68,58,74],
[70,0,65,69,67,64,62,74],
[70,66,0,69,56,60,65,74],
[57,62,62,0,69,58,54,64],
[73,64,75,62,0,71,64,67],
[63,67,71,73,60,0,56,69],
[73,69,66,77,67,75,0,65],
[57,57,57,67,64,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,77,76,83,72,80,65],
[60,0,70,65,51,65,69,58],
[54,61,0,54,45,48,62,52],
[55,66,77,0,60,64,85,70],
[48,80,86,71,0,72,80,72],
[59,66,83,67,59,0,77,55],
[51,62,69,46,51,54,0,49],
[66,73,79,61,59,76,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,67,55,69,78,78,65],
[51,0,59,53,62,65,64,49],
[64,72,0,59,66,71,76,51],
[76,78,72,0,58,77,82,73],
[62,69,65,73,0,66,72,56],
[53,66,60,54,65,0,82,55],
[53,67,55,49,59,49,0,54],
[66,82,80,58,75,76,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,47,64,66,69,56,79],
[64,0,73,62,67,72,61,82],
[84,58,0,66,72,73,60,87],
[67,69,65,0,53,75,58,76],
[65,64,59,78,0,80,68,76],
[62,59,58,56,51,0,45,75],
[75,70,71,73,63,86,0,76],
[52,49,44,55,55,56,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,60,67,66,72,74,61],
[62,0,52,68,53,72,62,54],
[71,79,0,73,61,64,70,67],
[64,63,58,0,67,72,62,53],
[65,78,70,64,0,72,73,65],
[59,59,67,59,59,0,67,57],
[57,69,61,69,58,64,0,57],
[70,77,64,78,66,74,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,69,62,55,53,58,47],
[77,0,82,68,61,61,69,58],
[62,49,0,62,58,59,56,55],
[69,63,69,0,58,60,70,64],
[76,70,73,73,0,66,63,76],
[78,70,72,71,65,0,63,61],
[73,62,75,61,68,68,0,57],
[84,73,76,67,55,70,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,94,79,70,85,59],
[64,0,74,83,88,71,74,59],
[64,57,0,72,72,47,60,69],
[37,48,59,0,59,43,57,55],
[52,43,59,72,0,63,61,54],
[61,60,84,88,68,0,74,73],
[46,57,71,74,70,57,0,51],
[72,72,62,76,77,58,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,71,72,63,63,65],
[66,0,56,51,60,49,60,61],
[63,75,0,57,63,57,58,62],
[60,80,74,0,63,70,61,72],
[59,71,68,68,0,70,66,71],
[68,82,74,61,61,0,69,74],
[68,71,73,70,65,62,0,68],
[66,70,69,59,60,57,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,72,72,80,82,65,76],
[54,0,76,67,52,79,44,61],
[59,55,0,63,64,58,67,60],
[59,64,68,0,79,62,61,74],
[51,79,67,52,0,67,67,60],
[49,52,73,69,64,0,67,46],
[66,87,64,70,64,64,0,56],
[55,70,71,57,71,85,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,80,69,76,76,66,62],
[63,0,68,60,44,61,56,66],
[51,63,0,65,53,68,72,65],
[62,71,66,0,54,66,61,62],
[55,87,78,77,0,66,80,75],
[55,70,63,65,65,0,51,57],
[65,75,59,70,51,80,0,73],
[69,65,66,69,56,74,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,88,86,91,75,73,80],
[70,0,63,83,82,44,44,94],
[43,68,0,73,73,44,56,72],
[45,48,58,0,62,16,44,65],
[40,49,58,69,0,21,22,79],
[56,87,87,115,110,0,75,99],
[58,87,75,87,109,56,0,94],
[51,37,59,66,52,32,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,57,75,83,69,74,68],
[64,0,69,78,83,68,82,66],
[74,62,0,69,71,60,65,60],
[56,53,62,0,62,46,54,57],
[48,48,60,69,0,50,60,55],
[62,63,71,85,81,0,71,73],
[57,49,66,77,71,60,0,57],
[63,65,71,74,76,58,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,64,78,93,64,82,52],
[76,0,65,87,89,83,88,66],
[67,66,0,80,66,59,87,73],
[53,44,51,0,55,59,44,56],
[38,42,65,76,0,52,75,54],
[67,48,72,72,79,0,72,88],
[49,43,44,87,56,59,0,67],
[79,65,58,75,77,43,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,55,63,63,72,53],
[68,0,62,57,66,60,66,63],
[63,69,0,51,69,65,64,66],
[76,74,80,0,79,74,74,64],
[68,65,62,52,0,66,61,60],
[68,71,66,57,65,0,75,57],
[59,65,67,57,70,56,0,61],
[78,68,65,67,71,74,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,65,73,57,65,66,63],
[55,0,61,64,53,65,63,65],
[66,70,0,67,68,65,60,67],
[58,67,64,0,59,56,59,63],
[74,78,63,72,0,72,66,77],
[66,66,66,75,59,0,62,68],
[65,68,71,72,65,69,0,65],
[68,66,64,68,54,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,66,89,69,74,81],
[65,0,69,73,78,71,68,86],
[66,62,0,83,89,73,78,85],
[65,58,48,0,87,72,65,81],
[42,53,42,44,0,56,61,62],
[62,60,58,59,75,0,56,72],
[57,63,53,66,70,75,0,80],
[50,45,46,50,69,59,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,74,78,76,70,79,67],
[67,0,78,64,74,71,77,72],
[57,53,0,61,67,70,60,59],
[53,67,70,0,70,65,69,73],
[55,57,64,61,0,59,65,64],
[61,60,61,66,72,0,63,66],
[52,54,71,62,66,68,0,60],
[64,59,72,58,67,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,52,72,68,75,80,68],
[64,0,63,70,68,76,72,66],
[79,68,0,71,53,63,67,58],
[59,61,60,0,67,68,81,77],
[63,63,78,64,0,75,66,71],
[56,55,68,63,56,0,62,67],
[51,59,64,50,65,69,0,67],
[63,65,73,54,60,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,62,71,54,73,66,84],
[75,0,71,76,77,85,64,75],
[69,60,0,74,55,55,59,63],
[60,55,57,0,55,77,54,71],
[77,54,76,76,0,79,51,67],
[58,46,76,54,52,0,63,63],
[65,67,72,77,80,68,0,91],
[47,56,68,60,64,68,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,81,56,67,57,65,62],
[72,0,76,84,67,61,75,73],
[50,55,0,60,54,46,59,60],
[75,47,71,0,68,73,70,70],
[64,64,77,63,0,63,67,67],
[74,70,85,58,68,0,72,76],
[66,56,72,61,64,59,0,65],
[69,58,71,61,64,55,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,59,60,68,75,63,62],
[65,0,71,72,78,71,69,71],
[72,60,0,66,64,56,55,57],
[71,59,65,0,62,56,49,56],
[63,53,67,69,0,63,41,76],
[56,60,75,75,68,0,49,70],
[68,62,76,82,90,82,0,91],
[69,60,74,75,55,61,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,64,70,69,75,77,69],
[57,0,65,67,60,69,61,62],
[67,66,0,65,68,63,67,62],
[61,64,66,0,74,71,62,66],
[62,71,63,57,0,62,58,68],
[56,62,68,60,69,0,59,67],
[54,70,64,69,73,72,0,70],
[62,69,69,65,63,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,77,68,56,63,69,67],
[66,0,64,59,61,68,62,61],
[54,67,0,59,62,52,58,58],
[63,72,72,0,64,64,66,67],
[75,70,69,67,0,76,64,60],
[68,63,79,67,55,0,61,56],
[62,69,73,65,67,70,0,70],
[64,70,73,64,71,75,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,84,56,59,60,67,59],
[79,0,81,72,80,77,61,75],
[47,50,0,46,49,58,57,54],
[75,59,85,0,77,78,82,61],
[72,51,82,54,0,71,63,55],
[71,54,73,53,60,0,62,59],
[64,70,74,49,68,69,0,57],
[72,56,77,70,76,72,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,71,83,56,76,72],
[62,0,58,61,69,65,62,74],
[70,73,0,65,67,68,74,75],
[60,70,66,0,77,76,76,76],
[48,62,64,54,0,54,69,69],
[75,66,63,55,77,0,70,68],
[55,69,57,55,62,61,0,63],
[59,57,56,55,62,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,71,66,99,70,70,58],
[53,0,62,60,73,49,55,68],
[60,69,0,57,87,72,71,52],
[65,71,74,0,83,77,72,59],
[32,58,44,48,0,69,45,44],
[61,82,59,54,62,0,68,63],
[61,76,60,59,86,63,0,56],
[73,63,79,72,87,68,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,66,74,63,69,74],
[62,0,67,68,70,70,64,67],
[64,64,0,63,68,74,71,72],
[65,63,68,0,78,69,75,77],
[57,61,63,53,0,70,69,67],
[68,61,57,62,61,0,62,69],
[62,67,60,56,62,69,0,73],
[57,64,59,54,64,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,74,69,67,75,68],
[65,0,63,70,70,66,83,80],
[69,68,0,81,65,74,77,82],
[57,61,50,0,59,58,62,62],
[62,61,66,72,0,62,75,70],
[64,65,57,73,69,0,69,67],
[56,48,54,69,56,62,0,61],
[63,51,49,69,61,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,46,58,60,67,64,65],
[71,0,67,73,66,71,72,57],
[85,64,0,76,66,60,65,70],
[73,58,55,0,53,68,63,57],
[71,65,65,78,0,63,77,65],
[64,60,71,63,68,0,65,72],
[67,59,66,68,54,66,0,67],
[66,74,61,74,66,59,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,70,79,88,85,85,65],
[52,0,89,60,64,71,54,72],
[61,42,0,75,38,67,56,57],
[52,71,56,0,56,68,47,74],
[43,67,93,75,0,80,61,78],
[46,60,64,63,51,0,45,65],
[46,77,75,84,70,86,0,82],
[66,59,74,57,53,66,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,72,98,83,83,57,75],
[49,0,59,68,76,76,50,65],
[59,72,0,61,76,70,67,73],
[33,63,70,0,47,40,75,63],
[48,55,55,84,0,81,88,62],
[48,55,61,91,50,0,42,56],
[74,81,64,56,43,89,0,73],
[56,66,58,68,69,75,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,69,56,53,65,55],
[62,0,53,72,50,61,64,47],
[67,78,0,77,63,68,62,54],
[62,59,54,0,54,53,50,45],
[75,81,68,77,0,68,77,54],
[78,70,63,78,63,0,66,68],
[66,67,69,81,54,65,0,54],
[76,84,77,86,77,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,59,58,63,64,62,60],
[61,0,64,71,61,67,65,56],
[72,67,0,54,59,67,71,57],
[73,60,77,0,68,84,79,62],
[68,70,72,63,0,69,81,72],
[67,64,64,47,62,0,68,65],
[69,66,60,52,50,63,0,55],
[71,75,74,69,59,66,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,37,57,55,75,55,57],
[56,0,75,75,75,75,36,76],
[94,56,0,77,57,58,38,38],
[74,56,54,0,111,76,74,74],
[76,56,74,20,0,56,36,74],
[56,56,73,55,75,0,36,74],
[76,95,93,57,95,95,0,95],
[74,55,93,57,57,57,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,71,67,71,81,74,64],
[51,0,67,66,54,66,63,57],
[60,64,0,55,63,62,63,54],
[64,65,76,0,62,83,66,66],
[60,77,68,69,0,75,78,64],
[50,65,69,48,56,0,70,59],
[57,68,68,65,53,61,0,60],
[67,74,77,65,67,72,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,63,64,67,62,65,76],
[61,0,52,48,45,59,72,70],
[68,79,0,65,58,74,84,64],
[67,83,66,0,59,76,87,84],
[64,86,73,72,0,66,74,87],
[69,72,57,55,65,0,77,69],
[66,59,47,44,57,54,0,74],
[55,61,67,47,44,62,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,68,72,67,67,79],
[71,0,81,65,71,63,60,77],
[67,50,0,66,70,69,58,61],
[63,66,65,0,75,60,57,77],
[59,60,61,56,0,69,55,69],
[64,68,62,71,62,0,74,80],
[64,71,73,74,76,57,0,68],
[52,54,70,54,62,51,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,53,52,54,68,57],
[75,0,68,61,60,64,73,65],
[74,63,0,69,60,63,73,71],
[78,70,62,0,60,70,73,64],
[79,71,71,71,0,69,75,63],
[77,67,68,61,62,0,72,70],
[63,58,58,58,56,59,0,56],
[74,66,60,67,68,61,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,51,50,46,59,62,60],
[71,0,54,52,61,60,54,67],
[80,77,0,62,68,74,68,81],
[81,79,69,0,58,71,55,72],
[85,70,63,73,0,74,62,77],
[72,71,57,60,57,0,60,74],
[69,77,63,76,69,71,0,88],
[71,64,50,59,54,57,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,58,58,58,57,77,73],
[83,0,80,65,65,75,83,70],
[73,51,0,65,50,61,71,60],
[73,66,66,0,57,76,78,72],
[73,66,81,74,0,64,75,67],
[74,56,70,55,67,0,76,53],
[54,48,60,53,56,55,0,69],
[58,61,71,59,64,78,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,70,59,71,57,70,51],
[71,0,69,68,72,65,78,64],
[61,62,0,58,66,61,68,53],
[72,63,73,0,73,60,75,66],
[60,59,65,58,0,59,67,63],
[74,66,70,71,72,0,78,64],
[61,53,63,56,64,53,0,52],
[80,67,78,65,68,67,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,84,70,55,76,79,65],
[77,0,87,68,70,70,81,63],
[47,44,0,67,47,72,74,50],
[61,63,64,0,70,72,74,64],
[76,61,84,61,0,73,77,57],
[55,61,59,59,58,0,74,67],
[52,50,57,57,54,57,0,46],
[66,68,81,67,74,64,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,51,61,60,57,55,46],
[85,0,63,72,86,66,72,79],
[80,68,0,67,80,85,60,70],
[70,59,64,0,79,72,53,72],
[71,45,51,52,0,64,58,52],
[74,65,46,59,67,0,58,65],
[76,59,71,78,73,73,0,40],
[85,52,61,59,79,66,91,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,60,48,53,50,71,64],
[82,0,68,62,72,56,74,75],
[71,63,0,53,65,48,73,62],
[83,69,78,0,70,63,78,78],
[78,59,66,61,0,80,89,87],
[81,75,83,68,51,0,92,82],
[60,57,58,53,42,39,0,69],
[67,56,69,53,44,49,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,59,55,45,49,67],
[66,0,53,50,48,58,66,66],
[67,78,0,70,64,72,62,84],
[72,81,61,0,57,61,69,76],
[76,83,67,74,0,66,62,80],
[86,73,59,70,65,0,55,76],
[82,65,69,62,69,76,0,73],
[64,65,47,55,51,55,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,66,61,64,69,66],
[66,0,69,66,64,62,65,57],
[63,62,0,62,64,66,62,67],
[65,65,69,0,67,68,67,65],
[70,67,67,64,0,72,70,66],
[67,69,65,63,59,0,68,73],
[62,66,69,64,61,63,0,75],
[65,74,64,66,65,58,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,13,38,52,68,53,25],
[38,0,26,50,78,79,51,63],
[118,105,0,63,90,67,79,91],
[93,81,68,0,66,69,65,54],
[79,53,41,65,0,67,51,51],
[63,52,64,62,64,0,49,50],
[78,80,52,66,80,82,0,52],
[106,68,40,77,80,81,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,64,77,63,54,62],
[61,0,71,70,64,65,70,66],
[64,60,0,73,62,68,61,61],
[67,61,58,0,68,64,67,61],
[54,67,69,63,0,62,58,64],
[68,66,63,67,69,0,63,64],
[77,61,70,64,73,68,0,67],
[69,65,70,70,67,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,65,81,67,75,70,71],
[55,0,63,69,69,68,73,63],
[66,68,0,84,64,74,81,75],
[50,62,47,0,68,59,66,64],
[64,62,67,63,0,64,76,65],
[56,63,57,72,67,0,77,69],
[61,58,50,65,55,54,0,66],
[60,68,56,67,66,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,102,56,100,70,72,72],
[44,0,89,28,43,58,28,44],
[29,42,0,42,58,56,56,72],
[75,103,89,0,58,75,74,73],
[31,88,73,73,0,72,57,72],
[61,73,75,56,59,0,73,72],
[59,103,75,57,74,58,0,58],
[59,87,59,58,59,59,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,78,62,61,61,66,75],
[69,0,71,56,63,61,64,63],
[53,60,0,58,53,65,54,58],
[69,75,73,0,66,67,67,65],
[70,68,78,65,0,70,52,69],
[70,70,66,64,61,0,61,70],
[65,67,77,64,79,70,0,69],
[56,68,73,66,62,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,77,71,77,80,75],
[62,0,65,69,70,67,75,66],
[66,66,0,71,70,71,75,61],
[54,62,60,0,68,64,73,62],
[60,61,61,63,0,63,82,62],
[54,64,60,67,68,0,75,64],
[51,56,56,58,49,56,0,63],
[56,65,70,69,69,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,68,65,63,63,63],
[73,0,65,68,68,71,71,74],
[69,66,0,59,64,67,65,61],
[63,63,72,0,68,67,71,72],
[66,63,67,63,0,73,69,65],
[68,60,64,64,58,0,62,68],
[68,60,66,60,62,69,0,66],
[68,57,70,59,66,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,35,54,47,64,43,66],
[74,0,65,64,62,94,42,51],
[96,66,0,62,77,78,65,75],
[77,67,69,0,52,77,45,67],
[84,69,54,79,0,74,67,44],
[67,37,53,54,57,0,49,66],
[88,89,66,86,64,82,0,74],
[65,80,56,64,87,65,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,67,77,70,55,74,56],
[56,0,66,61,83,55,70,65],
[64,65,0,58,76,62,68,68],
[54,70,73,0,73,59,69,66],
[61,48,55,58,0,51,66,59],
[76,76,69,72,80,0,75,61],
[57,61,63,62,65,56,0,61],
[75,66,63,65,72,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,62,60,58,61,58,66],
[58,0,51,67,66,62,54,64],
[69,80,0,66,60,67,62,72],
[71,64,65,0,64,66,64,59],
[73,65,71,67,0,71,66,69],
[70,69,64,65,60,0,57,67],
[73,77,69,67,65,74,0,68],
[65,67,59,72,62,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,57,63,61,66,63,64],
[66,0,62,73,55,61,71,71],
[74,69,0,77,66,63,74,71],
[68,58,54,0,55,55,64,81],
[70,76,65,76,0,68,70,70],
[65,70,68,76,63,0,72,71],
[68,60,57,67,61,59,0,68],
[67,60,60,50,61,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,67,71,60,62,59],
[65,0,70,69,58,53,65,59],
[67,61,0,66,68,58,53,62],
[64,62,65,0,64,50,65,50],
[60,73,63,67,0,68,58,71],
[71,78,73,81,63,0,69,73],
[69,66,78,66,73,62,0,60],
[72,72,69,81,60,58,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,78,65,81,65,75,72],
[52,0,63,64,62,54,58,52],
[53,68,0,62,65,50,59,55],
[66,67,69,0,76,58,62,67],
[50,69,66,55,0,44,62,54],
[66,77,81,73,87,0,68,60],
[56,73,72,69,69,63,0,64],
[59,79,76,64,77,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,40,61,53,56,55,49],
[77,0,73,80,62,60,85,67],
[91,58,0,70,68,73,77,44],
[70,51,61,0,49,55,50,58],
[78,69,63,82,0,57,69,59],
[75,71,58,76,74,0,73,68],
[76,46,54,81,62,58,0,59],
[82,64,87,73,72,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,66,62,74,67,65,73],
[73,0,78,71,78,65,78,81],
[65,53,0,69,71,57,64,67],
[69,60,62,0,64,67,66,70],
[57,53,60,67,0,61,60,57],
[64,66,74,64,70,0,69,73],
[66,53,67,65,71,62,0,66],
[58,50,64,61,74,58,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,72,57,69,64,68],
[65,0,57,69,67,76,67,72],
[66,74,0,70,61,76,65,72],
[59,62,61,0,61,73,62,73],
[74,64,70,70,0,70,71,66],
[62,55,55,58,61,0,62,62],
[67,64,66,69,60,69,0,67],
[63,59,59,58,65,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,87,70,84,71,62,66],
[66,0,79,68,85,54,72,72],
[44,52,0,48,65,50,52,61],
[61,63,83,0,66,58,65,65],
[47,46,66,65,0,62,51,49],
[60,77,81,73,69,0,68,70],
[69,59,79,66,80,63,0,60],
[65,59,70,66,82,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,89,88,71,86,86,58],
[44,0,75,72,57,72,72,58],
[42,56,0,86,56,56,56,72],
[43,59,45,0,43,57,58,45],
[60,74,75,88,0,88,88,74],
[45,59,75,74,43,0,58,46],
[45,59,75,73,43,73,0,73],
[73,73,59,86,57,85,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,79,75,73,69,72,64],
[53,0,68,65,50,62,51,50],
[52,63,0,51,68,50,59,49],
[56,66,80,0,59,66,65,50],
[58,81,63,72,0,62,73,68],
[62,69,81,65,69,0,78,66],
[59,80,72,66,58,53,0,46],
[67,81,82,81,63,65,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,70,80,72,61,70,64],
[54,0,72,61,58,52,64,52],
[61,59,0,69,57,52,56,51],
[51,70,62,0,42,52,63,55],
[59,73,74,89,0,70,72,68],
[70,79,79,79,61,0,79,60],
[61,67,75,68,59,52,0,64],
[67,79,80,76,63,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,62,66,61,57,64],
[63,0,65,69,59,63,67,66],
[60,66,0,67,48,66,60,57],
[69,62,64,0,61,61,65,61],
[65,72,83,70,0,75,72,73],
[70,68,65,70,56,0,66,67],
[74,64,71,66,59,65,0,64],
[67,65,74,70,58,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,73,63,60,70,72,67],
[58,0,68,61,67,74,74,55],
[58,63,0,65,60,70,71,55],
[68,70,66,0,68,71,82,63],
[71,64,71,63,0,70,75,62],
[61,57,61,60,61,0,66,54],
[59,57,60,49,56,65,0,56],
[64,76,76,68,69,77,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,54,66,60,69,62],
[63,0,87,66,66,79,76,69],
[59,44,0,57,64,53,56,59],
[77,65,74,0,75,83,73,89],
[65,65,67,56,0,66,54,65],
[71,52,78,48,65,0,58,58],
[62,55,75,58,77,73,0,66],
[69,62,72,42,66,73,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,56,51,63,67,57],
[71,0,69,67,61,62,75,67],
[67,62,0,65,60,65,69,63],
[75,64,66,0,55,69,76,63],
[80,70,71,76,0,62,78,67],
[68,69,66,62,69,0,65,66],
[64,56,62,55,53,66,0,56],
[74,64,68,68,64,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,58,68,60,64,64,66],
[82,0,70,88,65,75,74,69],
[73,61,0,72,75,66,71,70],
[63,43,59,0,63,59,73,61],
[71,66,56,68,0,64,66,61],
[67,56,65,72,67,0,74,62],
[67,57,60,58,65,57,0,59],
[65,62,61,70,70,69,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,62,77,59,83,68,66],
[59,0,63,63,60,68,60,67],
[69,68,0,77,63,69,63,62],
[54,68,54,0,63,55,59,71],
[72,71,68,68,0,70,62,74],
[48,63,62,76,61,0,59,65],
[63,71,68,72,69,72,0,72],
[65,64,69,60,57,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,57,33,40,49,54,61],
[80,0,55,75,59,65,62,62],
[74,76,0,50,70,60,54,81],
[98,56,81,0,66,63,66,87],
[91,72,61,65,0,69,61,84],
[82,66,71,68,62,0,61,84],
[77,69,77,65,70,70,0,63],
[70,69,50,44,47,47,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,22,53,46,58,51,30],
[90,0,67,64,81,79,80,66],
[109,64,0,72,58,88,93,80],
[78,67,59,0,76,81,80,72],
[85,50,73,55,0,55,91,62],
[73,52,43,50,76,0,78,46],
[80,51,38,51,40,53,0,62],
[101,65,51,59,69,85,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,58,63,68,90,63],
[66,0,50,44,74,64,102,82],
[64,81,0,67,67,62,81,70],
[73,87,64,0,85,77,106,64],
[68,57,64,46,0,57,85,48],
[63,67,69,54,74,0,91,58],
[41,29,50,25,46,40,0,26],
[68,49,61,67,83,73,105,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,72,69,59,65,59,68],
[64,0,63,68,63,72,61,66],
[59,68,0,63,60,70,64,67],
[62,63,68,0,59,68,74,69],
[72,68,71,72,0,68,63,73],
[66,59,61,63,63,0,57,62],
[72,70,67,57,68,74,0,74],
[63,65,64,62,58,69,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,81,77,85,88,62,72],
[57,0,75,78,65,81,66,57],
[50,56,0,70,52,77,50,61],
[54,53,61,0,61,82,48,68],
[46,66,79,70,0,83,66,55],
[43,50,54,49,48,0,28,49],
[69,65,81,83,65,103,0,70],
[59,74,70,63,76,82,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,60,59,86,75,83],
[63,0,70,54,59,46,67,70],
[56,61,0,33,53,55,37,51],
[71,77,98,0,62,63,69,56],
[72,72,78,69,0,81,60,67],
[45,85,76,68,50,0,61,69],
[56,64,94,62,71,70,0,86],
[48,61,80,75,64,62,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,88,71,75,69,67,65],
[63,0,87,65,74,75,71,78],
[43,44,0,72,69,75,55,65],
[60,66,59,0,63,76,62,62],
[56,57,62,68,0,62,51,60],
[62,56,56,55,69,0,52,63],
[64,60,76,69,80,79,0,55],
[66,53,66,69,71,68,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,70,83,67,86,72],
[69,0,58,69,74,68,79,71],
[57,73,0,81,81,81,89,69],
[61,62,50,0,65,72,64,68],
[48,57,50,66,0,66,63,57],
[64,63,50,59,65,0,70,68],
[45,52,42,67,68,61,0,56],
[59,60,62,63,74,63,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,61,76,59,60,59],
[66,0,65,60,60,54,55,59],
[71,66,0,63,69,64,66,64],
[70,71,68,0,59,66,68,53],
[55,71,62,72,0,63,61,70],
[72,77,67,65,68,0,83,69],
[71,76,65,63,70,48,0,63],
[72,72,67,78,61,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,52,88,71,84,72,66],
[54,0,65,73,66,73,68,80],
[79,66,0,76,65,69,64,78],
[43,58,55,0,51,72,56,50],
[60,65,66,80,0,83,61,70],
[47,58,62,59,48,0,61,55],
[59,63,67,75,70,70,0,62],
[65,51,53,81,61,76,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,74,70,63,54,80],
[69,0,74,68,62,57,78,78],
[68,57,0,75,61,55,57,68],
[57,63,56,0,61,70,54,68],
[61,69,70,70,0,63,57,70],
[68,74,76,61,68,0,68,74],
[77,53,74,77,74,63,0,77],
[51,53,63,63,61,57,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,105,131,131,78,53,105,79],
[26,0,77,104,51,0,78,26],
[0,54,0,80,26,0,27,26],
[0,27,51,0,0,0,27,0],
[53,80,105,131,0,80,105,53],
[78,131,131,131,51,0,131,79],
[26,53,104,104,26,0,0,26],
[52,105,105,131,78,52,105,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,67,70,72,63,72,70],
[57,0,57,58,65,54,66,57],
[64,74,0,71,71,62,70,63],
[61,73,60,0,80,68,72,68],
[59,66,60,51,0,52,70,60],
[68,77,69,63,79,0,80,75],
[59,65,61,59,61,51,0,67],
[61,74,68,63,71,56,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,65,72,58,53,52,46],
[87,0,69,74,68,55,66,70],
[66,62,0,63,50,61,53,53],
[59,57,68,0,38,49,48,53],
[73,63,81,93,0,75,50,81],
[78,76,70,82,56,0,54,56],
[79,65,78,83,81,77,0,76],
[85,61,78,78,50,75,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,63,62,63,58,62],
[73,0,70,69,72,73,65,70],
[67,61,0,60,70,68,67,57],
[68,62,71,0,62,70,64,66],
[69,59,61,69,0,67,59,56],
[68,58,63,61,64,0,58,66],
[73,66,64,67,72,73,0,66],
[69,61,74,65,75,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,65,69,61,65,64],
[65,0,63,62,69,59,56,60],
[67,68,0,70,65,68,65,63],
[66,69,61,0,59,62,67,49],
[62,62,66,72,0,62,62,62],
[70,72,63,69,69,0,74,73],
[66,75,66,64,69,57,0,64],
[67,71,68,82,69,58,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,55,59,46,55,70,63],
[66,0,59,59,52,53,52,58],
[76,72,0,70,66,66,63,64],
[72,72,61,0,57,61,60,56],
[85,79,65,74,0,65,67,62],
[76,78,65,70,66,0,72,66],
[61,79,68,71,64,59,0,63],
[68,73,67,75,69,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,58,59,62,67,56],
[70,0,79,59,66,72,65,61],
[61,52,0,55,61,61,42,48],
[73,72,76,0,57,77,72,71],
[72,65,70,74,0,71,70,68],
[69,59,70,54,60,0,57,53],
[64,66,89,59,61,74,0,58],
[75,70,83,60,63,78,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,57,55,71,72,82],
[87,0,64,88,82,75,105,102],
[88,67,0,65,56,70,80,82],
[74,43,66,0,69,71,72,68],
[76,49,75,62,0,78,44,76],
[60,56,61,60,53,0,70,77],
[59,26,51,59,87,61,0,68],
[49,29,49,63,55,54,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,78,52,66,66,66,64],
[53,0,66,64,39,40,52,63],
[53,65,0,51,27,39,39,63],
[79,67,80,0,55,80,80,92],
[65,92,104,76,0,80,52,90],
[65,91,92,51,51,0,64,77],
[65,79,92,51,79,67,0,77],
[67,68,68,39,41,54,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,71,54,65,62,66,71],
[80,0,76,68,64,66,55,67],
[60,55,0,52,53,73,48,55],
[77,63,79,0,70,91,69,70],
[66,67,78,61,0,76,65,70],
[69,65,58,40,55,0,51,55],
[65,76,83,62,66,80,0,63],
[60,64,76,61,61,76,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,71,77,62,73,70,68],
[62,0,69,68,63,70,60,64],
[60,62,0,64,69,68,60,65],
[54,63,67,0,54,65,70,62],
[69,68,62,77,0,75,74,69],
[58,61,63,66,56,0,61,64],
[61,71,71,61,57,70,0,68],
[63,67,66,69,62,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,74,68,71,71,60,88],
[57,0,49,54,68,55,52,82],
[57,82,0,61,67,64,63,74],
[63,77,70,0,70,63,72,65],
[60,63,64,61,0,62,61,74],
[60,76,67,68,69,0,68,76],
[71,79,68,59,70,63,0,71],
[43,49,57,66,57,55,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,56,61,61,57,66],
[66,0,72,62,59,63,58,65],
[64,59,0,58,68,58,62,63],
[75,69,73,0,65,70,67,71],
[70,72,63,66,0,68,57,68],
[70,68,73,61,63,0,65,67],
[74,73,69,64,74,66,0,79],
[65,66,68,60,63,64,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,58,61,74,64,57],
[66,0,67,67,65,65,62,65],
[66,64,0,60,63,72,71,69],
[73,64,71,0,56,70,72,74],
[70,66,68,75,0,73,64,69],
[57,66,59,61,58,0,63,57],
[67,69,60,59,67,68,0,60],
[74,66,62,57,62,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,57,36,59,69,67,77],
[82,0,58,74,58,66,66,66],
[74,73,0,58,67,84,73,74],
[95,57,73,0,84,85,70,94],
[72,73,64,47,0,69,46,73],
[62,65,47,46,62,0,46,71],
[64,65,58,61,85,85,0,69],
[54,65,57,37,58,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,72,66,63,68,73],
[61,0,74,65,70,65,56,71],
[65,57,0,59,59,64,61,56],
[59,66,72,0,69,66,63,71],
[65,61,72,62,0,64,55,62],
[68,66,67,65,67,0,61,71],
[63,75,70,68,76,70,0,70],
[58,60,75,60,69,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,64,69,57,75,70],
[64,0,69,70,88,63,81,82],
[69,62,0,70,74,67,67,60],
[67,61,61,0,79,68,65,65],
[62,43,57,52,0,55,78,63],
[74,68,64,63,76,0,69,65],
[56,50,64,66,53,62,0,57],
[61,49,71,66,68,66,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,76,88,69,93,99,68],
[72,0,64,74,54,80,68,48],
[55,67,0,61,61,75,47,35],
[43,57,70,0,53,67,62,35],
[62,77,70,78,0,87,74,74],
[38,51,56,64,44,0,64,39],
[32,63,84,69,57,67,0,63],
[63,83,96,96,57,92,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,62,63,60,65,67],
[72,0,73,69,70,71,65,76],
[64,58,0,55,59,56,49,65],
[69,62,76,0,65,58,62,68],
[68,61,72,66,0,52,62,60],
[71,60,75,73,79,0,71,70],
[66,66,82,69,69,60,0,79],
[64,55,66,63,71,61,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,66,63,65,67,64],
[64,0,70,60,67,67,66,75],
[66,61,0,61,55,60,59,60],
[65,71,70,0,74,69,70,77],
[68,64,76,57,0,69,63,67],
[66,64,71,62,62,0,61,66],
[64,65,72,61,68,70,0,76],
[67,56,71,54,64,65,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,65,48,82,97,81],
[99,0,65,114,81,66,80,97],
[99,66,0,97,64,100,65,97],
[66,17,34,0,16,67,66,49],
[83,50,67,115,0,67,66,81],
[49,65,31,64,64,0,47,81],
[34,51,66,65,65,84,0,98],
[50,34,34,82,50,50,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,62,69,70,66,62,62],
[72,0,59,66,77,77,68,60],
[69,72,0,64,72,73,61,69],
[62,65,67,0,74,75,64,55],
[61,54,59,57,0,63,53,61],
[65,54,58,56,68,0,53,58],
[69,63,70,67,78,78,0,68],
[69,71,62,76,70,73,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,49,65,61,78,62,66],
[72,0,75,84,75,78,63,77],
[82,56,0,70,74,84,73,62],
[66,47,61,0,48,76,64,62],
[70,56,57,83,0,81,62,69],
[53,53,47,55,50,0,55,48],
[69,68,58,67,69,76,0,81],
[65,54,69,69,62,83,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,78,49,73,71,67],
[68,0,68,66,58,82,55,67],
[59,63,0,72,62,69,54,70],
[53,65,59,0,59,62,58,74],
[82,73,69,72,0,90,59,73],
[58,49,62,69,41,0,48,63],
[60,76,77,73,72,83,0,69],
[64,64,61,57,58,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,56,58,51,57,60,56],
[81,0,66,77,67,79,68,57],
[75,65,0,67,63,65,69,67],
[73,54,64,0,63,68,61,59],
[80,64,68,68,0,75,72,78],
[74,52,66,63,56,0,57,67],
[71,63,62,70,59,74,0,68],
[75,74,64,72,53,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,55,63,70,65,60,68],
[53,0,45,54,52,51,55,45],
[76,86,0,67,62,61,73,60],
[68,77,64,0,71,57,54,60],
[61,79,69,60,0,67,58,54],
[66,80,70,74,64,0,79,58],
[71,76,58,77,73,52,0,73],
[63,86,71,71,77,73,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,73,65,73,78,69,76],
[60,0,79,69,80,76,67,86],
[58,52,0,50,63,62,53,65],
[66,62,81,0,76,76,65,69],
[58,51,68,55,0,67,51,64],
[53,55,69,55,64,0,55,73],
[62,64,78,66,80,76,0,71],
[55,45,66,62,67,58,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,64,82,78,93,82,77],
[41,0,58,72,59,74,65,60],
[67,73,0,80,76,91,82,62],
[49,59,51,0,51,77,59,62],
[53,72,55,80,0,84,88,66],
[38,57,40,54,47,0,47,52],
[49,66,49,72,43,84,0,62],
[54,71,69,69,65,79,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,84,67,45,69,75,56],
[53,0,80,41,43,53,60,47],
[47,51,0,61,51,47,55,29],
[64,90,70,0,44,60,77,59],
[86,88,80,87,0,60,89,62],
[62,78,84,71,71,0,70,76],
[56,71,76,54,42,61,0,58],
[75,84,102,72,69,55,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,52,107,24,52,107,52],
[79,0,78,131,51,106,107,106],
[79,53,0,107,79,80,80,104],
[24,0,24,0,24,0,27,51],
[107,80,52,107,0,80,107,80],
[79,25,51,131,51,0,80,106],
[24,24,51,104,24,51,0,51],
[79,25,27,80,51,25,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,47,70,70,61,46,76],
[74,0,57,80,74,67,49,52],
[84,74,0,86,86,72,79,58],
[61,51,45,0,74,64,55,47],
[61,57,45,57,0,78,54,51],
[70,64,59,67,53,0,47,71],
[85,82,52,76,77,84,0,74],
[55,79,73,84,80,60,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,34,0,56,19,40,37],
[75,0,72,38,77,38,58,75],
[97,59,0,78,96,57,79,94],
[131,93,53,0,113,91,76,111],
[75,54,35,18,0,37,38,55],
[112,93,74,40,94,0,77,74],
[91,73,52,55,93,54,0,91],
[94,56,37,20,76,57,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,64,56,63,55,66,65],
[79,0,71,61,73,66,66,65],
[67,60,0,72,70,59,70,62],
[75,70,59,0,83,71,80,68],
[68,58,61,48,0,59,68,55],
[76,65,72,60,72,0,76,75],
[65,65,61,51,63,55,0,54],
[66,66,69,63,76,56,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,63,67,59,61,60,69],
[81,0,59,72,66,69,61,74],
[68,72,0,75,60,71,56,73],
[64,59,56,0,57,57,49,58],
[72,65,71,74,0,78,80,73],
[70,62,60,74,53,0,63,59],
[71,70,75,82,51,68,0,78],
[62,57,58,73,58,72,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,72,67,51,69,53,72],
[42,0,42,37,40,50,56,51],
[59,89,0,66,70,76,66,74],
[64,94,65,0,81,62,56,79],
[80,91,61,50,0,77,62,66],
[62,81,55,69,54,0,60,70],
[78,75,65,75,69,71,0,79],
[59,80,57,52,65,61,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,66,87,76,64,70,81],
[53,0,52,71,56,57,53,54],
[65,79,0,81,58,64,58,69],
[44,60,50,0,55,53,49,58],
[55,75,73,76,0,66,66,80],
[67,74,67,78,65,0,67,73],
[61,78,73,82,65,64,0,61],
[50,77,62,73,51,58,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,68,72,77,60,63],
[64,0,66,70,71,76,63,74],
[67,65,0,71,72,71,63,74],
[63,61,60,0,64,66,52,57],
[59,60,59,67,0,67,60,59],
[54,55,60,65,64,0,59,52],
[71,68,68,79,71,72,0,61],
[68,57,57,74,72,79,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,67,69,70,85,39],
[67,0,58,43,65,53,57,44],
[65,73,0,38,69,79,61,50],
[64,88,93,0,70,87,77,76],
[62,66,62,61,0,87,78,53],
[61,78,52,44,44,0,47,41],
[46,74,70,54,53,84,0,49],
[92,87,81,55,78,90,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,55,53,57,44,53],
[72,0,65,51,60,65,47,57],
[67,66,0,53,56,48,61,65],
[76,80,78,0,60,74,63,63],
[78,71,75,71,0,58,58,53],
[74,66,83,57,73,0,59,73],
[87,84,70,68,73,72,0,63],
[78,74,66,68,78,58,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,74,59,70,72,66,62],
[70,0,80,60,71,72,62,69],
[57,51,0,53,64,60,51,60],
[72,71,78,0,78,89,69,65],
[61,60,67,53,0,66,69,70],
[59,59,71,42,65,0,67,63],
[65,69,80,62,62,64,0,66],
[69,62,71,66,61,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,63,69,67,61,67,63],
[59,0,58,74,59,59,54,61],
[68,73,0,73,67,65,66,73],
[62,57,58,0,56,59,62,54],
[64,72,64,75,0,70,77,68],
[70,72,66,72,61,0,65,65],
[64,77,65,69,54,66,0,62],
[68,70,58,77,63,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,71,66,84,77,75],
[67,0,58,74,61,65,61,66],
[60,73,0,54,60,60,56,74],
[60,57,77,0,71,69,59,72],
[65,70,71,60,0,59,54,70],
[47,66,71,62,72,0,66,71],
[54,70,75,72,77,65,0,69],
[56,65,57,59,61,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,66,74,65,59,60,56],
[77,0,64,70,68,60,71,62],
[65,67,0,71,70,56,70,64],
[57,61,60,0,57,56,60,59],
[66,63,61,74,0,65,60,58],
[72,71,75,75,66,0,62,66],
[71,60,61,71,71,69,0,71],
[75,69,67,72,73,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,75,84,76,55,38,57],
[48,0,37,93,57,56,20,50],
[56,94,0,95,94,111,67,77],
[47,38,36,0,47,57,37,50],
[55,74,37,84,0,53,36,48],
[76,75,20,74,78,0,58,39],
[93,111,64,94,95,73,0,84],
[74,81,54,81,83,92,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,66,72,61,53,56],
[69,0,68,69,70,68,55,60],
[71,63,0,73,67,71,69,61],
[65,62,58,0,68,57,55,49],
[59,61,64,63,0,60,53,57],
[70,63,60,74,71,0,67,48],
[78,76,62,76,78,64,0,68],
[75,71,70,82,74,83,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,68,71,56,71,61,64],
[58,0,56,55,62,65,61,64],
[63,75,0,73,60,63,56,68],
[60,76,58,0,62,65,72,60],
[75,69,71,69,0,65,67,81],
[60,66,68,66,66,0,53,57],
[70,70,75,59,64,78,0,64],
[67,67,63,71,50,74,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,65,58,71,63,62],
[63,0,72,57,64,71,62,59],
[63,59,0,60,55,71,54,52],
[66,74,71,0,56,70,70,68],
[73,67,76,75,0,77,67,64],
[60,60,60,61,54,0,58,55],
[68,69,77,61,64,73,0,66],
[69,72,79,63,67,76,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,93,72,66,75,77,79],
[68,0,78,76,71,73,62,80],
[38,53,0,44,59,60,53,49],
[59,55,87,0,63,55,64,63],
[65,60,72,68,0,72,82,66],
[56,58,71,76,59,0,71,74],
[54,69,78,67,49,60,0,73],
[52,51,82,68,65,57,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,58,68,65,66,66,60],
[69,0,69,64,76,62,63,64],
[73,62,0,72,70,68,59,70],
[63,67,59,0,69,62,62,60],
[66,55,61,62,0,50,60,58],
[65,69,63,69,81,0,62,67],
[65,68,72,69,71,69,0,78],
[71,67,61,71,73,64,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,60,56,67,64,73,64],
[48,0,60,45,46,36,63,58],
[71,71,0,54,72,69,77,78],
[75,86,77,0,64,57,80,76],
[64,85,59,67,0,69,70,77],
[67,95,62,74,62,0,81,84],
[58,68,54,51,61,50,0,64],
[67,73,53,55,54,47,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,69,69,69,69,62,66],
[55,0,61,66,49,55,54,47],
[62,70,0,77,71,70,65,59],
[62,65,54,0,49,55,56,52],
[62,82,60,82,0,68,66,60],
[62,76,61,76,63,0,55,65],
[69,77,66,75,65,76,0,61],
[65,84,72,79,71,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,72,80,59,61,61],
[70,0,68,65,61,58,64,60],
[63,63,0,63,78,60,64,61],
[59,66,68,0,78,66,63,73],
[51,70,53,53,0,59,58,61],
[72,73,71,65,72,0,66,69],
[70,67,67,68,73,65,0,70],
[70,71,70,58,70,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,48,52,44,67,51,73],
[72,0,64,69,58,63,66,80],
[83,67,0,65,62,75,70,79],
[79,62,66,0,69,65,73,77],
[87,73,69,62,0,66,66,82],
[64,68,56,66,65,0,64,76],
[80,65,61,58,65,67,0,74],
[58,51,52,54,49,55,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,69,72,65,58,68,76],
[58,0,52,48,38,59,46,57],
[62,79,0,69,62,76,76,74],
[59,83,62,0,66,63,63,67],
[66,93,69,65,0,63,79,75],
[73,72,55,68,68,0,76,61],
[63,85,55,68,52,55,0,68],
[55,74,57,64,56,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,72,71,69,54,58,70],
[54,0,58,61,66,63,60,63],
[59,73,0,71,67,65,67,63],
[60,70,60,0,60,61,79,61],
[62,65,64,71,0,64,52,62],
[77,68,66,70,67,0,63,67],
[73,71,64,52,79,68,0,65],
[61,68,68,70,69,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,51,46,74,41,49,48],
[67,0,47,44,80,62,54,61],
[80,84,0,79,88,59,80,76],
[85,87,52,0,72,46,70,65],
[57,51,43,59,0,38,48,43],
[90,69,72,85,93,0,70,62],
[82,77,51,61,83,61,0,71],
[83,70,55,66,88,69,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,65,81,67,78,80,76],
[54,0,57,68,67,76,70,72],
[66,74,0,77,65,72,87,70],
[50,63,54,0,64,65,73,61],
[64,64,66,67,0,69,77,64],
[53,55,59,66,62,0,72,55],
[51,61,44,58,54,59,0,51],
[55,59,61,70,67,76,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,61,71,75,71,65,77],
[60,0,44,63,64,69,61,68],
[70,87,0,74,64,75,68,75],
[60,68,57,0,67,62,64,62],
[56,67,67,64,0,69,56,55],
[60,62,56,69,62,0,59,59],
[66,70,63,67,75,72,0,70],
[54,63,56,69,76,72,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,60,60,48,43,59,57],
[84,0,78,79,62,84,78,71],
[71,53,0,70,65,60,74,61],
[71,52,61,0,49,66,62,54],
[83,69,66,82,0,70,79,64],
[88,47,71,65,61,0,71,54],
[72,53,57,69,52,60,0,51],
[74,60,70,77,67,77,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,73,66,78,70,65,70],
[59,0,77,61,79,78,75,72],
[58,54,0,53,62,67,73,63],
[65,70,78,0,75,73,73,63],
[53,52,69,56,0,70,68,58],
[61,53,64,58,61,0,55,65],
[66,56,58,58,63,76,0,64],
[61,59,68,68,73,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,87,109,22,87,131,65],
[87,0,87,87,66,65,109,65],
[44,44,0,65,0,65,109,65],
[22,44,66,0,44,65,88,65],
[109,65,131,87,0,65,109,87],
[44,66,66,66,66,0,88,65],
[0,22,22,43,22,43,0,21],
[66,66,66,66,44,66,110,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,55,58,68,68,68,71],
[54,0,60,46,60,59,69,65],
[76,71,0,64,60,65,78,80],
[73,85,67,0,65,74,76,76],
[63,71,71,66,0,74,80,77],
[63,72,66,57,57,0,71,68],
[63,62,53,55,51,60,0,64],
[60,66,51,55,54,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,67,69,86,65,61,74],
[54,0,65,55,91,66,41,58],
[64,66,0,50,70,57,43,67],
[62,76,81,0,78,62,48,58],
[45,40,61,53,0,53,41,57],
[66,65,74,69,78,0,45,51],
[70,90,88,83,90,86,0,55],
[57,73,64,73,74,80,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,73,131,72,89,87,102],
[72,0,101,88,87,104,74,59],
[58,30,0,88,71,76,58,59],
[0,43,43,0,57,46,14,57],
[59,44,60,74,0,61,43,58],
[42,27,55,85,70,0,57,55],
[44,57,73,117,88,74,0,88],
[29,72,72,74,73,76,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,58,63,50,53,64,59],
[76,0,65,73,75,82,83,89],
[73,66,0,57,52,63,68,62],
[68,58,74,0,66,68,73,60],
[81,56,79,65,0,75,68,52],
[78,49,68,63,56,0,66,75],
[67,48,63,58,63,65,0,49],
[72,42,69,71,79,56,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,68,66,66,59,73,65],
[59,0,70,70,62,58,75,66],
[63,61,0,67,61,58,66,70],
[65,61,64,0,55,61,63,70],
[65,69,70,76,0,71,76,78],
[72,73,73,70,60,0,63,76],
[58,56,65,68,55,68,0,63],
[66,65,61,61,53,55,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,65,93,61,58,72,91],
[56,0,75,83,67,76,73,91],
[66,56,0,74,72,45,50,86],
[38,48,57,0,65,48,51,62],
[70,64,59,66,0,59,66,77],
[73,55,86,83,72,0,74,75],
[59,58,81,80,65,57,0,78],
[40,40,45,69,54,56,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,25,104,78,51,25,104],
[54,0,28,54,53,54,25,54],
[106,103,0,131,78,51,103,106],
[27,77,0,0,25,0,25,27],
[53,78,53,106,0,53,53,81],
[80,77,80,131,78,0,52,106],
[106,106,28,106,78,79,0,106],
[27,77,25,104,50,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,75,75,83,77,86,84],
[70,0,64,79,81,83,82,82],
[56,67,0,76,78,62,89,66],
[56,52,55,0,71,69,73,73],
[48,50,53,60,0,54,59,57],
[54,48,69,62,77,0,79,58],
[45,49,42,58,72,52,0,62],
[47,49,65,58,74,73,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,60,70,65,70,72,69],
[55,0,54,60,51,52,60,46],
[71,77,0,72,69,72,64,72],
[61,71,59,0,67,68,67,71],
[66,80,62,64,0,67,63,57],
[61,79,59,63,64,0,64,69],
[59,71,67,64,68,67,0,73],
[62,85,59,60,74,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,65,64,68,66,59],
[66,0,64,61,60,66,60,58],
[59,67,0,61,66,65,68,59],
[66,70,70,0,62,64,72,69],
[67,71,65,69,0,68,66,63],
[63,65,66,67,63,0,62,53],
[65,71,63,59,65,69,0,71],
[72,73,72,62,68,78,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,55,66,64,58,67,59],
[66,0,60,67,57,57,62,56],
[76,71,0,79,55,67,72,58],
[65,64,52,0,59,58,60,54],
[67,74,76,72,0,69,71,65],
[73,74,64,73,62,0,69,73],
[64,69,59,71,60,62,0,64],
[72,75,73,77,66,58,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,58,71,70,89,76,67],
[72,0,57,71,65,82,76,81],
[73,74,0,59,76,83,74,76],
[60,60,72,0,75,97,84,81],
[61,66,55,56,0,78,80,67],
[42,49,48,34,53,0,56,62],
[55,55,57,47,51,75,0,58],
[64,50,55,50,64,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,73,56,71,67,76,69],
[46,0,59,59,56,56,57,51],
[58,72,0,66,65,64,51,61],
[75,72,65,0,70,72,65,64],
[60,75,66,61,0,64,66,62],
[64,75,67,59,67,0,60,68],
[55,74,80,66,65,71,0,64],
[62,80,70,67,69,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,62,45,60,43,44,55],
[81,0,87,76,91,69,65,94],
[69,44,0,67,73,65,57,64],
[86,55,64,0,71,59,67,72],
[71,40,58,60,0,59,61,54],
[88,62,66,72,72,0,72,74],
[87,66,74,64,70,59,0,72],
[76,37,67,59,77,57,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,49,50,17,17,69,17],
[81,0,65,67,49,33,34,49],
[82,66,0,65,82,66,67,82],
[81,64,66,0,51,49,67,81],
[114,82,49,80,0,64,84,80],
[114,98,65,82,67,0,84,80],
[62,97,64,64,47,47,0,62],
[114,82,49,50,51,51,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,70,50,61,59,70,70],
[92,0,92,51,63,51,71,101],
[61,39,0,40,41,31,51,81],
[81,80,91,0,61,80,82,71],
[70,68,90,70,0,79,61,90],
[72,80,100,51,52,0,62,81],
[61,60,80,49,70,69,0,50],
[61,30,50,60,41,50,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,63,67,60,67,76],
[64,0,65,69,70,64,69,68],
[66,66,0,69,78,60,71,77],
[68,62,62,0,79,73,72,65],
[64,61,53,52,0,54,58,70],
[71,67,71,58,77,0,73,72],
[64,62,60,59,73,58,0,74],
[55,63,54,66,61,59,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,64,67,60,68,69],
[65,0,54,63,66,66,69,74],
[63,77,0,68,66,61,68,74],
[67,68,63,0,69,66,76,77],
[64,65,65,62,0,68,67,67],
[71,65,70,65,63,0,68,71],
[63,62,63,55,64,63,0,67],
[62,57,57,54,64,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,61,67,72,69,65],
[64,0,59,57,59,62,77,70],
[66,72,0,62,66,66,64,69],
[70,74,69,0,72,64,69,78],
[64,72,65,59,0,65,67,65],
[59,69,65,67,66,0,64,74],
[62,54,67,62,64,67,0,63],
[66,61,62,53,66,57,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,73,79,71,73,59,64],
[57,0,68,81,67,65,58,54],
[58,63,0,79,76,66,55,66],
[52,50,52,0,60,65,52,55],
[60,64,55,71,0,65,48,61],
[58,66,65,66,66,0,58,59],
[72,73,76,79,83,73,0,64],
[67,77,65,76,70,72,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,48,70,70,62,78,85],
[67,0,62,45,76,69,83,90],
[83,69,0,61,83,71,74,100],
[61,86,70,0,78,70,71,85],
[61,55,48,53,0,40,63,67],
[69,62,60,61,91,0,82,100],
[53,48,57,60,68,49,0,63],
[46,41,31,46,64,31,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,61,67,56,64,72],
[65,0,74,61,62,71,68,61],
[64,57,0,59,61,57,75,66],
[70,70,72,0,72,70,76,65],
[64,69,70,59,0,60,57,71],
[75,60,74,61,71,0,74,64],
[67,63,56,55,74,57,0,65],
[59,70,65,66,60,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,67,59,57,61,70],
[70,0,69,60,69,60,54,66],
[68,62,0,57,58,63,55,71],
[64,71,74,0,72,67,59,63],
[72,62,73,59,0,60,62,69],
[74,71,68,64,71,0,59,71],
[70,77,76,72,69,72,0,63],
[61,65,60,68,62,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,77,89,40,65,65,48],
[74,0,69,70,60,77,77,58],
[54,62,0,75,68,83,70,52],
[42,61,56,0,66,72,50,60],
[91,71,63,65,0,63,77,61],
[66,54,48,59,68,0,58,64],
[66,54,61,81,54,73,0,67],
[83,73,79,71,70,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,71,73,66,65,66],
[69,0,58,65,66,56,69,68],
[68,73,0,70,74,71,65,63],
[60,66,61,0,60,57,62,65],
[58,65,57,71,0,59,68,68],
[65,75,60,74,72,0,59,74],
[66,62,66,69,63,72,0,69],
[65,63,68,66,63,57,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,76,73,64,74,77,65],
[53,0,68,51,53,57,63,58],
[55,63,0,42,51,51,64,65],
[58,80,89,0,64,66,75,67],
[67,78,80,67,0,62,73,64],
[57,74,80,65,69,0,77,64],
[54,68,67,56,58,54,0,74],
[66,73,66,64,67,67,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,54,88,62,78,53,69],
[54,0,40,50,40,47,55,56],
[77,91,0,90,83,83,60,80],
[43,81,41,0,60,48,55,59],
[69,91,48,71,0,71,67,72],
[53,84,48,83,60,0,48,61],
[78,76,71,76,64,83,0,74],
[62,75,51,72,59,70,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,72,60,65,64,69,64],
[82,0,74,66,65,64,67,61],
[59,57,0,57,52,54,60,52],
[71,65,74,0,66,74,58,59],
[66,66,79,65,0,61,66,85],
[67,67,77,57,70,0,70,71],
[62,64,71,73,65,61,0,85],
[67,70,79,72,46,60,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,86,68,76,93,58,81],
[43,0,86,68,68,50,51,80],
[45,45,0,61,33,43,34,58],
[63,63,70,0,51,50,71,83],
[55,63,98,80,0,68,63,74],
[38,81,88,81,63,0,47,81],
[73,80,97,60,68,84,0,73],
[50,51,73,48,57,50,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,65,68,69,72,62,68],
[58,0,55,63,78,64,67,58],
[66,76,0,52,68,68,62,54],
[63,68,79,0,77,79,65,69],
[62,53,63,54,0,76,71,68],
[59,67,63,52,55,0,62,58],
[69,64,69,66,60,69,0,65],
[63,73,77,62,63,73,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,69,73,66,70,65],
[60,0,57,57,71,48,64,57],
[66,74,0,64,67,68,69,66],
[62,74,67,0,74,65,73,62],
[58,60,64,57,0,57,60,60],
[65,83,63,66,74,0,71,71],
[61,67,62,58,71,60,0,60],
[66,74,65,69,71,60,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,66,78,77,65,75,60],
[52,0,56,65,56,66,66,56],
[65,75,0,68,65,62,73,61],
[53,66,63,0,63,55,74,64],
[54,75,66,68,0,62,62,70],
[66,65,69,76,69,0,74,80],
[56,65,58,57,69,57,0,51],
[71,75,70,67,61,51,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,51,64,58,61,67,53],
[66,0,48,59,69,60,48,57],
[80,83,0,70,69,63,71,70],
[67,72,61,0,85,64,68,68],
[73,62,62,46,0,63,58,54],
[70,71,68,67,68,0,78,65],
[64,83,60,63,73,53,0,56],
[78,74,61,63,77,66,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,71,61,53,45,53,56],
[69,0,74,53,53,59,55,80],
[60,57,0,49,57,53,43,55],
[70,78,82,0,63,77,75,67],
[78,78,74,68,0,66,58,82],
[86,72,78,54,65,0,67,72],
[78,76,88,56,73,64,0,81],
[75,51,76,64,49,59,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,53,56,61,53,62,49],
[52,0,56,41,46,53,50,60],
[78,75,0,58,61,67,52,59],
[75,90,73,0,60,56,74,61],
[70,85,70,71,0,74,65,62],
[78,78,64,75,57,0,70,66],
[69,81,79,57,66,61,0,62],
[82,71,72,70,69,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,45,40,45,74,60],
[73,0,14,32,55,44,42,32],
[73,117,0,46,71,58,42,77],
[86,99,85,0,68,72,56,77],
[91,76,60,63,0,77,60,63],
[86,87,73,59,54,0,56,77],
[57,89,89,75,71,75,0,90],
[71,99,54,54,68,54,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,73,60,61,63,56,66],
[74,0,64,58,69,62,63,68],
[58,67,0,59,64,54,60,64],
[71,73,72,0,74,64,71,65],
[70,62,67,57,0,64,55,58],
[68,69,77,67,67,0,51,68],
[75,68,71,60,76,80,0,68],
[65,63,67,66,73,63,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,53,55,49,60,65,52],
[68,0,58,64,59,54,71,55],
[78,73,0,72,73,59,64,66],
[76,67,59,0,60,65,62,67],
[82,72,58,71,0,61,66,63],
[71,77,72,66,70,0,71,60],
[66,60,67,69,65,60,0,65],
[79,76,65,64,68,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,71,82,79,77,70,63],
[51,0,54,64,64,76,58,69],
[60,77,0,64,69,76,75,50],
[49,67,67,0,57,65,55,53],
[52,67,62,74,0,79,62,64],
[54,55,55,66,52,0,55,58],
[61,73,56,76,69,76,0,61],
[68,62,81,78,67,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,78,62,52,50,69,71],
[54,0,52,52,36,42,44,46],
[53,79,0,54,60,51,36,51],
[69,79,77,0,67,61,51,60],
[79,95,71,64,0,80,71,89],
[81,89,80,70,51,0,55,63],
[62,87,95,80,60,76,0,78],
[60,85,80,71,42,68,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,67,56,59,66,58,68],
[51,0,47,44,36,45,40,48],
[64,84,0,49,57,59,53,70],
[75,87,82,0,68,63,74,77],
[72,95,74,63,0,72,64,71],
[65,86,72,68,59,0,58,70],
[73,91,78,57,67,73,0,69],
[63,83,61,54,60,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,58,59,53,51,55,84],
[67,0,53,72,58,60,42,86],
[73,78,0,64,66,70,76,78],
[72,59,67,0,68,69,56,68],
[78,73,65,63,0,83,64,88],
[80,71,61,62,48,0,70,64],
[76,89,55,75,67,61,0,87],
[47,45,53,63,43,67,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,50,59,57,53,45,60],
[73,0,64,75,81,72,64,71],
[81,67,0,78,75,64,60,77],
[72,56,53,0,66,54,61,72],
[74,50,56,65,0,66,52,70],
[78,59,67,77,65,0,67,60],
[86,67,71,70,79,64,0,76],
[71,60,54,59,61,71,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,65,69,71,73,73],
[62,0,57,68,52,66,65,64],
[70,74,0,66,70,76,73,64],
[66,63,65,0,64,67,66,69],
[62,79,61,67,0,68,70,63],
[60,65,55,64,63,0,62,70],
[58,66,58,65,61,69,0,60],
[58,67,67,62,68,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,46,41,46,63,75,60],
[75,0,44,57,55,54,65,56],
[85,87,0,70,69,58,81,79],
[90,74,61,0,65,66,70,66],
[85,76,62,66,0,76,78,70],
[68,77,73,65,55,0,63,69],
[56,66,50,61,53,68,0,66],
[71,75,52,65,61,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,70,68,62,74,74,64],
[57,0,67,61,62,65,77,65],
[61,64,0,62,53,59,68,58],
[63,70,69,0,69,63,77,67],
[69,69,78,62,0,67,82,75],
[57,66,72,68,64,0,76,66],
[57,54,63,54,49,55,0,55],
[67,66,73,64,56,65,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,43,64,82,74,60,63],
[55,0,67,57,79,68,66,60],
[88,64,0,55,88,78,92,71],
[67,74,76,0,72,65,64,64],
[49,52,43,59,0,67,62,31],
[57,63,53,66,64,0,75,34],
[71,65,39,67,69,56,0,51],
[68,71,60,67,100,97,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,61,56,52,68,49,59],
[82,0,71,67,76,56,87,64],
[70,60,0,66,70,63,66,75],
[75,64,65,0,54,71,59,70],
[79,55,61,77,0,60,69,72],
[63,75,68,60,71,0,88,64],
[82,44,65,72,62,43,0,63],
[72,67,56,61,59,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,74,74,76,60,68,78],
[63,0,66,67,77,61,62,73],
[57,65,0,60,65,44,56,66],
[57,64,71,0,67,68,57,78],
[55,54,66,64,0,59,57,52],
[71,70,87,63,72,0,66,76],
[63,69,75,74,74,65,0,66],
[53,58,65,53,79,55,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,61,58,51,65,59,51],
[83,0,70,67,60,58,64,66],
[70,61,0,59,61,64,58,50],
[73,64,72,0,68,61,65,73],
[80,71,70,63,0,66,77,60],
[66,73,67,70,65,0,61,63],
[72,67,73,66,54,70,0,57],
[80,65,81,58,71,68,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,62,64,71,71,56],
[65,0,69,61,65,71,72,68],
[65,62,0,77,64,72,78,72],
[69,70,54,0,62,62,69,54],
[67,66,67,69,0,67,81,64],
[60,60,59,69,64,0,69,58],
[60,59,53,62,50,62,0,53],
[75,63,59,77,67,73,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,84,72,73,54,77],
[65,0,58,82,59,76,51,63],
[66,73,0,88,68,77,64,66],
[47,49,43,0,56,61,52,64],
[59,72,63,75,0,73,69,76],
[58,55,54,70,58,0,58,62],
[77,80,67,79,62,73,0,72],
[54,68,65,67,55,69,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,68,60,68,63,71,71],
[57,0,62,56,63,59,69,65],
[63,69,0,61,60,73,73,64],
[71,75,70,0,58,69,79,66],
[63,68,71,73,0,70,65,64],
[68,72,58,62,61,0,66,66],
[60,62,58,52,66,65,0,62],
[60,66,67,65,67,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,76,67,68,77,64,77],
[59,0,62,59,54,69,52,63],
[55,69,0,66,58,67,67,67],
[64,72,65,0,62,69,70,66],
[63,77,73,69,0,70,72,71],
[54,62,64,62,61,0,63,60],
[67,79,64,61,59,68,0,58],
[54,68,64,65,60,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,72,82,86,67,61,74],
[73,0,53,77,74,61,61,77],
[59,78,0,84,74,67,72,74],
[49,54,47,0,66,47,70,75],
[45,57,57,65,0,65,55,59],
[64,70,64,84,66,0,83,66],
[70,70,59,61,76,48,0,70],
[57,54,57,56,72,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,62,71,66,78,69],
[66,0,62,65,85,78,80,56],
[59,69,0,70,68,63,80,55],
[69,66,61,0,66,68,79,63],
[60,46,63,65,0,60,71,64],
[65,53,68,63,71,0,73,56],
[53,51,51,52,60,58,0,48],
[62,75,76,68,67,75,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,54,60,66,50,59,66],
[68,0,58,65,69,56,74,68],
[77,73,0,67,80,51,82,69],
[71,66,64,0,62,68,65,64],
[65,62,51,69,0,49,60,51],
[81,75,80,63,82,0,83,73],
[72,57,49,66,71,48,0,65],
[65,63,62,67,80,58,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,81,50,55,56,62,54],
[72,0,77,70,61,54,64,55],
[50,54,0,49,49,53,57,38],
[81,61,82,0,73,76,62,62],
[76,70,82,58,0,68,54,66],
[75,77,78,55,63,0,77,72],
[69,67,74,69,77,54,0,51],
[77,76,93,69,65,59,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,96,96,96,64,96,96,131],
[35,0,67,32,67,32,99,67],
[35,64,0,64,0,32,32,131],
[35,99,67,0,67,0,67,67],
[67,64,131,64,0,64,64,131],
[35,99,99,131,67,0,67,99],
[35,32,99,64,67,64,0,99],
[0,64,0,64,0,32,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,59,60,61,54,70,51],
[85,0,70,70,74,73,75,61],
[72,61,0,69,69,58,77,69],
[71,61,62,0,66,65,64,66],
[70,57,62,65,0,48,66,51],
[77,58,73,66,83,0,68,69],
[61,56,54,67,65,63,0,60],
[80,70,62,65,80,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,51,62,45,59,75],
[66,0,63,69,64,57,61,72],
[64,68,0,71,74,58,71,76],
[80,62,60,0,68,51,71,78],
[69,67,57,63,0,67,70,66],
[86,74,73,80,64,0,67,79],
[72,70,60,60,61,64,0,70],
[56,59,55,53,65,52,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,56,58,63,55,80],
[66,0,62,80,59,75,59,81],
[71,69,0,61,71,79,78,82],
[75,51,70,0,40,74,68,71],
[73,72,60,91,0,71,77,90],
[68,56,52,57,60,0,77,84],
[76,72,53,63,54,54,0,80],
[51,50,49,60,41,47,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,64,72,65,73,64,65],
[52,0,59,53,54,65,53,58],
[67,72,0,66,56,75,61,68],
[59,78,65,0,66,72,70,62],
[66,77,75,65,0,75,69,65],
[58,66,56,59,56,0,66,57],
[67,78,70,61,62,65,0,66],
[66,73,63,69,66,74,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,67,65,79,65,68,74],
[54,0,69,54,58,69,52,52],
[64,62,0,69,59,59,64,62],
[66,77,62,0,58,71,62,62],
[52,73,72,73,0,69,56,61],
[66,62,72,60,62,0,67,66],
[63,79,67,69,75,64,0,68],
[57,79,69,69,70,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,59,81,73,72,69,57],
[74,0,55,76,66,63,63,65],
[72,76,0,79,66,63,61,79],
[50,55,52,0,60,42,55,54],
[58,65,65,71,0,60,66,56],
[59,68,68,89,71,0,63,84],
[62,68,70,76,65,68,0,59],
[74,66,52,77,75,47,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,64,63,72,71,63,60],
[56,0,63,63,70,71,64,54],
[67,68,0,61,67,73,73,63],
[68,68,70,0,69,78,61,69],
[59,61,64,62,0,63,58,70],
[60,60,58,53,68,0,55,54],
[68,67,58,70,73,76,0,67],
[71,77,68,62,61,77,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,64,68,79,73,52],
[66,0,56,53,63,53,80,57],
[59,75,0,80,66,77,82,67],
[67,78,51,0,68,60,66,49],
[63,68,65,63,0,64,50,61],
[52,78,54,71,67,0,89,59],
[58,51,49,65,81,42,0,51],
[79,74,64,82,70,72,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,77,67,60,60,68],
[67,0,67,64,62,68,56,53],
[59,64,0,74,63,62,56,59],
[54,67,57,0,57,56,52,60],
[64,69,68,74,0,65,63,60],
[71,63,69,75,66,0,56,64],
[71,75,75,79,68,75,0,54],
[63,78,72,71,71,67,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,69,68,72,59,68,64],
[57,0,57,70,69,70,71,74],
[62,74,0,72,68,72,79,66],
[63,61,59,0,57,55,62,59],
[59,62,63,74,0,59,56,60],
[72,61,59,76,72,0,76,75],
[63,60,52,69,75,55,0,55],
[67,57,65,72,71,56,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,69,59,66,61,65,56],
[51,0,55,67,63,53,53,52],
[62,76,0,65,60,53,57,36],
[72,64,66,0,70,66,61,68],
[65,68,71,61,0,51,56,60],
[70,78,78,65,80,0,66,69],
[66,78,74,70,75,65,0,73],
[75,79,95,63,71,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,70,61,68,67,72],
[64,0,68,68,70,66,81,83],
[71,63,0,69,63,70,73,80],
[61,63,62,0,71,50,69,69],
[70,61,68,60,0,59,71,73],
[63,65,61,81,72,0,69,80],
[64,50,58,62,60,62,0,63],
[59,48,51,62,58,51,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,63,75,57,69,78,72],
[76,0,62,73,57,72,77,64],
[68,69,0,70,43,53,75,73],
[56,58,61,0,48,54,67,68],
[74,74,88,83,0,61,88,77],
[62,59,78,77,70,0,76,78],
[53,54,56,64,43,55,0,58],
[59,67,58,63,54,53,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,63,67,61,61,65],
[59,0,65,59,59,62,59,69],
[65,66,0,60,61,62,54,69],
[68,72,71,0,68,61,61,67],
[64,72,70,63,0,55,67,70],
[70,69,69,70,76,0,64,76],
[70,72,77,70,64,67,0,68],
[66,62,62,64,61,55,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,53,37,50,53,51,53],
[81,0,54,69,84,70,66,19],
[78,77,0,63,63,30,98,46],
[94,62,68,0,79,49,82,32],
[81,47,68,52,0,53,35,66],
[78,61,101,82,78,0,113,80],
[80,65,33,49,96,18,0,65],
[78,112,85,99,65,51,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,60,66,68,58,61],
[63,0,81,72,73,81,79,64],
[63,50,0,64,64,73,70,49],
[71,59,67,0,79,77,70,67],
[65,58,67,52,0,73,78,63],
[63,50,58,54,58,0,70,75],
[73,52,61,61,53,61,0,54],
[70,67,82,64,68,56,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,78,64,64,69,73,68],
[52,0,67,58,64,61,54,56],
[53,64,0,55,63,60,68,56],
[67,73,76,0,65,60,74,67],
[67,67,68,66,0,64,72,76],
[62,70,71,71,67,0,73,74],
[58,77,63,57,59,58,0,60],
[63,75,75,64,55,57,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,54,55,82,81,73,77],
[62,0,71,63,67,69,60,73],
[77,60,0,72,74,72,77,81],
[76,68,59,0,74,73,67,81],
[49,64,57,57,0,69,66,73],
[50,62,59,58,62,0,62,77],
[58,71,54,64,65,69,0,83],
[54,58,50,50,58,54,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,60,63,54,65,58],
[60,0,63,58,68,55,63,62],
[61,68,0,58,65,58,65,53],
[71,73,73,0,67,67,65,71],
[68,63,66,64,0,53,72,69],
[77,76,73,64,78,0,67,66],
[66,68,66,66,59,64,0,63],
[73,69,78,60,62,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,63,42,44,70,55,63],
[74,0,72,81,58,74,57,74],
[68,59,0,68,61,73,68,75],
[89,50,63,0,66,76,71,75],
[87,73,70,65,0,85,77,82],
[61,57,58,55,46,0,44,64],
[76,74,63,60,54,87,0,81],
[68,57,56,56,49,67,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,67,69,54,69,64,77],
[60,0,72,77,60,68,57,63],
[64,59,0,63,52,61,63,74],
[62,54,68,0,41,65,51,61],
[77,71,79,90,0,74,72,63],
[62,63,70,66,57,0,61,60],
[67,74,68,80,59,70,0,74],
[54,68,57,70,68,71,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,59,76,71,67,65],
[65,0,59,63,63,56,63,61],
[66,72,0,59,65,69,63,61],
[72,68,72,0,75,68,68,65],
[55,68,66,56,0,69,62,69],
[60,75,62,63,62,0,66,68],
[64,68,68,63,69,65,0,69],
[66,70,70,66,62,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,62,64,64,86,71],
[63,0,75,65,68,73,69,72],
[58,56,0,64,64,68,84,66],
[69,66,67,0,64,66,79,69],
[67,63,67,67,0,73,76,66],
[67,58,63,65,58,0,74,67],
[45,62,47,52,55,57,0,53],
[60,59,65,62,65,64,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,72,64,59,66,69],
[66,0,73,66,71,57,76,67],
[58,58,0,69,71,60,72,64],
[59,65,62,0,57,66,66,59],
[67,60,60,74,0,55,64,60],
[72,74,71,65,76,0,80,63],
[65,55,59,65,67,51,0,56],
[62,64,67,72,71,68,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,65,64,65,77,73],
[60,0,53,66,55,53,47,76],
[61,78,0,68,66,55,66,74],
[66,65,63,0,62,64,70,73],
[67,76,65,69,0,66,67,77],
[66,78,76,67,65,0,67,66],
[54,84,65,61,64,64,0,70],
[58,55,57,58,54,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,78,78,55,62,76],
[68,0,58,66,65,66,59,71],
[62,73,0,68,85,61,66,73],
[53,65,63,0,74,66,69,77],
[53,66,46,57,0,60,57,51],
[76,65,70,65,71,0,68,72],
[69,72,65,62,74,63,0,65],
[55,60,58,54,80,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,73,59,66,70,63],
[68,0,61,63,66,63,76,70],
[68,70,0,65,63,69,68,66],
[58,68,66,0,61,65,62,69],
[72,65,68,70,0,70,73,65],
[65,68,62,66,61,0,68,63],
[61,55,63,69,58,63,0,64],
[68,61,65,62,66,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,69,74,59,55,70,59],
[72,0,69,71,65,63,56,55],
[62,62,0,66,54,47,54,66],
[57,60,65,0,55,43,63,57],
[72,66,77,76,0,68,68,61],
[76,68,84,88,63,0,80,61],
[61,75,77,68,63,51,0,65],
[72,76,65,74,70,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,74,72,66,64,64],
[62,0,75,65,62,65,70,70],
[64,56,0,65,67,65,64,59],
[57,66,66,0,63,62,70,62],
[59,69,64,68,0,59,69,66],
[65,66,66,69,72,0,72,67],
[67,61,67,61,62,59,0,62],
[67,61,72,69,65,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,73,68,66,68,71],
[71,0,71,63,64,64,70,73],
[62,60,0,65,53,59,68,67],
[58,68,66,0,60,58,65,71],
[63,67,78,71,0,58,66,71],
[65,67,72,73,73,0,71,72],
[63,61,63,66,65,60,0,66],
[60,58,64,60,60,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,60,66,71,61,51,59],
[62,0,63,58,37,46,51,47],
[71,68,0,71,68,60,59,67],
[65,73,60,0,55,52,60,46],
[60,94,63,76,0,63,73,64],
[70,85,71,79,68,0,69,64],
[80,80,72,71,58,62,0,60],
[72,84,64,85,67,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,50,65,60,63,62,56],
[67,0,62,70,79,61,74,68],
[81,69,0,69,65,65,70,67],
[66,61,62,0,72,71,82,74],
[71,52,66,59,0,65,74,61],
[68,70,66,60,66,0,75,66],
[69,57,61,49,57,56,0,53],
[75,63,64,57,70,65,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,63,69,54,71,63,66],
[74,0,77,65,72,67,74,70],
[68,54,0,78,61,72,66,75],
[62,66,53,0,55,59,52,54],
[77,59,70,76,0,69,68,64],
[60,64,59,72,62,0,65,61],
[68,57,65,79,63,66,0,72],
[65,61,56,77,67,70,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,80,66,77,66,76,61],
[43,0,43,46,58,40,60,55],
[51,88,0,50,67,60,73,69],
[65,85,81,0,67,66,85,62],
[54,73,64,64,0,58,72,50],
[65,91,71,65,73,0,73,66],
[55,71,58,46,59,58,0,51],
[70,76,62,69,81,65,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,52,63,49,62,63,65],
[54,0,58,52,59,71,61,64],
[79,73,0,67,61,68,67,69],
[68,79,64,0,70,73,75,76],
[82,72,70,61,0,75,65,71],
[69,60,63,58,56,0,61,66],
[68,70,64,56,66,70,0,73],
[66,67,62,55,60,65,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,71,78,75,60,75],
[64,0,66,67,68,71,75,75],
[66,65,0,56,68,68,69,71],
[60,64,75,0,80,68,72,77],
[53,63,63,51,0,60,55,70],
[56,60,63,63,71,0,56,73],
[71,56,62,59,76,75,0,72],
[56,56,60,54,61,58,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,64,69,68,60,69],
[62,0,63,63,68,64,70,70],
[70,68,0,69,63,66,73,65],
[67,68,62,0,64,66,71,65],
[62,63,68,67,0,67,66,67],
[63,67,65,65,64,0,68,69],
[71,61,58,60,65,63,0,65],
[62,61,66,66,64,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,56,55,73,78,64,69],
[68,0,61,67,76,83,59,66],
[75,70,0,65,73,75,69,68],
[76,64,66,0,78,75,70,75],
[58,55,58,53,0,67,60,60],
[53,48,56,56,64,0,57,65],
[67,72,62,61,71,74,0,72],
[62,65,63,56,71,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,73,95,88,94,66,80],
[86,0,87,95,80,87,50,80],
[58,44,0,80,94,64,58,80],
[36,36,51,0,66,42,44,51],
[43,51,37,65,0,44,30,50],
[37,44,67,89,87,0,51,73],
[65,81,73,87,101,80,0,72],
[51,51,51,80,81,58,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,62,67,72,62,72],
[65,0,76,64,70,60,65,66],
[60,55,0,61,61,64,69,54],
[69,67,70,0,66,65,66,71],
[64,61,70,65,0,69,74,63],
[59,71,67,66,62,0,66,63],
[69,66,62,65,57,65,0,62],
[59,65,77,60,68,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,70,60,72,48,60,71],
[58,0,95,70,83,58,70,107],
[61,36,0,60,48,37,48,48],
[71,61,71,0,60,72,61,61],
[59,48,83,71,0,59,49,84],
[83,73,94,59,72,0,60,95],
[71,61,83,70,82,71,0,72],
[60,24,83,70,47,36,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,74,78,70,64,69,67],
[46,0,68,63,57,55,53,52],
[57,63,0,72,54,67,58,53],
[53,68,59,0,66,65,58,61],
[61,74,77,65,0,76,64,67],
[67,76,64,66,55,0,56,58],
[62,78,73,73,67,75,0,63],
[64,79,78,70,64,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,77,79,84,77,62,67],
[55,0,74,85,76,71,67,76],
[54,57,0,53,56,63,54,62],
[52,46,78,0,67,56,76,63],
[47,55,75,64,0,54,51,57],
[54,60,68,75,77,0,64,58],
[69,64,77,55,80,67,0,67],
[64,55,69,68,74,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,51,50,41,38,50,78],
[81,0,72,61,70,59,71,91],
[80,59,0,80,70,68,91,81],
[81,70,51,0,51,59,62,70],
[90,61,61,80,0,57,81,59],
[93,72,63,72,74,0,84,90],
[81,60,40,69,50,47,0,68],
[53,40,50,61,72,41,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,71,65,72,60,64],
[60,0,64,52,53,53,69,61],
[65,67,0,75,71,59,72,68],
[60,79,56,0,56,77,58,71],
[66,78,60,75,0,75,73,71],
[59,78,72,54,56,0,63,65],
[71,62,59,73,58,68,0,60],
[67,70,63,60,60,66,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,55,40,62,62,67,52],
[69,0,60,35,66,52,63,67],
[76,71,0,69,69,62,75,71],
[91,96,62,0,79,50,78,76],
[69,65,62,52,0,50,46,55],
[69,79,69,81,81,0,63,61],
[64,68,56,53,85,68,0,69],
[79,64,60,55,76,70,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,59,57,69,65,51,54],
[84,0,69,58,78,68,70,47],
[72,62,0,65,64,79,46,60],
[74,73,66,0,74,70,61,64],
[62,53,67,57,0,72,48,61],
[66,63,52,61,59,0,56,50],
[80,61,85,70,83,75,0,70],
[77,84,71,67,70,81,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,92,65,73,83,69,66],
[69,0,83,72,92,80,55,70],
[39,48,0,69,64,68,64,49],
[66,59,62,0,61,67,67,67],
[58,39,67,70,0,68,52,39],
[48,51,63,64,63,0,62,62],
[62,76,67,64,79,69,0,50],
[65,61,82,64,92,69,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,87,66,68,63,75,61],
[62,0,78,85,70,72,84,62],
[44,53,0,56,66,66,69,61],
[65,46,75,0,68,64,70,60],
[63,61,65,63,0,65,63,69],
[68,59,65,67,66,0,64,71],
[56,47,62,61,68,67,0,74],
[70,69,70,71,62,60,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,62,49,65,61,56,58],
[77,0,75,71,82,74,63,59],
[69,56,0,61,66,68,68,64],
[82,60,70,0,72,78,69,60],
[66,49,65,59,0,82,60,57],
[70,57,63,53,49,0,54,43],
[75,68,63,62,71,77,0,79],
[73,72,67,71,74,88,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,54,50,63,62,53],
[73,0,75,61,58,71,66,71],
[66,56,0,54,62,60,69,60],
[77,70,77,0,69,64,66,64],
[81,73,69,62,0,77,65,77],
[68,60,71,67,54,0,66,55],
[69,65,62,65,66,65,0,70],
[78,60,71,67,54,76,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,51,63,64,56,52],
[66,0,70,73,68,63,63,59],
[64,61,0,58,69,72,71,65],
[80,58,73,0,70,72,74,66],
[68,63,62,61,0,61,63,64],
[67,68,59,59,70,0,67,54],
[75,68,60,57,68,64,0,53],
[79,72,66,65,67,77,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,60,66,63,63,45,57],
[76,0,58,57,57,69,67,55],
[71,73,0,59,67,66,62,66],
[65,74,72,0,73,76,56,70],
[68,74,64,58,0,76,68,76],
[68,62,65,55,55,0,49,62],
[86,64,69,75,63,82,0,68],
[74,76,65,61,55,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,57,55,66,56,68,72],
[74,0,60,60,72,68,72,69],
[74,71,0,65,66,59,69,81],
[76,71,66,0,67,62,70,71],
[65,59,65,64,0,64,69,70],
[75,63,72,69,67,0,82,82],
[63,59,62,61,62,49,0,71],
[59,62,50,60,61,49,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,66,69,83,83,73],
[68,0,72,52,58,60,84,67],
[60,59,0,54,58,66,63,75],
[65,79,77,0,67,80,88,80],
[62,73,73,64,0,57,87,71],
[48,71,65,51,74,0,67,65],
[48,47,68,43,44,64,0,55],
[58,64,56,51,60,66,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,53,37,50,49,43,38],
[87,0,74,73,66,57,60,59],
[78,57,0,63,58,70,51,58],
[94,58,68,0,57,70,58,65],
[81,65,73,74,0,64,79,53],
[82,74,61,61,67,0,64,73],
[88,71,80,73,52,67,0,72],
[93,72,73,66,78,58,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,62,51,71,43,48,65],
[66,0,58,76,78,57,58,54],
[69,73,0,68,73,58,38,31],
[80,55,63,0,84,94,64,66],
[60,53,58,47,0,39,30,31],
[88,74,73,37,92,0,59,50],
[83,73,93,67,101,72,0,51],
[66,77,100,65,100,81,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,56,80,58,72,59],
[68,0,77,62,72,69,69,71],
[73,54,0,66,61,66,67,66],
[75,69,65,0,72,63,66,74],
[51,59,70,59,0,63,64,61],
[73,62,65,68,68,0,71,72],
[59,62,64,65,67,60,0,69],
[72,60,65,57,70,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,72,70,94,71,59,82],
[48,0,59,59,70,59,59,71],
[59,72,0,94,82,82,82,82],
[61,72,37,0,71,36,36,48],
[37,61,49,60,0,72,61,37],
[60,72,49,95,59,0,60,84],
[72,72,49,95,70,71,0,84],
[49,60,49,83,94,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,70,64,64,73,73],
[63,0,56,57,67,68,55,75],
[63,75,0,80,64,73,72,80],
[61,74,51,0,59,62,73,67],
[67,64,67,72,0,69,71,57],
[67,63,58,69,62,0,70,72],
[58,76,59,58,60,61,0,71],
[58,56,51,64,74,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,79,78,58,76,77,79],
[56,0,43,66,65,66,68,71],
[52,88,0,78,80,68,83,84],
[53,65,53,0,63,67,79,63],
[73,66,51,68,0,71,80,66],
[55,65,63,64,60,0,84,62],
[54,63,48,52,51,47,0,53],
[52,60,47,68,65,69,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,63,76,72,73,74,72],
[54,0,57,61,58,64,63,65],
[68,74,0,70,71,65,67,74],
[55,70,61,0,65,59,69,67],
[59,73,60,66,0,68,71,69],
[58,67,66,72,63,0,71,71],
[57,68,64,62,60,60,0,71],
[59,66,57,64,62,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,55,65,72,70,73],
[65,0,57,52,74,69,72,68],
[67,74,0,62,73,66,79,70],
[76,79,69,0,65,76,81,71],
[66,57,58,66,0,75,76,67],
[59,62,65,55,56,0,74,62],
[61,59,52,50,55,57,0,65],
[58,63,61,60,64,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,60,59,87,69,52,58],
[73,0,62,57,55,48,47,61],
[71,69,0,55,52,59,38,54],
[72,74,76,0,57,53,55,48],
[44,76,79,74,0,54,54,50],
[62,83,72,78,77,0,69,62],
[79,84,93,76,77,62,0,68],
[73,70,77,83,81,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,89,64,66,22,87,64],
[44,0,89,44,68,44,87,66],
[42,42,0,42,44,21,63,64],
[67,87,89,0,66,66,87,45],
[65,63,87,65,0,44,42,66],
[109,87,110,65,87,0,108,64],
[44,44,68,44,89,23,0,66],
[67,65,67,86,65,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,77,63,58,64,62,74],
[75,0,69,67,76,73,55,78],
[54,62,0,57,69,57,62,57],
[68,64,74,0,70,55,69,70],
[73,55,62,61,0,66,67,57],
[67,58,74,76,65,0,76,64],
[69,76,69,62,64,55,0,66],
[57,53,74,61,74,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,55,63,78,75,65,52],
[74,0,45,65,83,79,62,70],
[76,86,0,69,80,73,65,57],
[68,66,62,0,82,77,70,70],
[53,48,51,49,0,55,42,47],
[56,52,58,54,76,0,41,60],
[66,69,66,61,89,90,0,66],
[79,61,74,61,84,71,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,68,47,50,57,45,51],
[75,0,69,61,58,63,53,61],
[63,62,0,61,60,59,51,59],
[84,70,70,0,66,71,59,59],
[81,73,71,65,0,65,73,61],
[74,68,72,60,66,0,57,69],
[86,78,80,72,58,74,0,67],
[80,70,72,72,70,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,57,71,59,75,55,76],
[61,0,65,63,74,68,62,65],
[74,66,0,74,61,76,77,73],
[60,68,57,0,51,68,58,58],
[72,57,70,80,0,77,59,71],
[56,63,55,63,54,0,55,61],
[76,69,54,73,72,76,0,80],
[55,66,58,73,60,70,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,74,69,57,63,66,58],
[62,0,81,75,68,57,71,65],
[57,50,0,64,62,48,60,64],
[62,56,67,0,69,61,52,69],
[74,63,69,62,0,53,60,61],
[68,74,83,70,78,0,63,55],
[65,60,71,79,71,68,0,63],
[73,66,67,62,70,76,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,56,70,56,61,66,72],
[56,0,60,54,55,58,57,55],
[75,71,0,58,75,63,63,77],
[61,77,73,0,69,66,60,64],
[75,76,56,62,0,71,77,69],
[70,73,68,65,60,0,76,61],
[65,74,68,71,54,55,0,63],
[59,76,54,67,62,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,65,65,72,71,62],
[64,0,61,64,64,62,61,56],
[65,70,0,65,61,67,72,66],
[66,67,66,0,62,70,61,62],
[66,67,70,69,0,65,67,63],
[59,69,64,61,66,0,61,53],
[60,70,59,70,64,70,0,59],
[69,75,65,69,68,78,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,51,64,67,69,55,66],
[61,0,60,55,51,66,51,60],
[80,71,0,61,68,76,65,72],
[67,76,70,0,57,80,79,81],
[64,80,63,74,0,77,80,80],
[62,65,55,51,54,0,60,53],
[76,80,66,52,51,71,0,73],
[65,71,59,50,51,78,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,131,87,43,87,87,131,131],
[0,0,44,43,44,0,131,87],
[44,87,0,43,0,0,131,131],
[88,88,88,0,44,88,131,131],
[44,87,131,87,0,87,131,131],
[44,131,131,43,44,0,131,131],
[0,0,0,0,0,0,0,87],
[0,44,0,0,0,0,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,56,61,63,68,62,73],
[71,0,63,69,60,69,67,72],
[75,68,0,64,67,73,61,72],
[70,62,67,0,67,65,57,64],
[68,71,64,64,0,77,66,74],
[63,62,58,66,54,0,62,64],
[69,64,70,74,65,69,0,64],
[58,59,59,67,57,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,74,76,82,62,71,74],
[81,0,68,68,77,78,62,75],
[57,63,0,53,68,56,61,61],
[55,63,78,0,73,60,75,64],
[49,54,63,58,0,44,46,50],
[69,53,75,71,87,0,73,70],
[60,69,70,56,85,58,0,67],
[57,56,70,67,81,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,60,57,58,64,65],
[67,0,75,68,55,63,63,65],
[60,56,0,54,50,56,68,65],
[71,63,77,0,67,62,74,77],
[74,76,81,64,0,69,80,71],
[73,68,75,69,62,0,68,72],
[67,68,63,57,51,63,0,64],
[66,66,66,54,60,59,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,56,55,63,58,65,65],
[72,0,64,80,66,77,76,64],
[75,67,0,81,67,72,61,61],
[76,51,50,0,53,52,62,53],
[68,65,64,78,0,60,64,57],
[73,54,59,79,71,0,71,74],
[66,55,70,69,67,60,0,73],
[66,67,70,78,74,57,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,58,82,80,77,80,87],
[48,0,70,62,57,73,67,71],
[73,61,0,75,78,76,78,75],
[49,69,56,0,66,67,73,72],
[51,74,53,65,0,73,79,77],
[54,58,55,64,58,0,72,68],
[51,64,53,58,52,59,0,75],
[44,60,56,59,54,63,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,51,61,50,55,49,61],
[74,0,53,65,61,62,62,65],
[80,78,0,65,68,68,69,74],
[70,66,66,0,53,56,68,64],
[81,70,63,78,0,66,69,71],
[76,69,63,75,65,0,57,72],
[82,69,62,63,62,74,0,77],
[70,66,57,67,60,59,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,55,69,63,52,77,77],
[60,0,70,75,106,49,82,67],
[76,61,0,85,73,65,61,52],
[62,56,46,0,61,61,48,51],
[68,25,58,70,0,33,39,45],
[79,82,66,70,98,0,74,61],
[54,49,70,83,92,57,0,54],
[54,64,79,80,86,70,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,63,69,67,68,64,74],
[73,0,62,50,48,62,45,60],
[68,69,0,65,61,79,72,60],
[62,81,66,0,52,75,68,64],
[64,83,70,79,0,64,70,72],
[63,69,52,56,67,0,66,66],
[67,86,59,63,61,65,0,57],
[57,71,71,67,59,65,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,75,78,59,55,58],
[61,0,63,65,58,62,63,49],
[62,68,0,53,54,61,57,58],
[56,66,78,0,53,68,75,60],
[53,73,77,78,0,80,71,72],
[72,69,70,63,51,0,65,51],
[76,68,74,56,60,66,0,60],
[73,82,73,71,59,80,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,61,61,61,69,60,58],
[76,0,63,74,66,72,63,70],
[70,68,0,77,64,79,64,64],
[70,57,54,0,62,68,65,58],
[70,65,67,69,0,72,69,66],
[62,59,52,63,59,0,57,60],
[71,68,67,66,62,74,0,65],
[73,61,67,73,65,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,54,69,60,67,60,70],
[75,0,67,63,70,73,66,71],
[77,64,0,68,63,61,56,64],
[62,68,63,0,62,63,57,65],
[71,61,68,69,0,74,71,67],
[64,58,70,68,57,0,54,65],
[71,65,75,74,60,77,0,71],
[61,60,67,66,64,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,52,105,79,79,105,105],
[52,0,26,80,26,0,53,53],
[79,105,0,80,53,27,53,53],
[26,51,51,0,0,0,52,0],
[52,105,78,131,0,105,131,78],
[52,131,104,131,26,0,104,78],
[26,78,78,79,0,27,0,26],
[26,78,78,131,53,53,105,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,60,68,70,65,65,77],
[63,0,54,54,65,62,53,63],
[71,77,0,67,75,71,61,85],
[63,77,64,0,69,75,71,78],
[61,66,56,62,0,72,63,76],
[66,69,60,56,59,0,71,75],
[66,78,70,60,68,60,0,85],
[54,68,46,53,55,56,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,70,72,71,65,60],
[63,0,63,68,62,68,60,64],
[67,68,0,62,66,70,61,69],
[61,63,69,0,68,70,60,59],
[59,69,65,63,0,60,54,52],
[60,63,61,61,71,0,59,66],
[66,71,70,71,77,72,0,62],
[71,67,62,72,79,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,69,80,67,72,75],
[68,0,68,67,82,78,61,76],
[69,63,0,67,84,76,75,79],
[62,64,64,0,77,74,67,73],
[51,49,47,54,0,70,56,57],
[64,53,55,57,61,0,53,57],
[59,70,56,64,75,78,0,66],
[56,55,52,58,74,74,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,47,55,78,69,57,55],
[56,0,68,67,90,78,59,58],
[84,63,0,84,90,69,74,41],
[76,64,47,0,78,72,53,67],
[53,41,41,53,0,66,31,41],
[62,53,62,59,65,0,63,55],
[74,72,57,78,100,68,0,79],
[76,73,90,64,90,76,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,78,66,69,63,69,64],
[70,0,69,61,56,63,55,62],
[53,62,0,60,51,71,52,62],
[65,70,71,0,76,72,65,61],
[62,75,80,55,0,69,67,65],
[68,68,60,59,62,0,66,55],
[62,76,79,66,64,65,0,66],
[67,69,69,70,66,76,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,82,74,73,76,67,64],
[55,0,59,81,63,56,61,61],
[49,72,0,76,70,55,56,63],
[57,50,55,0,57,51,54,62],
[58,68,61,74,0,63,76,68],
[55,75,76,80,68,0,63,61],
[64,70,75,77,55,68,0,64],
[67,70,68,69,63,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,71,77,72,67,72,53],
[51,0,48,60,48,63,41,56],
[60,83,0,58,74,73,64,65],
[54,71,73,0,72,72,67,64],
[59,83,57,59,0,67,56,68],
[64,68,58,59,64,0,69,56],
[59,90,67,64,75,62,0,56],
[78,75,66,67,63,75,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,58,68,67,65,74,64],
[62,0,58,70,47,62,75,53],
[73,73,0,73,66,81,87,60],
[63,61,58,0,47,75,75,49],
[64,84,65,84,0,84,74,68],
[66,69,50,56,47,0,73,50],
[57,56,44,56,57,58,0,48],
[67,78,71,82,63,81,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,60,78,87,83,79],
[56,0,71,71,74,73,65,78],
[58,60,0,59,67,60,63,59],
[71,60,72,0,77,63,73,80],
[53,57,64,54,0,55,60,62],
[44,58,71,68,76,0,59,70],
[48,66,68,58,71,72,0,64],
[52,53,72,51,69,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,79,60,76,82,63,68],
[86,0,65,86,88,85,75,50],
[52,66,0,63,80,59,71,58],
[71,45,68,0,86,66,70,49],
[55,43,51,45,0,58,46,50],
[49,46,72,65,73,0,64,53],
[68,56,60,61,85,67,0,48],
[63,81,73,82,81,78,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,77,73,67,59,69,74],
[74,0,85,64,81,66,87,81],
[54,46,0,55,49,50,45,58],
[58,67,76,0,72,64,68,69],
[64,50,82,59,0,48,71,67],
[72,65,81,67,83,0,76,76],
[62,44,86,63,60,55,0,74],
[57,50,73,62,64,55,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,65,58,58,62,65],
[63,0,68,61,63,66,61,63],
[65,63,0,62,69,59,72,60],
[66,70,69,0,58,62,65,62],
[73,68,62,73,0,65,72,69],
[73,65,72,69,66,0,68,66],
[69,70,59,66,59,63,0,64],
[66,68,71,69,62,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,76,77,61,64,68,71],
[56,0,72,69,84,56,65,81],
[55,59,0,70,55,55,61,55],
[54,62,61,0,67,52,65,65],
[70,47,76,64,0,63,60,77],
[67,75,76,79,68,0,65,62],
[63,66,70,66,71,66,0,67],
[60,50,76,66,54,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,65,78,71,61,71,74],
[68,0,71,69,61,66,63,73],
[66,60,0,84,71,64,69,74],
[53,62,47,0,57,56,59,56],
[60,70,60,74,0,58,61,69],
[70,65,67,75,73,0,74,75],
[60,68,62,72,70,57,0,72],
[57,58,57,75,62,56,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,55,70,106,67,79,68],
[48,0,57,82,65,51,56,77],
[76,74,0,97,81,66,66,58],
[61,49,34,0,68,77,33,52],
[25,66,50,63,0,25,56,40],
[64,80,65,54,106,0,65,42],
[52,75,65,98,75,66,0,75],
[63,54,73,79,91,89,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,64,60,65,71,59],
[70,0,70,74,80,64,85,73],
[69,61,0,74,69,63,72,74],
[67,57,57,0,53,60,65,64],
[71,51,62,78,0,61,65,73],
[66,67,68,71,70,0,69,65],
[60,46,59,66,66,62,0,64],
[72,58,57,67,58,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,46,37,58,47,69,54],
[81,0,74,61,67,76,75,70],
[85,57,0,73,61,66,66,76],
[94,70,58,0,60,74,75,93],
[73,64,70,71,0,50,65,61],
[84,55,65,57,81,0,71,66],
[62,56,65,56,66,60,0,75],
[77,61,55,38,70,65,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,59,64,56,56,67],
[70,0,61,64,75,65,67,77],
[73,70,0,58,70,86,68,65],
[72,67,73,0,63,72,61,74],
[67,56,61,68,0,61,59,59],
[75,66,45,59,70,0,53,54],
[75,64,63,70,72,78,0,68],
[64,54,66,57,72,77,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,131,44,44,44,131,44,87],
[0,0,44,44,44,88,44,43],
[87,87,0,88,44,131,87,87],
[87,87,43,0,87,131,87,87],
[87,87,87,44,0,131,43,43],
[0,43,0,0,0,0,0,43],
[87,87,44,44,88,131,0,43],
[44,88,44,44,88,88,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,67,55,67,58,60,66],
[84,0,82,72,75,65,66,68],
[64,49,0,55,56,54,67,54],
[76,59,76,0,69,65,76,75],
[64,56,75,62,0,71,77,64],
[73,66,77,66,60,0,73,75],
[71,65,64,55,54,58,0,59],
[65,63,77,56,67,56,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,67,67,77,68,66,62],
[69,0,65,61,72,58,67,61],
[64,66,0,49,67,60,54,65],
[64,70,82,0,77,54,69,58],
[54,59,64,54,0,58,64,59],
[63,73,71,77,73,0,70,67],
[65,64,77,62,67,61,0,60],
[69,70,66,73,72,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,50,63,70,53,62],
[68,0,66,60,57,70,72,68],
[63,65,0,59,69,70,49,73],
[81,71,72,0,74,70,63,65],
[68,74,62,57,0,60,54,57],
[61,61,61,61,71,0,43,65],
[78,59,82,68,77,88,0,73],
[69,63,58,66,74,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,59,70,46,69,64],
[65,0,57,70,86,82,75,68],
[62,74,0,52,69,74,66,72],
[72,61,79,0,73,77,82,78],
[61,45,62,58,0,55,64,62],
[85,49,57,54,76,0,63,48],
[62,56,65,49,67,68,0,51],
[67,63,59,53,69,83,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,63,60,66,61,66],
[67,0,63,66,64,68,63,69],
[65,68,0,64,72,64,67,65],
[68,65,67,0,70,64,69,57],
[71,67,59,61,0,72,63,67],
[65,63,67,67,59,0,61,66],
[70,68,64,62,68,70,0,59],
[65,62,66,74,64,65,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,56,55,63,67,54],
[68,0,56,61,46,53,69,59],
[73,75,0,82,70,59,82,58],
[75,70,49,0,52,55,76,58],
[76,85,61,79,0,69,74,69],
[68,78,72,76,62,0,81,65],
[64,62,49,55,57,50,0,53],
[77,72,73,73,62,66,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,68,73,70,78,64,69],
[60,0,64,70,57,72,45,64],
[63,67,0,70,67,67,53,73],
[58,61,61,0,59,65,64,55],
[61,74,64,72,0,67,73,68],
[53,59,64,66,64,0,49,59],
[67,86,78,67,58,82,0,73],
[62,67,58,76,63,72,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,61,71,68,63,67,65],
[64,0,65,69,74,65,58,57],
[70,66,0,78,70,72,65,64],
[60,62,53,0,63,53,65,53],
[63,57,61,68,0,59,67,63],
[68,66,59,78,72,0,62,68],
[64,73,66,66,64,69,0,64],
[66,74,67,78,68,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,71,63,60,66,66],
[69,0,59,74,66,61,70,73],
[67,72,0,65,73,66,79,61],
[60,57,66,0,62,67,64,52],
[68,65,58,69,0,66,71,65],
[71,70,65,64,65,0,74,63],
[65,61,52,67,60,57,0,61],
[65,58,70,79,66,68,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,67,59,77,59,65],
[67,0,60,48,60,69,56,65],
[67,71,0,62,58,67,61,70],
[64,83,69,0,86,81,71,67],
[72,71,73,45,0,72,66,55],
[54,62,64,50,59,0,57,55],
[72,75,70,60,65,74,0,67],
[66,66,61,64,76,76,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,60,69,65,64,72],
[62,0,70,56,72,70,64,73],
[63,61,0,63,68,63,68,66],
[71,75,68,0,74,69,68,65],
[62,59,63,57,0,73,65,60],
[66,61,68,62,58,0,73,68],
[67,67,63,63,66,58,0,70],
[59,58,65,66,71,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,71,67,66,70,67],
[71,0,78,83,81,63,71,74],
[69,53,0,81,62,56,74,72],
[60,48,50,0,62,62,57,66],
[64,50,69,69,0,51,71,64],
[65,68,75,69,80,0,72,62],
[61,60,57,74,60,59,0,68],
[64,57,59,65,67,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,32,50,51,74,70,57],
[54,0,50,48,54,62,81,37],
[99,81,0,56,63,75,89,69],
[81,83,75,0,81,81,93,61],
[80,77,68,50,0,65,77,60],
[57,69,56,50,66,0,102,50],
[61,50,42,38,54,29,0,48],
[74,94,62,70,71,81,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,74,59,73,63,59,66],
[47,0,54,38,62,45,52,54],
[57,77,0,66,68,64,64,59],
[72,93,65,0,79,70,79,64],
[58,69,63,52,0,53,55,64],
[68,86,67,61,78,0,64,70],
[72,79,67,52,76,67,0,66],
[65,77,72,67,67,61,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,73,62,68,58,43,58],
[78,0,88,85,77,67,78,62],
[58,43,0,55,58,47,56,50],
[69,46,76,0,66,49,60,56],
[63,54,73,65,0,41,52,57],
[73,64,84,82,90,0,61,66],
[88,53,75,71,79,70,0,66],
[73,69,81,75,74,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,78,87,63,55,47,81],
[57,0,60,77,55,59,60,69],
[53,71,0,76,71,52,59,80],
[44,54,55,0,51,37,43,71],
[68,76,60,80,0,63,74,69],
[76,72,79,94,68,0,68,64],
[84,71,72,88,57,63,0,71],
[50,62,51,60,62,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,74,84,80,64,72],
[63,0,64,74,66,84,66,73],
[68,67,0,92,75,82,65,69],
[57,57,39,0,66,72,58,63],
[47,65,56,65,0,74,64,66],
[51,47,49,59,57,0,49,55],
[67,65,66,73,67,82,0,78],
[59,58,62,68,65,76,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,67,65,67,64,51,60],
[73,0,79,80,74,59,66,60],
[64,52,0,70,52,50,68,62],
[66,51,61,0,61,64,61,48],
[64,57,79,70,0,55,62,50],
[67,72,81,67,76,0,55,59],
[80,65,63,70,69,76,0,68],
[71,71,69,83,81,72,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,65,71,60,70,59],
[69,0,69,59,75,68,75,70],
[67,62,0,56,74,60,66,60],
[66,72,75,0,76,72,63,64],
[60,56,57,55,0,67,65,59],
[71,63,71,59,64,0,61,71],
[61,56,65,68,66,70,0,69],
[72,61,71,67,72,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,59,80,80,62,87],
[62,0,48,62,68,68,55,90],
[70,83,0,63,69,63,66,94],
[72,69,68,0,65,73,63,74],
[51,63,62,66,0,76,63,81],
[51,63,68,58,55,0,43,67],
[69,76,65,68,68,88,0,79],
[44,41,37,57,50,64,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,59,64,66,64,63,57],
[53,0,49,57,57,55,55,55],
[72,82,0,66,71,63,66,62],
[67,74,65,0,71,72,65,62],
[65,74,60,60,0,65,66,58],
[67,76,68,59,66,0,72,68],
[68,76,65,66,65,59,0,63],
[74,76,69,69,73,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,55,56,52,57,73],
[72,0,70,70,74,73,65,55],
[66,61,0,77,76,65,67,74],
[76,61,54,0,72,64,58,64],
[75,57,55,59,0,55,59,64],
[79,58,66,67,76,0,61,68],
[74,66,64,73,72,70,0,68],
[58,76,57,67,67,63,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,57,64,60,52,50,67],
[76,0,66,68,64,62,56,71],
[74,65,0,66,70,67,62,76],
[67,63,65,0,64,59,55,68],
[71,67,61,67,0,56,49,75],
[79,69,64,72,75,0,66,71],
[81,75,69,76,82,65,0,73],
[64,60,55,63,56,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_8_131.csv", index=False, header=False)