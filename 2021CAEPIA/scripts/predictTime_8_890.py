
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,438,431,397,447,410,440,427],
[452,0,445,450,465,426,419,439],
[459,445,0,420,438,441,451,427],
[493,440,470,0,448,438,443,450],
[443,425,452,442,0,427,436,423],
[480,464,449,452,463,0,446,430],
[450,471,439,447,454,444,0,442],
[463,451,463,440,467,460,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,435,442,452,454,467,432],
[455,0,429,444,457,463,447,448],
[455,461,0,439,461,468,463,442],
[448,446,451,0,452,465,455,443],
[438,433,429,438,0,459,461,424],
[436,427,422,425,431,0,432,419],
[423,443,427,435,429,458,0,425],
[458,442,448,447,466,471,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,469,471,434,475,453,474],
[449,0,444,460,472,452,462,449],
[421,446,0,491,452,442,447,485],
[419,430,399,0,438,401,397,415],
[456,418,438,452,0,428,443,436],
[415,438,448,489,462,0,417,463],
[437,428,443,493,447,473,0,480],
[416,441,405,475,454,427,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,408,431,475,498,486,485],
[427,0,417,457,446,432,458,416],
[482,473,0,444,450,483,479,465],
[459,433,446,0,491,446,431,419],
[415,444,440,399,0,428,434,415],
[392,458,407,444,462,0,439,451],
[404,432,411,459,456,451,0,393],
[405,474,425,471,475,439,497,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,470,457,457,448,464,443],
[432,0,440,454,478,432,468,439],
[420,450,0,449,450,429,460,454],
[433,436,441,0,450,432,432,443],
[433,412,440,440,0,416,419,416],
[442,458,461,458,474,0,454,466],
[426,422,430,458,471,436,0,435],
[447,451,436,447,474,424,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,447,428,439,472,454,448],
[434,0,422,444,423,429,440,419],
[443,468,0,474,454,447,457,444],
[462,446,416,0,389,429,423,450],
[451,467,436,501,0,453,459,428],
[418,461,443,461,437,0,463,443],
[436,450,433,467,431,427,0,428],
[442,471,446,440,462,447,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,336,416,592,418,637,388,278],
[554,0,427,602,356,637,490,466],
[474,463,0,613,547,660,586,441],
[298,288,277,0,341,637,388,201],
[472,534,343,549,0,619,474,579],
[253,253,230,253,271,0,454,253],
[502,400,304,502,416,436,0,429],
[612,424,449,689,311,637,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,426,439,390,366,439,391],
[443,0,391,450,378,385,442,442],
[464,499,0,477,483,428,467,492],
[451,440,413,0,428,392,445,449],
[500,512,407,462,0,464,465,504],
[524,505,462,498,426,0,469,490],
[451,448,423,445,425,421,0,459],
[499,448,398,441,386,400,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,458,469,472,439,459,457],
[428,0,441,395,442,407,437,442],
[432,449,0,432,436,442,451,442],
[421,495,458,0,489,448,455,458],
[418,448,454,401,0,407,425,423],
[451,483,448,442,483,0,461,451],
[431,453,439,435,465,429,0,442],
[433,448,448,432,467,439,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,470,459,435,474,498,474],
[429,0,446,410,410,410,480,417],
[420,444,0,414,411,420,497,471],
[431,480,476,0,454,396,446,419],
[455,480,479,436,0,477,474,487],
[416,480,470,494,413,0,492,424],
[392,410,393,444,416,398,0,413],
[416,473,419,471,403,466,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,471,441,445,458,461,429],
[421,0,437,421,431,428,427,406],
[419,453,0,410,435,426,431,446],
[449,469,480,0,443,442,471,424],
[445,459,455,447,0,441,448,411],
[432,462,464,448,449,0,436,408],
[429,463,459,419,442,454,0,397],
[461,484,444,466,479,482,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,468,395,514,485,423,468],
[471,0,539,448,481,463,509,431],
[422,351,0,391,393,385,340,463],
[495,442,499,0,526,522,447,483],
[376,409,497,364,0,486,400,436],
[405,427,505,368,404,0,346,457],
[467,381,550,443,490,544,0,481],
[422,459,427,407,454,433,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,457,431,438,443,449,430],
[437,0,456,422,439,429,420,439],
[433,434,0,441,448,448,441,430],
[459,468,449,0,442,432,431,440],
[452,451,442,448,0,450,429,470],
[447,461,442,458,440,0,446,456],
[441,470,449,459,461,444,0,444],
[460,451,460,450,420,434,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,465,438,452,454,453,430],
[436,0,443,435,451,437,435,432],
[425,447,0,429,434,446,468,431],
[452,455,461,0,449,462,461,422],
[438,439,456,441,0,455,443,442],
[436,453,444,428,435,0,457,446],
[437,455,422,429,447,433,0,394],
[460,458,459,468,448,444,496,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,404,424,375,400,410,414],
[486,0,447,455,436,384,451,432],
[486,443,0,430,505,444,462,446],
[466,435,460,0,452,432,460,440],
[515,454,385,438,0,440,482,440],
[490,506,446,458,450,0,497,441],
[480,439,428,430,408,393,0,414],
[476,458,444,450,450,449,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,437,463,411,457,424,393],
[436,0,424,471,424,444,448,432],
[453,466,0,480,480,461,430,469],
[427,419,410,0,405,430,395,399],
[479,466,410,485,0,442,453,428],
[433,446,429,460,448,0,412,443],
[466,442,460,495,437,478,0,420],
[497,458,421,491,462,447,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,416,442,432,433,426,413],
[453,0,441,444,450,445,452,432],
[474,449,0,450,448,434,430,445],
[448,446,440,0,454,465,449,441],
[458,440,442,436,0,460,441,449],
[457,445,456,425,430,0,442,458],
[464,438,460,441,449,448,0,461],
[477,458,445,449,441,432,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,429,420,416,407,422,420],
[480,0,443,467,472,458,482,487],
[461,447,0,466,482,440,453,473],
[470,423,424,0,472,428,430,458],
[474,418,408,418,0,412,416,457],
[483,432,450,462,478,0,463,443],
[468,408,437,460,474,427,0,439],
[470,403,417,432,433,447,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,440,434,424,443,438,463],
[455,0,431,445,428,452,442,434],
[450,459,0,454,448,436,453,446],
[456,445,436,0,447,458,446,456],
[466,462,442,443,0,470,463,458],
[447,438,454,432,420,0,442,439],
[452,448,437,444,427,448,0,441],
[427,456,444,434,432,451,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,469,425,454,454,436,463],
[438,0,456,419,447,431,437,445],
[421,434,0,416,420,426,433,430],
[465,471,474,0,431,447,469,492],
[436,443,470,459,0,446,452,427],
[436,459,464,443,444,0,474,485],
[454,453,457,421,438,416,0,451],
[427,445,460,398,463,405,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,445,468,447,447,452,430],
[430,0,426,474,438,453,432,442],
[445,464,0,463,427,431,445,438],
[422,416,427,0,443,415,440,431],
[443,452,463,447,0,449,458,458],
[443,437,459,475,441,0,468,454],
[438,458,445,450,432,422,0,442],
[460,448,452,459,432,436,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,441,454,453,463,497,453],
[420,0,438,448,436,430,450,426],
[449,452,0,481,448,444,467,448],
[436,442,409,0,454,431,465,434],
[437,454,442,436,0,426,459,424],
[427,460,446,459,464,0,473,443],
[393,440,423,425,431,417,0,405],
[437,464,442,456,466,447,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,428,430,432,451,417,419],
[453,0,417,424,454,455,432,416],
[462,473,0,466,443,468,463,438],
[460,466,424,0,447,467,446,452],
[458,436,447,443,0,461,435,442],
[439,435,422,423,429,0,431,423],
[473,458,427,444,455,459,0,467],
[471,474,452,438,448,467,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,527,571,515,616,607,427,381],
[363,0,539,433,547,554,594,438],
[319,351,0,246,434,475,254,344],
[375,457,644,0,616,721,490,477],
[274,343,456,274,0,595,379,428],
[283,336,415,169,295,0,319,382],
[463,296,636,400,511,571,0,476],
[509,452,546,413,462,508,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,438,471,514,445,419,449],
[436,0,461,479,472,449,436,441],
[452,429,0,462,415,457,435,437],
[419,411,428,0,450,447,428,445],
[376,418,475,440,0,449,430,421],
[445,441,433,443,441,0,413,458],
[471,454,455,462,460,477,0,442],
[441,449,453,445,469,432,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,425,436,420,420,420,421],
[491,0,450,467,442,398,460,435],
[465,440,0,448,435,439,452,444],
[454,423,442,0,467,449,433,463],
[470,448,455,423,0,436,461,441],
[470,492,451,441,454,0,431,492],
[470,430,438,457,429,459,0,429],
[469,455,446,427,449,398,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,435,418,447,435,446,428],
[440,0,439,454,455,446,431,447],
[455,451,0,448,448,446,439,439],
[472,436,442,0,448,433,427,427],
[443,435,442,442,0,424,421,431],
[455,444,444,457,466,0,437,459],
[444,459,451,463,469,453,0,452],
[462,443,451,463,459,431,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,466,411,448,432,449,441],
[468,0,417,451,441,439,485,431],
[424,473,0,415,403,444,466,410],
[479,439,475,0,475,451,452,462],
[442,449,487,415,0,434,418,450],
[458,451,446,439,456,0,439,450],
[441,405,424,438,472,451,0,447],
[449,459,480,428,440,440,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,451,458,449,446,481,445],
[437,0,455,455,462,449,459,436],
[439,435,0,426,420,426,442,420],
[432,435,464,0,444,439,464,431],
[441,428,470,446,0,443,464,434],
[444,441,464,451,447,0,466,446],
[409,431,448,426,426,424,0,409],
[445,454,470,459,456,444,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,423,454,461,433,456,461],
[451,0,458,434,477,447,441,454],
[467,432,0,435,451,433,448,459],
[436,456,455,0,448,431,433,440],
[429,413,439,442,0,430,427,418],
[457,443,457,459,460,0,464,454],
[434,449,442,457,463,426,0,447],
[429,436,431,450,472,436,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,458,451,430,464,480,494],
[430,0,467,424,444,434,456,475],
[432,423,0,417,418,426,437,445],
[439,466,473,0,475,447,456,459],
[460,446,472,415,0,448,431,472],
[426,456,464,443,442,0,433,439],
[410,434,453,434,459,457,0,470],
[396,415,445,431,418,451,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,451,435,442,446,446,416],
[457,0,425,458,445,442,451,440],
[439,465,0,433,414,429,457,446],
[455,432,457,0,421,448,455,441],
[448,445,476,469,0,458,464,468],
[444,448,461,442,432,0,460,455],
[444,439,433,435,426,430,0,458],
[474,450,444,449,422,435,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,463,427,459,470,482,480],
[437,0,469,446,397,464,480,464],
[427,421,0,432,420,460,500,474],
[463,444,458,0,438,481,494,478],
[431,493,470,452,0,476,498,500],
[420,426,430,409,414,0,434,464],
[408,410,390,396,392,456,0,438],
[410,426,416,412,390,426,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,428,442,462,442,460,456],
[435,0,438,424,451,444,453,434],
[462,452,0,447,465,438,461,462],
[448,466,443,0,463,437,476,456],
[428,439,425,427,0,433,444,426],
[448,446,452,453,457,0,453,432],
[430,437,429,414,446,437,0,432],
[434,456,428,434,464,458,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,413,467,463,428,469,483],
[444,0,407,444,388,401,451,439],
[477,483,0,526,440,522,448,495],
[423,446,364,0,424,420,351,431],
[427,502,450,466,0,493,456,456],
[462,489,368,470,397,0,450,420],
[421,439,442,539,434,440,0,489],
[407,451,395,459,434,470,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,581,488,467,466,478,379],
[476,0,576,516,463,396,490,470],
[309,314,0,486,319,226,353,287],
[402,374,404,0,397,325,434,364],
[423,427,571,493,0,434,459,458],
[424,494,664,565,456,0,516,449],
[412,400,537,456,431,374,0,406],
[511,420,603,526,432,441,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,451,440,442,437,441,438],
[447,0,479,435,434,433,438,446],
[439,411,0,423,434,414,411,416],
[450,455,467,0,439,428,436,437],
[448,456,456,451,0,433,442,427],
[453,457,476,462,457,0,439,441],
[449,452,479,454,448,451,0,444],
[452,444,474,453,463,449,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,463,455,444,471,450,447],
[419,0,422,418,441,439,420,431],
[427,468,0,449,453,443,452,469],
[435,472,441,0,444,446,437,441],
[446,449,437,446,0,433,445,427],
[419,451,447,444,457,0,451,470],
[440,470,438,453,445,439,0,452],
[443,459,421,449,463,420,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,441,447,435,447,447,457],
[440,0,439,419,421,435,424,451],
[449,451,0,439,419,428,435,456],
[443,471,451,0,436,428,429,457],
[455,469,471,454,0,440,463,450],
[443,455,462,462,450,0,451,481],
[443,466,455,461,427,439,0,462],
[433,439,434,433,440,409,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,439,412,424,411,434,417],
[449,0,431,467,446,433,420,404],
[451,459,0,424,425,429,457,429],
[478,423,466,0,441,428,450,417],
[466,444,465,449,0,461,441,449],
[479,457,461,462,429,0,478,446],
[456,470,433,440,449,412,0,452],
[473,486,461,473,441,444,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,369,416,419,455,417,402],
[465,0,424,438,433,443,445,406],
[521,466,0,435,498,460,492,461],
[474,452,455,0,469,477,457,443],
[471,457,392,421,0,407,408,422],
[435,447,430,413,483,0,484,430],
[473,445,398,433,482,406,0,441],
[488,484,429,447,468,460,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,446,423,434,428,448,442],
[454,0,449,438,426,421,456,427],
[444,441,0,429,446,428,464,413],
[467,452,461,0,441,434,466,445],
[456,464,444,449,0,435,468,443],
[462,469,462,456,455,0,482,435],
[442,434,426,424,422,408,0,417],
[448,463,477,445,447,455,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,432,431,465,402,463,406],
[429,0,448,497,456,421,437,440],
[458,442,0,422,457,424,446,451],
[459,393,468,0,435,382,410,430],
[425,434,433,455,0,423,472,407],
[488,469,466,508,467,0,477,434],
[427,453,444,480,418,413,0,432],
[484,450,439,460,483,456,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,268,756,690,452,756,518,652],
[622,0,622,556,318,622,622,518],
[134,268,0,372,134,238,200,334],
[200,334,518,0,452,572,518,468],
[438,572,756,438,0,572,572,334],
[134,268,652,318,318,0,518,334],
[372,268,690,372,318,372,0,134],
[238,372,556,422,556,556,756,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,460,438,462,448,469,464],
[423,0,448,439,450,461,440,454],
[430,442,0,444,419,436,440,394],
[452,451,446,0,455,457,474,439],
[428,440,471,435,0,456,454,429],
[442,429,454,433,434,0,429,427],
[421,450,450,416,436,461,0,440],
[426,436,496,451,461,463,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,468,436,452,440,432,429],
[434,0,443,437,450,444,445,462],
[422,447,0,425,460,445,424,439],
[454,453,465,0,461,455,445,444],
[438,440,430,429,0,435,430,420],
[450,446,445,435,455,0,426,442],
[458,445,466,445,460,464,0,451],
[461,428,451,446,470,448,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,444,450,429,446,467,478],
[457,0,454,485,443,464,469,522],
[446,436,0,458,445,442,438,481],
[440,405,432,0,419,441,414,458],
[461,447,445,471,0,466,463,478],
[444,426,448,449,424,0,420,485],
[423,421,452,476,427,470,0,487],
[412,368,409,432,412,405,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,437,459,454,450,424,458],
[456,0,439,457,439,451,433,455],
[453,451,0,465,447,455,426,476],
[431,433,425,0,438,439,419,464],
[436,451,443,452,0,470,448,463],
[440,439,435,451,420,0,410,445],
[466,457,464,471,442,480,0,497],
[432,435,414,426,427,445,393,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,437,433,457,431,429,434],
[452,0,459,459,469,461,448,435],
[453,431,0,449,467,438,445,449],
[457,431,441,0,450,446,424,454],
[433,421,423,440,0,423,406,419],
[459,429,452,444,467,0,428,458],
[461,442,445,466,484,462,0,458],
[456,455,441,436,471,432,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,452,495,461,468,457,445],
[400,0,430,386,396,412,407,417],
[438,460,0,428,445,459,453,433],
[395,504,462,0,430,446,465,437],
[429,494,445,460,0,464,467,431],
[422,478,431,444,426,0,433,429],
[433,483,437,425,423,457,0,415],
[445,473,457,453,459,461,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,438,445,400,407,421,397],
[484,0,460,461,445,427,453,442],
[452,430,0,442,418,429,395,448],
[445,429,448,0,378,379,430,422],
[490,445,472,512,0,478,491,471],
[483,463,461,511,412,0,471,460],
[469,437,495,460,399,419,0,421],
[493,448,442,468,419,430,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,468,477,438,442,480,440],
[411,0,422,413,387,413,437,387],
[422,468,0,470,464,457,440,456],
[413,477,420,0,433,427,446,466],
[452,503,426,457,0,425,455,448],
[448,477,433,463,465,0,435,463],
[410,453,450,444,435,455,0,412],
[450,503,434,424,442,427,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,371,362,438,363,395,445,406],
[519,0,442,440,444,410,494,448],
[528,448,0,500,416,481,470,502],
[452,450,390,0,432,463,440,447],
[527,446,474,458,0,476,520,443],
[495,480,409,427,414,0,465,431],
[445,396,420,450,370,425,0,436],
[484,442,388,443,447,459,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,453,459,453,441,440,427],
[464,0,463,446,443,445,454,447],
[437,427,0,437,462,451,457,437],
[431,444,453,0,445,453,454,425],
[437,447,428,445,0,412,389,423],
[449,445,439,437,478,0,431,474],
[450,436,433,436,501,459,0,454],
[463,443,453,465,467,416,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,445,395,401,404,421,366],
[484,0,467,453,459,465,474,419],
[445,423,0,416,462,437,429,417],
[495,437,474,0,444,464,465,474],
[489,431,428,446,0,427,466,437],
[486,425,453,426,463,0,457,402],
[469,416,461,425,424,433,0,387],
[524,471,473,416,453,488,503,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,429,424,455,444,456,431],
[462,0,474,447,482,428,458,464],
[461,416,0,422,449,457,449,461],
[466,443,468,0,481,442,457,468],
[435,408,441,409,0,433,436,409],
[446,462,433,448,457,0,459,441],
[434,432,441,433,454,431,0,455],
[459,426,429,422,481,449,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,472,456,441,471,479,416],
[432,0,418,431,442,435,451,447],
[418,472,0,446,470,453,486,456],
[434,459,444,0,451,467,454,468],
[449,448,420,439,0,438,480,421],
[419,455,437,423,452,0,417,392],
[411,439,404,436,410,473,0,433],
[474,443,434,422,469,498,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,419,415,466,424,439,457],
[475,0,461,446,460,459,441,488],
[471,429,0,433,426,430,426,437],
[475,444,457,0,469,430,443,448],
[424,430,464,421,0,438,456,440],
[466,431,460,460,452,0,478,444],
[451,449,464,447,434,412,0,459],
[433,402,453,442,450,446,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,457,483,459,481,486,442],
[436,0,434,449,447,438,476,426],
[433,456,0,477,441,463,448,453],
[407,441,413,0,413,434,432,405],
[431,443,449,477,0,430,459,433],
[409,452,427,456,460,0,448,419],
[404,414,442,458,431,442,0,434],
[448,464,437,485,457,471,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,414,441,433,423,426,374],
[479,0,477,485,446,427,460,466],
[476,413,0,425,411,439,433,399],
[449,405,465,0,416,448,443,391],
[457,444,479,474,0,461,483,461],
[467,463,451,442,429,0,432,427],
[464,430,457,447,407,458,0,388],
[516,424,491,499,429,463,502,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,438,445,480,448,424,488],
[443,0,457,455,472,462,447,477],
[452,433,0,439,465,449,426,477],
[445,435,451,0,458,436,430,481],
[410,418,425,432,0,396,406,463],
[442,428,441,454,494,0,443,472],
[466,443,464,460,484,447,0,485],
[402,413,413,409,427,418,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,421,447,448,436,431,429],
[449,0,443,458,441,463,437,459],
[469,447,0,443,439,445,467,445],
[443,432,447,0,426,441,408,444],
[442,449,451,464,0,461,429,433],
[454,427,445,449,429,0,418,429],
[459,453,423,482,461,472,0,451],
[461,431,445,446,457,461,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,454,442,439,452,456,462],
[421,0,446,451,421,437,429,425],
[436,444,0,455,424,435,427,435],
[448,439,435,0,437,424,421,468],
[451,469,466,453,0,472,454,442],
[438,453,455,466,418,0,444,482],
[434,461,463,469,436,446,0,437],
[428,465,455,422,448,408,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,459,481,447,429,451,453],
[452,0,468,454,426,467,478,473],
[431,422,0,460,444,452,436,454],
[409,436,430,0,412,437,432,421],
[443,464,446,478,0,474,458,463],
[461,423,438,453,416,0,477,436],
[439,412,454,458,432,413,0,414],
[437,417,436,469,427,454,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,454,463,447,452,460,445],
[443,0,451,464,436,436,461,424],
[436,439,0,456,435,442,460,437],
[427,426,434,0,426,435,443,434],
[443,454,455,464,0,450,453,454],
[438,454,448,455,440,0,449,426],
[430,429,430,447,437,441,0,432],
[445,466,453,456,436,464,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,439,446,449,448,458,440],
[456,0,463,446,433,447,462,465],
[451,427,0,432,442,447,436,439],
[444,444,458,0,447,451,450,460],
[441,457,448,443,0,436,460,442],
[442,443,443,439,454,0,457,452],
[432,428,454,440,430,433,0,451],
[450,425,451,430,448,438,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,438,456,475,489,451,446],
[419,0,440,443,433,465,425,418],
[452,450,0,438,452,460,408,431],
[434,447,452,0,465,475,463,433],
[415,457,438,425,0,482,444,419],
[401,425,430,415,408,0,440,418],
[439,465,482,427,446,450,0,462],
[444,472,459,457,471,472,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,452,445,460,443,467,439],
[444,0,457,445,486,445,457,448],
[438,433,0,453,457,426,424,414],
[445,445,437,0,462,454,441,441],
[430,404,433,428,0,428,416,438],
[447,445,464,436,462,0,447,434],
[423,433,466,449,474,443,0,441],
[451,442,476,449,452,456,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,429,446,458,456,441,452],
[451,0,445,440,460,413,445,455],
[461,445,0,450,449,431,425,469],
[444,450,440,0,445,439,480,494],
[432,430,441,445,0,440,437,463],
[434,477,459,451,450,0,470,481],
[449,445,465,410,453,420,0,460],
[438,435,421,396,427,409,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,467,433,454,464,492,482],
[408,0,414,432,403,413,410,441],
[423,476,0,468,445,473,461,427],
[457,458,422,0,411,438,447,427],
[436,487,445,479,0,453,473,463],
[426,477,417,452,437,0,443,426],
[398,480,429,443,417,447,0,445],
[408,449,463,463,427,464,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,392,415,455,428,427,415],
[483,0,450,439,491,472,473,472],
[498,440,0,459,489,466,490,480],
[475,451,431,0,475,464,476,465],
[435,399,401,415,0,402,448,417],
[462,418,424,426,488,0,481,449],
[463,417,400,414,442,409,0,429],
[475,418,410,425,473,441,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,712,583,425,490,518,712,696],
[178,0,487,603,65,309,631,387],
[307,403,0,616,259,596,825,400],
[465,287,274,0,65,209,400,387],
[400,825,631,825,0,631,709,322],
[372,581,294,681,259,0,825,581],
[178,259,65,490,181,65,0,178],
[194,503,490,503,568,309,712,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,430,446,429,428,446,429],
[450,0,437,439,470,432,472,449],
[460,453,0,477,485,443,494,488],
[444,451,413,0,423,439,445,468],
[461,420,405,467,0,411,471,435],
[462,458,447,451,479,0,484,445],
[444,418,396,445,419,406,0,417],
[461,441,402,422,455,445,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,417,450,482,481,434,462],
[471,0,498,426,470,486,472,446],
[473,392,0,405,478,433,415,427],
[440,464,485,0,470,459,448,473],
[408,420,412,420,0,448,405,455],
[409,404,457,431,442,0,469,456],
[456,418,475,442,485,421,0,451],
[428,444,463,417,435,434,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,459,435,427,448,457,452],
[452,0,448,464,439,434,425,459],
[431,442,0,467,452,448,444,461],
[455,426,423,0,429,455,461,440],
[463,451,438,461,0,425,454,451],
[442,456,442,435,465,0,443,423],
[433,465,446,429,436,447,0,447],
[438,431,429,450,439,467,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,461,478,479,481,434,472],
[435,0,443,486,501,418,455,466],
[429,447,0,439,459,433,391,451],
[412,404,451,0,466,445,417,433],
[411,389,431,424,0,431,417,444],
[409,472,457,445,459,0,438,452],
[456,435,499,473,473,452,0,516],
[418,424,439,457,446,438,374,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,489,463,474,481,476,490],
[459,0,437,460,510,465,462,485],
[401,453,0,429,457,430,449,465],
[427,430,461,0,473,450,449,468],
[416,380,433,417,0,425,427,443],
[409,425,460,440,465,0,467,493],
[414,428,441,441,463,423,0,439],
[400,405,425,422,447,397,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,467,414,438,421,438,497],
[460,0,480,466,435,452,457,501],
[423,410,0,432,447,435,450,439],
[476,424,458,0,413,427,462,433],
[452,455,443,477,0,406,467,507],
[469,438,455,463,484,0,468,493],
[452,433,440,428,423,422,0,424],
[393,389,451,457,383,397,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,307,237,268,329,449,461,244],
[583,0,424,365,447,626,583,551],
[653,466,0,505,401,643,549,587],
[622,525,385,0,496,636,634,464],
[561,443,489,394,0,583,600,481],
[441,264,247,254,307,0,442,328],
[429,307,341,256,290,448,0,394],
[646,339,303,426,409,562,496,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,378,441,429,415,400,422],
[437,0,389,441,423,437,445,413],
[512,501,0,447,475,467,436,470],
[449,449,443,0,441,416,388,421],
[461,467,415,449,0,473,465,432],
[475,453,423,474,417,0,452,469],
[490,445,454,502,425,438,0,474],
[468,477,420,469,458,421,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,438,437,435,457,424,457],
[457,0,456,465,447,458,433,458],
[452,434,0,436,451,444,447,436],
[453,425,454,0,451,467,471,448],
[455,443,439,439,0,459,446,466],
[433,432,446,423,431,0,445,454],
[466,457,443,419,444,445,0,450],
[433,432,454,442,424,436,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,461,476,466,447,437,454],
[456,0,442,477,474,413,445,456],
[429,448,0,475,470,437,438,448],
[414,413,415,0,434,424,417,424],
[424,416,420,456,0,430,409,414],
[443,477,453,466,460,0,462,448],
[453,445,452,473,481,428,0,441],
[436,434,442,466,476,442,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,417,396,376,432,432,431],
[485,0,449,430,436,479,497,457],
[473,441,0,452,445,474,494,469],
[494,460,438,0,420,515,486,459],
[514,454,445,470,0,499,506,507],
[458,411,416,375,391,0,437,448],
[458,393,396,404,384,453,0,402],
[459,433,421,431,383,442,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,416,399,413,438,413,408],
[458,0,446,415,433,460,445,410],
[474,444,0,422,423,422,415,402],
[491,475,468,0,444,459,452,432],
[477,457,467,446,0,467,449,415],
[452,430,468,431,423,0,411,425],
[477,445,475,438,441,479,0,454],
[482,480,488,458,475,465,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,421,416,424,503,701,494],
[410,0,358,403,325,279,577,392],
[469,532,0,389,624,476,607,541],
[474,487,501,0,392,563,518,352],
[466,565,266,498,0,547,605,502],
[387,611,414,327,343,0,566,412],
[189,313,283,372,285,324,0,277],
[396,498,349,538,388,478,613,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,450,449,438,446,454,458],
[454,0,464,440,452,454,433,436],
[440,426,0,427,425,437,447,421],
[441,450,463,0,459,444,464,438],
[452,438,465,431,0,426,434,436],
[444,436,453,446,464,0,452,439],
[436,457,443,426,456,438,0,444],
[432,454,469,452,454,451,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,436,446,442,430,445,432],
[442,0,443,456,448,434,428,416],
[454,447,0,478,433,446,455,423],
[444,434,412,0,431,426,422,413],
[448,442,457,459,0,423,428,445],
[460,456,444,464,467,0,445,439],
[445,462,435,468,462,445,0,444],
[458,474,467,477,445,451,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,452,444,455,433,429,443],
[437,0,447,444,459,475,466,465],
[438,443,0,416,435,432,422,440],
[446,446,474,0,446,446,421,459],
[435,431,455,444,0,433,418,444],
[457,415,458,444,457,0,448,442],
[461,424,468,469,472,442,0,477],
[447,425,450,431,446,448,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,461,428,441,474,456,440],
[473,0,461,448,448,441,432,454],
[429,429,0,424,427,461,419,428],
[462,442,466,0,455,472,450,439],
[449,442,463,435,0,482,451,444],
[416,449,429,418,408,0,403,422],
[434,458,471,440,439,487,0,435],
[450,436,462,451,446,468,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,438,467,423,468,420,450],
[463,0,454,483,442,500,450,452],
[452,436,0,451,439,448,425,430],
[423,407,439,0,424,448,417,389],
[467,448,451,466,0,461,438,450],
[422,390,442,442,429,0,389,407],
[470,440,465,473,452,501,0,449],
[440,438,460,501,440,483,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,488,451,439,456,473,451],
[433,0,465,423,438,435,446,430],
[402,425,0,410,416,414,448,412],
[439,467,480,0,428,449,457,432],
[451,452,474,462,0,436,469,450],
[434,455,476,441,454,0,467,442],
[417,444,442,433,421,423,0,422],
[439,460,478,458,440,448,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,438,473,445,462,424,449],
[399,0,398,443,417,449,413,442],
[452,492,0,445,467,451,442,467],
[417,447,445,0,432,447,460,443],
[445,473,423,458,0,459,476,470],
[428,441,439,443,431,0,431,441],
[466,477,448,430,414,459,0,445],
[441,448,423,447,420,449,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,503,458,480,462,470,449,436],
[387,0,436,462,439,462,451,442],
[432,454,0,454,431,450,462,450],
[410,428,436,0,447,434,439,445],
[428,451,459,443,0,457,462,459],
[420,428,440,456,433,0,427,416],
[441,439,428,451,428,463,0,439],
[454,448,440,445,431,474,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,458,452,451,468,456,465],
[473,0,460,455,444,473,447,460],
[432,430,0,449,435,449,434,452],
[438,435,441,0,444,470,458,449],
[439,446,455,446,0,471,455,447],
[422,417,441,420,419,0,433,432],
[434,443,456,432,435,457,0,445],
[425,430,438,441,443,458,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,434,424,427,426,417,417],
[447,0,438,454,433,452,408,444],
[456,452,0,442,452,493,444,463],
[466,436,448,0,448,484,447,439],
[463,457,438,442,0,474,436,453],
[464,438,397,406,416,0,412,424],
[473,482,446,443,454,478,0,451],
[473,446,427,451,437,466,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,432,452,415,458,462,448],
[452,0,438,458,431,468,447,455],
[458,452,0,436,454,467,451,458],
[438,432,454,0,454,480,461,466],
[475,459,436,436,0,480,466,459],
[432,422,423,410,410,0,440,423],
[428,443,439,429,424,450,0,437],
[442,435,432,424,431,467,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,425,442,387,476,383,460],
[456,0,403,485,471,482,416,494],
[465,487,0,480,391,467,429,492],
[448,405,410,0,401,441,329,454],
[503,419,499,489,0,480,447,499],
[414,408,423,449,410,0,391,471],
[507,474,461,561,443,499,0,524],
[430,396,398,436,391,419,366,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,473,436,466,472,474,476],
[416,0,437,426,428,449,435,443],
[417,453,0,415,421,451,404,456],
[454,464,475,0,442,458,465,469],
[424,462,469,448,0,443,446,464],
[418,441,439,432,447,0,413,454],
[416,455,486,425,444,477,0,451],
[414,447,434,421,426,436,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,466,493,386,466,325,556],
[444,0,446,509,494,470,285,329],
[424,444,0,638,558,495,333,381],
[397,381,252,0,338,207,268,278],
[504,396,332,552,0,454,473,492],
[424,420,395,683,436,0,307,393],
[565,605,557,622,417,583,0,647],
[334,561,509,612,398,497,243,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,477,458,443,437,458,508],
[425,0,457,427,426,451,432,480],
[413,433,0,439,417,440,441,452],
[432,463,451,0,455,439,444,493],
[447,464,473,435,0,470,466,458],
[453,439,450,451,420,0,450,485],
[432,458,449,446,424,440,0,474],
[382,410,438,397,432,405,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,426,464,429,426,438,431],
[455,0,429,452,441,465,435,431],
[464,461,0,485,458,461,439,465],
[426,438,405,0,430,429,421,421],
[461,449,432,460,0,434,460,464],
[464,425,429,461,456,0,475,440],
[452,455,451,469,430,415,0,452],
[459,459,425,469,426,450,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,425,434,470,427,453,436],
[423,0,411,471,459,425,463,474],
[465,479,0,508,454,442,434,426],
[456,419,382,0,468,415,446,431],
[420,431,436,422,0,449,419,464],
[463,465,448,475,441,0,447,472],
[437,427,456,444,471,443,0,454],
[454,416,464,459,426,418,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,449,461,436,447,432,453],
[452,0,449,441,452,455,470,452],
[441,441,0,465,437,439,444,443],
[429,449,425,0,433,435,436,444],
[454,438,453,457,0,436,442,451],
[443,435,451,455,454,0,440,449],
[458,420,446,454,448,450,0,443],
[437,438,447,446,439,441,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,405,455,474,422,429,449],
[447,0,392,379,460,394,471,501],
[485,498,0,380,492,506,432,496],
[435,511,510,0,512,487,525,547],
[416,430,398,378,0,428,428,422],
[468,496,384,403,462,0,468,424],
[461,419,458,365,462,422,0,471],
[441,389,394,343,468,466,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,375,313,420,481,457,418],
[441,0,380,369,468,466,437,476],
[515,510,0,372,453,486,490,412],
[577,521,518,0,476,479,493,430],
[470,422,437,414,0,485,423,441],
[409,424,404,411,405,0,427,391],
[433,453,400,397,467,463,0,420],
[472,414,478,460,449,499,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,461,450,454,437,460,444],
[418,0,425,444,419,429,418,421],
[429,465,0,479,459,478,450,440],
[440,446,411,0,415,433,435,420],
[436,471,431,475,0,444,443,456],
[453,461,412,457,446,0,448,448],
[430,472,440,455,447,442,0,432],
[446,469,450,470,434,442,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,535,380,367,449,474,403],
[413,0,383,341,322,462,388,410],
[355,507,0,334,366,434,403,454],
[510,549,556,0,524,585,434,481],
[523,568,524,366,0,493,524,506],
[441,428,456,305,397,0,377,314],
[416,502,487,456,366,513,0,518],
[487,480,436,409,384,576,372,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,458,427,473,441,457,468],
[446,0,430,458,438,460,544,476],
[432,460,0,418,394,473,475,501],
[463,432,472,0,450,476,534,469],
[417,452,496,440,0,497,493,513],
[449,430,417,414,393,0,520,475],
[433,346,415,356,397,370,0,454],
[422,414,389,421,377,415,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,442,486,460,465,520,478],
[468,0,432,443,426,465,464,435],
[448,458,0,460,444,468,452,451],
[404,447,430,0,404,432,475,419],
[430,464,446,486,0,457,505,422],
[425,425,422,458,433,0,454,410],
[370,426,438,415,385,436,0,383],
[412,455,439,471,468,480,507,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,491,489,537,478,364,456],
[491,0,610,352,651,503,461,413],
[399,280,0,350,518,373,313,317],
[401,538,540,0,497,451,460,414],
[353,239,372,393,0,358,340,336],
[412,387,517,439,532,0,398,314],
[526,429,577,430,550,492,0,346],
[434,477,573,476,554,576,544,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,493,333,278,468,425,422,447],
[397,0,407,252,332,473,254,543],
[557,483,0,410,596,456,508,554],
[612,638,480,0,401,542,443,679],
[422,558,294,489,0,366,498,509],
[465,417,434,348,524,0,523,455],
[468,636,382,447,392,367,0,585],
[443,347,336,211,381,435,305,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,457,453,439,436,462,465],
[443,0,442,448,443,441,467,476],
[433,448,0,435,424,464,464,461],
[437,442,455,0,434,429,425,483],
[451,447,466,456,0,437,453,468],
[454,449,426,461,453,0,449,479],
[428,423,426,465,437,441,0,469],
[425,414,429,407,422,411,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,455,462,462,445,449,458],
[442,0,458,414,430,411,445,418],
[435,432,0,390,450,427,421,443],
[428,476,500,0,462,444,427,445],
[428,460,440,428,0,418,441,452],
[445,479,463,446,472,0,469,474],
[441,445,469,463,449,421,0,456],
[432,472,447,445,438,416,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,436,448,417,446,449,426],
[461,0,446,464,433,446,457,457],
[454,444,0,468,464,456,469,448],
[442,426,422,0,432,420,459,438],
[473,457,426,458,0,444,470,443],
[444,444,434,470,446,0,436,453],
[441,433,421,431,420,454,0,452],
[464,433,442,452,447,437,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,432,426,414,448,446,358],
[466,0,474,426,432,402,457,401],
[458,416,0,420,459,376,446,449],
[464,464,470,0,470,427,435,438],
[476,458,431,420,0,474,409,436],
[442,488,514,463,416,0,483,475],
[444,433,444,455,481,407,0,507],
[532,489,441,452,454,415,383,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,440,465,468,423,440,454],
[451,0,432,467,436,436,426,438],
[450,458,0,466,443,447,447,447],
[425,423,424,0,422,425,431,427],
[422,454,447,468,0,462,450,433],
[467,454,443,465,428,0,446,440],
[450,464,443,459,440,444,0,441],
[436,452,443,463,457,450,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,428,415,411,412,453,420],
[457,0,459,449,442,449,474,473],
[462,431,0,453,442,440,475,475],
[475,441,437,0,449,427,464,455],
[479,448,448,441,0,444,455,481],
[478,441,450,463,446,0,465,459],
[437,416,415,426,435,425,0,418],
[470,417,415,435,409,431,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,436,412,435,431,425,432],
[428,0,449,447,428,435,445,456],
[454,441,0,472,457,454,465,445],
[478,443,418,0,453,455,446,474],
[455,462,433,437,0,427,450,444],
[459,455,436,435,463,0,458,465],
[465,445,425,444,440,432,0,451],
[458,434,445,416,446,425,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,453,429,423,466,412,450],
[475,0,457,477,460,468,445,452],
[437,433,0,428,448,460,423,432],
[461,413,462,0,452,472,430,443],
[467,430,442,438,0,455,425,435],
[424,422,430,418,435,0,399,419],
[478,445,467,460,465,491,0,469],
[440,438,458,447,455,471,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,423,437,414,429,415,440],
[465,0,430,438,437,431,435,451],
[467,460,0,459,445,469,457,477],
[453,452,431,0,454,422,457,464],
[476,453,445,436,0,436,436,457],
[461,459,421,468,454,0,462,480],
[475,455,433,433,454,428,0,455],
[450,439,413,426,433,410,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,470,431,460,454,451,460],
[437,0,455,445,453,445,448,437],
[420,435,0,453,427,411,456,438],
[459,445,437,0,444,434,443,471],
[430,437,463,446,0,451,458,476],
[436,445,479,456,439,0,450,477],
[439,442,434,447,432,440,0,461],
[430,453,452,419,414,413,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,448,451,454,470,447,424],
[454,0,416,448,418,435,463,401],
[442,474,0,478,478,482,512,470],
[439,442,412,0,453,416,447,407],
[436,472,412,437,0,472,475,397],
[420,455,408,474,418,0,464,418],
[443,427,378,443,415,426,0,388],
[466,489,420,483,493,472,502,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,421,443,449,449,484,443],
[452,0,412,447,444,447,462,435],
[469,478,0,460,440,455,481,450],
[447,443,430,0,412,446,455,451],
[441,446,450,478,0,442,422,436],
[441,443,435,444,448,0,451,432],
[406,428,409,435,468,439,0,430],
[447,455,440,439,454,458,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,428,485,454,455,461,438],
[443,0,395,463,441,468,435,421],
[462,495,0,531,441,489,547,461],
[405,427,359,0,411,395,473,391],
[436,449,449,479,0,418,524,361],
[435,422,401,495,472,0,504,464],
[429,455,343,417,366,386,0,399],
[452,469,429,499,529,426,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,388,459,471,433,477,451,498],
[502,0,457,470,445,501,428,499],
[431,433,0,451,413,427,409,455],
[419,420,439,0,441,454,391,463],
[457,445,477,449,0,477,437,500],
[413,389,463,436,413,0,406,448],
[439,462,481,499,453,484,0,498],
[392,391,435,427,390,442,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,424,419,413,498,427,474],
[436,0,441,396,433,418,379,518],
[466,449,0,391,418,544,452,511],
[471,494,499,0,432,480,455,526],
[477,457,472,458,0,479,434,515],
[392,472,346,410,411,0,389,490],
[463,511,438,435,456,501,0,525],
[416,372,379,364,375,400,365,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,434,476,453,409,420,549],
[417,0,520,544,546,523,489,541],
[456,370,0,466,444,379,373,476],
[414,346,424,0,473,446,399,520],
[437,344,446,417,0,396,394,518],
[481,367,511,444,494,0,454,531],
[470,401,517,491,496,436,0,497],
[341,349,414,370,372,359,393,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,462,459,440,450,463,471],
[431,0,445,445,434,441,451,449],
[428,445,0,463,436,443,461,459],
[431,445,427,0,430,439,459,458],
[450,456,454,460,0,418,442,470],
[440,449,447,451,472,0,450,464],
[427,439,429,431,448,440,0,441],
[419,441,431,432,420,426,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,449,452,387,457,429,427],
[460,0,446,433,401,478,470,454],
[441,444,0,410,434,453,450,421],
[438,457,480,0,405,455,476,436],
[503,489,456,485,0,484,505,437],
[433,412,437,435,406,0,425,410],
[461,420,440,414,385,465,0,390],
[463,436,469,454,453,480,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,427,454,435,459,439,443],
[452,0,441,451,440,464,455,452],
[463,449,0,430,446,447,447,443],
[436,439,460,0,450,457,428,435],
[455,450,444,440,0,462,443,434],
[431,426,443,433,428,0,432,415],
[451,435,443,462,447,458,0,447],
[447,438,447,455,456,475,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,418,468,588,446,473,425],
[427,0,474,503,449,480,463,404],
[472,416,0,501,484,502,471,436],
[422,387,389,0,461,410,433,361],
[302,441,406,429,0,443,472,355],
[444,410,388,480,447,0,467,451],
[417,427,419,457,418,423,0,419],
[465,486,454,529,535,439,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,385,404,355,292,326,375],
[408,0,403,415,316,368,324,345],
[505,487,0,426,364,345,349,377],
[486,475,464,0,449,377,418,455],
[535,574,526,441,0,402,447,380],
[598,522,545,513,488,0,454,445],
[564,566,541,472,443,436,0,415],
[515,545,513,435,510,445,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,434,428,423,462,432,474],
[437,0,458,437,464,452,455,476],
[456,432,0,431,461,461,437,455],
[462,453,459,0,450,444,436,476],
[467,426,429,440,0,438,428,474],
[428,438,429,446,452,0,436,471],
[458,435,453,454,462,454,0,465],
[416,414,435,414,416,419,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,490,485,482,439,384,417],
[501,0,478,506,478,511,443,484],
[400,412,0,470,451,404,411,401],
[405,384,420,0,431,436,378,360],
[408,412,439,459,0,444,400,383],
[451,379,486,454,446,0,376,415],
[506,447,479,512,490,514,0,436],
[473,406,489,530,507,475,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,433,431,421,441,426,420],
[473,0,451,470,443,462,456,456],
[457,439,0,453,411,432,417,419],
[459,420,437,0,408,427,425,425],
[469,447,479,482,0,450,456,443],
[449,428,458,463,440,0,440,420],
[464,434,473,465,434,450,0,435],
[470,434,471,465,447,470,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,440,417,444,451,423,405],
[443,0,464,452,450,440,457,457],
[450,426,0,461,431,437,435,430],
[473,438,429,0,434,447,427,420],
[446,440,459,456,0,460,464,432],
[439,450,453,443,430,0,451,449],
[467,433,455,463,426,439,0,423],
[485,433,460,470,458,441,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,412,433,403,420,419,366],
[464,0,433,456,439,428,465,424],
[478,457,0,436,403,395,450,397],
[457,434,454,0,477,479,485,462],
[487,451,487,413,0,500,440,381],
[470,462,495,411,390,0,428,430],
[471,425,440,405,450,462,0,379],
[524,466,493,428,509,460,511,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,446,445,427,457,448,414],
[449,0,434,464,450,463,468,447],
[444,456,0,455,458,449,444,430],
[445,426,435,0,432,428,440,435],
[463,440,432,458,0,456,458,431],
[433,427,441,462,434,0,456,452],
[442,422,446,450,432,434,0,433],
[476,443,460,455,459,438,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,468,437,453,444,420,438],
[449,0,473,453,443,463,442,454],
[422,417,0,444,449,426,415,451],
[453,437,446,0,458,442,449,450],
[437,447,441,432,0,441,439,466],
[446,427,464,448,449,0,439,457],
[470,448,475,441,451,451,0,455],
[452,436,439,440,424,433,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,423,448,467,445,432,436],
[434,0,452,465,438,439,432,422],
[467,438,0,453,443,438,450,413],
[442,425,437,0,433,421,437,424],
[423,452,447,457,0,424,434,434],
[445,451,452,469,466,0,467,445],
[458,458,440,453,456,423,0,421],
[454,468,477,466,456,445,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,440,427,431,417,425,443],
[472,0,449,462,440,469,437,455],
[450,441,0,441,450,454,443,437],
[463,428,449,0,453,447,445,449],
[459,450,440,437,0,450,439,469],
[473,421,436,443,440,0,443,437],
[465,453,447,445,451,447,0,439],
[447,435,453,441,421,453,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,385,454,454,418,357,439,440],
[505,0,497,452,422,450,471,530],
[436,393,0,448,399,362,415,505],
[436,438,442,0,387,418,439,524],
[472,468,491,503,0,449,399,504],
[533,440,528,472,441,0,456,453],
[451,419,475,451,491,434,0,470],
[450,360,385,366,386,437,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,441,426,430,456,444,448],
[449,0,461,419,454,421,457,457],
[449,429,0,440,428,452,425,478],
[464,471,450,0,416,436,453,463],
[460,436,462,474,0,478,466,471],
[434,469,438,454,412,0,442,435],
[446,433,465,437,424,448,0,436],
[442,433,412,427,419,455,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,441,435,486,454,441,435],
[459,0,424,446,457,438,442,447],
[449,466,0,443,462,466,439,453],
[455,444,447,0,482,452,451,476],
[404,433,428,408,0,449,449,415],
[436,452,424,438,441,0,450,434],
[449,448,451,439,441,440,0,435],
[455,443,437,414,475,456,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,460,469,491,446,424,434],
[429,0,427,418,439,437,419,398],
[430,463,0,431,478,430,403,428],
[421,472,459,0,466,442,421,436],
[399,451,412,424,0,411,402,432],
[444,453,460,448,479,0,458,450],
[466,471,487,469,488,432,0,471],
[456,492,462,454,458,440,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,433,440,455,470,436,485],
[429,0,433,409,432,471,414,466],
[457,457,0,421,424,474,448,469],
[450,481,469,0,456,492,445,490],
[435,458,466,434,0,489,441,466],
[420,419,416,398,401,0,408,452],
[454,476,442,445,449,482,0,462],
[405,424,421,400,424,438,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,436,447,443,458,426,464],
[446,0,452,452,436,456,442,461],
[454,438,0,446,422,455,414,457],
[443,438,444,0,451,443,439,474],
[447,454,468,439,0,450,458,464],
[432,434,435,447,440,0,428,460],
[464,448,476,451,432,462,0,476],
[426,429,433,416,426,430,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,291,395,432,374,481,287],
[441,0,360,332,475,320,364,365],
[599,530,0,461,531,386,455,336],
[495,558,429,0,560,437,382,441],
[458,415,359,330,0,303,258,296],
[516,570,504,453,587,0,432,535],
[409,526,435,508,632,458,0,429],
[603,525,554,449,594,355,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,463,464,430,482,442,417],
[413,0,425,467,435,438,449,428],
[427,465,0,417,420,444,463,432],
[426,423,473,0,416,485,447,461],
[460,455,470,474,0,464,418,428],
[408,452,446,405,426,0,408,406],
[448,441,427,443,472,482,0,434],
[473,462,458,429,462,484,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,515,474,497,489,490,412],
[479,0,521,466,463,453,433,415],
[375,369,0,416,429,412,396,340],
[416,424,474,0,432,476,396,390],
[393,427,461,458,0,474,445,410],
[401,437,478,414,416,0,408,445],
[400,457,494,494,445,482,0,418],
[478,475,550,500,480,445,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,408,446,455,433,456,443],
[454,0,406,422,421,460,440,457],
[482,484,0,469,456,471,444,441],
[444,468,421,0,449,449,441,466],
[435,469,434,441,0,463,446,433],
[457,430,419,441,427,0,425,464],
[434,450,446,449,444,465,0,462],
[447,433,449,424,457,426,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,465,408,448,413,450,476],
[429,0,430,439,451,423,435,470],
[425,460,0,415,445,445,433,469],
[482,451,475,0,467,442,466,460],
[442,439,445,423,0,450,447,476],
[477,467,445,448,440,0,468,484],
[440,455,457,424,443,422,0,462],
[414,420,421,430,414,406,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,433,447,412,421,431,437],
[422,0,453,424,427,417,444,440],
[457,437,0,457,407,434,426,418],
[443,466,433,0,424,459,429,448],
[478,463,483,466,0,475,483,441],
[469,473,456,431,415,0,428,454],
[459,446,464,461,407,462,0,466],
[453,450,472,442,449,436,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,469,485,470,422,461,452],
[468,0,444,453,465,463,468,453],
[421,446,0,466,484,459,463,449],
[405,437,424,0,468,431,457,429],
[420,425,406,422,0,405,429,418],
[468,427,431,459,485,0,453,438],
[429,422,427,433,461,437,0,426],
[438,437,441,461,472,452,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,449,386,442,520,473,447],
[404,0,413,382,411,527,505,423],
[441,477,0,434,491,511,470,405],
[504,508,456,0,552,517,504,426],
[448,479,399,338,0,484,485,363],
[370,363,379,373,406,0,450,389],
[417,385,420,386,405,440,0,349],
[443,467,485,464,527,501,541,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,435,452,432,434,462,433],
[444,0,436,467,440,424,447,451],
[455,454,0,450,421,432,439,445],
[438,423,440,0,417,424,425,438],
[458,450,469,473,0,441,460,465],
[456,466,458,466,449,0,479,435],
[428,443,451,465,430,411,0,439],
[457,439,445,452,425,455,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,341,385,438,367,366,440,385],
[549,0,387,432,432,451,534,568],
[505,503,0,433,467,394,525,421],
[452,458,457,0,418,406,511,410],
[523,458,423,472,0,461,506,447],
[524,439,496,484,429,0,562,472],
[450,356,365,379,384,328,0,407],
[505,322,469,480,443,418,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,438,453,429,419,446,409],
[465,0,444,459,446,458,454,447],
[452,446,0,445,425,442,424,421],
[437,431,445,0,424,458,448,406],
[461,444,465,466,0,455,455,440],
[471,432,448,432,435,0,433,435],
[444,436,466,442,435,457,0,425],
[481,443,469,484,450,455,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,435,434,400,362,474,434],
[417,0,427,450,364,457,435,424],
[455,463,0,472,401,419,488,533],
[456,440,418,0,328,338,369,507],
[490,526,489,562,0,418,477,578],
[528,433,471,552,472,0,464,532],
[416,455,402,521,413,426,0,414],
[456,466,357,383,312,358,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,453,496,458,444,462,495],
[468,0,444,475,470,457,451,470],
[437,446,0,446,492,430,432,440],
[394,415,444,0,432,430,409,428],
[432,420,398,458,0,456,412,435],
[446,433,460,460,434,0,454,455],
[428,439,458,481,478,436,0,434],
[395,420,450,462,455,435,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,413,437,434,446,424,433],
[461,0,424,443,417,429,455,439],
[477,466,0,425,458,444,465,473],
[453,447,465,0,442,465,465,456],
[456,473,432,448,0,442,414,443],
[444,461,446,425,448,0,415,462],
[466,435,425,425,476,475,0,454],
[457,451,417,434,447,428,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,424,426,435,457,457,433],
[423,0,407,407,419,444,440,419],
[466,483,0,446,459,476,490,444],
[464,483,444,0,460,471,486,436],
[455,471,431,430,0,446,448,453],
[433,446,414,419,444,0,468,432],
[433,450,400,404,442,422,0,411],
[457,471,446,454,437,458,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,445,493,501,481,472,464],
[403,0,423,451,459,441,491,415],
[445,467,0,452,441,471,456,454],
[397,439,438,0,480,466,426,426],
[389,431,449,410,0,423,425,413],
[409,449,419,424,467,0,435,373],
[418,399,434,464,465,455,0,408],
[426,475,436,464,477,517,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,436,459,464,467,447,442],
[444,0,463,463,443,429,472,457],
[454,427,0,457,483,446,458,452],
[431,427,433,0,446,423,433,440],
[426,447,407,444,0,427,449,435],
[423,461,444,467,463,0,478,438],
[443,418,432,457,441,412,0,421],
[448,433,438,450,455,452,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,464,467,430,471,519,446],
[447,0,500,443,446,457,470,430],
[426,390,0,448,404,486,514,425],
[423,447,442,0,431,469,505,434],
[460,444,486,459,0,432,522,424],
[419,433,404,421,458,0,484,414],
[371,420,376,385,368,406,0,399],
[444,460,465,456,466,476,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,448,438,450,453,441,450],
[451,0,473,454,438,427,433,450],
[442,417,0,452,421,430,437,464],
[452,436,438,0,435,443,446,443],
[440,452,469,455,0,471,463,449],
[437,463,460,447,419,0,468,437],
[449,457,453,444,427,422,0,445],
[440,440,426,447,441,453,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,452,442,435,462,459,443],
[443,0,471,437,448,466,445,451],
[438,419,0,447,460,447,438,437],
[448,453,443,0,452,453,430,439],
[455,442,430,438,0,464,428,447],
[428,424,443,437,426,0,439,434],
[431,445,452,460,462,451,0,445],
[447,439,453,451,443,456,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,455,430,458,447,443,432],
[446,0,495,442,448,433,437,436],
[435,395,0,431,424,396,417,414],
[460,448,459,0,424,427,428,440],
[432,442,466,466,0,412,418,441],
[443,457,494,463,478,0,454,449],
[447,453,473,462,472,436,0,441],
[458,454,476,450,449,441,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,415,468,400,297,418,413],
[457,0,427,512,460,399,464,413],
[475,463,0,480,427,393,464,482],
[422,378,410,0,430,461,474,494],
[490,430,463,460,0,378,404,453],
[593,491,497,429,512,0,513,488],
[472,426,426,416,486,377,0,431],
[477,477,408,396,437,402,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,407,359,381,386,424,426],
[501,0,466,392,428,449,456,493],
[483,424,0,442,462,425,471,451],
[531,498,448,0,442,501,505,509],
[509,462,428,448,0,422,480,477],
[504,441,465,389,468,0,483,504],
[466,434,419,385,410,407,0,464],
[464,397,439,381,413,386,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,454,430,450,469,424,439],
[464,0,460,462,467,486,445,448],
[436,430,0,434,450,479,424,439],
[460,428,456,0,472,453,442,446],
[440,423,440,418,0,474,426,426],
[421,404,411,437,416,0,422,415],
[466,445,466,448,464,468,0,436],
[451,442,451,444,464,475,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,496,406,431,405,355,442,446],
[394,0,405,459,394,442,431,415],
[484,485,0,579,439,442,471,482],
[459,431,311,0,415,319,423,380],
[485,496,451,475,0,375,413,455],
[535,448,448,571,515,0,463,440],
[448,459,419,467,477,427,0,400],
[444,475,408,510,435,450,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,436,449,425,478,473,450],
[443,0,435,501,417,451,487,427],
[454,455,0,429,439,491,453,389],
[441,389,461,0,421,462,454,400],
[465,473,451,469,0,468,487,434],
[412,439,399,428,422,0,438,388],
[417,403,437,436,403,452,0,427],
[440,463,501,490,456,502,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,444,458,429,453,427,444],
[462,0,444,465,440,472,469,462],
[446,446,0,464,462,486,437,474],
[432,425,426,0,429,422,417,426],
[461,450,428,461,0,460,475,472],
[437,418,404,468,430,0,457,435],
[463,421,453,473,415,433,0,439],
[446,428,416,464,418,455,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,430,431,427,435,447,437],
[468,0,464,463,451,454,446,444],
[460,426,0,454,446,441,446,458],
[459,427,436,0,448,442,414,422],
[463,439,444,442,0,447,429,453],
[455,436,449,448,443,0,430,445],
[443,444,444,476,461,460,0,459],
[453,446,432,468,437,445,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,462,433,431,421,458,464],
[428,0,448,430,440,432,425,450],
[428,442,0,428,429,432,420,451],
[457,460,462,0,465,424,429,462],
[459,450,461,425,0,439,445,459],
[469,458,458,466,451,0,439,475],
[432,465,470,461,445,451,0,468],
[426,440,439,428,431,415,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,433,507,526,452,431,452],
[426,0,441,486,550,534,461,515],
[457,449,0,570,531,445,509,530],
[383,404,320,0,467,475,495,433],
[364,340,359,423,0,381,409,460],
[438,356,445,415,509,0,441,443],
[459,429,381,395,481,449,0,439],
[438,375,360,457,430,447,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,459,449,455,465,445,418],
[442,0,451,461,447,453,434,429],
[431,439,0,422,448,480,417,422],
[441,429,468,0,442,473,415,426],
[435,443,442,448,0,439,449,437],
[425,437,410,417,451,0,430,414],
[445,456,473,475,441,460,0,447],
[472,461,468,464,453,476,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,423,464,446,446,474,505],
[424,0,460,500,468,473,465,474],
[467,430,0,475,507,441,465,488],
[426,390,415,0,421,424,434,467],
[444,422,383,469,0,410,411,463],
[444,417,449,466,480,0,476,471],
[416,425,425,456,479,414,0,463],
[385,416,402,423,427,419,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,410,381,477,395,484,351],
[457,0,402,455,380,406,455,364],
[480,488,0,405,503,437,450,446],
[509,435,485,0,523,491,494,485],
[413,510,387,367,0,390,453,376],
[495,484,453,399,500,0,472,482],
[406,435,440,396,437,418,0,396],
[539,526,444,405,514,408,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,436,422,437,441,450,458],
[446,0,454,436,427,422,450,445],
[454,436,0,420,424,450,452,458],
[468,454,470,0,456,442,467,456],
[453,463,466,434,0,424,461,446],
[449,468,440,448,466,0,465,458],
[440,440,438,423,429,425,0,444],
[432,445,432,434,444,432,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,436,448,410,409,448,451],
[464,0,433,452,439,435,457,460],
[454,457,0,451,442,456,468,458],
[442,438,439,0,424,423,467,467],
[480,451,448,466,0,432,461,466],
[481,455,434,467,458,0,452,478],
[442,433,422,423,429,438,0,456],
[439,430,432,423,424,412,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,445,416,411,427,443,439],
[458,0,434,449,440,457,456,432],
[445,456,0,439,439,462,458,437],
[474,441,451,0,457,469,467,459],
[479,450,451,433,0,473,460,455],
[463,433,428,421,417,0,450,453],
[447,434,432,423,430,440,0,427],
[451,458,453,431,435,437,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,429,469,449,440,457,426],
[487,0,477,515,501,445,490,479],
[461,413,0,473,452,410,446,442],
[421,375,417,0,461,376,411,447],
[441,389,438,429,0,415,438,425],
[450,445,480,514,475,0,475,444],
[433,400,444,479,452,415,0,423],
[464,411,448,443,465,446,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,435,429,432,433,419,449],
[448,0,420,421,434,422,426,458],
[455,470,0,450,430,423,436,463],
[461,469,440,0,462,444,467,455],
[458,456,460,428,0,441,419,422],
[457,468,467,446,449,0,451,442],
[471,464,454,423,471,439,0,467],
[441,432,427,435,468,448,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,467,481,442,445,452,487],
[411,0,457,484,446,462,428,458],
[423,433,0,449,398,432,397,471],
[409,406,441,0,424,443,396,449],
[448,444,492,466,0,454,433,455],
[445,428,458,447,436,0,427,465],
[438,462,493,494,457,463,0,485],
[403,432,419,441,435,425,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,447,455,462,469,451,456],
[447,0,439,443,461,447,469,445],
[443,451,0,453,448,458,445,464],
[435,447,437,0,459,459,470,464],
[428,429,442,431,0,429,456,457],
[421,443,432,431,461,0,444,467],
[439,421,445,420,434,446,0,450],
[434,445,426,426,433,423,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,295,359,310,349,416,551],
[425,0,352,392,401,469,477,499],
[595,538,0,508,557,392,603,631],
[531,498,382,0,469,371,489,572],
[580,489,333,421,0,300,508,585],
[541,421,498,519,590,0,515,563],
[474,413,287,401,382,375,0,468],
[339,391,259,318,305,327,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,450,434,431,429,431,417],
[440,0,445,426,444,450,443,434],
[440,445,0,446,432,420,435,427],
[456,464,444,0,447,447,458,452],
[459,446,458,443,0,438,439,430],
[461,440,470,443,452,0,447,449],
[459,447,455,432,451,443,0,455],
[473,456,463,438,460,441,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,443,451,462,446,441,452],
[453,0,446,456,464,448,445,475],
[447,444,0,468,464,464,451,450],
[439,434,422,0,483,437,445,433],
[428,426,426,407,0,449,427,445],
[444,442,426,453,441,0,451,452],
[449,445,439,445,463,439,0,458],
[438,415,440,457,445,438,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,445,448,491,369,476,417],
[501,0,478,471,501,404,496,478],
[445,412,0,419,359,360,479,391],
[442,419,471,0,425,459,405,394],
[399,389,531,465,0,450,479,440],
[521,486,530,431,440,0,462,389],
[414,394,411,485,411,428,0,393],
[473,412,499,496,450,501,497,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,614,475,489,479,489,340,489],
[276,0,624,489,628,263,505,489],
[415,266,0,288,139,276,266,526],
[401,401,602,0,388,276,262,522],
[411,262,751,502,0,276,262,387],
[401,627,614,614,614,0,741,741],
[550,385,624,628,628,149,0,514],
[401,401,364,368,503,149,376,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,444,420,405,422,428,453],
[468,0,462,469,450,438,476,488],
[446,428,0,457,450,428,460,469],
[470,421,433,0,430,399,423,454],
[485,440,440,460,0,440,457,461],
[468,452,462,491,450,0,445,493],
[462,414,430,467,433,445,0,451],
[437,402,421,436,429,397,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,384,437,431,440,444,482],
[439,0,392,443,393,402,354,412],
[506,498,0,466,459,501,402,523],
[453,447,424,0,383,453,441,423],
[459,497,431,507,0,477,516,492],
[450,488,389,437,413,0,415,464],
[446,536,488,449,374,475,0,466],
[408,478,367,467,398,426,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,419,447,468,459,408,414],
[476,0,463,459,441,475,455,429],
[471,427,0,398,432,478,425,408],
[443,431,492,0,399,451,395,393],
[422,449,458,491,0,471,435,435],
[431,415,412,439,419,0,417,397],
[482,435,465,495,455,473,0,455],
[476,461,482,497,455,493,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,423,472,440,464,397,432],
[485,0,463,473,458,414,385,460],
[467,427,0,445,436,422,414,428],
[418,417,445,0,419,401,403,401],
[450,432,454,471,0,444,429,462],
[426,476,468,489,446,0,424,422],
[493,505,476,487,461,466,0,427],
[458,430,462,489,428,468,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,437,466,471,420,466,431],
[448,0,458,478,476,455,495,436],
[453,432,0,459,440,428,489,449],
[424,412,431,0,441,421,452,452],
[419,414,450,449,0,428,481,447],
[470,435,462,469,462,0,470,466],
[424,395,401,438,409,420,0,424],
[459,454,441,438,443,424,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,395,402,351,432,419,383,372],
[495,0,412,423,423,476,411,421],
[488,478,0,426,460,550,453,454],
[539,467,464,0,496,548,445,414],
[458,467,430,394,0,521,424,422],
[471,414,340,342,369,0,344,388],
[507,479,437,445,466,546,0,447],
[518,469,436,476,468,502,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,465,433,452,448,462,455],
[447,0,451,423,441,453,458,457],
[425,439,0,406,433,449,440,438],
[457,467,484,0,465,457,443,477],
[438,449,457,425,0,465,466,454],
[442,437,441,433,425,0,463,455],
[428,432,450,447,424,427,0,459],
[435,433,452,413,436,435,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,435,482,534,482,451,510],
[424,0,370,469,461,406,425,505],
[455,520,0,453,473,431,431,521],
[408,421,437,0,479,443,420,479],
[356,429,417,411,0,410,439,449],
[408,484,459,447,480,0,434,495],
[439,465,459,470,451,456,0,485],
[380,385,369,411,441,395,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,472,488,425,438,440,425],
[427,0,438,462,435,391,417,423],
[418,452,0,463,431,443,449,470],
[402,428,427,0,407,387,406,405],
[465,455,459,483,0,453,442,423],
[452,499,447,503,437,0,450,441],
[450,473,441,484,448,440,0,462],
[465,467,420,485,467,449,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,393,427,419,452,430,432],
[482,0,428,439,439,473,444,428],
[497,462,0,442,458,474,461,453],
[463,451,448,0,421,470,444,462],
[471,451,432,469,0,449,436,430],
[438,417,416,420,441,0,443,436],
[460,446,429,446,454,447,0,463],
[458,462,437,428,460,454,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,510,432,461,472,445,416,464],
[380,0,420,466,437,382,412,436],
[458,470,0,463,446,462,438,404],
[429,424,427,0,478,447,376,390],
[418,453,444,412,0,418,420,430],
[445,508,428,443,472,0,474,416],
[474,478,452,514,470,416,0,449],
[426,454,486,500,460,474,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,451,427,459,447,428,453],
[450,0,463,434,469,430,455,456],
[439,427,0,438,445,442,445,449],
[463,456,452,0,448,444,447,467],
[431,421,445,442,0,421,442,430],
[443,460,448,446,469,0,449,472],
[462,435,445,443,448,441,0,443],
[437,434,441,423,460,418,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,464,475,458,430,420,465],
[438,0,431,460,424,433,425,451],
[426,459,0,459,435,433,444,455],
[415,430,431,0,428,430,392,426],
[432,466,455,462,0,432,439,422],
[460,457,457,460,458,0,445,439],
[470,465,446,498,451,445,0,461],
[425,439,435,464,468,451,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,393,553,263,418,229,476],
[422,0,432,511,415,322,313,528],
[497,458,0,619,408,313,474,449],
[337,379,271,0,134,329,326,337],
[627,475,482,756,0,408,515,534],
[472,568,577,561,482,0,560,390],
[661,577,416,564,375,330,0,448],
[414,362,441,553,356,500,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,451,448,425,438,444,419],
[461,0,456,451,443,428,455,437],
[439,434,0,451,409,414,417,428],
[442,439,439,0,418,423,461,440],
[465,447,481,472,0,452,437,467],
[452,462,476,467,438,0,447,452],
[446,435,473,429,453,443,0,428],
[471,453,462,450,423,438,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,422,431,441,429,431,434],
[447,0,431,442,444,435,438,436],
[468,459,0,435,441,437,439,449],
[459,448,455,0,444,457,448,447],
[449,446,449,446,0,460,435,453],
[461,455,453,433,430,0,441,447],
[459,452,451,442,455,449,0,439],
[456,454,441,443,437,443,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,439,440,420,446,426,401],
[435,0,435,409,441,457,421,414],
[451,455,0,442,453,464,417,419],
[450,481,448,0,430,457,438,434],
[470,449,437,460,0,465,446,436],
[444,433,426,433,425,0,418,409],
[464,469,473,452,444,472,0,451],
[489,476,471,456,454,481,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,441,442,457,434,426,437],
[438,0,440,438,424,434,432,440],
[449,450,0,444,474,445,459,458],
[448,452,446,0,447,445,440,446],
[433,466,416,443,0,439,437,430],
[456,456,445,445,451,0,447,462],
[464,458,431,450,453,443,0,435],
[453,450,432,444,460,428,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,439,440,431,448,437,445],
[487,0,484,484,442,497,479,465],
[451,406,0,443,412,449,426,431],
[450,406,447,0,393,453,439,449],
[459,448,478,497,0,489,469,439],
[442,393,441,437,401,0,431,430],
[453,411,464,451,421,459,0,444],
[445,425,459,441,451,460,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,439,452,439,435,447,446],
[453,0,447,434,463,449,450,457],
[451,443,0,436,420,449,448,475],
[438,456,454,0,438,458,438,458],
[451,427,470,452,0,455,460,464],
[455,441,441,432,435,0,440,464],
[443,440,442,452,430,450,0,456],
[444,433,415,432,426,426,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,448,400,419,411,427,424],
[425,0,460,416,429,393,416,418],
[442,430,0,423,386,404,414,391],
[490,474,467,0,391,469,460,429],
[471,461,504,499,0,437,456,454],
[479,497,486,421,453,0,447,461],
[463,474,476,430,434,443,0,444],
[466,472,499,461,436,429,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,440,416,434,399,411,429],
[466,0,438,484,448,454,470,459],
[450,452,0,464,425,385,444,420],
[474,406,426,0,437,436,455,455],
[456,442,465,453,0,438,445,451],
[491,436,505,454,452,0,474,459],
[479,420,446,435,445,416,0,463],
[461,431,470,435,439,431,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,446,454,470,454,465,444],
[444,0,440,453,449,454,442,441],
[444,450,0,456,474,446,446,455],
[436,437,434,0,474,466,445,455],
[420,441,416,416,0,445,434,443],
[436,436,444,424,445,0,455,422],
[425,448,444,445,456,435,0,439],
[446,449,435,435,447,468,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,448,411,444,469,431,444],
[470,0,434,423,435,465,446,476],
[442,456,0,448,435,500,427,444],
[479,467,442,0,480,494,457,465],
[446,455,455,410,0,462,468,455],
[421,425,390,396,428,0,413,437],
[459,444,463,433,422,477,0,455],
[446,414,446,425,435,453,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,446,432,456,381,443,404],
[481,0,468,506,518,456,474,442],
[444,422,0,469,482,424,453,432],
[458,384,421,0,453,398,385,416],
[434,372,408,437,0,374,396,399],
[509,434,466,492,516,0,471,484],
[447,416,437,505,494,419,0,423],
[486,448,458,474,491,406,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,388,392,433,414,406,414,425],
[502,0,439,455,438,437,455,454],
[498,451,0,450,458,429,448,469],
[457,435,440,0,455,424,448,443],
[476,452,432,435,0,447,440,451],
[484,453,461,466,443,0,439,454],
[476,435,442,442,450,451,0,445],
[465,436,421,447,439,436,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,465,437,446,422,441,445],
[445,0,446,437,443,421,442,440],
[425,444,0,453,435,407,438,443],
[453,453,437,0,448,446,444,445],
[444,447,455,442,0,431,447,424],
[468,469,483,444,459,0,459,461],
[449,448,452,446,443,431,0,446],
[445,450,447,445,466,429,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,258,387,358,323,346,319,389],
[632,0,418,564,476,320,494,546],
[503,472,0,435,369,475,407,499],
[532,326,455,0,335,369,421,455],
[567,414,521,555,0,444,541,492],
[544,570,415,521,446,0,439,564],
[571,396,483,469,349,451,0,422],
[501,344,391,435,398,326,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,468,462,499,438,439,466],
[438,0,471,444,444,460,457,477],
[422,419,0,440,438,443,447,462],
[428,446,450,0,441,450,444,468],
[391,446,452,449,0,450,410,454],
[452,430,447,440,440,0,450,461],
[451,433,443,446,480,440,0,462],
[424,413,428,422,436,429,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,434,442,423,453,421,423],
[456,0,422,434,453,416,408,433],
[456,468,0,427,449,476,428,426],
[448,456,463,0,465,471,454,421],
[467,437,441,425,0,434,441,459],
[437,474,414,419,456,0,404,401],
[469,482,462,436,449,486,0,436],
[467,457,464,469,431,489,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,443,437,451,462,437,432],
[430,0,453,438,455,452,445,434],
[447,437,0,437,462,454,437,448],
[453,452,453,0,438,473,436,475],
[439,435,428,452,0,445,432,449],
[428,438,436,417,445,0,445,437],
[453,445,453,454,458,445,0,464],
[458,456,442,415,441,453,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,453,454,423,473,462,430],
[477,0,452,453,440,485,492,463],
[437,438,0,451,434,504,473,425],
[436,437,439,0,428,461,482,445],
[467,450,456,462,0,465,485,412],
[417,405,386,429,425,0,431,429],
[428,398,417,408,405,459,0,440],
[460,427,465,445,478,461,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,398,413,370,433,464,405],
[482,0,449,442,425,529,479,477],
[492,441,0,489,491,484,525,523],
[477,448,401,0,427,504,510,457],
[520,465,399,463,0,509,503,523],
[457,361,406,386,381,0,432,454],
[426,411,365,380,387,458,0,444],
[485,413,367,433,367,436,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,407,454,493,429,429,463],
[416,0,418,426,435,444,464,436],
[483,472,0,437,482,415,438,483],
[436,464,453,0,476,429,482,466],
[397,455,408,414,0,367,443,431],
[461,446,475,461,523,0,427,459],
[461,426,452,408,447,463,0,449],
[427,454,407,424,459,431,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,445,464,385,455,428,434],
[487,0,460,441,454,477,432,441],
[445,430,0,489,440,481,405,423],
[426,449,401,0,423,458,453,420],
[505,436,450,467,0,491,483,482],
[435,413,409,432,399,0,389,411],
[462,458,485,437,407,501,0,417],
[456,449,467,470,408,479,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,473,399,462,532,455,499],
[463,0,508,450,408,479,477,456],
[417,382,0,427,425,472,464,403],
[491,440,463,0,481,457,449,493],
[428,482,465,409,0,543,473,432],
[358,411,418,433,347,0,421,399],
[435,413,426,441,417,469,0,391],
[391,434,487,397,458,491,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,461,466,446,449,442,471],
[404,0,441,452,433,419,428,446],
[429,449,0,430,423,432,431,451],
[424,438,460,0,427,426,412,447],
[444,457,467,463,0,450,466,466],
[441,471,458,464,440,0,448,463],
[448,462,459,478,424,442,0,456],
[419,444,439,443,424,427,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,434,459,460,474,466,449],
[440,0,456,451,475,470,454,441],
[456,434,0,458,457,446,454,440],
[431,439,432,0,450,448,451,449],
[430,415,433,440,0,430,443,430],
[416,420,444,442,460,0,426,455],
[424,436,436,439,447,464,0,432],
[441,449,450,441,460,435,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,469,404,444,409,442,463],
[458,0,447,422,419,433,406,453],
[421,443,0,414,426,420,430,453],
[486,468,476,0,453,444,451,453],
[446,471,464,437,0,459,456,454],
[481,457,470,446,431,0,448,449],
[448,484,460,439,434,442,0,456],
[427,437,437,437,436,441,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,519,421,393,518,475,495],
[451,0,473,365,489,570,353,456],
[371,417,0,340,389,484,358,456],
[469,525,550,0,487,540,397,397],
[497,401,501,403,0,516,374,508],
[372,320,406,350,374,0,439,362],
[415,537,532,493,516,451,0,421],
[395,434,434,493,382,528,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,462,485,577,473,444,506],
[428,0,442,451,537,425,425,522],
[428,448,0,489,522,468,424,490],
[405,439,401,0,571,442,427,446],
[313,353,368,319,0,411,364,339],
[417,465,422,448,479,0,465,430],
[446,465,466,463,526,425,0,462],
[384,368,400,444,551,460,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,405,488,417,391,415,414],
[477,0,479,493,474,447,430,439],
[485,411,0,499,483,418,432,465],
[402,397,391,0,394,407,403,394],
[473,416,407,496,0,440,439,440],
[499,443,472,483,450,0,446,449],
[475,460,458,487,451,444,0,445],
[476,451,425,496,450,441,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,447,432,427,422,448,428],
[438,0,417,465,434,380,426,436],
[443,473,0,475,392,405,433,437],
[458,425,415,0,408,412,446,396],
[463,456,498,482,0,415,496,450],
[468,510,485,478,475,0,495,437],
[442,464,457,444,394,395,0,428],
[462,454,453,494,440,453,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,477,436,445,433,434,437],
[417,0,488,440,463,450,467,438],
[413,402,0,438,397,405,485,431],
[454,450,452,0,447,434,455,436],
[445,427,493,443,0,466,453,435],
[457,440,485,456,424,0,459,446],
[456,423,405,435,437,431,0,437],
[453,452,459,454,455,444,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,439,430,432,463,434,431],
[448,0,451,443,447,480,442,460],
[451,439,0,462,454,470,453,438],
[460,447,428,0,458,485,425,422],
[458,443,436,432,0,454,438,406],
[427,410,420,405,436,0,407,404],
[456,448,437,465,452,483,0,433],
[459,430,452,468,484,486,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,504,478,464,446,498,438],
[465,0,465,443,459,382,504,425],
[386,425,0,470,447,404,510,422],
[412,447,420,0,495,340,528,410],
[426,431,443,395,0,391,468,411],
[444,508,486,550,499,0,588,475],
[392,386,380,362,422,302,0,350],
[452,465,468,480,479,415,540,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,470,457,431,449,460,431],
[434,0,404,430,408,407,451,418],
[420,486,0,455,443,450,451,446],
[433,460,435,0,420,455,430,433],
[459,482,447,470,0,471,475,441],
[441,483,440,435,419,0,461,432],
[430,439,439,460,415,429,0,422],
[459,472,444,457,449,458,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,472,443,453,444,430,462],
[447,0,437,487,473,473,469,444],
[418,453,0,461,471,479,474,480],
[447,403,429,0,441,464,429,455],
[437,417,419,449,0,436,464,450],
[446,417,411,426,454,0,454,439],
[460,421,416,461,426,436,0,452],
[428,446,410,435,440,451,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,378,404,407,398,419,380],
[478,0,504,477,504,437,464,455],
[512,386,0,427,472,470,456,435],
[486,413,463,0,400,452,446,426],
[483,386,418,490,0,438,428,423],
[492,453,420,438,452,0,438,470],
[471,426,434,444,462,452,0,457],
[510,435,455,464,467,420,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,409,452,439,451,438,434],
[419,0,445,436,431,476,450,463],
[481,445,0,476,435,478,507,459],
[438,454,414,0,424,455,475,425],
[451,459,455,466,0,438,482,440],
[439,414,412,435,452,0,464,435],
[452,440,383,415,408,426,0,429],
[456,427,431,465,450,455,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,413,461,437,419,431,466],
[429,0,451,440,485,465,453,458],
[477,439,0,482,466,450,433,451],
[429,450,408,0,434,400,440,448],
[453,405,424,456,0,394,419,441],
[471,425,440,490,496,0,472,471],
[459,437,457,450,471,418,0,443],
[424,432,439,442,449,419,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,449,437,441,483,468,488],
[413,0,416,424,438,467,417,420],
[441,474,0,449,456,450,435,446],
[453,466,441,0,465,484,470,454],
[449,452,434,425,0,480,452,449],
[407,423,440,406,410,0,429,412],
[422,473,455,420,438,461,0,437],
[402,470,444,436,441,478,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,464,448,455,373,449,398],
[456,0,530,478,462,394,435,491],
[426,360,0,406,407,332,422,379],
[442,412,484,0,417,484,459,459],
[435,428,483,473,0,432,489,461],
[517,496,558,406,458,0,421,484],
[441,455,468,431,401,469,0,455],
[492,399,511,431,429,406,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,483,430,470,417,434,440],
[453,0,468,450,462,443,444,464],
[407,422,0,453,407,426,454,393],
[460,440,437,0,429,412,431,427],
[420,428,483,461,0,417,464,432],
[473,447,464,478,473,0,469,438],
[456,446,436,459,426,421,0,474],
[450,426,497,463,458,452,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,426,405,434,412,416,422],
[492,0,495,454,446,437,433,460],
[464,395,0,409,452,440,431,425],
[485,436,481,0,459,419,441,445],
[456,444,438,431,0,414,397,412],
[478,453,450,471,476,0,441,458],
[474,457,459,449,493,449,0,436],
[468,430,465,445,478,432,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,441,506,489,474,454,488],
[412,0,415,470,411,433,387,438],
[449,475,0,426,457,476,446,419],
[384,420,464,0,453,415,377,405],
[401,479,433,437,0,478,434,464],
[416,457,414,475,412,0,426,481],
[436,503,444,513,456,464,0,492],
[402,452,471,485,426,409,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,501,542,489,460,533,433,530],
[389,0,428,411,451,397,362,411],
[348,462,0,354,376,408,344,446],
[401,479,536,0,513,479,492,577],
[430,439,514,377,0,481,434,490],
[357,493,482,411,409,0,414,468],
[457,528,546,398,456,476,0,500],
[360,479,444,313,400,422,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,455,463,438,450,447,448],
[453,0,430,460,464,455,485,462],
[435,460,0,480,454,456,478,470],
[427,430,410,0,435,447,437,449],
[452,426,436,455,0,443,460,450],
[440,435,434,443,447,0,453,457],
[443,405,412,453,430,437,0,448],
[442,428,420,441,440,433,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,388,424,443,463,406,404],
[501,0,482,511,466,476,422,457],
[502,408,0,476,444,539,477,453],
[466,379,414,0,484,473,421,448],
[447,424,446,406,0,479,432,407],
[427,414,351,417,411,0,368,443],
[484,468,413,469,458,522,0,466],
[486,433,437,442,483,447,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,393,441,434,425,449,441],
[475,0,422,425,432,458,433,433],
[497,468,0,465,419,481,471,461],
[449,465,425,0,433,457,452,474],
[456,458,471,457,0,441,441,477],
[465,432,409,433,449,0,426,450],
[441,457,419,438,449,464,0,483],
[449,457,429,416,413,440,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,423,444,433,459,440,443],
[449,0,450,438,452,451,442,460],
[467,440,0,464,460,465,468,484],
[446,452,426,0,428,434,445,425],
[457,438,430,462,0,460,452,462],
[431,439,425,456,430,0,444,459],
[450,448,422,445,438,446,0,444],
[447,430,406,465,428,431,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,462,432,447,463,449,443],
[444,0,454,415,440,436,459,444],
[428,436,0,424,444,449,425,441],
[458,475,466,0,457,452,446,445],
[443,450,446,433,0,441,461,445],
[427,454,441,438,449,0,426,430],
[441,431,465,444,429,464,0,443],
[447,446,449,445,445,460,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,358,410,531,364,467,421],
[452,0,414,426,462,512,425,456],
[532,476,0,439,580,394,365,396],
[480,464,451,0,532,506,456,341],
[359,428,310,358,0,202,487,296],
[526,378,496,384,688,0,415,430],
[423,465,525,434,403,475,0,425],
[469,434,494,549,594,460,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,400,412,438,420,462,427],
[467,0,455,452,437,437,460,463],
[490,435,0,455,418,473,471,452],
[478,438,435,0,411,453,452,460],
[452,453,472,479,0,433,464,468],
[470,453,417,437,457,0,474,464],
[428,430,419,438,426,416,0,431],
[463,427,438,430,422,426,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,440,447,436,480,462,455],
[443,0,446,423,479,476,435,447],
[450,444,0,440,440,423,439,427],
[443,467,450,0,474,465,438,472],
[454,411,450,416,0,459,443,451],
[410,414,467,425,431,0,429,436],
[428,455,451,452,447,461,0,441],
[435,443,463,418,439,454,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,467,436,441,483,449,440],
[432,0,427,438,442,445,419,454],
[423,463,0,462,441,461,442,447],
[454,452,428,0,448,447,452,425],
[449,448,449,442,0,465,409,432],
[407,445,429,443,425,0,402,417],
[441,471,448,438,481,488,0,478],
[450,436,443,465,458,473,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,471,458,444,469,465,442],
[430,0,460,463,445,442,440,445],
[419,430,0,433,428,432,444,440],
[432,427,457,0,422,461,451,435],
[446,445,462,468,0,472,452,474],
[421,448,458,429,418,0,442,462],
[425,450,446,439,438,448,0,447],
[448,445,450,455,416,428,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,450,426,445,475,457,419],
[468,0,469,447,441,445,455,428],
[440,421,0,444,423,421,437,426],
[464,443,446,0,454,425,462,465],
[445,449,467,436,0,434,430,419],
[415,445,469,465,456,0,468,452],
[433,435,453,428,460,422,0,428],
[471,462,464,425,471,438,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,369,513,501,291,391,535,424],
[521,0,470,406,334,493,484,437],
[377,420,0,471,255,295,446,335],
[389,484,419,0,323,381,422,371],
[599,556,635,567,0,436,434,525],
[499,397,595,509,454,0,598,495],
[355,406,444,468,456,292,0,380],
[466,453,555,519,365,395,510,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,480,431,395,425,424,433],
[469,0,471,461,418,450,458,448],
[410,419,0,427,399,419,418,410],
[459,429,463,0,408,395,435,382],
[495,472,491,482,0,461,491,431],
[465,440,471,495,429,0,479,430],
[466,432,472,455,399,411,0,427],
[457,442,480,508,459,460,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,459,444,468,519,537,496],
[452,0,475,365,472,494,469,484],
[431,415,0,450,407,494,522,519],
[446,525,440,0,469,567,541,485],
[422,418,483,421,0,467,478,467],
[371,396,396,323,423,0,480,407],
[353,421,368,349,412,410,0,405],
[394,406,371,405,423,483,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,457,459,442,450,454,453],
[442,0,473,474,446,466,438,445],
[433,417,0,432,442,441,420,436],
[431,416,458,0,448,449,438,450],
[448,444,448,442,0,457,454,455],
[440,424,449,441,433,0,428,445],
[436,452,470,452,436,462,0,481],
[437,445,454,440,435,445,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,455,436,421,460,435,446],
[448,0,445,425,427,456,420,421],
[435,445,0,425,431,466,450,463],
[454,465,465,0,438,477,446,445],
[469,463,459,452,0,456,432,449],
[430,434,424,413,434,0,440,447],
[455,470,440,444,458,450,0,452],
[444,469,427,445,441,443,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,457,432,453,458,442,436],
[450,0,442,454,445,465,429,452],
[433,448,0,452,434,479,424,458],
[458,436,438,0,443,461,454,456],
[437,445,456,447,0,466,446,452],
[432,425,411,429,424,0,406,423],
[448,461,466,436,444,484,0,441],
[454,438,432,434,438,467,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,457,438,480,412,482,437],
[444,0,486,451,443,435,483,460],
[433,404,0,500,420,428,424,421],
[452,439,390,0,437,446,414,442],
[410,447,470,453,0,381,420,446],
[478,455,462,444,509,0,485,424],
[408,407,466,476,470,405,0,418],
[453,430,469,448,444,466,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,482,433,444,439,466,449],
[421,0,429,424,427,408,457,391],
[408,461,0,413,444,433,463,427],
[457,466,477,0,424,432,476,411],
[446,463,446,466,0,440,471,425],
[451,482,457,458,450,0,490,441],
[424,433,427,414,419,400,0,406],
[441,499,463,479,465,449,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,429,469,452,425,453,392],
[451,0,451,459,454,450,404,421],
[461,439,0,452,463,480,466,469],
[421,431,438,0,440,392,434,435],
[438,436,427,450,0,405,438,426],
[465,440,410,498,485,0,451,439],
[437,486,424,456,452,439,0,468],
[498,469,421,455,464,451,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,402,418,428,412,426,440],
[453,0,421,448,428,443,450,447],
[488,469,0,445,464,451,466,465],
[472,442,445,0,431,419,474,439],
[462,462,426,459,0,453,461,477],
[478,447,439,471,437,0,466,458],
[464,440,424,416,429,424,0,438],
[450,443,425,451,413,432,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,477,470,453,387,462,426],
[476,0,524,591,492,425,500,518],
[413,366,0,475,450,421,445,487],
[420,299,415,0,420,385,454,435],
[437,398,440,470,0,406,394,494],
[503,465,469,505,484,0,436,506],
[428,390,445,436,496,454,0,432],
[464,372,403,455,396,384,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,454,461,458,413,442,454],
[459,0,452,462,455,445,458,458],
[436,438,0,475,459,427,423,455],
[429,428,415,0,449,421,418,404],
[432,435,431,441,0,424,435,450],
[477,445,463,469,466,0,464,470],
[448,432,467,472,455,426,0,442],
[436,432,435,486,440,420,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,421,424,442,422,435,402],
[437,0,418,458,450,422,436,440],
[469,472,0,458,484,426,442,456],
[466,432,432,0,462,408,455,443],
[448,440,406,428,0,436,399,425],
[468,468,464,482,454,0,450,431],
[455,454,448,435,491,440,0,405],
[488,450,434,447,465,459,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,428,457,433,445,422,444],
[437,0,429,441,455,443,434,479],
[462,461,0,475,432,471,458,467],
[433,449,415,0,435,426,427,438],
[457,435,458,455,0,444,437,441],
[445,447,419,464,446,0,435,464],
[468,456,432,463,453,455,0,471],
[446,411,423,452,449,426,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,505,409,486,463,437,469],
[405,0,386,392,446,436,421,393],
[385,504,0,411,515,472,479,464],
[481,498,479,0,489,444,427,470],
[404,444,375,401,0,385,445,446],
[427,454,418,446,505,0,458,479],
[453,469,411,463,445,432,0,453],
[421,497,426,420,444,411,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,449,459,457,489,463,451],
[446,0,460,473,445,465,443,448],
[441,430,0,431,433,461,434,440],
[431,417,459,0,432,460,457,431],
[433,445,457,458,0,473,455,454],
[401,425,429,430,417,0,440,425],
[427,447,456,433,435,450,0,443],
[439,442,450,459,436,465,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,443,431,440,454,429,458],
[428,0,442,463,464,443,429,443],
[447,448,0,447,455,473,445,472],
[459,427,443,0,454,437,453,445],
[450,426,435,436,0,451,433,445],
[436,447,417,453,439,0,421,477],
[461,461,445,437,457,469,0,443],
[432,447,418,445,445,413,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,419,428,431,426,417,449],
[449,0,419,454,424,449,442,441],
[471,471,0,481,468,446,428,449],
[462,436,409,0,430,426,433,452],
[459,466,422,460,0,449,436,469],
[464,441,444,464,441,0,459,468],
[473,448,462,457,454,431,0,465],
[441,449,441,438,421,422,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,419,446,471,475,448,451],
[426,0,446,425,460,440,460,483],
[471,444,0,434,444,483,429,447],
[444,465,456,0,459,474,459,453],
[419,430,446,431,0,474,430,432],
[415,450,407,416,416,0,399,420],
[442,430,461,431,460,491,0,453],
[439,407,443,437,458,470,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,434,450,454,448,454,447],
[441,0,453,473,460,435,439,453],
[456,437,0,457,466,435,427,438],
[440,417,433,0,445,418,421,403],
[436,430,424,445,0,406,436,438],
[442,455,455,472,484,0,466,441],
[436,451,463,469,454,424,0,438],
[443,437,452,487,452,449,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,451,468,471,446,437,459],
[433,0,426,456,454,456,429,425],
[439,464,0,451,482,474,427,446],
[422,434,439,0,426,439,407,433],
[419,436,408,464,0,444,425,408],
[444,434,416,451,446,0,444,441],
[453,461,463,483,465,446,0,433],
[431,465,444,457,482,449,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,445,441,465,479,467,428],
[418,0,404,430,420,432,442,421],
[445,486,0,459,451,475,497,467],
[449,460,431,0,410,476,471,428],
[425,470,439,480,0,468,474,463],
[411,458,415,414,422,0,454,420],
[423,448,393,419,416,436,0,440],
[462,469,423,462,427,470,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,495,433,448,405,561,479,442],
[395,0,443,479,474,532,384,376],
[457,447,0,459,529,544,459,424],
[442,411,431,0,546,552,505,339],
[485,416,361,344,0,602,403,457],
[329,358,346,338,288,0,330,243],
[411,506,431,385,487,560,0,412],
[448,514,466,551,433,647,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,432,434,415,466,492,448],
[405,0,439,447,458,448,472,461],
[458,451,0,451,403,457,497,499],
[456,443,439,0,462,469,494,458],
[475,432,487,428,0,516,557,436],
[424,442,433,421,374,0,477,410],
[398,418,393,396,333,413,0,375],
[442,429,391,432,454,480,515,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,444,429,429,432,468,419],
[433,0,450,439,413,405,463,419],
[446,440,0,431,450,419,456,441],
[461,451,459,0,420,419,450,388],
[461,477,440,470,0,427,444,410],
[458,485,471,471,463,0,467,445],
[422,427,434,440,446,423,0,433],
[471,471,449,502,480,445,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,442,435,443,451,410,443],
[464,0,472,455,484,445,446,421],
[448,418,0,399,440,457,419,422],
[455,435,491,0,440,462,428,444],
[447,406,450,450,0,451,428,401],
[439,445,433,428,439,0,429,417],
[480,444,471,462,462,461,0,457],
[447,469,468,446,489,473,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,435,448,446,431,430,455],
[454,0,448,470,440,436,460,454],
[455,442,0,445,447,455,459,475],
[442,420,445,0,461,430,458,450],
[444,450,443,429,0,444,457,475],
[459,454,435,460,446,0,424,465],
[460,430,431,432,433,466,0,477],
[435,436,415,440,415,425,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,402,452,442,519,407,473],
[483,0,447,477,484,472,415,441],
[488,443,0,448,502,515,460,490],
[438,413,442,0,437,472,411,468],
[448,406,388,453,0,505,405,452],
[371,418,375,418,385,0,388,414],
[483,475,430,479,485,502,0,501],
[417,449,400,422,438,476,389,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,452,463,437,477,497,486],
[433,0,468,465,459,472,415,449],
[438,422,0,426,431,440,414,414],
[427,425,464,0,420,431,434,400],
[453,431,459,470,0,495,423,434],
[413,418,450,459,395,0,409,390],
[393,475,476,456,467,481,0,438],
[404,441,476,490,456,500,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,416,427,451,464,443,447],
[423,0,426,410,464,406,479,457],
[474,464,0,417,483,447,470,472],
[463,480,473,0,484,437,503,448],
[439,426,407,406,0,423,442,428],
[426,484,443,453,467,0,462,454],
[447,411,420,387,448,428,0,398],
[443,433,418,442,462,436,492,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,443,454,419,408,453,485],
[436,0,462,497,448,424,458,467],
[447,428,0,478,418,431,441,479],
[436,393,412,0,397,424,474,451],
[471,442,472,493,0,467,469,499],
[482,466,459,466,423,0,480,476],
[437,432,449,416,421,410,0,477],
[405,423,411,439,391,414,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,466,430,465,435,446,432],
[455,0,447,425,474,454,440,437],
[424,443,0,443,461,449,417,427],
[460,465,447,0,462,456,436,426],
[425,416,429,428,0,437,423,422],
[455,436,441,434,453,0,423,442],
[444,450,473,454,467,467,0,446],
[458,453,463,464,468,448,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,441,446,471,442,480,462],
[435,0,446,440,448,431,441,410],
[449,444,0,452,455,463,440,462],
[444,450,438,0,450,433,444,435],
[419,442,435,440,0,430,430,422],
[448,459,427,457,460,0,455,439],
[410,449,450,446,460,435,0,435],
[428,480,428,455,468,451,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,366,431,429,466,448,343,400],
[524,0,518,509,532,378,423,451],
[459,372,0,357,412,414,407,406],
[461,381,533,0,478,462,335,380],
[424,358,478,412,0,422,382,307],
[442,512,476,428,468,0,503,388],
[547,467,483,555,508,387,0,473],
[490,439,484,510,583,502,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,451,435,426,405,432,428],
[455,0,466,445,448,425,462,430],
[439,424,0,430,435,417,436,423],
[455,445,460,0,438,431,442,450],
[464,442,455,452,0,430,454,425],
[485,465,473,459,460,0,451,436],
[458,428,454,448,436,439,0,439],
[462,460,467,440,465,454,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,437,466,452,432,506,457],
[445,0,409,458,435,439,493,467],
[453,481,0,465,462,445,494,471],
[424,432,425,0,441,441,473,425],
[438,455,428,449,0,438,465,443],
[458,451,445,449,452,0,498,429],
[384,397,396,417,425,392,0,413],
[433,423,419,465,447,461,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,425,410,413,435,414,371],
[483,0,426,418,423,453,445,418],
[465,464,0,447,458,459,434,389],
[480,472,443,0,453,472,443,438],
[477,467,432,437,0,455,458,450],
[455,437,431,418,435,0,418,383],
[476,445,456,447,432,472,0,409],
[519,472,501,452,440,507,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,464,474,435,448,455,440],
[435,0,455,447,432,441,431,423],
[426,435,0,428,427,426,427,433],
[416,443,462,0,442,430,421,428],
[455,458,463,448,0,430,450,444],
[442,449,464,460,460,0,449,467],
[435,459,463,469,440,441,0,443],
[450,467,457,462,446,423,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,443,417,435,433,392,437],
[414,0,381,411,393,404,354,382],
[447,509,0,460,475,425,436,407],
[473,479,430,0,492,445,408,476],
[455,497,415,398,0,430,397,434],
[457,486,465,445,460,0,434,399],
[498,536,454,482,493,456,0,417],
[453,508,483,414,456,491,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,398,416,455,471,357,570],
[405,0,419,449,413,474,381,454],
[492,471,0,446,430,474,301,471],
[474,441,444,0,411,499,453,502],
[435,477,460,479,0,421,365,568],
[419,416,416,391,469,0,435,453],
[533,509,589,437,525,455,0,586],
[320,436,419,388,322,437,304,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,473,436,441,429,469,449],
[457,0,482,441,458,457,474,447],
[417,408,0,419,440,431,472,413],
[454,449,471,0,434,438,460,458],
[449,432,450,456,0,403,448,434],
[461,433,459,452,487,0,468,460],
[421,416,418,430,442,422,0,406],
[441,443,477,432,456,430,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,425,429,437,434,419,438],
[448,0,428,398,428,421,423,437],
[465,462,0,450,430,445,430,458],
[461,492,440,0,467,432,424,465],
[453,462,460,423,0,422,432,468],
[456,469,445,458,468,0,458,452],
[471,467,460,466,458,432,0,465],
[452,453,432,425,422,438,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,446,435,456,486,446,431],
[445,0,443,439,456,464,434,429],
[444,447,0,441,451,450,438,441],
[455,451,449,0,456,467,432,441],
[434,434,439,434,0,454,424,418],
[404,426,440,423,436,0,410,417],
[444,456,452,458,466,480,0,453],
[459,461,449,449,472,473,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,456,470,465,457,463,438],
[413,0,440,453,423,432,426,408],
[434,450,0,446,457,444,451,456],
[420,437,444,0,435,413,416,419],
[425,467,433,455,0,421,425,447],
[433,458,446,477,469,0,459,444],
[427,464,439,474,465,431,0,450],
[452,482,434,471,443,446,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,450,434,394,422,447,465],
[449,0,432,427,437,428,450,433],
[440,458,0,419,407,413,451,445],
[456,463,471,0,428,450,480,457],
[496,453,483,462,0,426,505,459],
[468,462,477,440,464,0,496,465],
[443,440,439,410,385,394,0,413],
[425,457,445,433,431,425,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,448,413,430,434,439,471],
[442,0,432,437,439,437,405,440],
[442,458,0,454,427,393,456,445],
[477,453,436,0,442,403,445,433],
[460,451,463,448,0,433,437,464],
[456,453,497,487,457,0,472,438],
[451,485,434,445,453,418,0,463],
[419,450,445,457,426,452,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,428,455,478,424,450,413],
[458,0,448,488,460,436,441,450],
[462,442,0,453,464,464,445,427],
[435,402,437,0,438,416,458,438],
[412,430,426,452,0,432,467,447],
[466,454,426,474,458,0,462,438],
[440,449,445,432,423,428,0,415],
[477,440,463,452,443,452,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,353,461,491,489,319,330,517],
[537,0,445,504,462,515,376,501],
[429,445,0,562,458,426,447,432],
[399,386,328,0,473,434,389,365],
[401,428,432,417,0,379,300,401],
[571,375,464,456,511,0,435,435],
[560,514,443,501,590,455,0,440],
[373,389,458,525,489,455,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,420,415,432,398,447,436],
[466,0,428,442,479,446,452,462],
[470,462,0,442,468,450,455,451],
[475,448,448,0,456,427,475,447],
[458,411,422,434,0,406,431,439],
[492,444,440,463,484,0,471,464],
[443,438,435,415,459,419,0,451],
[454,428,439,443,451,426,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,451,431,445,438,436,431],
[459,0,454,471,480,476,446,442],
[439,436,0,452,468,476,461,449],
[459,419,438,0,458,452,428,424],
[445,410,422,432,0,444,454,411],
[452,414,414,438,446,0,422,451],
[454,444,429,462,436,468,0,462],
[459,448,441,466,479,439,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,458,456,469,432,455,440],
[419,0,447,439,467,436,430,434],
[432,443,0,446,453,425,430,440],
[434,451,444,0,474,453,448,445],
[421,423,437,416,0,412,430,440],
[458,454,465,437,478,0,455,439],
[435,460,460,442,460,435,0,442],
[450,456,450,445,450,451,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,427,429,428,444,445,453],
[472,0,458,454,463,462,437,479],
[463,432,0,413,425,443,440,438],
[461,436,477,0,426,470,421,469],
[462,427,465,464,0,453,465,441],
[446,428,447,420,437,0,418,429],
[445,453,450,469,425,472,0,453],
[437,411,452,421,449,461,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,458,420,486,440,430,440],
[450,0,461,391,451,415,406,451],
[432,429,0,461,405,412,442,467],
[470,499,429,0,483,430,415,442],
[404,439,485,407,0,428,450,411],
[450,475,478,460,462,0,421,461],
[460,484,448,475,440,469,0,434],
[450,439,423,448,479,429,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,454,464,413,433,431,430],
[442,0,463,458,397,444,419,423],
[436,427,0,450,406,424,429,411],
[426,432,440,0,404,434,427,403],
[477,493,484,486,0,473,465,441],
[457,446,466,456,417,0,445,453],
[459,471,461,463,425,445,0,448],
[460,467,479,487,449,437,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,443,444,405,457,438,445],
[487,0,457,475,451,498,465,445],
[447,433,0,444,421,446,437,421],
[446,415,446,0,413,440,416,417],
[485,439,469,477,0,479,457,470],
[433,392,444,450,411,0,429,422],
[452,425,453,474,433,461,0,443],
[445,445,469,473,420,468,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,414,456,478,467,459,496],
[430,0,447,461,481,484,424,437],
[476,443,0,432,482,473,464,466],
[434,429,458,0,478,481,465,478],
[412,409,408,412,0,420,413,452],
[423,406,417,409,470,0,465,435],
[431,466,426,425,477,425,0,464],
[394,453,424,412,438,455,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,458,456,432,447,463,442],
[436,0,429,440,424,474,447,435],
[432,461,0,451,452,438,452,427],
[434,450,439,0,440,461,453,463],
[458,466,438,450,0,484,492,449],
[443,416,452,429,406,0,474,427],
[427,443,438,437,398,416,0,416],
[448,455,463,427,441,463,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,464,456,454,445,434,437],
[439,0,470,446,439,443,419,446],
[426,420,0,435,403,426,400,417],
[434,444,455,0,416,429,427,419],
[436,451,487,474,0,451,442,455],
[445,447,464,461,439,0,445,455],
[456,471,490,463,448,445,0,461],
[453,444,473,471,435,435,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,421,431,399,426,411,419],
[453,0,444,514,440,431,417,432],
[469,446,0,465,442,427,411,430],
[459,376,425,0,390,420,389,423],
[491,450,448,500,0,438,436,449],
[464,459,463,470,452,0,450,435],
[479,473,479,501,454,440,0,436],
[471,458,460,467,441,455,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,437,444,464,476,454,421],
[478,0,468,462,443,451,477,466],
[453,422,0,439,417,419,464,416],
[446,428,451,0,439,416,457,437],
[426,447,473,451,0,456,453,460],
[414,439,471,474,434,0,421,413],
[436,413,426,433,437,469,0,454],
[469,424,474,453,430,477,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,506,485,465,465,420,455,437],
[384,0,414,444,398,399,434,421],
[405,476,0,475,434,429,450,479],
[425,446,415,0,427,445,437,475],
[425,492,456,463,0,419,495,445],
[470,491,461,445,471,0,471,486],
[435,456,440,453,395,419,0,413],
[453,469,411,415,445,404,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,417,414,404,427,457,436],
[453,0,426,419,432,428,430,450],
[473,464,0,453,424,439,451,469],
[476,471,437,0,443,447,464,466],
[486,458,466,447,0,431,463,463],
[463,462,451,443,459,0,464,432],
[433,460,439,426,427,426,0,459],
[454,440,421,424,427,458,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,429,425,431,424,421,444],
[445,0,423,438,428,418,428,435],
[461,467,0,450,462,464,435,460],
[465,452,440,0,456,444,460,442],
[459,462,428,434,0,431,441,468],
[466,472,426,446,459,0,464,458],
[469,462,455,430,449,426,0,458],
[446,455,430,448,422,432,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,469,428,443,460,453,448],
[402,0,401,417,418,411,414,413],
[421,489,0,430,423,415,431,415],
[462,473,460,0,463,453,446,427],
[447,472,467,427,0,439,453,439],
[430,479,475,437,451,0,442,435],
[437,476,459,444,437,448,0,443],
[442,477,475,463,451,455,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,433,430,466,439,453,457],
[450,0,456,452,447,449,437,445],
[457,434,0,458,463,456,462,461],
[460,438,432,0,486,440,441,466],
[424,443,427,404,0,423,467,438],
[451,441,434,450,467,0,470,443],
[437,453,428,449,423,420,0,423],
[433,445,429,424,452,447,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,427,453,438,444,449,443],
[460,0,441,460,448,452,438,455],
[463,449,0,464,443,453,450,452],
[437,430,426,0,443,436,440,451],
[452,442,447,447,0,452,435,453],
[446,438,437,454,438,0,430,431],
[441,452,440,450,455,460,0,462],
[447,435,438,439,437,459,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,449,453,461,431,436,437],
[441,0,462,434,450,423,456,418],
[441,428,0,438,445,411,432,413],
[437,456,452,0,451,454,440,452],
[429,440,445,439,0,402,427,430],
[459,467,479,436,488,0,473,450],
[454,434,458,450,463,417,0,427],
[453,472,477,438,460,440,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,450,441,445,452,452,447],
[450,0,451,441,407,454,453,443],
[440,439,0,429,411,447,439,433],
[449,449,461,0,445,453,453,441],
[445,483,479,445,0,482,461,446],
[438,436,443,437,408,0,458,452],
[438,437,451,437,429,432,0,440],
[443,447,457,449,444,438,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,466,411,479,439,525,460],
[424,0,459,426,458,440,478,431],
[424,431,0,399,455,429,438,415],
[479,464,491,0,521,475,516,434],
[411,432,435,369,0,419,448,434],
[451,450,461,415,471,0,521,451],
[365,412,452,374,442,369,0,410],
[430,459,475,456,456,439,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,452,464,448,439,462,468],
[444,0,450,454,444,430,427,463],
[438,440,0,443,436,467,461,463],
[426,436,447,0,440,437,442,445],
[442,446,454,450,0,441,443,461],
[451,460,423,453,449,0,444,447],
[428,463,429,448,447,446,0,450],
[422,427,427,445,429,443,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,466,495,503,448,519,498],
[465,0,491,467,429,411,483,458],
[424,399,0,495,382,410,435,450],
[395,423,395,0,423,361,401,394],
[387,461,508,467,0,422,487,441],
[442,479,480,529,468,0,507,508],
[371,407,455,489,403,383,0,418],
[392,432,440,496,449,382,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,407,447,436,451,443,472],
[428,0,395,459,397,432,408,428],
[483,495,0,484,478,500,455,420],
[443,431,406,0,436,475,464,462],
[454,493,412,454,0,475,457,453],
[439,458,390,415,415,0,420,422],
[447,482,435,426,433,470,0,413],
[418,462,470,428,437,468,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,472,457,465,468,446,440],
[441,0,479,449,448,457,451,442],
[418,411,0,442,445,434,448,423],
[433,441,448,0,438,454,439,412],
[425,442,445,452,0,469,441,430],
[422,433,456,436,421,0,412,393],
[444,439,442,451,449,478,0,455],
[450,448,467,478,460,497,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,438,430,423,435,423,460],
[460,0,448,414,443,453,447,443],
[452,442,0,445,442,475,432,444],
[460,476,445,0,456,467,469,490],
[467,447,448,434,0,456,439,453],
[455,437,415,423,434,0,446,448],
[467,443,458,421,451,444,0,463],
[430,447,446,400,437,442,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,305,348,479,547,342,497,380],
[585,0,408,437,521,351,523,352],
[542,482,0,491,641,420,562,369],
[411,453,399,0,501,503,542,481],
[343,369,249,389,0,306,343,431],
[548,539,470,387,584,0,470,469],
[393,367,328,348,547,420,0,320],
[510,538,521,409,459,421,570,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,438,502,452,443,458,465],
[423,0,418,458,420,404,415,464],
[452,472,0,480,431,454,463,459],
[388,432,410,0,420,408,411,421],
[438,470,459,470,0,448,472,467],
[447,486,436,482,442,0,461,444],
[432,475,427,479,418,429,0,438],
[425,426,431,469,423,446,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,464,446,412,420,443,419],
[461,0,452,449,436,438,439,423],
[426,438,0,421,421,429,439,401],
[444,441,469,0,432,428,460,447],
[478,454,469,458,0,473,451,440],
[470,452,461,462,417,0,436,438],
[447,451,451,430,439,454,0,435],
[471,467,489,443,450,452,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,424,467,414,431,448,465],
[440,0,457,456,416,451,454,481],
[466,433,0,426,411,425,428,471],
[423,434,464,0,411,436,468,480],
[476,474,479,479,0,443,471,530],
[459,439,465,454,447,0,422,485],
[442,436,462,422,419,468,0,486],
[425,409,419,410,360,405,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,434,473,439,416,479,441],
[458,0,426,469,432,456,475,439],
[456,464,0,499,472,439,469,465],
[417,421,391,0,429,395,470,425],
[451,458,418,461,0,432,470,417],
[474,434,451,495,458,0,458,454],
[411,415,421,420,420,432,0,441],
[449,451,425,465,473,436,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,358,398,388,410,413,438,385],
[532,0,428,439,458,432,467,422],
[492,462,0,446,462,445,472,442],
[502,451,444,0,434,423,481,449],
[480,432,428,456,0,465,457,449],
[477,458,445,467,425,0,468,448],
[452,423,418,409,433,422,0,419],
[505,468,448,441,441,442,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,408,429,448,451,419,409],
[475,0,458,452,463,455,447,403],
[482,432,0,453,450,449,430,393],
[461,438,437,0,435,457,459,423],
[442,427,440,455,0,493,464,424],
[439,435,441,433,397,0,435,453],
[471,443,460,431,426,455,0,408],
[481,487,497,467,466,437,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,464,478,450,489,473,493],
[465,0,483,500,426,474,478,458],
[426,407,0,436,453,479,499,454],
[412,390,454,0,428,446,448,405],
[440,464,437,462,0,493,489,501],
[401,416,411,444,397,0,467,436],
[417,412,391,442,401,423,0,390],
[397,432,436,485,389,454,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,400,485,499,464,471,481],
[412,0,448,443,480,434,471,451],
[490,442,0,443,489,465,502,493],
[405,447,447,0,456,432,444,498],
[391,410,401,434,0,446,430,438],
[426,456,425,458,444,0,428,434],
[419,419,388,446,460,462,0,469],
[409,439,397,392,452,456,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,446,438,425,442,436,441],
[433,0,424,440,411,417,422,415],
[444,466,0,458,421,440,429,439],
[452,450,432,0,441,447,445,428],
[465,479,469,449,0,464,438,435],
[448,473,450,443,426,0,438,431],
[454,468,461,445,452,452,0,453],
[449,475,451,462,455,459,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,426,504,479,472,428,488],
[412,0,438,432,420,416,415,443],
[464,452,0,466,440,427,424,455],
[386,458,424,0,418,385,394,474],
[411,470,450,472,0,426,392,424],
[418,474,463,505,464,0,445,480],
[462,475,466,496,498,445,0,490],
[402,447,435,416,466,410,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,466,443,444,471,450,440],
[452,0,460,445,439,453,451,448],
[424,430,0,455,442,444,441,438],
[447,445,435,0,462,446,454,438],
[446,451,448,428,0,459,460,458],
[419,437,446,444,431,0,444,449],
[440,439,449,436,430,446,0,425],
[450,442,452,452,432,441,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,379,445,393,436,415,426,408],
[511,0,480,455,491,448,454,435],
[445,410,0,423,463,431,398,447],
[497,435,467,0,463,471,473,433],
[454,399,427,427,0,458,404,444],
[475,442,459,419,432,0,461,413],
[464,436,492,417,486,429,0,432],
[482,455,443,457,446,477,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,445,447,426,462,448,436],
[461,0,445,433,421,464,476,476],
[445,445,0,443,424,443,446,466],
[443,457,447,0,451,450,450,459],
[464,469,466,439,0,444,460,465],
[428,426,447,440,446,0,449,466],
[442,414,444,440,430,441,0,472],
[454,414,424,431,425,424,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,477,457,440,434,458,471],
[425,0,423,414,387,424,415,410],
[413,467,0,432,439,412,426,437],
[433,476,458,0,460,449,454,485],
[450,503,451,430,0,462,436,422],
[456,466,478,441,428,0,445,497],
[432,475,464,436,454,445,0,436],
[419,480,453,405,468,393,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,464,454,468,448,475,419],
[406,0,444,427,429,444,391,397],
[426,446,0,426,436,455,421,424],
[436,463,464,0,479,463,441,455],
[422,461,454,411,0,498,426,438],
[442,446,435,427,392,0,443,426],
[415,499,469,449,464,447,0,411],
[471,493,466,435,452,464,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,462,458,467,453,439,476],
[416,0,453,445,431,457,451,450],
[428,437,0,438,415,451,434,443],
[432,445,452,0,439,454,449,461],
[423,459,475,451,0,459,450,463],
[437,433,439,436,431,0,435,453],
[451,439,456,441,440,455,0,458],
[414,440,447,429,427,437,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,461,464,426,475,476,462],
[466,0,449,435,447,449,473,432],
[429,441,0,447,438,431,445,396],
[426,455,443,0,430,419,469,429],
[464,443,452,460,0,448,472,436],
[415,441,459,471,442,0,444,422],
[414,417,445,421,418,446,0,419],
[428,458,494,461,454,468,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,433,448,488,440,433,451],
[429,0,439,442,422,435,441,449],
[457,451,0,471,468,450,456,428],
[442,448,419,0,464,434,459,445],
[402,468,422,426,0,430,432,441],
[450,455,440,456,460,0,456,448],
[457,449,434,431,458,434,0,436],
[439,441,462,445,449,442,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,440,465,439,449,493,412],
[473,0,470,484,448,516,507,440],
[450,420,0,438,423,476,468,463],
[425,406,452,0,412,480,458,422],
[451,442,467,478,0,481,497,425],
[441,374,414,410,409,0,431,371],
[397,383,422,432,393,459,0,383],
[478,450,427,468,465,519,507,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,442,494,429,466,501,466],
[425,0,462,455,437,461,451,425],
[448,428,0,436,450,454,465,463],
[396,435,454,0,424,421,457,400],
[461,453,440,466,0,456,469,422],
[424,429,436,469,434,0,462,442],
[389,439,425,433,421,428,0,392],
[424,465,427,490,468,448,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,374,393,421,424,431,392],
[467,0,430,442,436,459,462,429],
[516,460,0,428,475,476,473,458],
[497,448,462,0,464,489,481,441],
[469,454,415,426,0,470,457,419],
[466,431,414,401,420,0,443,407],
[459,428,417,409,433,447,0,409],
[498,461,432,449,471,483,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,447,452,477,436,450,438],
[453,0,440,442,451,443,432,455],
[443,450,0,445,476,438,435,428],
[438,448,445,0,455,444,434,432],
[413,439,414,435,0,432,429,409],
[454,447,452,446,458,0,437,429],
[440,458,455,456,461,453,0,434],
[452,435,462,458,481,461,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,447,422,438,457,429,458],
[456,0,457,431,432,454,427,425],
[443,433,0,421,442,462,417,443],
[468,459,469,0,427,488,451,461],
[452,458,448,463,0,459,440,458],
[433,436,428,402,431,0,425,429],
[461,463,473,439,450,465,0,456],
[432,465,447,429,432,461,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,475,441,459,421,446,439],
[459,0,444,422,470,411,409,439],
[415,446,0,432,454,431,411,442],
[449,468,458,0,459,430,420,448],
[431,420,436,431,0,409,432,411],
[469,479,459,460,481,0,441,433],
[444,481,479,470,458,449,0,452],
[451,451,448,442,479,457,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,416,447,454,433,407,431],
[478,0,478,470,443,420,457,438],
[474,412,0,426,448,447,429,418],
[443,420,464,0,425,458,404,430],
[436,447,442,465,0,447,450,414],
[457,470,443,432,443,0,430,487],
[483,433,461,486,440,460,0,434],
[459,452,472,460,476,403,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,472,441,462,441,444,427],
[444,0,472,469,465,448,458,440],
[418,418,0,431,456,450,442,436],
[449,421,459,0,452,419,450,425],
[428,425,434,438,0,433,440,422],
[449,442,440,471,457,0,431,456],
[446,432,448,440,450,459,0,423],
[463,450,454,465,468,434,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,454,445,463,473,445,463],
[407,0,439,423,441,418,413,435],
[436,451,0,430,456,453,425,452],
[445,467,460,0,482,454,449,476],
[427,449,434,408,0,432,445,440],
[417,472,437,436,458,0,425,451],
[445,477,465,441,445,465,0,495],
[427,455,438,414,450,439,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,445,433,465,513,485,441],
[392,0,404,403,414,534,476,453],
[445,486,0,422,385,530,536,496],
[457,487,468,0,424,536,485,494],
[425,476,505,466,0,591,539,561],
[377,356,360,354,299,0,406,452],
[405,414,354,405,351,484,0,433],
[449,437,394,396,329,438,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,407,404,406,397,421,404],
[453,0,393,378,431,444,418,428],
[483,497,0,435,483,452,469,506],
[486,512,455,0,458,420,424,466],
[484,459,407,432,0,462,456,442],
[493,446,438,470,428,0,465,448],
[469,472,421,466,434,425,0,488],
[486,462,384,424,448,442,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,427,439,438,436,441,453],
[450,0,452,435,455,455,418,446],
[463,438,0,461,469,448,449,455],
[451,455,429,0,473,458,444,469],
[452,435,421,417,0,453,416,430],
[454,435,442,432,437,0,424,438],
[449,472,441,446,474,466,0,464],
[437,444,435,421,460,452,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,493,454,436,394,450,383,433],
[397,0,421,428,384,436,349,414],
[436,469,0,451,496,493,448,457],
[454,462,439,0,485,515,350,439],
[496,506,394,405,0,447,463,469],
[440,454,397,375,443,0,399,414],
[507,541,442,540,427,491,0,450],
[457,476,433,451,421,476,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,478,443,449,447,485,464],
[431,0,458,425,437,416,468,447],
[412,432,0,431,425,399,427,437],
[447,465,459,0,434,422,467,470],
[441,453,465,456,0,439,490,466],
[443,474,491,468,451,0,493,490],
[405,422,463,423,400,397,0,419],
[426,443,453,420,424,400,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,457,454,434,450,460,454],
[436,0,429,431,447,445,455,447],
[433,461,0,438,435,461,470,440],
[436,459,452,0,444,441,418,446],
[456,443,455,446,0,436,431,459],
[440,445,429,449,454,0,466,466],
[430,435,420,472,459,424,0,442],
[436,443,450,444,431,424,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,465,420,450,445,435,468],
[413,0,482,423,440,438,432,447],
[425,408,0,384,436,419,386,441],
[470,467,506,0,486,444,457,410],
[440,450,454,404,0,437,432,433],
[445,452,471,446,453,0,444,407],
[455,458,504,433,458,446,0,448],
[422,443,449,480,457,483,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,440,427,440,434,415,469],
[469,0,481,437,470,486,451,457],
[450,409,0,408,452,416,456,435],
[463,453,482,0,457,459,469,431],
[450,420,438,433,0,432,461,433],
[456,404,474,431,458,0,451,451],
[475,439,434,421,429,439,0,439],
[421,433,455,459,457,439,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,440,464,469,432,437,461],
[446,0,437,479,448,426,436,464],
[450,453,0,440,459,423,417,427],
[426,411,450,0,414,409,418,450],
[421,442,431,476,0,452,448,423],
[458,464,467,481,438,0,410,465],
[453,454,473,472,442,480,0,487],
[429,426,463,440,467,425,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,479,419,396,454,434,426],
[456,0,444,438,430,461,464,428],
[411,446,0,373,406,432,428,408],
[471,452,517,0,430,483,460,444],
[494,460,484,460,0,463,428,452],
[436,429,458,407,427,0,458,418],
[456,426,462,430,462,432,0,379],
[464,462,482,446,438,472,511,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,453,449,470,432,461,395],
[433,0,443,446,480,458,487,415],
[437,447,0,435,477,455,483,446],
[441,444,455,0,457,446,455,417],
[420,410,413,433,0,415,436,368],
[458,432,435,444,475,0,514,420],
[429,403,407,435,454,376,0,385],
[495,475,444,473,522,470,505,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,472,442,491,508,469,452],
[420,0,484,464,452,465,479,423],
[418,406,0,460,460,436,498,414],
[448,426,430,0,427,469,443,395],
[399,438,430,463,0,452,441,394],
[382,425,454,421,438,0,465,377],
[421,411,392,447,449,425,0,383],
[438,467,476,495,496,513,507,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,460,380,415,397,391,496],
[469,0,450,381,400,457,400,467],
[430,440,0,386,471,381,391,427],
[510,509,504,0,538,444,455,531],
[475,490,419,352,0,428,386,444],
[493,433,509,446,462,0,409,506],
[499,490,499,435,504,481,0,504],
[394,423,463,359,446,384,386,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,437,445,448,457,427,460],
[432,0,431,435,436,431,416,452],
[453,459,0,454,464,439,436,456],
[445,455,436,0,451,457,417,461],
[442,454,426,439,0,436,450,460],
[433,459,451,433,454,0,430,455],
[463,474,454,473,440,460,0,450],
[430,438,434,429,430,435,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,411,444,457,416,423,444],
[441,0,364,381,413,425,402,371],
[479,526,0,423,473,461,437,431],
[446,509,467,0,445,445,421,414],
[433,477,417,445,0,453,452,456],
[474,465,429,445,437,0,421,398],
[467,488,453,469,438,469,0,403],
[446,519,459,476,434,492,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,398,397,447,447,407,355],
[454,0,388,488,445,409,467,393],
[492,502,0,449,437,416,432,399],
[493,402,441,0,409,419,449,395],
[443,445,453,481,0,469,476,473],
[443,481,474,471,421,0,477,407],
[483,423,458,441,414,413,0,365],
[535,497,491,495,417,483,525,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,444,439,416,411,458,437],
[440,0,457,455,453,455,462,459],
[446,433,0,437,435,429,443,435],
[451,435,453,0,445,427,472,441],
[474,437,455,445,0,441,434,446],
[479,435,461,463,449,0,485,485],
[432,428,447,418,456,405,0,440],
[453,431,455,449,444,405,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,452,458,449,442,435,445],
[433,0,438,423,426,419,431,423],
[438,452,0,429,451,445,457,422],
[432,467,461,0,444,450,458,449],
[441,464,439,446,0,448,450,439],
[448,471,445,440,442,0,448,436],
[455,459,433,432,440,442,0,428],
[445,467,468,441,451,454,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,451,420,401,408,420,447],
[439,0,432,410,406,433,428,446],
[439,458,0,448,417,429,427,460],
[470,480,442,0,434,441,456,471],
[489,484,473,456,0,486,441,456],
[482,457,461,449,404,0,431,460],
[470,462,463,434,449,459,0,461],
[443,444,430,419,434,430,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,449,459,458,457,444,462],
[419,0,418,444,461,433,444,434],
[441,472,0,474,459,470,458,467],
[431,446,416,0,425,431,447,433],
[432,429,431,465,0,438,447,439],
[433,457,420,459,452,0,435,447],
[446,446,432,443,443,455,0,438],
[428,456,423,457,451,443,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,442,455,430,429,453,454],
[443,0,443,441,447,438,444,440],
[448,447,0,459,437,459,467,473],
[435,449,431,0,438,425,438,426],
[460,443,453,452,0,430,442,439],
[461,452,431,465,460,0,451,451],
[437,446,423,452,448,439,0,440],
[436,450,417,464,451,439,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,453,417,468,394,456,444],
[478,0,507,462,463,416,448,440],
[437,383,0,384,444,413,435,457],
[473,428,506,0,467,456,464,432],
[422,427,446,423,0,360,444,443],
[496,474,477,434,530,0,481,483],
[434,442,455,426,446,409,0,427],
[446,450,433,458,447,407,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,472,417,439,456,430,439],
[460,0,431,427,418,422,411,436],
[418,459,0,395,384,407,416,402],
[473,463,495,0,437,471,449,476],
[451,472,506,453,0,436,425,478],
[434,468,483,419,454,0,419,457],
[460,479,474,441,465,471,0,441],
[451,454,488,414,412,433,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,450,467,441,430,442,454],
[439,0,442,442,447,449,441,459],
[440,448,0,443,454,441,456,442],
[423,448,447,0,453,430,445,465],
[449,443,436,437,0,437,431,447],
[460,441,449,460,453,0,458,452],
[448,449,434,445,459,432,0,442],
[436,431,448,425,443,438,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,429,436,422,430,430,448],
[453,0,442,444,454,443,422,464],
[461,448,0,440,414,440,420,442],
[454,446,450,0,436,429,436,440],
[468,436,476,454,0,447,448,455],
[460,447,450,461,443,0,459,459],
[460,468,470,454,442,431,0,476],
[442,426,448,450,435,431,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,474,470,453,468,476,480],
[452,0,474,431,443,455,480,480],
[416,416,0,463,427,444,468,426],
[420,459,427,0,401,453,429,454],
[437,447,463,489,0,469,489,513],
[422,435,446,437,421,0,479,472],
[414,410,422,461,401,411,0,404],
[410,410,464,436,377,418,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,424,443,457,430,444,465],
[475,0,456,424,460,459,462,497],
[466,434,0,432,485,472,468,481],
[447,466,458,0,433,460,462,438],
[433,430,405,457,0,441,451,464],
[460,431,418,430,449,0,437,446],
[446,428,422,428,439,453,0,452],
[425,393,409,452,426,444,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,457,460,454,464,418,447],
[430,0,461,444,422,455,432,413],
[433,429,0,441,419,469,410,414],
[430,446,449,0,443,466,429,455],
[436,468,471,447,0,495,445,433],
[426,435,421,424,395,0,409,420],
[472,458,480,461,445,481,0,458],
[443,477,476,435,457,470,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,453,468,449,434,441,442],
[444,0,458,450,463,438,436,455],
[437,432,0,425,427,445,429,427],
[422,440,465,0,450,437,416,450],
[441,427,463,440,0,426,430,428],
[456,452,445,453,464,0,429,447],
[449,454,461,474,460,461,0,441],
[448,435,463,440,462,443,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,465,453,438,469,443,440],
[444,0,437,420,429,434,423,448],
[425,453,0,438,428,445,413,446],
[437,470,452,0,449,468,429,446],
[452,461,462,441,0,460,461,487],
[421,456,445,422,430,0,431,448],
[447,467,477,461,429,459,0,469],
[450,442,444,444,403,442,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,440,447,442,461,448,452],
[435,0,434,441,438,462,473,452],
[450,456,0,462,446,450,444,441],
[443,449,428,0,438,432,452,446],
[448,452,444,452,0,454,466,435],
[429,428,440,458,436,0,434,443],
[442,417,446,438,424,456,0,422],
[438,438,449,444,455,447,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,441,428,451,427,415,423],
[446,0,442,415,455,445,437,439],
[449,448,0,420,471,446,446,442],
[462,475,470,0,474,456,442,445],
[439,435,419,416,0,428,424,439],
[463,445,444,434,462,0,437,435],
[475,453,444,448,466,453,0,430],
[467,451,448,445,451,455,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,429,434,446,463,440,440],
[467,0,447,476,458,479,443,459],
[461,443,0,462,470,476,443,449],
[456,414,428,0,455,463,433,427],
[444,432,420,435,0,469,426,444],
[427,411,414,427,421,0,420,416],
[450,447,447,457,464,470,0,433],
[450,431,441,463,446,474,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,454,458,456,444,457,444],
[418,0,456,422,446,426,434,413],
[436,434,0,436,442,431,446,427],
[432,468,454,0,449,452,448,449],
[434,444,448,441,0,459,456,441],
[446,464,459,438,431,0,460,424],
[433,456,444,442,434,430,0,421],
[446,477,463,441,449,466,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,367,430,487,451,454,480],
[433,0,419,446,504,395,370,379],
[523,471,0,469,537,443,396,443],
[460,444,421,0,578,492,453,472],
[403,386,353,312,0,440,263,390],
[439,495,447,398,450,0,364,376],
[436,520,494,437,627,526,0,516],
[410,511,447,418,500,514,374,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,272,447,835,645,688,447,487],
[618,0,726,822,726,701,379,555],
[443,164,0,417,488,391,155,474],
[55,68,473,0,330,553,207,221],
[245,164,402,560,0,439,132,448],
[202,189,499,337,451,0,328,328],
[443,511,735,683,758,562,0,677],
[403,335,416,669,442,562,213,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,460,453,440,446,447,431],
[442,0,443,451,464,440,449,454],
[430,447,0,451,442,422,450,418],
[437,439,439,0,445,437,439,428],
[450,426,448,445,0,437,420,433],
[444,450,468,453,453,0,456,446],
[443,441,440,451,470,434,0,432],
[459,436,472,462,457,444,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,550,348,374,583,394,515,699],
[340,0,360,681,235,690,515,393],
[542,530,0,530,235,890,548,855],
[516,209,360,0,277,811,504,516],
[307,655,655,613,0,655,822,655],
[496,200,0,79,235,0,515,549],
[375,375,342,386,68,375,0,375],
[191,497,35,374,235,341,515,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,490,440,475,495,444,444],
[450,0,494,431,427,472,449,443],
[400,396,0,388,462,433,409,390],
[450,459,502,0,469,464,467,438],
[415,463,428,421,0,445,441,426],
[395,418,457,426,445,0,400,431],
[446,441,481,423,449,490,0,453],
[446,447,500,452,464,459,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,665,427,465,459,412,480,447],
[225,0,389,339,245,304,360,260],
[463,501,0,322,324,474,375,286],
[425,551,568,0,424,469,397,495],
[431,645,566,466,0,439,478,477],
[478,586,416,421,451,0,439,447],
[410,530,515,493,412,451,0,448],
[443,630,604,395,413,443,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,463,447,441,453,444,448],
[469,0,472,423,423,446,437,451],
[427,418,0,411,420,444,420,427],
[443,467,479,0,466,464,446,461],
[449,467,470,424,0,444,464,421],
[437,444,446,426,446,0,441,428],
[446,453,470,444,426,449,0,449],
[442,439,463,429,469,462,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,361,464,449,457,421,425,388],
[529,0,543,508,521,526,518,417],
[426,347,0,444,398,448,467,384],
[441,382,446,0,443,433,432,409],
[433,369,492,447,0,467,477,391],
[469,364,442,457,423,0,436,450],
[465,372,423,458,413,454,0,371],
[502,473,506,481,499,440,519,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,452,457,443,443,451,431],
[449,0,451,439,450,434,440,429],
[438,439,0,441,436,437,440,434],
[433,451,449,0,444,419,460,425],
[447,440,454,446,0,424,440,444],
[447,456,453,471,466,0,441,463],
[439,450,450,430,450,449,0,447],
[459,461,456,465,446,427,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,435,426,457,476,454,451],
[474,0,466,453,465,416,461,461],
[455,424,0,451,446,456,456,466],
[464,437,439,0,424,471,506,476],
[433,425,444,466,0,468,476,461],
[414,474,434,419,422,0,431,486],
[436,429,434,384,414,459,0,501],
[439,429,424,414,429,404,389,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,434,408,455,439,444,418],
[474,0,450,449,453,479,450,443],
[456,440,0,470,457,466,462,443],
[482,441,420,0,464,444,468,450],
[435,437,433,426,0,445,455,417],
[451,411,424,446,445,0,443,420],
[446,440,428,422,435,447,0,427],
[472,447,447,440,473,470,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,463,485,477,483,487,493],
[451,0,448,465,440,479,427,473],
[427,442,0,432,413,440,444,447],
[405,425,458,0,422,439,447,445],
[413,450,477,468,0,455,444,450],
[407,411,450,451,435,0,417,449],
[403,463,446,443,446,473,0,462],
[397,417,443,445,440,441,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,445,451,438,453,461,450],
[442,0,430,451,437,444,458,424],
[445,460,0,449,427,478,466,437],
[439,439,441,0,449,445,483,447],
[452,453,463,441,0,471,453,444],
[437,446,412,445,419,0,442,421],
[429,432,424,407,437,448,0,447],
[440,466,453,443,446,469,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,493,424,474,448,417,452,421],
[397,0,390,418,407,438,406,391],
[466,500,0,478,436,447,440,463],
[416,472,412,0,403,462,441,446],
[442,483,454,487,0,454,468,455],
[473,452,443,428,436,0,475,431],
[438,484,450,449,422,415,0,433],
[469,499,427,444,435,459,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,534,483,505,484,510,427],
[409,0,537,468,485,444,435,472],
[356,353,0,431,473,426,462,430],
[407,422,459,0,433,428,451,391],
[385,405,417,457,0,433,423,428],
[406,446,464,462,457,0,457,436],
[380,455,428,439,467,433,0,435],
[463,418,460,499,462,454,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,445,449,449,468,439,448],
[451,0,441,447,462,461,433,455],
[445,449,0,460,447,461,445,444],
[441,443,430,0,451,470,424,431],
[441,428,443,439,0,452,435,449],
[422,429,429,420,438,0,433,440],
[451,457,445,466,455,457,0,440],
[442,435,446,459,441,450,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,461,450,461,460,436,483],
[461,0,468,423,445,448,449,484],
[429,422,0,435,471,431,423,455],
[440,467,455,0,458,469,483,480],
[429,445,419,432,0,406,442,461],
[430,442,459,421,484,0,445,482],
[454,441,467,407,448,445,0,485],
[407,406,435,410,429,408,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,595,480,624,432,411,518,494],
[295,0,500,540,541,584,446,342],
[410,390,0,551,442,411,393,288],
[266,350,339,0,430,373,336,342],
[458,349,448,460,0,361,462,420],
[479,306,479,517,529,0,450,312],
[372,444,497,554,428,440,0,479],
[396,548,602,548,470,578,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,454,454,424,457,482,475],
[448,0,442,459,449,432,480,469],
[436,448,0,461,452,426,440,457],
[436,431,429,0,437,425,428,472],
[466,441,438,453,0,431,465,448],
[433,458,464,465,459,0,476,477],
[408,410,450,462,425,414,0,424],
[415,421,433,418,442,413,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,438,433,433,453,455,440],
[451,0,443,458,447,447,444,452],
[452,447,0,460,426,454,464,469],
[457,432,430,0,460,449,451,444],
[457,443,464,430,0,462,463,473],
[437,443,436,441,428,0,434,437],
[435,446,426,439,427,456,0,443],
[450,438,421,446,417,453,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,403,412,447,463,485,411],
[461,0,441,433,401,470,516,462],
[487,449,0,421,462,506,549,440],
[478,457,469,0,450,483,522,425],
[443,489,428,440,0,519,526,480],
[427,420,384,407,371,0,486,381],
[405,374,341,368,364,404,0,359],
[479,428,450,465,410,509,531,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,432,422,440,414,410,415],
[440,0,426,445,449,430,449,440],
[458,464,0,441,456,437,438,440],
[468,445,449,0,462,459,459,471],
[450,441,434,428,0,414,427,456],
[476,460,453,431,476,0,460,462],
[480,441,452,431,463,430,0,469],
[475,450,450,419,434,428,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,469,468,466,428,433,444],
[439,0,444,451,464,426,423,433],
[421,446,0,444,439,417,421,427],
[422,439,446,0,467,426,420,448],
[424,426,451,423,0,418,402,432],
[462,464,473,464,472,0,454,432],
[457,467,469,470,488,436,0,461],
[446,457,463,442,458,458,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,362,449,433,525,526,434,417],
[528,0,491,446,504,538,422,412],
[441,399,0,421,485,540,426,480],
[457,444,469,0,549,485,468,517],
[365,386,405,341,0,510,409,431],
[364,352,350,405,380,0,406,496],
[456,468,464,422,481,484,0,524],
[473,478,410,373,459,394,366,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,429,428,438,429,452,417],
[435,0,440,434,458,462,462,466],
[461,450,0,467,446,443,467,478],
[462,456,423,0,443,459,445,455],
[452,432,444,447,0,472,455,418],
[461,428,447,431,418,0,438,446],
[438,428,423,445,435,452,0,433],
[473,424,412,435,472,444,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,477,430,421,419,496,472],
[470,0,483,427,483,489,462,474],
[413,407,0,407,378,410,436,431],
[460,463,483,0,439,430,465,439],
[469,407,512,451,0,438,487,475],
[471,401,480,460,452,0,487,464],
[394,428,454,425,403,403,0,447],
[418,416,459,451,415,426,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,450,451,465,470,442,449],
[427,0,438,452,443,438,439,450],
[440,452,0,435,466,444,444,464],
[439,438,455,0,451,439,454,437],
[425,447,424,439,0,434,432,434],
[420,452,446,451,456,0,453,436],
[448,451,446,436,458,437,0,455],
[441,440,426,453,456,454,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,417,438,441,436,430,405],
[464,0,444,435,489,439,435,419],
[473,446,0,452,485,471,420,433],
[452,455,438,0,463,431,460,409],
[449,401,405,427,0,422,404,398],
[454,451,419,459,468,0,430,447],
[460,455,470,430,486,460,0,434],
[485,471,457,481,492,443,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,454,456,430,455,433,408],
[457,0,453,480,459,487,431,426],
[436,437,0,443,418,461,409,422],
[434,410,447,0,419,482,455,442],
[460,431,472,471,0,452,432,437],
[435,403,429,408,438,0,412,446],
[457,459,481,435,458,478,0,467],
[482,464,468,448,453,444,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,418,446,406,422,399,394],
[468,0,460,446,424,434,450,428],
[472,430,0,494,474,444,451,457],
[444,444,396,0,444,412,441,416],
[484,466,416,446,0,436,453,417],
[468,456,446,478,454,0,446,397],
[491,440,439,449,437,444,0,431],
[496,462,433,474,473,493,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,449,452,452,436,460,452],
[428,0,440,427,431,443,454,470],
[441,450,0,452,462,457,444,461],
[438,463,438,0,437,443,454,456],
[438,459,428,453,0,431,440,444],
[454,447,433,447,459,0,469,460],
[430,436,446,436,450,421,0,453],
[438,420,429,434,446,430,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,410,447,431,319,539,424],
[501,0,446,436,560,423,518,622],
[480,444,0,511,457,449,437,395],
[443,454,379,0,372,246,410,345],
[459,330,433,518,0,175,430,456],
[571,467,441,644,715,0,595,594],
[351,372,453,480,460,295,0,253],
[466,268,495,545,434,296,637,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,460,436,431,372,387,469],
[464,0,465,464,467,392,459,516],
[430,425,0,410,490,419,424,479],
[454,426,480,0,438,482,452,476],
[459,423,400,452,0,435,436,476],
[518,498,471,408,455,0,488,526],
[503,431,466,438,454,402,0,498],
[421,374,411,414,414,364,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,440,436,449,457,462,462],
[480,0,463,467,455,436,453,492],
[450,427,0,440,416,440,467,448],
[454,423,450,0,447,433,465,452],
[441,435,474,443,0,417,476,445],
[433,454,450,457,473,0,440,493],
[428,437,423,425,414,450,0,472],
[428,398,442,438,445,397,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,421,455,439,444,429,452],
[453,0,449,442,427,436,440,448],
[469,441,0,443,429,457,445,460],
[435,448,447,0,416,443,420,439],
[451,463,461,474,0,454,442,450],
[446,454,433,447,436,0,424,446],
[461,450,445,470,448,466,0,467],
[438,442,430,451,440,444,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,444,415,407,402,417,450],
[451,0,438,421,448,431,439,421],
[446,452,0,418,431,438,411,435],
[475,469,472,0,448,463,461,437],
[483,442,459,442,0,446,441,455],
[488,459,452,427,444,0,430,434],
[473,451,479,429,449,460,0,441],
[440,469,455,453,435,456,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,455,466,428,459,430,469],
[440,0,447,453,449,432,449,435],
[435,443,0,459,460,464,437,435],
[424,437,431,0,440,424,411,434],
[462,441,430,450,0,435,426,444],
[431,458,426,466,455,0,423,441],
[460,441,453,479,464,467,0,450],
[421,455,455,456,446,449,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,442,427,413,426,420,450],
[446,0,437,420,423,422,415,451],
[448,453,0,421,454,433,426,451],
[463,470,469,0,456,419,446,453],
[477,467,436,434,0,450,417,463],
[464,468,457,471,440,0,436,461],
[470,475,464,444,473,454,0,455],
[440,439,439,437,427,429,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,482,443,480,440,433,434],
[463,0,460,461,451,433,432,434],
[408,430,0,423,436,426,446,415],
[447,429,467,0,474,449,441,451],
[410,439,454,416,0,435,403,421],
[450,457,464,441,455,0,438,447],
[457,458,444,449,487,452,0,461],
[456,456,475,439,469,443,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,349,461,458,495,394,463,384],
[541,0,488,601,537,471,400,385],
[429,402,0,486,420,351,374,421],
[432,289,404,0,377,356,345,334],
[395,353,470,513,0,389,327,408],
[496,419,539,534,501,0,380,410],
[427,490,516,545,563,510,0,476],
[506,505,469,556,482,480,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,427,446,461,446,458,436],
[415,0,445,422,411,427,429,413],
[463,445,0,441,449,467,489,452],
[444,468,449,0,453,473,465,428],
[429,479,441,437,0,424,438,436],
[444,463,423,417,466,0,463,438],
[432,461,401,425,452,427,0,412],
[454,477,438,462,454,452,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,467,433,441,458,438,463],
[469,0,465,449,453,469,456,422],
[423,425,0,388,445,431,421,405],
[457,441,502,0,464,484,440,468],
[449,437,445,426,0,463,421,412],
[432,421,459,406,427,0,417,435],
[452,434,469,450,469,473,0,411],
[427,468,485,422,478,455,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,550,587,468,425,459,450,508],
[340,0,508,316,386,343,370,427],
[303,382,0,364,281,158,240,333],
[422,574,526,0,416,399,357,492],
[465,504,609,474,0,321,482,607],
[431,547,732,491,569,0,409,587],
[440,520,650,533,408,481,0,551],
[382,463,557,398,283,303,339,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,435,445,461,442,432,455],
[465,0,438,436,472,467,441,440],
[455,452,0,428,463,454,417,434],
[445,454,462,0,479,466,440,455],
[429,418,427,411,0,447,412,432],
[448,423,436,424,443,0,418,433],
[458,449,473,450,478,472,0,438],
[435,450,456,435,458,457,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,471,446,445,437,456,444],
[450,0,461,426,424,425,446,440],
[419,429,0,428,447,425,417,441],
[444,464,462,0,454,446,429,457],
[445,466,443,436,0,425,409,438],
[453,465,465,444,465,0,450,461],
[434,444,473,461,481,440,0,459],
[446,450,449,433,452,429,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,415,462,432,434,424,405],
[471,0,443,453,453,450,423,450],
[475,447,0,446,440,444,440,445],
[428,437,444,0,441,442,419,429],
[458,437,450,449,0,453,450,434],
[456,440,446,448,437,0,436,408],
[466,467,450,471,440,454,0,471],
[485,440,445,461,456,482,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,461,473,464,433,423,422],
[440,0,466,491,442,453,432,425],
[429,424,0,426,423,430,409,396],
[417,399,464,0,422,423,425,386],
[426,448,467,468,0,444,429,438],
[457,437,460,467,446,0,440,421],
[467,458,481,465,461,450,0,445],
[468,465,494,504,452,469,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,457,443,451,476,472,485],
[425,0,432,428,410,457,434,443],
[433,458,0,463,470,477,463,480],
[447,462,427,0,441,462,432,465],
[439,480,420,449,0,477,460,468],
[414,433,413,428,413,0,428,440],
[418,456,427,458,430,462,0,450],
[405,447,410,425,422,450,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,437,436,427,423,443,433],
[466,0,447,462,452,436,443,437],
[453,443,0,458,427,435,438,433],
[454,428,432,0,433,439,473,457],
[463,438,463,457,0,435,449,441],
[467,454,455,451,455,0,423,454],
[447,447,452,417,441,467,0,458],
[457,453,457,433,449,436,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,447,460,437,417,426,429],
[438,0,450,446,423,403,436,464],
[443,440,0,449,446,420,425,454],
[430,444,441,0,437,419,463,452],
[453,467,444,453,0,460,457,483],
[473,487,470,471,430,0,462,482],
[464,454,465,427,433,428,0,456],
[461,426,436,438,407,408,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,444,424,423,419,408,415],
[458,0,454,440,448,438,469,451],
[446,436,0,449,442,443,438,437],
[466,450,441,0,424,447,450,437],
[467,442,448,466,0,441,429,439],
[471,452,447,443,449,0,433,433],
[482,421,452,440,461,457,0,444],
[475,439,453,453,451,457,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,451,454,440,458,462,461],
[455,0,460,427,431,443,438,438],
[439,430,0,433,427,448,465,435],
[436,463,457,0,450,439,460,455],
[450,459,463,440,0,459,476,496],
[432,447,442,451,431,0,440,466],
[428,452,425,430,414,450,0,429],
[429,452,455,435,394,424,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,447,434,435,442,439,448],
[445,0,441,433,417,421,413,443],
[443,449,0,440,411,450,449,442],
[456,457,450,0,420,440,444,456],
[455,473,479,470,0,458,439,446],
[448,469,440,450,432,0,448,429],
[451,477,441,446,451,442,0,446],
[442,447,448,434,444,461,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,444,449,449,439,478,448],
[442,0,485,458,477,455,499,470],
[446,405,0,423,452,410,437,417],
[441,432,467,0,443,425,467,434],
[441,413,438,447,0,414,473,455],
[451,435,480,465,476,0,491,491],
[412,391,453,423,417,399,0,427],
[442,420,473,456,435,399,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,422,415,457,471,437,433],
[392,0,395,399,405,405,387,402],
[468,495,0,398,476,424,458,456],
[475,491,492,0,494,462,438,468],
[433,485,414,396,0,430,407,441],
[419,485,466,428,460,0,403,481],
[453,503,432,452,483,487,0,475],
[457,488,434,422,449,409,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,435,426,453,444,446,420],
[467,0,425,442,428,435,467,421],
[455,465,0,445,447,468,466,452],
[464,448,445,0,447,455,470,437],
[437,462,443,443,0,444,455,425],
[446,455,422,435,446,0,450,428],
[444,423,424,420,435,440,0,427],
[470,469,438,453,465,462,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,448,476,440,440,453,438],
[437,0,422,449,437,464,444,461],
[442,468,0,482,442,470,451,475],
[414,441,408,0,426,451,421,446],
[450,453,448,464,0,455,453,432],
[450,426,420,439,435,0,433,421],
[437,446,439,469,437,457,0,456],
[452,429,415,444,458,469,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,414,417,443,451,430,434],
[432,0,425,415,452,454,452,444],
[476,465,0,434,444,452,458,457],
[473,475,456,0,464,442,469,445],
[447,438,446,426,0,422,410,424],
[439,436,438,448,468,0,447,450],
[460,438,432,421,480,443,0,445],
[456,446,433,445,466,440,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,441,441,458,457,457,447],
[447,0,450,471,481,444,460,459],
[449,440,0,461,475,459,455,454],
[449,419,429,0,452,424,434,438],
[432,409,415,438,0,412,459,426],
[433,446,431,466,478,0,451,449],
[433,430,435,456,431,439,0,453],
[443,431,436,452,464,441,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,463,438,442,446,428,463],
[439,0,418,441,424,444,437,429],
[427,472,0,435,444,430,414,462],
[452,449,455,0,439,433,431,459],
[448,466,446,451,0,445,464,464],
[444,446,460,457,445,0,440,445],
[462,453,476,459,426,450,0,442],
[427,461,428,431,426,445,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,440,451,446,474,407,417],
[414,0,434,422,438,457,392,453],
[450,456,0,441,466,474,457,436],
[439,468,449,0,462,475,432,444],
[444,452,424,428,0,456,439,432],
[416,433,416,415,434,0,396,426],
[483,498,433,458,451,494,0,443],
[473,437,454,446,458,464,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,397,424,416,415,412,421],
[432,0,419,414,421,410,417,438],
[493,471,0,469,458,426,462,471],
[466,476,421,0,438,473,412,459],
[474,469,432,452,0,441,450,458],
[475,480,464,417,449,0,427,450],
[478,473,428,478,440,463,0,483],
[469,452,419,431,432,440,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,461,445,462,493,457,474],
[432,0,441,431,452,452,433,443],
[429,449,0,445,440,431,446,448],
[445,459,445,0,459,469,450,476],
[428,438,450,431,0,450,434,451],
[397,438,459,421,440,0,424,453],
[433,457,444,440,456,466,0,475],
[416,447,442,414,439,437,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,448,414,431,431,415,430],
[482,0,434,459,476,444,428,449],
[442,456,0,435,429,427,425,420],
[476,431,455,0,460,456,450,447],
[459,414,461,430,0,462,408,451],
[459,446,463,434,428,0,430,446],
[475,462,465,440,482,460,0,420],
[460,441,470,443,439,444,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,442,446,448,428,422,459],
[447,0,422,445,459,428,447,481],
[448,468,0,464,444,447,448,493],
[444,445,426,0,473,433,441,471],
[442,431,446,417,0,434,435,453],
[462,462,443,457,456,0,455,477],
[468,443,442,449,455,435,0,473],
[431,409,397,419,437,413,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,433,443,384,416,431,413],
[481,0,490,480,451,478,440,440],
[457,400,0,418,411,388,443,401],
[447,410,472,0,416,426,445,437],
[506,439,479,474,0,478,467,448],
[474,412,502,464,412,0,453,463],
[459,450,447,445,423,437,0,405],
[477,450,489,453,442,427,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,424,433,415,443,428,411],
[475,0,445,468,434,442,428,445],
[466,445,0,456,451,452,436,446],
[457,422,434,0,439,421,420,420],
[475,456,439,451,0,454,463,466],
[447,448,438,469,436,0,443,430],
[462,462,454,470,427,447,0,437],
[479,445,444,470,424,460,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,439,509,501,461,446,451],
[423,0,428,487,458,381,476,419],
[451,462,0,492,418,336,446,432],
[381,403,398,0,408,379,389,389],
[389,432,472,482,0,480,408,430],
[429,509,554,511,410,0,456,364],
[444,414,444,501,482,434,0,451],
[439,471,458,501,460,526,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,459,454,465,445,450,431],
[413,0,431,431,443,410,426,423],
[431,459,0,452,470,439,443,435],
[436,459,438,0,450,437,439,429],
[425,447,420,440,0,418,431,433],
[445,480,451,453,472,0,474,453],
[440,464,447,451,459,416,0,411],
[459,467,455,461,457,437,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,405,445,412,457,452,455],
[429,0,454,445,458,462,462,480],
[485,436,0,447,437,458,442,457],
[445,445,443,0,414,458,454,440],
[478,432,453,476,0,437,464,467],
[433,428,432,432,453,0,447,452],
[438,428,448,436,426,443,0,439],
[435,410,433,450,423,438,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,447,374,438,414,424,475],
[391,0,453,449,435,362,324,507],
[443,437,0,410,495,416,465,567],
[516,441,480,0,518,452,478,528],
[452,455,395,372,0,407,411,494],
[476,528,474,438,483,0,434,526],
[466,566,425,412,479,456,0,538],
[415,383,323,362,396,364,352,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,441,445,421,441,451,447],
[455,0,453,433,434,464,453,449],
[449,437,0,420,440,432,443,437],
[445,457,470,0,452,443,446,458],
[469,456,450,438,0,445,433,444],
[449,426,458,447,445,0,448,429],
[439,437,447,444,457,442,0,455],
[443,441,453,432,446,461,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,442,461,437,424,457,444],
[439,0,428,454,441,455,440,422],
[448,462,0,465,455,444,468,450],
[429,436,425,0,432,432,436,435],
[453,449,435,458,0,438,444,429],
[466,435,446,458,452,0,458,445],
[433,450,422,454,446,432,0,441],
[446,468,440,455,461,445,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,446,409,452,457,446,461],
[420,0,438,420,447,390,414,440],
[444,452,0,407,456,465,417,447],
[481,470,483,0,482,431,450,433],
[438,443,434,408,0,407,418,427],
[433,500,425,459,483,0,465,480],
[444,476,473,440,472,425,0,460],
[429,450,443,457,463,410,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,451,437,464,440,428,461],
[467,0,477,445,477,460,451,465],
[439,413,0,436,438,427,438,446],
[453,445,454,0,457,451,431,474],
[426,413,452,433,0,446,422,444],
[450,430,463,439,444,0,466,478],
[462,439,452,459,468,424,0,462],
[429,425,444,416,446,412,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,424,457,453,424,424,453],
[452,0,392,433,449,436,430,449],
[466,498,0,454,462,424,453,467],
[433,457,436,0,440,454,426,441],
[437,441,428,450,0,422,419,442],
[466,454,466,436,468,0,452,479],
[466,460,437,464,471,438,0,479],
[437,441,423,449,448,411,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,447,443,430,442,439,437],
[446,0,469,465,408,441,416,466],
[443,421,0,425,454,400,397,429],
[447,425,465,0,455,432,454,468],
[460,482,436,435,0,441,407,434],
[448,449,490,458,449,0,465,428],
[451,474,493,436,483,425,0,457],
[453,424,461,422,456,462,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,455,495,397,462,449,505],
[443,0,456,481,448,483,415,483],
[435,434,0,409,407,442,385,443],
[395,409,481,0,413,398,428,431],
[493,442,483,477,0,478,463,492],
[428,407,448,492,412,0,385,498],
[441,475,505,462,427,505,0,481],
[385,407,447,459,398,392,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,429,445,446,442,428,448],
[437,0,454,455,439,444,428,419],
[461,436,0,471,458,440,441,464],
[445,435,419,0,444,428,412,427],
[444,451,432,446,0,429,423,424],
[448,446,450,462,461,0,438,439],
[462,462,449,478,467,452,0,434],
[442,471,426,463,466,451,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,449,415,439,462,446,465],
[501,0,461,443,463,482,487,465],
[441,429,0,435,432,494,453,455],
[475,447,455,0,470,473,437,486],
[451,427,458,420,0,468,472,458],
[428,408,396,417,422,0,410,419],
[444,403,437,453,418,480,0,463],
[425,425,435,404,432,471,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,473,479,453,436,471,447],
[425,0,442,444,422,408,454,415],
[417,448,0,455,437,417,444,430],
[411,446,435,0,421,404,426,425],
[437,468,453,469,0,446,444,447],
[454,482,473,486,444,0,464,457],
[419,436,446,464,446,426,0,426],
[443,475,460,465,443,433,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,451,433,459,443,449,445],
[446,0,444,414,440,466,436,440],
[439,446,0,454,447,478,448,447],
[457,476,436,0,447,495,476,464],
[431,450,443,443,0,459,455,482],
[447,424,412,395,431,0,449,453],
[441,454,442,414,435,441,0,447],
[445,450,443,426,408,437,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,477,448,436,460,443,408],
[428,0,477,439,437,439,430,447],
[413,413,0,394,398,400,447,397],
[442,451,496,0,434,436,430,422],
[454,453,492,456,0,442,442,440],
[430,451,490,454,448,0,460,406],
[447,460,443,460,448,430,0,442],
[482,443,493,468,450,484,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,432,448,452,439,446,421],
[463,0,440,469,492,461,461,451],
[458,450,0,469,486,465,463,443],
[442,421,421,0,451,430,435,412],
[438,398,404,439,0,417,436,410],
[451,429,425,460,473,0,468,433],
[444,429,427,455,454,422,0,441],
[469,439,447,478,480,457,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,465,410,462,434,455,437],
[431,0,455,450,466,439,460,466],
[425,435,0,403,456,428,444,449],
[480,440,487,0,457,453,479,485],
[428,424,434,433,0,422,443,442],
[456,451,462,437,468,0,469,479],
[435,430,446,411,447,421,0,444],
[453,424,441,405,448,411,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,441,418,422,439,421,423],
[479,0,485,450,441,495,450,481],
[449,405,0,399,424,441,392,433],
[472,440,491,0,422,445,424,446],
[468,449,466,468,0,449,433,476],
[451,395,449,445,441,0,396,451],
[469,440,498,466,457,494,0,448],
[467,409,457,444,414,439,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,436,390,417,440,408,422],
[462,0,452,437,428,474,433,433],
[454,438,0,452,473,430,436,449],
[500,453,438,0,455,445,419,422],
[473,462,417,435,0,440,441,419],
[450,416,460,445,450,0,444,401],
[482,457,454,471,449,446,0,438],
[468,457,441,468,471,489,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,446,469,427,469,425,424],
[431,0,398,442,455,462,422,417],
[444,492,0,506,450,466,442,457],
[421,448,384,0,413,463,423,420],
[463,435,440,477,0,472,448,441],
[421,428,424,427,418,0,407,421],
[465,468,448,467,442,483,0,429],
[466,473,433,470,449,469,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,418,441,432,453,423,472],
[467,0,422,445,425,442,430,443],
[472,468,0,451,449,445,467,478],
[449,445,439,0,434,463,423,481],
[458,465,441,456,0,447,441,475],
[437,448,445,427,443,0,437,441],
[467,460,423,467,449,453,0,471],
[418,447,412,409,415,449,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,512,467,418,450,490,404],
[447,0,451,453,426,442,487,417],
[378,439,0,418,382,392,430,363],
[423,437,472,0,446,408,446,403],
[472,464,508,444,0,423,478,474],
[440,448,498,482,467,0,519,468],
[400,403,460,444,412,371,0,402],
[486,473,527,487,416,422,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,403,439,422,477,455,364],
[407,0,378,363,361,398,438,369],
[487,512,0,437,417,498,470,428],
[451,527,453,0,450,463,436,450],
[468,529,473,440,0,434,510,409],
[413,492,392,427,456,0,410,375],
[435,452,420,454,380,480,0,386],
[526,521,462,440,481,515,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,382,414,423,379,394,408],
[475,0,449,428,454,445,442,442],
[508,441,0,427,426,445,442,468],
[476,462,463,0,448,442,448,449],
[467,436,464,442,0,409,438,449],
[511,445,445,448,481,0,439,449],
[496,448,448,442,452,451,0,466],
[482,448,422,441,441,441,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,453,472,466,458,463,430],
[414,0,453,484,455,444,450,450],
[437,437,0,475,471,453,461,448],
[418,406,415,0,440,439,440,412],
[424,435,419,450,0,462,434,423],
[432,446,437,451,428,0,430,434],
[427,440,429,450,456,460,0,443],
[460,440,442,478,467,456,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,449,450,438,463,446,468],
[401,0,465,446,453,489,475,441],
[441,425,0,401,425,444,458,450],
[440,444,489,0,478,480,426,442],
[452,437,465,412,0,463,433,410],
[427,401,446,410,427,0,423,432],
[444,415,432,464,457,467,0,464],
[422,449,440,448,480,458,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,422,413,425,443,470,455],
[386,0,409,386,427,406,430,442],
[468,481,0,440,464,451,458,466],
[477,504,450,0,459,436,477,444],
[465,463,426,431,0,415,452,469],
[447,484,439,454,475,0,498,480],
[420,460,432,413,438,392,0,438],
[435,448,424,446,421,410,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,399,417,481,478,434,444],
[399,0,417,361,410,424,415,411],
[491,473,0,402,495,452,493,472],
[473,529,488,0,519,453,452,445],
[409,480,395,371,0,409,410,440],
[412,466,438,437,481,0,434,456],
[456,475,397,438,480,456,0,489],
[446,479,418,445,450,434,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,427,438,442,412,444,432],
[484,0,458,420,437,437,454,451],
[463,432,0,400,384,441,412,413],
[452,470,490,0,436,456,426,431],
[448,453,506,454,0,444,444,459],
[478,453,449,434,446,0,426,414],
[446,436,478,464,446,464,0,438],
[458,439,477,459,431,476,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,457,471,480,422,480,455],
[414,0,446,429,430,403,438,451],
[433,444,0,390,478,435,404,437],
[419,461,500,0,451,415,435,495],
[410,460,412,439,0,463,383,472],
[468,487,455,475,427,0,458,506],
[410,452,486,455,507,432,0,459],
[435,439,453,395,418,384,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,454,464,456,403,462,420],
[465,0,468,483,414,430,453,459],
[436,422,0,477,454,443,460,406],
[426,407,413,0,438,431,427,453],
[434,476,436,452,0,441,433,418],
[487,460,447,459,449,0,447,437],
[428,437,430,463,457,443,0,421],
[470,431,484,437,472,453,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,448,442,441,421,425,410],
[474,0,472,451,472,440,467,460],
[442,418,0,414,430,430,420,414],
[448,439,476,0,468,455,446,433],
[449,418,460,422,0,430,432,421],
[469,450,460,435,460,0,452,407],
[465,423,470,444,458,438,0,434],
[480,430,476,457,469,483,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,385,378,363,435,358,418,391],
[505,0,453,456,434,420,504,404],
[512,437,0,448,436,470,517,445],
[527,434,442,0,466,426,522,447],
[455,456,454,424,0,375,484,408],
[532,470,420,464,515,0,491,428],
[472,386,373,368,406,399,0,389],
[499,486,445,443,482,462,501,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,472,443,434,424,451,454],
[449,0,466,445,458,446,426,454],
[418,424,0,448,430,398,385,396],
[447,445,442,0,460,453,445,479],
[456,432,460,430,0,439,455,457],
[466,444,492,437,451,0,427,427],
[439,464,505,445,435,463,0,466],
[436,436,494,411,433,463,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,425,453,407,417,433,424],
[462,0,406,463,423,437,431,424],
[465,484,0,467,439,448,455,457],
[437,427,423,0,403,414,425,410],
[483,467,451,487,0,442,470,451],
[473,453,442,476,448,0,446,441],
[457,459,435,465,420,444,0,440],
[466,466,433,480,439,449,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,427,445,447,439,442,426],
[477,0,479,485,457,474,468,443],
[463,411,0,460,431,427,453,459],
[445,405,430,0,406,415,427,450],
[443,433,459,484,0,432,439,453],
[451,416,463,475,458,0,438,443],
[448,422,437,463,451,452,0,445],
[464,447,431,440,437,447,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,441,454,467,445,468,452],
[451,0,453,433,439,423,432,449],
[449,437,0,445,452,429,457,451],
[436,457,445,0,447,443,434,454],
[423,451,438,443,0,447,443,446],
[445,467,461,447,443,0,429,463],
[422,458,433,456,447,461,0,475],
[438,441,439,436,444,427,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,443,459,447,460,451,450],
[469,0,459,487,454,468,445,459],
[447,431,0,475,464,464,461,459],
[431,403,415,0,445,451,433,437],
[443,436,426,445,0,472,451,452],
[430,422,426,439,418,0,439,444],
[439,445,429,457,439,451,0,432],
[440,431,431,453,438,446,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,448,458,465,429,438,436],
[467,0,458,466,468,442,514,474],
[442,432,0,477,432,452,478,444],
[432,424,413,0,453,430,458,443],
[425,422,458,437,0,440,452,418],
[461,448,438,460,450,0,464,457],
[452,376,412,432,438,426,0,421],
[454,416,446,447,472,433,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,535,497,459,473,500,530,412],
[355,0,386,395,432,422,423,346],
[393,504,0,490,457,469,498,466],
[431,495,400,0,466,468,480,439],
[417,458,433,424,0,511,505,412],
[390,468,421,422,379,0,487,414],
[360,467,392,410,385,403,0,383],
[478,544,424,451,478,476,507,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,454,453,438,459,465,451],
[428,0,431,459,445,423,459,455],
[436,459,0,453,459,419,450,460],
[437,431,437,0,442,421,453,442],
[452,445,431,448,0,436,463,422],
[431,467,471,469,454,0,486,458],
[425,431,440,437,427,404,0,441],
[439,435,430,448,468,432,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,432,457,464,419,436,432],
[421,0,419,426,428,400,431,455],
[458,471,0,470,492,433,495,482],
[433,464,420,0,444,410,433,451],
[426,462,398,446,0,440,415,417],
[471,490,457,480,450,0,437,457],
[454,459,395,457,475,453,0,438],
[458,435,408,439,473,433,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,445,455,441,458,484,460],
[425,0,448,456,437,458,465,460],
[445,442,0,427,451,469,459,465],
[435,434,463,0,434,463,470,480],
[449,453,439,456,0,453,461,466],
[432,432,421,427,437,0,473,439],
[406,425,431,420,429,417,0,452],
[430,430,425,410,424,451,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,429,417,421,461,422,441],
[442,0,427,445,411,454,463,469],
[461,463,0,444,445,483,478,483],
[473,445,446,0,441,486,456,443],
[469,479,445,449,0,473,474,466],
[429,436,407,404,417,0,428,437],
[468,427,412,434,416,462,0,463],
[449,421,407,447,424,453,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,496,529,511,443,442,481,563],
[394,0,421,414,473,482,412,419],
[361,469,0,427,518,466,425,430],
[379,476,463,0,471,401,499,474],
[447,417,372,419,0,406,443,467],
[448,408,424,489,484,0,436,498],
[409,478,465,391,447,454,0,522],
[327,471,460,416,423,392,368,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,461,433,453,467,429,445],
[449,0,441,444,458,455,445,446],
[429,449,0,440,466,466,436,459],
[457,446,450,0,454,463,439,457],
[437,432,424,436,0,446,429,459],
[423,435,424,427,444,0,424,436],
[461,445,454,451,461,466,0,460],
[445,444,431,433,431,454,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,491,432,457,482,421,429],
[451,0,508,458,486,482,405,456],
[399,382,0,342,444,419,393,396],
[458,432,548,0,466,516,495,442],
[433,404,446,424,0,420,443,438],
[408,408,471,374,470,0,400,373],
[469,485,497,395,447,490,0,469],
[461,434,494,448,452,517,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,466,428,414,403,439,441],
[461,0,466,425,445,418,419,448],
[424,424,0,405,423,379,423,407],
[462,465,485,0,438,461,443,433],
[476,445,467,452,0,458,460,442],
[487,472,511,429,432,0,481,436],
[451,471,467,447,430,409,0,424],
[449,442,483,457,448,454,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,284,303,416,315,312,363,397],
[606,0,332,512,442,432,427,433],
[587,558,0,506,455,440,450,565],
[474,378,384,0,378,264,429,402],
[575,448,435,512,0,467,397,452],
[578,458,450,626,423,0,425,486],
[527,463,440,461,493,465,0,465],
[493,457,325,488,438,404,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,436,450,439,389,427,432],
[494,0,527,468,478,456,441,490],
[454,363,0,479,484,430,478,380],
[440,422,411,0,514,408,461,414],
[451,412,406,376,0,424,389,440],
[501,434,460,482,466,0,451,495],
[463,449,412,429,501,439,0,409],
[458,400,510,476,450,395,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,455,423,472,441,435,434],
[433,0,433,442,470,473,422,435],
[435,457,0,423,469,434,435,431],
[467,448,467,0,497,436,452,466],
[418,420,421,393,0,406,406,430],
[449,417,456,454,484,0,437,433],
[455,468,455,438,484,453,0,419],
[456,455,459,424,460,457,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,450,476,436,452,433,446],
[446,0,437,464,439,465,446,441],
[440,453,0,459,433,453,452,429],
[414,426,431,0,428,445,454,457],
[454,451,457,462,0,453,467,422],
[438,425,437,445,437,0,433,427],
[457,444,438,436,423,457,0,413],
[444,449,461,433,468,463,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,453,462,438,461,449,449],
[432,0,404,433,416,456,441,453],
[437,486,0,452,473,468,463,448],
[428,457,438,0,438,433,442,463],
[452,474,417,452,0,473,449,438],
[429,434,422,457,417,0,451,449],
[441,449,427,448,441,439,0,450],
[441,437,442,427,452,441,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,444,414,421,460,458,440],
[445,0,439,453,473,445,484,442],
[446,451,0,422,469,470,465,464],
[476,437,468,0,457,469,498,471],
[469,417,421,433,0,469,482,455],
[430,445,420,421,421,0,469,439],
[432,406,425,392,408,421,0,454],
[450,448,426,419,435,451,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,441,421,387,416,432,418],
[464,0,413,411,436,463,423,465],
[449,477,0,414,472,441,457,441],
[469,479,476,0,424,447,477,451],
[503,454,418,466,0,451,449,449],
[474,427,449,443,439,0,488,437],
[458,467,433,413,441,402,0,426],
[472,425,449,439,441,453,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,442,450,423,408,422,448],
[470,0,487,482,435,477,482,490],
[448,403,0,445,454,444,437,434],
[440,408,445,0,416,426,447,397],
[467,455,436,474,0,446,447,447],
[482,413,446,464,444,0,475,466],
[468,408,453,443,443,415,0,461],
[442,400,456,493,443,424,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,431,436,436,472,422,441],
[449,0,450,435,446,468,407,426],
[459,440,0,445,451,454,442,447],
[454,455,445,0,454,462,446,432],
[454,444,439,436,0,459,412,445],
[418,422,436,428,431,0,409,420],
[468,483,448,444,478,481,0,466],
[449,464,443,458,445,470,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,455,440,429,468,442,433],
[438,0,436,453,437,417,432,439],
[435,454,0,435,442,450,416,402],
[450,437,455,0,430,445,418,438],
[461,453,448,460,0,443,430,431],
[422,473,440,445,447,0,445,448],
[448,458,474,472,460,445,0,435],
[457,451,488,452,459,442,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,449,444,439,466,448,443],
[437,0,424,453,438,438,440,436],
[441,466,0,436,445,424,450,416],
[446,437,454,0,434,461,433,431],
[451,452,445,456,0,456,426,437],
[424,452,466,429,434,0,432,425],
[442,450,440,457,464,458,0,455],
[447,454,474,459,453,465,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,408,426,406,478,456,469],
[426,0,397,364,399,468,430,430],
[482,493,0,395,392,473,439,479],
[464,526,495,0,437,422,458,433],
[484,491,498,453,0,440,485,514],
[412,422,417,468,450,0,393,487],
[434,460,451,432,405,497,0,423],
[421,460,411,457,376,403,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,469,479,410,496,492,482],
[399,0,398,434,463,512,461,415],
[421,492,0,474,516,482,519,509],
[411,456,416,0,422,468,467,439],
[480,427,374,468,0,453,497,460],
[394,378,408,422,437,0,444,388],
[398,429,371,423,393,446,0,404],
[408,475,381,451,430,502,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,464,453,458,447,445,442],
[438,0,446,445,454,428,416,443],
[426,444,0,428,442,426,424,427],
[437,445,462,0,442,440,433,465],
[432,436,448,448,0,434,440,439],
[443,462,464,450,456,0,447,466],
[445,474,466,457,450,443,0,473],
[448,447,463,425,451,424,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,513,487,504,508,513,487],
[446,0,470,518,434,428,495,521],
[377,420,0,402,404,409,412,432],
[403,372,488,0,468,452,427,448],
[386,456,486,422,0,411,445,459],
[382,462,481,438,479,0,447,535],
[377,395,478,463,445,443,0,483],
[403,369,458,442,431,355,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,447,437,463,448,439,446],
[437,0,436,438,444,455,437,434],
[443,454,0,431,448,452,429,460],
[453,452,459,0,441,453,444,447],
[427,446,442,449,0,438,444,448],
[442,435,438,437,452,0,443,452],
[451,453,461,446,446,447,0,436],
[444,456,430,443,442,438,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,369,479,418,481,415,456,394],
[521,0,491,501,484,448,535,438],
[411,399,0,398,448,369,431,416],
[472,389,492,0,487,387,462,425],
[409,406,442,403,0,410,470,442],
[475,442,521,503,480,0,453,491],
[434,355,459,428,420,437,0,390],
[496,452,474,465,448,399,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,681,674,727,218,567,733,506],
[209,0,383,558,218,398,558,35],
[216,507,0,362,23,372,376,189],
[163,332,528,0,153,502,724,144],
[672,672,867,737,0,550,710,311],
[323,492,518,388,340,0,536,331],
[157,332,514,166,180,354,0,171],
[384,855,701,746,579,559,719,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,446,446,440,432,428,447],
[455,0,455,445,453,446,452,464],
[444,435,0,443,442,430,451,447],
[444,445,447,0,436,434,435,462],
[450,437,448,454,0,444,449,478],
[458,444,460,456,446,0,451,461],
[462,438,439,455,441,439,0,468],
[443,426,443,428,412,429,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,437,435,428,460,413,462],
[457,0,434,470,470,454,447,481],
[453,456,0,485,443,452,424,477],
[455,420,405,0,443,441,402,455],
[462,420,447,447,0,457,432,448],
[430,436,438,449,433,0,421,467],
[477,443,466,488,458,469,0,481],
[428,409,413,435,442,423,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,440,419,419,414,441,424],
[437,0,459,451,429,445,448,473],
[450,431,0,408,445,422,427,422],
[471,439,482,0,473,456,467,459],
[471,461,445,417,0,429,461,429],
[476,445,468,434,461,0,445,427],
[449,442,463,423,429,445,0,456],
[466,417,468,431,461,463,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,438,456,484,471,454,459],
[423,0,412,425,435,426,415,453],
[452,478,0,445,455,440,444,466],
[434,465,445,0,428,467,421,474],
[406,455,435,462,0,409,411,452],
[419,464,450,423,481,0,433,429],
[436,475,446,469,479,457,0,463],
[431,437,424,416,438,461,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,445,437,422,430,418,455],
[459,0,464,470,446,443,452,473],
[445,426,0,440,425,436,425,461],
[453,420,450,0,405,421,429,434],
[468,444,465,485,0,460,453,463],
[460,447,454,469,430,0,437,470],
[472,438,465,461,437,453,0,475],
[435,417,429,456,427,420,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,408,405,448,442,428,374],
[435,0,417,428,447,433,395,391],
[482,473,0,443,497,442,432,415],
[485,462,447,0,474,465,457,416],
[442,443,393,416,0,431,396,386],
[448,457,448,425,459,0,437,394],
[462,495,458,433,494,453,0,447],
[516,499,475,474,504,496,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,512,458,422,585,401,468,629],
[378,0,351,388,450,385,444,552],
[432,539,0,451,544,509,466,617],
[468,502,439,0,564,484,441,611],
[305,440,346,326,0,479,409,559],
[489,505,381,406,411,0,496,520],
[422,446,424,449,481,394,0,559],
[261,338,273,279,331,370,331,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,433,395,391,441,457,407],
[466,0,465,441,422,426,446,426],
[457,425,0,441,450,488,458,481],
[495,449,449,0,432,469,487,469],
[499,468,440,458,0,458,508,469],
[449,464,402,421,432,0,454,459],
[433,444,432,403,382,436,0,406],
[483,464,409,421,421,431,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,447,467,445,429,448,458],
[460,0,451,467,436,464,446,436],
[443,439,0,463,442,466,461,460],
[423,423,427,0,430,433,433,447],
[445,454,448,460,0,455,439,440],
[461,426,424,457,435,0,429,449],
[442,444,429,457,451,461,0,438],
[432,454,430,443,450,441,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,380,459,436,457,370,384],
[418,0,344,429,443,399,378,350],
[510,546,0,538,450,421,480,512],
[431,461,352,0,442,383,343,409],
[454,447,440,448,0,384,362,387],
[433,491,469,507,506,0,473,499],
[520,512,410,547,528,417,0,436],
[506,540,378,481,503,391,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,405,424,422,394,423,425],
[419,0,427,429,455,431,441,432],
[485,463,0,456,429,438,466,436],
[466,461,434,0,422,406,437,446],
[468,435,461,468,0,422,470,494],
[496,459,452,484,468,0,456,437],
[467,449,424,453,420,434,0,418],
[465,458,454,444,396,453,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,439,396,389,451,403,382],
[480,0,455,474,469,476,465,418],
[451,435,0,419,449,448,450,388],
[494,416,471,0,480,496,452,424],
[501,421,441,410,0,472,460,403],
[439,414,442,394,418,0,426,377],
[487,425,440,438,430,464,0,445],
[508,472,502,466,487,513,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,429,436,459,495,488,456],
[465,0,400,459,428,508,438,465],
[461,490,0,445,483,485,473,504],
[454,431,445,0,434,497,449,485],
[431,462,407,456,0,464,444,459],
[395,382,405,393,426,0,429,455],
[402,452,417,441,446,461,0,465],
[434,425,386,405,431,435,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,445,436,438,433,454,441],
[432,0,418,430,423,440,436,440],
[445,472,0,432,465,453,453,467],
[454,460,458,0,455,440,451,449],
[452,467,425,435,0,447,445,447],
[457,450,437,450,443,0,447,442],
[436,454,437,439,445,443,0,456],
[449,450,423,441,443,448,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,464,440,464,458,449,444],
[428,0,445,454,460,460,453,453],
[426,445,0,445,455,452,448,435],
[450,436,445,0,465,442,466,434],
[426,430,435,425,0,457,448,403],
[432,430,438,448,433,0,443,442],
[441,437,442,424,442,447,0,437],
[446,437,455,456,487,448,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,495,435,433,389,369,387],
[403,0,480,445,401,412,408,388],
[395,410,0,451,363,403,379,398],
[455,445,439,0,398,359,419,392],
[457,489,527,492,0,464,492,371],
[501,478,487,531,426,0,507,479],
[521,482,511,471,398,383,0,401],
[503,502,492,498,519,411,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,457,355,535,372,447,389],
[416,0,506,351,355,389,391,302],
[433,384,0,402,350,343,357,356],
[535,539,488,0,380,435,439,407],
[355,535,540,510,0,335,452,303],
[518,501,547,455,555,0,388,453],
[443,499,533,451,438,502,0,363],
[501,588,534,483,587,437,527,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,209,323,399,299,243,409,370],
[681,0,500,531,442,487,510,418],
[567,390,0,454,371,402,389,482],
[491,359,436,0,314,421,470,487],
[591,448,519,576,0,464,426,530],
[647,403,488,469,426,0,409,486],
[481,380,501,420,464,481,0,501],
[520,472,408,403,360,404,389,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,447,467,424,473,483,461],
[424,0,408,399,399,409,422,412],
[443,482,0,459,482,435,445,465],
[423,491,431,0,462,437,436,406],
[466,491,408,428,0,426,482,467],
[417,481,455,453,464,0,439,429],
[407,468,445,454,408,451,0,450],
[429,478,425,484,423,461,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,441,435,444,455,438,418],
[451,0,475,453,461,454,443,440],
[449,415,0,439,449,431,447,421],
[455,437,451,0,456,442,434,453],
[446,429,441,434,0,427,443,432],
[435,436,459,448,463,0,453,438],
[452,447,443,456,447,437,0,429],
[472,450,469,437,458,452,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,394,427,407,442,500,445,416],
[496,0,465,460,449,485,441,451],
[463,425,0,441,471,489,474,452],
[483,430,449,0,451,512,475,438],
[448,441,419,439,0,465,444,458],
[390,405,401,378,425,0,442,419],
[445,449,416,415,446,448,0,431],
[474,439,438,452,432,471,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,438,424,432,429,421,431],
[434,0,446,411,405,413,434,403],
[452,444,0,459,428,449,458,432],
[466,479,431,0,462,455,433,467],
[458,485,462,428,0,446,464,453],
[461,477,441,435,444,0,466,453],
[469,456,432,457,426,424,0,435],
[459,487,458,423,437,437,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,420,429,436,427,355,444],
[493,0,440,478,480,459,436,422],
[470,450,0,450,442,441,439,419],
[461,412,440,0,431,418,430,443],
[454,410,448,459,0,400,463,433],
[463,431,449,472,490,0,463,453],
[535,454,451,460,427,427,0,444],
[446,468,471,447,457,437,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,421,444,483,515,421,482],
[430,0,448,437,464,474,452,477],
[469,442,0,409,451,447,431,474],
[446,453,481,0,488,479,445,489],
[407,426,439,402,0,420,408,460],
[375,416,443,411,470,0,398,455],
[469,438,459,445,482,492,0,472],
[408,413,416,401,430,435,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,435,444,428,457,445,444],
[440,0,429,444,434,433,444,462],
[455,461,0,460,470,444,471,476],
[446,446,430,0,443,438,456,455],
[462,456,420,447,0,437,458,461],
[433,457,446,452,453,0,459,475],
[445,446,419,434,432,431,0,454],
[446,428,414,435,429,415,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,451,439,468,451,471,486],
[438,0,434,409,437,443,457,461],
[439,456,0,452,484,449,489,468],
[451,481,438,0,452,469,468,485],
[422,453,406,438,0,416,456,448],
[439,447,441,421,474,0,452,452],
[419,433,401,422,434,438,0,449],
[404,429,422,405,442,438,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,373,450,420,493,493,433],
[424,0,373,472,410,474,527,411],
[517,517,0,524,475,541,513,438],
[440,418,366,0,476,497,481,392],
[470,480,415,414,0,481,583,492],
[397,416,349,393,409,0,425,371],
[397,363,377,409,307,465,0,414],
[457,479,452,498,398,519,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,419,462,423,440,440,459],
[454,0,447,457,449,462,431,493],
[471,443,0,457,450,474,449,486],
[428,433,433,0,437,443,425,466],
[467,441,440,453,0,441,434,499],
[450,428,416,447,449,0,421,469],
[450,459,441,465,456,469,0,488],
[431,397,404,424,391,421,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,399,397,444,436,423,390],
[473,0,492,413,494,385,446,406],
[491,398,0,433,534,496,496,469],
[493,477,457,0,519,485,534,423],
[446,396,356,371,0,427,437,375],
[454,505,394,405,463,0,438,444],
[467,444,394,356,453,452,0,408],
[500,484,421,467,515,446,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,462,515,509,519,521,452],
[454,0,478,470,475,469,404,400],
[428,412,0,427,473,477,458,343],
[375,420,463,0,454,455,402,308],
[381,415,417,436,0,461,369,388],
[371,421,413,435,429,0,409,346],
[369,486,432,488,521,481,0,386],
[438,490,547,582,502,544,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,464,438,453,437,452,443],
[436,0,468,455,467,437,452,444],
[426,422,0,429,438,426,440,436],
[452,435,461,0,451,446,435,449],
[437,423,452,439,0,404,425,436],
[453,453,464,444,486,0,466,434],
[438,438,450,455,465,424,0,422],
[447,446,454,441,454,456,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,427,429,433,463,459,409],
[460,0,454,459,436,449,448,445],
[463,436,0,461,441,467,472,446],
[461,431,429,0,448,465,457,454],
[457,454,449,442,0,457,464,479],
[427,441,423,425,433,0,446,414],
[431,442,418,433,426,444,0,448],
[481,445,444,436,411,476,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,462,471,446,444,469,441],
[456,0,451,452,427,451,446,432],
[428,439,0,476,454,419,444,434],
[419,438,414,0,411,424,438,446],
[444,463,436,479,0,416,445,441],
[446,439,471,466,474,0,477,439],
[421,444,446,452,445,413,0,406],
[449,458,456,444,449,451,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,390,419,481,476,463,460],
[402,0,319,357,396,396,368,357],
[500,571,0,460,527,419,439,446],
[471,533,430,0,576,495,445,508],
[409,494,363,314,0,402,360,394],
[414,494,471,395,488,0,397,453],
[427,522,451,445,530,493,0,457],
[430,533,444,382,496,437,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,460,429,429,445,429,422],
[417,0,423,424,366,391,387,420],
[430,467,0,437,418,411,412,409],
[461,466,453,0,415,467,425,451],
[461,524,472,475,0,444,451,462],
[445,499,479,423,446,0,456,443],
[461,503,478,465,439,434,0,439],
[468,470,481,439,428,447,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,452,424,465,443,517,475],
[436,0,421,465,461,452,473,452],
[438,469,0,446,485,450,455,435],
[466,425,444,0,454,468,478,415],
[425,429,405,436,0,439,424,465],
[447,438,440,422,451,0,458,437],
[373,417,435,412,466,432,0,431],
[415,438,455,475,425,453,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,427,431,421,423,412,450],
[480,0,456,443,456,452,471,477],
[463,434,0,436,443,440,461,464],
[459,447,454,0,437,453,441,468],
[469,434,447,453,0,436,444,469],
[467,438,450,437,454,0,469,466],
[478,419,429,449,446,421,0,465],
[440,413,426,422,421,424,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,434,516,452,496,481,372],
[405,0,466,432,409,466,481,452],
[456,424,0,474,448,445,516,463],
[374,458,416,0,405,429,431,398],
[438,481,442,485,0,494,500,428],
[394,424,445,461,396,0,455,380],
[409,409,374,459,390,435,0,387],
[518,438,427,492,462,510,503,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,742,595,516,386,454,478,564],
[148,0,455,358,234,320,431,320],
[295,435,0,483,428,301,440,432],
[374,532,407,0,498,225,526,383],
[504,656,462,392,0,333,500,563],
[436,570,589,665,557,0,606,502],
[412,459,450,364,390,284,0,360],
[326,570,458,507,327,388,530,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,442,471,463,468,448,412],
[464,0,436,450,434,509,453,428],
[448,454,0,418,450,497,466,446],
[419,440,472,0,410,459,416,414],
[427,456,440,480,0,479,425,425],
[422,381,393,431,411,0,419,436],
[442,437,424,474,465,471,0,399],
[478,462,444,476,465,454,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,415,460,442,421,433,417],
[422,0,416,457,431,404,427,420],
[475,474,0,431,461,475,471,438],
[430,433,459,0,446,424,397,433],
[448,459,429,444,0,434,477,452],
[469,486,415,466,456,0,454,440],
[457,463,419,493,413,436,0,465],
[473,470,452,457,438,450,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,437,472,456,435,453,454],
[445,0,443,450,420,432,473,444],
[453,447,0,456,443,455,433,440],
[418,440,434,0,414,393,428,379],
[434,470,447,476,0,430,473,466],
[455,458,435,497,460,0,464,477],
[437,417,457,462,417,426,0,417],
[436,446,450,511,424,413,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,413,447,463,457,432,404],
[459,0,426,465,491,449,473,455],
[477,464,0,460,479,467,492,439],
[443,425,430,0,450,446,462,415],
[427,399,411,440,0,428,425,388],
[433,441,423,444,462,0,459,413],
[458,417,398,428,465,431,0,396],
[486,435,451,475,502,477,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,446,484,468,445,475,463],
[437,0,425,435,478,455,456,449],
[444,465,0,488,470,438,454,468],
[406,455,402,0,466,422,455,438],
[422,412,420,424,0,414,451,416],
[445,435,452,468,476,0,454,446],
[415,434,436,435,439,436,0,447],
[427,441,422,452,474,444,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,448,430,459,431,474,448],
[465,0,449,444,449,435,449,451],
[442,441,0,461,452,454,452,424],
[460,446,429,0,452,433,465,441],
[431,441,438,438,0,419,445,429],
[459,455,436,457,471,0,474,460],
[416,441,438,425,445,416,0,447],
[442,439,466,449,461,430,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,390,430,413,411,440,440],
[458,0,425,412,411,421,411,453],
[500,465,0,435,464,423,428,469],
[460,478,455,0,457,439,446,477],
[477,479,426,433,0,448,482,482],
[479,469,467,451,442,0,442,491],
[450,479,462,444,408,448,0,480],
[450,437,421,413,408,399,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,440,500,483,434,443,458],
[446,0,421,484,456,412,441,439],
[450,469,0,479,472,443,461,443],
[390,406,411,0,451,452,418,426],
[407,434,418,439,0,407,415,431],
[456,478,447,438,483,0,470,441],
[447,449,429,472,475,420,0,420],
[432,451,447,464,459,449,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,482,446,437,465,448,449],
[434,0,464,454,431,453,425,413],
[408,426,0,436,388,423,420,417],
[444,436,454,0,435,445,424,412],
[453,459,502,455,0,465,453,444],
[425,437,467,445,425,0,458,423],
[442,465,470,466,437,432,0,423],
[441,477,473,478,446,467,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,449,413,424,430,445,436],
[494,0,494,489,477,425,447,493],
[441,396,0,423,471,414,442,426],
[477,401,467,0,438,443,432,416],
[466,413,419,452,0,398,419,431],
[460,465,476,447,492,0,446,439],
[445,443,448,458,471,444,0,453],
[454,397,464,474,459,451,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,506,504,478,473,499,440],
[473,0,451,453,470,476,479,443],
[384,439,0,420,466,440,471,500],
[386,437,470,0,419,450,480,401],
[412,420,424,471,0,451,468,423],
[417,414,450,440,439,0,491,410],
[391,411,419,410,422,399,0,383],
[450,447,390,489,467,480,507,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,425,426,441,459,446,446],
[442,0,431,420,441,445,421,451],
[465,459,0,446,442,447,464,467],
[464,470,444,0,460,448,443,450],
[449,449,448,430,0,458,433,455],
[431,445,443,442,432,0,440,450],
[444,469,426,447,457,450,0,462],
[444,439,423,440,435,440,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,504,487,550,434,495,508],
[406,0,493,495,523,462,499,512],
[386,397,0,464,494,414,485,521],
[403,395,426,0,489,385,362,439],
[340,367,396,401,0,400,436,477],
[456,428,476,505,490,0,514,447],
[395,391,405,528,454,376,0,422],
[382,378,369,451,413,443,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,472,501,650,401,479,485],
[386,0,573,534,518,520,467,511],
[418,317,0,368,509,315,301,419],
[389,356,522,0,567,391,272,452],
[240,372,381,323,0,282,316,322],
[489,370,575,499,608,0,369,485],
[411,423,589,618,574,521,0,422],
[405,379,471,438,568,405,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,431,365,477,414,427,439],
[426,0,467,485,466,459,453,429],
[459,423,0,392,434,459,424,423],
[525,405,498,0,513,427,471,445],
[413,424,456,377,0,441,448,485],
[476,431,431,463,449,0,448,459],
[463,437,466,419,442,442,0,459],
[451,461,467,445,405,431,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,423,454,406,402,408,485],
[443,0,453,477,422,447,462,490],
[467,437,0,439,403,416,390,462],
[436,413,451,0,414,437,443,475],
[484,468,487,476,0,444,440,481],
[488,443,474,453,446,0,441,501],
[482,428,500,447,450,449,0,522],
[405,400,428,415,409,389,368,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,451,455,445,437,443,433],
[454,0,455,434,423,448,453,431],
[439,435,0,450,426,413,446,410],
[435,456,440,0,424,434,450,418],
[445,467,464,466,0,428,458,451],
[453,442,477,456,462,0,425,453],
[447,437,444,440,432,465,0,442],
[457,459,480,472,439,437,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,452,420,460,402,452,389],
[467,0,455,414,463,429,467,429],
[438,435,0,427,456,421,429,415],
[470,476,463,0,451,447,477,416],
[430,427,434,439,0,408,423,365],
[488,461,469,443,482,0,474,453],
[438,423,461,413,467,416,0,414],
[501,461,475,474,525,437,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,446,464,423,435,435,446],
[475,0,465,459,452,476,444,459],
[444,425,0,457,436,452,476,450],
[426,431,433,0,431,451,442,429],
[467,438,454,459,0,452,442,470],
[455,414,438,439,438,0,424,427],
[455,446,414,448,448,466,0,447],
[444,431,440,461,420,463,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,339,555,448,451,431,452,450],
[551,0,593,500,471,510,376,537],
[335,297,0,331,468,398,371,412],
[442,390,559,0,489,545,452,472],
[439,419,422,401,0,405,369,387],
[459,380,492,345,485,0,390,400],
[438,514,519,438,521,500,0,499],
[440,353,478,418,503,490,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,454,461,461,484,461,438],
[411,0,416,412,433,442,426,425],
[436,474,0,451,475,434,441,448],
[429,478,439,0,449,445,452,438],
[429,457,415,441,0,434,436,413],
[406,448,456,445,456,0,448,428],
[429,464,449,438,454,442,0,419],
[452,465,442,452,477,462,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,435,470,456,467,496,473],
[491,0,453,488,419,492,473,475],
[455,437,0,487,425,427,436,448],
[420,402,403,0,412,457,447,459],
[434,471,465,478,0,458,416,438],
[423,398,463,433,432,0,400,411],
[394,417,454,443,474,490,0,427],
[417,415,442,431,452,479,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,484,446,409,437,431,447],
[400,0,457,511,394,445,473,475],
[406,433,0,441,409,422,430,435],
[444,379,449,0,443,401,423,488],
[481,496,481,447,0,443,468,496],
[453,445,468,489,447,0,431,468],
[459,417,460,467,422,459,0,498],
[443,415,455,402,394,422,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,399,420,530,462,462,494],
[420,0,434,496,444,452,476,459],
[491,456,0,455,479,470,555,442],
[470,394,435,0,427,380,450,381],
[360,446,411,463,0,393,371,450],
[428,438,420,510,497,0,428,461],
[428,414,335,440,519,462,0,424],
[396,431,448,509,440,429,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,481,468,451,450,456,450],
[447,0,484,443,447,482,465,471],
[409,406,0,415,425,448,416,475],
[422,447,475,0,418,458,447,474],
[439,443,465,472,0,462,455,483],
[440,408,442,432,428,0,443,450],
[434,425,474,443,435,447,0,466],
[440,419,415,416,407,440,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,425,462,454,437,453,459],
[449,0,434,461,468,454,448,456],
[465,456,0,473,460,444,457,459],
[428,429,417,0,463,433,436,453],
[436,422,430,427,0,413,425,448],
[453,436,446,457,477,0,448,460],
[437,442,433,454,465,442,0,444],
[431,434,431,437,442,430,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,462,447,453,440,473,464],
[449,0,471,454,447,430,452,458],
[428,419,0,417,421,389,433,431],
[443,436,473,0,442,431,444,459],
[437,443,469,448,0,450,461,468],
[450,460,501,459,440,0,468,474],
[417,438,457,446,429,422,0,468],
[426,432,459,431,422,416,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,471,438,440,445,475,454],
[453,0,455,444,440,439,452,452],
[419,435,0,437,427,427,447,457],
[452,446,453,0,466,439,438,469],
[450,450,463,424,0,423,449,433],
[445,451,463,451,467,0,466,461],
[415,438,443,452,441,424,0,437],
[436,438,433,421,457,429,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,447,456,454,440,449,467],
[439,0,442,461,466,467,433,462],
[443,448,0,447,474,458,444,438],
[434,429,443,0,476,429,428,438],
[436,424,416,414,0,428,416,404],
[450,423,432,461,462,0,427,448],
[441,457,446,462,474,463,0,471],
[423,428,452,452,486,442,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,448,442,460,431,463,437],
[411,0,416,403,426,386,423,406],
[442,474,0,422,450,422,461,428],
[448,487,468,0,465,464,483,436],
[430,464,440,425,0,417,423,415],
[459,504,468,426,473,0,494,458],
[427,467,429,407,467,396,0,435],
[453,484,462,454,475,432,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,449,445,423,424,452,408],
[412,0,435,440,436,436,440,409],
[441,455,0,457,445,453,461,465],
[445,450,433,0,422,410,432,404],
[467,454,445,468,0,430,433,423],
[466,454,437,480,460,0,464,418],
[438,450,429,458,457,426,0,365],
[482,481,425,486,467,472,525,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,454,447,444,496,473,467],
[421,0,411,420,441,480,429,460],
[436,479,0,440,418,479,424,441],
[443,470,450,0,460,501,478,450],
[446,449,472,430,0,482,439,424],
[394,410,411,389,408,0,415,415],
[417,461,466,412,451,475,0,457],
[423,430,449,440,466,475,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,454,462,435,461,477,456],
[428,0,462,467,430,447,423,459],
[436,428,0,421,406,450,443,455],
[428,423,469,0,410,459,425,442],
[455,460,484,480,0,464,435,465],
[429,443,440,431,426,0,452,476],
[413,467,447,465,455,438,0,474],
[434,431,435,448,425,414,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,415,430,430,427,405,419],
[453,0,484,424,467,462,440,467],
[475,406,0,427,429,445,447,429],
[460,466,463,0,462,471,441,463],
[460,423,461,428,0,452,423,431],
[463,428,445,419,438,0,410,407],
[485,450,443,449,467,480,0,454],
[471,423,461,427,459,483,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,450,428,437,448,446,428],
[455,0,466,455,453,479,468,433],
[440,424,0,411,416,447,437,417],
[462,435,479,0,460,445,474,457],
[453,437,474,430,0,462,474,442],
[442,411,443,445,428,0,469,434],
[444,422,453,416,416,421,0,427],
[462,457,473,433,448,456,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,426,439,437,435,428,431],
[459,0,428,445,448,453,438,443],
[464,462,0,436,462,467,462,446],
[451,445,454,0,480,472,452,450],
[453,442,428,410,0,453,442,449],
[455,437,423,418,437,0,434,421],
[462,452,428,438,448,456,0,446],
[459,447,444,440,441,469,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,388,418,407,437,433,446],
[447,0,454,394,451,419,456,466],
[502,436,0,439,444,465,481,429],
[472,496,451,0,458,417,437,458],
[483,439,446,432,0,456,481,460],
[453,471,425,473,434,0,460,453],
[457,434,409,453,409,430,0,465],
[444,424,461,432,430,437,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,402,495,398,352,421,432],
[399,0,422,411,310,364,380,317],
[488,468,0,501,408,380,408,436],
[395,479,389,0,355,384,434,390],
[492,580,482,535,0,429,457,502],
[538,526,510,506,461,0,440,481],
[469,510,482,456,433,450,0,437],
[458,573,454,500,388,409,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,429,448,454,383,426,434],
[438,0,464,404,427,421,442,484],
[461,426,0,435,406,380,429,450],
[442,486,455,0,490,449,502,523],
[436,463,484,400,0,401,489,474],
[507,469,510,441,489,0,442,485],
[464,448,461,388,401,448,0,467],
[456,406,440,367,416,405,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,452,441,433,444,450,460],
[452,0,457,444,458,459,449,466],
[438,433,0,439,455,446,455,464],
[449,446,451,0,443,460,448,460],
[457,432,435,447,0,444,453,449],
[446,431,444,430,446,0,439,447],
[440,441,435,442,437,451,0,475],
[430,424,426,430,441,443,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,450,443,445,478,458,452],
[438,0,452,449,456,471,432,437],
[440,438,0,450,422,447,450,435],
[447,441,440,0,450,456,450,436],
[445,434,468,440,0,486,454,440],
[412,419,443,434,404,0,422,445],
[432,458,440,440,436,468,0,434],
[438,453,455,454,450,445,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,461,446,452,439,450,425],
[435,0,427,464,432,468,443,440],
[429,463,0,433,450,454,434,427],
[444,426,457,0,441,465,454,478],
[438,458,440,449,0,475,445,463],
[451,422,436,425,415,0,424,431],
[440,447,456,436,445,466,0,443],
[465,450,463,412,427,459,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,432,425,456,418,439,451],
[473,0,444,455,464,471,449,460],
[458,446,0,429,458,437,400,414],
[465,435,461,0,483,437,470,438],
[434,426,432,407,0,412,418,436],
[472,419,453,453,478,0,447,442],
[451,441,490,420,472,443,0,441],
[439,430,476,452,454,448,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,419,440,440,437,419,420],
[435,0,417,417,456,419,428,429],
[471,473,0,445,464,447,463,436],
[450,473,445,0,446,456,457,415],
[450,434,426,444,0,440,456,429],
[453,471,443,434,450,0,459,449],
[471,462,427,433,434,431,0,452],
[470,461,454,475,461,441,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,423,438,433,465,465,417],
[427,0,431,460,428,436,463,417],
[467,459,0,479,442,486,467,447],
[452,430,411,0,411,451,452,437],
[457,462,448,479,0,493,476,439],
[425,454,404,439,397,0,437,420],
[425,427,423,438,414,453,0,412],
[473,473,443,453,451,470,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,458,457,470,435,445,457],
[432,0,407,389,408,413,419,420],
[432,483,0,444,439,431,438,446],
[433,501,446,0,480,474,461,469],
[420,482,451,410,0,435,414,428],
[455,477,459,416,455,0,436,431],
[445,471,452,429,476,454,0,449],
[433,470,444,421,462,459,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,477,451,451,431,462,455],
[427,0,450,438,431,449,435,434],
[413,440,0,440,452,436,443,421],
[439,452,450,0,453,410,437,425],
[439,459,438,437,0,443,446,452],
[459,441,454,480,447,0,471,447],
[428,455,447,453,444,419,0,439],
[435,456,469,465,438,443,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,447,470,442,458,449,415],
[455,0,473,486,437,454,458,426],
[443,417,0,459,430,455,458,420],
[420,404,431,0,455,426,448,426],
[448,453,460,435,0,443,460,437],
[432,436,435,464,447,0,443,456],
[441,432,432,442,430,447,0,419],
[475,464,470,464,453,434,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,461,436,447,485,494,491],
[453,0,462,463,458,452,442,483],
[429,428,0,430,436,414,421,418],
[454,427,460,0,421,498,472,462],
[443,432,454,469,0,479,473,460],
[405,438,476,392,411,0,432,446],
[396,448,469,418,417,458,0,456],
[399,407,472,428,430,444,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,470,421,440,466,450,459],
[447,0,455,441,419,436,447,460],
[420,435,0,406,424,428,439,429],
[469,449,484,0,433,459,447,448],
[450,471,466,457,0,471,438,486],
[424,454,462,431,419,0,444,447],
[440,443,451,443,452,446,0,458],
[431,430,461,442,404,443,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,448,462,518,445,458,434],
[424,0,486,422,475,467,463,483],
[442,404,0,436,447,447,400,418],
[428,468,454,0,473,476,483,457],
[372,415,443,417,0,465,439,415],
[445,423,443,414,425,0,429,426],
[432,427,490,407,451,461,0,463],
[456,407,472,433,475,464,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,447,487,491,443,482,478],
[425,0,482,509,457,439,474,483],
[443,408,0,462,464,392,396,414],
[403,381,428,0,420,429,429,449],
[399,433,426,470,0,430,422,447],
[447,451,498,461,460,0,415,511],
[408,416,494,461,468,475,0,489],
[412,407,476,441,443,379,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,452,359,407,384,380,442],
[487,0,438,375,438,446,441,451],
[438,452,0,397,465,440,444,438],
[531,515,493,0,485,416,481,505],
[483,452,425,405,0,434,441,446],
[506,444,450,474,456,0,506,476],
[510,449,446,409,449,384,0,438],
[448,439,452,385,444,414,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,438,426,428,427,441,425],
[444,0,457,435,458,452,452,417],
[452,433,0,449,437,425,459,425],
[464,455,441,0,488,472,464,447],
[462,432,453,402,0,424,446,420],
[463,438,465,418,466,0,434,427],
[449,438,431,426,444,456,0,436],
[465,473,465,443,470,463,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,456,458,452,430,511,438],
[431,0,434,473,430,439,466,454],
[434,456,0,454,411,454,491,435],
[432,417,436,0,445,440,495,449],
[438,460,479,445,0,430,487,462],
[460,451,436,450,460,0,494,463],
[379,424,399,395,403,396,0,386],
[452,436,455,441,428,427,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,388,416,390,407,454,408,391],
[502,0,442,477,415,543,442,422],
[474,448,0,432,419,524,444,447],
[500,413,458,0,459,495,400,414],
[483,475,471,431,0,481,422,431],
[436,347,366,395,409,0,387,355],
[482,448,446,490,468,503,0,434],
[499,468,443,476,459,535,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,418,469,468,434,463,395],
[426,0,456,467,472,446,457,451],
[472,434,0,482,465,466,469,456],
[421,423,408,0,419,414,415,402],
[422,418,425,471,0,451,456,433],
[456,444,424,476,439,0,456,440],
[427,433,421,475,434,434,0,436],
[495,439,434,488,457,450,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,442,453,474,453,483,426],
[441,0,402,494,461,450,460,471],
[448,488,0,442,458,464,472,433],
[437,396,448,0,441,436,449,420],
[416,429,432,449,0,438,458,451],
[437,440,426,454,452,0,481,460],
[407,430,418,441,432,409,0,387],
[464,419,457,470,439,430,503,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,406,491,443,540,471,440],
[418,0,499,461,495,425,460,489],
[484,391,0,489,444,398,438,338],
[399,429,401,0,425,361,476,318],
[447,395,446,465,0,439,483,477],
[350,465,492,529,451,0,494,383],
[419,430,452,414,407,396,0,391],
[450,401,552,572,413,507,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,445,468,475,444,479,471],
[443,0,444,436,472,431,454,442],
[445,446,0,446,448,462,482,462],
[422,454,444,0,456,425,469,446],
[415,418,442,434,0,433,436,436],
[446,459,428,465,457,0,446,457],
[411,436,408,421,454,444,0,433],
[419,448,428,444,454,433,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,468,454,409,483,449,430],
[442,0,483,455,474,493,463,456],
[422,407,0,441,421,458,441,427],
[436,435,449,0,456,459,437,437],
[481,416,469,434,0,479,429,450],
[407,397,432,431,411,0,426,391],
[441,427,449,453,461,464,0,450],
[460,434,463,453,440,499,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,387,402,381,315,377,439,445],
[503,0,389,472,354,335,434,495],
[488,501,0,457,419,452,410,552],
[509,418,433,0,410,383,454,508],
[575,536,471,480,0,443,484,531],
[513,555,438,507,447,0,416,534],
[451,456,480,436,406,474,0,489],
[445,395,338,382,359,356,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,501,489,490,531,484,440],
[399,0,421,400,468,418,441,418],
[389,469,0,466,465,477,455,460],
[401,490,424,0,450,464,451,465],
[400,422,425,440,0,428,426,425],
[359,472,413,426,462,0,427,422],
[406,449,435,439,464,463,0,401],
[450,472,430,425,465,468,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,448,437,458,455,451,450],
[461,0,432,453,457,478,454,464],
[442,458,0,453,468,467,451,475],
[453,437,437,0,450,431,442,448],
[432,433,422,440,0,440,450,453],
[435,412,423,459,450,0,431,444],
[439,436,439,448,440,459,0,444],
[440,426,415,442,437,446,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,442,460,459,434,449,464],
[440,0,455,456,454,445,430,445],
[448,435,0,427,446,444,438,447],
[430,434,463,0,428,461,439,453],
[431,436,444,462,0,444,442,450],
[456,445,446,429,446,0,436,453],
[441,460,452,451,448,454,0,459],
[426,445,443,437,440,437,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,439,440,455,463,484,447],
[453,0,446,426,450,445,449,444],
[451,444,0,461,444,465,469,443],
[450,464,429,0,438,432,464,447],
[435,440,446,452,0,445,474,473],
[427,445,425,458,445,0,470,447],
[406,441,421,426,416,420,0,416],
[443,446,447,443,417,443,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,446,456,468,431,456,460],
[449,0,447,466,467,456,436,452],
[444,443,0,457,472,447,453,458],
[434,424,433,0,450,435,443,461],
[422,423,418,440,0,415,424,417],
[459,434,443,455,475,0,432,450],
[434,454,437,447,466,458,0,438],
[430,438,432,429,473,440,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,449,474,474,425,453,444],
[420,0,423,425,445,418,426,428],
[441,467,0,445,444,439,491,468],
[416,465,445,0,435,397,430,438],
[416,445,446,455,0,447,457,445],
[465,472,451,493,443,0,494,469],
[437,464,399,460,433,396,0,446],
[446,462,422,452,445,421,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,436,459,404,429,420,454],
[472,0,453,444,428,443,423,478],
[454,437,0,467,448,454,458,446],
[431,446,423,0,447,452,416,448],
[486,462,442,443,0,441,454,463],
[461,447,436,438,449,0,444,459],
[470,467,432,474,436,446,0,442],
[436,412,444,442,427,431,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,452,476,462,445,477,432],
[430,0,415,457,442,450,454,439],
[438,475,0,468,483,453,465,451],
[414,433,422,0,414,441,425,413],
[428,448,407,476,0,432,457,437],
[445,440,437,449,458,0,459,423],
[413,436,425,465,433,431,0,438],
[458,451,439,477,453,467,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,370,508,413,542,438,339,402],
[520,0,479,473,536,465,441,498],
[382,411,0,431,460,408,426,425],
[477,417,459,0,540,478,373,443],
[348,354,430,350,0,440,299,346],
[452,425,482,412,450,0,461,385],
[551,449,464,517,591,429,0,463],
[488,392,465,447,544,505,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,438,482,453,456,440,443],
[436,0,401,476,430,426,418,446],
[452,489,0,487,443,476,445,481],
[408,414,403,0,419,453,389,450],
[437,460,447,471,0,484,453,474],
[434,464,414,437,406,0,436,447],
[450,472,445,501,437,454,0,476],
[447,444,409,440,416,443,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,451,463,495,454,438,464],
[459,0,426,471,486,468,466,459],
[439,464,0,454,466,488,489,480],
[427,419,436,0,455,462,440,464],
[395,404,424,435,0,394,446,447],
[436,422,402,428,496,0,443,458],
[452,424,401,450,444,447,0,463],
[426,431,410,426,443,432,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,265,53,331,574,606,359,527],
[625,0,606,818,593,625,425,593],
[837,284,0,597,837,572,616,527],
[559,72,293,0,527,559,359,506],
[316,297,53,363,0,338,603,338],
[284,265,318,331,552,0,337,505],
[531,465,274,531,287,553,0,221],
[363,297,363,384,552,385,669,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,461,399,466,482,448,458],
[479,0,460,442,438,439,483,465],
[429,430,0,420,469,487,462,445],
[491,448,470,0,460,450,474,441],
[424,452,421,430,0,424,498,445],
[408,451,403,440,466,0,437,430],
[442,407,428,416,392,453,0,407],
[432,425,445,449,445,460,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,442,442,458,435,430,432],
[461,0,452,457,446,433,457,428],
[448,438,0,463,462,454,469,441],
[448,433,427,0,461,421,473,417],
[432,444,428,429,0,446,466,443],
[455,457,436,469,444,0,445,448],
[460,433,421,417,424,445,0,428],
[458,462,449,473,447,442,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,459,440,455,453,488,453],
[444,0,451,443,446,484,442,461],
[431,439,0,420,423,440,416,426],
[450,447,470,0,440,469,451,467],
[435,444,467,450,0,463,483,445],
[437,406,450,421,427,0,415,433],
[402,448,474,439,407,475,0,450],
[437,429,464,423,445,457,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,446,336,448,491,487,584],
[486,0,536,491,442,648,442,476],
[444,354,0,298,450,552,396,619],
[554,399,592,0,498,673,623,603],
[442,448,440,392,0,538,534,607],
[399,242,338,217,352,0,308,345],
[403,448,494,267,356,582,0,512],
[306,414,271,287,283,545,378,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,465,445,462,439,464,451],
[424,0,443,435,435,437,467,421],
[425,447,0,418,440,438,422,435],
[445,455,472,0,438,453,470,455],
[428,455,450,452,0,453,450,447],
[451,453,452,437,437,0,460,448],
[426,423,468,420,440,430,0,439],
[439,469,455,435,443,442,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,429,416,471,418,398,415],
[447,0,419,414,437,434,364,387],
[461,471,0,419,467,415,429,412],
[474,476,471,0,474,468,467,437],
[419,453,423,416,0,416,397,407],
[472,456,475,422,474,0,400,408],
[492,526,461,423,493,490,0,464],
[475,503,478,453,483,482,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,409,421,432,433,455,396],
[493,0,445,456,467,495,508,457],
[481,445,0,441,448,500,474,454],
[469,434,449,0,455,486,462,432],
[458,423,442,435,0,474,480,430],
[457,395,390,404,416,0,420,434],
[435,382,416,428,410,470,0,423],
[494,433,436,458,460,456,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,464,450,458,463,460,436],
[441,0,458,441,413,436,417,425],
[426,432,0,448,416,434,429,423],
[440,449,442,0,456,446,448,455],
[432,477,474,434,0,448,413,444],
[427,454,456,444,442,0,426,447],
[430,473,461,442,477,464,0,452],
[454,465,467,435,446,443,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,450,450,450,426,457,449],
[469,0,458,457,437,454,455,458],
[440,432,0,452,417,435,446,435],
[440,433,438,0,413,427,448,442],
[440,453,473,477,0,455,480,462],
[464,436,455,463,435,0,480,462],
[433,435,444,442,410,410,0,431],
[441,432,455,448,428,428,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,434,443,448,433,439,427],
[431,0,440,425,439,430,422,416],
[456,450,0,433,444,432,435,420],
[447,465,457,0,450,462,438,468],
[442,451,446,440,0,443,443,446],
[457,460,458,428,447,0,478,454],
[451,468,455,452,447,412,0,446],
[463,474,470,422,444,436,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,456,447,465,452,445,444],
[458,0,449,431,446,437,488,465],
[434,441,0,431,441,436,423,456],
[443,459,459,0,477,444,463,485],
[425,444,449,413,0,448,478,456],
[438,453,454,446,442,0,467,480],
[445,402,467,427,412,423,0,468],
[446,425,434,405,434,410,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,441,418,439,423,437,408],
[476,0,443,457,464,465,452,445],
[449,447,0,437,465,446,458,439],
[472,433,453,0,465,458,466,436],
[451,426,425,425,0,424,443,410],
[467,425,444,432,466,0,443,444],
[453,438,432,424,447,447,0,427],
[482,445,451,454,480,446,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,446,443,465,440,448,450],
[467,0,437,449,460,433,435,432],
[444,453,0,433,449,435,451,446],
[447,441,457,0,450,432,445,453],
[425,430,441,440,0,452,428,441],
[450,457,455,458,438,0,455,466],
[442,455,439,445,462,435,0,450],
[440,458,444,437,449,424,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,473,440,486,473,509,449],
[443,0,493,459,487,469,521,455],
[417,397,0,426,445,446,473,452],
[450,431,464,0,480,479,471,464],
[404,403,445,410,0,479,484,434],
[417,421,444,411,411,0,484,414],
[381,369,417,419,406,406,0,410],
[441,435,438,426,456,476,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,456,450,453,449,431,439],
[435,0,438,432,441,462,456,438],
[434,452,0,437,449,455,447,436],
[440,458,453,0,451,452,489,454],
[437,449,441,439,0,439,452,461],
[441,428,435,438,451,0,464,435],
[459,434,443,401,438,426,0,447],
[451,452,454,436,429,455,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,457,467,473,493,431,448],
[415,0,453,439,467,461,453,433],
[433,437,0,432,447,468,428,419],
[423,451,458,0,459,437,447,436],
[417,423,443,431,0,449,389,435],
[397,429,422,453,441,0,413,436],
[459,437,462,443,501,477,0,467],
[442,457,471,454,455,454,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,431,477,452,441,466,448],
[433,0,443,458,436,428,443,452],
[459,447,0,476,455,443,445,442],
[413,432,414,0,425,411,448,431],
[438,454,435,465,0,455,463,461],
[449,462,447,479,435,0,449,470],
[424,447,445,442,427,441,0,426],
[442,438,448,459,429,420,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,439,488,494,481,462,449],
[429,0,416,470,437,432,443,433],
[451,474,0,465,450,462,441,477],
[402,420,425,0,434,417,424,440],
[396,453,440,456,0,462,435,444],
[409,458,428,473,428,0,443,450],
[428,447,449,466,455,447,0,472],
[441,457,413,450,446,440,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,428,457,411,425,420,452],
[442,0,447,452,438,445,438,443],
[462,443,0,423,458,461,453,467],
[433,438,467,0,436,442,432,462],
[479,452,432,454,0,451,439,464],
[465,445,429,448,439,0,437,454],
[470,452,437,458,451,453,0,493],
[438,447,423,428,426,436,397,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,449,446,433,453,461,445],
[436,0,460,446,429,433,424,439],
[441,430,0,443,454,462,457,438],
[444,444,447,0,451,462,453,414],
[457,461,436,439,0,456,454,439],
[437,457,428,428,434,0,391,416],
[429,466,433,437,436,499,0,434],
[445,451,452,476,451,474,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,447,439,419,446,472,441],
[464,0,440,419,448,460,444,424],
[443,450,0,437,436,442,461,447],
[451,471,453,0,438,461,453,457],
[471,442,454,452,0,449,483,454],
[444,430,448,429,441,0,472,413],
[418,446,429,437,407,418,0,413],
[449,466,443,433,436,477,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,431,427,425,435,432,433],
[461,0,444,439,434,417,398,477],
[459,446,0,455,455,438,440,451],
[463,451,435,0,465,438,457,466],
[465,456,435,425,0,471,464,473],
[455,473,452,452,419,0,447,468],
[458,492,450,433,426,443,0,473],
[457,413,439,424,417,422,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,447,435,438,423,448,438],
[452,0,455,468,451,432,459,463],
[443,435,0,424,421,437,437,443],
[455,422,466,0,430,450,462,455],
[452,439,469,460,0,445,464,460],
[467,458,453,440,445,0,459,471],
[442,431,453,428,426,431,0,440],
[452,427,447,435,430,419,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,469,479,444,457,457,461],
[461,0,451,464,453,432,450,477],
[421,439,0,431,433,439,429,441],
[411,426,459,0,440,420,439,421],
[446,437,457,450,0,425,437,450],
[433,458,451,470,465,0,447,459],
[433,440,461,451,453,443,0,427],
[429,413,449,469,440,431,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,488,484,490,445,466,455],
[415,0,445,469,464,406,421,424],
[402,445,0,447,452,439,442,427],
[406,421,443,0,431,403,420,423],
[400,426,438,459,0,459,434,428],
[445,484,451,487,431,0,436,485],
[424,469,448,470,456,454,0,418],
[435,466,463,467,462,405,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,486,441,475,486,475,451],
[399,0,448,371,445,428,402,394],
[404,442,0,449,450,454,444,416],
[449,519,441,0,491,466,452,431],
[415,445,440,399,0,426,428,431],
[404,462,436,424,464,0,399,413],
[415,488,446,438,462,491,0,459],
[439,496,474,459,459,477,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,489,531,436,430,499,478],
[453,0,457,461,378,432,442,413],
[401,433,0,476,500,409,391,481],
[359,429,414,0,322,407,359,465],
[454,512,390,568,0,511,370,517],
[460,458,481,483,379,0,433,445],
[391,448,499,531,520,457,0,515],
[412,477,409,425,373,445,375,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,424,426,439,430,376,436],
[486,0,461,424,478,449,444,440],
[466,429,0,438,461,428,441,425],
[464,466,452,0,469,455,441,446],
[451,412,429,421,0,424,417,431],
[460,441,462,435,466,0,448,432],
[514,446,449,449,473,442,0,472],
[454,450,465,444,459,458,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,483,491,446,446,472,465],
[453,0,476,430,438,464,450,427],
[407,414,0,433,405,428,447,430],
[399,460,457,0,435,445,452,433],
[444,452,485,455,0,449,454,459],
[444,426,462,445,441,0,444,440],
[418,440,443,438,436,446,0,417],
[425,463,460,457,431,450,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,456,468,435,446,460,454],
[441,0,446,437,426,430,425,449],
[434,444,0,470,421,402,462,453],
[422,453,420,0,436,424,452,434],
[455,464,469,454,0,447,442,455],
[444,460,488,466,443,0,468,442],
[430,465,428,438,448,422,0,445],
[436,441,437,456,435,448,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,409,463,445,422,412,415],
[449,0,452,437,446,419,445,456],
[481,438,0,467,452,463,440,466],
[427,453,423,0,456,423,453,454],
[445,444,438,434,0,435,439,450],
[468,471,427,467,455,0,451,454],
[478,445,450,437,451,439,0,456],
[475,434,424,436,440,436,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,405,396,394,385,426,394],
[482,0,421,403,428,428,450,411],
[485,469,0,447,421,442,464,455],
[494,487,443,0,438,458,485,463],
[496,462,469,452,0,421,479,434],
[505,462,448,432,469,0,468,435],
[464,440,426,405,411,422,0,431],
[496,479,435,427,456,455,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,496,440,464,476,463,484,405],
[394,0,460,474,467,396,432,450],
[450,430,0,462,467,440,451,411],
[426,416,428,0,441,441,402,406],
[414,423,423,449,0,394,460,432],
[427,494,450,449,496,0,446,443],
[406,458,439,488,430,444,0,460],
[485,440,479,484,458,447,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,432,446,463,417,419,424],
[460,0,417,447,469,460,436,431],
[458,473,0,448,473,445,467,465],
[444,443,442,0,450,442,434,418],
[427,421,417,440,0,450,421,428],
[473,430,445,448,440,0,457,439],
[471,454,423,456,469,433,0,426],
[466,459,425,472,462,451,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,460,440,426,440,437,444],
[447,0,439,428,455,407,426,431],
[430,451,0,446,441,443,419,454],
[450,462,444,0,450,442,453,447],
[464,435,449,440,0,415,456,458],
[450,483,447,448,475,0,432,478],
[453,464,471,437,434,458,0,465],
[446,459,436,443,432,412,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,433,460,469,471,414,406],
[475,0,447,449,459,446,430,422],
[457,443,0,478,476,422,456,475],
[430,441,412,0,464,403,431,423],
[421,431,414,426,0,406,394,411],
[419,444,468,487,484,0,418,449],
[476,460,434,459,496,472,0,435],
[484,468,415,467,479,441,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,501,447,449,448,469,443,469],
[389,0,385,404,460,435,427,423],
[443,505,0,467,502,508,508,506],
[441,486,423,0,462,464,469,491],
[442,430,388,428,0,440,456,451],
[421,455,382,426,450,0,453,432],
[447,463,382,421,434,437,0,427],
[421,467,384,399,439,458,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,360,403,473,497,368,495,552],
[530,0,343,558,541,357,436,638],
[487,547,0,488,515,443,469,564],
[417,332,402,0,384,344,382,550],
[393,349,375,506,0,292,318,381],
[522,533,447,546,598,0,357,539],
[395,454,421,508,572,533,0,590],
[338,252,326,340,509,351,300,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,419,462,481,480,452,458],
[460,0,457,437,458,488,450,454],
[471,433,0,451,458,465,448,451],
[428,453,439,0,465,474,431,428],
[409,432,432,425,0,457,455,403],
[410,402,425,416,433,0,443,421],
[438,440,442,459,435,447,0,427],
[432,436,439,462,487,469,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,429,439,444,490,445,458],
[457,0,461,454,441,470,434,467],
[461,429,0,457,474,456,448,444],
[451,436,433,0,438,465,438,463],
[446,449,416,452,0,438,429,475],
[400,420,434,425,452,0,377,452],
[445,456,442,452,461,513,0,464],
[432,423,446,427,415,438,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,548,441,592,499,505,421,521],
[342,0,408,488,491,476,528,548],
[449,482,0,620,493,526,421,539],
[298,402,270,0,432,420,301,419],
[391,399,397,458,0,510,340,476],
[385,414,364,470,380,0,268,373],
[469,362,469,589,550,622,0,534],
[369,342,351,471,414,517,356,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,453,451,448,445,432,444],
[457,0,468,443,449,420,430,470],
[437,422,0,430,416,416,413,440],
[439,447,460,0,443,439,432,460],
[442,441,474,447,0,421,445,454],
[445,470,474,451,469,0,445,454],
[458,460,477,458,445,445,0,466],
[446,420,450,430,436,436,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,453,476,443,445,431,469],
[423,0,430,415,447,432,440,420],
[437,460,0,448,470,419,476,458],
[414,475,442,0,456,462,442,436],
[447,443,420,434,0,430,434,453],
[445,458,471,428,460,0,448,434],
[459,450,414,448,456,442,0,452],
[421,470,432,454,437,456,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,449,426,393,439,428,405],
[491,0,476,453,442,484,468,447],
[441,414,0,439,418,470,448,414],
[464,437,451,0,453,455,451,411],
[497,448,472,437,0,487,464,454],
[451,406,420,435,403,0,443,416],
[462,422,442,439,426,447,0,436],
[485,443,476,479,436,474,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,434,454,459,452,439,451],
[446,0,389,468,484,463,457,418],
[456,501,0,448,468,503,455,424],
[436,422,442,0,440,439,427,430],
[431,406,422,450,0,411,444,428],
[438,427,387,451,479,0,425,405],
[451,433,435,463,446,465,0,412],
[439,472,466,460,462,485,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,431,448,409,460,427,432],
[474,0,464,479,437,473,451,446],
[459,426,0,460,439,470,442,428],
[442,411,430,0,411,467,436,403],
[481,453,451,479,0,483,444,434],
[430,417,420,423,407,0,419,424],
[463,439,448,454,446,471,0,458],
[458,444,462,487,456,466,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,457,459,453,466,443,464],
[431,0,470,456,443,437,441,438],
[433,420,0,447,428,441,449,426],
[431,434,443,0,457,433,432,435],
[437,447,462,433,0,434,426,452],
[424,453,449,457,456,0,435,448],
[447,449,441,458,464,455,0,450],
[426,452,464,455,438,442,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,439,457,453,492,454,444],
[433,0,449,477,442,478,455,428],
[451,441,0,474,445,474,438,452],
[433,413,416,0,427,460,438,414],
[437,448,445,463,0,494,471,441],
[398,412,416,430,396,0,405,430],
[436,435,452,452,419,485,0,447],
[446,462,438,476,449,460,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,464,444,465,424,451,451],
[432,0,441,446,451,448,434,434],
[426,449,0,455,420,445,442,449],
[446,444,435,0,438,447,442,444],
[425,439,470,452,0,445,448,456],
[466,442,445,443,445,0,447,449],
[439,456,448,448,442,443,0,452],
[439,456,441,446,434,441,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,506,377,459,414,474,441,506],
[384,0,388,445,387,450,399,435],
[513,502,0,432,444,489,423,509],
[431,445,458,0,504,436,404,437],
[476,503,446,386,0,484,461,440],
[416,440,401,454,406,0,388,480],
[449,491,467,486,429,502,0,465],
[384,455,381,453,450,410,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,389,448,498,404,446,468],
[440,0,444,447,484,467,466,489],
[501,446,0,424,559,414,454,525],
[442,443,466,0,504,431,454,487],
[392,406,331,386,0,393,491,435],
[486,423,476,459,497,0,437,526],
[444,424,436,436,399,453,0,430],
[422,401,365,403,455,364,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,431,451,417,431,428,433],
[445,0,430,467,465,446,436,456],
[459,460,0,467,426,449,449,467],
[439,423,423,0,410,427,432,427],
[473,425,464,480,0,454,451,465],
[459,444,441,463,436,0,452,464],
[462,454,441,458,439,438,0,450],
[457,434,423,463,425,426,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,413,537,312,417,465,486],
[418,0,550,439,416,517,399,514],
[477,340,0,480,508,583,407,529],
[353,451,410,0,334,360,366,332],
[578,474,382,556,0,467,500,392],
[473,373,307,530,423,0,602,483],
[425,491,483,524,390,288,0,432],
[404,376,361,558,498,407,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,459,463,379,475,444,438],
[427,0,464,427,447,440,441,432],
[431,426,0,394,424,448,445,394],
[427,463,496,0,444,466,452,433],
[511,443,466,446,0,493,452,451],
[415,450,442,424,397,0,407,427],
[446,449,445,438,438,483,0,447],
[452,458,496,457,439,463,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,447,449,361,493,451,450],
[405,0,405,473,387,490,440,472],
[443,485,0,413,357,431,435,456],
[441,417,477,0,447,509,401,485],
[529,503,533,443,0,530,467,494],
[397,400,459,381,360,0,444,443],
[439,450,455,489,423,446,0,476],
[440,418,434,405,396,447,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,382,407,442,424,372,359,381],
[508,0,427,456,413,396,389,446],
[483,463,0,460,389,389,370,469],
[448,434,430,0,423,432,391,466],
[466,477,501,467,0,433,438,423],
[518,494,501,458,457,0,452,418],
[531,501,520,499,452,438,0,505],
[509,444,421,424,467,472,385,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,418,449,468,411,451,479],
[446,0,433,462,427,413,442,444],
[472,457,0,441,437,429,411,444],
[441,428,449,0,457,426,449,445],
[422,463,453,433,0,456,454,440],
[479,477,461,464,434,0,469,442],
[439,448,479,441,436,421,0,447],
[411,446,446,445,450,448,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,421,389,390,411,416,404],
[463,0,422,419,415,412,381,380],
[469,468,0,427,415,450,414,425],
[501,471,463,0,467,441,415,427],
[500,475,475,423,0,462,480,450],
[479,478,440,449,428,0,379,417],
[474,509,476,475,410,511,0,428],
[486,510,465,463,440,473,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,390,407,458,435,435,416],
[469,0,423,390,442,416,430,365],
[500,467,0,436,503,438,450,426],
[483,500,454,0,491,471,459,430],
[432,448,387,399,0,399,408,383],
[455,474,452,419,491,0,464,413],
[455,460,440,431,482,426,0,456],
[474,525,464,460,507,477,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,496,487,459,438,470,581],
[412,0,459,492,426,404,432,491],
[394,431,0,494,457,446,457,448],
[403,398,396,0,389,407,459,467],
[431,464,433,501,0,524,486,439],
[452,486,444,483,366,0,463,500],
[420,458,433,431,404,427,0,478],
[309,399,442,423,451,390,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,449,449,525,455,457,432],
[436,0,480,466,488,416,484,443],
[441,410,0,400,483,419,446,403],
[441,424,490,0,499,462,473,466],
[365,402,407,391,0,413,392,414],
[435,474,471,428,477,0,478,418],
[433,406,444,417,498,412,0,371],
[458,447,487,424,476,472,519,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,409,443,462,456,474,429],
[446,0,434,433,444,441,460,452],
[481,456,0,456,460,481,488,445],
[447,457,434,0,461,453,460,423],
[428,446,430,429,0,451,457,415],
[434,449,409,437,439,0,459,422],
[416,430,402,430,433,431,0,407],
[461,438,445,467,475,468,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,439,529,459,470,405,430],
[438,0,440,474,372,399,345,414],
[451,450,0,522,422,460,398,507],
[361,416,368,0,339,376,358,394],
[431,518,468,551,0,444,436,487],
[420,491,430,514,446,0,463,485],
[485,545,492,532,454,427,0,556],
[460,476,383,496,403,405,334,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,450,454,472,458,444,441],
[425,0,455,440,472,435,419,438],
[440,435,0,451,449,455,441,443],
[436,450,439,0,454,439,439,440],
[418,418,441,436,0,433,417,455],
[432,455,435,451,457,0,450,446],
[446,471,449,451,473,440,0,454],
[449,452,447,450,435,444,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,449,416,455,449,418,442],
[434,0,457,436,423,440,420,437],
[441,433,0,423,438,445,428,440],
[474,454,467,0,452,485,443,479],
[435,467,452,438,0,455,450,451],
[441,450,445,405,435,0,421,424],
[472,470,462,447,440,469,0,458],
[448,453,450,411,439,466,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,451,430,452,485,451,412],
[447,0,451,411,420,445,423,415],
[439,439,0,459,418,460,439,429],
[460,479,431,0,459,494,436,461],
[438,470,472,431,0,466,455,427],
[405,445,430,396,424,0,410,395],
[439,467,451,454,435,480,0,424],
[478,475,461,429,463,495,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,433,441,404,447,428,434],
[449,0,426,428,439,450,448,437],
[457,464,0,445,446,469,451,477],
[449,462,445,0,434,470,454,462],
[486,451,444,456,0,498,454,458],
[443,440,421,420,392,0,435,447],
[462,442,439,436,436,455,0,461],
[456,453,413,428,432,443,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,445,428,440,421,448,440],
[437,0,439,425,424,441,452,451],
[445,451,0,446,437,448,451,443],
[462,465,444,0,449,432,441,434],
[450,466,453,441,0,451,444,430],
[469,449,442,458,439,0,458,448],
[442,438,439,449,446,432,0,425],
[450,439,447,456,460,442,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,447,408,438,488,456,428],
[424,0,439,434,410,443,409,419],
[443,451,0,443,450,481,434,456],
[482,456,447,0,464,460,443,455],
[452,480,440,426,0,457,425,434],
[402,447,409,430,433,0,429,424],
[434,481,456,447,465,461,0,443],
[462,471,434,435,456,466,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,438,445,455,437,464,431],
[453,0,452,437,457,455,454,456],
[452,438,0,462,436,481,447,460],
[445,453,428,0,438,450,456,448],
[435,433,454,452,0,447,444,451],
[453,435,409,440,443,0,456,438],
[426,436,443,434,446,434,0,426],
[459,434,430,442,439,452,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,467,453,468,444,454,434],
[434,0,466,404,412,452,418,439],
[423,424,0,399,427,438,408,411],
[437,486,491,0,436,498,440,496],
[422,478,463,454,0,472,443,438],
[446,438,452,392,418,0,395,412],
[436,472,482,450,447,495,0,432],
[456,451,479,394,452,478,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,459,483,413,416,439,444],
[432,0,471,462,415,421,389,403],
[431,419,0,471,412,435,406,414],
[407,428,419,0,348,417,422,392],
[477,475,478,542,0,475,442,454],
[474,469,455,473,415,0,439,439],
[451,501,484,468,448,451,0,420],
[446,487,476,498,436,451,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,439,444,497,518,521,416],
[415,0,457,402,395,467,450,401],
[451,433,0,450,425,511,484,438],
[446,488,440,0,464,481,469,445],
[393,495,465,426,0,476,484,416],
[372,423,379,409,414,0,422,360],
[369,440,406,421,406,468,0,387],
[474,489,452,445,474,530,503,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,444,413,414,398,438,363],
[457,0,429,418,429,405,451,389],
[446,461,0,410,429,403,444,361],
[477,472,480,0,498,439,383,390],
[476,461,461,392,0,437,461,403],
[492,485,487,451,453,0,487,419],
[452,439,446,507,429,403,0,446],
[527,501,529,500,487,471,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,447,431,456,480,485,436],
[412,0,413,448,443,400,432,431],
[443,477,0,458,457,431,462,456],
[459,442,432,0,466,455,465,452],
[434,447,433,424,0,452,462,445],
[410,490,459,435,438,0,472,461],
[405,458,428,425,428,418,0,413],
[454,459,434,438,445,429,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,441,430,448,456,405,402],
[440,0,441,413,441,463,447,441],
[449,449,0,402,440,435,414,422],
[460,477,488,0,484,472,444,436],
[442,449,450,406,0,425,432,449],
[434,427,455,418,465,0,462,437],
[485,443,476,446,458,428,0,427],
[488,449,468,454,441,453,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,456,450,450,448,443,449],
[431,0,426,416,459,444,431,440],
[434,464,0,441,450,436,436,460],
[440,474,449,0,467,432,450,460],
[440,431,440,423,0,437,430,446],
[442,446,454,458,453,0,449,464],
[447,459,454,440,460,441,0,443],
[441,450,430,430,444,426,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,415,448,420,429,429,427],
[478,0,457,463,481,449,458,444],
[475,433,0,449,442,452,442,428],
[442,427,441,0,436,440,435,436],
[470,409,448,454,0,430,445,459],
[461,441,438,450,460,0,444,447],
[461,432,448,455,445,446,0,448],
[463,446,462,454,431,443,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,444,452,446,464,449,469],
[415,0,456,421,473,437,444,434],
[446,434,0,398,424,400,407,414],
[438,469,492,0,465,452,459,444],
[444,417,466,425,0,434,448,410],
[426,453,490,438,456,0,460,463],
[441,446,483,431,442,430,0,410],
[421,456,476,446,480,427,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,456,440,448,462,445,439],
[428,0,438,448,433,447,446,469],
[434,452,0,452,430,442,451,445],
[450,442,438,0,412,454,457,447],
[442,457,460,478,0,435,459,463],
[428,443,448,436,455,0,451,422],
[445,444,439,433,431,439,0,454],
[451,421,445,443,427,468,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,431,461,482,444,473,442],
[442,0,410,437,439,429,463,445],
[459,480,0,456,469,441,464,440],
[429,453,434,0,469,443,473,446],
[408,451,421,421,0,458,459,423],
[446,461,449,447,432,0,473,454],
[417,427,426,417,431,417,0,429],
[448,445,450,444,467,436,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,407,516,445,510,450,457],
[429,0,442,504,504,502,425,481],
[483,448,0,487,438,484,429,433],
[374,386,403,0,383,461,400,380],
[445,386,452,507,0,514,452,467],
[380,388,406,429,376,0,426,422],
[440,465,461,490,438,464,0,427],
[433,409,457,510,423,468,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,420,435,472,435,437,435],
[452,0,445,451,482,462,472,426],
[470,445,0,441,502,459,465,473],
[455,439,449,0,466,496,457,463],
[418,408,388,424,0,421,406,413],
[455,428,431,394,469,0,441,432],
[453,418,425,433,484,449,0,418],
[455,464,417,427,477,458,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,442,406,436,405,447,453],
[444,0,480,437,430,438,473,450],
[448,410,0,450,422,431,466,440],
[484,453,440,0,450,455,472,499],
[454,460,468,440,0,452,463,475],
[485,452,459,435,438,0,448,453],
[443,417,424,418,427,442,0,442],
[437,440,450,391,415,437,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,435,462,464,466,430,449],
[428,0,435,465,442,446,456,436],
[455,455,0,470,465,457,443,423],
[428,425,420,0,427,421,428,422],
[426,448,425,463,0,439,418,447],
[424,444,433,469,451,0,438,440],
[460,434,447,462,472,452,0,453],
[441,454,467,468,443,450,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,420,453,435,462,453,421],
[428,0,417,450,440,457,462,434],
[470,473,0,485,426,451,481,463],
[437,440,405,0,419,451,442,422],
[455,450,464,471,0,450,475,440],
[428,433,439,439,440,0,435,426],
[437,428,409,448,415,455,0,418],
[469,456,427,468,450,464,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,453,426,481,447,417,443],
[449,0,412,457,499,445,430,455],
[437,478,0,411,445,424,422,453],
[464,433,479,0,480,454,429,462],
[409,391,445,410,0,444,401,421],
[443,445,466,436,446,0,445,455],
[473,460,468,461,489,445,0,453],
[447,435,437,428,469,435,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,490,451,421,402,457,426],
[408,0,435,392,378,385,412,377],
[400,455,0,399,361,411,434,387],
[439,498,491,0,421,420,454,416],
[469,512,529,469,0,484,494,430],
[488,505,479,470,406,0,503,448],
[433,478,456,436,396,387,0,368],
[464,513,503,474,460,442,522,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,491,466,484,456,493,436],
[430,0,437,436,470,413,437,452],
[399,453,0,446,438,437,422,409],
[424,454,444,0,442,436,467,440],
[406,420,452,448,0,436,467,435],
[434,477,453,454,454,0,486,458],
[397,453,468,423,423,404,0,408],
[454,438,481,450,455,432,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,435,473,476,453,499,500],
[418,0,408,440,439,464,466,450],
[455,482,0,406,459,460,477,466],
[417,450,484,0,453,460,471,481],
[414,451,431,437,0,436,469,484],
[437,426,430,430,454,0,452,438],
[391,424,413,419,421,438,0,465],
[390,440,424,409,406,452,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,423,432,447,436,442,443],
[446,0,454,427,445,440,443,422],
[467,436,0,441,454,460,433,472],
[458,463,449,0,443,457,443,447],
[443,445,436,447,0,434,425,439],
[454,450,430,433,456,0,446,441],
[448,447,457,447,465,444,0,427],
[447,468,418,443,451,449,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,419,498,445,410,449,420],
[445,0,441,509,506,471,462,439],
[471,449,0,508,465,468,436,460],
[392,381,382,0,436,414,399,414],
[445,384,425,454,0,442,449,443],
[480,419,422,476,448,0,394,463],
[441,428,454,491,441,496,0,472],
[470,451,430,476,447,427,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,451,453,476,433,438,441],
[411,0,422,410,426,433,432,425],
[439,468,0,445,460,414,432,420],
[437,480,445,0,462,429,428,419],
[414,464,430,428,0,437,429,420],
[457,457,476,461,453,0,454,437],
[452,458,458,462,461,436,0,446],
[449,465,470,471,470,453,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,433,466,435,476,461,431],
[471,0,443,474,447,432,464,445],
[457,447,0,467,429,463,452,441],
[424,416,423,0,405,469,441,429],
[455,443,461,485,0,467,506,462],
[414,458,427,421,423,0,448,419],
[429,426,438,449,384,442,0,412],
[459,445,449,461,428,471,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,418,472,282,315,450,371],
[423,0,427,508,347,478,541,435],
[472,463,0,562,282,382,455,482],
[418,382,328,0,326,236,424,435],
[608,543,608,564,0,337,596,523],
[575,412,508,654,553,0,559,513],
[440,349,435,466,294,331,0,465],
[519,455,408,455,367,377,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,423,457,414,435,437,433],
[463,0,443,453,437,452,452,416],
[467,447,0,474,453,475,480,444],
[433,437,416,0,429,437,448,446],
[476,453,437,461,0,462,452,444],
[455,438,415,453,428,0,447,415],
[453,438,410,442,438,443,0,435],
[457,474,446,444,446,475,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,443,440,470,471,454,457],
[444,0,479,434,446,442,444,475],
[447,411,0,439,424,413,411,460],
[450,456,451,0,447,432,443,472],
[420,444,466,443,0,459,444,490],
[419,448,477,458,431,0,433,451],
[436,446,479,447,446,457,0,477],
[433,415,430,418,400,439,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,466,423,425,436,443,432],
[461,0,454,443,433,431,438,444],
[424,436,0,447,443,456,437,451],
[467,447,443,0,451,434,445,455],
[465,457,447,439,0,428,437,452],
[454,459,434,456,462,0,466,452],
[447,452,453,445,453,424,0,489],
[458,446,439,435,438,438,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,405,408,418,466,432,408],
[445,0,398,409,438,464,448,464],
[485,492,0,453,472,532,438,455],
[482,481,437,0,468,506,438,471],
[472,452,418,422,0,498,435,436],
[424,426,358,384,392,0,375,399],
[458,442,452,452,455,515,0,460],
[482,426,435,419,454,491,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,495,462,431,474,458,438,460],
[395,0,459,402,456,441,437,437],
[428,431,0,432,448,458,453,460],
[459,488,458,0,490,473,445,453],
[416,434,442,400,0,462,431,443],
[432,449,432,417,428,0,394,427],
[452,453,437,445,459,496,0,455],
[430,453,430,437,447,463,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,379,437,419,463,443,446],
[451,0,440,445,454,461,476,462],
[511,450,0,478,468,481,483,441],
[453,445,412,0,429,442,426,425],
[471,436,422,461,0,473,470,440],
[427,429,409,448,417,0,436,416],
[447,414,407,464,420,454,0,439],
[444,428,449,465,450,474,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,411,455,433,388,453,425],
[463,0,374,415,471,411,465,463],
[479,516,0,491,469,426,476,511],
[435,475,399,0,447,368,428,389],
[457,419,421,443,0,410,405,425],
[502,479,464,522,480,0,430,505],
[437,425,414,462,485,460,0,457],
[465,427,379,501,465,385,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,498,432,433,432,418,470],
[451,0,449,400,383,380,402,395],
[392,441,0,373,389,360,385,454],
[458,490,517,0,414,441,469,480],
[457,507,501,476,0,458,441,453],
[458,510,530,449,432,0,451,506],
[472,488,505,421,449,439,0,510],
[420,495,436,410,437,384,380,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,455,454,425,449,454,456],
[411,0,429,429,415,424,417,441],
[435,461,0,457,438,424,450,464],
[436,461,433,0,419,441,447,457],
[465,475,452,471,0,449,443,473],
[441,466,466,449,441,0,451,462],
[436,473,440,443,447,439,0,450],
[434,449,426,433,417,428,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,476,479,499,453,370,475],
[420,0,500,489,497,413,372,487],
[414,390,0,466,502,427,401,501],
[411,401,424,0,401,398,372,410],
[391,393,388,489,0,374,433,453],
[437,477,463,492,516,0,449,496],
[520,518,489,518,457,441,0,466],
[415,403,389,480,437,394,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,511,477,438,404,380,418],
[445,0,464,454,435,433,402,474],
[379,426,0,461,438,386,386,436],
[413,436,429,0,454,400,398,415],
[452,455,452,436,0,475,371,471],
[486,457,504,490,415,0,454,450],
[510,488,504,492,519,436,0,462],
[472,416,454,475,419,440,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,436,480,473,490,420,388],
[412,0,366,464,398,430,407,448],
[454,524,0,496,462,478,450,437],
[410,426,394,0,392,430,426,396],
[417,492,428,498,0,512,431,451],
[400,460,412,460,378,0,415,423],
[470,483,440,464,459,475,0,463],
[502,442,453,494,439,467,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,433,442,445,448,456,475],
[443,0,428,434,458,444,436,451],
[457,462,0,426,446,456,455,466],
[448,456,464,0,471,464,436,471],
[445,432,444,419,0,463,452,465],
[442,446,434,426,427,0,458,443],
[434,454,435,454,438,432,0,448],
[415,439,424,419,425,447,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,433,460,448,456,440,467],
[455,0,435,450,440,439,453,463],
[457,455,0,476,437,480,446,472],
[430,440,414,0,432,440,432,455],
[442,450,453,458,0,467,462,471],
[434,451,410,450,423,0,438,453],
[450,437,444,458,428,452,0,450],
[423,427,418,435,419,437,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,448,466,460,456,443,451],
[439,0,455,470,438,442,442,448],
[442,435,0,438,434,435,444,443],
[424,420,452,0,443,424,451,438],
[430,452,456,447,0,444,443,455],
[434,448,455,466,446,0,450,460],
[447,448,446,439,447,440,0,441],
[439,442,447,452,435,430,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,441,435,457,425,440,439],
[439,0,455,461,499,434,467,453],
[449,435,0,441,443,442,486,432],
[455,429,449,0,445,453,468,441],
[433,391,447,445,0,428,425,455],
[465,456,448,437,462,0,456,470],
[450,423,404,422,465,434,0,448],
[451,437,458,449,435,420,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,446,449,472,429,459,459],
[422,0,437,494,432,404,413,452],
[444,453,0,456,446,434,464,477],
[441,396,434,0,427,388,421,449],
[418,458,444,463,0,448,422,499],
[461,486,456,502,442,0,481,477],
[431,477,426,469,468,409,0,478],
[431,438,413,441,391,413,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,460,409,481,408,400,433],
[461,0,486,422,486,436,425,391],
[430,404,0,422,485,420,415,417],
[481,468,468,0,501,478,433,450],
[409,404,405,389,0,420,364,411],
[482,454,470,412,470,0,412,409],
[490,465,475,457,526,478,0,444],
[457,499,473,440,479,481,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,441,440,452,460,439,418],
[439,0,462,425,445,450,441,438],
[449,428,0,409,427,447,421,425],
[450,465,481,0,446,471,435,432],
[438,445,463,444,0,472,439,448],
[430,440,443,419,418,0,423,412],
[451,449,469,455,451,467,0,431],
[472,452,465,458,442,478,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,447,415,431,458,440,459],
[441,0,455,452,428,453,441,425],
[443,435,0,440,436,443,440,446],
[475,438,450,0,444,435,446,444],
[459,462,454,446,0,445,459,450],
[432,437,447,455,445,0,446,451],
[450,449,450,444,431,444,0,427],
[431,465,444,446,440,439,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,372,450,428,410,423,434,416],
[518,0,482,483,438,484,461,432],
[440,408,0,422,411,441,471,406],
[462,407,468,0,440,459,440,446],
[480,452,479,450,0,402,479,441],
[467,406,449,431,488,0,452,466],
[456,429,419,450,411,438,0,458],
[474,458,484,444,449,424,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,468,442,444,457,452,437],
[442,0,426,435,417,432,453,457],
[422,464,0,473,463,439,451,446],
[448,455,417,0,441,464,462,427],
[446,473,427,449,0,484,455,434],
[433,458,451,426,406,0,446,449],
[438,437,439,428,435,444,0,441],
[453,433,444,463,456,441,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,430,448,434,421,450,425],
[447,0,455,463,429,429,439,457],
[460,435,0,460,445,429,431,456],
[442,427,430,0,442,436,436,443],
[456,461,445,448,0,452,453,450],
[469,461,461,454,438,0,460,475],
[440,451,459,454,437,430,0,462],
[465,433,434,447,440,415,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,367,383,344,447,397,402,416],
[523,0,511,473,492,567,577,426],
[507,379,0,465,500,445,421,518],
[546,417,425,0,464,425,464,431],
[443,398,390,426,0,538,525,495],
[493,323,445,465,352,0,436,413],
[488,313,469,426,365,454,0,418],
[474,464,372,459,395,477,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,466,453,439,425,459,427],
[434,0,440,427,428,434,438,408],
[424,450,0,461,443,455,424,429],
[437,463,429,0,478,445,445,443],
[451,462,447,412,0,450,441,416],
[465,456,435,445,440,0,451,457],
[431,452,466,445,449,439,0,447],
[463,482,461,447,474,433,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,528,443,402,485,455,459,451],
[362,0,442,414,429,404,375,371],
[447,448,0,437,493,412,434,372],
[488,476,453,0,437,494,447,367],
[405,461,397,453,0,368,395,328],
[435,486,478,396,522,0,434,403],
[431,515,456,443,495,456,0,405],
[439,519,518,523,562,487,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,466,428,392,434,423,405],
[462,0,464,405,424,412,424,449],
[424,426,0,390,431,405,425,438],
[462,485,500,0,424,408,457,470],
[498,466,459,466,0,444,432,461],
[456,478,485,482,446,0,428,482],
[467,466,465,433,458,462,0,450],
[485,441,452,420,429,408,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,467,453,458,449,423,444],
[450,0,447,444,446,454,446,415],
[423,443,0,436,434,434,427,431],
[437,446,454,0,444,455,436,414],
[432,444,456,446,0,437,424,427],
[441,436,456,435,453,0,428,433],
[467,444,463,454,466,462,0,451],
[446,475,459,476,463,457,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,400,424,420,409,438,464],
[471,0,442,477,477,473,484,516],
[490,448,0,478,431,491,502,460],
[466,413,412,0,429,497,468,430],
[470,413,459,461,0,461,506,479],
[481,417,399,393,429,0,437,416],
[452,406,388,422,384,453,0,392],
[426,374,430,460,411,474,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,470,448,437,458,459,447],
[433,0,449,445,414,473,419,415],
[420,441,0,434,420,455,395,424],
[442,445,456,0,453,466,412,465],
[453,476,470,437,0,482,424,450],
[432,417,435,424,408,0,419,408],
[431,471,495,478,466,471,0,446],
[443,475,466,425,440,482,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,452,429,454,479,439,455],
[434,0,443,461,437,451,432,456],
[438,447,0,474,433,449,447,468],
[461,429,416,0,434,449,406,429],
[436,453,457,456,0,497,441,465],
[411,439,441,441,393,0,401,431],
[451,458,443,484,449,489,0,452],
[435,434,422,461,425,459,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,428,431,411,428,412,451],
[433,0,444,450,432,425,428,452],
[462,446,0,452,421,457,421,455],
[459,440,438,0,430,431,419,458],
[479,458,469,460,0,465,443,470],
[462,465,433,459,425,0,454,482],
[478,462,469,471,447,436,0,486],
[439,438,435,432,420,408,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,459,423,452,439,448,437],
[400,0,420,406,424,421,416,426],
[431,470,0,449,451,444,433,458],
[467,484,441,0,448,452,445,450],
[438,466,439,442,0,442,437,423],
[451,469,446,438,448,0,457,438],
[442,474,457,445,453,433,0,442],
[453,464,432,440,467,452,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,444,392,413,350,465,418],
[416,0,506,428,409,416,447,470],
[446,384,0,390,391,355,443,418],
[498,462,500,0,440,498,475,488],
[477,481,499,450,0,422,491,522],
[540,474,535,392,468,0,564,478],
[425,443,447,415,399,326,0,377],
[472,420,472,402,368,412,513,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,388,603,489,573,465,478,456],
[502,0,560,544,531,445,576,567],
[287,330,0,410,486,417,404,362],
[401,346,480,0,475,415,462,348],
[317,359,404,415,0,406,347,311],
[425,445,473,475,484,0,523,428],
[412,314,486,428,543,367,0,381],
[434,323,528,542,579,462,509,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,474,442,423,456,436,452],
[423,0,432,440,431,429,416,417],
[416,458,0,440,490,441,421,479],
[448,450,450,0,453,455,452,423],
[467,459,400,437,0,434,410,440],
[434,461,449,435,456,0,441,441],
[454,474,469,438,480,449,0,457],
[438,473,411,467,450,449,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,464,465,470,429,443,449],
[449,0,455,427,436,436,445,452],
[426,435,0,451,447,419,438,425],
[425,463,439,0,421,426,433,427],
[420,454,443,469,0,438,449,428],
[461,454,471,464,452,0,458,438],
[447,445,452,457,441,432,0,419],
[441,438,465,463,462,452,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,549,427,457,530,524,470],
[452,0,439,324,326,439,417,340],
[341,451,0,412,339,513,384,270],
[463,566,478,0,398,587,539,439],
[433,564,551,492,0,498,555,541],
[360,451,377,303,392,0,367,379],
[366,473,506,351,335,523,0,409],
[420,550,620,451,349,511,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,477,443,475,454,456,473],
[486,0,485,485,370,528,418,429],
[413,405,0,427,368,481,438,425],
[447,405,463,0,309,471,448,492],
[415,520,522,581,0,521,420,511],
[436,362,409,419,369,0,378,407],
[434,472,452,442,470,512,0,481],
[417,461,465,398,379,483,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,522,467,443,489,475,448],
[386,0,421,425,374,509,441,417],
[368,469,0,437,403,530,440,428],
[423,465,453,0,407,505,452,462],
[447,516,487,483,0,449,399,389],
[401,381,360,385,441,0,421,409],
[415,449,450,438,491,469,0,464],
[442,473,462,428,501,481,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,430,502,397,424,496,431],
[458,0,412,459,386,361,484,353],
[460,478,0,480,455,490,497,402],
[388,431,410,0,359,287,418,374],
[493,504,435,531,0,502,475,440],
[466,529,400,603,388,0,488,447],
[394,406,393,472,415,402,0,370],
[459,537,488,516,450,443,520,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,469,472,429,438,446,445],
[452,0,464,457,425,441,452,445],
[421,426,0,435,411,423,440,405],
[418,433,455,0,431,446,432,429],
[461,465,479,459,0,471,465,437],
[452,449,467,444,419,0,450,438],
[444,438,450,458,425,440,0,443],
[445,445,485,461,453,452,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,457,474,372,471,464,384],
[463,0,425,470,451,491,470,419],
[433,465,0,615,416,522,467,453],
[416,420,275,0,403,483,479,394],
[518,439,474,487,0,633,516,425],
[419,399,368,407,257,0,373,322],
[426,420,423,411,374,517,0,381],
[506,471,437,496,465,568,509,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,349,429,512,353,437,403,450],
[541,0,489,535,472,525,407,414],
[461,401,0,415,416,365,401,387],
[378,355,475,0,283,395,346,377],
[537,418,474,607,0,482,495,473],
[453,365,525,495,408,0,399,426],
[487,483,489,544,395,491,0,469],
[440,476,503,513,417,464,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,475,423,458,427,428,450],
[465,0,452,450,431,423,449,435],
[415,438,0,424,438,404,427,421],
[467,440,466,0,447,451,431,430],
[432,459,452,443,0,447,459,428],
[463,467,486,439,443,0,444,439],
[462,441,463,459,431,446,0,429],
[440,455,469,460,462,451,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,451,488,428,462,440,429],
[439,0,499,449,422,464,445,445],
[439,391,0,457,458,391,429,451],
[402,441,433,0,432,426,416,443],
[462,468,432,458,0,444,406,441],
[428,426,499,464,446,0,456,454],
[450,445,461,474,484,434,0,456],
[461,445,439,447,449,436,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,426,442,451,437,447,458],
[456,0,451,428,443,437,462,448],
[464,439,0,463,456,452,463,460],
[448,462,427,0,455,456,462,457],
[439,447,434,435,0,423,435,440],
[453,453,438,434,467,0,433,460],
[443,428,427,428,455,457,0,438],
[432,442,430,433,450,430,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,441,426,387,440,475,400],
[456,0,489,434,453,456,469,448],
[449,401,0,414,403,393,413,405],
[464,456,476,0,436,448,475,419],
[503,437,487,454,0,461,518,448],
[450,434,497,442,429,0,419,421],
[415,421,477,415,372,471,0,390],
[490,442,485,471,442,469,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,432,462,486,468,457,447],
[425,0,434,442,470,443,436,456],
[458,456,0,457,483,469,447,445],
[428,448,433,0,470,452,451,457],
[404,420,407,420,0,423,437,446],
[422,447,421,438,467,0,432,442],
[433,454,443,439,453,458,0,446],
[443,434,445,433,444,448,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,480,474,474,435,477,460],
[442,0,469,457,449,453,474,476],
[410,421,0,411,450,408,442,409],
[416,433,479,0,476,435,450,436],
[416,441,440,414,0,417,445,439],
[455,437,482,455,473,0,469,490],
[413,416,448,440,445,421,0,439],
[430,414,481,454,451,400,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,452,406,407,404,435,451],
[501,0,449,449,476,433,487,488],
[438,441,0,404,419,419,423,433],
[484,441,486,0,456,453,492,459],
[483,414,471,434,0,478,465,444],
[486,457,471,437,412,0,441,446],
[455,403,467,398,425,449,0,428],
[439,402,457,431,446,444,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,422,431,443,462,455,454],
[424,0,438,442,447,464,451,445],
[468,452,0,461,444,459,474,462],
[459,448,429,0,442,441,485,449],
[447,443,446,448,0,451,453,446],
[428,426,431,449,439,0,465,457],
[435,439,416,405,437,425,0,437],
[436,445,428,441,444,433,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,431,419,437,477,484,441],
[439,0,413,439,444,459,405,462],
[459,477,0,461,434,477,469,456],
[471,451,429,0,449,460,440,467],
[453,446,456,441,0,463,449,443],
[413,431,413,430,427,0,424,402],
[406,485,421,450,441,466,0,441],
[449,428,434,423,447,488,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,437,409,411,430,426,429],
[460,0,469,420,454,457,451,438],
[453,421,0,416,418,445,422,429],
[481,470,474,0,439,466,469,455],
[479,436,472,451,0,457,469,437],
[460,433,445,424,433,0,441,426],
[464,439,468,421,421,449,0,453],
[461,452,461,435,453,464,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,455,475,445,434,463,413],
[471,0,462,490,478,439,453,465],
[435,428,0,476,459,461,443,422],
[415,400,414,0,437,425,422,404],
[445,412,431,453,0,406,427,420],
[456,451,429,465,484,0,447,418],
[427,437,447,468,463,443,0,417],
[477,425,468,486,470,472,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,421,457,447,451,425,437],
[435,0,443,428,441,445,441,437],
[469,447,0,458,436,460,449,449],
[433,462,432,0,430,442,445,435],
[443,449,454,460,0,467,418,457],
[439,445,430,448,423,0,443,417],
[465,449,441,445,472,447,0,446],
[453,453,441,455,433,473,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,397,427,515,426,286,316],
[494,0,583,351,513,306,316,425],
[493,307,0,409,413,438,345,475],
[463,539,481,0,402,486,523,433],
[375,377,477,488,0,378,424,374],
[464,584,452,404,512,0,402,406],
[604,574,545,367,466,488,0,533],
[574,465,415,457,516,484,357,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,458,453,462,444,450,451],
[455,0,431,440,436,440,424,432],
[432,459,0,440,446,456,443,451],
[437,450,450,0,431,444,446,452],
[428,454,444,459,0,447,449,446],
[446,450,434,446,443,0,437,427],
[440,466,447,444,441,453,0,442],
[439,458,439,438,444,463,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,442,466,436,426,436,450],
[418,0,442,404,417,427,406,432],
[448,448,0,470,455,468,456,436],
[424,486,420,0,430,430,446,456],
[454,473,435,460,0,466,464,467],
[464,463,422,460,424,0,436,440],
[454,484,434,444,426,454,0,465],
[440,458,454,434,423,450,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,352,387,398,447,498,353,451],
[538,0,504,461,487,561,472,421],
[503,386,0,492,482,483,458,382],
[492,429,398,0,463,521,393,382],
[443,403,408,427,0,497,335,348],
[392,329,407,369,393,0,423,346],
[537,418,432,497,555,467,0,480],
[439,469,508,508,542,544,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,437,424,436,420,436,419],
[452,0,441,436,446,429,407,417],
[453,449,0,454,469,445,430,432],
[466,454,436,0,456,427,426,402],
[454,444,421,434,0,423,416,415],
[470,461,445,463,467,0,446,421],
[454,483,460,464,474,444,0,452],
[471,473,458,488,475,469,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,449,452,434,457,459,452],
[446,0,457,479,447,454,442,443],
[441,433,0,446,433,437,453,421],
[438,411,444,0,431,453,434,424],
[456,443,457,459,0,437,447,448],
[433,436,453,437,453,0,447,431],
[431,448,437,456,443,443,0,439],
[438,447,469,466,442,459,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,452,420,479,461,471,517],
[437,0,425,411,427,425,499,510],
[438,465,0,476,503,461,461,497],
[470,479,414,0,461,450,475,469],
[411,463,387,429,0,432,477,494],
[429,465,429,440,458,0,458,487],
[419,391,429,415,413,432,0,433],
[373,380,393,421,396,403,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,441,435,440,425,449,436],
[456,0,457,444,472,476,462,449],
[449,433,0,428,452,449,445,419],
[455,446,462,0,440,437,455,427],
[450,418,438,450,0,458,452,432],
[465,414,441,453,432,0,451,426],
[441,428,445,435,438,439,0,437],
[454,441,471,463,458,464,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,436,416,455,428,481,438],
[434,0,462,407,437,422,435,412],
[454,428,0,394,447,406,426,406],
[474,483,496,0,451,457,442,452],
[435,453,443,439,0,433,452,419],
[462,468,484,433,457,0,448,438],
[409,455,464,448,438,442,0,429],
[452,478,484,438,471,452,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,478,431,460,464,476,443],
[453,0,471,425,491,428,439,480],
[412,419,0,434,440,419,467,447],
[459,465,456,0,453,456,467,445],
[430,399,450,437,0,473,485,415],
[426,462,471,434,417,0,490,407],
[414,451,423,423,405,400,0,413],
[447,410,443,445,475,483,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,478,441,511,459,469,481],
[427,0,472,491,463,486,450,494],
[412,418,0,476,464,464,457,446],
[449,399,414,0,419,449,441,406],
[379,427,426,471,0,420,448,415],
[431,404,426,441,470,0,435,380],
[421,440,433,449,442,455,0,418],
[409,396,444,484,475,510,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,471,444,453,439,437,442],
[460,0,479,460,482,470,450,437],
[419,411,0,431,436,433,424,446],
[446,430,459,0,462,462,449,447],
[437,408,454,428,0,434,430,415],
[451,420,457,428,456,0,438,436],
[453,440,466,441,460,452,0,430],
[448,453,444,443,475,454,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,445,425,434,426,441,425],
[441,0,429,425,425,423,445,433],
[445,461,0,467,453,447,455,439],
[465,465,423,0,439,440,460,461],
[456,465,437,451,0,440,447,459],
[464,467,443,450,450,0,463,454],
[449,445,435,430,443,427,0,444],
[465,457,451,429,431,436,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,436,451,420,426,447,443],
[449,0,455,417,427,424,439,453],
[454,435,0,418,447,456,443,406],
[439,473,472,0,423,460,462,429],
[470,463,443,467,0,440,440,452],
[464,466,434,430,450,0,440,441],
[443,451,447,428,450,450,0,420],
[447,437,484,461,438,449,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,479,443,420,435,441,475],
[426,0,479,452,461,436,448,436],
[411,411,0,418,406,440,434,438],
[447,438,472,0,403,415,442,475],
[470,429,484,487,0,439,454,458],
[455,454,450,475,451,0,439,498],
[449,442,456,448,436,451,0,487],
[415,454,452,415,432,392,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,452,422,450,437,418,456],
[456,0,442,432,444,440,436,464],
[438,448,0,465,468,461,465,490],
[468,458,425,0,436,456,441,482],
[440,446,422,454,0,449,432,485],
[453,450,429,434,441,0,431,468],
[472,454,425,449,458,459,0,485],
[434,426,400,408,405,422,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,439,418,432,417,412,444],
[446,0,424,422,443,445,413,448],
[451,466,0,454,474,465,444,458],
[472,468,436,0,458,442,459,464],
[458,447,416,432,0,429,423,445],
[473,445,425,448,461,0,430,456],
[478,477,446,431,467,460,0,471],
[446,442,432,426,445,434,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,444,416,454,467,419,423],
[436,0,399,403,454,429,440,380],
[446,491,0,455,534,507,432,447],
[474,487,435,0,432,480,456,440],
[436,436,356,458,0,426,368,422],
[423,461,383,410,464,0,419,442],
[471,450,458,434,522,471,0,413],
[467,510,443,450,468,448,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,462,459,453,450,444,441],
[431,0,447,438,451,451,439,444],
[428,443,0,465,435,449,442,435],
[431,452,425,0,439,424,438,435],
[437,439,455,451,0,451,432,439],
[440,439,441,466,439,0,446,449],
[446,451,448,452,458,444,0,455],
[449,446,455,455,451,441,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,407,413,413,428,426,470],
[432,0,435,432,424,437,409,447],
[483,455,0,463,418,463,420,464],
[477,458,427,0,462,469,468,453],
[477,466,472,428,0,495,455,471],
[462,453,427,421,395,0,416,467],
[464,481,470,422,435,474,0,461],
[420,443,426,437,419,423,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,455,454,462,467,430,463],
[444,0,442,452,452,447,430,426],
[435,448,0,427,444,447,415,439],
[436,438,463,0,437,443,437,456],
[428,438,446,453,0,459,447,470],
[423,443,443,447,431,0,418,463],
[460,460,475,453,443,472,0,484],
[427,464,451,434,420,427,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,404,416,434,449,429,427],
[465,0,449,447,459,468,453,445],
[486,441,0,436,468,469,464,457],
[474,443,454,0,467,469,441,452],
[456,431,422,423,0,440,439,457],
[441,422,421,421,450,0,426,437],
[461,437,426,449,451,464,0,457],
[463,445,433,438,433,453,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,460,453,430,442,442,456],
[460,0,445,472,424,435,439,447],
[430,445,0,460,436,421,426,452],
[437,418,430,0,430,447,423,451],
[460,466,454,460,0,430,485,454],
[448,455,469,443,460,0,423,473],
[448,451,464,467,405,467,0,459],
[434,443,438,439,436,417,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,467,411,477,385,438,434],
[464,0,541,439,512,488,427,470],
[423,349,0,346,419,400,421,401],
[479,451,544,0,442,383,445,441],
[413,378,471,448,0,407,380,454],
[505,402,490,507,483,0,446,444],
[452,463,469,445,510,444,0,467],
[456,420,489,449,436,446,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,426,476,450,494,450,452],
[410,0,386,418,399,424,339,421],
[464,504,0,448,471,507,393,445],
[414,472,442,0,502,488,432,474],
[440,491,419,388,0,433,383,400],
[396,466,383,402,457,0,370,392],
[440,551,497,458,507,520,0,427],
[438,469,445,416,490,498,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,424,433,438,423,442,435],
[476,0,424,436,439,447,451,442],
[466,466,0,441,454,438,456,455],
[457,454,449,0,447,432,463,431],
[452,451,436,443,0,443,454,453],
[467,443,452,458,447,0,429,421],
[448,439,434,427,436,461,0,416],
[455,448,435,459,437,469,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,455,439,443,447,460,440],
[451,0,459,435,433,454,464,449],
[435,431,0,448,446,460,488,438],
[451,455,442,0,468,473,476,453],
[447,457,444,422,0,432,474,436],
[443,436,430,417,458,0,441,421],
[430,426,402,414,416,449,0,424],
[450,441,452,437,454,469,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,471,445,453,452,460,450],
[432,0,449,468,469,438,453,454],
[419,441,0,458,481,427,469,442],
[445,422,432,0,451,437,467,436],
[437,421,409,439,0,443,455,394],
[438,452,463,453,447,0,439,444],
[430,437,421,423,435,451,0,431],
[440,436,448,454,496,446,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,434,421,440,436,402,424],
[446,0,399,423,442,405,403,434],
[456,491,0,455,470,445,445,437],
[469,467,435,0,432,441,447,451],
[450,448,420,458,0,452,452,448],
[454,485,445,449,438,0,408,450],
[488,487,445,443,438,482,0,448],
[466,456,453,439,442,440,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,492,559,429,458,449,544],
[482,0,438,463,554,480,360,555],
[398,452,0,458,373,441,507,591],
[331,427,432,0,390,352,389,614],
[461,336,517,500,0,493,499,662],
[432,410,449,538,397,0,505,602],
[441,530,383,501,391,385,0,556],
[346,335,299,276,228,288,334,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,446,407,475,438,441,482],
[433,0,433,432,444,407,413,499],
[444,457,0,481,468,398,456,440],
[483,458,409,0,497,445,446,483],
[415,446,422,393,0,389,431,464],
[452,483,492,445,501,0,424,489],
[449,477,434,444,459,466,0,508],
[408,391,450,407,426,401,382,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,497,454,507,469,460,433],
[403,0,456,429,472,445,429,445],
[393,434,0,410,464,422,419,424],
[436,461,480,0,507,438,467,467],
[383,418,426,383,0,406,431,395],
[421,445,468,452,484,0,462,439],
[430,461,471,423,459,428,0,406],
[457,445,466,423,495,451,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,390,373,390,424,389,416],
[432,0,415,444,478,457,432,474],
[500,475,0,482,458,470,426,457],
[517,446,408,0,410,395,402,501],
[500,412,432,480,0,447,467,460],
[466,433,420,495,443,0,473,428],
[501,458,464,488,423,417,0,432],
[474,416,433,389,430,462,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,427,452,426,440,462,431],
[440,0,421,443,425,434,476,414],
[463,469,0,463,435,468,467,431],
[438,447,427,0,443,404,449,426],
[464,465,455,447,0,461,479,436],
[450,456,422,486,429,0,472,446],
[428,414,423,441,411,418,0,420],
[459,476,459,464,454,444,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,425,446,444,456,450,462],
[454,0,433,447,462,421,439,450],
[465,457,0,454,483,452,441,483],
[444,443,436,0,485,440,451,473],
[446,428,407,405,0,431,419,431],
[434,469,438,450,459,0,439,462],
[440,451,449,439,471,451,0,455],
[428,440,407,417,459,428,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,483,457,424,483,452,443],
[432,0,424,408,401,440,379,434],
[407,466,0,444,390,432,422,407],
[433,482,446,0,409,460,413,454],
[466,489,500,481,0,442,459,489],
[407,450,458,430,448,0,408,428],
[438,511,468,477,431,482,0,456],
[447,456,483,436,401,462,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,446,471,453,428,441,499],
[443,0,442,490,443,458,455,456],
[444,448,0,453,447,457,469,461],
[419,400,437,0,425,420,414,436],
[437,447,443,465,0,448,479,489],
[462,432,433,470,442,0,478,463],
[449,435,421,476,411,412,0,452],
[391,434,429,454,401,427,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,448,437,463,433,450,441],
[409,0,416,434,408,395,434,418],
[442,474,0,446,446,423,460,451],
[453,456,444,0,464,445,461,470],
[427,482,444,426,0,460,468,463],
[457,495,467,445,430,0,457,479],
[440,456,430,429,422,433,0,444],
[449,472,439,420,427,411,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,391,429,438,420,425,423,425],
[499,0,481,456,438,455,435,484],
[461,409,0,449,432,430,427,465],
[452,434,441,0,416,436,410,441],
[470,452,458,474,0,457,427,443],
[465,435,460,454,433,0,476,476],
[467,455,463,480,463,414,0,442],
[465,406,425,449,447,414,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,484,456,415,443,416,475],
[493,0,469,388,440,406,435,457],
[406,421,0,386,403,403,402,395],
[434,502,504,0,510,420,443,475],
[475,450,487,380,0,427,463,408],
[447,484,487,470,463,0,420,463],
[474,455,488,447,427,470,0,448],
[415,433,495,415,482,427,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,439,453,424,446,434,448],
[418,0,426,410,425,419,421,423],
[451,464,0,462,429,424,419,460],
[437,480,428,0,421,430,453,477],
[466,465,461,469,0,442,423,475],
[444,471,466,460,448,0,442,458],
[456,469,471,437,467,448,0,483],
[442,467,430,413,415,432,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,422,467,466,460,468,452],
[424,0,417,450,432,456,456,436],
[468,473,0,445,453,472,473,451],
[423,440,445,0,452,460,470,465],
[424,458,437,438,0,419,454,425],
[430,434,418,430,471,0,467,426],
[422,434,417,420,436,423,0,435],
[438,454,439,425,465,464,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,485,492,466,471,433,448],
[415,0,465,442,420,427,398,450],
[405,425,0,414,394,465,402,436],
[398,448,476,0,453,436,429,440],
[424,470,496,437,0,473,457,422],
[419,463,425,454,417,0,410,418],
[457,492,488,461,433,480,0,464],
[442,440,454,450,468,472,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,436,434,444,438,445,432],
[453,0,448,434,467,448,465,444],
[454,442,0,449,456,470,449,445],
[456,456,441,0,472,436,459,462],
[446,423,434,418,0,432,429,419],
[452,442,420,454,458,0,448,439],
[445,425,441,431,461,442,0,411],
[458,446,445,428,471,451,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,473,472,421,454,417,428],
[429,0,470,486,431,415,464,471],
[417,420,0,456,384,436,424,432],
[418,404,434,0,441,422,403,448],
[469,459,506,449,0,439,453,468],
[436,475,454,468,451,0,426,454],
[473,426,466,487,437,464,0,426],
[462,419,458,442,422,436,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,447,482,493,466,468,471],
[455,0,438,435,493,444,455,454],
[443,452,0,444,484,466,456,469],
[408,455,446,0,461,451,472,448],
[397,397,406,429,0,433,430,435],
[424,446,424,439,457,0,445,449],
[422,435,434,418,460,445,0,465],
[419,436,421,442,455,441,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,361,345,371,361,471,378],
[486,0,399,423,415,373,490,594],
[529,491,0,331,412,314,472,492],
[545,467,559,0,403,436,479,344],
[519,475,478,487,0,449,516,425],
[529,517,576,454,441,0,649,483],
[419,400,418,411,374,241,0,413],
[512,296,398,546,465,407,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,430,491,406,473,426,449],
[466,0,483,453,408,517,450,459],
[460,407,0,439,440,493,444,421],
[399,437,451,0,418,432,406,416],
[484,482,450,472,0,557,407,435],
[417,373,397,458,333,0,409,444],
[464,440,446,484,483,481,0,491],
[441,431,469,474,455,446,399,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,434,450,462,441,454,433],
[432,0,449,395,446,449,432,431],
[456,441,0,430,444,416,424,429],
[440,495,460,0,458,469,460,449],
[428,444,446,432,0,427,429,437],
[449,441,474,421,463,0,452,428],
[436,458,466,430,461,438,0,437],
[457,459,461,441,453,462,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,441,440,439,425,422,426],
[433,0,438,411,435,416,417,431],
[449,452,0,436,449,442,410,443],
[450,479,454,0,447,445,440,450],
[451,455,441,443,0,431,418,419],
[465,474,448,445,459,0,470,444],
[468,473,480,450,472,420,0,447],
[464,459,447,440,471,446,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,471,448,442,464,443,462],
[442,0,457,435,426,451,437,436],
[419,433,0,430,424,429,439,428],
[442,455,460,0,442,441,433,442],
[448,464,466,448,0,440,453,461],
[426,439,461,449,450,0,454,445],
[447,453,451,457,437,436,0,445],
[428,454,462,448,429,445,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,468,485,397,453,444,423],
[415,0,433,427,433,432,426,440],
[422,457,0,388,363,357,442,477],
[405,463,502,0,392,405,463,507],
[493,457,527,498,0,482,421,470],
[437,458,533,485,408,0,472,485],
[446,464,448,427,469,418,0,403],
[467,450,413,383,420,405,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,448,417,436,434,410,434],
[479,0,471,450,453,472,429,447],
[442,419,0,406,437,454,427,418],
[473,440,484,0,462,455,462,463],
[454,437,453,428,0,451,463,460],
[456,418,436,435,439,0,423,434],
[480,461,463,428,427,467,0,450],
[456,443,472,427,430,456,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,404,446,459,491,431,445],
[421,0,420,382,435,420,387,454],
[486,470,0,440,447,464,448,494],
[444,508,450,0,448,486,433,448],
[431,455,443,442,0,451,432,430],
[399,470,426,404,439,0,407,409],
[459,503,442,457,458,483,0,483],
[445,436,396,442,460,481,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,457,459,470,439,466,456],
[435,0,459,444,449,431,452,450],
[433,431,0,425,460,447,425,457],
[431,446,465,0,474,439,458,450],
[420,441,430,416,0,431,422,427],
[451,459,443,451,459,0,458,434],
[424,438,465,432,468,432,0,460],
[434,440,433,440,463,456,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,444,436,441,446,439,446],
[451,0,455,470,465,439,451,454],
[446,435,0,463,446,450,451,444],
[454,420,427,0,435,429,419,475],
[449,425,444,455,0,436,438,448],
[444,451,440,461,454,0,448,448],
[451,439,439,471,452,442,0,446],
[444,436,446,415,442,442,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,452,446,428,456,442,445],
[436,0,429,455,421,460,426,448],
[438,461,0,458,451,473,469,465],
[444,435,432,0,446,452,436,434],
[462,469,439,444,0,476,448,467],
[434,430,417,438,414,0,410,434],
[448,464,421,454,442,480,0,461],
[445,442,425,456,423,456,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,446,443,451,443,449,455],
[434,0,428,433,452,435,449,427],
[444,462,0,468,466,430,458,474],
[447,457,422,0,460,445,466,457],
[439,438,424,430,0,435,460,429],
[447,455,460,445,455,0,432,467],
[441,441,432,424,430,458,0,441],
[435,463,416,433,461,423,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,450,450,463,430,433,450],
[445,0,461,431,464,449,440,462],
[440,429,0,435,452,436,455,446],
[440,459,455,0,469,440,448,457],
[427,426,438,421,0,422,442,449],
[460,441,454,450,468,0,449,466],
[457,450,435,442,448,441,0,449],
[440,428,444,433,441,424,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,458,452,459,477,454,425],
[409,0,456,439,429,430,457,421],
[432,434,0,464,447,463,455,475],
[438,451,426,0,415,416,440,418],
[431,461,443,475,0,459,448,445],
[413,460,427,474,431,0,441,421],
[436,433,435,450,442,449,0,420],
[465,469,415,472,445,469,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,499,317,342,389,455,339],
[486,0,495,550,506,455,454,370],
[391,395,0,334,406,443,387,424],
[573,340,556,0,457,441,565,481],
[548,384,484,433,0,377,574,368],
[501,435,447,449,513,0,398,454],
[435,436,503,325,316,492,0,280],
[551,520,466,409,522,436,610,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,454,480,447,429,478,430],
[427,0,455,447,425,417,438,423],
[436,435,0,441,415,422,411,416],
[410,443,449,0,423,433,445,454],
[443,465,475,467,0,447,448,466],
[461,473,468,457,443,0,461,440],
[412,452,479,445,442,429,0,461],
[460,467,474,436,424,450,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,433,443,423,433,444,432],
[455,0,451,456,444,465,468,449],
[457,439,0,454,432,439,461,419],
[447,434,436,0,436,448,440,431],
[467,446,458,454,0,449,470,427],
[457,425,451,442,441,0,452,439],
[446,422,429,450,420,438,0,407],
[458,441,471,459,463,451,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,391,387,459,406,386,465,385],
[499,0,462,404,393,454,397,448],
[503,428,0,527,446,512,449,451],
[431,486,363,0,500,380,470,455],
[484,497,444,390,0,445,453,478],
[504,436,378,510,445,0,370,411],
[425,493,441,420,437,520,0,435],
[505,442,439,435,412,479,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,495,447,422,436,483,454],
[455,0,464,428,406,427,455,390],
[395,426,0,390,401,463,437,384],
[443,462,500,0,407,447,511,408],
[468,484,489,483,0,496,516,429],
[454,463,427,443,394,0,453,398],
[407,435,453,379,374,437,0,390],
[436,500,506,482,461,492,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,461,465,454,450,457,430],
[472,0,430,496,438,440,480,463],
[429,460,0,476,453,463,471,451],
[425,394,414,0,454,410,417,429],
[436,452,437,436,0,422,419,417],
[440,450,427,480,468,0,434,444],
[433,410,419,473,471,456,0,470],
[460,427,439,461,473,446,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,452,434,395,435,442,426],
[450,0,434,417,432,458,443,403],
[438,456,0,406,416,449,442,418],
[456,473,484,0,440,483,477,440],
[495,458,474,450,0,454,461,435],
[455,432,441,407,436,0,438,432],
[448,447,448,413,429,452,0,451],
[464,487,472,450,455,458,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,450,454,414,437,445,427],
[454,0,461,448,424,452,456,436],
[440,429,0,441,447,425,442,420],
[436,442,449,0,438,451,432,444],
[476,466,443,452,0,454,458,450],
[453,438,465,439,436,0,440,441],
[445,434,448,458,432,450,0,444],
[463,454,470,446,440,449,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,550,401,474,465,397,430,428],
[340,0,343,379,360,340,431,348],
[489,547,0,520,401,422,476,453],
[416,511,370,0,457,426,463,371],
[425,530,489,433,0,425,502,390],
[493,550,468,464,465,0,503,367],
[460,459,414,427,388,387,0,373],
[462,542,437,519,500,523,517,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,510,436,448,454,398,428],
[477,0,510,469,391,427,447,406],
[380,380,0,394,346,352,344,344],
[454,421,496,0,459,471,410,444],
[442,499,544,431,0,430,422,463],
[436,463,538,419,460,0,430,418],
[492,443,546,480,468,460,0,421],
[462,484,546,446,427,472,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,437,438,446,459,458,445],
[437,0,450,453,457,457,449,463],
[453,440,0,438,457,456,432,440],
[452,437,452,0,459,466,412,446],
[444,433,433,431,0,466,417,444],
[431,433,434,424,424,0,445,423],
[432,441,458,478,473,445,0,453],
[445,427,450,444,446,467,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,462,442,463,453,465,462],
[431,0,462,454,461,443,452,457],
[428,428,0,452,439,427,453,438],
[448,436,438,0,450,430,458,450],
[427,429,451,440,0,429,422,445],
[437,447,463,460,461,0,462,452],
[425,438,437,432,468,428,0,446],
[428,433,452,440,445,438,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,458,448,447,422,418,459],
[447,0,423,450,424,419,429,467],
[432,467,0,451,424,436,453,481],
[442,440,439,0,404,436,441,457],
[443,466,466,486,0,446,468,499],
[468,471,454,454,444,0,451,473],
[472,461,437,449,422,439,0,473],
[431,423,409,433,391,417,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,458,457,493,475,433,466],
[429,0,460,446,487,476,447,447],
[432,430,0,416,474,452,453,443],
[433,444,474,0,474,461,450,449],
[397,403,416,416,0,446,416,426],
[415,414,438,429,444,0,449,424],
[457,443,437,440,474,441,0,455],
[424,443,447,441,464,466,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,459,430,438,430,450,448],
[486,0,522,425,407,432,449,468],
[431,368,0,388,400,472,366,449],
[460,465,502,0,437,460,436,432],
[452,483,490,453,0,453,430,474],
[460,458,418,430,437,0,492,456],
[440,441,524,454,460,398,0,503],
[442,422,441,458,416,434,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,436,434,436,434,443,425],
[447,0,440,423,467,442,435,437],
[454,450,0,463,458,431,446,455],
[456,467,427,0,453,441,427,440],
[454,423,432,437,0,431,432,431],
[456,448,459,449,459,0,469,438],
[447,455,444,463,458,421,0,428],
[465,453,435,450,459,452,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,497,430,451,424,444,443],
[425,0,477,453,459,423,438,441],
[393,413,0,412,406,405,415,366],
[460,437,478,0,447,441,448,428],
[439,431,484,443,0,412,440,409],
[466,467,485,449,478,0,444,458],
[446,452,475,442,450,446,0,444],
[447,449,524,462,481,432,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,408,377,434,441,443,395],
[457,0,398,402,442,446,491,446],
[482,492,0,409,457,464,560,427],
[513,488,481,0,464,467,501,436],
[456,448,433,426,0,446,467,427],
[449,444,426,423,444,0,439,431],
[447,399,330,389,423,451,0,372],
[495,444,463,454,463,459,518,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,431,440,424,427,418,420],
[468,0,444,472,442,479,480,387],
[459,446,0,440,413,452,430,411],
[450,418,450,0,445,447,441,426],
[466,448,477,445,0,470,445,438],
[463,411,438,443,420,0,461,454],
[472,410,460,449,445,429,0,409],
[470,503,479,464,452,436,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,438,446,398,422,394,365],
[437,0,477,500,462,454,431,391],
[452,413,0,404,470,422,425,405],
[444,390,486,0,450,446,394,467],
[492,428,420,440,0,437,421,385],
[468,436,468,444,453,0,388,404],
[496,459,465,496,469,502,0,396],
[525,499,485,423,505,486,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,490,479,442,487,496,490],
[413,0,411,508,426,453,433,412],
[400,479,0,441,398,454,459,444],
[411,382,449,0,393,442,384,390],
[448,464,492,497,0,506,426,503],
[403,437,436,448,384,0,413,477],
[394,457,431,506,464,477,0,431],
[400,478,446,500,387,413,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,476,428,454,427,426,481],
[445,0,441,463,486,440,453,479],
[414,449,0,409,450,405,394,446],
[462,427,481,0,465,451,444,502],
[436,404,440,425,0,405,401,432],
[463,450,485,439,485,0,456,464],
[464,437,496,446,489,434,0,482],
[409,411,444,388,458,426,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,462,461,466,442,449,464],
[414,0,434,427,429,428,433,446],
[428,456,0,442,439,424,459,450],
[429,463,448,0,425,443,463,462],
[424,461,451,465,0,432,450,447],
[448,462,466,447,458,0,442,453],
[441,457,431,427,440,448,0,467],
[426,444,440,428,443,437,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,439,420,435,465,454,486],
[450,0,431,451,418,468,451,444],
[451,459,0,438,407,473,454,457],
[470,439,452,0,470,461,458,469],
[455,472,483,420,0,479,455,496],
[425,422,417,429,411,0,409,425],
[436,439,436,432,435,481,0,457],
[404,446,433,421,394,465,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,400,451,451,437,427,450],
[453,0,444,500,469,470,447,449],
[490,446,0,486,434,476,462,461],
[439,390,404,0,441,430,446,434],
[439,421,456,449,0,427,449,447],
[453,420,414,460,463,0,456,465],
[463,443,428,444,441,434,0,441],
[440,441,429,456,443,425,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,447,460,459,447,473,438],
[429,0,435,439,435,423,435,461],
[443,455,0,439,447,426,423,447],
[430,451,451,0,449,437,458,456],
[431,455,443,441,0,435,449,472],
[443,467,464,453,455,0,453,449],
[417,455,467,432,441,437,0,450],
[452,429,443,434,418,441,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,452,452,460,445,453,473],
[414,0,427,412,422,402,427,409],
[438,463,0,425,430,401,450,440],
[438,478,465,0,460,442,448,443],
[430,468,460,430,0,427,441,443],
[445,488,489,448,463,0,466,464],
[437,463,440,442,449,424,0,436],
[417,481,450,447,447,426,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,442,436,478,447,446,462],
[435,0,441,441,455,435,438,436],
[448,449,0,439,448,434,435,466],
[454,449,451,0,440,438,464,448],
[412,435,442,450,0,427,447,457],
[443,455,456,452,463,0,464,462],
[444,452,455,426,443,426,0,465],
[428,454,424,442,433,428,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,422,492,439,455,442,374],
[475,0,451,485,454,398,443,351],
[468,439,0,496,503,464,468,461],
[398,405,394,0,440,302,346,358],
[451,436,387,450,0,406,406,423],
[435,492,426,588,484,0,526,454],
[448,447,422,544,484,364,0,355],
[516,539,429,532,467,436,535,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,448,448,418,467,459,460],
[422,0,462,445,435,416,429,421],
[442,428,0,439,424,418,434,406],
[442,445,451,0,444,434,427,454],
[472,455,466,446,0,431,438,450],
[423,474,472,456,459,0,461,449],
[431,461,456,463,452,429,0,420],
[430,469,484,436,440,441,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,442,446,473,460,456,449],
[444,0,447,434,459,447,427,434],
[448,443,0,442,442,473,449,449],
[444,456,448,0,472,464,458,439],
[417,431,448,418,0,446,422,422],
[430,443,417,426,444,0,411,427],
[434,463,441,432,468,479,0,450],
[441,456,441,451,468,463,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,435,451,438,375,443,412],
[474,0,464,467,470,435,547,490],
[455,426,0,374,423,417,429,463],
[439,423,516,0,453,470,494,453],
[452,420,467,437,0,417,472,408],
[515,455,473,420,473,0,509,469],
[447,343,461,396,418,381,0,419],
[478,400,427,437,482,421,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,408,436,452,462,413,444],
[447,0,441,439,427,439,439,427],
[482,449,0,438,483,430,462,462],
[454,451,452,0,476,439,428,448],
[438,463,407,414,0,455,409,437],
[428,451,460,451,435,0,435,437],
[477,451,428,462,481,455,0,441],
[446,463,428,442,453,453,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,445,403,391,411,422,417],
[473,0,449,430,434,466,469,447],
[445,441,0,410,409,433,467,447],
[487,460,480,0,447,432,445,459],
[499,456,481,443,0,480,440,464],
[479,424,457,458,410,0,414,432],
[468,421,423,445,450,476,0,446],
[473,443,443,431,426,458,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,448,428,440,445,440,441],
[455,0,442,439,436,448,445,434],
[442,448,0,441,425,440,426,454],
[462,451,449,0,435,447,440,455],
[450,454,465,455,0,459,437,449],
[445,442,450,443,431,0,420,438],
[450,445,464,450,453,470,0,450],
[449,456,436,435,441,452,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,409,435,433,412,423,405],
[480,0,442,454,428,472,470,456],
[481,448,0,437,448,460,479,458],
[455,436,453,0,433,440,451,435],
[457,462,442,457,0,437,465,433],
[478,418,430,450,453,0,473,423],
[467,420,411,439,425,417,0,434],
[485,434,432,455,457,467,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,440,469,476,460,443,488],
[425,0,419,443,421,440,427,428],
[450,471,0,467,446,437,441,421],
[421,447,423,0,420,402,407,429],
[414,469,444,470,0,461,456,462],
[430,450,453,488,429,0,426,447],
[447,463,449,483,434,464,0,436],
[402,462,469,461,428,443,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,483,477,471,458,445,455],
[425,0,507,421,460,452,495,423],
[407,383,0,437,405,428,499,404],
[413,469,453,0,465,510,429,450],
[419,430,485,425,0,413,506,462],
[432,438,462,380,477,0,420,384],
[445,395,391,461,384,470,0,420],
[435,467,486,440,428,506,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,438,462,476,469,475,451],
[425,0,444,429,434,455,462,410],
[452,446,0,443,462,470,453,451],
[428,461,447,0,466,469,471,449],
[414,456,428,424,0,434,479,423],
[421,435,420,421,456,0,442,434],
[415,428,437,419,411,448,0,413],
[439,480,439,441,467,456,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,480,446,448,447,413,438],
[470,0,455,453,485,469,432,425],
[410,435,0,453,485,470,448,437],
[444,437,437,0,470,457,452,441],
[442,405,405,420,0,424,432,383],
[443,421,420,433,466,0,401,420],
[477,458,442,438,458,489,0,448],
[452,465,453,449,507,470,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,306,122,81,206,239,111,257],
[584,0,287,474,313,482,551,382],
[768,603,0,698,572,367,448,481],
[809,416,192,0,316,301,387,333],
[684,577,318,574,0,455,685,372],
[651,408,523,589,435,0,414,332],
[779,339,442,503,205,476,0,577],
[633,508,409,557,518,558,313,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,473,448,426,447,451,429],
[454,0,508,482,438,474,461,447],
[417,382,0,448,405,427,409,381],
[442,408,442,0,447,452,455,428],
[464,452,485,443,0,466,469,439],
[443,416,463,438,424,0,441,422],
[439,429,481,435,421,449,0,444],
[461,443,509,462,451,468,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,456,501,376,587,539,481],
[492,0,377,509,449,557,438,457],
[434,513,0,412,419,470,496,403],
[389,381,478,0,376,460,394,429],
[514,441,471,514,0,476,407,487],
[303,333,420,430,414,0,345,329],
[351,452,394,496,483,545,0,391],
[409,433,487,461,403,561,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,431,465,450,480,472,441],
[429,0,466,486,447,447,461,404],
[459,424,0,450,437,443,468,424],
[425,404,440,0,415,420,441,417],
[440,443,453,475,0,464,465,425],
[410,443,447,470,426,0,454,450],
[418,429,422,449,425,436,0,423],
[449,486,466,473,465,440,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,471,409,368,376,454,407],
[446,0,488,380,400,467,453,411],
[419,402,0,392,387,364,358,350],
[481,510,498,0,453,438,496,407],
[522,490,503,437,0,385,499,494],
[514,423,526,452,505,0,489,516],
[436,437,532,394,391,401,0,367],
[483,479,540,483,396,374,523,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,466,418,444,461,470,422],
[456,0,458,446,446,471,444,442],
[424,432,0,405,451,444,426,413],
[472,444,485,0,482,449,456,452],
[446,444,439,408,0,408,441,411],
[429,419,446,441,482,0,452,428],
[420,446,464,434,449,438,0,421],
[468,448,477,438,479,462,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,471,423,489,446,409,430],
[461,0,475,429,494,435,445,435],
[419,415,0,449,442,465,430,438],
[467,461,441,0,482,483,497,458],
[401,396,448,408,0,427,409,405],
[444,455,425,407,463,0,433,405],
[481,445,460,393,481,457,0,443],
[460,455,452,432,485,485,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,449,461,484,464,445,468],
[454,0,448,448,461,449,440,456],
[441,442,0,459,455,437,438,449],
[429,442,431,0,461,439,439,452],
[406,429,435,429,0,436,427,433],
[426,441,453,451,454,0,432,448],
[445,450,452,451,463,458,0,440],
[422,434,441,438,457,442,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,445,454,500,496,444,517],
[393,0,477,467,437,488,504,448],
[445,413,0,514,452,494,494,435],
[436,423,376,0,408,494,392,440],
[390,453,438,482,0,508,497,425],
[394,402,396,396,382,0,469,434],
[446,386,396,498,393,421,0,414],
[373,442,455,450,465,456,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,402,342,424,491,412,456],
[465,0,386,361,442,413,376,435],
[488,504,0,429,394,496,500,491],
[548,529,461,0,503,497,435,492],
[466,448,496,387,0,476,418,505],
[399,477,394,393,414,0,406,435],
[478,514,390,455,472,484,0,480],
[434,455,399,398,385,455,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,448,454,442,460,466,431],
[434,0,464,401,416,417,434,412],
[442,426,0,428,433,435,438,415],
[436,489,462,0,436,458,471,477],
[448,474,457,454,0,446,442,464],
[430,473,455,432,444,0,450,453],
[424,456,452,419,448,440,0,443],
[459,478,475,413,426,437,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,452,446,443,426,417,432],
[454,0,469,430,443,424,438,455],
[438,421,0,421,449,423,393,405],
[444,460,469,0,464,448,412,452],
[447,447,441,426,0,446,440,459],
[464,466,467,442,444,0,452,431],
[473,452,497,478,450,438,0,484],
[458,435,485,438,431,459,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,469,468,425,454,455,443],
[407,0,452,451,457,451,468,436],
[421,438,0,438,421,462,440,405],
[422,439,452,0,417,437,422,412],
[465,433,469,473,0,484,468,452],
[436,439,428,453,406,0,413,425],
[435,422,450,468,422,477,0,420],
[447,454,485,478,438,465,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,459,459,468,481,435,498],
[456,0,447,428,439,484,460,489],
[431,443,0,462,435,483,425,492],
[431,462,428,0,465,520,429,507],
[422,451,455,425,0,498,448,465],
[409,406,407,370,392,0,407,436],
[455,430,465,461,442,483,0,496],
[392,401,398,383,425,454,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,361,529,476,556,437,484],
[449,0,301,522,389,399,364,429],
[529,589,0,528,469,643,391,459],
[361,368,362,0,363,502,466,446],
[414,501,421,527,0,515,454,444],
[334,491,247,388,375,0,349,449],
[453,526,499,424,436,541,0,419],
[406,461,431,444,446,441,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,426,431,456,433,485,467],
[458,0,476,434,395,473,490,494],
[464,414,0,471,440,484,480,481],
[459,456,419,0,454,480,508,495],
[434,495,450,436,0,435,474,495],
[457,417,406,410,455,0,446,455],
[405,400,410,382,416,444,0,429],
[423,396,409,395,395,435,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,483,543,442,468,482,492],
[421,0,465,552,409,480,498,452],
[407,425,0,481,485,476,523,512],
[347,338,409,0,374,367,436,436],
[448,481,405,516,0,429,476,468],
[422,410,414,523,461,0,476,472],
[408,392,367,454,414,414,0,432],
[398,438,378,454,422,418,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,445,476,509,503,479,481],
[422,0,405,416,445,433,423,424],
[445,485,0,458,515,476,438,470],
[414,474,432,0,461,486,434,480],
[381,445,375,429,0,417,406,463],
[387,457,414,404,473,0,397,461],
[411,467,452,456,484,493,0,480],
[409,466,420,410,427,429,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,454,450,438,463,449,458],
[410,0,423,434,410,432,422,456],
[436,467,0,444,434,452,418,449],
[440,456,446,0,447,464,405,470],
[452,480,456,443,0,466,431,478],
[427,458,438,426,424,0,419,463],
[441,468,472,485,459,471,0,469],
[432,434,441,420,412,427,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,434,442,443,444,420,439],
[445,0,466,437,448,464,412,436],
[456,424,0,447,408,444,418,412],
[448,453,443,0,445,445,449,447],
[447,442,482,445,0,469,428,451],
[446,426,446,445,421,0,417,419],
[470,478,472,441,462,473,0,450],
[451,454,478,443,439,471,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,466,458,454,452,435,470],
[438,0,463,445,432,444,446,448],
[424,427,0,421,442,469,434,434],
[432,445,469,0,454,445,448,445],
[436,458,448,436,0,464,443,435],
[438,446,421,445,426,0,440,438],
[455,444,456,442,447,450,0,448],
[420,442,456,445,455,452,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,447,420,431,431,427,433],
[434,0,435,436,430,432,450,434],
[443,455,0,459,432,457,449,419],
[470,454,431,0,439,426,446,420],
[459,460,458,451,0,457,438,430],
[459,458,433,464,433,0,454,435],
[463,440,441,444,452,436,0,450],
[457,456,471,470,460,455,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,469,457,481,454,444,446],
[426,0,450,433,463,427,438,425],
[421,440,0,417,473,425,450,451],
[433,457,473,0,496,468,462,464],
[409,427,417,394,0,403,405,422],
[436,463,465,422,487,0,465,430],
[446,452,440,428,485,425,0,437],
[444,465,439,426,468,460,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,467,441,434,490,458,443],
[483,0,503,448,485,516,445,456],
[423,387,0,419,401,474,378,418],
[449,442,471,0,450,470,462,453],
[456,405,489,440,0,474,460,463],
[400,374,416,420,416,0,392,416],
[432,445,512,428,430,498,0,446],
[447,434,472,437,427,474,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,443,423,419,442,440,425],
[467,0,434,452,449,442,466,444],
[447,456,0,456,456,464,461,418],
[467,438,434,0,438,467,458,445],
[471,441,434,452,0,452,452,436],
[448,448,426,423,438,0,428,427],
[450,424,429,432,438,462,0,425],
[465,446,472,445,454,463,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,471,466,449,479,441,468],
[424,0,482,458,444,430,447,469],
[419,408,0,416,423,437,417,433],
[424,432,474,0,411,442,429,432],
[441,446,467,479,0,454,439,444],
[411,460,453,448,436,0,402,428],
[449,443,473,461,451,488,0,450],
[422,421,457,458,446,462,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,430,450,447,420,442,416],
[463,0,457,470,435,434,452,461],
[460,433,0,474,458,455,458,458],
[440,420,416,0,419,426,414,418],
[443,455,432,471,0,446,432,432],
[470,456,435,464,444,0,464,452],
[448,438,432,476,458,426,0,437],
[474,429,432,472,458,438,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,439,468,455,448,455,451],
[442,0,453,462,434,451,442,439],
[451,437,0,465,449,458,457,448],
[422,428,425,0,424,447,439,430],
[435,456,441,466,0,468,469,463],
[442,439,432,443,422,0,417,442],
[435,448,433,451,421,473,0,452],
[439,451,442,460,427,448,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,448,440,432,491,458,416],
[438,0,465,436,437,477,474,446],
[442,425,0,474,451,477,464,446],
[450,454,416,0,435,477,450,400],
[458,453,439,455,0,500,445,438],
[399,413,413,413,390,0,458,411],
[432,416,426,440,445,432,0,423],
[474,444,444,490,452,479,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,443,430,428,463,477,488],
[426,0,442,388,416,459,439,484],
[447,448,0,459,422,465,460,501],
[460,502,431,0,451,471,490,468],
[462,474,468,439,0,466,445,500],
[427,431,425,419,424,0,425,462],
[413,451,430,400,445,465,0,458],
[402,406,389,422,390,428,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,386,511,605,524,464,455,468],
[504,0,538,538,456,414,532,462],
[379,352,0,462,373,414,426,274],
[285,352,428,0,404,286,434,373],
[366,434,517,486,0,403,566,448],
[426,476,476,604,487,0,582,461],
[435,358,464,456,324,308,0,407],
[422,428,616,517,442,429,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,442,443,455,453,427,444],
[473,0,474,454,465,459,430,465],
[448,416,0,427,436,437,432,434],
[447,436,463,0,449,442,449,460],
[435,425,454,441,0,448,436,430],
[437,431,453,448,442,0,449,462],
[463,460,458,441,454,441,0,436],
[446,425,456,430,460,428,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,457,478,474,459,487,479],
[450,0,424,459,453,452,469,456],
[433,466,0,482,472,430,469,468],
[412,431,408,0,421,416,457,449],
[416,437,418,469,0,442,469,455],
[431,438,460,474,448,0,448,472],
[403,421,421,433,421,442,0,434],
[411,434,422,441,435,418,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,395,424,425,445,422,414],
[460,0,434,435,438,471,446,442],
[495,456,0,444,446,476,457,478],
[466,455,446,0,455,458,445,458],
[465,452,444,435,0,464,441,424],
[445,419,414,432,426,0,430,424],
[468,444,433,445,449,460,0,439],
[476,448,412,432,466,466,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,453,434,440,457,456,462],
[458,0,440,444,462,457,457,459],
[437,450,0,448,457,477,451,455],
[456,446,442,0,459,469,454,456],
[450,428,433,431,0,482,437,444],
[433,433,413,421,408,0,419,423],
[434,433,439,436,453,471,0,456],
[428,431,435,434,446,467,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,458,429,440,471,453,471],
[429,0,429,439,448,435,430,449],
[432,461,0,441,462,462,440,493],
[461,451,449,0,463,477,439,483],
[450,442,428,427,0,458,423,459],
[419,455,428,413,432,0,430,484],
[437,460,450,451,467,460,0,464],
[419,441,397,407,431,406,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,458,440,436,442,413,455],
[464,0,454,475,430,459,450,453],
[432,436,0,421,418,461,410,440],
[450,415,469,0,453,458,425,456],
[454,460,472,437,0,446,426,443],
[448,431,429,432,444,0,420,437],
[477,440,480,465,464,470,0,452],
[435,437,450,434,447,453,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,437,411,414,454,423,425],
[449,0,464,448,454,457,453,437],
[453,426,0,408,417,457,452,435],
[479,442,482,0,447,470,434,442],
[476,436,473,443,0,472,482,459],
[436,433,433,420,418,0,432,419],
[467,437,438,456,408,458,0,427],
[465,453,455,448,431,471,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,469,465,437,441,425,455],
[449,0,444,466,429,445,447,455],
[421,446,0,467,449,459,479,450],
[425,424,423,0,411,440,413,425],
[453,461,441,479,0,456,447,444],
[449,445,431,450,434,0,440,460],
[465,443,411,477,443,450,0,448],
[435,435,440,465,446,430,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,437,467,438,424,436,428],
[448,0,462,476,426,445,434,446],
[453,428,0,449,442,413,439,451],
[423,414,441,0,436,392,415,421],
[452,464,448,454,0,439,433,466],
[466,445,477,498,451,0,452,468],
[454,456,451,475,457,438,0,445],
[462,444,439,469,424,422,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,431,412,443,441,439,439],
[461,0,426,442,468,437,437,445],
[459,464,0,440,462,461,459,441],
[478,448,450,0,466,479,443,490],
[447,422,428,424,0,454,425,440],
[449,453,429,411,436,0,443,412],
[451,453,431,447,465,447,0,480],
[451,445,449,400,450,478,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,441,439,448,433,453,443],
[451,0,443,438,447,442,455,415],
[449,447,0,460,444,442,457,449],
[451,452,430,0,436,443,458,430],
[442,443,446,454,0,446,444,434],
[457,448,448,447,444,0,469,448],
[437,435,433,432,446,421,0,418],
[447,475,441,460,456,442,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,444,435,436,490,462,463],
[431,0,416,459,459,476,420,451],
[446,474,0,449,439,463,438,444],
[455,431,441,0,471,458,451,441],
[454,431,451,419,0,477,421,456],
[400,414,427,432,413,0,437,418],
[428,470,452,439,469,453,0,461],
[427,439,446,449,434,472,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,451,464,449,458,436,465],
[451,0,432,454,451,446,461,460],
[439,458,0,452,453,456,470,471],
[426,436,438,0,446,463,463,457],
[441,439,437,444,0,436,467,457],
[432,444,434,427,454,0,465,468],
[454,429,420,427,423,425,0,440],
[425,430,419,433,433,422,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,438,437,455,447,431,422],
[423,0,419,440,433,430,439,387],
[452,471,0,456,473,455,462,436],
[453,450,434,0,447,436,451,446],
[435,457,417,443,0,439,467,424],
[443,460,435,454,451,0,460,433],
[459,451,428,439,423,430,0,437],
[468,503,454,444,466,457,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,443,422,433,445,435,467],
[472,0,438,451,446,454,446,469],
[447,452,0,437,431,451,449,487],
[468,439,453,0,470,464,442,481],
[457,444,459,420,0,451,464,459],
[445,436,439,426,439,0,417,458],
[455,444,441,448,426,473,0,465],
[423,421,403,409,431,432,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,430,403,504,384,436,465],
[472,0,396,472,498,529,399,512],
[460,494,0,553,468,412,443,570],
[487,418,337,0,496,442,367,523],
[386,392,422,394,0,335,372,389],
[506,361,478,448,555,0,456,468],
[454,491,447,523,518,434,0,595],
[425,378,320,367,501,422,295,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,439,433,454,445,424,434],
[437,0,481,438,464,458,437,432],
[451,409,0,415,411,443,411,441],
[457,452,475,0,459,456,438,468],
[436,426,479,431,0,437,470,444],
[445,432,447,434,453,0,433,438],
[466,453,479,452,420,457,0,470],
[456,458,449,422,446,452,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,457,457,460,438,446,478],
[465,0,453,456,468,461,445,460],
[433,437,0,447,469,426,453,471],
[433,434,443,0,499,449,440,443],
[430,422,421,391,0,420,414,410],
[452,429,464,441,470,0,429,446],
[444,445,437,450,476,461,0,466],
[412,430,419,447,480,444,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,450,474,468,491,440,469],
[411,0,410,417,422,434,404,452],
[440,480,0,440,434,469,417,477],
[416,473,450,0,416,490,453,452],
[422,468,456,474,0,484,408,468],
[399,456,421,400,406,0,432,432],
[450,486,473,437,482,458,0,479],
[421,438,413,438,422,458,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,390,404,424,420,416,444,435],
[500,0,426,472,520,497,482,501],
[486,464,0,491,512,431,497,476],
[466,418,399,0,451,418,443,491],
[470,370,378,439,0,428,450,443],
[474,393,459,472,462,0,455,484],
[446,408,393,447,440,435,0,442],
[455,389,414,399,447,406,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,453,423,438,447,465,447],
[465,0,445,446,441,448,432,432],
[437,445,0,468,461,457,442,431],
[467,444,422,0,455,427,456,441],
[452,449,429,435,0,435,415,435],
[443,442,433,463,455,0,436,450],
[425,458,448,434,475,454,0,424],
[443,458,459,449,455,440,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,447,435,418,450,430,439],
[435,0,450,422,434,427,419,407],
[443,440,0,433,412,440,431,447],
[455,468,457,0,449,444,424,442],
[472,456,478,441,0,456,434,451],
[440,463,450,446,434,0,424,429],
[460,471,459,466,456,466,0,442],
[451,483,443,448,439,461,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,376,472,476,466,461,392],
[418,0,395,410,397,429,480,387],
[514,495,0,527,431,477,455,465],
[418,480,363,0,407,434,423,371],
[414,493,459,483,0,468,469,426],
[424,461,413,456,422,0,423,352],
[429,410,435,467,421,467,0,384],
[498,503,425,519,464,538,506,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,463,482,455,431,433,445],
[458,0,442,462,448,449,441,447],
[427,448,0,447,449,444,425,426],
[408,428,443,0,434,423,414,416],
[435,442,441,456,0,445,443,424],
[459,441,446,467,445,0,414,427],
[457,449,465,476,447,476,0,440],
[445,443,464,474,466,463,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,454,460,482,435,518,455],
[450,0,465,444,491,460,482,423],
[436,425,0,448,452,511,459,434],
[430,446,442,0,488,412,453,429],
[408,399,438,402,0,387,433,367],
[455,430,379,478,503,0,479,446],
[372,408,431,437,457,411,0,424],
[435,467,456,461,523,444,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,449,473,433,448,443,431],
[450,0,450,481,447,443,442,418],
[441,440,0,477,459,442,443,448],
[417,409,413,0,441,463,424,430],
[457,443,431,449,0,470,450,434],
[442,447,448,427,420,0,443,425],
[447,448,447,466,440,447,0,447],
[459,472,442,460,456,465,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,456,436,453,436,456,450],
[434,0,450,432,433,461,456,436],
[434,440,0,447,433,427,445,435],
[454,458,443,0,441,454,461,460],
[437,457,457,449,0,458,441,441],
[454,429,463,436,432,0,443,432],
[434,434,445,429,449,447,0,421],
[440,454,455,430,449,458,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,463,442,477,483,454,424],
[417,0,452,420,445,433,420,441],
[427,438,0,414,409,440,424,405],
[448,470,476,0,476,481,443,431],
[413,445,481,414,0,469,435,433],
[407,457,450,409,421,0,433,411],
[436,470,466,447,455,457,0,462],
[466,449,485,459,457,479,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,446,469,464,485,450,440],
[421,0,427,445,453,464,442,444],
[444,463,0,458,456,459,444,449],
[421,445,432,0,448,441,428,446],
[426,437,434,442,0,445,416,458],
[405,426,431,449,445,0,425,440],
[440,448,446,462,474,465,0,439],
[450,446,441,444,432,450,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,449,488,485,444,467,476],
[435,0,447,470,465,466,496,436],
[441,443,0,474,459,481,488,460],
[402,420,416,0,396,452,440,410],
[405,425,431,494,0,469,456,452],
[446,424,409,438,421,0,443,415],
[423,394,402,450,434,447,0,432],
[414,454,430,480,438,475,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,420,448,434,446,431,420],
[436,0,426,421,433,459,448,415],
[470,464,0,426,453,446,454,449],
[442,469,464,0,468,479,460,468],
[456,457,437,422,0,445,480,426],
[444,431,444,411,445,0,444,433],
[459,442,436,430,410,446,0,441],
[470,475,441,422,464,457,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,422,378,410,453,448,350],
[471,0,492,407,394,526,478,370],
[468,398,0,462,409,475,486,357],
[512,483,428,0,517,509,496,455],
[480,496,481,373,0,508,408,414],
[437,364,415,381,382,0,493,383],
[442,412,404,394,482,397,0,345],
[540,520,533,435,476,507,545,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,448,448,424,451,448,474],
[452,0,469,455,433,461,440,491],
[442,421,0,443,419,445,438,438],
[442,435,447,0,451,470,453,461],
[466,457,471,439,0,437,442,453],
[439,429,445,420,453,0,421,425],
[442,450,452,437,448,469,0,429],
[416,399,452,429,437,465,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,458,418,447,423,427,431],
[432,0,443,428,401,420,427,416],
[432,447,0,407,439,413,425,418],
[472,462,483,0,438,486,446,457],
[443,489,451,452,0,426,433,452],
[467,470,477,404,464,0,428,446],
[463,463,465,444,457,462,0,457],
[459,474,472,433,438,444,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,455,428,440,451,453,439],
[430,0,452,437,459,446,449,436],
[435,438,0,452,474,453,453,456],
[462,453,438,0,437,443,438,457],
[450,431,416,453,0,430,434,447],
[439,444,437,447,460,0,434,452],
[437,441,437,452,456,456,0,456],
[451,454,434,433,443,438,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,457,461,464,475,456,435],
[457,0,449,474,432,433,438,434],
[433,441,0,452,454,428,457,424],
[429,416,438,0,448,456,434,429],
[426,458,436,442,0,439,430,433],
[415,457,462,434,451,0,437,470],
[434,452,433,456,460,453,0,459],
[455,456,466,461,457,420,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,408,460,444,427,470,439],
[457,0,448,436,450,439,459,452],
[482,442,0,437,478,456,468,467],
[430,454,453,0,481,461,472,483],
[446,440,412,409,0,420,472,445],
[463,451,434,429,470,0,456,444],
[420,431,422,418,418,434,0,440],
[451,438,423,407,445,446,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,368,419,483,318,406,484,420],
[522,0,414,499,460,480,478,391],
[471,476,0,478,445,464,532,466],
[407,391,412,0,348,393,479,398],
[572,430,445,542,0,493,524,398],
[484,410,426,497,397,0,449,387],
[406,412,358,411,366,441,0,393],
[470,499,424,492,492,503,497,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,426,409,396,419,416,448],
[425,0,431,395,389,403,384,433],
[464,459,0,426,438,394,435,452],
[481,495,464,0,448,439,455,470],
[494,501,452,442,0,459,466,503],
[471,487,496,451,431,0,458,488],
[474,506,455,435,424,432,0,482],
[442,457,438,420,387,402,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,460,477,473,465,449,450],
[455,0,431,411,473,463,481,454],
[430,459,0,444,430,463,447,452],
[413,479,446,0,467,458,451,458],
[417,417,460,423,0,464,449,452],
[425,427,427,432,426,0,424,446],
[441,409,443,439,441,466,0,436],
[440,436,438,432,438,444,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,458,452,399,462,459,468],
[435,0,447,441,397,445,455,440],
[432,443,0,456,449,452,462,450],
[438,449,434,0,429,459,429,431],
[491,493,441,461,0,481,478,487],
[428,445,438,431,409,0,466,431],
[431,435,428,461,412,424,0,420],
[422,450,440,459,403,459,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,476,426,463,426,450,449],
[447,0,450,450,456,440,447,453],
[414,440,0,451,473,400,449,444],
[464,440,439,0,462,399,447,440],
[427,434,417,428,0,426,433,409],
[464,450,490,491,464,0,523,434],
[440,443,441,443,457,367,0,403],
[441,437,446,450,481,456,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,484,499,420,436,458,491],
[462,0,472,477,469,428,471,480],
[406,418,0,459,464,425,455,453],
[391,413,431,0,422,405,399,441],
[470,421,426,468,0,470,460,475],
[454,462,465,485,420,0,453,456],
[432,419,435,491,430,437,0,459],
[399,410,437,449,415,434,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,419,482,452,405,424,399],
[456,0,444,554,464,437,395,455],
[471,446,0,481,494,427,460,441],
[408,336,409,0,432,360,386,447],
[438,426,396,458,0,382,403,482],
[485,453,463,530,508,0,434,483],
[466,495,430,504,487,456,0,466],
[491,435,449,443,408,407,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,440,444,452,430,413,451],
[433,0,438,438,444,403,429,438],
[450,452,0,437,437,405,423,461],
[446,452,453,0,429,440,445,426],
[438,446,453,461,0,413,453,418],
[460,487,485,450,477,0,448,444],
[477,461,467,445,437,442,0,450],
[439,452,429,464,472,446,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,451,446,432,454,443,468],
[441,0,467,450,448,450,450,465],
[439,423,0,448,424,419,421,438],
[444,440,442,0,435,436,437,450],
[458,442,466,455,0,456,461,466],
[436,440,471,454,434,0,429,463],
[447,440,469,453,429,461,0,455],
[422,425,452,440,424,427,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,415,408,361,404,398,384],
[423,0,420,387,373,381,407,429],
[475,470,0,412,413,404,434,452],
[482,503,478,0,430,435,464,469],
[529,517,477,460,0,438,470,477],
[486,509,486,455,452,0,441,455],
[492,483,456,426,420,449,0,491],
[506,461,438,421,413,435,399,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,472,456,449,453,452,473],
[465,0,493,464,457,444,473,460],
[418,397,0,442,447,414,447,453],
[434,426,448,0,441,450,453,455],
[441,433,443,449,0,428,466,439],
[437,446,476,440,462,0,493,470],
[438,417,443,437,424,397,0,444],
[417,430,437,435,451,420,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,450,432,431,434,454,434],
[432,0,406,414,440,421,406,414],
[440,484,0,452,460,459,435,456],
[458,476,438,0,440,444,429,433],
[459,450,430,450,0,443,429,432],
[456,469,431,446,447,0,436,456],
[436,484,455,461,461,454,0,432],
[456,476,434,457,458,434,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,504,439,404,456,453,451],
[466,0,479,469,435,471,476,457],
[386,411,0,411,393,424,442,420],
[451,421,479,0,432,431,444,406],
[486,455,497,458,0,485,472,424],
[434,419,466,459,405,0,470,445],
[437,414,448,446,418,420,0,415],
[439,433,470,484,466,445,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,421,433,425,424,423,404],
[452,0,446,482,439,472,444,445],
[469,444,0,479,468,489,477,460],
[457,408,411,0,450,433,392,415],
[465,451,422,440,0,441,411,424],
[466,418,401,457,449,0,440,469],
[467,446,413,498,479,450,0,414],
[486,445,430,475,466,421,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,433,426,431,443,406,439],
[446,0,399,423,432,436,421,427],
[457,491,0,459,439,446,440,447],
[464,467,431,0,436,462,452,452],
[459,458,451,454,0,451,422,453],
[447,454,444,428,439,0,413,432],
[484,469,450,438,468,477,0,430],
[451,463,443,438,437,458,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,345,423,405,457,369,460,516],
[545,0,424,538,450,385,500,539],
[467,466,0,519,356,441,482,534],
[485,352,371,0,455,367,465,498],
[433,440,534,435,0,484,509,523],
[521,505,449,523,406,0,505,545],
[430,390,408,425,381,385,0,479],
[374,351,356,392,367,345,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,443,451,424,448,431,432],
[439,0,447,433,431,436,435,434],
[447,443,0,456,430,445,436,435],
[439,457,434,0,429,444,424,415],
[466,459,460,461,0,460,444,430],
[442,454,445,446,430,0,447,425],
[459,455,454,466,446,443,0,447],
[458,456,455,475,460,465,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,375,432,422,404,410,449,493],
[515,0,470,454,425,463,494,527],
[458,420,0,405,477,434,433,478],
[468,436,485,0,478,437,478,495],
[486,465,413,412,0,420,475,476],
[480,427,456,453,470,0,441,459],
[441,396,457,412,415,449,0,449],
[397,363,412,395,414,431,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,452,468,458,468,436,479],
[422,0,421,431,443,425,414,423],
[438,469,0,439,453,446,432,460],
[422,459,451,0,474,447,441,446],
[432,447,437,416,0,428,424,438],
[422,465,444,443,462,0,458,458],
[454,476,458,449,466,432,0,465],
[411,467,430,444,452,432,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,441,447,452,429,451,439],
[430,0,458,451,462,436,449,433],
[449,432,0,441,435,429,441,432],
[443,439,449,0,435,446,448,432],
[438,428,455,455,0,422,450,453],
[461,454,461,444,468,0,461,453],
[439,441,449,442,440,429,0,438],
[451,457,458,458,437,437,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,409,411,416,434,426,443],
[442,0,432,422,429,449,445,431],
[481,458,0,456,439,461,453,456],
[479,468,434,0,444,480,431,464],
[474,461,451,446,0,472,442,443],
[456,441,429,410,418,0,430,431],
[464,445,437,459,448,460,0,453],
[447,459,434,426,447,459,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,451,428,453,459,451,442],
[429,0,441,414,420,423,460,414],
[439,449,0,445,453,424,467,439],
[462,476,445,0,431,451,452,451],
[437,470,437,459,0,444,464,426],
[431,467,466,439,446,0,449,424],
[439,430,423,438,426,441,0,424],
[448,476,451,439,464,466,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,482,472,429,422,466,435],
[420,0,368,409,397,403,391,382],
[408,522,0,459,407,440,471,421],
[418,481,431,0,418,405,479,425],
[461,493,483,472,0,445,514,481],
[468,487,450,485,445,0,502,470],
[424,499,419,411,376,388,0,431],
[455,508,469,465,409,420,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,423,451,413,423,461,425],
[476,0,442,471,444,469,457,444],
[467,448,0,448,436,420,440,452],
[439,419,442,0,423,448,454,424],
[477,446,454,467,0,442,480,443],
[467,421,470,442,448,0,447,442],
[429,433,450,436,410,443,0,445],
[465,446,438,466,447,448,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,506,449,526,437,456,461],
[411,0,503,454,528,459,509,461],
[384,387,0,445,491,396,405,440],
[441,436,445,0,516,468,471,468],
[364,362,399,374,0,355,406,410],
[453,431,494,422,535,0,476,483],
[434,381,485,419,484,414,0,475],
[429,429,450,422,480,407,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,413,395,426,447,415,368],
[494,0,398,453,412,501,403,409],
[477,492,0,432,455,442,443,424],
[495,437,458,0,392,467,458,484],
[464,478,435,498,0,469,451,421],
[443,389,448,423,421,0,397,433],
[475,487,447,432,439,493,0,445],
[522,481,466,406,469,457,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,391,537,182,356,468,422,428],
[499,0,578,339,408,386,328,325],
[353,312,0,336,373,423,524,479],
[708,551,554,0,354,420,626,505],
[534,482,517,536,0,407,556,468],
[422,504,467,470,483,0,536,395],
[468,562,366,264,334,354,0,298],
[462,565,411,385,422,495,592,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,460,428,452,413,412,454],
[445,0,452,414,461,425,440,462],
[430,438,0,426,474,445,446,447],
[462,476,464,0,465,442,452,463],
[438,429,416,425,0,414,426,436],
[477,465,445,448,476,0,469,453],
[478,450,444,438,464,421,0,455],
[436,428,443,427,454,437,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,503,563,345,368,371,585,334],
[387,0,385,343,374,396,356,557],
[327,505,0,104,277,298,436,333],
[545,547,786,0,407,646,482,622],
[522,516,613,483,0,562,430,548],
[519,494,592,244,328,0,416,548],
[305,534,454,408,460,474,0,329],
[556,333,557,268,342,342,561,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,429,419,431,431,426,423],
[476,0,443,463,468,460,457,439],
[461,447,0,444,471,447,452,452],
[471,427,446,0,469,457,423,424],
[459,422,419,421,0,438,428,420],
[459,430,443,433,452,0,424,432],
[464,433,438,467,462,466,0,459],
[467,451,438,466,470,458,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,510,461,457,442,486,449,476],
[380,0,431,434,368,449,452,427],
[429,459,0,477,413,493,447,477],
[433,456,413,0,417,509,447,409],
[448,522,477,473,0,482,457,435],
[404,441,397,381,408,0,416,396],
[441,438,443,443,433,474,0,381],
[414,463,413,481,455,494,509,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,464,439,455,453,439,487],
[431,0,424,419,423,390,425,427],
[426,466,0,432,433,429,420,499],
[451,471,458,0,450,432,440,443],
[435,467,457,440,0,440,457,495],
[437,500,461,458,450,0,455,466],
[451,465,470,450,433,435,0,451],
[403,463,391,447,395,424,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,464,382,393,407,415,500],
[484,0,452,415,450,468,471,429],
[426,438,0,407,460,416,446,428],
[508,475,483,0,472,445,471,495],
[497,440,430,418,0,430,467,481],
[483,422,474,445,460,0,489,458],
[475,419,444,419,423,401,0,407],
[390,461,462,395,409,432,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,446,434,446,461,459,456],
[445,0,441,459,437,458,456,450],
[444,449,0,440,431,438,455,444],
[456,431,450,0,428,443,456,432],
[444,453,459,462,0,450,466,455],
[429,432,452,447,440,0,460,453],
[431,434,435,434,424,430,0,430],
[434,440,446,458,435,437,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,461,463,458,449,420,467],
[457,0,488,479,460,450,462,443],
[429,402,0,437,432,461,415,425],
[427,411,453,0,417,427,420,406],
[432,430,458,473,0,437,425,439],
[441,440,429,463,453,0,434,428],
[470,428,475,470,465,456,0,450],
[423,447,465,484,451,462,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,437,388,431,474,340,469],
[463,0,465,481,480,420,445,494],
[453,425,0,400,426,432,409,472],
[502,409,490,0,460,465,453,510],
[459,410,464,430,0,447,379,424],
[416,470,458,425,443,0,433,447],
[550,445,481,437,511,457,0,460],
[421,396,418,380,466,443,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,459,445,416,446,457,471],
[432,0,453,412,431,435,421,452],
[431,437,0,417,434,423,436,459],
[445,478,473,0,472,434,467,487],
[474,459,456,418,0,428,453,455],
[444,455,467,456,462,0,454,485],
[433,469,454,423,437,436,0,457],
[419,438,431,403,435,405,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,451,444,458,442,458,445],
[442,0,424,424,453,440,457,447],
[439,466,0,453,453,436,461,449],
[446,466,437,0,459,461,470,429],
[432,437,437,431,0,447,472,419],
[448,450,454,429,443,0,451,413],
[432,433,429,420,418,439,0,415],
[445,443,441,461,471,477,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,453,468,435,463,458,472],
[450,0,455,445,455,481,445,441],
[437,435,0,433,427,456,446,440],
[422,445,457,0,432,451,438,447],
[455,435,463,458,0,491,446,457],
[427,409,434,439,399,0,427,430],
[432,445,444,452,444,463,0,444],
[418,449,450,443,433,460,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,438,443,451,447,455,429],
[447,0,449,433,451,429,438,444],
[452,441,0,427,454,443,450,439],
[447,457,463,0,461,458,437,445],
[439,439,436,429,0,445,426,441],
[443,461,447,432,445,0,458,441],
[435,452,440,453,464,432,0,440],
[461,446,451,445,449,449,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,462,435,423,450,432,417],
[419,0,449,435,441,456,418,432],
[428,441,0,430,414,439,414,435],
[455,455,460,0,431,439,426,437],
[467,449,476,459,0,454,445,446],
[440,434,451,451,436,0,423,434],
[458,472,476,464,445,467,0,461],
[473,458,455,453,444,456,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,439,445,434,455,439,434],
[458,0,448,466,437,452,438,442],
[451,442,0,439,445,434,457,456],
[445,424,451,0,433,442,433,434],
[456,453,445,457,0,446,465,453],
[435,438,456,448,444,0,446,445],
[451,452,433,457,425,444,0,436],
[456,448,434,456,437,445,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,433,459,434,442,468,447],
[431,0,444,444,455,438,411,451],
[457,446,0,467,437,450,436,443],
[431,446,423,0,424,408,444,446],
[456,435,453,466,0,429,446,443],
[448,452,440,482,461,0,480,464],
[422,479,454,446,444,410,0,442],
[443,439,447,444,447,426,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,765,254,252,382,765,763,254],
[125,0,126,125,256,128,379,125],
[636,764,0,508,256,636,636,509],
[638,765,382,0,510,765,763,510],
[508,634,634,380,0,636,762,507],
[125,762,254,125,254,0,635,379],
[127,511,254,127,128,255,0,128],
[636,765,381,380,383,511,762,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,444,426,449,454,409,459],
[438,0,417,404,438,398,411,458],
[446,473,0,444,446,437,465,495],
[464,486,446,0,460,454,436,468],
[441,452,444,430,0,436,419,478],
[436,492,453,436,454,0,445,490],
[481,479,425,454,471,445,0,498],
[431,432,395,422,412,400,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,448,420,429,422,464,421],
[428,0,401,405,387,370,473,419],
[442,489,0,439,450,429,513,447],
[470,485,451,0,458,461,475,414],
[461,503,440,432,0,482,477,446],
[468,520,461,429,408,0,493,465],
[426,417,377,415,413,397,0,373],
[469,471,443,476,444,425,517,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,444,471,457,447,448,459],
[437,0,435,442,433,425,445,398],
[446,455,0,451,478,471,432,447],
[419,448,439,0,437,453,436,446],
[433,457,412,453,0,466,450,443],
[443,465,419,437,424,0,455,452],
[442,445,458,454,440,435,0,430],
[431,492,443,444,447,438,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,439,437,472,439,448,492],
[409,0,448,446,451,433,423,432],
[451,442,0,431,430,424,430,441],
[453,444,459,0,461,464,448,439],
[418,439,460,429,0,414,430,422],
[451,457,466,426,476,0,475,480],
[442,467,460,442,460,415,0,451],
[398,458,449,451,468,410,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,455,429,431,440,438,473],
[467,0,419,445,442,432,438,441],
[435,471,0,439,439,426,441,437],
[461,445,451,0,440,469,479,485],
[459,448,451,450,0,457,447,441],
[450,458,464,421,433,0,460,459],
[452,452,449,411,443,430,0,445],
[417,449,453,405,449,431,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,435,453,433,426,446,433],
[448,0,445,460,469,440,438,480],
[455,445,0,421,398,455,433,453],
[437,430,469,0,452,448,433,431],
[457,421,492,438,0,437,450,455],
[464,450,435,442,453,0,455,433],
[444,452,457,457,440,435,0,421],
[457,410,437,459,435,457,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,493,452,464,480,441,437],
[416,0,505,476,446,460,465,451],
[397,385,0,455,418,446,422,397],
[438,414,435,0,439,437,442,426],
[426,444,472,451,0,439,468,431],
[410,430,444,453,451,0,420,439],
[449,425,468,448,422,470,0,461],
[453,439,493,464,459,451,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,450,435,428,480,438,432],
[424,0,412,420,424,438,417,427],
[440,478,0,476,440,457,445,439],
[455,470,414,0,446,474,430,400],
[462,466,450,444,0,474,423,460],
[410,452,433,416,416,0,417,413],
[452,473,445,460,467,473,0,461],
[458,463,451,490,430,477,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,426,423,471,563,424,378],
[468,0,469,376,332,421,423,468],
[464,421,0,514,518,563,517,563],
[467,514,376,0,514,516,420,422],
[419,558,372,376,0,514,326,419],
[327,469,327,374,376,0,470,373],
[466,467,373,470,564,420,0,374],
[512,422,327,468,471,517,516,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,414,417,425,417,424,432],
[445,0,434,468,431,455,441,440],
[476,456,0,460,451,424,428,450],
[473,422,430,0,402,452,462,445],
[465,459,439,488,0,421,440,455],
[473,435,466,438,469,0,446,468],
[466,449,462,428,450,444,0,439],
[458,450,440,445,435,422,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,455,430,443,490,443,483],
[444,0,482,477,488,492,422,455],
[435,408,0,444,431,478,449,459],
[460,413,446,0,471,482,452,485],
[447,402,459,419,0,473,444,455],
[400,398,412,408,417,0,408,425],
[447,468,441,438,446,482,0,457],
[407,435,431,405,435,465,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,452,471,470,452,438,446],
[443,0,447,443,465,441,450,447],
[438,443,0,450,449,449,458,437],
[419,447,440,0,453,444,437,427],
[420,425,441,437,0,440,430,422],
[438,449,441,446,450,0,432,440],
[452,440,432,453,460,458,0,435],
[444,443,453,463,468,450,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,458,423,468,434,440,415],
[429,0,466,396,410,454,447,443],
[432,424,0,380,445,434,451,443],
[467,494,510,0,427,462,457,446],
[422,480,445,463,0,458,473,431],
[456,436,456,428,432,0,462,458],
[450,443,439,433,417,428,0,434],
[475,447,447,444,459,432,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,457,468,459,457,458,439],
[421,0,426,428,438,416,435,414],
[433,464,0,456,430,434,435,444],
[422,462,434,0,439,444,419,446],
[431,452,460,451,0,438,455,424],
[433,474,456,446,452,0,467,457],
[432,455,455,471,435,423,0,433],
[451,476,446,444,466,433,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,420,437,446,415,437,380],
[488,0,493,484,472,466,493,404],
[470,397,0,426,431,410,407,394],
[453,406,464,0,432,409,412,433],
[444,418,459,458,0,411,451,409],
[475,424,480,481,479,0,463,457],
[453,397,483,478,439,427,0,405],
[510,486,496,457,481,433,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,464,472,453,461,443,450],
[415,0,437,436,430,445,436,415],
[426,453,0,462,452,459,455,463],
[418,454,428,0,457,452,443,443],
[437,460,438,433,0,428,428,441],
[429,445,431,438,462,0,444,411],
[447,454,435,447,462,446,0,437],
[440,475,427,447,449,479,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,454,464,464,452,451,444],
[452,0,428,476,478,442,454,451],
[436,462,0,484,437,465,448,465],
[426,414,406,0,428,442,443,453],
[426,412,453,462,0,474,438,454],
[438,448,425,448,416,0,428,443],
[439,436,442,447,452,462,0,448],
[446,439,425,437,436,447,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,412,446,477,468,420,435],
[408,0,410,436,445,438,402,421],
[478,480,0,472,487,444,455,476],
[444,454,418,0,457,436,459,453],
[413,445,403,433,0,442,416,440],
[422,452,446,454,448,0,425,437],
[470,488,435,431,474,465,0,477],
[455,469,414,437,450,453,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,459,449,451,483,432,468],
[430,0,430,422,449,460,468,463],
[431,460,0,375,383,425,410,430],
[441,468,515,0,459,426,455,454],
[439,441,507,431,0,486,462,490],
[407,430,465,464,404,0,440,465],
[458,422,480,435,428,450,0,451],
[422,427,460,436,400,425,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,400,490,430,431,434,467],
[485,0,472,481,407,449,463,474],
[490,418,0,478,417,452,455,481],
[400,409,412,0,418,402,441,435],
[460,483,473,472,0,407,472,467],
[459,441,438,488,483,0,393,445],
[456,427,435,449,418,497,0,467],
[423,416,409,455,423,445,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,432,406,391,446,420,414],
[451,0,434,426,420,453,444,430],
[458,456,0,416,439,453,484,436],
[484,464,474,0,457,478,435,438],
[499,470,451,433,0,475,463,482],
[444,437,437,412,415,0,450,412],
[470,446,406,455,427,440,0,442],
[476,460,454,452,408,478,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,460,472,457,454,437,461],
[440,0,463,442,464,458,437,457],
[430,427,0,451,449,458,461,450],
[418,448,439,0,460,423,452,455],
[433,426,441,430,0,438,450,446],
[436,432,432,467,452,0,440,444],
[453,453,429,438,440,450,0,419],
[429,433,440,435,444,446,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,426,442,449,469,448,472],
[441,0,426,446,421,440,442,454],
[464,464,0,444,433,498,472,466],
[448,444,446,0,426,453,459,487],
[441,469,457,464,0,450,465,483],
[421,450,392,437,440,0,455,462],
[442,448,418,431,425,435,0,453],
[418,436,424,403,407,428,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,338,488,393,381,425,457,422],
[552,0,476,420,489,476,480,501],
[402,414,0,369,397,477,449,451],
[497,470,521,0,420,483,508,444],
[509,401,493,470,0,513,498,479],
[465,414,413,407,377,0,438,445],
[433,410,441,382,392,452,0,440],
[468,389,439,446,411,445,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,450,468,440,452,450,406],
[465,0,432,476,454,449,493,456],
[440,458,0,448,459,446,481,478],
[422,414,442,0,441,429,452,445],
[450,436,431,449,0,430,467,430],
[438,441,444,461,460,0,479,460],
[440,397,409,438,423,411,0,385],
[484,434,412,445,460,430,505,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,365,424,401,445,410,448],
[470,0,448,460,472,510,401,519],
[525,442,0,499,453,412,438,549],
[466,430,391,0,401,435,412,523],
[489,418,437,489,0,459,453,486],
[445,380,478,455,431,0,474,483],
[480,489,452,478,437,416,0,479],
[442,371,341,367,404,407,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,491,429,428,420,402,412],
[466,0,492,456,450,441,449,454],
[399,398,0,414,419,439,427,423],
[461,434,476,0,445,435,443,430],
[462,440,471,445,0,447,458,448],
[470,449,451,455,443,0,448,424],
[488,441,463,447,432,442,0,420],
[478,436,467,460,442,466,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,478,441,470,471,443,456],
[452,0,450,460,482,436,448,478],
[412,440,0,430,448,456,399,479],
[449,430,460,0,451,429,423,451],
[420,408,442,439,0,446,421,450],
[419,454,434,461,444,0,452,453],
[447,442,491,467,469,438,0,460],
[434,412,411,439,440,437,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,453,449,449,424,429,422],
[448,0,424,442,453,408,432,427],
[437,466,0,459,441,427,437,434],
[441,448,431,0,438,417,431,429],
[441,437,449,452,0,430,444,447],
[466,482,463,473,460,0,449,439],
[461,458,453,459,446,441,0,426],
[468,463,456,461,443,451,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,368,519,415,407,369,455,359],
[522,0,607,479,424,459,537,412],
[371,283,0,431,384,375,403,344],
[475,411,459,0,378,460,457,490],
[483,466,506,512,0,394,521,447],
[521,431,515,430,496,0,511,447],
[435,353,487,433,369,379,0,398],
[531,478,546,400,443,443,492,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,438,428,418,451,419,436],
[443,0,407,398,420,427,397,426],
[452,483,0,411,428,435,431,452],
[462,492,479,0,447,461,445,483],
[472,470,462,443,0,443,458,492],
[439,463,455,429,447,0,411,420],
[471,493,459,445,432,479,0,460],
[454,464,438,407,398,470,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,429,432,443,433,449,447],
[456,0,428,438,452,442,445,451],
[461,462,0,447,460,440,436,441],
[458,452,443,0,434,453,446,428],
[447,438,430,456,0,417,423,434],
[457,448,450,437,473,0,452,442],
[441,445,454,444,467,438,0,448],
[443,439,449,462,456,448,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,456,466,453,445,449,463],
[442,0,450,438,430,424,440,452],
[434,440,0,463,451,444,454,444],
[424,452,427,0,444,417,433,443],
[437,460,439,446,0,440,455,451],
[445,466,446,473,450,0,464,460],
[441,450,436,457,435,426,0,450],
[427,438,446,447,439,430,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,418,430,478,459,450,449],
[423,0,425,452,459,433,406,413],
[472,465,0,464,475,454,434,451],
[460,438,426,0,445,457,426,445],
[412,431,415,445,0,414,417,412],
[431,457,436,433,476,0,473,428],
[440,484,456,464,473,417,0,434],
[441,477,439,445,478,462,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,500,391,501,279,446,337,444],
[390,0,560,557,448,502,391,555],
[499,330,0,501,387,555,444,553],
[389,333,389,0,224,389,277,554],
[611,442,503,666,0,500,498,609],
[444,388,335,501,390,0,332,387],
[553,499,446,613,392,558,0,609],
[446,335,337,336,281,503,281,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,459,433,428,454,449,462],
[451,0,439,460,433,478,442,483],
[431,451,0,446,418,440,438,461],
[457,430,444,0,452,478,455,493],
[462,457,472,438,0,469,449,469],
[436,412,450,412,421,0,421,417],
[441,448,452,435,441,469,0,471],
[428,407,429,397,421,473,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,455,453,473,444,465,439],
[413,0,442,450,451,436,453,422],
[435,448,0,445,423,423,424,411],
[437,440,445,0,430,433,431,438],
[417,439,467,460,0,433,468,451],
[446,454,467,457,457,0,428,441],
[425,437,466,459,422,462,0,441],
[451,468,479,452,439,449,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,444,434,441,500,441,424],
[456,0,443,443,443,467,463,445],
[446,447,0,442,433,464,425,440],
[456,447,448,0,432,485,445,451],
[449,447,457,458,0,488,448,441],
[390,423,426,405,402,0,441,402],
[449,427,465,445,442,449,0,446],
[466,445,450,439,449,488,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,465,436,455,456,456,466],
[416,0,427,418,442,416,433,460],
[425,463,0,459,454,464,468,487],
[454,472,431,0,450,437,448,468],
[435,448,436,440,0,457,447,472],
[434,474,426,453,433,0,452,472],
[434,457,422,442,443,438,0,457],
[424,430,403,422,418,418,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,438,459,445,437,488,462],
[451,0,459,485,469,437,487,460],
[452,431,0,451,467,438,475,470],
[431,405,439,0,425,448,474,435],
[445,421,423,465,0,429,467,466],
[453,453,452,442,461,0,458,484],
[402,403,415,416,423,432,0,438],
[428,430,420,455,424,406,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,443,431,424,433,440,443],
[481,0,465,482,441,474,465,452],
[447,425,0,447,418,427,437,463],
[459,408,443,0,455,460,462,458],
[466,449,472,435,0,453,439,457],
[457,416,463,430,437,0,441,451],
[450,425,453,428,451,449,0,444],
[447,438,427,432,433,439,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,463,420,464,447,457,420],
[466,0,465,452,487,467,462,435],
[427,425,0,440,428,443,454,436],
[470,438,450,0,461,460,467,435],
[426,403,462,429,0,432,408,437],
[443,423,447,430,458,0,457,435],
[433,428,436,423,482,433,0,465],
[470,455,454,455,453,455,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,430,448,467,415,418,414],
[470,0,425,447,458,416,441,421],
[460,465,0,440,435,428,450,418],
[442,443,450,0,476,435,444,430],
[423,432,455,414,0,437,440,410],
[475,474,462,455,453,0,468,445],
[472,449,440,446,450,422,0,422],
[476,469,472,460,480,445,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,481,444,462,467,443,429],
[435,0,481,453,462,469,446,467],
[409,409,0,421,424,450,418,424],
[446,437,469,0,439,439,441,434],
[428,428,466,451,0,460,462,444],
[423,421,440,451,430,0,437,428],
[447,444,472,449,428,453,0,427],
[461,423,466,456,446,462,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,450,426,415,427,439,416],
[450,0,438,445,423,436,434,419],
[440,452,0,435,414,437,430,437],
[464,445,455,0,433,432,454,427],
[475,467,476,457,0,465,441,454],
[463,454,453,458,425,0,438,435],
[451,456,460,436,449,452,0,444],
[474,471,453,463,436,455,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,431,437,406,436,469,445],
[477,0,443,447,433,506,480,466],
[459,447,0,457,414,488,457,445],
[453,443,433,0,449,471,453,446],
[484,457,476,441,0,491,445,468],
[454,384,402,419,399,0,419,394],
[421,410,433,437,445,471,0,446],
[445,424,445,444,422,496,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,412,425,428,425,433,413],
[472,0,467,459,473,492,475,427],
[478,423,0,418,445,500,430,464],
[465,431,472,0,436,487,456,460],
[462,417,445,454,0,476,414,395],
[465,398,390,403,414,0,412,400],
[457,415,460,434,476,478,0,438],
[477,463,426,430,495,490,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,466,470,485,454,445,452],
[427,0,436,455,422,435,413,438],
[424,454,0,439,462,433,444,448],
[420,435,451,0,446,457,452,454],
[405,468,428,444,0,432,439,444],
[436,455,457,433,458,0,441,449],
[445,477,446,438,451,449,0,476],
[438,452,442,436,446,441,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,457,422,466,443,422,420],
[455,0,420,458,459,417,430,438],
[433,470,0,442,450,417,453,416],
[468,432,448,0,505,440,448,422],
[424,431,440,385,0,403,430,410],
[447,473,473,450,487,0,445,433],
[468,460,437,442,460,445,0,462],
[470,452,474,468,480,457,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,449,406,448,434,444,444],
[453,0,449,444,472,428,443,451],
[441,441,0,420,471,454,439,456],
[484,446,470,0,457,448,447,443],
[442,418,419,433,0,420,437,439],
[456,462,436,442,470,0,452,449],
[446,447,451,443,453,438,0,464],
[446,439,434,447,451,441,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,435,463,460,446,445,476],
[467,0,445,469,447,448,449,476],
[455,445,0,454,457,431,439,481],
[427,421,436,0,440,448,444,445],
[430,443,433,450,0,440,446,470],
[444,442,459,442,450,0,440,502],
[445,441,451,446,444,450,0,472],
[414,414,409,445,420,388,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,438,450,417,459,420,445],
[481,0,464,459,455,491,438,473],
[452,426,0,443,434,476,434,433],
[440,431,447,0,435,452,419,440],
[473,435,456,455,0,483,474,457],
[431,399,414,438,407,0,438,435],
[470,452,456,471,416,452,0,471],
[445,417,457,450,433,455,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,458,451,442,473,460,468],
[433,0,451,444,441,444,435,456],
[432,439,0,459,429,452,464,443],
[439,446,431,0,434,466,480,459],
[448,449,461,456,0,443,442,440],
[417,446,438,424,447,0,442,433],
[430,455,426,410,448,448,0,445],
[422,434,447,431,450,457,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,495,451,444,468,487,448],
[469,0,492,461,449,488,445,418],
[395,398,0,423,432,433,450,430],
[439,429,467,0,451,475,465,432],
[446,441,458,439,0,484,498,474],
[422,402,457,415,406,0,459,429],
[403,445,440,425,392,431,0,418],
[442,472,460,458,416,461,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,406,419,389,437,457,422],
[469,0,394,387,351,408,443,469],
[484,496,0,467,408,472,485,438],
[471,503,423,0,434,471,467,470],
[501,539,482,456,0,445,460,500],
[453,482,418,419,445,0,447,470],
[433,447,405,423,430,443,0,414],
[468,421,452,420,390,420,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,469,456,454,479,441,459],
[429,0,447,441,448,470,436,438],
[421,443,0,479,444,453,436,441],
[434,449,411,0,452,461,444,416],
[436,442,446,438,0,445,424,437],
[411,420,437,429,445,0,424,416],
[449,454,454,446,466,466,0,425],
[431,452,449,474,453,474,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,440,431,437,463,454,443],
[453,0,455,433,438,460,455,450],
[450,435,0,456,461,466,450,449],
[459,457,434,0,458,459,459,457],
[453,452,429,432,0,437,460,425],
[427,430,424,431,453,0,448,439],
[436,435,440,431,430,442,0,439],
[447,440,441,433,465,451,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,446,455,446,460,427,449],
[432,0,427,432,461,415,430,419],
[444,463,0,451,455,464,463,441],
[435,458,439,0,470,442,454,426],
[444,429,435,420,0,424,431,409],
[430,475,426,448,466,0,444,435],
[463,460,427,436,459,446,0,427],
[441,471,449,464,481,455,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,401,391,447,451,409,456],
[438,0,411,420,434,465,423,431],
[489,479,0,422,480,477,432,479],
[499,470,468,0,470,477,445,473],
[443,456,410,420,0,464,439,462],
[439,425,413,413,426,0,404,462],
[481,467,458,445,451,486,0,459],
[434,459,411,417,428,428,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,440,459,452,471,443,425],
[420,0,409,423,422,432,421,389],
[450,481,0,475,460,468,460,424],
[431,467,415,0,447,454,434,419],
[438,468,430,443,0,467,442,452],
[419,458,422,436,423,0,429,427],
[447,469,430,456,448,461,0,442],
[465,501,466,471,438,463,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,437,432,441,456,455,459],
[437,0,473,453,436,452,454,442],
[453,417,0,438,435,440,456,459],
[458,437,452,0,442,464,447,438],
[449,454,455,448,0,465,444,453],
[434,438,450,426,425,0,456,455],
[435,436,434,443,446,434,0,436],
[431,448,431,452,437,435,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,430,444,435,440,441,413],
[456,0,441,456,450,450,468,430],
[460,449,0,451,453,455,460,437],
[446,434,439,0,444,440,468,446],
[455,440,437,446,0,465,443,434],
[450,440,435,450,425,0,450,440],
[449,422,430,422,447,440,0,424],
[477,460,453,444,456,450,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,444,445,450,456,454,441],
[412,0,407,435,438,413,443,444],
[446,483,0,445,458,437,460,456],
[445,455,445,0,435,438,450,454],
[440,452,432,455,0,434,444,433],
[434,477,453,452,456,0,458,450],
[436,447,430,440,446,432,0,459],
[449,446,434,436,457,440,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,413,441,453,468,444,461],
[442,0,437,445,498,462,448,475],
[477,453,0,440,462,461,464,448],
[449,445,450,0,466,445,466,469],
[437,392,428,424,0,435,429,446],
[422,428,429,445,455,0,436,462],
[446,442,426,424,461,454,0,474],
[429,415,442,421,444,428,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,399,407,406,409,421,428],
[466,0,443,449,427,433,444,443],
[491,447,0,442,447,457,468,441],
[483,441,448,0,456,458,455,450],
[484,463,443,434,0,453,487,443],
[481,457,433,432,437,0,473,446],
[469,446,422,435,403,417,0,437],
[462,447,449,440,447,444,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,429,422,379,435,483,422],
[494,0,450,439,453,469,498,476],
[461,440,0,412,384,418,490,446],
[468,451,478,0,451,450,510,441],
[511,437,506,439,0,439,499,457],
[455,421,472,440,451,0,494,477],
[407,392,400,380,391,396,0,410],
[468,414,444,449,433,413,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,441,447,444,477,420,478],
[433,0,436,464,467,505,461,459],
[449,454,0,461,459,517,445,478],
[443,426,429,0,448,537,423,430],
[446,423,431,442,0,501,442,468],
[413,385,373,353,389,0,389,399],
[470,429,445,467,448,501,0,428],
[412,431,412,460,422,491,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,436,459,409,439,460,425],
[451,0,452,445,438,440,451,448],
[454,438,0,455,426,464,417,432],
[431,445,435,0,429,442,405,447],
[481,452,464,461,0,460,444,439],
[451,450,426,448,430,0,425,442],
[430,439,473,485,446,465,0,458],
[465,442,458,443,451,448,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,449,453,471,452,450,440],
[433,0,439,451,451,483,449,398],
[441,451,0,464,477,469,450,447],
[437,439,426,0,451,448,449,444],
[419,439,413,439,0,439,441,446],
[438,407,421,442,451,0,428,430],
[440,441,440,441,449,462,0,436],
[450,492,443,446,444,460,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,451,459,452,463,466,468],
[445,0,446,459,435,466,466,452],
[439,444,0,471,455,481,476,469],
[431,431,419,0,444,454,461,451],
[438,455,435,446,0,466,453,447],
[427,424,409,436,424,0,443,429],
[424,424,414,429,437,447,0,448],
[422,438,421,439,443,461,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,475,408,456,495,432,419],
[468,0,460,475,502,468,439,409],
[415,430,0,411,463,462,442,414],
[482,415,479,0,461,488,447,447],
[434,388,427,429,0,456,431,407],
[395,422,428,402,434,0,415,376],
[458,451,448,443,459,475,0,420],
[471,481,476,443,483,514,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,444,479,447,446,433,486],
[402,0,414,437,429,426,470,469],
[446,476,0,433,475,409,436,418],
[411,453,457,0,466,441,464,468],
[443,461,415,424,0,434,423,434],
[444,464,481,449,456,0,474,477],
[457,420,454,426,467,416,0,460],
[404,421,472,422,456,413,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,442,435,477,422,425,445],
[445,0,454,445,486,437,436,463],
[448,436,0,459,470,438,451,451],
[455,445,431,0,461,432,442,437],
[413,404,420,429,0,415,421,425],
[468,453,452,458,475,0,421,453],
[465,454,439,448,469,469,0,464],
[445,427,439,453,465,437,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,453,437,450,468,475,455],
[443,0,449,454,448,468,464,464],
[437,441,0,441,436,440,465,440],
[453,436,449,0,443,444,456,443],
[440,442,454,447,0,457,476,461],
[422,422,450,446,433,0,449,430],
[415,426,425,434,414,441,0,428],
[435,426,450,447,429,460,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,411,468,439,449,440,413],
[460,0,416,416,433,463,435,422],
[479,474,0,471,476,485,471,438],
[422,474,419,0,464,466,456,453],
[451,457,414,426,0,463,464,440],
[441,427,405,424,427,0,412,394],
[450,455,419,434,426,478,0,426],
[477,468,452,437,450,496,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,418,417,443,467,391,520],
[445,0,390,390,419,469,314,443],
[472,500,0,364,447,493,422,523],
[473,500,526,0,367,597,447,575],
[447,471,443,523,0,520,446,544],
[423,421,397,293,370,0,398,497],
[499,576,468,443,444,492,0,465],
[370,447,367,315,346,393,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,452,420,452,442,429,445],
[427,0,424,415,437,437,437,438],
[438,466,0,417,444,426,414,411],
[470,475,473,0,480,474,444,453],
[438,453,446,410,0,427,436,425],
[448,453,464,416,463,0,450,471],
[461,453,476,446,454,440,0,451],
[445,452,479,437,465,419,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,462,446,421,463,432,466],
[459,0,445,439,454,466,421,471],
[428,445,0,426,423,479,433,471],
[444,451,464,0,434,463,455,453],
[469,436,467,456,0,446,421,456],
[427,424,411,427,444,0,431,451],
[458,469,457,435,469,459,0,466],
[424,419,419,437,434,439,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,465,462,437,469,466,464],
[421,0,443,442,431,464,442,443],
[425,447,0,434,420,458,427,445],
[428,448,456,0,450,446,422,436],
[453,459,470,440,0,468,439,434],
[421,426,432,444,422,0,411,428],
[424,448,463,468,451,479,0,463],
[426,447,445,454,456,462,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,430,403,427,453,468,413],
[466,0,447,445,404,436,427,463],
[460,443,0,396,391,413,478,422],
[487,445,494,0,447,463,457,454],
[463,486,499,443,0,461,540,416],
[437,454,477,427,429,0,483,441],
[422,463,412,433,350,407,0,427],
[477,427,468,436,474,449,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,470,455,422,458,446,436],
[435,0,446,410,412,441,433,432],
[420,444,0,434,433,431,426,445],
[435,480,456,0,417,459,462,440],
[468,478,457,473,0,460,433,460],
[432,449,459,431,430,0,435,444],
[444,457,464,428,457,455,0,431],
[454,458,445,450,430,446,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,448,466,459,436,457,452],
[449,0,451,466,438,445,465,434],
[442,439,0,455,418,467,467,463],
[424,424,435,0,428,421,427,434],
[431,452,472,462,0,448,469,452],
[454,445,423,469,442,0,459,445],
[433,425,423,463,421,431,0,437],
[438,456,427,456,438,445,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,461,451,442,454,496,449],
[466,0,487,489,452,479,470,442],
[429,403,0,452,426,433,453,433],
[439,401,438,0,414,406,427,423],
[448,438,464,476,0,486,480,430],
[436,411,457,484,404,0,431,428],
[394,420,437,463,410,459,0,424],
[441,448,457,467,460,462,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,466,457,465,445,443,469],
[451,0,455,479,462,444,449,481],
[424,435,0,433,454,433,452,458],
[433,411,457,0,451,466,430,478],
[425,428,436,439,0,459,425,454],
[445,446,457,424,431,0,426,454],
[447,441,438,460,465,464,0,465],
[421,409,432,412,436,436,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,436,403,424,428,434,426],
[437,0,496,442,431,457,467,455],
[454,394,0,415,404,407,421,428],
[487,448,475,0,431,441,445,484],
[466,459,486,459,0,456,442,446],
[462,433,483,449,434,0,449,460],
[456,423,469,445,448,441,0,429],
[464,435,462,406,444,430,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,417,455,477,458,442,499],
[438,0,408,434,438,429,424,412],
[473,482,0,441,449,446,454,473],
[435,456,449,0,430,430,425,457],
[413,452,441,460,0,408,443,425],
[432,461,444,460,482,0,451,463],
[448,466,436,465,447,439,0,464],
[391,478,417,433,465,427,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,426,455,466,447,454,442],
[443,0,448,467,465,452,448,437],
[464,442,0,450,471,456,455,443],
[435,423,440,0,440,432,425,427],
[424,425,419,450,0,439,436,430],
[443,438,434,458,451,0,455,461],
[436,442,435,465,454,435,0,452],
[448,453,447,463,460,429,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,446,508,489,518,466,471],
[454,0,427,469,451,508,460,513],
[444,463,0,457,455,465,442,456],
[382,421,433,0,412,451,414,437],
[401,439,435,478,0,458,440,426],
[372,382,425,439,432,0,426,438],
[424,430,448,476,450,464,0,473],
[419,377,434,453,464,452,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,440,434,432,446,454,454],
[445,0,425,449,420,427,466,442],
[450,465,0,426,459,433,445,487],
[456,441,464,0,450,458,465,483],
[458,470,431,440,0,432,465,443],
[444,463,457,432,458,0,466,466],
[436,424,445,425,425,424,0,435],
[436,448,403,407,447,424,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,459,470,490,453,488,440],
[439,0,466,451,448,454,449,456],
[431,424,0,440,429,429,403,432],
[420,439,450,0,433,420,415,432],
[400,442,461,457,0,440,450,448],
[437,436,461,470,450,0,418,447],
[402,441,487,475,440,472,0,446],
[450,434,458,458,442,443,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,442,442,458,443,447,411],
[449,0,432,451,433,464,445,431],
[448,458,0,428,457,429,447,436],
[448,439,462,0,440,425,455,451],
[432,457,433,450,0,455,463,407],
[447,426,461,465,435,0,447,425],
[443,445,443,435,427,443,0,418],
[479,459,454,439,483,465,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,438,528,474,482,440,400],
[400,0,461,478,421,464,435,438],
[452,429,0,474,441,503,500,442],
[362,412,416,0,343,444,371,453],
[416,469,449,547,0,439,442,433],
[408,426,387,446,451,0,388,433],
[450,455,390,519,448,502,0,469],
[490,452,448,437,457,457,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,437,449,465,454,465,440],
[436,0,459,469,480,448,465,457],
[453,431,0,447,460,469,473,443],
[441,421,443,0,453,438,456,418],
[425,410,430,437,0,418,436,415],
[436,442,421,452,472,0,461,427],
[425,425,417,434,454,429,0,415],
[450,433,447,472,475,463,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,416,431,408,410,411,404],
[485,0,464,472,437,476,451,461],
[474,426,0,444,423,436,432,430],
[459,418,446,0,448,445,415,414],
[482,453,467,442,0,462,436,452],
[480,414,454,445,428,0,408,438],
[479,439,458,475,454,482,0,454],
[486,429,460,476,438,452,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,449,379,377,428,444,455],
[467,0,421,448,436,432,426,467],
[441,469,0,447,447,433,470,500],
[511,442,443,0,406,402,460,451],
[513,454,443,484,0,470,487,520],
[462,458,457,488,420,0,477,489],
[446,464,420,430,403,413,0,483],
[435,423,390,439,370,401,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,416,412,439,432,419,457],
[479,0,443,451,462,426,452,493],
[474,447,0,446,458,450,435,460],
[478,439,444,0,430,443,435,455],
[451,428,432,460,0,454,435,435],
[458,464,440,447,436,0,431,459],
[471,438,455,455,455,459,0,448],
[433,397,430,435,455,431,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,480,487,474,357,491,421],
[396,0,439,466,413,426,479,413],
[410,451,0,473,440,470,434,459],
[403,424,417,0,383,385,479,434],
[416,477,450,507,0,484,478,407],
[533,464,420,505,406,0,473,403],
[399,411,456,411,412,417,0,437],
[469,477,431,456,483,487,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,424,413,405,415,414,405],
[459,0,458,429,436,441,414,406],
[466,432,0,442,458,447,449,463],
[477,461,448,0,417,447,419,440],
[485,454,432,473,0,460,422,417],
[475,449,443,443,430,0,431,426],
[476,476,441,471,468,459,0,443],
[485,484,427,450,473,464,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,452,443,439,445,446,433],
[437,0,436,433,432,424,429,409],
[438,454,0,440,444,420,416,420],
[447,457,450,0,454,445,443,439],
[451,458,446,436,0,430,437,439],
[445,466,470,445,460,0,435,446],
[444,461,474,447,453,455,0,437],
[457,481,470,451,451,444,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,446,444,435,460,460,438],
[450,0,481,469,432,477,467,464],
[444,409,0,458,398,447,470,441],
[446,421,432,0,449,448,455,451],
[455,458,492,441,0,496,485,451],
[430,413,443,442,394,0,432,438],
[430,423,420,435,405,458,0,460],
[452,426,449,439,439,452,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,436,445,439,434,428,448],
[434,0,447,424,443,405,436,426],
[454,443,0,449,428,411,416,453],
[445,466,441,0,456,449,445,462],
[451,447,462,434,0,439,446,434],
[456,485,479,441,451,0,444,453],
[462,454,474,445,444,446,0,454],
[442,464,437,428,456,437,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,456,438,467,472,476,459],
[418,0,397,434,417,472,501,413],
[434,493,0,411,462,483,498,483],
[452,456,479,0,404,487,474,511],
[423,473,428,486,0,524,469,429],
[418,418,407,403,366,0,397,398],
[414,389,392,416,421,493,0,457],
[431,477,407,379,461,492,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,464,458,470,458,473,443],
[418,0,454,450,463,417,485,458],
[426,436,0,454,449,440,458,436],
[432,440,436,0,441,433,456,466],
[420,427,441,449,0,423,469,442],
[432,473,450,457,467,0,483,461],
[417,405,432,434,421,407,0,434],
[447,432,454,424,448,429,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,427,438,436,441,434,455],
[433,0,443,430,406,446,421,432],
[463,447,0,469,423,461,442,454],
[452,460,421,0,426,440,424,451],
[454,484,467,464,0,451,440,470],
[449,444,429,450,439,0,434,431],
[456,469,448,466,450,456,0,432],
[435,458,436,439,420,459,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,455,439,451,453,448,457],
[451,0,460,447,433,437,461,442],
[435,430,0,431,428,430,447,421],
[451,443,459,0,425,455,454,440],
[439,457,462,465,0,460,454,458],
[437,453,460,435,430,0,442,453],
[442,429,443,436,436,448,0,441],
[433,448,469,450,432,437,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,426,421,441,434,424,430],
[438,0,429,407,423,417,431,410],
[464,461,0,438,462,452,438,440],
[469,483,452,0,444,445,457,446],
[449,467,428,446,0,448,416,450],
[456,473,438,445,442,0,437,417],
[466,459,452,433,474,453,0,447],
[460,480,450,444,440,473,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,448,444,467,472,441,482],
[433,0,414,436,447,469,456,466],
[442,476,0,445,449,495,447,461],
[446,454,445,0,476,486,455,465],
[423,443,441,414,0,465,449,447],
[418,421,395,404,425,0,421,427],
[449,434,443,435,441,469,0,445],
[408,424,429,425,443,463,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,477,418,446,486,415,452],
[439,0,487,408,436,461,450,461],
[413,403,0,377,396,488,445,360],
[472,482,513,0,455,474,464,434],
[444,454,494,435,0,481,467,470],
[404,429,402,416,409,0,478,393],
[475,440,445,426,423,412,0,419],
[438,429,530,456,420,497,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,474,458,464,470,445,467],
[431,0,424,453,442,444,434,428],
[416,466,0,459,449,457,415,426],
[432,437,431,0,441,463,444,423],
[426,448,441,449,0,433,433,435],
[420,446,433,427,457,0,423,432],
[445,456,475,446,457,467,0,449],
[423,462,464,467,455,458,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,463,434,458,451,451,482],
[460,0,450,450,450,472,430,484],
[427,440,0,480,466,438,430,459],
[456,440,410,0,452,429,433,474],
[432,440,424,438,0,428,448,492],
[439,418,452,461,462,0,421,458],
[439,460,460,457,442,469,0,462],
[408,406,431,416,398,432,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,456,484,465,483,491,447],
[454,0,416,429,472,430,456,419],
[434,474,0,481,481,506,491,497],
[406,461,409,0,448,480,457,448],
[425,418,409,442,0,461,441,408],
[407,460,384,410,429,0,424,422],
[399,434,399,433,449,466,0,424],
[443,471,393,442,482,468,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,432,422,437,437,410,442],
[443,0,432,446,460,447,429,444],
[458,458,0,454,476,454,443,453],
[468,444,436,0,465,441,428,471],
[453,430,414,425,0,414,423,429],
[453,443,436,449,476,0,433,445],
[480,461,447,462,467,457,0,445],
[448,446,437,419,461,445,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,447,454,483,458,435,508],
[445,0,464,440,450,443,447,482],
[443,426,0,449,455,456,434,456],
[436,450,441,0,433,429,416,465],
[407,440,435,457,0,437,425,463],
[432,447,434,461,453,0,430,465],
[455,443,456,474,465,460,0,491],
[382,408,434,425,427,425,399,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,420,450,423,425,432,448],
[464,0,451,440,458,472,457,473],
[470,439,0,458,452,439,422,437],
[440,450,432,0,439,449,426,468],
[467,432,438,451,0,437,393,454],
[465,418,451,441,453,0,429,470],
[458,433,468,464,497,461,0,487],
[442,417,453,422,436,420,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,468,472,499,415,446,499],
[473,0,445,446,470,582,477,531],
[422,445,0,448,500,447,476,559],
[418,444,442,0,527,611,475,613],
[391,420,390,363,0,390,504,337],
[475,308,443,279,500,0,421,532],
[444,413,414,415,386,469,0,444],
[391,359,331,277,553,358,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,458,464,440,454,479,431],
[459,0,465,437,455,459,495,446],
[432,425,0,420,443,457,491,431],
[426,453,470,0,465,470,513,433],
[450,435,447,425,0,453,502,437],
[436,431,433,420,437,0,468,417],
[411,395,399,377,388,422,0,433],
[459,444,459,457,453,473,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,440,442,436,450,444,434],
[450,0,437,438,414,426,436,434],
[450,453,0,446,426,455,443,443],
[448,452,444,0,428,462,445,440],
[454,476,464,462,0,450,442,461],
[440,464,435,428,440,0,439,443],
[446,454,447,445,448,451,0,446],
[456,456,447,450,429,447,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,441,431,507,499,479,465],
[447,0,426,420,507,500,442,437],
[449,464,0,507,532,517,470,445],
[459,470,383,0,508,483,451,448],
[383,383,358,382,0,390,400,412],
[391,390,373,407,500,0,412,421],
[411,448,420,439,490,478,0,449],
[425,453,445,442,478,469,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,479,445,462,491,455,465],
[416,0,450,428,438,469,457,450],
[411,440,0,428,440,460,452,446],
[445,462,462,0,441,477,447,472],
[428,452,450,449,0,465,448,449],
[399,421,430,413,425,0,433,459],
[435,433,438,443,442,457,0,450],
[425,440,444,418,441,431,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,433,483,475,464,445,449],
[433,0,419,453,457,454,441,433],
[457,471,0,454,478,465,445,442],
[407,437,436,0,455,463,421,432],
[415,433,412,435,0,443,417,426],
[426,436,425,427,447,0,416,423],
[445,449,445,469,473,474,0,449],
[441,457,448,458,464,467,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,450,451,446,416,506,431],
[467,0,466,453,478,435,513,480],
[440,424,0,500,482,501,560,498],
[439,437,390,0,494,470,516,412],
[444,412,408,396,0,517,575,427],
[474,455,389,420,373,0,480,388],
[384,377,330,374,315,410,0,394],
[459,410,392,478,463,502,496,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,478,478,479,459,452,444],
[396,0,471,463,449,430,463,436],
[412,419,0,459,435,432,467,451],
[412,427,431,0,433,434,434,430],
[411,441,455,457,0,451,426,423],
[431,460,458,456,439,0,458,428],
[438,427,423,456,464,432,0,407],
[446,454,439,460,467,462,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,469,468,458,451,440,459],
[435,0,449,439,455,443,447,451],
[421,441,0,413,450,433,437,448],
[422,451,477,0,463,451,471,437],
[432,435,440,427,0,450,453,458],
[439,447,457,439,440,0,448,433],
[450,443,453,419,437,442,0,440],
[431,439,442,453,432,457,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,446,465,455,436,425,437],
[443,0,441,441,432,416,429,449],
[444,449,0,457,427,421,447,441],
[425,449,433,0,441,434,445,436],
[435,458,463,449,0,446,450,440],
[454,474,469,456,444,0,460,470],
[465,461,443,445,440,430,0,455],
[453,441,449,454,450,420,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,472,443,456,469,472,431],
[412,0,451,425,452,460,404,442],
[418,439,0,439,445,471,435,444],
[447,465,451,0,451,483,441,452],
[434,438,445,439,0,465,422,426],
[421,430,419,407,425,0,419,404],
[418,486,455,449,468,471,0,458],
[459,448,446,438,464,486,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,435,451,464,485,471,462],
[469,0,441,448,472,433,478,424],
[455,449,0,397,446,428,453,437],
[439,442,493,0,454,454,458,436],
[426,418,444,436,0,455,420,404],
[405,457,462,436,435,0,474,446],
[419,412,437,432,470,416,0,432],
[428,466,453,454,486,444,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,452,443,462,469,459,451],
[449,0,411,450,448,462,451,431],
[438,479,0,461,496,455,464,456],
[447,440,429,0,475,465,448,456],
[428,442,394,415,0,430,440,450],
[421,428,435,425,460,0,435,437],
[431,439,426,442,450,455,0,423],
[439,459,434,434,440,453,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,481,364,440,421,519,443],
[433,0,550,386,582,441,504,448],
[409,340,0,389,483,384,425,387],
[526,504,501,0,598,533,444,561],
[450,308,407,292,0,346,383,427],
[469,449,506,357,544,0,484,490],
[371,386,465,446,507,406,0,406],
[447,442,503,329,463,400,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,440,460,441,465,462,454],
[424,0,414,416,444,433,480,439],
[450,476,0,421,456,476,457,446],
[430,474,469,0,448,464,493,464],
[449,446,434,442,0,473,456,451],
[425,457,414,426,417,0,451,423],
[428,410,433,397,434,439,0,428],
[436,451,444,426,439,467,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,440,428,446,433,421,447],
[470,0,431,452,473,457,474,473],
[450,459,0,436,461,448,433,457],
[462,438,454,0,454,444,439,458],
[444,417,429,436,0,431,419,429],
[457,433,442,446,459,0,462,453],
[469,416,457,451,471,428,0,447],
[443,417,433,432,461,437,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,452,452,450,436,432,435],
[478,0,475,470,473,459,435,463],
[438,415,0,447,427,454,454,451],
[438,420,443,0,450,445,422,403],
[440,417,463,440,0,454,448,435],
[454,431,436,445,436,0,415,433],
[458,455,436,468,442,475,0,420],
[455,427,439,487,455,457,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,577,490,490,488,490,576],
[445,0,528,358,442,487,352,574],
[313,362,0,359,402,446,356,536],
[400,532,531,0,354,397,534,487],
[400,448,488,536,0,579,399,536],
[402,403,444,493,311,0,269,445],
[400,538,534,356,491,621,0,622],
[314,316,354,403,354,445,268,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,398,483,451,421,438,468],
[441,0,419,465,454,402,439,500],
[492,471,0,492,477,467,414,450],
[407,425,398,0,420,350,413,427],
[439,436,413,470,0,415,448,441],
[469,488,423,540,475,0,450,491],
[452,451,476,477,442,440,0,447],
[422,390,440,463,449,399,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,474,498,498,512,427,492],
[405,0,407,465,436,421,424,434],
[416,483,0,506,417,437,410,454],
[392,425,384,0,382,425,378,428],
[392,454,473,508,0,430,462,424],
[378,469,453,465,460,0,418,440],
[463,466,480,512,428,472,0,472],
[398,456,436,462,466,450,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,421,456,512,499,458,526],
[415,0,450,425,418,481,440,466],
[469,440,0,446,405,499,464,502],
[434,465,444,0,413,458,479,454],
[378,472,485,477,0,425,412,465],
[391,409,391,432,465,0,372,445],
[432,450,426,411,478,518,0,441],
[364,424,388,436,425,445,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,408,422,422,391,414,412],
[411,0,400,403,385,392,420,399],
[482,490,0,443,464,443,466,428],
[468,487,447,0,438,431,466,460],
[468,505,426,452,0,456,461,455],
[499,498,447,459,434,0,441,441],
[476,470,424,424,429,449,0,431],
[478,491,462,430,435,449,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,482,451,436,445,467,443],
[411,0,497,463,457,440,444,456],
[408,393,0,396,414,401,419,395],
[439,427,494,0,477,438,460,425],
[454,433,476,413,0,433,465,433],
[445,450,489,452,457,0,482,436],
[423,446,471,430,425,408,0,442],
[447,434,495,465,457,454,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,474,454,442,435,423,452],
[423,0,468,436,453,426,417,473],
[416,422,0,396,434,405,388,418],
[436,454,494,0,466,463,459,472],
[448,437,456,424,0,446,424,469],
[455,464,485,427,444,0,434,468],
[467,473,502,431,466,456,0,478],
[438,417,472,418,421,422,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,447,440,456,402,475,456],
[451,0,425,457,434,428,449,456],
[443,465,0,466,439,427,470,465],
[450,433,424,0,440,448,462,454],
[434,456,451,450,0,445,466,436],
[488,462,463,442,445,0,479,462],
[415,441,420,428,424,411,0,431],
[434,434,425,436,454,428,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,418,446,498,466,409,406],
[447,0,454,469,482,499,445,455],
[472,436,0,492,486,501,437,446],
[444,421,398,0,414,438,376,392],
[392,408,404,476,0,406,377,402],
[424,391,389,452,484,0,434,424],
[481,445,453,514,513,456,0,479],
[484,435,444,498,488,466,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,445,438,373,442,447,472],
[400,0,433,402,380,407,397,377],
[445,457,0,454,410,433,432,421],
[452,488,436,0,397,431,416,449],
[517,510,480,493,0,424,425,423],
[448,483,457,459,466,0,422,433],
[443,493,458,474,465,468,0,461],
[418,513,469,441,467,457,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,462,448,465,463,466,460],
[476,0,460,460,464,457,443,452],
[428,430,0,434,448,461,409,442],
[442,430,456,0,459,437,458,463],
[425,426,442,431,0,418,425,398],
[427,433,429,453,472,0,427,407],
[424,447,481,432,465,463,0,429],
[430,438,448,427,492,483,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,414,435,431,425,448,436],
[456,0,427,447,458,442,462,458],
[476,463,0,442,452,469,470,445],
[455,443,448,0,439,436,460,454],
[459,432,438,451,0,446,457,450],
[465,448,421,454,444,0,450,453],
[442,428,420,430,433,440,0,431],
[454,432,445,436,440,437,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,438,512,457,452,484,447],
[416,0,463,463,422,445,431,451],
[452,427,0,512,456,467,465,464],
[378,427,378,0,412,365,411,394],
[433,468,434,478,0,435,445,434],
[438,445,423,525,455,0,459,438],
[406,459,425,479,445,431,0,427],
[443,439,426,496,456,452,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,443,454,425,440,428,412],
[410,0,414,403,397,422,420,429],
[447,476,0,436,435,476,428,463],
[436,487,454,0,448,465,451,463],
[465,493,455,442,0,470,448,509],
[450,468,414,425,420,0,440,425],
[462,470,462,439,442,450,0,457],
[478,461,427,427,381,465,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,349,400,477,393,357,396],
[442,0,397,420,468,409,363,383],
[541,493,0,477,478,435,402,371],
[490,470,413,0,466,457,376,445],
[413,422,412,424,0,354,359,320],
[497,481,455,433,536,0,401,408],
[533,527,488,514,531,489,0,445],
[494,507,519,445,570,482,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,445,439,439,478,470,467],
[424,0,441,436,447,451,434,444],
[445,449,0,460,468,480,459,493],
[451,454,430,0,463,483,465,462],
[451,443,422,427,0,461,449,468],
[412,439,410,407,429,0,440,450],
[420,456,431,425,441,450,0,455],
[423,446,397,428,422,440,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,434,430,395,404,467,414],
[461,0,470,485,453,420,476,475],
[456,420,0,494,451,383,453,456],
[460,405,396,0,426,412,420,442],
[495,437,439,464,0,453,470,476],
[486,470,507,478,437,0,477,493],
[423,414,437,470,420,413,0,445],
[476,415,434,448,414,397,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,396,428,427,449,416,451],
[473,0,436,449,447,478,440,471],
[494,454,0,464,434,496,480,503],
[462,441,426,0,433,486,442,476],
[463,443,456,457,0,494,459,462],
[441,412,394,404,396,0,407,453],
[474,450,410,448,431,483,0,456],
[439,419,387,414,428,437,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,438,431,442,437,430,405],
[448,0,435,439,438,453,419,412],
[452,455,0,423,466,437,447,416],
[459,451,467,0,460,453,442,452],
[448,452,424,430,0,435,439,438],
[453,437,453,437,455,0,468,437],
[460,471,443,448,451,422,0,413],
[485,478,474,438,452,453,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,376,516,417,331,440,438],
[419,0,348,405,415,357,436,390],
[514,542,0,464,493,407,529,441],
[374,485,426,0,398,455,422,439],
[473,475,397,492,0,416,445,477],
[559,533,483,435,474,0,531,409],
[450,454,361,468,445,359,0,449],
[452,500,449,451,413,481,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,442,425,453,461,474,459],
[427,0,427,406,431,457,450,449],
[448,463,0,436,431,468,456,462],
[465,484,454,0,445,477,457,493],
[437,459,459,445,0,483,441,445],
[429,433,422,413,407,0,440,416],
[416,440,434,433,449,450,0,424],
[431,441,428,397,445,474,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,462,462,476,455,441,439],
[441,0,412,451,461,445,445,449],
[428,478,0,458,457,472,452,445],
[428,439,432,0,468,461,439,431],
[414,429,433,422,0,447,434,445],
[435,445,418,429,443,0,422,444],
[449,445,438,451,456,468,0,449],
[451,441,445,459,445,446,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,420,436,455,451,448,452],
[444,0,425,443,440,472,427,442],
[470,465,0,438,463,473,435,466],
[454,447,452,0,453,458,442,444],
[435,450,427,437,0,464,430,448],
[439,418,417,432,426,0,433,449],
[442,463,455,448,460,457,0,449],
[438,448,424,446,442,441,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,391,446,397,426,434,458],
[458,0,430,424,425,442,449,462],
[499,460,0,460,460,479,440,472],
[444,466,430,0,433,422,437,464],
[493,465,430,457,0,436,472,491],
[464,448,411,468,454,0,456,473],
[456,441,450,453,418,434,0,429],
[432,428,418,426,399,417,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,480,491,474,438,457,453],
[434,0,464,458,455,461,485,462],
[410,426,0,414,454,423,440,445],
[399,432,476,0,471,449,442,462],
[416,435,436,419,0,449,458,457],
[452,429,467,441,441,0,459,467],
[433,405,450,448,432,431,0,449],
[437,428,445,428,433,423,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,476,469,416,485,473,459],
[451,0,471,439,460,467,433,448],
[414,419,0,407,413,428,408,443],
[421,451,483,0,406,469,435,479],
[474,430,477,484,0,488,491,452],
[405,423,462,421,402,0,435,428],
[417,457,482,455,399,455,0,412],
[431,442,447,411,438,462,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,454,441,462,439,446,462],
[452,0,436,462,434,442,460,456],
[436,454,0,469,440,425,463,449],
[449,428,421,0,419,433,464,440],
[428,456,450,471,0,449,457,441],
[451,448,465,457,441,0,456,460],
[444,430,427,426,433,434,0,435],
[428,434,441,450,449,430,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,509,470,450,467,423,475,498],
[381,0,463,419,417,426,441,443],
[420,427,0,425,446,461,472,459],
[440,471,465,0,476,453,485,480],
[423,473,444,414,0,452,487,475],
[467,464,429,437,438,0,490,470],
[415,449,418,405,403,400,0,407],
[392,447,431,410,415,420,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,428,378,371,388,405,392],
[491,0,481,474,497,474,463,427],
[462,409,0,468,448,417,473,443],
[512,416,422,0,433,516,523,502],
[519,393,442,457,0,466,496,451],
[502,416,473,374,424,0,424,466],
[485,427,417,367,394,466,0,466],
[498,463,447,388,439,424,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,446,442,457,467,430,436],
[455,0,450,423,440,428,425,442],
[444,440,0,437,458,439,422,421],
[448,467,453,0,456,446,451,419],
[433,450,432,434,0,430,436,423],
[423,462,451,444,460,0,444,430],
[460,465,468,439,454,446,0,449],
[454,448,469,471,467,460,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,490,434,447,442,437,468],
[451,0,477,448,481,482,434,479],
[400,413,0,413,460,439,430,465],
[456,442,477,0,466,470,454,475],
[443,409,430,424,0,448,428,446],
[448,408,451,420,442,0,443,464],
[453,456,460,436,462,447,0,485],
[422,411,425,415,444,426,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,366,370,432,398,488,583,460],
[524,0,368,406,459,520,551,554],
[520,522,0,368,492,583,579,579],
[458,484,522,0,457,489,610,363],
[492,431,398,433,0,553,551,521],
[402,370,307,401,337,0,429,491],
[307,339,311,280,339,461,0,370],
[430,336,311,527,369,399,520,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,327,419,425,463,372,455],
[433,0,416,457,468,453,416,456],
[563,474,0,495,425,507,458,490],
[471,433,395,0,438,513,447,479],
[465,422,465,452,0,488,467,479],
[427,437,383,377,402,0,398,429],
[518,474,432,443,423,492,0,451],
[435,434,400,411,411,461,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,389,440,447,376,436,423],
[434,0,391,455,438,401,448,434],
[501,499,0,500,481,391,426,486],
[450,435,390,0,424,389,405,417],
[443,452,409,466,0,386,452,444],
[514,489,499,501,504,0,466,443],
[454,442,464,485,438,424,0,420],
[467,456,404,473,446,447,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,416,419,430,432,411,416],
[468,0,440,462,466,455,459,448],
[474,450,0,443,469,456,456,447],
[471,428,447,0,441,451,454,444],
[460,424,421,449,0,438,450,426],
[458,435,434,439,452,0,432,440],
[479,431,434,436,440,458,0,438],
[474,442,443,446,464,450,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,425,432,431,461,458,414],
[433,0,430,419,413,436,422,414],
[465,460,0,418,439,436,421,418],
[458,471,472,0,449,458,473,445],
[459,477,451,441,0,490,440,430],
[429,454,454,432,400,0,434,417],
[432,468,469,417,450,456,0,436],
[476,476,472,445,460,473,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,454,454,463,439,440,439],
[448,0,440,433,453,427,425,416],
[436,450,0,440,417,421,436,440],
[436,457,450,0,433,455,436,427],
[427,437,473,457,0,414,446,427],
[451,463,469,435,476,0,454,447],
[450,465,454,454,444,436,0,441],
[451,474,450,463,463,443,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,439,458,438,442,443,531],
[420,0,466,426,428,442,432,493],
[451,424,0,419,438,431,455,485],
[432,464,471,0,482,454,481,506],
[452,462,452,408,0,400,444,464],
[448,448,459,436,490,0,473,473],
[447,458,435,409,446,417,0,478],
[359,397,405,384,426,417,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,466,445,441,446,459,457],
[437,0,430,439,445,450,449,444],
[424,460,0,448,443,459,427,461],
[445,451,442,0,438,444,435,452],
[449,445,447,452,0,455,461,486],
[444,440,431,446,435,0,449,459],
[431,441,463,455,429,441,0,454],
[433,446,429,438,404,431,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,418,417,481,433,466,477],
[451,0,447,448,474,475,442,477],
[472,443,0,458,480,456,445,478],
[473,442,432,0,460,446,462,461],
[409,416,410,430,0,438,429,470],
[457,415,434,444,452,0,447,497],
[424,448,445,428,461,443,0,479],
[413,413,412,429,420,393,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,428,421,429,413,444,454],
[474,0,450,435,406,408,443,408],
[462,440,0,436,434,432,426,435],
[469,455,454,0,424,429,454,445],
[461,484,456,466,0,474,436,458],
[477,482,458,461,416,0,416,417],
[446,447,464,436,454,474,0,452],
[436,482,455,445,432,473,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,467,469,501,489,441,492],
[488,0,507,463,463,428,448,509],
[423,383,0,368,493,445,418,482],
[421,427,522,0,397,450,407,477],
[389,427,397,493,0,456,384,466],
[401,462,445,440,434,0,410,439],
[449,442,472,483,506,480,0,516],
[398,381,408,413,424,451,374,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,455,442,437,466,446,440],
[447,0,459,435,474,446,453,471],
[435,431,0,414,412,450,428,433],
[448,455,476,0,423,458,426,442],
[453,416,478,467,0,456,472,446],
[424,444,440,432,434,0,429,425],
[444,437,462,464,418,461,0,446],
[450,419,457,448,444,465,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,470,451,445,447,465,444],
[436,0,485,436,437,437,447,441],
[420,405,0,418,430,418,430,433],
[439,454,472,0,453,431,425,450],
[445,453,460,437,0,448,473,432],
[443,453,472,459,442,0,461,431],
[425,443,460,465,417,429,0,439],
[446,449,457,440,458,459,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,440,533,471,472,444,494],
[415,0,427,490,443,465,458,483],
[450,463,0,498,451,428,477,475],
[357,400,392,0,424,378,439,449],
[419,447,439,466,0,438,449,461],
[418,425,462,512,452,0,476,487],
[446,432,413,451,441,414,0,451],
[396,407,415,441,429,403,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,448,481,438,466,465,460],
[411,0,435,429,423,432,445,437],
[442,455,0,447,429,435,439,456],
[409,461,443,0,433,414,425,432],
[452,467,461,457,0,464,448,441],
[424,458,455,476,426,0,456,438],
[425,445,451,465,442,434,0,432],
[430,453,434,458,449,452,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,450,465,458,442,470,472],
[431,0,442,462,444,446,470,466],
[440,448,0,454,438,458,458,466],
[425,428,436,0,428,419,434,437],
[432,446,452,462,0,435,459,460],
[448,444,432,471,455,0,476,479],
[420,420,432,456,431,414,0,440],
[418,424,424,453,430,411,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,414,405,397,441,473,396],
[429,0,458,431,438,407,404,422],
[476,432,0,436,433,447,397,455],
[485,459,454,0,461,463,442,435],
[493,452,457,429,0,434,422,479],
[449,483,443,427,456,0,417,429],
[417,486,493,448,468,473,0,413],
[494,468,435,455,411,461,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,445,510,447,455,459,481],
[404,0,419,390,392,404,381,378],
[445,471,0,457,426,416,441,435],
[380,500,433,0,439,379,451,439],
[443,498,464,451,0,428,471,487],
[435,486,474,511,462,0,481,472],
[431,509,449,439,419,409,0,443],
[409,512,455,451,403,418,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,473,480,445,457,464,488],
[433,0,438,462,447,420,431,445],
[417,452,0,455,445,446,431,451],
[410,428,435,0,446,435,414,454],
[445,443,445,444,0,415,444,472],
[433,470,444,455,475,0,443,479],
[426,459,459,476,446,447,0,482],
[402,445,439,436,418,411,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,444,436,450,438,419,447],
[429,0,412,400,400,424,422,410],
[446,478,0,449,446,462,443,461],
[454,490,441,0,424,441,430,456],
[440,490,444,466,0,460,452,467],
[452,466,428,449,430,0,444,453],
[471,468,447,460,438,446,0,456],
[443,480,429,434,423,437,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,430,411,436,402,432,430],
[475,0,453,428,448,430,417,447],
[460,437,0,427,450,453,392,467],
[479,462,463,0,464,430,435,458],
[454,442,440,426,0,434,436,458],
[488,460,437,460,456,0,458,451],
[458,473,498,455,454,432,0,474],
[460,443,423,432,432,439,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,432,450,459,417,416,425],
[454,0,444,445,438,454,456,477],
[458,446,0,484,437,442,443,471],
[440,445,406,0,452,439,438,427],
[431,452,453,438,0,458,436,452],
[473,436,448,451,432,0,440,460],
[474,434,447,452,454,450,0,446],
[465,413,419,463,438,430,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,439,451,432,439,432,445],
[456,0,433,469,458,442,448,452],
[451,457,0,452,437,439,440,465],
[439,421,438,0,419,412,429,434],
[458,432,453,471,0,446,430,468],
[451,448,451,478,444,0,443,465],
[458,442,450,461,460,447,0,497],
[445,438,425,456,422,425,393,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,436,426,450,450,442,442],
[451,0,457,471,448,470,484,440],
[454,433,0,454,439,478,465,449],
[464,419,436,0,450,453,468,449],
[440,442,451,440,0,465,470,447],
[440,420,412,437,425,0,443,446],
[448,406,425,422,420,447,0,443],
[448,450,441,441,443,444,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,423,465,411,495,444,448],
[455,0,419,473,447,482,464,414],
[467,471,0,447,461,476,418,425],
[425,417,443,0,439,473,463,479],
[479,443,429,451,0,475,471,424],
[395,408,414,417,415,0,437,419],
[446,426,472,427,419,453,0,396],
[442,476,465,411,466,471,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,462,428,469,457,432,417],
[422,0,417,422,425,421,430,412],
[428,473,0,454,476,478,454,461],
[462,468,436,0,459,458,452,460],
[421,465,414,431,0,439,435,433],
[433,469,412,432,451,0,445,441],
[458,460,436,438,455,445,0,443],
[473,478,429,430,457,449,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,404,460,446,450,441,436],
[485,0,438,451,436,488,447,477],
[486,452,0,482,424,474,490,470],
[430,439,408,0,395,474,445,454],
[444,454,466,495,0,492,476,479],
[440,402,416,416,398,0,435,441],
[449,443,400,445,414,455,0,436],
[454,413,420,436,411,449,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,453,457,453,441,458,443],
[460,0,454,449,474,443,467,450],
[437,436,0,441,450,448,447,467],
[433,441,449,0,442,440,455,436],
[437,416,440,448,0,441,434,445],
[449,447,442,450,449,0,458,435],
[432,423,443,435,456,432,0,441],
[447,440,423,454,445,455,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,454,479,429,463,460,462],
[460,0,457,485,453,442,467,450],
[436,433,0,454,442,448,427,443],
[411,405,436,0,385,425,411,425],
[461,437,448,505,0,452,458,454],
[427,448,442,465,438,0,449,448],
[430,423,463,479,432,441,0,471],
[428,440,447,465,436,442,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,408,429,546,478,494,498],
[417,0,426,411,497,407,415,415],
[482,464,0,466,553,446,432,502],
[461,479,424,0,580,458,480,530],
[344,393,337,310,0,359,412,340],
[412,483,444,432,531,0,432,496],
[396,475,458,410,478,458,0,499],
[392,475,388,360,550,394,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,470,419,409,454,466,426],
[460,0,462,456,385,445,454,462],
[420,428,0,454,396,467,468,433],
[471,434,436,0,461,437,482,451],
[481,505,494,429,0,450,479,473],
[436,445,423,453,440,0,490,439],
[424,436,422,408,411,400,0,431],
[464,428,457,439,417,451,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,482,429,484,453,439,469],
[399,0,444,379,422,435,400,426],
[408,446,0,455,429,429,421,434],
[461,511,435,0,475,465,448,485],
[406,468,461,415,0,467,441,476],
[437,455,461,425,423,0,434,452],
[451,490,469,442,449,456,0,453],
[421,464,456,405,414,438,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,444,437,450,441,447,426],
[458,0,454,458,458,444,463,456],
[446,436,0,438,445,438,433,437],
[453,432,452,0,444,437,431,461],
[440,432,445,446,0,435,449,438],
[449,446,452,453,455,0,442,446],
[443,427,457,459,441,448,0,447],
[464,434,453,429,452,444,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,409,414,458,452,465,431],
[459,0,423,445,441,485,458,443],
[481,467,0,461,478,473,442,440],
[476,445,429,0,454,460,456,468],
[432,449,412,436,0,454,444,428],
[438,405,417,430,436,0,439,418],
[425,432,448,434,446,451,0,435],
[459,447,450,422,462,472,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,450,427,448,480,466,448],
[455,0,441,480,488,488,503,435],
[440,449,0,446,429,476,449,422],
[463,410,444,0,498,459,468,428],
[442,402,461,392,0,434,462,434],
[410,402,414,431,456,0,462,442],
[424,387,441,422,428,428,0,373],
[442,455,468,462,456,448,517,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,482,470,462,455,465,444],
[418,0,458,460,432,441,463,428],
[408,432,0,441,420,438,454,438],
[420,430,449,0,421,425,446,419],
[428,458,470,469,0,450,461,443],
[435,449,452,465,440,0,443,455],
[425,427,436,444,429,447,0,435],
[446,462,452,471,447,435,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,453,464,446,441,453,447],
[415,0,437,448,433,431,430,466],
[437,453,0,477,454,464,453,448],
[426,442,413,0,435,450,428,455],
[444,457,436,455,0,453,445,467],
[449,459,426,440,437,0,413,450],
[437,460,437,462,445,477,0,459],
[443,424,442,435,423,440,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,404,406,416,413,433,420],
[463,0,435,438,438,467,480,483],
[486,455,0,472,443,445,451,450],
[484,452,418,0,445,412,428,464],
[474,452,447,445,0,428,437,447],
[477,423,445,478,462,0,433,458],
[457,410,439,462,453,457,0,456],
[470,407,440,426,443,432,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,481,469,445,461,465,459],
[439,0,432,453,440,448,469,448],
[409,458,0,449,430,451,461,444],
[421,437,441,0,446,464,469,444],
[445,450,460,444,0,461,469,472],
[429,442,439,426,429,0,429,460],
[425,421,429,421,421,461,0,454],
[431,442,446,446,418,430,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,412,429,453,441,479,428],
[462,0,443,436,451,450,488,454],
[478,447,0,452,471,462,499,442],
[461,454,438,0,489,462,506,457],
[437,439,419,401,0,445,472,413],
[449,440,428,428,445,0,468,424],
[411,402,391,384,418,422,0,402],
[462,436,448,433,477,466,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,465,448,435,431,458,439],
[460,0,456,440,457,439,472,443],
[425,434,0,420,426,427,442,417],
[442,450,470,0,454,442,490,450],
[455,433,464,436,0,456,469,439],
[459,451,463,448,434,0,460,441],
[432,418,448,400,421,430,0,420],
[451,447,473,440,451,449,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,441,449,439,435,425,448],
[452,0,419,461,433,420,418,448],
[449,471,0,459,431,426,437,462],
[441,429,431,0,413,433,417,443],
[451,457,459,477,0,459,438,454],
[455,470,464,457,431,0,471,466],
[465,472,453,473,452,419,0,445],
[442,442,428,447,436,424,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,477,527,450,472,420,451],
[419,0,469,455,445,441,440,438],
[413,421,0,457,394,440,436,440],
[363,435,433,0,436,415,430,425],
[440,445,496,454,0,453,451,437],
[418,449,450,475,437,0,452,440],
[470,450,454,460,439,438,0,443],
[439,452,450,465,453,450,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,377,378,518,423,420,377,424],
[513,0,376,749,420,514,470,468],
[512,514,0,562,514,467,374,516],
[372,141,328,0,281,326,281,325],
[467,470,376,609,0,466,426,422],
[470,376,423,564,424,0,472,422],
[513,420,516,609,464,418,0,514],
[466,422,374,565,468,468,376,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,460,392,429,447,453,445],
[464,0,441,447,441,438,462,472],
[430,449,0,393,429,431,444,435],
[498,443,497,0,467,464,485,490],
[461,449,461,423,0,473,453,462],
[443,452,459,426,417,0,453,446],
[437,428,446,405,437,437,0,455],
[445,418,455,400,428,444,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,439,426,469,469,436,431],
[475,0,460,440,415,398,435,426],
[451,430,0,456,482,485,427,457],
[464,450,434,0,470,501,427,421],
[421,475,408,420,0,424,453,417],
[421,492,405,389,466,0,486,401],
[454,455,463,463,437,404,0,414],
[459,464,433,469,473,489,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,547,461,429,489,599,546,460],
[343,0,491,371,515,401,515,458],
[429,399,0,428,403,481,427,427],
[461,519,462,0,487,546,488,431],
[401,375,487,403,0,544,456,459],
[291,489,409,344,346,0,432,350],
[344,375,463,402,434,458,0,345],
[430,432,463,459,431,540,545,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,450,458,446,449,450,454],
[455,0,435,435,442,451,436,462],
[440,455,0,445,440,448,461,459],
[432,455,445,0,454,453,492,462],
[444,448,450,436,0,449,454,434],
[441,439,442,437,441,0,451,447],
[440,454,429,398,436,439,0,447],
[436,428,431,428,456,443,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,443,449,409,409,425,444],
[441,0,462,445,414,419,427,439],
[447,428,0,420,419,404,441,420],
[441,445,470,0,421,413,412,417],
[481,476,471,469,0,440,464,453],
[481,471,486,477,450,0,454,442],
[465,463,449,478,426,436,0,411],
[446,451,470,473,437,448,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,432,405,409,445,449,449],
[438,0,421,443,417,472,435,466],
[458,469,0,441,476,461,477,505],
[485,447,449,0,418,465,440,445],
[481,473,414,472,0,493,454,497],
[445,418,429,425,397,0,409,427],
[441,455,413,450,436,481,0,464],
[441,424,385,445,393,463,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,441,454,455,470,431,425],
[454,0,449,441,458,481,415,464],
[449,441,0,435,440,445,418,441],
[436,449,455,0,421,416,414,414],
[435,432,450,469,0,459,449,457],
[420,409,445,474,431,0,420,417],
[459,475,472,476,441,470,0,502],
[465,426,449,476,433,473,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,468,438,452,453,398,400],
[439,0,431,428,442,453,431,426],
[422,459,0,423,439,442,434,423],
[452,462,467,0,462,473,473,445],
[438,448,451,428,0,424,449,421],
[437,437,448,417,466,0,435,420],
[492,459,456,417,441,455,0,424],
[490,464,467,445,469,470,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,460,443,422,431,431,447],
[431,0,457,428,420,439,417,426],
[430,433,0,409,431,387,399,437],
[447,462,481,0,422,461,394,441],
[468,470,459,468,0,435,452,440],
[459,451,503,429,455,0,431,475],
[459,473,491,496,438,459,0,450],
[443,464,453,449,450,415,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,449,464,436,420,457,440],
[458,0,446,441,426,448,480,467],
[441,444,0,449,442,439,449,438],
[426,449,441,0,436,414,458,462],
[454,464,448,454,0,440,448,481],
[470,442,451,476,450,0,477,470],
[433,410,441,432,442,413,0,439],
[450,423,452,428,409,420,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,485,449,423,443,461,476],
[446,0,454,438,449,448,443,423],
[405,436,0,434,400,433,448,405],
[441,452,456,0,430,443,422,413],
[467,441,490,460,0,441,473,444],
[447,442,457,447,449,0,440,494],
[429,447,442,468,417,450,0,433],
[414,467,485,477,446,396,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,414,458,428,414,449,433],
[462,0,431,466,452,435,447,436],
[476,459,0,459,455,445,460,446],
[432,424,431,0,427,424,455,430],
[462,438,435,463,0,464,465,454],
[476,455,445,466,426,0,490,461],
[441,443,430,435,425,400,0,428],
[457,454,444,460,436,429,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,429,388,412,426,442,412],
[444,0,431,399,413,436,441,448],
[461,459,0,441,446,445,467,464],
[502,491,449,0,441,472,484,463],
[478,477,444,449,0,475,467,477],
[464,454,445,418,415,0,465,432],
[448,449,423,406,423,425,0,419],
[478,442,426,427,413,458,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,440,429,434,411,446,426],
[461,0,462,450,430,441,439,438],
[450,428,0,426,468,408,445,427],
[461,440,464,0,466,449,477,445],
[456,460,422,424,0,433,443,424],
[479,449,482,441,457,0,449,426],
[444,451,445,413,447,441,0,395],
[464,452,463,445,466,464,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,468,428,428,441,490,431],
[448,0,453,471,433,480,434,448],
[422,437,0,435,419,447,403,433],
[462,419,455,0,448,438,435,413],
[462,457,471,442,0,476,437,424],
[449,410,443,452,414,0,404,413],
[400,456,487,455,453,486,0,435],
[459,442,457,477,466,477,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,502,457,399,459,409,422,413],
[388,0,369,365,385,378,368,355],
[433,521,0,392,485,430,392,455],
[491,525,498,0,531,478,438,528],
[431,505,405,359,0,348,393,378],
[481,512,460,412,542,0,447,470],
[468,522,498,452,497,443,0,499],
[477,535,435,362,512,420,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,432,457,474,431,463,483],
[413,0,466,435,479,427,466,457],
[458,424,0,464,468,457,448,472],
[433,455,426,0,470,417,433,450],
[416,411,422,420,0,398,427,429],
[459,463,433,473,492,0,462,473],
[427,424,442,457,463,428,0,454],
[407,433,418,440,461,417,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,430,426,381,406,417,466],
[471,0,502,464,473,439,511,508],
[460,388,0,414,386,424,439,472],
[464,426,476,0,438,426,465,474],
[509,417,504,452,0,503,506,442],
[484,451,466,464,387,0,463,469],
[473,379,451,425,384,427,0,463],
[424,382,418,416,448,421,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,453,446,434,441,455,444],
[445,0,445,432,419,456,449,436],
[437,445,0,441,430,437,450,450],
[444,458,449,0,460,446,462,436],
[456,471,460,430,0,447,458,438],
[449,434,453,444,443,0,465,430],
[435,441,440,428,432,425,0,436],
[446,454,440,454,452,460,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,416,427,431,396,442,464],
[450,0,447,391,417,432,438,471],
[474,443,0,437,432,449,439,464],
[463,499,453,0,443,467,468,481],
[459,473,458,447,0,453,442,456],
[494,458,441,423,437,0,460,464],
[448,452,451,422,448,430,0,477],
[426,419,426,409,434,426,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,454,455,434,441,408,439],
[427,0,435,459,432,415,422,431],
[436,455,0,456,424,429,423,416],
[435,431,434,0,446,444,424,430],
[456,458,466,444,0,437,438,446],
[449,475,461,446,453,0,441,442],
[482,468,467,466,452,449,0,445],
[451,459,474,460,444,448,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,402,438,413,418,435,422],
[492,0,435,431,439,432,410,419],
[488,455,0,466,439,462,460,452],
[452,459,424,0,431,438,426,430],
[477,451,451,459,0,426,421,429],
[472,458,428,452,464,0,442,455],
[455,480,430,464,469,448,0,442],
[468,471,438,460,461,435,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,435,451,451,453,442,435],
[441,0,431,454,464,435,441,438],
[455,459,0,470,458,436,444,439],
[439,436,420,0,446,406,448,450],
[439,426,432,444,0,431,418,435],
[437,455,454,484,459,0,456,439],
[448,449,446,442,472,434,0,452],
[455,452,451,440,455,451,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,464,456,445,437,467,448],
[459,0,485,440,463,429,466,459],
[426,405,0,429,466,419,444,434],
[434,450,461,0,461,452,449,455],
[445,427,424,429,0,433,491,438],
[453,461,471,438,457,0,473,471],
[423,424,446,441,399,417,0,472],
[442,431,456,435,452,419,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,438,440,434,441,439,430],
[449,0,445,452,416,450,453,447],
[452,445,0,445,440,458,442,441],
[450,438,445,0,422,432,442,446],
[456,474,450,468,0,454,464,424],
[449,440,432,458,436,0,449,431],
[451,437,448,448,426,441,0,455],
[460,443,449,444,466,459,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,376,433,461,393,381,451,393],
[514,0,509,516,490,449,512,418],
[457,381,0,502,423,393,483,417],
[429,374,388,0,358,352,415,386],
[497,400,467,532,0,406,484,433],
[509,441,497,538,484,0,492,454],
[439,378,407,475,406,398,0,391],
[497,472,473,504,457,436,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,459,455,497,455,431,449],
[422,0,427,405,453,444,441,453],
[431,463,0,389,456,425,442,453],
[435,485,501,0,498,448,462,496],
[393,437,434,392,0,410,393,420],
[435,446,465,442,480,0,465,451],
[459,449,448,428,497,425,0,475],
[441,437,437,394,470,439,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,443,435,457,439,467,440],
[448,0,455,440,460,450,463,465],
[447,435,0,466,464,470,455,446],
[455,450,424,0,442,434,469,441],
[433,430,426,448,0,455,459,423],
[451,440,420,456,435,0,461,442],
[423,427,435,421,431,429,0,433],
[450,425,444,449,467,448,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,453,472,474,474,450,467],
[458,0,454,473,446,468,439,440],
[437,436,0,474,433,494,448,435],
[418,417,416,0,405,436,427,424],
[416,444,457,485,0,477,469,433],
[416,422,396,454,413,0,430,444],
[440,451,442,463,421,460,0,441],
[423,450,455,466,457,446,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,466,470,430,458,484,481],
[453,0,463,474,439,471,492,468],
[424,427,0,463,431,436,461,408],
[420,416,427,0,423,441,466,449],
[460,451,459,467,0,439,468,472],
[432,419,454,449,451,0,443,441],
[406,398,429,424,422,447,0,439],
[409,422,482,441,418,449,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,446,445,438,422,456,446],
[434,0,475,459,471,432,457,448],
[444,415,0,435,394,409,414,427],
[445,431,455,0,425,439,421,432],
[452,419,496,465,0,435,433,441],
[468,458,481,451,455,0,471,445],
[434,433,476,469,457,419,0,444],
[444,442,463,458,449,445,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,484,476,447,463,493,485],
[445,0,454,460,412,409,451,462],
[406,436,0,420,386,399,428,440],
[414,430,470,0,403,398,441,443],
[443,478,504,487,0,437,486,496],
[427,481,491,492,453,0,483,474],
[397,439,462,449,404,407,0,431],
[405,428,450,447,394,416,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,435,483,438,430,436,473],
[418,0,443,424,404,397,407,420],
[455,447,0,457,421,427,441,460],
[407,466,433,0,414,426,408,445],
[452,486,469,476,0,454,436,461],
[460,493,463,464,436,0,470,449],
[454,483,449,482,454,420,0,464],
[417,470,430,445,429,441,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,375,540,371,439,394,493,345],
[515,0,556,397,498,454,517,451],
[350,334,0,332,435,412,408,302],
[519,493,558,0,538,514,558,385],
[451,392,455,352,0,412,452,346],
[496,436,478,376,478,0,474,303],
[397,373,482,332,438,416,0,344],
[545,439,588,505,544,587,546,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,438,459,426,438,454,436],
[415,0,422,421,419,447,438,431],
[452,468,0,454,444,456,470,443],
[431,469,436,0,436,468,454,442],
[464,471,446,454,0,447,448,441],
[452,443,434,422,443,0,447,449],
[436,452,420,436,442,443,0,441],
[454,459,447,448,449,441,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,472,434,461,487,472,461],
[428,0,438,418,442,436,444,446],
[418,452,0,434,449,449,443,461],
[456,472,456,0,445,466,450,476],
[429,448,441,445,0,472,441,460],
[403,454,441,424,418,0,432,428],
[418,446,447,440,449,458,0,454],
[429,444,429,414,430,462,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,459,447,414,446,460,436],
[429,0,438,450,431,406,448,435],
[431,452,0,456,420,406,445,431],
[443,440,434,0,456,424,445,435],
[476,459,470,434,0,439,470,450],
[444,484,484,466,451,0,459,455],
[430,442,445,445,420,431,0,432],
[454,455,459,455,440,435,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,462,436,452,429,459,425],
[413,0,461,431,472,472,414,445],
[428,429,0,458,496,452,456,448],
[454,459,432,0,484,478,423,478],
[438,418,394,406,0,444,389,442],
[461,418,438,412,446,0,395,441],
[431,476,434,467,501,495,0,450],
[465,445,442,412,448,449,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,493,482,477,428,460,491,497],
[397,0,476,446,424,422,467,443],
[408,414,0,416,389,418,420,409],
[413,444,474,0,421,447,429,432],
[462,466,501,469,0,440,475,480],
[430,468,472,443,450,0,477,450],
[399,423,470,461,415,413,0,435],
[393,447,481,458,410,440,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,487,437,438,412,512,433],
[406,0,425,458,412,471,473,463],
[403,465,0,464,431,448,480,461],
[453,432,426,0,399,460,498,437],
[452,478,459,491,0,446,504,437],
[478,419,442,430,444,0,484,484],
[378,417,410,392,386,406,0,410],
[457,427,429,453,453,406,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,456,463,443,485,465,436],
[407,0,405,433,423,465,470,407],
[434,485,0,457,418,464,476,422],
[427,457,433,0,414,454,450,454],
[447,467,472,476,0,490,477,398],
[405,425,426,436,400,0,435,410],
[425,420,414,440,413,455,0,428],
[454,483,468,436,492,480,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,452,436,468,426,452,443],
[447,0,439,455,470,463,448,442],
[438,451,0,431,460,452,437,440],
[454,435,459,0,489,430,454,429],
[422,420,430,401,0,427,435,404],
[464,427,438,460,463,0,473,434],
[438,442,453,436,455,417,0,449],
[447,448,450,461,486,456,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,443,443,460,441,463,420],
[418,0,433,435,454,459,445,467],
[447,457,0,411,450,437,438,433],
[447,455,479,0,472,436,470,476],
[430,436,440,418,0,444,421,447],
[449,431,453,454,446,0,447,475],
[427,445,452,420,469,443,0,450],
[470,423,457,414,443,415,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,433,437,466,423,448,465],
[416,0,415,417,419,414,419,419],
[457,475,0,428,451,435,447,466],
[453,473,462,0,473,443,456,469],
[424,471,439,417,0,436,445,457],
[467,476,455,447,454,0,439,472],
[442,471,443,434,445,451,0,448],
[425,471,424,421,433,418,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,434,439,371,429,404,397],
[485,0,500,461,455,475,449,444],
[456,390,0,466,382,455,390,424],
[451,429,424,0,425,438,434,371],
[519,435,508,465,0,492,427,469],
[461,415,435,452,398,0,451,442],
[486,441,500,456,463,439,0,470],
[493,446,466,519,421,448,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,489,455,459,474,431,453],
[462,0,445,429,432,436,447,415],
[401,445,0,426,425,452,457,405],
[435,461,464,0,422,437,446,420],
[431,458,465,468,0,463,438,424],
[416,454,438,453,427,0,462,421],
[459,443,433,444,452,428,0,396],
[437,475,485,470,466,469,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,494,453,512,468,465,438],
[458,0,444,447,492,461,494,427],
[396,446,0,459,473,428,499,427],
[437,443,431,0,460,433,465,446],
[378,398,417,430,0,424,402,403],
[422,429,462,457,466,0,470,434],
[425,396,391,425,488,420,0,397],
[452,463,463,444,487,456,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,450,484,491,410,455,470],
[437,0,448,477,477,455,477,468],
[440,442,0,507,467,448,477,466],
[406,413,383,0,417,375,406,416],
[399,413,423,473,0,403,427,436],
[480,435,442,515,487,0,491,463],
[435,413,413,484,463,399,0,465],
[420,422,424,474,454,427,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,463,463,390,409,400,415],
[456,0,474,446,426,445,360,462],
[427,416,0,406,405,361,350,399],
[427,444,484,0,475,414,382,464],
[500,464,485,415,0,444,479,484],
[481,445,529,476,446,0,412,417],
[490,530,540,508,411,478,0,496],
[475,428,491,426,406,473,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,436,446,450,433,423,449],
[446,0,418,420,435,435,436,442],
[454,472,0,449,456,445,423,460],
[444,470,441,0,470,448,452,456],
[440,455,434,420,0,425,424,438],
[457,455,445,442,465,0,457,454],
[467,454,467,438,466,433,0,464],
[441,448,430,434,452,436,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,467,438,463,492,433,479],
[432,0,447,427,417,426,424,416],
[423,443,0,443,479,440,418,440],
[452,463,447,0,439,461,445,436],
[427,473,411,451,0,449,426,420],
[398,464,450,429,441,0,443,442],
[457,466,472,445,464,447,0,438],
[411,474,450,454,470,448,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,434,467,462,440,440,465],
[438,0,413,459,453,424,440,464],
[456,477,0,464,468,445,459,466],
[423,431,426,0,426,410,435,455],
[428,437,422,464,0,413,450,455],
[450,466,445,480,477,0,452,468],
[450,450,431,455,440,438,0,457],
[425,426,424,435,435,422,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,427,454,451,428,452,412],
[456,0,424,424,436,440,457,404],
[463,466,0,436,422,434,441,414],
[436,466,454,0,496,460,444,408],
[439,454,468,394,0,437,428,432],
[462,450,456,430,453,0,459,451],
[438,433,449,446,462,431,0,479],
[478,486,476,482,458,439,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,412,421,400,426,425,409],
[464,0,438,445,434,431,443,450],
[478,452,0,439,443,464,478,458],
[469,445,451,0,432,456,470,425],
[490,456,447,458,0,443,479,477],
[464,459,426,434,447,0,449,445],
[465,447,412,420,411,441,0,430],
[481,440,432,465,413,445,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,376,408,431,364,440,409],
[450,0,429,470,480,422,502,403],
[514,461,0,448,467,457,548,419],
[482,420,442,0,444,474,496,427],
[459,410,423,446,0,440,507,399],
[526,468,433,416,450,0,556,507],
[450,388,342,394,383,334,0,329],
[481,487,471,463,491,383,561,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,441,446,427,447,433,462],
[444,0,452,454,456,483,458,478],
[449,438,0,452,443,443,441,458],
[444,436,438,0,459,444,462,457],
[463,434,447,431,0,462,439,455],
[443,407,447,446,428,0,425,451],
[457,432,449,428,451,465,0,455],
[428,412,432,433,435,439,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,445,505,485,463,483,546],
[392,0,396,477,454,468,439,476],
[445,494,0,482,493,501,400,477],
[385,413,408,0,392,441,371,390],
[405,436,397,498,0,488,430,486],
[427,422,389,449,402,0,397,435],
[407,451,490,519,460,493,0,476],
[344,414,413,500,404,455,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,446,469,448,445,429,447],
[449,0,425,424,422,428,457,453],
[444,465,0,453,425,456,436,437],
[421,466,437,0,450,444,456,471],
[442,468,465,440,0,448,470,456],
[445,462,434,446,442,0,438,445],
[461,433,454,434,420,452,0,458],
[443,437,453,419,434,445,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,400,424,434,421,409,424],
[487,0,472,453,447,492,408,461],
[490,418,0,510,483,492,455,493],
[466,437,380,0,436,459,408,428],
[456,443,407,454,0,474,408,401],
[469,398,398,431,416,0,385,438],
[481,482,435,482,482,505,0,457],
[466,429,397,462,489,452,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,438,409,420,445,400,416],
[469,0,450,411,455,464,427,422],
[452,440,0,421,421,427,397,415],
[481,479,469,0,488,473,432,483],
[470,435,469,402,0,451,438,403],
[445,426,463,417,439,0,458,450],
[490,463,493,458,452,432,0,454],
[474,468,475,407,487,440,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,426,461,472,465,428,438],
[450,0,430,456,421,478,401,435],
[464,460,0,455,474,445,448,484],
[429,434,435,0,468,451,387,440],
[418,469,416,422,0,471,393,433],
[425,412,445,439,419,0,401,430],
[462,489,442,503,497,489,0,475],
[452,455,406,450,457,460,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,443,445,442,464,459,442],
[449,0,446,445,439,466,436,457],
[447,444,0,436,453,478,461,451],
[445,445,454,0,460,445,462,459],
[448,451,437,430,0,445,438,461],
[426,424,412,445,445,0,444,454],
[431,454,429,428,452,446,0,449],
[448,433,439,431,429,436,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,462,448,451,464,417,443],
[410,0,462,466,463,461,442,449],
[428,428,0,413,406,460,446,398],
[442,424,477,0,428,471,474,430],
[439,427,484,462,0,477,459,461],
[426,429,430,419,413,0,403,438],
[473,448,444,416,431,487,0,443],
[447,441,492,460,429,452,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,444,450,455,436,478,451],
[454,0,435,452,441,447,477,475],
[446,455,0,447,436,440,468,463],
[440,438,443,0,423,435,451,453],
[435,449,454,467,0,450,478,480],
[454,443,450,455,440,0,455,464],
[412,413,422,439,412,435,0,441],
[439,415,427,437,410,426,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,423,418,441,429,447,419],
[440,0,452,474,432,430,461,429],
[467,438,0,424,448,453,478,427],
[472,416,466,0,441,445,468,438],
[449,458,442,449,0,482,480,458],
[461,460,437,445,408,0,472,449],
[443,429,412,422,410,418,0,406],
[471,461,463,452,432,441,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,409,442,461,455,459,448],
[475,0,471,434,491,463,472,475],
[481,419,0,453,494,472,483,457],
[448,456,437,0,468,440,458,431],
[429,399,396,422,0,451,470,446],
[435,427,418,450,439,0,487,468],
[431,418,407,432,420,403,0,424],
[442,415,433,459,444,422,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,451,456,451,443,459,444],
[447,0,428,461,448,450,443,452],
[439,462,0,458,458,452,443,450],
[434,429,432,0,431,405,432,416],
[439,442,432,459,0,435,428,430],
[447,440,438,485,455,0,438,449],
[431,447,447,458,462,452,0,432],
[446,438,440,474,460,441,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,594,594,298,446,743,594],
[443,0,594,591,296,443,741,741],
[296,296,0,740,295,295,890,741],
[296,299,150,0,298,298,742,298],
[592,594,595,592,0,295,742,593],
[444,447,595,592,595,0,742,741],
[147,149,0,148,148,148,0,148],
[296,149,149,592,297,149,742,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,473,480,453,435,464,434],
[455,0,440,477,429,450,443,449],
[417,450,0,457,446,421,472,440],
[410,413,433,0,424,444,443,451],
[437,461,444,466,0,447,489,436],
[455,440,469,446,443,0,442,452],
[426,447,418,447,401,448,0,442],
[456,441,450,439,454,438,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,434,450,447,462,417,445],
[440,0,422,408,472,421,433,395],
[456,468,0,447,443,467,462,430],
[440,482,443,0,463,451,434,462],
[443,418,447,427,0,444,440,438],
[428,469,423,439,446,0,434,419],
[473,457,428,456,450,456,0,412],
[445,495,460,428,452,471,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,440,458,437,419,472,461],
[433,0,445,470,429,456,478,450],
[450,445,0,455,461,451,503,494],
[432,420,435,0,436,429,474,429],
[453,461,429,454,0,440,477,434],
[471,434,439,461,450,0,469,450],
[418,412,387,416,413,421,0,412],
[429,440,396,461,456,440,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,445,455,453,464,456,469],
[435,0,451,445,436,443,443,459],
[445,439,0,424,456,458,444,462],
[435,445,466,0,446,468,430,473],
[437,454,434,444,0,456,424,464],
[426,447,432,422,434,0,435,439],
[434,447,446,460,466,455,0,472],
[421,431,428,417,426,451,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,525,459,544,433,476,424,534],
[365,0,409,522,466,482,363,522],
[431,481,0,502,488,469,481,525],
[346,368,388,0,385,408,344,393],
[457,424,402,505,0,386,363,446],
[414,408,421,482,504,0,410,439],
[466,527,409,546,527,480,0,461],
[356,368,365,497,444,451,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,452,437,449,449,440,429],
[430,0,448,434,433,452,434,431],
[438,442,0,438,427,427,438,417],
[453,456,452,0,450,434,456,454],
[441,457,463,440,0,439,445,431],
[441,438,463,456,451,0,452,442],
[450,456,452,434,445,438,0,445],
[461,459,473,436,459,448,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,411,448,455,445,434,445],
[452,0,450,439,460,481,460,465],
[479,440,0,485,483,488,447,447],
[442,451,405,0,441,437,457,432],
[435,430,407,449,0,464,418,421],
[445,409,402,453,426,0,422,418],
[456,430,443,433,472,468,0,443],
[445,425,443,458,469,472,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,403,513,404,374,436,415],
[398,0,465,509,421,352,458,475],
[487,425,0,433,382,457,443,451],
[377,381,457,0,356,352,477,396],
[486,469,508,534,0,389,528,487],
[516,538,433,538,501,0,481,486],
[454,432,447,413,362,409,0,432],
[475,415,439,494,403,404,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,451,433,468,500,447,451],
[432,0,425,425,428,474,442,434],
[439,465,0,442,477,461,435,463],
[457,465,448,0,465,486,446,441],
[422,462,413,425,0,448,438,460],
[390,416,429,404,442,0,407,428],
[443,448,455,444,452,483,0,421],
[439,456,427,449,430,462,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,382,343,443,361,323,377,380],
[508,0,389,504,467,466,440,465],
[547,501,0,465,424,484,482,442],
[447,386,425,0,386,343,404,405],
[529,423,466,504,0,440,481,461],
[567,424,406,547,450,0,421,345],
[513,450,408,486,409,469,0,447],
[510,425,448,485,429,545,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,469,455,473,436,448,440],
[452,0,444,439,463,442,441,430],
[421,446,0,416,455,422,433,428],
[435,451,474,0,471,443,464,458],
[417,427,435,419,0,412,434,421],
[454,448,468,447,478,0,454,435],
[442,449,457,426,456,436,0,416],
[450,460,462,432,469,455,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,443,461,435,491,466,475],
[391,0,431,475,394,465,416,440],
[447,459,0,533,463,474,402,404],
[429,415,357,0,402,399,384,377],
[455,496,427,488,0,494,456,464],
[399,425,416,491,396,0,424,390],
[424,474,488,506,434,466,0,430],
[415,450,486,513,426,500,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,541,445,493,443,508,414],
[453,0,470,451,477,367,492,426],
[349,420,0,391,439,413,460,389],
[445,439,499,0,455,415,496,459],
[397,413,451,435,0,427,459,413],
[447,523,477,475,463,0,491,404],
[382,398,430,394,431,399,0,381],
[476,464,501,431,477,486,509,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,439,472,451,446,461,422],
[444,0,421,467,447,404,463,407],
[451,469,0,455,474,431,466,429],
[418,423,435,0,451,396,433,418],
[439,443,416,439,0,421,485,389],
[444,486,459,494,469,0,474,454],
[429,427,424,457,405,416,0,413],
[468,483,461,472,501,436,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,448,439,447,459,458,433],
[418,0,404,439,437,436,408,444],
[442,486,0,465,485,428,460,480],
[451,451,425,0,442,423,414,458],
[443,453,405,448,0,423,437,428],
[431,454,462,467,467,0,498,473],
[432,482,430,476,453,392,0,476],
[457,446,410,432,462,417,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,433,464,447,457,459,456],
[459,0,448,466,441,462,460,479],
[457,442,0,448,455,454,467,465],
[426,424,442,0,425,447,446,436],
[443,449,435,465,0,456,447,464],
[433,428,436,443,434,0,451,455],
[431,430,423,444,443,439,0,454],
[434,411,425,454,426,435,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,448,480,445,429,464,420],
[405,0,358,411,429,399,426,384],
[442,532,0,472,448,462,440,467],
[410,479,418,0,467,406,427,443],
[445,461,442,423,0,412,443,455],
[461,491,428,484,478,0,483,431],
[426,464,450,463,447,407,0,420],
[470,506,423,447,435,459,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,369,445,370,443,520,593,446],
[521,0,520,372,371,373,371,373],
[445,370,0,370,296,520,519,224],
[520,518,520,0,371,521,595,446],
[447,519,594,519,0,595,594,299],
[370,517,370,369,295,0,444,223],
[297,519,371,295,296,446,0,297],
[444,517,666,444,591,667,593,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,448,428,424,455,455,438],
[476,0,439,429,438,459,439,439],
[442,451,0,485,459,459,480,457],
[462,461,405,0,431,435,435,425],
[466,452,431,459,0,459,461,476],
[435,431,431,455,431,0,463,430],
[435,451,410,455,429,427,0,442],
[452,451,433,465,414,460,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,475,432,434,438,449,431],
[424,0,443,438,477,412,439,409],
[415,447,0,420,434,464,447,392],
[458,452,470,0,444,437,437,437],
[456,413,456,446,0,445,437,436],
[452,478,426,453,445,0,443,455],
[441,451,443,453,453,447,0,434],
[459,481,498,453,454,435,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,444,433,433,412,421,437],
[442,0,480,482,464,474,450,474],
[446,410,0,435,444,478,411,478],
[457,408,455,0,429,418,410,481],
[457,426,446,461,0,436,401,472],
[478,416,412,472,454,0,406,477],
[469,440,479,480,489,484,0,466],
[453,416,412,409,418,413,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,485,487,521,518,468,411],
[399,0,465,529,461,481,384,458],
[405,425,0,509,471,468,401,392],
[403,361,381,0,395,426,351,395],
[369,429,419,495,0,459,354,402],
[372,409,422,464,431,0,397,396],
[422,506,489,539,536,493,0,449],
[479,432,498,495,488,494,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,576,400,397,481,416,463,396],
[314,0,391,331,369,351,400,359],
[490,499,0,447,538,413,476,481],
[493,559,443,0,471,478,512,412],
[409,521,352,419,0,412,428,406],
[474,539,477,412,478,0,465,406],
[427,490,414,378,462,425,0,452],
[494,531,409,478,484,484,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,427,427,415,444,443,409],
[458,0,462,456,443,462,456,451],
[463,428,0,454,436,443,444,394],
[463,434,436,0,443,468,466,448],
[475,447,454,447,0,471,461,431],
[446,428,447,422,419,0,455,391],
[447,434,446,424,429,435,0,421],
[481,439,496,442,459,499,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,458,438,432,459,419,450],
[459,0,474,472,457,472,392,467],
[432,416,0,396,348,431,406,423],
[452,418,494,0,432,439,410,451],
[458,433,542,458,0,489,460,491],
[431,418,459,451,401,0,418,474],
[471,498,484,480,430,472,0,480],
[440,423,467,439,399,416,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,417,440,450,459,456,438],
[420,0,399,425,448,412,404,426],
[473,491,0,468,480,463,467,442],
[450,465,422,0,463,422,467,447],
[440,442,410,427,0,422,427,437],
[431,478,427,468,468,0,458,453],
[434,486,423,423,463,432,0,413],
[452,464,448,443,453,437,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,457,452,451,437,430,434],
[466,0,469,439,461,448,434,443],
[433,421,0,421,428,444,439,433],
[438,451,469,0,459,443,438,454],
[439,429,462,431,0,446,451,441],
[453,442,446,447,444,0,428,441],
[460,456,451,452,439,462,0,475],
[456,447,457,436,449,449,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,416,371,448,385,412,450],
[494,0,488,495,489,436,472,419],
[474,402,0,493,509,452,514,458],
[519,395,397,0,444,401,414,379],
[442,401,381,446,0,384,397,367],
[505,454,438,489,506,0,464,485],
[478,418,376,476,493,426,0,418],
[440,471,432,511,523,405,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,391,404,419,411,420,428,436],
[499,0,448,421,473,481,466,473],
[486,442,0,471,489,470,479,482],
[471,469,419,0,478,473,483,450],
[479,417,401,412,0,461,438,448],
[470,409,420,417,429,0,441,424],
[462,424,411,407,452,449,0,441],
[454,417,408,440,442,466,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,432,462,442,431,468,448],
[455,0,438,467,441,458,454,451],
[458,452,0,476,430,466,446,479],
[428,423,414,0,417,442,436,425],
[448,449,460,473,0,442,449,454],
[459,432,424,448,448,0,426,445],
[422,436,444,454,441,464,0,421],
[442,439,411,465,436,445,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,435,422,432,402,420,468],
[414,0,431,468,424,461,438,441],
[455,459,0,444,423,416,423,450],
[468,422,446,0,462,426,467,465],
[458,466,467,428,0,450,421,458],
[488,429,474,464,440,0,430,480],
[470,452,467,423,469,460,0,476],
[422,449,440,425,432,410,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,478,468,484,440,487,490],
[441,0,458,473,474,475,443,440],
[412,432,0,441,419,429,439,438],
[422,417,449,0,454,428,451,433],
[406,416,471,436,0,423,420,417],
[450,415,461,462,467,0,432,451],
[403,447,451,439,470,458,0,427],
[400,450,452,457,473,439,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,451,464,468,479,462,486],
[462,0,442,464,418,460,455,477],
[439,448,0,466,436,465,450,490],
[426,426,424,0,433,450,450,448],
[422,472,454,457,0,456,445,454],
[411,430,425,440,434,0,430,438],
[428,435,440,440,445,460,0,463],
[404,413,400,442,436,452,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,445,449,459,465,467,462],
[430,0,448,432,442,459,448,455],
[445,442,0,459,471,468,451,458],
[441,458,431,0,455,462,468,462],
[431,448,419,435,0,434,432,436],
[425,431,422,428,456,0,427,453],
[423,442,439,422,458,463,0,441],
[428,435,432,428,454,437,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,402,452,435,416,455,418],
[464,0,502,448,509,415,480,458],
[488,388,0,402,440,407,479,458],
[438,442,488,0,473,409,469,435],
[455,381,450,417,0,447,452,419],
[474,475,483,481,443,0,525,470],
[435,410,411,421,438,365,0,404],
[472,432,432,455,471,420,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,445,421,425,437,436,423],
[462,0,451,449,475,442,447,462],
[445,439,0,451,461,420,438,431],
[469,441,439,0,481,459,461,459],
[465,415,429,409,0,422,434,438],
[453,448,470,431,468,0,448,438],
[454,443,452,429,456,442,0,432],
[467,428,459,431,452,452,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,434,444,475,442,487,463],
[486,0,439,432,444,479,509,441],
[456,451,0,490,450,491,457,408],
[446,458,400,0,464,462,470,472],
[415,446,440,426,0,436,449,422],
[448,411,399,428,454,0,439,457],
[403,381,433,420,441,451,0,422],
[427,449,482,418,468,433,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,462,404,461,458,494,458],
[391,0,486,446,415,426,412,393],
[428,404,0,420,413,404,469,411],
[486,444,470,0,462,507,459,416],
[429,475,477,428,0,453,427,474],
[432,464,486,383,437,0,435,421],
[396,478,421,431,463,455,0,405],
[432,497,479,474,416,469,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,500,451,410,441,402,438],
[423,0,441,425,410,429,416,446],
[390,449,0,438,408,443,425,421],
[439,465,452,0,410,458,445,451],
[480,480,482,480,0,466,437,487],
[449,461,447,432,424,0,412,462],
[488,474,465,445,453,478,0,470],
[452,444,469,439,403,428,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,542,499,533,480,359,420,425],
[348,0,436,454,502,330,446,411],
[391,454,0,474,458,456,485,402],
[357,436,416,0,446,312,419,376],
[410,388,432,444,0,421,407,455],
[531,560,434,578,469,0,544,517],
[470,444,405,471,483,346,0,442],
[465,479,488,514,435,373,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,429,443,444,435,431,449],
[471,0,459,443,445,456,451,456],
[461,431,0,434,440,436,428,436],
[447,447,456,0,441,450,435,449],
[446,445,450,449,0,446,457,456],
[455,434,454,440,444,0,445,453],
[459,439,462,455,433,445,0,439],
[441,434,454,441,434,437,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,464,481,485,461,418,463],
[421,0,470,485,467,494,450,491],
[426,420,0,439,462,433,427,465],
[409,405,451,0,449,474,429,435],
[405,423,428,441,0,469,427,452],
[429,396,457,416,421,0,396,451],
[472,440,463,461,463,494,0,448],
[427,399,425,455,438,439,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,429,438,436,457,423,447],
[453,0,436,435,426,434,434,438],
[461,454,0,461,437,459,468,468],
[452,455,429,0,445,460,448,465],
[454,464,453,445,0,478,465,462],
[433,456,431,430,412,0,425,438],
[467,456,422,442,425,465,0,455],
[443,452,422,425,428,452,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,438,476,450,417,447,425],
[455,0,454,452,445,458,450,461],
[452,436,0,438,464,457,466,424],
[414,438,452,0,453,433,448,427],
[440,445,426,437,0,451,472,434],
[473,432,433,457,439,0,465,463],
[443,440,424,442,418,425,0,436],
[465,429,466,463,456,427,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,452,471,450,502,430,497],
[401,0,440,501,467,471,439,481],
[438,450,0,479,466,470,459,452],
[419,389,411,0,440,470,419,450],
[440,423,424,450,0,494,419,467],
[388,419,420,420,396,0,401,451],
[460,451,431,471,471,489,0,502],
[393,409,438,440,423,439,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,471,441,458,466,441,486],
[434,0,476,442,442,434,454,466],
[419,414,0,443,425,473,432,439],
[449,448,447,0,443,440,439,483],
[432,448,465,447,0,468,447,472],
[424,456,417,450,422,0,447,467],
[449,436,458,451,443,443,0,460],
[404,424,451,407,418,423,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,398,427,453,424,426,399],
[483,0,428,419,472,448,432,447],
[492,462,0,468,461,462,441,464],
[463,471,422,0,443,420,431,442],
[437,418,429,447,0,415,402,424],
[466,442,428,470,475,0,428,466],
[464,458,449,459,488,462,0,437],
[491,443,426,448,466,424,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,426,409,425,434,415,422],
[449,0,441,439,425,443,444,441],
[464,449,0,442,442,448,439,470],
[481,451,448,0,459,470,458,439],
[465,465,448,431,0,443,442,440],
[456,447,442,420,447,0,447,453],
[475,446,451,432,448,443,0,436],
[468,449,420,451,450,437,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,483,456,426,466,440,486],
[416,0,458,497,457,414,439,441],
[407,432,0,449,391,376,417,422],
[434,393,441,0,367,379,413,413],
[464,433,499,523,0,452,467,415],
[424,476,514,511,438,0,471,448],
[450,451,473,477,423,419,0,467],
[404,449,468,477,475,442,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,428,460,482,461,409,434],
[488,0,472,491,444,478,426,454],
[462,418,0,481,454,484,397,505],
[430,399,409,0,511,383,358,484],
[408,446,436,379,0,409,387,417],
[429,412,406,507,481,0,407,386],
[481,464,493,532,503,483,0,442],
[456,436,385,406,473,504,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,458,447,440,414,494,460],
[428,0,446,433,422,425,470,488],
[432,444,0,425,429,450,486,446],
[443,457,465,0,479,450,485,497],
[450,468,461,411,0,478,438,477],
[476,465,440,440,412,0,473,478],
[396,420,404,405,452,417,0,465],
[430,402,444,393,413,412,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,452,438,455,446,437,465],
[475,0,414,434,468,436,467,442],
[438,476,0,449,498,482,465,470],
[452,456,441,0,474,481,470,457],
[435,422,392,416,0,438,469,457],
[444,454,408,409,452,0,420,453],
[453,423,425,420,421,470,0,435],
[425,448,420,433,433,437,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,476,438,463,441,439,446],
[421,0,432,413,409,414,420,395],
[414,458,0,424,425,445,456,430],
[452,477,466,0,464,446,479,436],
[427,481,465,426,0,426,459,440],
[449,476,445,444,464,0,449,430],
[451,470,434,411,431,441,0,431],
[444,495,460,454,450,460,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,440,451,460,436,447,454],
[452,0,441,466,470,459,451,453],
[450,449,0,462,475,464,459,438],
[439,424,428,0,440,434,428,425],
[430,420,415,450,0,444,423,428],
[454,431,426,456,446,0,432,437],
[443,439,431,462,467,458,0,448],
[436,437,452,465,462,453,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,438,426,406,412,397,437],
[488,0,453,437,457,448,452,465],
[452,437,0,437,445,421,451,459],
[464,453,453,0,476,442,434,434],
[484,433,445,414,0,422,438,451],
[478,442,469,448,468,0,440,451],
[493,438,439,456,452,450,0,483],
[453,425,431,456,439,439,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,428,469,445,446,453,440],
[437,0,425,469,453,423,415,438],
[462,465,0,455,456,463,425,457],
[421,421,435,0,428,444,407,435],
[445,437,434,462,0,431,424,434],
[444,467,427,446,459,0,419,461],
[437,475,465,483,466,471,0,474],
[450,452,433,455,456,429,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,363,416,313,471,418,312,421],
[527,0,472,365,472,468,361,421],
[474,418,0,367,422,524,367,319],
[577,525,523,0,523,365,366,474],
[419,418,468,367,0,416,261,316],
[472,422,366,525,474,0,471,423],
[578,529,523,524,629,419,0,473],
[469,469,571,416,574,467,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,474,439,426,379,469,481],
[445,0,445,470,434,445,505,488],
[416,445,0,439,437,408,463,440],
[451,420,451,0,467,411,450,480],
[464,456,453,423,0,466,438,475],
[511,445,482,479,424,0,466,485],
[421,385,427,440,452,424,0,479],
[409,402,450,410,415,405,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,430,483,399,464,500,471],
[490,0,457,503,414,493,507,474],
[460,433,0,457,448,474,474,456],
[407,387,433,0,415,427,478,395],
[491,476,442,475,0,479,493,426],
[426,397,416,463,411,0,462,423],
[390,383,416,412,397,428,0,391],
[419,416,434,495,464,467,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,425,428,448,429,434,455],
[465,0,450,445,425,415,447,439],
[465,440,0,442,446,421,430,429],
[462,445,448,0,429,404,471,450],
[442,465,444,461,0,439,442,438],
[461,475,469,486,451,0,443,464],
[456,443,460,419,448,447,0,429],
[435,451,461,440,452,426,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,487,461,435,589,462,434],
[403,0,401,594,459,508,426,482],
[403,489,0,543,407,483,429,487],
[429,296,347,0,404,403,428,538],
[455,431,483,486,0,480,403,597],
[301,382,407,487,410,0,381,434],
[428,464,461,462,487,509,0,488],
[456,408,403,352,293,456,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,453,426,411,419,462,451],
[462,0,427,421,440,433,454,449],
[437,463,0,466,458,459,462,445],
[464,469,424,0,425,422,453,428],
[479,450,432,465,0,459,481,456],
[471,457,431,468,431,0,473,444],
[428,436,428,437,409,417,0,419],
[439,441,445,462,434,446,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,479,458,464,448,476,437],
[443,0,464,446,478,452,483,457],
[411,426,0,436,468,420,462,408],
[432,444,454,0,457,427,469,439],
[426,412,422,433,0,402,436,398],
[442,438,470,463,488,0,484,426],
[414,407,428,421,454,406,0,395],
[453,433,482,451,492,464,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,434,441,432,449,411,457],
[465,0,445,462,450,433,456,441],
[456,445,0,473,434,456,444,419],
[449,428,417,0,411,436,419,395],
[458,440,456,479,0,400,427,474],
[441,457,434,454,490,0,446,452],
[479,434,446,471,463,444,0,418],
[433,449,471,495,416,438,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,444,483,445,449,458,465],
[428,0,429,444,428,436,435,453],
[446,461,0,473,442,446,441,448],
[407,446,417,0,422,423,421,433],
[445,462,448,468,0,452,452,457],
[441,454,444,467,438,0,428,442],
[432,455,449,469,438,462,0,443],
[425,437,442,457,433,448,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,512,448,416,537,502,472,526],
[378,0,369,397,519,426,403,468],
[442,521,0,457,504,460,423,459],
[474,493,433,0,479,436,481,485],
[353,371,386,411,0,361,439,424],
[388,464,430,454,529,0,484,486],
[418,487,467,409,451,406,0,458],
[364,422,431,405,466,404,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,462,481,498,434,445,422],
[464,0,461,432,526,426,392,335],
[428,429,0,448,507,440,429,420],
[409,458,442,0,464,393,360,402],
[392,364,383,426,0,398,391,392],
[456,464,450,497,492,0,424,450],
[445,498,461,530,499,466,0,420],
[468,555,470,488,498,440,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,427,430,451,436,435,423],
[459,0,434,459,467,454,455,459],
[463,456,0,430,465,447,467,494],
[460,431,460,0,454,440,432,459],
[439,423,425,436,0,434,445,456],
[454,436,443,450,456,0,457,455],
[455,435,423,458,445,433,0,454],
[467,431,396,431,434,435,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,430,358,378,409,401,447],
[461,0,446,390,453,433,453,466],
[460,444,0,425,419,417,458,474],
[532,500,465,0,444,465,515,541],
[512,437,471,446,0,484,528,529],
[481,457,473,425,406,0,466,461],
[489,437,432,375,362,424,0,493],
[443,424,416,349,361,429,397,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,438,444,425,418,434,451],
[462,0,462,444,434,454,457,453],
[452,428,0,421,424,437,451,445],
[446,446,469,0,448,462,444,453],
[465,456,466,442,0,458,459,444],
[472,436,453,428,432,0,452,446],
[456,433,439,446,431,438,0,459],
[439,437,445,437,446,444,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,465,432,398,438,437,439],
[471,0,458,440,447,474,504,436],
[425,432,0,439,399,448,449,447],
[458,450,451,0,433,436,442,454],
[492,443,491,457,0,488,502,499],
[452,416,442,454,402,0,470,408],
[453,386,441,448,388,420,0,459],
[451,454,443,436,391,482,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,418,411,444,441,419,441],
[465,0,454,435,443,455,439,432],
[472,436,0,433,455,440,423,429],
[479,455,457,0,458,435,468,461],
[446,447,435,432,0,431,439,414],
[449,435,450,455,459,0,456,433],
[471,451,467,422,451,434,0,424],
[449,458,461,429,476,457,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,462,467,461,464,439,449],
[419,0,450,414,420,430,434,412],
[428,440,0,446,440,417,460,434],
[423,476,444,0,445,469,441,432],
[429,470,450,445,0,452,450,450],
[426,460,473,421,438,0,458,433],
[451,456,430,449,440,432,0,445],
[441,478,456,458,440,457,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,479,450,464,424,405,477],
[472,0,504,438,482,439,437,462],
[411,386,0,404,415,394,386,402],
[440,452,486,0,474,433,453,484],
[426,408,475,416,0,425,397,438],
[466,451,496,457,465,0,412,488],
[485,453,504,437,493,478,0,472],
[413,428,488,406,452,402,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,471,459,488,429,465,443],
[487,0,475,451,453,427,470,426],
[419,415,0,418,488,422,431,428],
[431,439,472,0,459,446,462,422],
[402,437,402,431,0,410,433,427],
[461,463,468,444,480,0,463,448],
[425,420,459,428,457,427,0,420],
[447,464,462,468,463,442,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,445,440,490,458,448,494],
[417,0,477,475,487,434,466,468],
[445,413,0,445,465,442,464,478],
[450,415,445,0,479,451,465,476],
[400,403,425,411,0,418,407,464],
[432,456,448,439,472,0,456,471],
[442,424,426,425,483,434,0,472],
[396,422,412,414,426,419,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,435,419,464,451,407,453],
[433,0,469,451,467,441,422,428],
[455,421,0,443,485,430,415,394],
[471,439,447,0,501,433,412,429],
[426,423,405,389,0,414,386,369],
[439,449,460,457,476,0,407,397],
[483,468,475,478,504,483,0,426],
[437,462,496,461,521,493,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,435,442,478,448,432,449],
[454,0,439,451,475,433,438,424],
[455,451,0,442,458,451,427,452],
[448,439,448,0,465,439,447,423],
[412,415,432,425,0,381,404,398],
[442,457,439,451,509,0,436,433],
[458,452,463,443,486,454,0,453],
[441,466,438,467,492,457,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,429,435,424,436,421,451],
[461,0,430,455,449,436,454,482],
[461,460,0,444,440,434,461,472],
[455,435,446,0,444,429,437,430],
[466,441,450,446,0,470,484,460],
[454,454,456,461,420,0,440,447],
[469,436,429,453,406,450,0,449],
[439,408,418,460,430,443,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,469,405,461,452,481,425],
[452,0,490,447,504,465,433,444],
[421,400,0,408,455,431,422,429],
[485,443,482,0,461,480,491,459],
[429,386,435,429,0,439,424,409],
[438,425,459,410,451,0,428,428],
[409,457,468,399,466,462,0,411],
[465,446,461,431,481,462,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,401,418,442,438,426,413],
[449,0,405,402,439,387,461,401],
[489,485,0,417,469,458,458,418],
[472,488,473,0,468,492,444,451],
[448,451,421,422,0,450,436,421],
[452,503,432,398,440,0,421,412],
[464,429,432,446,454,469,0,439],
[477,489,472,439,469,478,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,428,436,424,429,434,439],
[478,0,465,445,457,469,445,453],
[462,425,0,424,412,458,430,457],
[454,445,466,0,425,482,439,461],
[466,433,478,465,0,456,442,450],
[461,421,432,408,434,0,422,418],
[456,445,460,451,448,468,0,436],
[451,437,433,429,440,472,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,374,425,390,400,428,403,448],
[516,0,433,458,481,483,486,505],
[465,457,0,433,454,439,402,421],
[500,432,457,0,449,447,428,454],
[490,409,436,441,0,448,418,451],
[462,407,451,443,442,0,438,455],
[487,404,488,462,472,452,0,465],
[442,385,469,436,439,435,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,500,447,469,440,442,442],
[418,0,492,410,445,438,448,434],
[390,398,0,387,424,389,385,407],
[443,480,503,0,449,464,459,441],
[421,445,466,441,0,423,412,419],
[450,452,501,426,467,0,427,438],
[448,442,505,431,478,463,0,462],
[448,456,483,449,471,452,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,442,442,450,439,438,441],
[447,0,441,442,482,452,451,456],
[448,449,0,451,464,445,440,439],
[448,448,439,0,447,437,445,433],
[440,408,426,443,0,417,425,447],
[451,438,445,453,473,0,443,439],
[452,439,450,445,465,447,0,453],
[449,434,451,457,443,451,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,449,446,437,451,447,431],
[447,0,449,444,427,444,453,458],
[441,441,0,441,446,450,459,441],
[444,446,449,0,438,472,440,432],
[453,463,444,452,0,460,460,448],
[439,446,440,418,430,0,428,433],
[443,437,431,450,430,462,0,446],
[459,432,449,458,442,457,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,456,440,455,454,450,452],
[452,0,431,437,474,435,421,440],
[434,459,0,448,440,450,451,453],
[450,453,442,0,458,458,441,454],
[435,416,450,432,0,476,418,437],
[436,455,440,432,414,0,426,411],
[440,469,439,449,472,464,0,490],
[438,450,437,436,453,479,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,414,422,439,421,406,438],
[466,0,444,446,450,424,425,447],
[476,446,0,444,463,465,445,445],
[468,444,446,0,446,455,441,465],
[451,440,427,444,0,426,420,436],
[469,466,425,435,464,0,444,453],
[484,465,445,449,470,446,0,467],
[452,443,445,425,454,437,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,432,415,421,425,478,465],
[456,0,439,419,434,448,442,485],
[458,451,0,439,449,426,449,473],
[475,471,451,0,472,435,469,473],
[469,456,441,418,0,453,460,493],
[465,442,464,455,437,0,468,490],
[412,448,441,421,430,422,0,484],
[425,405,417,417,397,400,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,432,448,407,422,428,416],
[449,0,425,435,406,400,420,417],
[458,465,0,456,423,435,418,433],
[442,455,434,0,428,434,428,446],
[483,484,467,462,0,464,445,451],
[468,490,455,456,426,0,446,452],
[462,470,472,462,445,444,0,439],
[474,473,457,444,439,438,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,431,430,448,454,469,436],
[442,0,442,427,435,446,458,413],
[459,448,0,434,464,447,469,432],
[460,463,456,0,450,472,463,445],
[442,455,426,440,0,447,476,455],
[436,444,443,418,443,0,445,433],
[421,432,421,427,414,445,0,433],
[454,477,458,445,435,457,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,478,441,430,443,446,429],
[453,0,456,433,440,458,416,428],
[412,434,0,423,407,428,412,410],
[449,457,467,0,435,465,425,444],
[460,450,483,455,0,422,449,433],
[447,432,462,425,468,0,446,439],
[444,474,478,465,441,444,0,463],
[461,462,480,446,457,451,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,422,461,434,470,427,436],
[477,0,444,433,450,480,437,439],
[468,446,0,469,439,483,446,456],
[429,457,421,0,430,457,440,446],
[456,440,451,460,0,461,443,439],
[420,410,407,433,429,0,433,437],
[463,453,444,450,447,457,0,454],
[454,451,434,444,451,453,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,443,475,430,485,472,468],
[404,0,429,429,426,438,444,430],
[447,461,0,419,417,443,431,438],
[415,461,471,0,451,473,472,403],
[460,464,473,439,0,504,449,430],
[405,452,447,417,386,0,441,420],
[418,446,459,418,441,449,0,415],
[422,460,452,487,460,470,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,509,445,488,446,391,509,408],
[381,0,481,447,420,466,528,500],
[445,409,0,439,350,510,523,428],
[402,443,451,0,382,313,527,513],
[444,470,540,508,0,568,537,539],
[499,424,380,577,322,0,524,483],
[381,362,367,363,353,366,0,302],
[482,390,462,377,351,407,588,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,442,452,483,443,450,464],
[428,0,418,439,440,436,428,451],
[448,472,0,443,470,481,452,496],
[438,451,447,0,468,454,456,439],
[407,450,420,422,0,450,416,445],
[447,454,409,436,440,0,450,457],
[440,462,438,434,474,440,0,452],
[426,439,394,451,445,433,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,454,439,457,452,451,445],
[454,0,442,456,424,455,469,452],
[436,448,0,448,435,456,444,434],
[451,434,442,0,431,447,463,464],
[433,466,455,459,0,451,455,436],
[438,435,434,443,439,0,454,421],
[439,421,446,427,435,436,0,421],
[445,438,456,426,454,469,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,423,427,431,436,454,404],
[464,0,451,442,448,432,464,446],
[467,439,0,442,461,436,460,450],
[463,448,448,0,443,433,440,443],
[459,442,429,447,0,425,434,443],
[454,458,454,457,465,0,462,438],
[436,426,430,450,456,428,0,427],
[486,444,440,447,447,452,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,436,446,433,426,424,442],
[450,0,446,447,458,450,442,457],
[454,444,0,427,441,443,446,444],
[444,443,463,0,440,452,458,467],
[457,432,449,450,0,449,442,453],
[464,440,447,438,441,0,467,427],
[466,448,444,432,448,423,0,431],
[448,433,446,423,437,463,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,405,413,388,454,444,449],
[456,0,420,425,411,419,455,440],
[485,470,0,490,453,442,468,440],
[477,465,400,0,453,415,449,445],
[502,479,437,437,0,472,489,444],
[436,471,448,475,418,0,450,444],
[446,435,422,441,401,440,0,415],
[441,450,450,445,446,446,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,495,462,433,473,500,458],
[430,0,485,449,458,466,498,420],
[395,405,0,403,406,427,458,425],
[428,441,487,0,428,447,471,435],
[457,432,484,462,0,481,485,456],
[417,424,463,443,409,0,454,410],
[390,392,432,419,405,436,0,414],
[432,470,465,455,434,480,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,461,478,486,490,460,462],
[447,0,436,470,436,482,447,473],
[429,454,0,464,455,468,440,457],
[412,420,426,0,435,481,437,425],
[404,454,435,455,0,483,452,449],
[400,408,422,409,407,0,409,423],
[430,443,450,453,438,481,0,442],
[428,417,433,465,441,467,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,396,477,447,396,447,480],
[469,0,470,528,493,468,445,474],
[494,420,0,471,440,390,416,497],
[413,362,419,0,364,337,437,474],
[443,397,450,526,0,394,364,473],
[494,422,500,553,496,0,550,503],
[443,445,474,453,526,340,0,527],
[410,416,393,416,417,387,363,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,422,415,421,419,441,412],
[439,0,446,433,435,424,447,401],
[468,444,0,414,423,426,431,416],
[475,457,476,0,445,443,482,443],
[469,455,467,445,0,446,448,433],
[471,466,464,447,444,0,449,426],
[449,443,459,408,442,441,0,449],
[478,489,474,447,457,464,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,419,427,462,466,463,446],
[453,0,449,442,461,459,415,463],
[471,441,0,437,441,453,456,448],
[463,448,453,0,446,474,441,447],
[428,429,449,444,0,440,430,428],
[424,431,437,416,450,0,407,435],
[427,475,434,449,460,483,0,452],
[444,427,442,443,462,455,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,403,462,453,458,409,413],
[428,0,393,425,440,412,395,421],
[487,497,0,491,471,444,427,438],
[428,465,399,0,454,436,426,429],
[437,450,419,436,0,420,445,434],
[432,478,446,454,470,0,414,456],
[481,495,463,464,445,476,0,453],
[477,469,452,461,456,434,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,443,436,448,468,427,444],
[427,0,445,436,449,430,454,431],
[447,445,0,442,432,436,454,437],
[454,454,448,0,421,443,444,448],
[442,441,458,469,0,452,435,444],
[422,460,454,447,438,0,461,436],
[463,436,436,446,455,429,0,437],
[446,459,453,442,446,454,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,461,470,460,444,474,456],
[428,0,472,450,464,433,458,417],
[429,418,0,469,422,411,449,415],
[420,440,421,0,416,435,449,420],
[430,426,468,474,0,438,451,454],
[446,457,479,455,452,0,481,442],
[416,432,441,441,439,409,0,403],
[434,473,475,470,436,448,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,441,455,426,438,437,425],
[457,0,485,462,448,437,444,443],
[449,405,0,463,450,419,477,424],
[435,428,427,0,420,413,449,442],
[464,442,440,470,0,441,465,439],
[452,453,471,477,449,0,441,458],
[453,446,413,441,425,449,0,428],
[465,447,466,448,451,432,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,449,496,443,479,439,464],
[487,0,428,487,455,481,442,430],
[441,462,0,456,454,456,419,441],
[394,403,434,0,435,442,393,445],
[447,435,436,455,0,484,439,431],
[411,409,434,448,406,0,405,427],
[451,448,471,497,451,485,0,418],
[426,460,449,445,459,463,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,490,461,419,446,462,446],
[393,0,415,443,373,365,413,381],
[400,475,0,467,448,408,440,425],
[429,447,423,0,370,398,461,447],
[471,517,442,520,0,433,436,461],
[444,525,482,492,457,0,439,466],
[428,477,450,429,454,451,0,463],
[444,509,465,443,429,424,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,429,396,442,416,419,403],
[465,0,443,428,456,476,456,425],
[461,447,0,438,463,437,446,402],
[494,462,452,0,469,488,479,445],
[448,434,427,421,0,451,443,436],
[474,414,453,402,439,0,437,417],
[471,434,444,411,447,453,0,422],
[487,465,488,445,454,473,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,423,470,452,415,481,466],
[415,0,401,434,413,400,449,451],
[467,489,0,454,421,444,467,464],
[420,456,436,0,413,393,436,441],
[438,477,469,477,0,453,504,471],
[475,490,446,497,437,0,485,450],
[409,441,423,454,386,405,0,450],
[424,439,426,449,419,440,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,438,430,445,440,448,432],
[482,0,480,436,445,473,458,471],
[452,410,0,462,434,452,442,439],
[460,454,428,0,469,455,467,448],
[445,445,456,421,0,444,486,457],
[450,417,438,435,446,0,442,447],
[442,432,448,423,404,448,0,431],
[458,419,451,442,433,443,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,490,454,426,466,467,478],
[415,0,468,467,443,480,421,430],
[400,422,0,450,417,429,414,419],
[436,423,440,0,426,409,443,457],
[464,447,473,464,0,445,477,449],
[424,410,461,481,445,0,447,452],
[423,469,476,447,413,443,0,439],
[412,460,471,433,441,438,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,463,475,430,449,458,473],
[444,0,460,468,451,455,466,472],
[427,430,0,448,420,429,427,454],
[415,422,442,0,431,429,440,449],
[460,439,470,459,0,453,454,463],
[441,435,461,461,437,0,435,454],
[432,424,463,450,436,455,0,456],
[417,418,436,441,427,436,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,510,456,472,472,441,463],
[421,0,491,453,454,445,421,447],
[380,399,0,436,420,449,406,418],
[434,437,454,0,446,488,446,426],
[418,436,470,444,0,441,402,440],
[418,445,441,402,449,0,430,447],
[449,469,484,444,488,460,0,491],
[427,443,472,464,450,443,399,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,438,436,426,442,442,398],
[444,0,460,424,460,441,451,427],
[452,430,0,405,457,410,437,415],
[454,466,485,0,442,419,457,422],
[464,430,433,448,0,458,438,438],
[448,449,480,471,432,0,490,453],
[448,439,453,433,452,400,0,401],
[492,463,475,468,452,437,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,586,456,552,528,484,576],
[466,0,533,426,459,472,467,464],
[304,357,0,397,394,398,354,403],
[434,464,493,0,485,496,490,528],
[338,431,496,405,0,469,356,472],
[362,418,492,394,421,0,453,467],
[406,423,536,400,534,437,0,494],
[314,426,487,362,418,423,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,421,427,409,412,475,419],
[462,0,409,449,396,403,504,400],
[469,481,0,474,478,469,537,442],
[463,441,416,0,414,416,471,389],
[481,494,412,476,0,415,465,451],
[478,487,421,474,475,0,506,452],
[415,386,353,419,425,384,0,368],
[471,490,448,501,439,438,522,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,479,469,437,496,463,453],
[428,0,479,382,429,410,370,447],
[411,411,0,351,362,400,345,418],
[421,508,539,0,466,394,406,486],
[453,461,528,424,0,457,410,495],
[394,480,490,496,433,0,362,523],
[427,520,545,484,480,528,0,475],
[437,443,472,404,395,367,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,517,527,545,459,514,446],
[477,0,481,432,551,505,490,423],
[373,409,0,469,455,375,383,444],
[363,458,421,0,436,376,385,374],
[345,339,435,454,0,372,390,348],
[431,385,515,514,518,0,419,422],
[376,400,507,505,500,471,0,446],
[444,467,446,516,542,468,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,461,449,436,443,466,459],
[448,0,467,464,444,426,434,434],
[429,423,0,447,452,450,469,429],
[441,426,443,0,459,447,454,450],
[454,446,438,431,0,417,458,455],
[447,464,440,443,473,0,452,450],
[424,456,421,436,432,438,0,421],
[431,456,461,440,435,440,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,428,475,439,451,460,432],
[448,0,422,474,466,451,453,447],
[462,468,0,455,444,422,454,475],
[415,416,435,0,413,421,437,405],
[451,424,446,477,0,458,462,440],
[439,439,468,469,432,0,435,423],
[430,437,436,453,428,455,0,439],
[458,443,415,485,450,467,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,449,433,458,447,447,444],
[451,0,450,433,471,419,467,445],
[441,440,0,407,440,441,461,428],
[457,457,483,0,465,445,467,448],
[432,419,450,425,0,426,436,435],
[443,471,449,445,464,0,472,446],
[443,423,429,423,454,418,0,434],
[446,445,462,442,455,444,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,456,475,468,445,445,430],
[411,0,423,437,442,406,424,401],
[434,467,0,459,444,430,405,443],
[415,453,431,0,467,429,469,452],
[422,448,446,423,0,430,435,435],
[445,484,460,461,460,0,414,451],
[445,466,485,421,455,476,0,425],
[460,489,447,438,455,439,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,431,417,454,470,454,436],
[454,0,443,443,457,452,447,453],
[459,447,0,467,457,456,453,438],
[473,447,423,0,457,438,449,457],
[436,433,433,433,0,443,437,425],
[420,438,434,452,447,0,459,461],
[436,443,437,441,453,431,0,432],
[454,437,452,433,465,429,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,400,445,448,416,429,415],
[488,0,459,422,473,439,453,450],
[490,431,0,455,472,443,492,458],
[445,468,435,0,486,424,453,436],
[442,417,418,404,0,419,430,401],
[474,451,447,466,471,0,469,438],
[461,437,398,437,460,421,0,447],
[475,440,432,454,489,452,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,431,443,414,435,445,443],
[447,0,445,457,435,447,451,445],
[459,445,0,445,454,455,453,467],
[447,433,445,0,426,434,451,460],
[476,455,436,464,0,460,451,460],
[455,443,435,456,430,0,475,461],
[445,439,437,439,439,415,0,438],
[447,445,423,430,430,429,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,411,415,442,451,443,461],
[447,0,420,426,412,435,415,444],
[479,470,0,430,446,476,468,457],
[475,464,460,0,503,460,444,478],
[448,478,444,387,0,429,426,430],
[439,455,414,430,461,0,436,472],
[447,475,422,446,464,454,0,453],
[429,446,433,412,460,418,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,454,433,458,433,435,426],
[433,0,433,412,447,424,421,403],
[436,457,0,450,464,463,438,421],
[457,478,440,0,480,433,439,425],
[432,443,426,410,0,424,408,401],
[457,466,427,457,466,0,460,430],
[455,469,452,451,482,430,0,452],
[464,487,469,465,489,460,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,387,450,424,430,432,414,440],
[503,0,480,460,447,467,431,438],
[440,410,0,425,424,454,413,406],
[466,430,465,0,443,474,450,445],
[460,443,466,447,0,454,439,467],
[458,423,436,416,436,0,465,441],
[476,459,477,440,451,425,0,445],
[450,452,484,445,423,449,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,429,451,440,412,430,445],
[433,0,427,462,442,431,435,437],
[461,463,0,459,462,470,456,430],
[439,428,431,0,431,441,429,425],
[450,448,428,459,0,438,426,432],
[478,459,420,449,452,0,456,433],
[460,455,434,461,464,434,0,459],
[445,453,460,465,458,457,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,387,449,408,465,422,399],
[492,0,466,464,433,480,483,453],
[503,424,0,529,492,479,515,466],
[441,426,361,0,418,466,417,414],
[482,457,398,472,0,441,459,420],
[425,410,411,424,449,0,495,408],
[468,407,375,473,431,395,0,412],
[491,437,424,476,470,482,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,441,439,436,444,438,450],
[432,0,449,460,446,440,426,451],
[449,441,0,446,428,426,439,441],
[451,430,444,0,421,446,420,447],
[454,444,462,469,0,457,452,467],
[446,450,464,444,433,0,446,476],
[452,464,451,470,438,444,0,471],
[440,439,449,443,423,414,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,382,402,408,413,413,465],
[435,0,449,446,458,419,442,471],
[508,441,0,506,496,394,485,491],
[488,444,384,0,484,416,461,454],
[482,432,394,406,0,432,435,445],
[477,471,496,474,458,0,471,437],
[477,448,405,429,455,419,0,441],
[425,419,399,436,445,453,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,435,467,454,456,434,444],
[431,0,490,451,468,482,439,457],
[455,400,0,452,490,458,433,440],
[423,439,438,0,437,439,419,450],
[436,422,400,453,0,446,397,434],
[434,408,432,451,444,0,414,439],
[456,451,457,471,493,476,0,443],
[446,433,450,440,456,451,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,449,428,433,450,458,463],
[465,0,446,447,424,468,441,477],
[441,444,0,453,452,464,454,471],
[462,443,437,0,430,467,448,457],
[457,466,438,460,0,449,451,452],
[440,422,426,423,441,0,436,442],
[432,449,436,442,439,454,0,447],
[427,413,419,433,438,448,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,424,441,439,433,419,428],
[470,0,461,448,455,481,442,458],
[466,429,0,444,459,418,448,443],
[449,442,446,0,452,463,435,475],
[451,435,431,438,0,440,411,418],
[457,409,472,427,450,0,472,462],
[471,448,442,455,479,418,0,459],
[462,432,447,415,472,428,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,355,498,319,494,415,336],
[478,0,475,480,496,500,437,417],
[535,415,0,484,422,481,414,300],
[392,410,406,0,397,416,430,316],
[571,394,468,493,0,477,473,349],
[396,390,409,474,413,0,412,371],
[475,453,476,460,417,478,0,458],
[554,473,590,574,541,519,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,457,421,448,457,469,446],
[437,0,458,421,438,450,443,440],
[433,432,0,416,435,437,449,418],
[469,469,474,0,462,477,472,437],
[442,452,455,428,0,455,452,442],
[433,440,453,413,435,0,449,423],
[421,447,441,418,438,441,0,432],
[444,450,472,453,448,467,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,458,444,453,460,451,414],
[413,0,418,407,451,437,455,421],
[432,472,0,440,444,459,433,438],
[446,483,450,0,460,444,459,443],
[437,439,446,430,0,467,450,432],
[430,453,431,446,423,0,448,402],
[439,435,457,431,440,442,0,449],
[476,469,452,447,458,488,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,451,457,452,442,447,468],
[429,0,450,469,454,460,458,434],
[439,440,0,448,446,433,429,440],
[433,421,442,0,412,418,443,436],
[438,436,444,478,0,455,457,428],
[448,430,457,472,435,0,446,444],
[443,432,461,447,433,444,0,456],
[422,456,450,454,462,446,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,440,419,458,480,449,446],
[463,0,451,431,433,458,435,459],
[450,439,0,434,454,470,445,467],
[471,459,456,0,459,455,442,463],
[432,457,436,431,0,471,428,437],
[410,432,420,435,419,0,448,434],
[441,455,445,448,462,442,0,472],
[444,431,423,427,453,456,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,408,438,438,413,432,445],
[459,0,437,440,424,436,436,447],
[482,453,0,454,441,421,437,433],
[452,450,436,0,418,425,446,465],
[452,466,449,472,0,411,438,477],
[477,454,469,465,479,0,441,476],
[458,454,453,444,452,449,0,451],
[445,443,457,425,413,414,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,457,463,434,445,457,451],
[451,0,454,447,449,463,441,456],
[433,436,0,449,445,452,451,468],
[427,443,441,0,438,447,440,466],
[456,441,445,452,0,453,456,437],
[445,427,438,443,437,0,467,462],
[433,449,439,450,434,423,0,447],
[439,434,422,424,453,428,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,447,446,443,440,449,442],
[430,0,430,410,424,433,449,438],
[443,460,0,429,433,443,459,467],
[444,480,461,0,451,453,477,468],
[447,466,457,439,0,447,458,452],
[450,457,447,437,443,0,457,450],
[441,441,431,413,432,433,0,429],
[448,452,423,422,438,440,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,434,451,434,420,399,415],
[479,0,453,465,464,444,452,454],
[456,437,0,434,439,417,403,414],
[439,425,456,0,454,412,428,420],
[456,426,451,436,0,415,430,413],
[470,446,473,478,475,0,421,427],
[491,438,487,462,460,469,0,447],
[475,436,476,470,477,463,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,460,453,458,445,424,447],
[424,0,404,433,471,440,422,415],
[430,486,0,447,454,435,442,416],
[437,457,443,0,464,431,444,430],
[432,419,436,426,0,431,416,420],
[445,450,455,459,459,0,452,446],
[466,468,448,446,474,438,0,457],
[443,475,474,460,470,444,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,434,446,455,411,464,463],
[432,0,438,423,439,427,459,429],
[456,452,0,447,439,435,469,433],
[444,467,443,0,457,433,456,434],
[435,451,451,433,0,448,470,440],
[479,463,455,457,442,0,459,457],
[426,431,421,434,420,431,0,430],
[427,461,457,456,450,433,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,454,468,422,421,456,448],
[412,0,416,492,430,400,453,433],
[436,474,0,474,436,408,474,433],
[422,398,416,0,409,388,416,455],
[468,460,454,481,0,450,478,437],
[469,490,482,502,440,0,494,456],
[434,437,416,474,412,396,0,412],
[442,457,457,435,453,434,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,425,432,441,427,443,446],
[466,0,422,429,478,439,454,465],
[465,468,0,439,478,458,462,461],
[458,461,451,0,460,439,491,462],
[449,412,412,430,0,432,449,434],
[463,451,432,451,458,0,471,464],
[447,436,428,399,441,419,0,439],
[444,425,429,428,456,426,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,456,432,432,452,446,454],
[438,0,437,464,447,437,450,441],
[434,453,0,447,434,447,436,434],
[458,426,443,0,436,464,459,431],
[458,443,456,454,0,451,471,457],
[438,453,443,426,439,0,448,454],
[444,440,454,431,419,442,0,423],
[436,449,456,459,433,436,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,527,368,475,471,528,365],
[419,0,420,523,421,471,474,524],
[363,470,0,418,368,419,527,313],
[522,367,472,0,421,525,472,314],
[415,469,522,469,0,521,473,311],
[419,419,471,365,369,0,369,366],
[362,416,363,418,417,521,0,466],
[525,366,577,576,579,524,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,424,448,418,443,443,439],
[468,0,442,476,453,455,459,432],
[466,448,0,461,442,453,466,466],
[442,414,429,0,448,447,452,454],
[472,437,448,442,0,448,460,456],
[447,435,437,443,442,0,457,451],
[447,431,424,438,430,433,0,443],
[451,458,424,436,434,439,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,453,447,445,479,480,483],
[411,0,429,435,430,447,437,464],
[437,461,0,431,475,464,459,475],
[443,455,459,0,479,464,479,478],
[445,460,415,411,0,454,454,469],
[411,443,426,426,436,0,450,458],
[410,453,431,411,436,440,0,423],
[407,426,415,412,421,432,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,415,452,452,461,438,483],
[460,0,451,422,441,434,450,445],
[475,439,0,490,456,464,454,485],
[438,468,400,0,449,444,414,461],
[438,449,434,441,0,461,440,457],
[429,456,426,446,429,0,436,420],
[452,440,436,476,450,454,0,450],
[407,445,405,429,433,470,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,468,450,454,453,430,460],
[442,0,446,461,459,469,459,464],
[422,444,0,440,463,454,448,473],
[440,429,450,0,460,461,445,472],
[436,431,427,430,0,450,444,447],
[437,421,436,429,440,0,457,443],
[460,431,442,445,446,433,0,461],
[430,426,417,418,443,447,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,467,423,437,401,436,466],
[457,0,478,465,476,417,495,501],
[423,412,0,445,402,399,425,387],
[467,425,445,0,463,450,457,497],
[453,414,488,427,0,404,455,443],
[489,473,491,440,486,0,472,504],
[454,395,465,433,435,418,0,422],
[424,389,503,393,447,386,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,450,449,428,464,463,450],
[444,0,469,452,440,463,438,459],
[440,421,0,431,422,461,421,433],
[441,438,459,0,437,473,450,444],
[462,450,468,453,0,456,445,457],
[426,427,429,417,434,0,449,433],
[427,452,469,440,445,441,0,441],
[440,431,457,446,433,457,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,489,352,373,370,477,354],
[457,0,472,412,435,374,493,377],
[401,418,0,400,421,460,460,419],
[538,478,490,0,553,399,576,496],
[517,455,469,337,0,361,441,358],
[520,516,430,491,529,0,479,427],
[413,397,430,314,449,411,0,374],
[536,513,471,394,532,463,516,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,438,449,471,459,425,449],
[436,0,442,443,441,442,430,403],
[452,448,0,443,456,452,432,453],
[441,447,447,0,448,456,463,458],
[419,449,434,442,0,451,434,433],
[431,448,438,434,439,0,446,423],
[465,460,458,427,456,444,0,433],
[441,487,437,432,457,467,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,459,439,474,433,443,434],
[465,0,452,480,480,439,456,459],
[431,438,0,440,466,442,440,445],
[451,410,450,0,463,446,426,438],
[416,410,424,427,0,414,425,429],
[457,451,448,444,476,0,442,462],
[447,434,450,464,465,448,0,450],
[456,431,445,452,461,428,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,514,417,505,488,470,523,511],
[376,0,430,396,403,418,447,399],
[473,460,0,479,478,453,474,419],
[385,494,411,0,416,416,479,412],
[402,487,412,474,0,394,454,421],
[420,472,437,474,496,0,451,443],
[367,443,416,411,436,439,0,364],
[379,491,471,478,469,447,526,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,444,463,444,461,473,468],
[439,0,434,433,438,439,438,440],
[446,456,0,440,448,481,463,466],
[427,457,450,0,419,448,444,440],
[446,452,442,471,0,450,458,461],
[429,451,409,442,440,0,450,433],
[417,452,427,446,432,440,0,443],
[422,450,424,450,429,457,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,437,466,421,432,437,421],
[447,0,472,421,381,406,384,450],
[453,418,0,451,446,459,411,458],
[424,469,439,0,387,378,393,396],
[469,509,444,503,0,457,457,481],
[458,484,431,512,433,0,428,448],
[453,506,479,497,433,462,0,459],
[469,440,432,494,409,442,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,301,448,373,321,387,369,463],
[589,0,414,533,431,513,574,483],
[442,476,0,490,467,419,463,462],
[517,357,400,0,394,405,448,395],
[569,459,423,496,0,479,484,520],
[503,377,471,485,411,0,471,431],
[521,316,427,442,406,419,0,464],
[427,407,428,495,370,459,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,470,470,440,437,460,451],
[441,0,463,451,428,432,445,418],
[420,427,0,430,433,408,452,400],
[420,439,460,0,442,423,443,441],
[450,462,457,448,0,451,458,445],
[453,458,482,467,439,0,484,451],
[430,445,438,447,432,406,0,438],
[439,472,490,449,445,439,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,407,423,468,457,445,463],
[462,0,422,432,453,468,452,459],
[483,468,0,448,488,498,444,464],
[467,458,442,0,469,476,456,455],
[422,437,402,421,0,453,415,454],
[433,422,392,414,437,0,405,433],
[445,438,446,434,475,485,0,449],
[427,431,426,435,436,457,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,456,443,446,453,469,456],
[451,0,439,440,449,447,452,450],
[434,451,0,465,438,443,467,458],
[447,450,425,0,445,433,456,445],
[444,441,452,445,0,458,441,454],
[437,443,447,457,432,0,456,453],
[421,438,423,434,449,434,0,426],
[434,440,432,445,436,437,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,508,475,453,442,490,483],
[440,0,469,484,439,483,502,503],
[382,421,0,453,422,453,446,496],
[415,406,437,0,421,420,407,393],
[437,451,468,469,0,496,451,422],
[448,407,437,470,394,0,486,458],
[400,388,444,483,439,404,0,400],
[407,387,394,497,468,432,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,422,440,454,422,436,487],
[417,0,397,403,393,397,434,412],
[468,493,0,468,433,468,475,463],
[450,487,422,0,433,451,425,422],
[436,497,457,457,0,458,480,466],
[468,493,422,439,432,0,463,403],
[454,456,415,465,410,427,0,431],
[403,478,427,468,424,487,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,469,470,460,459,450,445],
[455,0,454,457,467,461,431,417],
[421,436,0,423,438,440,419,425],
[420,433,467,0,438,431,425,424],
[430,423,452,452,0,423,421,441],
[431,429,450,459,467,0,425,453],
[440,459,471,465,469,465,0,464],
[445,473,465,466,449,437,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,462,474,424,419,449,469],
[413,0,437,472,418,405,426,409],
[428,453,0,495,439,430,435,483],
[416,418,395,0,388,366,390,388],
[466,472,451,502,0,449,428,473],
[471,485,460,524,441,0,453,490],
[441,464,455,500,462,437,0,465],
[421,481,407,502,417,400,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,297,593,445,149,297,447],
[443,0,297,593,740,149,446,446],
[593,593,0,593,740,444,744,593],
[297,297,297,0,446,446,446,447],
[445,150,150,444,0,299,596,150],
[741,741,446,444,591,0,595,741],
[593,444,146,444,294,295,0,444],
[443,444,297,443,740,149,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,441,468,459,439,465,468],
[398,0,439,449,413,382,453,424],
[449,451,0,457,431,451,455,432],
[422,441,433,0,444,411,450,453],
[431,477,459,446,0,442,436,459],
[451,508,439,479,448,0,473,490],
[425,437,435,440,454,417,0,436],
[422,466,458,437,431,400,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,415,455,428,428,427,459],
[437,0,453,478,453,468,437,448],
[475,437,0,487,456,479,414,477],
[435,412,403,0,405,422,425,426],
[462,437,434,485,0,447,463,457],
[462,422,411,468,443,0,438,455],
[463,453,476,465,427,452,0,459],
[431,442,413,464,433,435,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,511,512,560,508,474,501,445],
[379,0,475,519,394,420,449,448],
[378,415,0,464,392,430,458,390],
[330,371,426,0,451,417,403,431],
[382,496,498,439,0,452,483,415],
[416,470,460,473,438,0,443,419],
[389,441,432,487,407,447,0,376],
[445,442,500,459,475,471,514,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,448,427,420,406,436,432],
[454,0,432,447,442,450,457,457],
[442,458,0,438,427,469,438,457],
[463,443,452,0,447,453,416,446],
[470,448,463,443,0,475,460,486],
[484,440,421,437,415,0,432,448],
[454,433,452,474,430,458,0,488],
[458,433,433,444,404,442,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,473,494,426,439,475,486],
[411,0,444,486,452,446,451,479],
[417,446,0,495,399,445,426,460],
[396,404,395,0,381,403,413,471],
[464,438,491,509,0,472,478,504],
[451,444,445,487,418,0,468,460],
[415,439,464,477,412,422,0,459],
[404,411,430,419,386,430,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,429,379,407,444,418,472],
[430,0,372,353,352,426,436,436],
[461,518,0,436,467,474,434,519],
[511,537,454,0,470,478,469,421],
[483,538,423,420,0,469,434,474],
[446,464,416,412,421,0,417,444],
[472,454,456,421,456,473,0,514],
[418,454,371,469,416,446,376,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,452,477,436,458,451,470],
[436,0,451,463,448,462,456,454],
[438,439,0,460,441,445,456,439],
[413,427,430,0,414,441,445,437],
[454,442,449,476,0,463,457,458],
[432,428,445,449,427,0,438,435],
[439,434,434,445,433,452,0,447],
[420,436,451,453,432,455,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,458,424,462,415,453,464],
[437,0,470,451,449,452,443,440],
[432,420,0,422,441,431,414,449],
[466,439,468,0,472,474,439,459],
[428,441,449,418,0,411,448,461],
[475,438,459,416,479,0,460,456],
[437,447,476,451,442,430,0,452],
[426,450,441,431,429,434,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,417,404,486,517,412,445],
[411,0,463,413,450,526,457,427],
[473,427,0,380,436,469,507,419],
[486,477,510,0,497,475,474,410],
[404,440,454,393,0,487,435,424],
[373,364,421,415,403,0,400,416],
[478,433,383,416,455,490,0,456],
[445,463,471,480,466,474,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,436,440,456,438,437,436],
[453,0,434,429,451,419,436,434],
[454,456,0,449,468,426,446,440],
[450,461,441,0,467,437,462,451],
[434,439,422,423,0,422,410,440],
[452,471,464,453,468,0,447,434],
[453,454,444,428,480,443,0,435],
[454,456,450,439,450,456,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,439,448,425,450,490,426],
[443,0,439,473,420,453,492,422],
[451,451,0,498,447,367,399,451],
[442,417,392,0,436,418,444,437],
[465,470,443,454,0,472,478,473],
[440,437,523,472,418,0,517,434],
[400,398,491,446,412,373,0,391],
[464,468,439,453,417,456,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,437,435,456,466,477,440],
[453,0,467,441,444,453,472,449],
[453,423,0,463,462,435,465,433],
[455,449,427,0,453,469,461,417],
[434,446,428,437,0,413,446,422],
[424,437,455,421,477,0,459,448],
[413,418,425,429,444,431,0,432],
[450,441,457,473,468,442,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,413,428,434,431,447,416],
[465,0,467,425,434,452,481,441],
[477,423,0,432,428,429,460,427],
[462,465,458,0,448,424,450,442],
[456,456,462,442,0,457,478,419],
[459,438,461,466,433,0,491,449],
[443,409,430,440,412,399,0,417],
[474,449,463,448,471,441,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,452,421,436,444,416,437],
[469,0,475,469,451,476,437,454],
[438,415,0,434,444,438,435,465],
[469,421,456,0,431,444,443,451],
[454,439,446,459,0,478,439,445],
[446,414,452,446,412,0,447,438],
[474,453,455,447,451,443,0,454],
[453,436,425,439,445,452,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,470,404,490,465,478,473],
[450,0,436,459,488,499,466,415],
[420,454,0,485,551,488,531,460],
[486,431,405,0,448,434,515,443],
[400,402,339,442,0,370,490,404],
[425,391,402,456,520,0,548,403],
[412,424,359,375,400,342,0,364],
[417,475,430,447,486,487,526,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,448,444,425,448,444,440],
[476,0,497,472,445,472,431,464],
[442,393,0,417,448,477,417,440],
[446,418,473,0,445,467,450,447],
[465,445,442,445,0,468,436,433],
[442,418,413,423,422,0,425,427],
[446,459,473,440,454,465,0,466],
[450,426,450,443,457,463,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,440,464,452,425,410,427],
[453,0,444,456,464,412,454,450],
[450,446,0,490,470,433,463,426],
[426,434,400,0,437,403,406,416],
[438,426,420,453,0,436,431,394],
[465,478,457,487,454,0,436,464],
[480,436,427,484,459,454,0,472],
[463,440,464,474,496,426,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,439,450,451,436,445,416],
[453,0,412,452,436,445,444,437],
[451,478,0,454,443,461,453,432],
[440,438,436,0,453,436,448,444],
[439,454,447,437,0,445,442,446],
[454,445,429,454,445,0,460,436],
[445,446,437,442,448,430,0,447],
[474,453,458,446,444,454,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,459,452,463,419,463,466],
[461,0,451,475,439,471,461,463],
[431,439,0,429,432,424,439,450],
[438,415,461,0,443,432,437,432],
[427,451,458,447,0,454,450,474],
[471,419,466,458,436,0,449,452],
[427,429,451,453,440,441,0,454],
[424,427,440,458,416,438,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,587,350,424,392,427,430,468],
[303,0,351,307,428,426,389,387],
[540,539,0,426,350,500,503,583],
[466,583,464,0,428,504,544,391],
[498,462,540,462,0,422,579,539],
[463,464,390,386,468,0,502,544],
[460,501,387,346,311,388,0,465],
[422,503,307,499,351,346,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,448,462,449,431,439,442],
[445,0,455,449,449,445,459,449],
[442,435,0,428,433,419,436,433],
[428,441,462,0,420,422,456,448],
[441,441,457,470,0,435,430,444],
[459,445,471,468,455,0,449,440],
[451,431,454,434,460,441,0,446],
[448,441,457,442,446,450,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,424,465,413,448,439,458],
[469,0,426,409,450,479,475,469],
[466,464,0,455,424,464,467,471],
[425,481,435,0,436,425,437,433],
[477,440,466,454,0,450,488,481],
[442,411,426,465,440,0,439,444],
[451,415,423,453,402,451,0,445],
[432,421,419,457,409,446,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,416,448,449,382,428,438],
[451,0,412,447,439,402,448,442],
[474,478,0,473,476,438,469,456],
[442,443,417,0,434,412,414,424],
[441,451,414,456,0,405,443,428],
[508,488,452,478,485,0,419,480],
[462,442,421,476,447,471,0,449],
[452,448,434,466,462,410,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,452,460,467,461,450,410],
[430,0,443,441,427,429,442,410],
[438,447,0,440,460,414,453,419],
[430,449,450,0,422,428,422,440],
[423,463,430,468,0,461,451,454],
[429,461,476,462,429,0,447,447],
[440,448,437,468,439,443,0,439],
[480,480,471,450,436,443,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,425,413,424,451,426,419],
[468,0,459,428,447,461,430,450],
[465,431,0,439,442,476,445,440],
[477,462,451,0,424,461,427,432],
[466,443,448,466,0,439,431,442],
[439,429,414,429,451,0,431,442],
[464,460,445,463,459,459,0,446],
[471,440,450,458,448,448,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,421,445,427,421,432,411],
[461,0,415,483,424,415,462,421],
[469,475,0,465,460,444,454,451],
[445,407,425,0,436,386,410,415],
[463,466,430,454,0,458,456,432],
[469,475,446,504,432,0,473,445],
[458,428,436,480,434,417,0,400],
[479,469,439,475,458,445,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,434,440,469,456,467,474],
[436,0,440,441,462,441,451,463],
[456,450,0,445,458,434,446,476],
[450,449,445,0,466,445,455,444],
[421,428,432,424,0,422,449,453],
[434,449,456,445,468,0,445,471],
[423,439,444,435,441,445,0,446],
[416,427,414,446,437,419,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,441,422,415,432,427,431],
[429,0,415,424,446,398,437,410],
[449,475,0,442,462,455,469,453],
[468,466,448,0,441,430,465,465],
[475,444,428,449,0,443,422,475],
[458,492,435,460,447,0,436,430],
[463,453,421,425,468,454,0,430],
[459,480,437,425,415,460,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,419,425,458,424,441,465],
[432,0,433,427,504,434,456,461],
[471,457,0,436,513,469,462,525],
[465,463,454,0,522,436,461,477],
[432,386,377,368,0,412,385,458],
[466,456,421,454,478,0,497,469],
[449,434,428,429,505,393,0,468],
[425,429,365,413,432,421,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,464,411,416,407,440,432],
[449,0,441,424,409,412,439,435],
[426,449,0,425,404,417,439,423],
[479,466,465,0,421,427,453,441],
[474,481,486,469,0,431,437,460],
[483,478,473,463,459,0,465,444],
[450,451,451,437,453,425,0,431],
[458,455,467,449,430,446,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,471,413,450,413,425,438],
[446,0,475,433,433,438,422,429],
[419,415,0,394,440,406,390,401],
[477,457,496,0,441,442,393,464],
[440,457,450,449,0,422,446,434],
[477,452,484,448,468,0,423,485],
[465,468,500,497,444,467,0,464],
[452,461,489,426,456,405,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,486,439,469,414,445,407],
[444,0,426,460,444,458,421,429],
[404,464,0,457,473,443,452,429],
[451,430,433,0,429,425,403,352],
[421,446,417,461,0,370,402,358],
[476,432,447,465,520,0,460,481],
[445,469,438,487,488,430,0,402],
[483,461,461,538,532,409,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,455,448,472,443,452,456],
[431,0,431,430,439,427,425,444],
[435,459,0,443,462,464,444,475],
[442,460,447,0,447,468,436,450],
[418,451,428,443,0,443,440,452],
[447,463,426,422,447,0,426,448],
[438,465,446,454,450,464,0,470],
[434,446,415,440,438,442,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,451,456,449,443,442,450],
[446,0,450,442,453,429,431,443],
[439,440,0,452,447,426,442,431],
[434,448,438,0,457,431,441,419],
[441,437,443,433,0,449,431,432],
[447,461,464,459,441,0,439,442],
[448,459,448,449,459,451,0,431],
[440,447,459,471,458,448,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,467,455,454,444,464,462],
[433,0,444,472,448,449,460,426],
[423,446,0,453,395,432,448,462],
[435,418,437,0,409,418,444,419],
[436,442,495,481,0,457,465,494],
[446,441,458,472,433,0,479,461],
[426,430,442,446,425,411,0,463],
[428,464,428,471,396,429,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,428,418,406,425,456,438],
[470,0,433,410,439,448,450,441],
[462,457,0,436,490,436,451,456],
[472,480,454,0,457,459,458,411],
[484,451,400,433,0,413,387,460],
[465,442,454,431,477,0,483,427],
[434,440,439,432,503,407,0,401],
[452,449,434,479,430,463,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,441,456,431,444,424,422],
[460,0,448,430,448,431,477,447],
[449,442,0,446,403,426,437,451],
[434,460,444,0,461,465,466,459],
[459,442,487,429,0,454,430,486],
[446,459,464,425,436,0,448,455],
[466,413,453,424,460,442,0,458],
[468,443,439,431,404,435,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,463,458,432,436,421,469],
[452,0,464,437,454,438,432,473],
[427,426,0,435,444,449,406,446],
[432,453,455,0,456,417,434,474],
[458,436,446,434,0,443,459,456],
[454,452,441,473,447,0,436,459],
[469,458,484,456,431,454,0,435],
[421,417,444,416,434,431,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,500,435,534,483,484,520],
[426,0,525,396,511,492,453,474],
[390,365,0,429,458,408,420,407],
[455,494,461,0,513,444,504,471],
[356,379,432,377,0,459,429,438],
[407,398,482,446,431,0,428,433],
[406,437,470,386,461,462,0,438],
[370,416,483,419,452,457,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,494,488,532,581,550,489],
[479,0,400,411,423,445,414,443],
[396,490,0,498,533,581,497,469],
[402,479,392,0,340,421,464,384],
[358,467,357,550,0,481,478,418],
[309,445,309,469,409,0,367,379],
[340,476,393,426,412,523,0,445],
[401,447,421,506,472,511,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,466,466,456,425,419,487],
[403,0,421,445,426,397,423,445],
[424,469,0,461,444,438,477,447],
[424,445,429,0,461,432,420,447],
[434,464,446,429,0,426,441,431],
[465,493,452,458,464,0,440,485],
[471,467,413,470,449,450,0,470],
[403,445,443,443,459,405,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,456,468,483,465,438,479],
[399,0,411,396,422,414,404,395],
[434,479,0,428,474,462,448,427],
[422,494,462,0,481,451,442,446],
[407,468,416,409,0,445,410,424],
[425,476,428,439,445,0,445,434],
[452,486,442,448,480,445,0,427],
[411,495,463,444,466,456,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,439,505,459,455,494,445],
[400,0,384,468,425,418,524,420],
[451,506,0,496,462,437,514,414],
[385,422,394,0,408,403,437,439],
[431,465,428,482,0,470,511,469],
[435,472,453,487,420,0,496,458],
[396,366,376,453,379,394,0,405],
[445,470,476,451,421,432,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,470,438,490,458,423,463],
[421,0,510,471,469,454,476,462],
[420,380,0,386,365,420,386,375],
[452,419,504,0,449,449,394,429],
[400,421,525,441,0,450,468,457],
[432,436,470,441,440,0,395,433],
[467,414,504,496,422,495,0,369],
[427,428,515,461,433,457,521,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,433,458,455,434,435,462],
[430,0,455,459,435,425,444,444],
[457,435,0,454,429,419,446,461],
[432,431,436,0,418,411,428,447],
[435,455,461,472,0,451,439,474],
[456,465,471,479,439,0,441,449],
[455,446,444,462,451,449,0,450],
[428,446,429,443,416,441,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,443,445,428,468,422,455],
[451,0,464,463,421,474,460,453],
[447,426,0,430,427,451,404,439],
[445,427,460,0,447,464,441,451],
[462,469,463,443,0,471,448,443],
[422,416,439,426,419,0,422,412],
[468,430,486,449,442,468,0,470],
[435,437,451,439,447,478,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,464,398,412,462,477,447],
[465,0,483,452,436,428,492,405],
[426,407,0,419,419,453,459,414],
[492,438,471,0,407,460,524,470],
[478,454,471,483,0,478,521,441],
[428,462,437,430,412,0,467,425],
[413,398,431,366,369,423,0,400],
[443,485,476,420,449,465,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,439,463,498,473,460,509],
[392,0,403,427,433,411,430,440],
[451,487,0,459,450,449,428,474],
[427,463,431,0,458,455,401,443],
[392,457,440,432,0,450,469,461],
[417,479,441,435,440,0,487,443],
[430,460,462,489,421,403,0,505],
[381,450,416,447,429,447,385,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,473,460,471,416,454,413],
[441,0,509,439,491,434,466,452],
[417,381,0,431,458,402,437,421],
[430,451,459,0,493,425,452,420],
[419,399,432,397,0,411,447,396],
[474,456,488,465,479,0,462,439],
[436,424,453,438,443,428,0,404],
[477,438,469,470,494,451,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,449,471,443,452,446,455],
[422,0,455,469,434,424,438,455],
[441,435,0,420,401,413,417,429],
[419,421,470,0,424,422,430,449],
[447,456,489,466,0,442,453,475],
[438,466,477,468,448,0,452,466],
[444,452,473,460,437,438,0,444],
[435,435,461,441,415,424,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,471,474,466,462,462,436],
[410,0,470,446,441,430,437,413],
[419,420,0,435,447,430,436,409],
[416,444,455,0,416,453,432,437],
[424,449,443,474,0,422,434,426],
[428,460,460,437,468,0,448,402],
[428,453,454,458,456,442,0,447],
[454,477,481,453,464,488,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,451,455,425,449,431,486],
[408,0,404,408,391,390,385,410],
[439,486,0,479,422,401,415,435],
[435,482,411,0,410,430,438,427],
[465,499,468,480,0,440,451,444],
[441,500,489,460,450,0,459,466],
[459,505,475,452,439,431,0,483],
[404,480,455,463,446,424,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,462,494,458,443,443,435],
[422,0,475,457,451,447,466,445],
[428,415,0,425,418,412,439,428],
[396,433,465,0,422,441,420,415],
[432,439,472,468,0,464,470,454],
[447,443,478,449,426,0,442,459],
[447,424,451,470,420,448,0,423],
[455,445,462,475,436,431,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,401,428,431,406,423,419],
[444,0,395,437,417,445,403,406],
[489,495,0,451,455,445,447,427],
[462,453,439,0,441,420,397,421],
[459,473,435,449,0,439,441,453],
[484,445,445,470,451,0,451,427],
[467,487,443,493,449,439,0,464],
[471,484,463,469,437,463,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,398,365,415,415,357,423],
[481,0,391,395,416,444,392,450],
[492,499,0,394,441,485,435,479],
[525,495,496,0,438,475,468,466],
[475,474,449,452,0,426,394,478],
[475,446,405,415,464,0,444,434],
[533,498,455,422,496,446,0,482],
[467,440,411,424,412,456,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,469,436,436,463,465,419],
[464,0,475,460,444,453,482,425],
[421,415,0,413,435,434,458,425],
[454,430,477,0,446,442,463,447],
[454,446,455,444,0,430,467,415],
[427,437,456,448,460,0,452,426],
[425,408,432,427,423,438,0,426],
[471,465,465,443,475,464,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,447,477,424,444,439,450],
[436,0,467,449,433,404,449,436],
[443,423,0,438,430,419,412,428],
[413,441,452,0,453,440,466,452],
[466,457,460,437,0,440,455,458],
[446,486,471,450,450,0,441,461],
[451,441,478,424,435,449,0,455],
[440,454,462,438,432,429,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,465,432,448,454,456,447],
[448,0,461,482,452,444,485,449],
[425,429,0,460,414,457,461,461],
[458,408,430,0,434,432,443,438],
[442,438,476,456,0,459,447,442],
[436,446,433,458,431,0,460,458],
[434,405,429,447,443,430,0,442],
[443,441,429,452,448,432,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,435,438,444,442,442,458],
[459,0,435,439,449,446,453,472],
[455,455,0,455,440,444,473,485],
[452,451,435,0,452,447,460,454],
[446,441,450,438,0,441,458,479],
[448,444,446,443,449,0,471,460],
[448,437,417,430,432,419,0,454],
[432,418,405,436,411,430,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,431,496,449,451,458,446],
[416,0,427,428,408,443,422,413],
[459,463,0,463,431,457,458,439],
[394,462,427,0,428,418,423,446],
[441,482,459,462,0,461,442,460],
[439,447,433,472,429,0,443,437],
[432,468,432,467,448,447,0,464],
[444,477,451,444,430,453,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,448,451,436,448,450,439],
[449,0,468,445,448,448,460,441],
[442,422,0,414,420,460,433,441],
[439,445,476,0,432,465,462,451],
[454,442,470,458,0,462,456,460],
[442,442,430,425,428,0,439,437],
[440,430,457,428,434,451,0,450],
[451,449,449,439,430,453,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,472,490,449,419,451,453],
[406,0,472,462,428,408,399,412],
[418,418,0,455,395,410,447,402],
[400,428,435,0,412,404,404,417],
[441,462,495,478,0,411,436,415],
[471,482,480,486,479,0,497,434],
[439,491,443,486,454,393,0,419],
[437,478,488,473,475,456,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,418,438,437,432,449,443],
[442,0,453,460,449,474,471,471],
[472,437,0,446,441,457,469,442],
[452,430,444,0,435,461,464,439],
[453,441,449,455,0,458,456,460],
[458,416,433,429,432,0,441,455],
[441,419,421,426,434,449,0,453],
[447,419,448,451,430,435,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,436,400,416,396,363,438],
[474,0,465,483,452,431,430,470],
[454,425,0,453,458,437,395,436],
[490,407,437,0,432,408,415,424],
[474,438,432,458,0,451,434,456],
[494,459,453,482,439,0,455,459],
[527,460,495,475,456,435,0,468],
[452,420,454,466,434,431,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,454,461,418,467,450,402],
[420,0,480,471,470,468,523,430],
[436,410,0,475,452,434,440,449],
[429,419,415,0,383,486,471,408],
[472,420,438,507,0,528,475,524],
[423,422,456,404,362,0,370,431],
[440,367,450,419,415,520,0,455],
[488,460,441,482,366,459,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,421,462,478,438,482,454],
[454,0,433,451,462,439,416,441],
[469,457,0,463,474,460,441,436],
[428,439,427,0,448,434,421,450],
[412,428,416,442,0,424,429,453],
[452,451,430,456,466,0,432,435],
[408,474,449,469,461,458,0,455],
[436,449,454,440,437,455,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,434,445,454,473,467,444],
[462,0,455,433,455,482,458,449],
[456,435,0,444,461,445,456,426],
[445,457,446,0,453,474,486,425],
[436,435,429,437,0,458,454,428],
[417,408,445,416,432,0,431,416],
[423,432,434,404,436,459,0,434],
[446,441,464,465,462,474,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,440,441,417,405,443,437],
[453,0,438,454,427,413,435,450],
[450,452,0,454,447,416,443,466],
[449,436,436,0,429,406,420,466],
[473,463,443,461,0,445,453,451],
[485,477,474,484,445,0,461,449],
[447,455,447,470,437,429,0,458],
[453,440,424,424,439,441,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,445,469,473,470,482,446],
[432,0,461,446,490,489,475,480],
[445,429,0,448,457,453,474,431],
[421,444,442,0,461,480,467,452],
[417,400,433,429,0,478,425,431],
[420,401,437,410,412,0,441,430],
[408,415,416,423,465,449,0,427],
[444,410,459,438,459,460,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,416,453,501,446,450,409],
[437,0,431,457,469,453,477,430],
[474,459,0,468,487,463,444,453],
[437,433,422,0,503,434,437,394],
[389,421,403,387,0,387,406,372],
[444,437,427,456,503,0,441,427],
[440,413,446,453,484,449,0,409],
[481,460,437,496,518,463,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,440,463,451,454,448,470],
[440,0,448,440,437,471,422,475],
[450,442,0,462,450,476,434,490],
[427,450,428,0,450,452,436,474],
[439,453,440,440,0,437,414,455],
[436,419,414,438,453,0,409,440],
[442,468,456,454,476,481,0,481],
[420,415,400,416,435,450,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,451,444,468,443,474,451],
[438,0,432,441,458,438,479,452],
[439,458,0,450,469,461,454,469],
[446,449,440,0,457,438,471,442],
[422,432,421,433,0,423,451,437],
[447,452,429,452,467,0,451,446],
[416,411,436,419,439,439,0,427],
[439,438,421,448,453,444,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,266,394,354,370,432,188,312],
[624,0,517,495,457,521,373,459],
[496,373,0,499,432,475,290,354],
[536,395,391,0,449,475,312,475],
[520,433,458,441,0,457,334,455],
[458,369,415,415,433,0,355,354],
[702,517,600,578,556,535,0,434],
[578,431,536,415,435,536,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,452,472,432,459,443,465],
[450,0,449,468,445,450,451,457],
[438,441,0,472,446,447,454,462],
[418,422,418,0,442,432,459,442],
[458,445,444,448,0,449,435,458],
[431,440,443,458,441,0,426,447],
[447,439,436,431,455,464,0,461],
[425,433,428,448,432,443,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,438,403,418,455,445,410],
[464,0,494,457,405,444,511,454],
[452,396,0,405,424,406,475,423],
[487,433,485,0,459,491,477,453],
[472,485,466,431,0,471,479,458],
[435,446,484,399,419,0,461,418],
[445,379,415,413,411,429,0,400],
[480,436,467,437,432,472,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,428,495,408,455,478,463],
[443,0,410,496,411,409,442,438],
[462,480,0,480,418,456,500,474],
[395,394,410,0,398,455,463,401],
[482,479,472,492,0,440,509,486],
[435,481,434,435,450,0,498,431],
[412,448,390,427,381,392,0,415],
[427,452,416,489,404,459,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,423,486,470,487,483,515],
[408,0,456,424,374,433,407,443],
[467,434,0,493,362,470,404,514],
[404,466,397,0,380,455,423,501],
[420,516,528,510,0,463,455,519],
[403,457,420,435,427,0,476,436],
[407,483,486,467,435,414,0,561],
[375,447,376,389,371,454,329,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,444,450,469,478,453,480],
[441,0,464,440,449,456,441,455],
[446,426,0,425,458,447,443,459],
[440,450,465,0,447,457,445,467],
[421,441,432,443,0,454,444,445],
[412,434,443,433,436,0,429,432],
[437,449,447,445,446,461,0,461],
[410,435,431,423,445,458,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,513,433,592,418,540,517],
[439,0,430,411,542,556,548,512],
[377,460,0,459,590,491,522,479],
[457,479,431,0,526,525,564,546],
[298,348,300,364,0,365,444,436],
[472,334,399,365,525,0,442,461],
[350,342,368,326,446,448,0,476],
[373,378,411,344,454,429,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,472,458,453,469,440,459],
[422,0,444,433,410,429,435,431],
[418,446,0,444,404,437,419,456],
[432,457,446,0,436,465,433,456],
[437,480,486,454,0,452,468,439],
[421,461,453,425,438,0,433,433],
[450,455,471,457,422,457,0,441],
[431,459,434,434,451,457,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,427,444,442,441,477,467],
[445,0,443,437,471,428,446,459],
[463,447,0,441,448,455,475,455],
[446,453,449,0,449,429,467,428],
[448,419,442,441,0,425,444,447],
[449,462,435,461,465,0,474,477],
[413,444,415,423,446,416,0,423],
[423,431,435,462,443,413,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,576,424,540,503,466,385,617],
[314,0,423,585,468,429,427,581],
[466,467,0,506,505,508,349,584],
[350,305,384,0,194,272,345,502],
[387,422,385,696,0,506,500,657],
[424,461,382,618,384,0,384,542],
[505,463,541,545,390,506,0,506],
[273,309,306,388,233,348,384,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,513,519,463,455,493,427],
[437,0,460,499,454,432,429,471],
[377,430,0,436,439,395,399,425],
[371,391,454,0,403,383,443,399],
[427,436,451,487,0,404,440,438],
[435,458,495,507,486,0,481,500],
[397,461,491,447,450,409,0,507],
[463,419,465,491,452,390,383,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,416,419,421,414,420,409],
[481,0,449,453,465,445,477,445],
[474,441,0,446,466,441,436,466],
[471,437,444,0,466,454,429,420],
[469,425,424,424,0,445,454,450],
[476,445,449,436,445,0,456,452],
[470,413,454,461,436,434,0,452],
[481,445,424,470,440,438,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,452,463,443,448,433,432],
[452,0,434,450,444,453,430,445],
[438,456,0,445,432,434,444,421],
[427,440,445,0,464,468,461,455],
[447,446,458,426,0,445,432,433],
[442,437,456,422,445,0,445,445],
[457,460,446,429,458,445,0,457],
[458,445,469,435,457,445,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,434,409,462,449,456,439],
[465,0,444,415,458,434,458,473],
[456,446,0,412,465,473,424,475],
[481,475,478,0,460,465,473,444],
[428,432,425,430,0,447,441,453],
[441,456,417,425,443,0,461,464],
[434,432,466,417,449,429,0,435],
[451,417,415,446,437,426,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,450,440,480,489,477,494],
[429,0,439,457,442,483,447,486],
[440,451,0,431,457,459,457,492],
[450,433,459,0,436,454,461,489],
[410,448,433,454,0,450,456,475],
[401,407,431,436,440,0,484,475],
[413,443,433,429,434,406,0,454],
[396,404,398,401,415,415,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,463,479,505,470,433,463],
[427,0,454,457,468,440,417,433],
[427,436,0,440,485,455,455,432],
[411,433,450,0,462,438,429,416],
[385,422,405,428,0,418,412,409],
[420,450,435,452,472,0,417,440],
[457,473,435,461,478,473,0,455],
[427,457,458,474,481,450,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,468,460,485,500,516,529],
[482,0,436,454,506,486,518,498],
[422,454,0,476,470,462,485,457],
[430,436,414,0,443,474,471,461],
[405,384,420,447,0,420,439,471],
[390,404,428,416,470,0,422,414],
[374,372,405,419,451,468,0,465],
[361,392,433,429,419,476,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,488,436,452,429,457,465],
[437,0,450,425,414,419,456,429],
[402,440,0,380,449,448,438,435],
[454,465,510,0,445,464,440,478],
[438,476,441,445,0,459,464,458],
[461,471,442,426,431,0,451,471],
[433,434,452,450,426,439,0,450],
[425,461,455,412,432,419,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,452,489,515,440,424,471],
[428,0,413,469,441,403,403,413],
[438,477,0,450,468,425,428,423],
[401,421,440,0,465,391,405,408],
[375,449,422,425,0,421,398,386],
[450,487,465,499,469,0,451,426],
[466,487,462,485,492,439,0,466],
[419,477,467,482,504,464,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,461,421,446,449,450,445],
[479,0,455,426,486,488,492,457],
[429,435,0,453,448,433,417,447],
[469,464,437,0,512,471,502,502],
[444,404,442,378,0,463,486,490],
[441,402,457,419,427,0,426,468],
[440,398,473,388,404,464,0,495],
[445,433,443,388,400,422,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,428,446,427,436,444,447],
[456,0,450,463,457,462,465,442],
[462,440,0,473,457,447,427,449],
[444,427,417,0,434,448,440,422],
[463,433,433,456,0,469,466,431],
[454,428,443,442,421,0,445,423],
[446,425,463,450,424,445,0,442],
[443,448,441,468,459,467,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,520,410,482,358,440,475],
[472,0,458,422,454,442,428,410],
[370,432,0,416,422,443,396,464],
[480,468,474,0,515,466,432,478],
[408,436,468,375,0,384,401,440],
[532,448,447,424,506,0,452,498],
[450,462,494,458,489,438,0,444],
[415,480,426,412,450,392,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,417,482,435,410,416,465],
[444,0,423,437,420,431,413,458],
[473,467,0,488,443,434,456,490],
[408,453,402,0,411,399,410,463],
[455,470,447,479,0,443,469,487],
[480,459,456,491,447,0,426,449],
[474,477,434,480,421,464,0,481],
[425,432,400,427,403,441,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,453,457,458,462,476,464],
[453,0,454,447,424,432,439,455],
[437,436,0,435,447,439,436,442],
[433,443,455,0,445,423,440,458],
[432,466,443,445,0,444,455,458],
[428,458,451,467,446,0,473,456],
[414,451,454,450,435,417,0,461],
[426,435,448,432,432,434,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,453,487,486,438,462,449],
[409,0,454,451,492,436,469,446],
[437,436,0,408,497,492,471,446],
[403,439,482,0,468,446,453,436],
[404,398,393,422,0,421,412,445],
[452,454,398,444,469,0,458,445],
[428,421,419,437,478,432,0,434],
[441,444,444,454,445,445,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,469,463,436,453,466,422],
[454,0,474,459,460,476,444,437],
[421,416,0,431,437,455,430,441],
[427,431,459,0,438,427,429,435],
[454,430,453,452,0,455,438,461],
[437,414,435,463,435,0,461,437],
[424,446,460,461,452,429,0,447],
[468,453,449,455,429,453,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,421,445,428,450,448,445],
[478,0,427,495,462,442,477,458],
[469,463,0,480,443,431,471,479],
[445,395,410,0,450,449,453,458],
[462,428,447,440,0,451,442,455],
[440,448,459,441,439,0,452,440],
[442,413,419,437,448,438,0,454],
[445,432,411,432,435,450,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,444,458,461,479,449,461],
[468,0,462,467,445,459,467,446],
[446,428,0,424,445,425,442,427],
[432,423,466,0,448,433,444,458],
[429,445,445,442,0,430,447,462],
[411,431,465,457,460,0,452,445],
[441,423,448,446,443,438,0,464],
[429,444,463,432,428,445,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,439,460,447,517,489,449],
[401,0,445,419,441,464,460,411],
[451,445,0,430,454,497,480,427],
[430,471,460,0,461,508,508,409],
[443,449,436,429,0,471,433,421],
[373,426,393,382,419,0,428,352],
[401,430,410,382,457,462,0,370],
[441,479,463,481,469,538,520,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,438,437,445,460,449,438],
[434,0,445,439,429,425,445,433],
[452,445,0,456,456,462,461,443],
[453,451,434,0,413,447,443,445],
[445,461,434,477,0,436,457,444],
[430,465,428,443,454,0,430,449],
[441,445,429,447,433,460,0,431],
[452,457,447,445,446,441,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,392,460,396,424,396,423,385],
[498,0,458,443,435,455,442,462],
[430,432,0,400,420,454,434,403],
[494,447,490,0,479,452,424,403],
[466,455,470,411,0,489,427,457],
[494,435,436,438,401,0,440,398],
[467,448,456,466,463,450,0,435],
[505,428,487,487,433,492,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,462,484,515,484,479,438],
[429,0,442,458,491,456,443,445],
[428,448,0,447,493,461,450,496],
[406,432,443,0,482,438,429,425],
[375,399,397,408,0,434,424,455],
[406,434,429,452,456,0,462,473],
[411,447,440,461,466,428,0,456],
[452,445,394,465,435,417,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,435,457,457,454,487,457],
[438,0,444,448,434,466,456,480],
[455,446,0,441,429,460,463,471],
[433,442,449,0,467,452,469,471],
[433,456,461,423,0,464,458,467],
[436,424,430,438,426,0,448,449],
[403,434,427,421,432,442,0,454],
[433,410,419,419,423,441,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,473,458,450,466,415,437],
[446,0,491,455,509,495,433,448],
[417,399,0,434,434,451,428,440],
[432,435,456,0,471,454,453,440],
[440,381,456,419,0,433,427,434],
[424,395,439,436,457,0,412,404],
[475,457,462,437,463,478,0,435],
[453,442,450,450,456,486,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,448,465,426,469,413,446],
[435,0,411,409,427,440,425,439],
[442,479,0,416,435,464,447,469],
[425,481,474,0,430,443,459,397],
[464,463,455,460,0,475,460,425],
[421,450,426,447,415,0,443,426],
[477,465,443,431,430,447,0,432],
[444,451,421,493,465,464,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,485,451,498,412,423,480],
[469,0,459,452,484,445,484,453],
[405,431,0,453,470,418,441,405],
[439,438,437,0,525,458,460,449],
[392,406,420,365,0,374,393,371],
[478,445,472,432,516,0,472,435],
[467,406,449,430,497,418,0,386],
[410,437,485,441,519,455,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,441,460,438,445,483,489],
[439,0,462,477,473,442,431,496],
[449,428,0,422,378,382,385,450],
[430,413,468,0,467,465,456,477],
[452,417,512,423,0,449,475,497],
[445,448,508,425,441,0,417,492],
[407,459,505,434,415,473,0,476],
[401,394,440,413,393,398,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,444,474,475,445,464,451],
[446,0,439,455,483,448,436,442],
[446,451,0,475,461,434,462,454],
[416,435,415,0,446,431,430,425],
[415,407,429,444,0,418,434,437],
[445,442,456,459,472,0,442,446],
[426,454,428,460,456,448,0,451],
[439,448,436,465,453,444,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,462,416,438,470,437,429],
[445,0,471,398,466,460,404,403],
[428,419,0,375,374,401,451,384],
[474,492,515,0,453,475,490,444],
[452,424,516,437,0,451,484,455],
[420,430,489,415,439,0,403,420],
[453,486,439,400,406,487,0,412],
[461,487,506,446,435,470,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,487,434,460,471,446,474],
[458,0,514,446,486,445,453,445],
[403,376,0,452,457,420,425,442],
[456,444,438,0,441,416,361,442],
[430,404,433,449,0,444,435,432],
[419,445,470,474,446,0,435,481],
[444,437,465,529,455,455,0,505],
[416,445,448,448,458,409,385,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,450,436,465,449,430,470],
[413,0,401,434,423,391,429,420],
[440,489,0,456,433,449,437,451],
[454,456,434,0,445,444,431,416],
[425,467,457,445,0,438,459,453],
[441,499,441,446,452,0,459,468],
[460,461,453,459,431,431,0,430],
[420,470,439,474,437,422,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,483,439,439,441,454,468],
[414,0,389,385,414,385,454,442],
[407,501,0,469,470,444,470,472],
[451,505,421,0,441,478,480,510],
[451,476,420,449,0,424,466,472],
[449,505,446,412,466,0,503,440],
[436,436,420,410,424,387,0,421],
[422,448,418,380,418,450,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,482,426,446,460,452,459],
[407,0,449,395,400,402,422,459],
[408,441,0,431,429,448,449,457],
[464,495,459,0,443,472,435,450],
[444,490,461,447,0,449,438,456],
[430,488,442,418,441,0,436,456],
[438,468,441,455,452,454,0,460],
[431,431,433,440,434,434,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,420,450,448,422,433,438],
[436,0,418,450,458,452,440,448],
[470,472,0,443,476,459,452,482],
[440,440,447,0,452,463,411,445],
[442,432,414,438,0,447,438,436],
[468,438,431,427,443,0,435,419],
[457,450,438,479,452,455,0,453],
[452,442,408,445,454,471,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,457,421,465,444,438,433],
[474,0,448,441,452,442,436,465],
[433,442,0,422,446,442,436,458],
[469,449,468,0,473,439,447,476],
[425,438,444,417,0,427,425,443],
[446,448,448,451,463,0,442,465],
[452,454,454,443,465,448,0,446],
[457,425,432,414,447,425,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,446,451,466,451,443,466],
[423,0,447,426,476,435,438,436],
[444,443,0,444,480,443,443,456],
[439,464,446,0,463,434,436,432],
[424,414,410,427,0,411,421,447],
[439,455,447,456,479,0,449,448],
[447,452,447,454,469,441,0,466],
[424,454,434,458,443,442,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,459,436,447,439,419,455],
[434,0,438,439,454,442,422,453],
[431,452,0,434,452,430,440,459],
[454,451,456,0,469,429,457,453],
[443,436,438,421,0,431,431,459],
[451,448,460,461,459,0,429,451],
[471,468,450,433,459,461,0,475],
[435,437,431,437,431,439,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,443,426,449,446,434,436],
[463,0,467,465,467,464,424,481],
[447,423,0,427,385,393,398,421],
[464,425,463,0,457,423,431,480],
[441,423,505,433,0,437,403,452],
[444,426,497,467,453,0,452,450],
[456,466,492,459,487,438,0,463],
[454,409,469,410,438,440,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,420,449,439,408,414,390],
[460,0,474,472,469,436,469,423],
[470,416,0,449,457,446,461,442],
[441,418,441,0,456,430,421,421],
[451,421,433,434,0,417,431,454],
[482,454,444,460,473,0,467,474],
[476,421,429,469,459,423,0,460],
[500,467,448,469,436,416,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,443,420,446,443,454,451],
[445,0,444,438,455,460,435,447],
[447,446,0,456,438,452,448,453],
[470,452,434,0,448,464,436,440],
[444,435,452,442,0,439,444,435],
[447,430,438,426,451,0,418,464],
[436,455,442,454,446,472,0,459],
[439,443,437,450,455,426,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,420,403,441,399,408,438],
[461,0,425,446,443,441,448,457],
[470,465,0,453,474,434,436,471],
[487,444,437,0,458,437,447,462],
[449,447,416,432,0,424,434,486],
[491,449,456,453,466,0,428,460],
[482,442,454,443,456,462,0,483],
[452,433,419,428,404,430,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,459,470,480,476,448,441],
[440,0,438,465,440,457,428,423],
[431,452,0,446,466,444,436,455],
[420,425,444,0,458,446,451,411],
[410,450,424,432,0,434,430,436],
[414,433,446,444,456,0,454,427],
[442,462,454,439,460,436,0,434],
[449,467,435,479,454,463,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,407,421,482,453,493,466],
[426,0,450,380,457,432,438,412],
[483,440,0,449,486,423,447,455],
[469,510,441,0,438,478,456,447],
[408,433,404,452,0,401,437,421],
[437,458,467,412,489,0,485,508],
[397,452,443,434,453,405,0,435],
[424,478,435,443,469,382,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,434,410,443,414,426,422],
[490,0,424,416,447,421,422,424],
[456,466,0,440,472,457,460,424],
[480,474,450,0,445,473,477,460],
[447,443,418,445,0,451,433,424],
[476,469,433,417,439,0,460,466],
[464,468,430,413,457,430,0,441],
[468,466,466,430,466,424,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,446,450,465,447,449,460],
[449,0,447,453,457,438,454,456],
[444,443,0,445,439,436,452,466],
[440,437,445,0,452,428,443,441],
[425,433,451,438,0,416,426,445],
[443,452,454,462,474,0,457,435],
[441,436,438,447,464,433,0,430],
[430,434,424,449,445,455,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,373,445,421,523,481,463,425],
[517,0,525,506,532,529,526,438],
[445,365,0,422,472,502,439,405],
[469,384,468,0,424,439,473,456],
[367,358,418,466,0,386,399,397],
[409,361,388,451,504,0,417,406],
[427,364,451,417,491,473,0,386],
[465,452,485,434,493,484,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,473,430,494,445,452,457],
[422,0,488,470,476,466,421,456],
[417,402,0,463,461,413,443,440],
[460,420,427,0,452,416,443,455],
[396,414,429,438,0,393,424,377],
[445,424,477,474,497,0,479,457],
[438,469,447,447,466,411,0,445],
[433,434,450,435,513,433,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,442,457,437,449,481,443],
[443,0,443,452,456,445,481,457],
[448,447,0,424,417,433,454,430],
[433,438,466,0,434,421,466,439],
[453,434,473,456,0,439,465,445],
[441,445,457,469,451,0,452,437],
[409,409,436,424,425,438,0,417],
[447,433,460,451,445,453,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,449,453,449,464,443,485],
[448,0,433,459,417,447,434,455],
[441,457,0,475,444,469,428,476],
[437,431,415,0,426,448,426,468],
[441,473,446,464,0,468,433,487],
[426,443,421,442,422,0,413,466],
[447,456,462,464,457,477,0,441],
[405,435,414,422,403,424,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,427,445,440,435,439,451],
[434,0,455,443,456,448,465,460],
[463,435,0,452,457,446,463,465],
[445,447,438,0,434,432,451,448],
[450,434,433,456,0,459,442,455],
[455,442,444,458,431,0,439,439],
[451,425,427,439,448,451,0,453],
[439,430,425,442,435,451,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,466,442,430,480,438,468],
[410,0,443,429,457,461,428,480],
[424,447,0,429,401,474,466,464],
[448,461,461,0,457,480,385,510],
[460,433,489,433,0,496,433,476],
[410,429,416,410,394,0,404,454],
[452,462,424,505,457,486,0,499],
[422,410,426,380,414,436,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,444,493,448,486,434,451],
[451,0,458,497,446,469,438,436],
[446,432,0,455,447,413,442,406],
[397,393,435,0,428,435,430,420],
[442,444,443,462,0,423,443,424],
[404,421,477,455,467,0,433,439],
[456,452,448,460,447,457,0,431],
[439,454,484,470,466,451,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,450,448,431,443,447,459],
[408,0,415,405,417,424,430,433],
[440,475,0,408,414,423,402,427],
[442,485,482,0,446,453,450,486],
[459,473,476,444,0,440,432,439],
[447,466,467,437,450,0,444,448],
[443,460,488,440,458,446,0,441],
[431,457,463,404,451,442,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,504,448,471,507,446,481],
[450,0,468,419,471,451,429,467],
[386,422,0,381,405,415,432,408],
[442,471,509,0,478,486,459,465],
[419,419,485,412,0,446,460,449],
[383,439,475,404,444,0,458,460],
[444,461,458,431,430,432,0,463],
[409,423,482,425,441,430,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,423,444,438,426,437,449],
[435,0,431,429,425,414,409,416],
[467,459,0,412,453,409,446,441],
[446,461,478,0,467,442,468,451],
[452,465,437,423,0,437,415,411],
[464,476,481,448,453,0,429,480],
[453,481,444,422,475,461,0,462],
[441,474,449,439,479,410,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,407,447,431,408,418,412],
[477,0,445,456,440,445,460,406],
[483,445,0,456,440,459,453,426],
[443,434,434,0,413,428,443,422],
[459,450,450,477,0,443,426,431],
[482,445,431,462,447,0,450,464],
[472,430,437,447,464,440,0,441],
[478,484,464,468,459,426,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,474,465,444,514,421,454],
[442,0,464,491,452,462,449,465],
[416,426,0,451,451,462,434,425],
[425,399,439,0,441,473,454,412],
[446,438,439,449,0,437,443,449],
[376,428,428,417,453,0,408,432],
[469,441,456,436,447,482,0,443],
[436,425,465,478,441,458,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,434,446,425,444,446,468],
[434,0,428,455,429,433,435,453],
[456,462,0,439,439,440,447,446],
[444,435,451,0,427,447,436,470],
[465,461,451,463,0,484,441,457],
[446,457,450,443,406,0,454,467],
[444,455,443,454,449,436,0,481],
[422,437,444,420,433,423,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,470,438,411,450,425,468],
[449,0,473,462,444,454,461,457],
[420,417,0,439,433,435,444,453],
[452,428,451,0,448,458,456,456],
[479,446,457,442,0,449,459,462],
[440,436,455,432,441,0,448,464],
[465,429,446,434,431,442,0,463],
[422,433,437,434,428,426,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,459,437,456,463,477,459],
[456,0,405,476,437,477,470,418],
[431,485,0,466,453,463,435,443],
[453,414,424,0,421,447,443,447],
[434,453,437,469,0,509,434,425],
[427,413,427,443,381,0,429,422],
[413,420,455,447,456,461,0,431],
[431,472,447,443,465,468,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,669,444,446,0,223,223,446],
[221,0,221,221,221,444,221,221],
[446,669,0,446,223,446,446,446],
[444,669,444,0,223,667,223,444],
[890,669,667,667,0,444,223,667],
[667,446,444,223,446,0,446,446],
[667,669,444,667,667,444,0,667],
[444,669,444,446,223,444,223,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,467,434,462,423,438,452],
[451,0,475,459,466,453,438,483],
[423,415,0,419,411,429,423,436],
[456,431,471,0,446,416,434,453],
[428,424,479,444,0,426,426,438],
[467,437,461,474,464,0,455,460],
[452,452,467,456,464,435,0,467],
[438,407,454,437,452,430,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,441,454,489,447,482,482],
[386,0,415,430,465,389,380,439],
[449,475,0,439,455,405,429,481],
[436,460,451,0,479,435,468,500],
[401,425,435,411,0,429,412,460],
[443,501,485,455,461,0,477,478],
[408,510,461,422,478,413,0,455],
[408,451,409,390,430,412,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,459,431,412,425,430,429],
[440,0,434,403,403,423,424,390],
[431,456,0,426,453,426,452,445],
[459,487,464,0,427,443,453,449],
[478,487,437,463,0,451,457,474],
[465,467,464,447,439,0,463,429],
[460,466,438,437,433,427,0,427],
[461,500,445,441,416,461,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,458,472,466,439,457,487],
[447,0,500,438,435,467,435,480],
[432,390,0,470,394,392,440,450],
[418,452,420,0,392,419,438,452],
[424,455,496,498,0,441,492,501],
[451,423,498,471,449,0,454,481],
[433,455,450,452,398,436,0,449],
[403,410,440,438,389,409,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,393,455,534,439,425,450],
[481,0,476,443,503,445,529,467],
[497,414,0,443,510,463,503,444],
[435,447,447,0,447,464,480,441],
[356,387,380,443,0,440,417,424],
[451,445,427,426,450,0,480,390],
[465,361,387,410,473,410,0,446],
[440,423,446,449,466,500,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,486,435,437,454,444,428],
[455,0,468,471,444,466,437,463],
[404,422,0,446,444,455,420,425],
[455,419,444,0,453,448,418,418],
[453,446,446,437,0,459,439,435],
[436,424,435,442,431,0,419,417],
[446,453,470,472,451,471,0,445],
[462,427,465,472,455,473,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,449,445,406,409,434,465],
[439,0,450,471,416,461,443,503],
[441,440,0,452,437,417,464,486],
[445,419,438,0,403,434,429,481],
[484,474,453,487,0,434,471,531],
[481,429,473,456,456,0,480,491],
[456,447,426,461,419,410,0,473],
[425,387,404,409,359,399,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,434,425,460,432,444,441],
[453,0,434,428,437,438,430,445],
[456,456,0,443,471,458,453,440],
[465,462,447,0,452,439,466,452],
[430,453,419,438,0,456,445,438],
[458,452,432,451,434,0,439,448],
[446,460,437,424,445,451,0,459],
[449,445,450,438,452,442,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,467,433,480,457,447,441],
[401,0,432,407,427,433,413,407],
[423,458,0,456,459,435,425,436],
[457,483,434,0,434,449,441,445],
[410,463,431,456,0,465,419,429],
[433,457,455,441,425,0,444,445],
[443,477,465,449,471,446,0,443],
[449,483,454,445,461,445,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,445,408,410,440,447,477],
[445,0,443,439,421,446,457,457],
[445,447,0,426,410,447,445,448],
[482,451,464,0,433,459,451,485],
[480,469,480,457,0,424,481,503],
[450,444,443,431,466,0,432,469],
[443,433,445,439,409,458,0,450],
[413,433,442,405,387,421,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,452,417,444,461,425,451],
[443,0,486,432,435,489,454,469],
[438,404,0,408,428,442,421,458],
[473,458,482,0,442,465,452,460],
[446,455,462,448,0,464,437,464],
[429,401,448,425,426,0,418,446],
[465,436,469,438,453,472,0,461],
[439,421,432,430,426,444,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,478,493,475,434,480,499],
[409,0,463,400,480,462,394,435],
[412,427,0,404,462,435,432,451],
[397,490,486,0,477,451,436,461],
[415,410,428,413,0,446,426,448],
[456,428,455,439,444,0,470,468],
[410,496,458,454,464,420,0,444],
[391,455,439,429,442,422,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,462,439,489,444,488,490],
[399,0,442,402,418,406,430,416],
[428,448,0,425,439,433,439,435],
[451,488,465,0,463,464,477,441],
[401,472,451,427,0,416,423,390],
[446,484,457,426,474,0,480,434],
[402,460,451,413,467,410,0,417],
[400,474,455,449,500,456,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,450,421,465,455,464,450],
[421,0,442,419,430,447,425,408],
[440,448,0,439,426,453,442,447],
[469,471,451,0,457,469,440,429],
[425,460,464,433,0,453,440,428],
[435,443,437,421,437,0,430,423],
[426,465,448,450,450,460,0,424],
[440,482,443,461,462,467,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,404,474,407,382,425,441],
[464,0,422,441,406,421,424,435],
[486,468,0,465,405,438,423,448],
[416,449,425,0,402,394,407,436],
[483,484,485,488,0,442,467,464],
[508,469,452,496,448,0,439,485],
[465,466,467,483,423,451,0,472],
[449,455,442,454,426,405,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,453,432,447,454,417,432],
[484,0,444,444,467,450,460,448],
[437,446,0,450,456,460,448,442],
[458,446,440,0,463,465,445,439],
[443,423,434,427,0,452,425,431],
[436,440,430,425,438,0,412,407],
[473,430,442,445,465,478,0,438],
[458,442,448,451,459,483,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,396,446,460,442,409,450],
[419,0,454,471,447,462,437,415],
[494,436,0,495,446,454,465,479],
[444,419,395,0,436,438,432,439],
[430,443,444,454,0,470,431,448],
[448,428,436,452,420,0,416,458],
[481,453,425,458,459,474,0,466],
[440,475,411,451,442,432,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,432,439,442,440,457,456],
[432,0,421,450,440,452,430,464],
[458,469,0,460,473,470,442,459],
[451,440,430,0,458,449,445,462],
[448,450,417,432,0,448,439,457],
[450,438,420,441,442,0,442,456],
[433,460,448,445,451,448,0,457],
[434,426,431,428,433,434,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,391,415,407,410,420,414],
[481,0,425,445,414,451,444,447],
[499,465,0,434,450,454,461,453],
[475,445,456,0,456,453,460,459],
[483,476,440,434,0,436,432,440],
[480,439,436,437,454,0,424,466],
[470,446,429,430,458,466,0,424],
[476,443,437,431,450,424,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,445,465,422,483,508,420],
[438,0,465,428,443,475,488,456],
[445,425,0,425,414,463,469,424],
[425,462,465,0,472,481,459,442],
[468,447,476,418,0,494,512,473],
[407,415,427,409,396,0,429,406],
[382,402,421,431,378,461,0,435],
[470,434,466,448,417,484,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,444,449,418,483,449,452],
[422,0,434,432,419,434,414,427],
[446,456,0,456,434,468,458,471],
[441,458,434,0,410,443,440,435],
[472,471,456,480,0,469,443,480],
[407,456,422,447,421,0,440,423],
[441,476,432,450,447,450,0,435],
[438,463,419,455,410,467,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,460,457,449,459,436,449],
[449,0,467,431,466,495,466,435],
[430,423,0,409,428,427,392,411],
[433,459,481,0,461,476,449,420],
[441,424,462,429,0,463,473,440],
[431,395,463,414,427,0,403,451],
[454,424,498,441,417,487,0,452],
[441,455,479,470,450,439,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,430,447,452,461,489,442],
[453,0,438,437,463,438,466,440],
[460,452,0,461,461,450,468,442],
[443,453,429,0,437,471,500,456],
[438,427,429,453,0,445,452,402],
[429,452,440,419,445,0,478,423],
[401,424,422,390,438,412,0,421],
[448,450,448,434,488,467,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,436,440,431,457,455,451],
[440,0,425,407,432,448,424,445],
[454,465,0,455,452,453,444,466],
[450,483,435,0,437,425,438,435],
[459,458,438,453,0,459,449,431],
[433,442,437,465,431,0,419,456],
[435,466,446,452,441,471,0,447],
[439,445,424,455,459,434,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,440,472,448,466,445,449],
[432,0,406,437,459,432,436,413],
[450,484,0,463,471,455,434,469],
[418,453,427,0,441,454,425,447],
[442,431,419,449,0,451,422,456],
[424,458,435,436,439,0,421,438],
[445,454,456,465,468,469,0,454],
[441,477,421,443,434,452,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,417,438,395,422,408,404],
[475,0,421,439,418,436,423,443],
[473,469,0,469,422,437,427,427],
[452,451,421,0,406,443,422,424],
[495,472,468,484,0,457,474,445],
[468,454,453,447,433,0,440,427],
[482,467,463,468,416,450,0,426],
[486,447,463,466,445,463,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,451,434,459,456,452,463],
[433,0,442,439,442,437,450,433],
[439,448,0,472,434,450,459,459],
[456,451,418,0,462,458,463,445],
[431,448,456,428,0,447,443,449],
[434,453,440,432,443,0,457,446],
[438,440,431,427,447,433,0,438],
[427,457,431,445,441,444,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,467,429,466,455,464,448],
[400,0,398,400,433,446,421,426],
[423,492,0,409,437,446,410,439],
[461,490,481,0,438,479,464,486],
[424,457,453,452,0,440,417,428],
[435,444,444,411,450,0,435,416],
[426,469,480,426,473,455,0,461],
[442,464,451,404,462,474,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,452,459,441,452,452,412],
[461,0,479,461,478,442,443,460],
[438,411,0,435,430,428,431,420],
[431,429,455,0,432,436,450,425],
[449,412,460,458,0,431,453,422],
[438,448,462,454,459,0,461,452],
[438,447,459,440,437,429,0,429],
[478,430,470,465,468,438,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,424,427,454,482,414,435],
[414,0,444,444,482,470,407,400],
[466,446,0,425,457,500,471,464],
[463,446,465,0,508,463,414,392],
[436,408,433,382,0,449,373,390],
[408,420,390,427,441,0,382,400],
[476,483,419,476,517,508,0,390],
[455,490,426,498,500,490,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,437,425,452,445,441,448],
[460,0,445,429,460,448,425,476],
[453,445,0,422,429,447,438,449],
[465,461,468,0,463,478,440,459],
[438,430,461,427,0,455,445,483],
[445,442,443,412,435,0,428,453],
[449,465,452,450,445,462,0,460],
[442,414,441,431,407,437,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,446,445,455,438,457,453],
[428,0,436,444,470,433,448,430],
[444,454,0,404,449,435,437,420],
[445,446,486,0,454,468,449,458],
[435,420,441,436,0,428,456,458],
[452,457,455,422,462,0,473,466],
[433,442,453,441,434,417,0,469],
[437,460,470,432,432,424,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,455,459,440,456,439,464],
[424,0,436,420,443,442,415,446],
[435,454,0,442,434,450,429,420],
[431,470,448,0,452,449,461,452],
[450,447,456,438,0,452,432,442],
[434,448,440,441,438,0,425,433],
[451,475,461,429,458,465,0,464],
[426,444,470,438,448,457,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,470,485,438,500,469,477],
[421,0,425,475,446,462,470,448],
[420,465,0,474,447,464,455,458],
[405,415,416,0,422,461,440,443],
[452,444,443,468,0,467,434,430],
[390,428,426,429,423,0,438,403],
[421,420,435,450,456,452,0,417],
[413,442,432,447,460,487,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,455,445,502,436,494,416],
[463,0,471,422,549,438,500,470],
[435,419,0,430,527,424,479,449],
[445,468,460,0,514,453,514,452],
[388,341,363,376,0,361,458,410],
[454,452,466,437,529,0,502,469],
[396,390,411,376,432,388,0,410],
[474,420,441,438,480,421,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,451,456,393,422,413,457],
[457,0,441,435,409,419,429,463],
[439,449,0,445,429,434,431,461],
[434,455,445,0,409,431,450,453],
[497,481,461,481,0,441,460,492],
[468,471,456,459,449,0,440,492],
[477,461,459,440,430,450,0,470],
[433,427,429,437,398,398,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,441,422,438,412,389,465],
[430,0,420,406,412,393,407,428],
[449,470,0,419,442,413,428,462],
[468,484,471,0,487,467,429,493],
[452,478,448,403,0,415,427,466],
[478,497,477,423,475,0,460,473],
[501,483,462,461,463,430,0,507],
[425,462,428,397,424,417,383,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,378,422,330,418,607,422,279],
[512,0,558,518,510,606,467,373],
[468,332,0,329,607,464,327,373],
[560,372,561,0,512,561,564,327],
[472,380,283,378,0,422,330,377],
[283,284,426,329,468,0,470,470],
[468,423,563,326,560,420,0,421],
[611,517,517,563,513,420,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,427,447,462,472,459,451],
[441,0,430,435,455,451,452,431],
[463,460,0,437,473,433,471,455],
[443,455,453,0,481,440,453,457],
[428,435,417,409,0,449,444,438],
[418,439,457,450,441,0,437,440],
[431,438,419,437,446,453,0,442],
[439,459,435,433,452,450,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,445,420,433,421,441,460],
[431,0,448,455,425,439,448,443],
[445,442,0,431,404,423,397,405],
[470,435,459,0,427,430,439,429],
[457,465,486,463,0,445,431,460],
[469,451,467,460,445,0,457,463],
[449,442,493,451,459,433,0,444],
[430,447,485,461,430,427,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,448,455,435,437,435,425],
[465,0,471,463,442,476,453,464],
[442,419,0,449,445,438,443,464],
[435,427,441,0,443,463,449,448],
[455,448,445,447,0,452,463,448],
[453,414,452,427,438,0,423,458],
[455,437,447,441,427,467,0,467],
[465,426,426,442,442,432,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,435,447,416,431,431,437],
[442,0,426,434,430,399,424,395],
[455,464,0,472,459,417,439,437],
[443,456,418,0,450,441,447,412],
[474,460,431,440,0,447,446,449],
[459,491,473,449,443,0,460,454],
[459,466,451,443,444,430,0,432],
[453,495,453,478,441,436,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,445,450,453,460,455,449],
[424,0,428,426,447,421,409,452],
[445,462,0,434,461,447,438,441],
[440,464,456,0,435,458,449,465],
[437,443,429,455,0,438,422,418],
[430,469,443,432,452,0,444,438],
[435,481,452,441,468,446,0,461],
[441,438,449,425,472,452,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,465,453,440,447,441,446],
[435,0,451,430,443,451,445,449],
[425,439,0,422,433,426,440,442],
[437,460,468,0,461,467,450,461],
[450,447,457,429,0,457,449,447],
[443,439,464,423,433,0,439,457],
[449,445,450,440,441,451,0,441],
[444,441,448,429,443,433,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,459,430,447,431,440,405],
[410,0,427,422,407,428,420,399],
[431,463,0,437,433,414,413,432],
[460,468,453,0,436,445,402,449],
[443,483,457,454,0,438,448,431],
[459,462,476,445,452,0,442,443],
[450,470,477,488,442,448,0,443],
[485,491,458,441,459,447,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,425,440,413,443,432,419],
[436,0,449,428,416,463,455,428],
[465,441,0,457,420,447,465,427],
[450,462,433,0,433,435,462,453],
[477,474,470,457,0,477,467,431],
[447,427,443,455,413,0,459,436],
[458,435,425,428,423,431,0,430],
[471,462,463,437,459,454,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,450,472,449,462,450,440],
[466,0,444,479,447,462,446,476],
[440,446,0,475,426,439,434,458],
[418,411,415,0,416,410,439,453],
[441,443,464,474,0,473,429,468],
[428,428,451,480,417,0,444,470],
[440,444,456,451,461,446,0,440],
[450,414,432,437,422,420,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,451,445,461,452,476,440],
[454,0,445,436,457,447,465,439],
[439,445,0,448,457,442,449,444],
[445,454,442,0,444,431,453,430],
[429,433,433,446,0,421,455,428],
[438,443,448,459,469,0,465,450],
[414,425,441,437,435,425,0,425],
[450,451,446,460,462,440,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,418,451,440,468,442,453],
[436,0,424,436,423,446,424,444],
[472,466,0,464,440,468,446,459],
[439,454,426,0,424,448,426,447],
[450,467,450,466,0,461,441,476],
[422,444,422,442,429,0,431,449],
[448,466,444,464,449,459,0,444],
[437,446,431,443,414,441,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,480,456,484,426,450,431],
[456,0,465,461,498,438,463,453],
[410,425,0,448,468,431,424,425],
[434,429,442,0,455,421,458,438],
[406,392,422,435,0,408,410,419],
[464,452,459,469,482,0,454,439],
[440,427,466,432,480,436,0,412],
[459,437,465,452,471,451,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,473,398,376,471,381,422],
[454,0,469,404,504,444,371,405],
[417,421,0,457,472,394,381,413],
[492,486,433,0,439,420,526,395],
[514,386,418,451,0,498,374,434],
[419,446,496,470,392,0,484,486],
[509,519,509,364,516,406,0,430],
[468,485,477,495,456,404,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,448,457,427,446,444,456],
[435,0,442,433,429,428,447,467],
[442,448,0,449,433,461,460,454],
[433,457,441,0,441,424,453,463],
[463,461,457,449,0,430,449,464],
[444,462,429,466,460,0,448,429],
[446,443,430,437,441,442,0,445],
[434,423,436,427,426,461,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,440,442,454,476,428,423],
[452,0,441,441,441,467,426,449],
[450,449,0,420,434,459,429,402],
[448,449,470,0,423,450,451,413],
[436,449,456,467,0,490,444,451],
[414,423,431,440,400,0,422,385],
[462,464,461,439,446,468,0,469],
[467,441,488,477,439,505,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,470,465,482,480,435,417],
[417,0,446,399,441,441,412,404],
[420,444,0,450,438,485,443,434],
[425,491,440,0,423,479,462,443],
[408,449,452,467,0,464,417,447],
[410,449,405,411,426,0,411,404],
[455,478,447,428,473,479,0,431],
[473,486,456,447,443,486,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,515,455,481,465,431,481],
[417,0,462,437,431,441,440,439],
[375,428,0,431,446,432,413,405],
[435,453,459,0,416,431,428,448],
[409,459,444,474,0,430,439,455],
[425,449,458,459,460,0,470,461],
[459,450,477,462,451,420,0,484],
[409,451,485,442,435,429,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,468,448,452,450,429,447],
[430,0,467,441,436,438,444,443],
[422,423,0,427,439,445,440,437],
[442,449,463,0,446,429,445,437],
[438,454,451,444,0,456,421,465],
[440,452,445,461,434,0,451,442],
[461,446,450,445,469,439,0,444],
[443,447,453,453,425,448,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,434,453,431,421,427,451],
[455,0,433,432,394,451,433,445],
[456,457,0,426,437,435,424,432],
[437,458,464,0,450,429,438,458],
[459,496,453,440,0,452,458,457],
[469,439,455,461,438,0,464,455],
[463,457,466,452,432,426,0,476],
[439,445,458,432,433,435,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,438,450,477,464,446,482],
[441,0,426,444,422,429,437,433],
[452,464,0,436,462,472,484,451],
[440,446,454,0,475,453,463,432],
[413,468,428,415,0,454,438,443],
[426,461,418,437,436,0,472,451],
[444,453,406,427,452,418,0,445],
[408,457,439,458,447,439,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,443,423,419,437,431,447],
[474,0,449,434,437,450,439,458],
[447,441,0,446,434,443,446,477],
[467,456,444,0,453,465,456,485],
[471,453,456,437,0,466,449,467],
[453,440,447,425,424,0,416,448],
[459,451,444,434,441,474,0,456],
[443,432,413,405,423,442,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,350,458,405,381,378,349],
[461,0,514,542,543,462,436,460],
[540,376,0,459,459,434,379,459],
[432,348,431,0,540,406,488,428],
[485,347,431,350,0,407,540,430],
[509,428,456,484,483,0,621,484],
[512,454,511,402,350,269,0,431],
[541,430,431,462,460,406,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,421,440,454,465,457,419],
[444,0,429,436,441,447,452,436],
[469,461,0,459,477,488,460,440],
[450,454,431,0,468,463,475,446],
[436,449,413,422,0,426,454,411],
[425,443,402,427,464,0,446,439],
[433,438,430,415,436,444,0,384],
[471,454,450,444,479,451,506,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,428,413,447,414,430,433],
[479,0,429,445,468,430,446,459],
[462,461,0,449,444,441,431,455],
[477,445,441,0,470,434,425,469],
[443,422,446,420,0,436,460,423],
[476,460,449,456,454,0,441,461],
[460,444,459,465,430,449,0,484],
[457,431,435,421,467,429,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,443,442,445,454,446,429],
[471,0,455,453,464,452,441,444],
[447,435,0,437,433,459,418,469],
[448,437,453,0,450,442,450,449],
[445,426,457,440,0,469,468,474],
[436,438,431,448,421,0,414,450],
[444,449,472,440,422,476,0,412],
[461,446,421,441,416,440,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,489,444,451,464,449,472],
[467,0,478,444,468,482,457,473],
[401,412,0,402,427,442,458,457],
[446,446,488,0,471,494,440,467],
[439,422,463,419,0,447,460,466],
[426,408,448,396,443,0,442,467],
[441,433,432,450,430,448,0,468],
[418,417,433,423,424,423,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,342,410,443,375,443,510,614],
[548,0,477,478,344,511,546,512],
[480,413,0,412,411,547,513,548],
[447,412,478,0,445,444,444,582],
[515,546,479,445,0,478,512,683],
[447,379,343,446,412,0,378,583],
[380,344,377,446,378,512,0,479],
[276,378,342,308,207,307,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,464,472,460,455,433,456],
[437,0,440,444,455,447,441,453],
[426,450,0,457,457,454,445,461],
[418,446,433,0,442,439,416,440],
[430,435,433,448,0,443,426,460],
[435,443,436,451,447,0,428,457],
[457,449,445,474,464,462,0,452],
[434,437,429,450,430,433,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,425,418,423,447,450,468],
[433,0,449,415,454,425,431,448],
[465,441,0,446,453,451,451,463],
[472,475,444,0,451,458,476,460],
[467,436,437,439,0,435,437,467],
[443,465,439,432,455,0,465,459],
[440,459,439,414,453,425,0,459],
[422,442,427,430,423,431,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,470,446,485,470,476,462],
[454,0,449,441,463,471,441,442],
[420,441,0,421,456,460,453,414],
[444,449,469,0,459,463,446,429],
[405,427,434,431,0,431,420,418],
[420,419,430,427,459,0,417,390],
[414,449,437,444,470,473,0,439],
[428,448,476,461,472,500,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,431,420,420,434,448,401],
[476,0,478,450,438,449,472,429],
[459,412,0,438,400,409,429,406],
[470,440,452,0,463,437,455,425],
[470,452,490,427,0,428,441,460],
[456,441,481,453,462,0,457,417],
[442,418,461,435,449,433,0,420],
[489,461,484,465,430,473,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,405,426,437,476,454,422],
[478,0,477,441,436,458,464,459],
[485,413,0,456,472,469,436,423],
[464,449,434,0,436,481,469,402],
[453,454,418,454,0,494,479,425],
[414,432,421,409,396,0,421,423],
[436,426,454,421,411,469,0,408],
[468,431,467,488,465,467,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,468,456,458,485,435,475],
[426,0,458,449,440,443,444,458],
[422,432,0,430,418,462,449,447],
[434,441,460,0,455,474,445,466],
[432,450,472,435,0,443,434,473],
[405,447,428,416,447,0,416,433],
[455,446,441,445,456,474,0,455],
[415,432,443,424,417,457,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,484,486,470,471,490,434],
[447,0,453,466,441,465,470,449],
[406,437,0,418,454,449,462,436],
[404,424,472,0,446,474,456,460],
[420,449,436,444,0,485,479,463],
[419,425,441,416,405,0,455,427],
[400,420,428,434,411,435,0,430],
[456,441,454,430,427,463,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,431,421,427,400,443,401],
[427,0,482,435,458,438,432,436],
[459,408,0,411,394,424,424,408],
[469,455,479,0,423,396,441,453],
[463,432,496,467,0,446,463,443],
[490,452,466,494,444,0,461,446],
[447,458,466,449,427,429,0,433],
[489,454,482,437,447,444,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,436,445,451,477,468,448],
[477,0,460,436,474,454,486,449],
[454,430,0,440,483,485,471,475],
[445,454,450,0,462,450,465,461],
[439,416,407,428,0,435,455,437],
[413,436,405,440,455,0,443,476],
[422,404,419,425,435,447,0,461],
[442,441,415,429,453,414,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,478,464,448,492,410,435],
[478,0,472,425,446,454,397,446],
[412,418,0,446,448,492,436,398],
[426,465,444,0,444,506,419,425],
[442,444,442,446,0,509,432,404],
[398,436,398,384,381,0,389,372],
[480,493,454,471,458,501,0,402],
[455,444,492,465,486,518,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,444,418,442,442,418,461],
[473,0,462,407,485,471,459,458],
[446,428,0,405,454,420,432,415],
[472,483,485,0,510,439,471,479],
[448,405,436,380,0,425,419,432],
[448,419,470,451,465,0,434,479],
[472,431,458,419,471,456,0,465],
[429,432,475,411,458,411,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,421,409,441,441,436,440],
[459,0,451,433,454,475,455,469],
[469,439,0,453,466,476,443,475],
[481,457,437,0,461,479,475,465],
[449,436,424,429,0,438,450,452],
[449,415,414,411,452,0,447,455],
[454,435,447,415,440,443,0,465],
[450,421,415,425,438,435,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,432,462,443,431,445,427],
[449,0,450,444,450,447,468,458],
[458,440,0,440,454,452,463,452],
[428,446,450,0,442,442,446,445],
[447,440,436,448,0,449,453,444],
[459,443,438,448,441,0,459,454],
[445,422,427,444,437,431,0,413],
[463,432,438,445,446,436,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,441,457,464,447,454,429],
[445,0,444,453,455,428,442,407],
[449,446,0,465,450,458,468,445],
[433,437,425,0,451,409,440,425],
[426,435,440,439,0,438,439,432],
[443,462,432,481,452,0,450,446],
[436,448,422,450,451,440,0,422],
[461,483,445,465,458,444,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,479,498,458,332,357,371],
[458,0,456,498,442,397,397,454],
[411,434,0,497,498,474,316,451],
[392,392,393,0,399,332,295,516],
[432,448,392,491,0,391,371,448],
[558,493,416,558,499,0,459,471],
[533,493,574,595,519,431,0,511],
[519,436,439,374,442,419,379,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,472,477,473,443,489,449],
[420,0,441,447,429,444,446,463],
[418,449,0,441,476,439,466,468],
[413,443,449,0,412,407,440,452],
[417,461,414,478,0,460,449,476],
[447,446,451,483,430,0,450,455],
[401,444,424,450,441,440,0,452],
[441,427,422,438,414,435,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,470,445,465,467,500,482],
[439,0,448,437,458,456,451,458],
[420,442,0,416,466,444,453,453],
[445,453,474,0,458,454,481,450],
[425,432,424,432,0,435,453,482],
[423,434,446,436,455,0,474,460],
[390,439,437,409,437,416,0,409],
[408,432,437,440,408,430,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,454,452,479,425,426,442],
[428,0,460,429,451,425,425,427],
[436,430,0,450,463,422,418,449],
[438,461,440,0,447,418,401,425],
[411,439,427,443,0,423,420,421],
[465,465,468,472,467,0,450,441],
[464,465,472,489,470,440,0,469],
[448,463,441,465,469,449,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,419,447,440,430,440,427],
[459,0,406,452,454,430,455,436],
[471,484,0,488,468,440,475,430],
[443,438,402,0,429,420,446,430],
[450,436,422,461,0,463,429,463],
[460,460,450,470,427,0,450,425],
[450,435,415,444,461,440,0,435],
[463,454,460,460,427,465,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,467,457,449,444,478,444],
[429,0,464,418,433,430,453,442],
[423,426,0,407,416,424,430,422],
[433,472,483,0,453,465,473,441],
[441,457,474,437,0,429,451,470],
[446,460,466,425,461,0,469,456],
[412,437,460,417,439,421,0,427],
[446,448,468,449,420,434,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,452,444,454,443,429,459],
[413,0,427,424,425,432,410,443],
[438,463,0,421,464,464,459,462],
[446,466,469,0,476,478,444,454],
[436,465,426,414,0,440,424,446],
[447,458,426,412,450,0,404,438],
[461,480,431,446,466,486,0,448],
[431,447,428,436,444,452,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,454,450,449,432,443,431],
[468,0,472,430,464,463,459,456],
[436,418,0,438,439,449,452,438],
[440,460,452,0,453,455,448,442],
[441,426,451,437,0,457,440,447],
[458,427,441,435,433,0,435,403],
[447,431,438,442,450,455,0,456],
[459,434,452,448,443,487,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,421,430,426,460,452,421],
[458,0,419,467,447,501,458,446],
[469,471,0,476,470,489,479,419],
[460,423,414,0,460,492,497,436],
[464,443,420,430,0,477,482,450],
[430,389,401,398,413,0,442,372],
[438,432,411,393,408,448,0,397],
[469,444,471,454,440,518,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,462,431,483,435,443,448],
[470,0,458,429,462,448,457,412],
[428,432,0,461,475,446,451,437],
[459,461,429,0,494,459,441,443],
[407,428,415,396,0,428,419,398],
[455,442,444,431,462,0,422,439],
[447,433,439,449,471,468,0,443],
[442,478,453,447,492,451,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,393,422,455,424,409,411],
[480,0,405,436,448,425,448,446],
[497,485,0,457,489,465,462,435],
[468,454,433,0,424,457,472,439],
[435,442,401,466,0,429,429,408],
[466,465,425,433,461,0,458,438],
[481,442,428,418,461,432,0,438],
[479,444,455,451,482,452,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,482,448,449,459,444,452],
[463,0,486,464,454,497,435,448],
[408,404,0,421,419,456,433,416],
[442,426,469,0,424,485,460,441],
[441,436,471,466,0,455,438,433],
[431,393,434,405,435,0,409,419],
[446,455,457,430,452,481,0,456],
[438,442,474,449,457,471,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,417,422,438,444,467,425],
[449,0,429,410,440,435,434,441],
[473,461,0,461,472,464,467,427],
[468,480,429,0,480,446,479,447],
[452,450,418,410,0,421,460,425],
[446,455,426,444,469,0,469,423],
[423,456,423,411,430,421,0,405],
[465,449,463,443,465,467,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,367,432,425,304,338,441,357],
[523,0,527,452,428,444,518,387],
[458,363,0,399,406,380,436,379],
[465,438,491,0,386,448,498,452],
[586,462,484,504,0,512,524,420],
[552,446,510,442,378,0,446,385],
[449,372,454,392,366,444,0,381],
[533,503,511,438,470,505,509,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,404,477,376,431,442,410],
[488,0,439,499,436,451,438,450],
[486,451,0,472,438,446,429,439],
[413,391,418,0,386,420,386,385],
[514,454,452,504,0,440,451,455],
[459,439,444,470,450,0,444,449],
[448,452,461,504,439,446,0,434],
[480,440,451,505,435,441,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,479,454,424,443,409,438],
[431,0,477,472,450,459,447,456],
[411,413,0,446,423,422,409,414],
[436,418,444,0,410,442,421,420],
[466,440,467,480,0,477,437,454],
[447,431,468,448,413,0,428,456],
[481,443,481,469,453,462,0,466],
[452,434,476,470,436,434,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,483,478,444,438,474,464],
[413,0,426,402,402,413,432,451],
[407,464,0,420,427,425,465,432],
[412,488,470,0,436,445,472,424],
[446,488,463,454,0,459,496,421],
[452,477,465,445,431,0,485,432],
[416,458,425,418,394,405,0,408],
[426,439,458,466,469,458,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,450,451,469,453,442,437],
[449,0,441,478,474,468,452,448],
[440,449,0,460,441,449,449,413],
[439,412,430,0,459,433,447,431],
[421,416,449,431,0,430,431,403],
[437,422,441,457,460,0,457,452],
[448,438,441,443,459,433,0,437],
[453,442,477,459,487,438,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,410,441,451,439,440,447],
[458,0,450,450,458,466,440,441],
[480,440,0,455,463,450,440,456],
[449,440,435,0,464,456,435,457],
[439,432,427,426,0,456,438,434],
[451,424,440,434,434,0,431,462],
[450,450,450,455,452,459,0,445],
[443,449,434,433,456,428,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,457,453,457,415,419,422],
[461,0,440,447,444,464,449,433],
[433,450,0,436,442,422,442,458],
[437,443,454,0,455,455,452,425],
[433,446,448,435,0,427,441,426],
[475,426,468,435,463,0,451,468],
[471,441,448,438,449,439,0,453],
[468,457,432,465,464,422,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,488,478,424,448,433,433],
[451,0,455,457,451,450,451,437],
[402,435,0,455,415,406,413,417],
[412,433,435,0,437,438,421,435],
[466,439,475,453,0,467,472,462],
[442,440,484,452,423,0,437,434],
[457,439,477,469,418,453,0,446],
[457,453,473,455,428,456,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,440,464,469,466,435,457],
[399,0,402,415,436,408,420,406],
[450,488,0,465,469,438,424,442],
[426,475,425,0,432,415,435,442],
[421,454,421,458,0,416,415,446],
[424,482,452,475,474,0,457,455],
[455,470,466,455,475,433,0,436],
[433,484,448,448,444,435,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,440,458,470,452,458,447],
[440,0,452,434,460,440,445,427],
[450,438,0,437,449,437,461,435],
[432,456,453,0,452,437,458,445],
[420,430,441,438,0,449,441,420],
[438,450,453,453,441,0,447,417],
[432,445,429,432,449,443,0,431],
[443,463,455,445,470,473,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,375,444,404,452,404,407,413],
[515,0,466,458,475,457,455,432],
[446,424,0,412,437,424,409,466],
[486,432,478,0,476,458,426,457],
[438,415,453,414,0,440,403,406],
[486,433,466,432,450,0,397,420],
[483,435,481,464,487,493,0,454],
[477,458,424,433,484,470,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,440,447,441,444,459,429],
[431,0,439,440,450,445,426,467],
[450,451,0,468,463,454,438,432],
[443,450,422,0,446,451,446,418],
[449,440,427,444,0,441,447,435],
[446,445,436,439,449,0,488,446],
[431,464,452,444,443,402,0,418],
[461,423,458,472,455,444,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,458,455,401,419,448,459],
[458,0,441,429,428,441,440,446],
[432,449,0,458,450,447,426,463],
[435,461,432,0,449,438,453,454],
[489,462,440,441,0,455,460,446],
[471,449,443,452,435,0,443,450],
[442,450,464,437,430,447,0,465],
[431,444,427,436,444,440,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,452,427,470,431,450,468],
[457,0,493,427,472,441,460,465],
[438,397,0,435,465,447,446,462],
[463,463,455,0,478,430,447,465],
[420,418,425,412,0,423,410,453],
[459,449,443,460,467,0,468,472],
[440,430,444,443,480,422,0,455],
[422,425,428,425,437,418,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,414,424,426,426,428,462],
[436,0,432,460,449,431,439,455],
[476,458,0,425,436,451,455,462],
[466,430,465,0,422,451,456,455],
[464,441,454,468,0,444,455,470],
[464,459,439,439,446,0,462,473],
[462,451,435,434,435,428,0,466],
[428,435,428,435,420,417,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,439,475,435,457,461,462],
[412,0,375,422,433,423,408,419],
[451,515,0,459,451,450,432,467],
[415,468,431,0,463,447,418,456],
[455,457,439,427,0,438,482,484],
[433,467,440,443,452,0,438,460],
[429,482,458,472,408,452,0,482],
[428,471,423,434,406,430,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,450,485,434,462,452,463],
[448,0,444,450,451,456,461,461],
[440,446,0,439,453,445,445,446],
[405,440,451,0,438,452,463,442],
[456,439,437,452,0,451,457,443],
[428,434,445,438,439,0,445,466],
[438,429,445,427,433,445,0,467],
[427,429,444,448,447,424,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,377,437,405,423,418,387,398],
[513,0,498,485,465,472,463,444],
[453,392,0,466,435,451,421,434],
[485,405,424,0,451,425,418,445],
[467,425,455,439,0,450,412,463],
[472,418,439,465,440,0,418,450],
[503,427,469,472,478,472,0,422],
[492,446,456,445,427,440,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,587,422,500,458,442,505,478],
[303,0,374,376,406,359,365,367],
[468,516,0,506,444,468,485,489],
[390,514,384,0,410,460,427,403],
[432,484,446,480,0,463,513,456],
[448,531,422,430,427,0,458,443],
[385,525,405,463,377,432,0,396],
[412,523,401,487,434,447,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,438,432,415,399,412,417],
[424,0,438,450,428,421,424,428],
[452,452,0,469,427,434,440,473],
[458,440,421,0,420,435,408,429],
[475,462,463,470,0,461,433,458],
[491,469,456,455,429,0,461,443],
[478,466,450,482,457,429,0,451],
[473,462,417,461,432,447,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,469,472,460,433,446,455],
[421,0,464,463,448,440,438,454],
[421,426,0,460,440,432,422,426],
[418,427,430,0,440,432,407,426],
[430,442,450,450,0,417,430,419],
[457,450,458,458,473,0,444,431],
[444,452,468,483,460,446,0,449],
[435,436,464,464,471,459,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,477,426,478,492,464,452],
[440,0,477,404,465,444,442,434],
[413,413,0,386,431,475,447,399],
[464,486,504,0,464,449,467,429],
[412,425,459,426,0,428,454,432],
[398,446,415,441,462,0,419,448],
[426,448,443,423,436,471,0,411],
[438,456,491,461,458,442,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,456,441,462,443,447,444],
[451,0,460,462,435,438,441,456],
[434,430,0,439,434,440,434,447],
[449,428,451,0,455,430,414,437],
[428,455,456,435,0,424,428,444],
[447,452,450,460,466,0,452,437],
[443,449,456,476,462,438,0,472],
[446,434,443,453,446,453,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,508,513,448,467,426,472,442],
[382,0,456,436,413,406,407,429],
[377,434,0,419,420,368,403,387],
[442,454,471,0,439,446,405,424],
[423,477,470,451,0,437,414,451],
[464,484,522,444,453,0,433,460],
[418,483,487,485,476,457,0,441],
[448,461,503,466,439,430,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,434,422,434,433,461,437],
[429,0,437,418,465,445,448,440],
[456,453,0,440,453,455,460,450],
[468,472,450,0,456,475,452,437],
[456,425,437,434,0,463,479,418],
[457,445,435,415,427,0,440,414],
[429,442,430,438,411,450,0,411],
[453,450,440,453,472,476,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,445,411,424,436,457,440],
[445,0,445,445,427,416,440,446],
[445,445,0,432,424,423,448,433],
[479,445,458,0,448,437,465,459],
[466,463,466,442,0,445,464,463],
[454,474,467,453,445,0,460,468],
[433,450,442,425,426,430,0,436],
[450,444,457,431,427,422,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,495,434,441,481,465,442,447],
[395,0,403,435,398,424,375,426],
[456,487,0,438,497,459,465,463],
[449,455,452,0,451,453,430,424],
[409,492,393,439,0,470,426,419],
[425,466,431,437,420,0,432,411],
[448,515,425,460,464,458,0,457],
[443,464,427,466,471,479,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,467,457,451,487,473,441],
[418,0,435,438,429,440,440,413],
[423,455,0,458,466,460,478,435],
[433,452,432,0,448,455,466,442],
[439,461,424,442,0,452,450,450],
[403,450,430,435,438,0,450,432],
[417,450,412,424,440,440,0,415],
[449,477,455,448,440,458,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,385,410,368,415,435,402,391],
[505,0,503,470,473,488,485,441],
[480,387,0,400,428,438,393,392],
[522,420,490,0,453,466,445,413],
[475,417,462,437,0,400,437,430],
[455,402,452,424,490,0,409,442],
[488,405,497,445,453,481,0,451],
[499,449,498,477,460,448,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,423,431,442,450,427,427],
[494,0,483,454,484,444,452,463],
[467,407,0,426,479,471,453,478],
[459,436,464,0,473,434,459,479],
[448,406,411,417,0,430,446,446],
[440,446,419,456,460,0,460,466],
[463,438,437,431,444,430,0,446],
[463,427,412,411,444,424,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,438,485,452,473,430,459],
[438,0,441,475,439,436,443,454],
[452,449,0,462,437,424,438,440],
[405,415,428,0,405,420,421,420],
[438,451,453,485,0,452,447,431],
[417,454,466,470,438,0,445,467],
[460,447,452,469,443,445,0,462],
[431,436,450,470,459,423,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,444,429,453,454,452,459],
[449,0,432,440,462,453,421,452],
[446,458,0,423,465,463,440,445],
[461,450,467,0,480,449,439,462],
[437,428,425,410,0,446,420,438],
[436,437,427,441,444,0,429,431],
[438,469,450,451,470,461,0,463],
[431,438,445,428,452,459,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,444,477,430,427,437,427],
[429,0,431,426,435,402,429,419],
[446,459,0,454,441,414,444,434],
[413,464,436,0,444,423,442,421],
[460,455,449,446,0,432,467,438],
[463,488,476,467,458,0,434,447],
[453,461,446,448,423,456,0,451],
[463,471,456,469,452,443,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,458,447,448,457,449,450],
[456,0,454,468,455,499,463,440],
[432,436,0,437,431,459,492,443],
[443,422,453,0,440,445,463,433],
[442,435,459,450,0,462,479,461],
[433,391,431,445,428,0,455,417],
[441,427,398,427,411,435,0,413],
[440,450,447,457,429,473,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,438,444,411,458,408,452],
[468,0,416,470,404,507,462,497],
[452,474,0,509,485,515,426,512],
[446,420,381,0,461,471,433,484],
[479,486,405,429,0,467,398,501],
[432,383,375,419,423,0,413,426],
[482,428,464,457,492,477,0,458],
[438,393,378,406,389,464,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,442,449,422,445,436,421],
[467,0,455,455,413,460,465,435],
[448,435,0,455,428,437,445,438],
[441,435,435,0,413,427,441,433],
[468,477,462,477,0,462,480,442],
[445,430,453,463,428,0,460,456],
[454,425,445,449,410,430,0,423],
[469,455,452,457,448,434,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,222,444,668,446,446,444,222],
[668,0,668,890,668,890,666,444],
[446,222,0,890,668,668,444,444],
[222,0,0,0,222,446,222,444],
[444,222,222,668,0,446,444,222],
[444,0,222,444,444,0,666,444],
[446,224,446,668,446,224,0,446],
[668,446,446,446,668,446,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,393,449,429,473,397,431],
[484,0,457,453,470,485,427,465],
[497,433,0,439,462,456,447,488],
[441,437,451,0,440,433,427,453],
[461,420,428,450,0,469,399,422],
[417,405,434,457,421,0,397,430],
[493,463,443,463,491,493,0,473],
[459,425,402,437,468,460,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,403,454,425,440,429,455],
[425,0,442,431,445,445,456,406],
[487,448,0,444,463,447,472,439],
[436,459,446,0,468,463,440,378],
[465,445,427,422,0,450,471,426],
[450,445,443,427,440,0,502,437],
[461,434,418,450,419,388,0,411],
[435,484,451,512,464,453,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,459,459,439,457,449,452],
[422,0,432,462,446,463,448,429],
[431,458,0,457,413,473,448,435],
[431,428,433,0,427,439,436,434],
[451,444,477,463,0,431,447,448],
[433,427,417,451,459,0,431,442],
[441,442,442,454,443,459,0,442],
[438,461,455,456,442,448,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,489,440,444,461,451,437],
[422,0,497,425,423,438,459,449],
[401,393,0,441,417,439,415,385],
[450,465,449,0,412,443,469,431],
[446,467,473,478,0,439,456,429],
[429,452,451,447,451,0,443,433],
[439,431,475,421,434,447,0,387],
[453,441,505,459,461,457,503,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,451,454,422,473,435,447],
[447,0,477,454,446,455,439,448],
[439,413,0,464,419,454,431,430],
[436,436,426,0,392,445,411,435],
[468,444,471,498,0,493,475,492],
[417,435,436,445,397,0,440,454],
[455,451,459,479,415,450,0,467],
[443,442,460,455,398,436,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,443,416,444,415,440,421],
[428,0,451,445,454,459,444,454],
[447,439,0,447,478,442,439,436],
[474,445,443,0,465,442,443,444],
[446,436,412,425,0,448,462,442],
[475,431,448,448,442,0,439,442],
[450,446,451,447,428,451,0,428],
[469,436,454,446,448,448,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,441,458,448,438,456,439],
[409,0,410,423,413,407,421,412],
[449,480,0,448,441,448,454,447],
[432,467,442,0,432,435,434,425],
[442,477,449,458,0,440,453,446],
[452,483,442,455,450,0,440,446],
[434,469,436,456,437,450,0,440],
[451,478,443,465,444,444,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,452,416,476,434,424,419],
[467,0,469,476,469,472,451,429],
[438,421,0,471,466,441,446,441],
[474,414,419,0,486,447,453,481],
[414,421,424,404,0,431,424,436],
[456,418,449,443,459,0,446,428],
[466,439,444,437,466,444,0,440],
[471,461,449,409,454,462,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,470,492,552,477,499,394],
[428,0,447,468,466,388,444,441],
[420,443,0,436,565,513,459,410],
[398,422,454,0,433,399,397,429],
[338,424,325,457,0,338,398,312],
[413,502,377,491,552,0,498,409],
[391,446,431,493,492,392,0,468],
[496,449,480,461,578,481,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,439,441,448,427,441,432],
[485,0,439,445,437,416,452,432],
[451,451,0,464,444,423,456,459],
[449,445,426,0,405,427,471,421],
[442,453,446,485,0,446,479,430],
[463,474,467,463,444,0,502,419],
[449,438,434,419,411,388,0,403],
[458,458,431,469,460,471,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,487,443,481,471,490,471],
[439,0,485,458,456,454,489,461],
[403,405,0,393,414,435,461,418],
[447,432,497,0,452,460,494,483],
[409,434,476,438,0,447,456,435],
[419,436,455,430,443,0,460,451],
[400,401,429,396,434,430,0,434],
[419,429,472,407,455,439,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,443,452,479,409,463,451],
[437,0,454,466,468,443,442,428],
[447,436,0,466,464,428,474,481],
[438,424,424,0,468,436,460,431],
[411,422,426,422,0,401,403,418],
[481,447,462,454,489,0,457,421],
[427,448,416,430,487,433,0,433],
[439,462,409,459,472,469,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,444,506,503,462,473,455],
[421,0,415,465,525,479,482,437],
[446,475,0,453,489,463,421,450],
[384,425,437,0,491,459,407,438],
[387,365,401,399,0,397,401,388],
[428,411,427,431,493,0,434,431],
[417,408,469,483,489,456,0,431],
[435,453,440,452,502,459,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,432,440,465,415,464,453],
[445,0,432,465,448,429,465,448],
[458,458,0,432,447,446,463,490],
[450,425,458,0,462,413,486,454],
[425,442,443,428,0,449,458,461],
[475,461,444,477,441,0,486,442],
[426,425,427,404,432,404,0,406],
[437,442,400,436,429,448,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,382,456,397,436,401,535,485],
[508,0,398,427,504,484,566,472],
[434,492,0,470,514,485,503,494],
[493,463,420,0,520,471,564,535],
[454,386,376,370,0,473,493,494],
[489,406,405,419,417,0,477,447],
[355,324,387,326,397,413,0,473],
[405,418,396,355,396,443,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,417,444,457,442,435,460],
[480,0,460,445,447,452,471,448],
[473,430,0,441,464,465,452,435],
[446,445,449,0,450,455,446,464],
[433,443,426,440,0,448,449,420],
[448,438,425,435,442,0,444,464],
[455,419,438,444,441,446,0,440],
[430,442,455,426,470,426,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,384,415,408,408,452,442,418],
[506,0,458,454,456,464,441,467],
[475,432,0,418,425,435,443,455],
[482,436,472,0,446,451,461,454],
[482,434,465,444,0,473,447,456],
[438,426,455,439,417,0,442,425],
[448,449,447,429,443,448,0,431],
[472,423,435,436,434,465,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,455,443,459,449,468,472],
[435,0,469,457,467,456,485,454],
[435,421,0,448,442,436,434,448],
[447,433,442,0,454,426,464,448],
[431,423,448,436,0,433,446,439],
[441,434,454,464,457,0,465,461],
[422,405,456,426,444,425,0,439],
[418,436,442,442,451,429,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,446,460,438,434,431,443],
[434,0,459,458,440,439,429,442],
[444,431,0,453,433,433,435,432],
[430,432,437,0,415,411,406,447],
[452,450,457,475,0,452,441,435],
[456,451,457,479,438,0,422,452],
[459,461,455,484,449,468,0,445],
[447,448,458,443,455,438,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,425,423,443,448,426,429],
[481,0,448,444,454,433,453,439],
[465,442,0,415,444,444,404,440],
[467,446,475,0,490,474,443,456],
[447,436,446,400,0,428,451,437],
[442,457,446,416,462,0,428,459],
[464,437,486,447,439,462,0,442],
[461,451,450,434,453,431,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,415,420,425,437,433,417],
[441,0,428,422,422,423,458,420],
[475,462,0,428,458,459,473,438],
[470,468,462,0,455,459,484,443],
[465,468,432,435,0,427,473,438],
[453,467,431,431,463,0,449,455],
[457,432,417,406,417,441,0,418],
[473,470,452,447,452,435,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,444,484,463,511,484,474],
[438,0,422,475,433,455,463,446],
[446,468,0,428,432,473,459,428],
[406,415,462,0,448,437,447,429],
[427,457,458,442,0,444,452,437],
[379,435,417,453,446,0,464,464],
[406,427,431,443,438,426,0,425],
[416,444,462,461,453,426,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,440,447,454,485,465,476],
[437,0,441,437,461,465,446,463],
[450,449,0,438,458,469,453,482],
[443,453,452,0,473,489,449,476],
[436,429,432,417,0,468,417,455],
[405,425,421,401,422,0,425,446],
[425,444,437,441,473,465,0,460],
[414,427,408,414,435,444,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,472,475,417,468,433,446],
[465,0,462,488,439,433,424,435],
[418,428,0,399,422,433,442,442],
[415,402,491,0,447,465,390,430],
[473,451,468,443,0,465,462,455],
[422,457,457,425,425,0,428,449],
[457,466,448,500,428,462,0,465],
[444,455,448,460,435,441,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,482,434,429,442,437,464],
[454,0,465,445,461,454,443,459],
[408,425,0,424,423,411,392,417],
[456,445,466,0,445,473,446,464],
[461,429,467,445,0,446,426,452],
[448,436,479,417,444,0,455,458],
[453,447,498,444,464,435,0,461],
[426,431,473,426,438,432,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,429,455,434,425,466,435],
[462,0,432,452,456,451,462,442],
[461,458,0,448,478,452,475,437],
[435,438,442,0,448,415,481,454],
[456,434,412,442,0,431,446,473],
[465,439,438,475,459,0,479,442],
[424,428,415,409,444,411,0,420],
[455,448,453,436,417,448,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,446,464,427,416,445,429],
[421,0,412,440,417,416,424,403],
[444,478,0,477,431,450,441,465],
[426,450,413,0,422,420,438,433],
[463,473,459,468,0,440,446,459],
[474,474,440,470,450,0,433,427],
[445,466,449,452,444,457,0,462],
[461,487,425,457,431,463,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,360,303,331,447,417,444,478],
[530,0,443,449,447,416,527,503],
[587,447,0,530,418,526,534,506],
[559,441,360,0,441,418,473,477],
[443,443,472,449,0,361,446,475],
[473,474,364,472,529,0,339,451],
[446,363,356,417,444,551,0,446],
[412,387,384,413,415,439,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,456,468,472,448,440,468],
[417,0,436,453,440,435,442,439],
[434,454,0,463,428,428,434,463],
[422,437,427,0,462,439,448,459],
[418,450,462,428,0,407,400,436],
[442,455,462,451,483,0,415,460],
[450,448,456,442,490,475,0,438],
[422,451,427,431,454,430,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,442,401,406,448,468,452],
[460,0,454,442,449,430,449,450],
[448,436,0,423,418,465,437,445],
[489,448,467,0,403,478,496,468],
[484,441,472,487,0,470,526,486],
[442,460,425,412,420,0,409,443],
[422,441,453,394,364,481,0,454],
[438,440,445,422,404,447,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,430,446,449,455,434,454],
[446,0,428,443,432,450,414,466],
[460,462,0,473,445,461,444,474],
[444,447,417,0,455,455,432,454],
[441,458,445,435,0,431,436,456],
[435,440,429,435,459,0,445,447],
[456,476,446,458,454,445,0,477],
[436,424,416,436,434,443,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,468,399,426,492,466,465],
[443,0,418,373,401,509,468,422],
[422,472,0,444,446,515,488,514],
[491,517,446,0,495,515,381,534],
[464,489,444,395,0,465,352,443],
[398,381,375,375,425,0,424,401],
[424,422,402,509,538,466,0,471],
[425,468,376,356,447,489,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,444,448,438,401,427,416],
[442,0,456,462,452,476,466,444],
[446,434,0,465,434,444,442,451],
[442,428,425,0,445,458,429,418],
[452,438,456,445,0,467,429,431],
[489,414,446,432,423,0,444,432],
[463,424,448,461,461,446,0,438],
[474,446,439,472,459,458,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,426,420,428,425,419,427],
[454,0,436,437,431,442,446,439],
[464,454,0,463,444,456,442,445],
[470,453,427,0,445,434,431,436],
[462,459,446,445,0,436,454,443],
[465,448,434,456,454,0,444,446],
[471,444,448,459,436,446,0,456],
[463,451,445,454,447,444,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,503,440,485,474,414,502,533],
[387,0,356,416,426,351,412,373],
[450,534,0,488,449,486,432,553],
[405,474,402,0,422,421,386,509],
[416,464,441,468,0,322,502,500],
[476,539,404,469,568,0,466,466],
[388,478,458,504,388,424,0,547],
[357,517,337,381,390,424,343,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,466,445,448,453,483,466],
[441,0,432,477,449,460,467,464],
[424,458,0,454,450,477,459,447],
[445,413,436,0,429,426,449,461],
[442,441,440,461,0,452,481,479],
[437,430,413,464,438,0,466,482],
[407,423,431,441,409,424,0,437],
[424,426,443,429,411,408,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,433,450,472,424,416,486],
[444,0,411,429,443,424,416,443],
[457,479,0,444,433,424,440,474],
[440,461,446,0,461,445,425,447],
[418,447,457,429,0,425,414,452],
[466,466,466,445,465,0,453,500],
[474,474,450,465,476,437,0,503],
[404,447,416,443,438,390,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,431,448,463,451,435,432],
[481,0,480,469,479,469,452,440],
[459,410,0,473,431,466,450,423],
[442,421,417,0,464,444,433,458],
[427,411,459,426,0,451,415,418],
[439,421,424,446,439,0,420,442],
[455,438,440,457,475,470,0,475],
[458,450,467,432,472,448,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,468,449,481,470,465,450],
[446,0,462,444,458,482,454,442],
[422,428,0,418,444,446,445,431],
[441,446,472,0,462,462,457,458],
[409,432,446,428,0,440,433,442],
[420,408,444,428,450,0,458,431],
[425,436,445,433,457,432,0,427],
[440,448,459,432,448,459,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,458,427,459,473,478,444],
[408,0,416,404,435,430,396,402],
[432,474,0,424,441,472,434,444],
[463,486,466,0,467,478,444,446],
[431,455,449,423,0,431,419,412],
[417,460,418,412,459,0,417,418],
[412,494,456,446,471,473,0,438],
[446,488,446,444,478,472,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,473,493,438,483,481,483],
[439,0,434,503,476,465,491,460],
[417,456,0,474,400,421,448,485],
[397,387,416,0,384,470,418,489],
[452,414,490,506,0,489,526,480],
[407,425,469,420,401,0,452,481],
[409,399,442,472,364,438,0,460],
[407,430,405,401,410,409,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,472,478,440,436,469,455],
[424,0,440,469,445,411,428,437],
[418,450,0,475,423,405,439,443],
[412,421,415,0,365,414,447,419],
[450,445,467,525,0,448,498,464],
[454,479,485,476,442,0,491,497],
[421,462,451,443,392,399,0,440],
[435,453,447,471,426,393,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,480,430,429,422,429,449],
[450,0,434,434,436,424,424,425],
[410,456,0,403,436,419,431,447],
[460,456,487,0,416,435,433,451],
[461,454,454,474,0,418,461,473],
[468,466,471,455,472,0,443,490],
[461,466,459,457,429,447,0,463],
[441,465,443,439,417,400,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,448,443,430,449,460,473],
[426,0,432,451,450,463,464,458],
[442,458,0,460,440,438,434,469],
[447,439,430,0,444,466,448,448],
[460,440,450,446,0,448,467,479],
[441,427,452,424,442,0,447,467],
[430,426,456,442,423,443,0,474],
[417,432,421,442,411,423,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,429,453,463,440,463,421],
[429,0,448,413,423,468,490,475],
[461,442,0,438,419,516,520,426],
[437,477,452,0,457,432,460,433],
[427,467,471,433,0,447,479,378],
[450,422,374,458,443,0,517,388],
[427,400,370,430,411,373,0,459],
[469,415,464,457,512,502,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,442,412,389,427,428,409],
[482,0,456,442,437,437,455,458],
[448,434,0,413,421,447,456,426],
[478,448,477,0,441,459,449,440],
[501,453,469,449,0,457,476,444],
[463,453,443,431,433,0,469,445],
[462,435,434,441,414,421,0,419],
[481,432,464,450,446,445,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,436,429,441,447,442,472],
[417,0,422,425,394,413,425,464],
[454,468,0,452,431,485,457,465],
[461,465,438,0,440,467,452,446],
[449,496,459,450,0,441,458,496],
[443,477,405,423,449,0,433,472],
[448,465,433,438,432,457,0,457],
[418,426,425,444,394,418,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,441,472,451,443,436,448],
[447,0,443,474,466,446,460,441],
[449,447,0,461,472,436,461,465],
[418,416,429,0,437,426,422,436],
[439,424,418,453,0,446,431,443],
[447,444,454,464,444,0,461,466],
[454,430,429,468,459,429,0,447],
[442,449,425,454,447,424,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,463,457,489,449,466,440],
[422,0,447,442,444,420,410,416],
[427,443,0,451,445,444,401,422],
[433,448,439,0,445,441,413,429],
[401,446,445,445,0,439,424,436],
[441,470,446,449,451,0,435,462],
[424,480,489,477,466,455,0,445],
[450,474,468,461,454,428,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,451,460,449,438,444,446],
[471,0,445,475,472,462,452,451],
[439,445,0,472,453,456,456,470],
[430,415,418,0,440,443,420,406],
[441,418,437,450,0,444,460,455],
[452,428,434,447,446,0,444,424],
[446,438,434,470,430,446,0,449],
[444,439,420,484,435,466,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,409,439,437,430,422,426],
[454,0,436,426,440,420,432,443],
[481,454,0,470,463,447,437,467],
[451,464,420,0,433,419,431,427],
[453,450,427,457,0,430,441,458],
[460,470,443,471,460,0,450,453],
[468,458,453,459,449,440,0,434],
[464,447,423,463,432,437,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,429,428,428,477,430,430],
[456,0,456,434,432,464,449,431],
[461,434,0,449,441,477,445,435],
[462,456,441,0,444,485,461,420],
[462,458,449,446,0,458,457,422],
[413,426,413,405,432,0,426,404],
[460,441,445,429,433,464,0,453],
[460,459,455,470,468,486,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,450,464,469,425,473,448],
[431,0,447,440,456,445,475,450],
[440,443,0,454,456,435,454,455],
[426,450,436,0,471,430,447,442],
[421,434,434,419,0,429,448,456],
[465,445,455,460,461,0,478,449],
[417,415,436,443,442,412,0,436],
[442,440,435,448,434,441,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,570,567,515,408,495,592],
[417,0,461,503,391,321,393,483],
[320,429,0,452,451,319,411,367],
[323,387,438,0,342,299,367,433],
[375,499,439,548,0,390,385,504],
[482,569,571,591,500,0,430,572],
[395,497,479,523,505,460,0,504],
[298,407,523,457,386,318,386,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,442,454,453,451,434,450],
[440,0,447,448,453,450,423,442],
[448,443,0,430,442,454,432,428],
[436,442,460,0,455,462,439,462],
[437,437,448,435,0,442,432,436],
[439,440,436,428,448,0,429,435],
[456,467,458,451,458,461,0,437],
[440,448,462,428,454,455,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,443,436,419,470,436,462],
[436,0,444,427,456,460,456,462],
[447,446,0,450,442,455,446,461],
[454,463,440,0,490,470,460,481],
[471,434,448,400,0,472,432,458],
[420,430,435,420,418,0,417,451],
[454,434,444,430,458,473,0,471],
[428,428,429,409,432,439,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,456,455,450,430,430,441],
[436,0,446,461,440,442,433,413],
[434,444,0,471,450,432,437,456],
[435,429,419,0,424,424,423,419],
[440,450,440,466,0,455,451,416],
[460,448,458,466,435,0,436,427],
[460,457,453,467,439,454,0,450],
[449,477,434,471,474,463,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,441,439,447,451,405,405],
[447,0,450,452,442,461,432,471],
[449,440,0,463,463,445,432,450],
[451,438,427,0,439,431,426,423],
[443,448,427,451,0,438,409,445],
[439,429,445,459,452,0,453,436],
[485,458,458,464,481,437,0,408],
[485,419,440,467,445,454,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,422,353,418,403,466,430],
[455,0,399,397,409,409,473,370],
[468,491,0,485,424,501,485,454],
[537,493,405,0,469,438,413,455],
[472,481,466,421,0,424,515,487],
[487,481,389,452,466,0,461,444],
[424,417,405,477,375,429,0,365],
[460,520,436,435,403,446,525,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,462,470,473,460,459,471],
[456,0,428,467,438,475,428,456],
[428,462,0,486,449,462,452,463],
[420,423,404,0,431,448,437,424],
[417,452,441,459,0,465,449,471],
[430,415,428,442,425,0,436,438],
[431,462,438,453,441,454,0,460],
[419,434,427,466,419,452,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,451,456,441,422,436,452],
[437,0,446,474,451,458,431,423],
[439,444,0,456,458,451,414,431],
[434,416,434,0,414,439,416,408],
[449,439,432,476,0,466,448,432],
[468,432,439,451,424,0,432,435],
[454,459,476,474,442,458,0,443],
[438,467,459,482,458,455,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,463,434,457,440,446,460],
[452,0,458,440,460,451,443,449],
[427,432,0,434,441,460,435,440],
[456,450,456,0,452,443,453,475],
[433,430,449,438,0,451,432,448],
[450,439,430,447,439,0,466,462],
[444,447,455,437,458,424,0,440],
[430,441,450,415,442,428,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,469,392,417,412,457,444],
[432,0,440,403,394,423,464,461],
[421,450,0,408,381,401,450,461],
[498,487,482,0,436,460,481,480],
[473,496,509,454,0,438,494,487],
[478,467,489,430,452,0,470,490],
[433,426,440,409,396,420,0,439],
[446,429,429,410,403,400,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,448,421,450,447,463,441],
[441,0,433,432,455,466,452,445],
[442,457,0,433,441,443,432,430],
[469,458,457,0,440,442,462,463],
[440,435,449,450,0,450,447,457],
[443,424,447,448,440,0,449,441],
[427,438,458,428,443,441,0,428],
[449,445,460,427,433,449,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,467,434,466,440,449,426],
[455,0,468,448,477,463,451,445],
[423,422,0,417,457,415,419,428],
[456,442,473,0,467,439,437,432],
[424,413,433,423,0,429,412,412],
[450,427,475,451,461,0,445,439],
[441,439,471,453,478,445,0,440],
[464,445,462,458,478,451,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,405,415,430,407,454,447],
[477,0,438,436,436,439,505,470],
[485,452,0,435,426,463,475,463],
[475,454,455,0,456,432,473,434],
[460,454,464,434,0,446,469,459],
[483,451,427,458,444,0,462,446],
[436,385,415,417,421,428,0,441],
[443,420,427,456,431,444,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,441,441,455,465,443,454],
[454,0,451,445,437,471,431,447],
[449,439,0,430,435,452,442,450],
[449,445,460,0,463,471,441,460],
[435,453,455,427,0,469,439,443],
[425,419,438,419,421,0,451,435],
[447,459,448,449,451,439,0,440],
[436,443,440,430,447,455,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,474,441,506,539,476,571],
[447,0,479,379,476,477,476,571],
[416,411,0,318,411,414,380,573],
[449,511,572,0,506,381,442,511],
[384,414,479,384,0,511,414,476],
[351,413,476,509,379,0,443,508],
[414,414,510,448,476,447,0,541],
[319,319,317,379,414,382,349,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,445,433,398,458,459,427],
[487,0,435,426,431,473,469,444],
[445,455,0,423,459,487,455,443],
[457,464,467,0,445,436,438,430],
[492,459,431,445,0,460,475,458],
[432,417,403,454,430,0,468,450],
[431,421,435,452,415,422,0,422],
[463,446,447,460,432,440,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,464,468,484,418,424,472],
[442,0,417,528,474,448,416,448],
[426,473,0,497,431,397,410,423],
[422,362,393,0,387,385,408,366],
[406,416,459,503,0,422,444,385],
[472,442,493,505,468,0,471,420],
[466,474,480,482,446,419,0,455],
[418,442,467,524,505,470,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,423,420,470,447,443,442],
[450,0,470,442,484,472,478,474],
[467,420,0,460,460,474,461,483],
[470,448,430,0,471,458,478,453],
[420,406,430,419,0,437,418,445],
[443,418,416,432,453,0,438,467],
[447,412,429,412,472,452,0,449],
[448,416,407,437,445,423,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,464,426,433,442,436,441],
[440,0,454,425,435,461,416,428],
[426,436,0,431,399,419,441,426],
[464,465,459,0,447,452,429,442],
[457,455,491,443,0,436,462,444],
[448,429,471,438,454,0,425,447],
[454,474,449,461,428,465,0,479],
[449,462,464,448,446,443,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,476,468,444,443,464,454],
[428,0,469,442,420,440,444,425],
[414,421,0,432,430,424,429,425],
[422,448,458,0,425,446,447,444],
[446,470,460,465,0,441,439,434],
[447,450,466,444,449,0,462,441],
[426,446,461,443,451,428,0,447],
[436,465,465,446,456,449,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,468,440,469,481,451,463],
[425,0,441,437,455,456,468,458],
[422,449,0,442,456,447,438,439],
[450,453,448,0,470,464,438,454],
[421,435,434,420,0,460,443,437],
[409,434,443,426,430,0,417,425],
[439,422,452,452,447,473,0,438],
[427,432,451,436,453,465,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,430,426,426,463,432,424],
[485,0,466,465,441,478,443,428],
[460,424,0,459,439,488,472,416],
[464,425,431,0,456,456,456,467],
[464,449,451,434,0,489,471,412],
[427,412,402,434,401,0,435,398],
[458,447,418,434,419,455,0,421],
[466,462,474,423,478,492,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,473,488,468,431,460,433],
[454,0,454,494,426,436,460,445],
[417,436,0,466,432,434,450,443],
[402,396,424,0,420,410,424,408],
[422,464,458,470,0,421,442,455],
[459,454,456,480,469,0,466,444],
[430,430,440,466,448,424,0,440],
[457,445,447,482,435,446,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,415,468,429,466,519,432],
[429,0,421,440,432,414,453,411],
[475,469,0,486,454,453,497,434],
[422,450,404,0,412,448,488,397],
[461,458,436,478,0,443,511,417],
[424,476,437,442,447,0,494,471],
[371,437,393,402,379,396,0,405],
[458,479,456,493,473,419,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,463,448,473,436,458,444],
[424,0,445,457,437,429,434,444],
[427,445,0,451,464,451,448,441],
[442,433,439,0,460,428,456,448],
[417,453,426,430,0,423,447,437],
[454,461,439,462,467,0,443,457],
[432,456,442,434,443,447,0,442],
[446,446,449,442,453,433,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,417,409,397,406,440,432],
[467,0,434,438,450,428,495,439],
[473,456,0,448,447,440,453,459],
[481,452,442,0,445,428,468,458],
[493,440,443,445,0,442,473,455],
[484,462,450,462,448,0,456,434],
[450,395,437,422,417,434,0,439],
[458,451,431,432,435,456,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,452,435,443,468,484,463],
[447,0,443,456,440,482,443,452],
[438,447,0,470,438,497,484,463],
[455,434,420,0,465,449,478,432],
[447,450,452,425,0,461,450,442],
[422,408,393,441,429,0,437,411],
[406,447,406,412,440,453,0,411],
[427,438,427,458,448,479,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,445,466,452,460,442,462],
[426,0,458,438,447,446,458,439],
[445,432,0,441,451,449,424,440],
[424,452,449,0,467,483,469,460],
[438,443,439,423,0,468,439,452],
[430,444,441,407,422,0,429,454],
[448,432,466,421,451,461,0,456],
[428,451,450,430,438,436,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,454,452,474,438,449,442],
[422,0,437,439,426,457,422,430],
[436,453,0,436,422,487,409,436],
[438,451,454,0,400,444,414,452],
[416,464,468,490,0,465,410,426],
[452,433,403,446,425,0,382,419],
[441,468,481,476,480,508,0,485],
[448,460,454,438,464,471,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,448,438,498,447,434,483],
[432,0,429,444,453,449,442,412],
[442,461,0,453,453,434,434,431],
[452,446,437,0,466,417,443,438],
[392,437,437,424,0,393,394,447],
[443,441,456,473,497,0,463,438],
[456,448,456,447,496,427,0,478],
[407,478,459,452,443,452,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,444,395,427,434,388,437],
[463,0,466,444,438,472,425,466],
[446,424,0,446,447,458,414,436],
[495,446,444,0,449,474,435,446],
[463,452,443,441,0,494,447,447],
[456,418,432,416,396,0,418,437],
[502,465,476,455,443,472,0,468],
[453,424,454,444,443,453,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,442,435,433,412,429,417],
[457,0,448,407,451,463,436,417],
[448,442,0,442,430,445,441,446],
[455,483,448,0,459,467,434,433],
[457,439,460,431,0,437,435,438],
[478,427,445,423,453,0,441,438],
[461,454,449,456,455,449,0,436],
[473,473,444,457,452,452,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,444,438,456,431,433,471],
[412,0,440,431,451,431,416,437],
[446,450,0,437,441,446,444,466],
[452,459,453,0,453,424,430,479],
[434,439,449,437,0,433,452,471],
[459,459,444,466,457,0,436,446],
[457,474,446,460,438,454,0,456],
[419,453,424,411,419,444,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,424,495,485,451,455,480],
[450,0,447,483,516,404,477,459],
[466,443,0,492,525,420,426,412],
[395,407,398,0,487,387,391,392],
[405,374,365,403,0,401,389,368],
[439,486,470,503,489,0,446,438],
[435,413,464,499,501,444,0,455],
[410,431,478,498,522,452,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,460,499,471,476,439,473],
[415,0,496,518,506,480,453,479],
[430,394,0,504,442,462,430,423],
[391,372,386,0,395,400,429,399],
[419,384,448,495,0,423,464,428],
[414,410,428,490,467,0,398,469],
[451,437,460,461,426,492,0,411],
[417,411,467,491,462,421,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,451,475,430,454,436,451],
[469,0,436,446,437,446,441,462],
[439,454,0,418,423,445,392,445],
[415,444,472,0,425,435,459,442],
[460,453,467,465,0,459,442,484],
[436,444,445,455,431,0,442,462],
[454,449,498,431,448,448,0,471],
[439,428,445,448,406,428,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,437,464,489,480,440,453],
[452,0,445,455,491,451,478,498],
[453,445,0,467,455,446,433,495],
[426,435,423,0,485,427,470,443],
[401,399,435,405,0,440,420,439],
[410,439,444,463,450,0,450,467],
[450,412,457,420,470,440,0,471],
[437,392,395,447,451,423,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,436,426,456,444,434,453],
[447,0,443,425,433,449,463,447],
[454,447,0,453,457,471,445,449],
[464,465,437,0,455,476,451,462],
[434,457,433,435,0,439,436,433],
[446,441,419,414,451,0,418,431],
[456,427,445,439,454,472,0,456],
[437,443,441,428,457,459,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,406,453,445,409,425,415],
[458,0,434,468,463,436,454,478],
[484,456,0,457,486,455,441,457],
[437,422,433,0,466,426,434,449],
[445,427,404,424,0,447,389,407],
[481,454,435,464,443,0,417,470],
[465,436,449,456,501,473,0,447],
[475,412,433,441,483,420,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,454,443,472,457,462,459],
[431,0,434,444,434,415,429,451],
[436,456,0,444,449,438,481,469],
[447,446,446,0,468,420,442,447],
[418,456,441,422,0,432,441,446],
[433,475,452,470,458,0,470,470],
[428,461,409,448,449,420,0,456],
[431,439,421,443,444,420,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,435,434,410,435,427,428],
[452,0,439,438,458,457,444,450],
[455,451,0,455,458,422,434,470],
[456,452,435,0,452,430,462,452],
[480,432,432,438,0,418,448,454],
[455,433,468,460,472,0,453,449],
[463,446,456,428,442,437,0,472],
[462,440,420,438,436,441,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,375,485,459,450,459,497,517],
[515,0,423,448,493,470,495,462],
[405,467,0,482,477,443,502,469],
[431,442,408,0,451,379,482,418],
[440,397,413,439,0,438,474,458],
[431,420,447,511,452,0,506,463],
[393,395,388,408,416,384,0,460],
[373,428,421,472,432,427,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,444,447,442,437,443,432],
[443,0,449,440,430,451,434,454],
[446,441,0,448,432,448,410,435],
[443,450,442,0,440,441,443,436],
[448,460,458,450,0,452,428,454],
[453,439,442,449,438,0,441,449],
[447,456,480,447,462,449,0,439],
[458,436,455,454,436,441,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,456,443,440,430,454,437],
[419,0,423,417,404,404,440,431],
[434,467,0,428,419,443,426,437],
[447,473,462,0,477,434,440,473],
[450,486,471,413,0,421,445,447],
[460,486,447,456,469,0,436,448],
[436,450,464,450,445,454,0,428],
[453,459,453,417,443,442,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,449,445,445,450,463,482],
[434,0,417,436,422,448,443,456],
[441,473,0,466,432,445,482,472],
[445,454,424,0,422,441,439,468],
[445,468,458,468,0,458,451,481],
[440,442,445,449,432,0,453,446],
[427,447,408,451,439,437,0,442],
[408,434,418,422,409,444,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,452,431,469,424,439,446],
[451,0,431,418,476,451,444,449],
[438,459,0,440,468,433,443,441],
[459,472,450,0,481,448,445,484],
[421,414,422,409,0,412,425,428],
[466,439,457,442,478,0,456,443],
[451,446,447,445,465,434,0,451],
[444,441,449,406,462,447,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,527,524,461,472,445,490],
[422,0,424,456,421,430,431,401],
[363,466,0,506,467,468,416,449],
[366,434,384,0,423,420,365,345],
[429,469,423,467,0,456,467,451],
[418,460,422,470,434,0,438,455],
[445,459,474,525,423,452,0,427],
[400,489,441,545,439,435,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,459,454,442,466,432,456],
[435,0,427,448,446,454,439,453],
[431,463,0,451,436,473,436,459],
[436,442,439,0,437,471,454,437],
[448,444,454,453,0,475,446,448],
[424,436,417,419,415,0,423,425],
[458,451,454,436,444,467,0,457],
[434,437,431,453,442,465,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,472,475,447,440,433,415],
[436,0,450,465,412,452,439,419],
[418,440,0,444,419,420,412,374],
[415,425,446,0,441,416,440,406],
[443,478,471,449,0,468,423,445],
[450,438,470,474,422,0,418,411],
[457,451,478,450,467,472,0,433],
[475,471,516,484,445,479,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,441,428,445,438,465,431],
[440,0,446,441,447,424,442,424],
[449,444,0,479,454,442,466,436],
[462,449,411,0,448,435,455,432],
[445,443,436,442,0,433,450,448],
[452,466,448,455,457,0,445,421],
[425,448,424,435,440,445,0,419],
[459,466,454,458,442,469,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,463,467,459,466,450,431],
[428,0,464,454,484,449,454,438],
[427,426,0,444,463,442,433,461],
[423,436,446,0,444,462,469,430],
[431,406,427,446,0,470,417,434],
[424,441,448,428,420,0,438,429],
[440,436,457,421,473,452,0,426],
[459,452,429,460,456,461,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,402,456,439,418,430,450],
[490,0,491,416,469,472,433,502],
[488,399,0,476,419,434,423,478],
[434,474,414,0,443,466,406,465],
[451,421,471,447,0,473,422,519],
[472,418,456,424,417,0,450,459],
[460,457,467,484,468,440,0,488],
[440,388,412,425,371,431,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,398,382,426,442,449,421],
[456,0,428,453,462,525,509,446],
[492,462,0,449,492,442,487,474],
[508,437,441,0,469,454,514,470],
[464,428,398,421,0,464,424,423],
[448,365,448,436,426,0,455,445],
[441,381,403,376,466,435,0,406],
[469,444,416,420,467,445,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,456,452,465,455,431,440],
[431,0,428,432,446,448,447,417],
[434,462,0,448,449,438,451,448],
[438,458,442,0,437,429,454,418],
[425,444,441,453,0,452,433,426],
[435,442,452,461,438,0,411,440],
[459,443,439,436,457,479,0,433],
[450,473,442,472,464,450,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,443,451,444,454,443,464],
[440,0,478,455,454,450,461,470],
[447,412,0,436,407,420,408,431],
[439,435,454,0,398,414,423,456],
[446,436,483,492,0,450,430,477],
[436,440,470,476,440,0,440,458],
[447,429,482,467,460,450,0,451],
[426,420,459,434,413,432,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,486,493,459,465,445,508],
[418,0,477,434,446,436,475,477],
[404,413,0,405,409,426,428,441],
[397,456,485,0,456,431,429,451],
[431,444,481,434,0,452,460,465],
[425,454,464,459,438,0,449,459],
[445,415,462,461,430,441,0,445],
[382,413,449,439,425,431,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,394,447,442,447,427,433],
[445,0,463,467,448,454,455,465],
[496,427,0,449,465,455,440,452],
[443,423,441,0,441,440,432,430],
[448,442,425,449,0,447,427,447],
[443,436,435,450,443,0,438,433],
[463,435,450,458,463,452,0,436],
[457,425,438,460,443,457,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,438,470,451,443,462,450],
[415,0,429,458,440,423,452,431],
[452,461,0,452,439,433,454,432],
[420,432,438,0,461,442,456,443],
[439,450,451,429,0,425,451,441],
[447,467,457,448,465,0,465,436],
[428,438,436,434,439,425,0,427],
[440,459,458,447,449,454,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,433,459,422,424,492,419],
[421,0,404,437,396,418,458,407],
[457,486,0,469,424,456,496,482],
[431,453,421,0,419,420,465,421],
[468,494,466,471,0,443,472,467],
[466,472,434,470,447,0,465,438],
[398,432,394,425,418,425,0,395],
[471,483,408,469,423,452,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,461,455,458,464,477,444],
[460,0,451,452,448,423,437,425],
[429,439,0,450,437,436,468,444],
[435,438,440,0,436,426,447,460],
[432,442,453,454,0,420,463,436],
[426,467,454,464,470,0,484,447],
[413,453,422,443,427,406,0,424],
[446,465,446,430,454,443,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,450,443,465,449,437,468],
[482,0,481,445,450,452,462,460],
[440,409,0,410,436,454,430,436],
[447,445,480,0,443,463,449,444],
[425,440,454,447,0,464,446,447],
[441,438,436,427,426,0,413,442],
[453,428,460,441,444,477,0,472],
[422,430,454,446,443,448,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,476,447,433,426,454,453],
[443,0,455,455,451,454,460,469],
[414,435,0,444,456,434,439,458],
[443,435,446,0,460,445,458,461],
[457,439,434,430,0,417,451,445],
[464,436,456,445,473,0,456,458],
[436,430,451,432,439,434,0,450],
[437,421,432,429,445,432,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,242,241,404,322,242,322],
[486,0,243,322,485,404,404,484],
[648,647,0,404,566,485,566,566],
[649,568,486,0,405,566,487,727],
[486,405,324,485,0,485,567,565],
[568,486,405,324,405,0,323,323],
[648,486,324,403,323,567,0,483],
[568,406,324,163,325,567,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,439,458,461,463,450,463],
[445,0,452,475,448,439,463,449],
[451,438,0,489,455,420,445,458],
[432,415,401,0,434,378,404,443],
[429,442,435,456,0,406,444,416],
[427,451,470,512,484,0,456,464],
[440,427,445,486,446,434,0,462],
[427,441,432,447,474,426,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,474,447,432,453,460,455],
[441,0,440,407,422,443,464,411],
[416,450,0,398,418,465,458,422],
[443,483,492,0,459,440,470,452],
[458,468,472,431,0,457,469,447],
[437,447,425,450,433,0,449,414],
[430,426,432,420,421,441,0,438],
[435,479,468,438,443,476,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,440,437,443,435,445,440],
[439,0,452,452,445,432,459,447],
[450,438,0,434,459,444,440,465],
[453,438,456,0,450,448,460,454],
[447,445,431,440,0,422,459,467],
[455,458,446,442,468,0,473,463],
[445,431,450,430,431,417,0,446],
[450,443,425,436,423,427,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,426,437,433,413,417,415],
[441,0,419,455,430,432,404,425],
[464,471,0,440,449,434,441,440],
[453,435,450,0,424,421,439,444],
[457,460,441,466,0,447,429,443],
[477,458,456,469,443,0,453,451],
[473,486,449,451,461,437,0,445],
[475,465,450,446,447,439,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,447,421,460,456,453,445],
[427,0,426,410,429,443,445,451],
[443,464,0,455,444,469,433,461],
[469,480,435,0,472,470,441,444],
[430,461,446,418,0,448,443,466],
[434,447,421,420,442,0,440,444],
[437,445,457,449,447,450,0,436],
[445,439,429,446,424,446,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,445,430,434,438,457,450],
[448,0,443,438,442,428,480,444],
[445,447,0,460,445,403,421,452],
[460,452,430,0,463,437,454,459],
[456,448,445,427,0,452,453,448],
[452,462,487,453,438,0,453,466],
[433,410,469,436,437,437,0,457],
[440,446,438,431,442,424,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,468,458,456,446,462,463],
[445,0,454,466,434,454,463,450],
[422,436,0,426,432,409,454,434],
[432,424,464,0,433,437,452,446],
[434,456,458,457,0,450,463,479],
[444,436,481,453,440,0,446,445],
[428,427,436,438,427,444,0,444],
[427,440,456,444,411,445,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,485,414,419,447,457,424],
[466,0,454,407,451,470,442,459],
[405,436,0,393,415,456,422,422],
[476,483,497,0,457,511,445,484],
[471,439,475,433,0,518,440,492],
[443,420,434,379,372,0,399,435],
[433,448,468,445,450,491,0,475],
[466,431,468,406,398,455,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,412,452,450,408,397,458],
[494,0,445,487,484,478,462,493],
[478,445,0,472,481,461,438,473],
[438,403,418,0,473,444,423,468],
[440,406,409,417,0,434,421,439],
[482,412,429,446,456,0,422,471],
[493,428,452,467,469,468,0,485],
[432,397,417,422,451,419,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,445,445,445,445,445,445],
[445,0,445,0,890,445,445,445],
[445,445,0,0,445,445,445,445],
[445,890,890,0,890,445,445,890],
[445,0,445,0,0,445,445,445],
[445,445,445,445,445,0,445,445],
[445,445,445,445,445,445,0,445],
[445,445,445,0,445,445,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,493,463,508,463,503,445,447],
[397,0,439,464,430,453,418,426],
[427,451,0,498,444,486,434,475],
[382,426,392,0,420,430,397,410],
[427,460,446,470,0,458,433,428],
[387,437,404,460,432,0,398,395],
[445,472,456,493,457,492,0,490],
[443,464,415,480,462,495,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,481,462,438,476,449,464],
[431,0,472,440,468,462,454,460],
[409,418,0,433,454,423,450,449],
[428,450,457,0,458,444,460,450],
[452,422,436,432,0,468,437,446],
[414,428,467,446,422,0,429,446],
[441,436,440,430,453,461,0,444],
[426,430,441,440,444,444,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,466,433,430,460,448,448],
[454,0,472,443,401,469,423,446],
[424,418,0,419,421,454,438,443],
[457,447,471,0,458,472,442,451],
[460,489,469,432,0,502,459,473],
[430,421,436,418,388,0,423,424],
[442,467,452,448,431,467,0,445],
[442,444,447,439,417,466,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,427,403,426,402,354,357],
[441,0,444,497,513,490,402,402],
[463,446,0,494,445,540,375,379],
[487,393,396,0,371,443,326,351],
[464,377,445,519,0,469,444,403],
[488,400,350,447,421,0,328,356],
[536,488,515,564,446,562,0,445],
[533,488,511,539,487,534,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,429,458,454,460,450,453],
[446,0,444,473,443,439,429,427],
[461,446,0,471,456,482,441,457],
[432,417,419,0,433,446,416,439],
[436,447,434,457,0,454,469,451],
[430,451,408,444,436,0,449,445],
[440,461,449,474,421,441,0,445],
[437,463,433,451,439,445,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,482,500,401,431,423,447],
[480,0,536,508,377,442,440,499],
[408,354,0,474,326,420,394,342],
[390,382,416,0,339,436,379,432],
[489,513,564,551,0,512,538,438],
[459,448,470,454,378,0,427,416],
[467,450,496,511,352,463,0,449],
[443,391,548,458,452,474,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,454,454,446,466,457,439],
[453,0,456,455,441,436,440,446],
[436,434,0,432,447,444,443,450],
[436,435,458,0,463,465,439,454],
[444,449,443,427,0,451,442,444],
[424,454,446,425,439,0,435,423],
[433,450,447,451,448,455,0,441],
[451,444,440,436,446,467,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,418,468,440,463,475,454],
[473,0,466,450,432,461,492,440],
[472,424,0,525,473,481,523,484],
[422,440,365,0,435,419,435,427],
[450,458,417,455,0,462,463,472],
[427,429,409,471,428,0,475,435],
[415,398,367,455,427,415,0,408],
[436,450,406,463,418,455,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,452,429,460,420,408,444],
[434,0,462,458,424,454,421,398],
[438,428,0,442,466,447,462,428],
[461,432,448,0,455,401,412,490],
[430,466,424,435,0,395,423,427],
[470,436,443,489,495,0,450,435],
[482,469,428,478,467,440,0,489],
[446,492,462,400,463,455,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,449,451,430,467,461,461],
[468,0,443,439,419,483,465,475],
[441,447,0,448,445,462,446,441],
[439,451,442,0,425,467,451,449],
[460,471,445,465,0,470,467,466],
[423,407,428,423,420,0,430,444],
[429,425,444,439,423,460,0,448],
[429,415,449,441,424,446,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,439,427,433,434,422,442],
[464,0,448,445,428,434,432,461],
[451,442,0,443,435,434,431,459],
[463,445,447,0,442,449,441,468],
[457,462,455,448,0,435,461,466],
[456,456,456,441,455,0,450,442],
[468,458,459,449,429,440,0,459],
[448,429,431,422,424,448,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,408,414,393,436,425,417],
[470,0,453,461,435,453,441,423],
[482,437,0,445,428,476,446,441],
[476,429,445,0,428,462,453,431],
[497,455,462,462,0,491,455,442],
[454,437,414,428,399,0,434,399],
[465,449,444,437,435,456,0,453],
[473,467,449,459,448,491,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,446,435,446,459,469,454],
[446,0,443,433,449,456,480,444],
[444,447,0,436,443,438,458,444],
[455,457,454,0,447,435,484,445],
[444,441,447,443,0,454,485,447],
[431,434,452,455,436,0,451,446],
[421,410,432,406,405,439,0,413],
[436,446,446,445,443,444,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,465,439,447,460,463,453],
[444,0,499,462,439,434,450,463],
[425,391,0,422,411,381,455,420],
[451,428,468,0,452,451,418,430],
[443,451,479,438,0,462,460,475],
[430,456,509,439,428,0,475,440],
[427,440,435,472,430,415,0,436],
[437,427,470,460,415,450,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,489,473,453,451,425,424],
[425,0,433,415,422,425,420,401],
[401,457,0,425,406,405,420,383],
[417,475,465,0,448,430,436,427],
[437,468,484,442,0,466,449,457],
[439,465,485,460,424,0,451,423],
[465,470,470,454,441,439,0,424],
[466,489,507,463,433,467,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,461,482,462,450,445,431],
[407,0,437,451,475,455,433,424],
[429,453,0,484,458,443,454,463],
[408,439,406,0,432,429,415,417],
[428,415,432,458,0,438,431,455],
[440,435,447,461,452,0,434,447],
[445,457,436,475,459,456,0,444],
[459,466,427,473,435,443,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,451,449,428,423,437,427],
[428,0,464,463,433,444,438,451],
[439,426,0,435,435,421,426,442],
[441,427,455,0,433,412,446,414],
[462,457,455,457,0,449,465,434],
[467,446,469,478,441,0,485,417],
[453,452,464,444,425,405,0,422],
[463,439,448,476,456,473,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,404,435,443,475,445,446],
[486,0,465,479,444,509,488,484],
[486,425,0,491,471,488,471,439],
[455,411,399,0,482,457,463,444],
[447,446,419,408,0,477,450,448],
[415,381,402,433,413,0,419,401],
[445,402,419,427,440,471,0,418],
[444,406,451,446,442,489,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,390,407,428,434,369,388,376],
[500,0,459,461,447,449,445,465],
[483,431,0,487,441,404,431,418],
[462,429,403,0,420,396,416,395],
[456,443,449,470,0,404,431,404],
[521,441,486,494,486,0,456,425],
[502,445,459,474,459,434,0,474],
[514,425,472,495,486,465,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,492,430,451,460,434,473],
[442,0,458,456,468,442,455,462],
[398,432,0,445,424,453,407,432],
[460,434,445,0,452,466,446,493],
[439,422,466,438,0,454,446,458],
[430,448,437,424,436,0,428,477],
[456,435,483,444,444,462,0,473],
[417,428,458,397,432,413,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,479,459,418,490,461,498],
[404,0,466,397,417,457,437,467],
[411,424,0,396,445,417,433,459],
[431,493,494,0,456,456,499,496],
[472,473,445,434,0,469,478,524],
[400,433,473,434,421,0,502,478],
[429,453,457,391,412,388,0,444],
[392,423,431,394,366,412,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,459,450,436,435,438,415],
[444,0,431,465,417,445,449,423],
[431,459,0,447,431,425,442,428],
[440,425,443,0,410,429,438,436],
[454,473,459,480,0,450,468,440],
[455,445,465,461,440,0,451,456],
[452,441,448,452,422,439,0,451],
[475,467,462,454,450,434,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,464,439,461,429,462,482],
[438,0,447,418,413,437,443,472],
[426,443,0,439,429,417,439,464],
[451,472,451,0,430,446,471,459],
[429,477,461,460,0,410,408,439],
[461,453,473,444,480,0,444,482],
[428,447,451,419,482,446,0,476],
[408,418,426,431,451,408,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,442,432,456,448,447,454],
[436,0,425,441,429,452,439,432],
[448,465,0,458,423,434,436,455],
[458,449,432,0,447,448,432,436],
[434,461,467,443,0,429,447,450],
[442,438,456,442,461,0,450,448],
[443,451,454,458,443,440,0,479],
[436,458,435,454,440,442,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,434,435,384,404,417,419],
[461,0,427,427,450,442,423,457],
[456,463,0,452,436,416,447,479],
[455,463,438,0,451,453,464,490],
[506,440,454,439,0,427,461,464],
[486,448,474,437,463,0,448,477],
[473,467,443,426,429,442,0,462],
[471,433,411,400,426,413,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,368,389,403,402,421,382,424],
[522,0,475,518,418,501,458,434],
[501,415,0,500,461,453,449,441],
[487,372,390,0,403,437,384,417],
[488,472,429,487,0,471,383,463],
[469,389,437,453,419,0,416,414],
[508,432,441,506,507,474,0,471],
[466,456,449,473,427,476,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,535,420,483,436,503,494,455],
[355,0,404,410,414,442,407,371],
[470,486,0,468,446,491,487,395],
[407,480,422,0,402,504,426,384],
[454,476,444,488,0,484,476,398],
[387,448,399,386,406,0,458,387],
[396,483,403,464,414,432,0,379],
[435,519,495,506,492,503,511,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,459,476,421,478,452,458],
[434,0,424,484,424,488,447,416],
[431,466,0,472,457,469,448,430],
[414,406,418,0,419,452,415,424],
[469,466,433,471,0,501,425,459],
[412,402,421,438,389,0,393,397],
[438,443,442,475,465,497,0,439],
[432,474,460,466,431,493,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,463,453,456,449,463,445],
[447,0,443,435,435,444,465,448],
[427,447,0,449,467,437,431,438],
[437,455,441,0,444,436,438,457],
[434,455,423,446,0,409,451,441],
[441,446,453,454,481,0,446,468],
[427,425,459,452,439,444,0,442],
[445,442,452,433,449,422,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,453,433,437,430,467,450],
[440,0,450,430,438,437,453,451],
[437,440,0,437,459,418,445,446],
[457,460,453,0,470,441,451,456],
[453,452,431,420,0,420,459,420],
[460,453,472,449,470,0,469,434],
[423,437,445,439,431,421,0,434],
[440,439,444,434,470,456,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,419,433,452,438,433,454],
[449,0,401,393,400,468,452,436],
[471,489,0,476,444,433,463,454],
[457,497,414,0,473,441,460,491],
[438,490,446,417,0,409,440,459],
[452,422,457,449,481,0,450,453],
[457,438,427,430,450,440,0,450],
[436,454,436,399,431,437,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,412,471,467,448,427,452],
[454,0,434,504,447,426,453,476],
[478,456,0,475,473,429,451,462],
[419,386,415,0,407,389,423,462],
[423,443,417,483,0,445,429,482],
[442,464,461,501,445,0,424,484],
[463,437,439,467,461,466,0,482],
[438,414,428,428,408,406,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,448,429,446,443,455,454],
[450,0,451,428,453,454,473,474],
[442,439,0,424,444,453,468,452],
[461,462,466,0,452,444,482,455],
[444,437,446,438,0,446,452,457],
[447,436,437,446,444,0,472,471],
[435,417,422,408,438,418,0,423],
[436,416,438,435,433,419,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,433,442,446,455,441,452],
[456,0,422,456,414,458,429,439],
[457,468,0,461,435,443,437,456],
[448,434,429,0,445,434,432,420],
[444,476,455,445,0,451,429,458],
[435,432,447,456,439,0,440,448],
[449,461,453,458,461,450,0,437],
[438,451,434,470,432,442,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,532,412,490,471,499,502],
[436,0,491,467,490,510,523,520],
[358,399,0,433,431,446,432,490],
[478,423,457,0,461,432,495,468],
[400,400,459,429,0,394,441,485],
[419,380,444,458,496,0,414,518],
[391,367,458,395,449,476,0,478],
[388,370,400,422,405,372,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,449,434,452,461,452,456],
[441,0,436,454,467,464,487,460],
[441,454,0,459,457,460,481,473],
[456,436,431,0,472,458,473,447],
[438,423,433,418,0,438,452,432],
[429,426,430,432,452,0,465,441],
[438,403,409,417,438,425,0,424],
[434,430,417,443,458,449,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,454,438,457,478,421,395],
[432,0,462,418,461,468,428,449],
[436,428,0,403,438,474,461,402],
[452,472,487,0,453,478,495,415],
[433,429,452,437,0,485,461,412],
[412,422,416,412,405,0,420,369],
[469,462,429,395,429,470,0,385],
[495,441,488,475,478,521,505,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,426,449,427,429,414,428],
[421,0,475,457,424,452,451,457],
[464,415,0,450,401,418,417,432],
[441,433,440,0,431,418,403,395],
[463,466,489,459,0,473,409,434],
[461,438,472,472,417,0,430,405],
[476,439,473,487,481,460,0,452],
[462,433,458,495,456,485,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,424,439,434,439,433,437],
[450,0,427,441,425,421,421,438],
[466,463,0,450,424,445,426,434],
[451,449,440,0,441,420,416,422],
[456,465,466,449,0,451,454,430],
[451,469,445,470,439,0,421,436],
[457,469,464,474,436,469,0,459],
[453,452,456,468,460,454,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,382,421,441,395,390,400],
[416,0,351,398,482,448,379,406],
[508,539,0,535,596,417,468,494],
[469,492,355,0,444,378,379,406],
[449,408,294,446,0,462,390,378],
[495,442,473,512,428,0,409,503],
[500,511,422,511,500,481,0,468],
[490,484,396,484,512,387,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,446,485,455,448,441,442],
[416,0,455,426,422,411,445,416],
[444,435,0,443,452,432,444,458],
[405,464,447,0,464,403,467,419],
[435,468,438,426,0,431,438,462],
[442,479,458,487,459,0,480,437],
[449,445,446,423,452,410,0,453],
[448,474,432,471,428,453,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,473,455,433,488,463,462],
[445,0,455,424,430,455,451,437],
[417,435,0,402,432,451,414,422],
[435,466,488,0,463,475,437,475],
[457,460,458,427,0,468,442,453],
[402,435,439,415,422,0,413,451],
[427,439,476,453,448,477,0,434],
[428,453,468,415,437,439,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,454,459,456,457,427,486],
[392,0,415,437,448,408,426,415],
[436,475,0,459,465,437,451,444],
[431,453,431,0,424,417,418,404],
[434,442,425,466,0,430,407,446],
[433,482,453,473,460,0,450,479],
[463,464,439,472,483,440,0,443],
[404,475,446,486,444,411,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,391,391,532,439,457,484],
[429,0,383,436,500,524,425,487],
[499,507,0,391,555,595,470,575],
[499,454,499,0,531,413,353,517],
[358,390,335,359,0,486,398,485],
[451,366,295,477,404,0,404,416],
[433,465,420,537,492,486,0,544],
[406,403,315,373,405,474,346,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,475,440,476,463,445,488],
[459,0,458,460,449,465,490,434],
[415,432,0,442,469,448,434,404],
[450,430,448,0,442,472,436,418],
[414,441,421,448,0,450,420,429],
[427,425,442,418,440,0,467,399],
[445,400,456,454,470,423,0,434],
[402,456,486,472,461,491,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,439,453,430,424,463,445],
[439,0,441,435,443,426,466,452],
[451,449,0,431,452,461,461,435],
[437,455,459,0,441,444,472,465],
[460,447,438,449,0,438,457,446],
[466,464,429,446,452,0,441,444],
[427,424,429,418,433,449,0,444],
[445,438,455,425,444,446,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,471,458,446,487,415,447],
[420,0,401,422,389,450,406,378],
[419,489,0,401,428,468,437,403],
[432,468,489,0,447,480,448,459],
[444,501,462,443,0,500,474,418],
[403,440,422,410,390,0,429,411],
[475,484,453,442,416,461,0,398],
[443,512,487,431,472,479,492,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,534,466,603,514,427,533],
[422,0,465,331,469,491,401,426],
[356,425,0,446,404,446,424,474],
[424,559,444,0,587,496,548,467],
[287,421,486,303,0,519,383,445],
[376,399,444,394,371,0,472,395],
[463,489,466,342,507,418,0,489],
[357,464,416,423,445,495,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,452,475,474,473,449,474],
[457,0,440,477,453,447,461,440],
[438,450,0,452,455,449,456,459],
[415,413,438,0,423,430,430,440],
[416,437,435,467,0,450,446,452],
[417,443,441,460,440,0,436,461],
[441,429,434,460,444,454,0,459],
[416,450,431,450,438,429,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,458,461,431,477,469,451],
[421,0,428,443,421,416,433,441],
[432,462,0,465,456,454,485,488],
[429,447,425,0,463,447,466,432],
[459,469,434,427,0,420,436,459],
[413,474,436,443,470,0,434,449],
[421,457,405,424,454,456,0,434],
[439,449,402,458,431,441,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,411,453,458,430,431,436],
[455,0,410,411,423,441,468,447],
[479,480,0,428,486,447,421,457],
[437,479,462,0,481,449,380,422],
[432,467,404,409,0,409,411,408],
[460,449,443,441,481,0,439,423],
[459,422,469,510,479,451,0,457],
[454,443,433,468,482,467,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,442,486,450,455,434,465],
[434,0,456,467,429,458,443,467],
[448,434,0,478,398,445,429,428],
[404,423,412,0,429,436,434,470],
[440,461,492,461,0,460,461,450],
[435,432,445,454,430,0,422,438],
[456,447,461,456,429,468,0,414],
[425,423,462,420,440,452,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,546,476,377,479,481,446],
[411,0,548,446,477,447,483,477],
[344,342,0,314,343,344,310,378],
[414,444,576,0,375,481,414,442],
[513,413,547,515,0,550,516,514],
[411,443,546,409,340,0,448,408],
[409,407,580,476,374,442,0,440],
[444,413,512,448,376,482,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,496,401,446,460,428,408],
[457,0,447,467,443,472,417,424],
[394,443,0,405,401,437,420,384],
[489,423,485,0,505,473,449,451],
[444,447,489,385,0,488,427,400],
[430,418,453,417,402,0,422,409],
[462,473,470,441,463,468,0,418],
[482,466,506,439,490,481,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,407,465,441,456,449,445],
[471,0,465,451,428,472,404,436],
[483,425,0,400,421,422,464,424],
[425,439,490,0,405,466,411,434],
[449,462,469,485,0,432,474,419],
[434,418,468,424,458,0,449,447],
[441,486,426,479,416,441,0,422],
[445,454,466,456,471,443,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,437,456,437,454,458,461],
[426,0,410,474,410,453,425,453],
[453,480,0,457,445,446,426,451],
[434,416,433,0,428,454,424,431],
[453,480,445,462,0,479,464,474],
[436,437,444,436,411,0,412,450],
[432,465,464,466,426,478,0,468],
[429,437,439,459,416,440,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,445,437,435,415,459,420],
[434,0,439,429,455,434,441,444],
[445,451,0,417,433,420,439,414],
[453,461,473,0,472,446,485,445],
[455,435,457,418,0,410,444,443],
[475,456,470,444,480,0,457,451],
[431,449,451,405,446,433,0,443],
[470,446,476,445,447,439,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,484,436,453,440,498,468],
[447,0,437,446,471,465,456,459],
[406,453,0,426,442,431,437,472],
[454,444,464,0,454,448,481,460],
[437,419,448,436,0,457,464,471],
[450,425,459,442,433,0,481,478],
[392,434,453,409,426,409,0,443],
[422,431,418,430,419,412,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,419,449,422,395,399,435],
[490,0,467,452,446,445,466,452],
[471,423,0,419,458,437,424,438],
[441,438,471,0,416,421,423,434],
[468,444,432,474,0,449,457,444],
[495,445,453,469,441,0,461,474],
[491,424,466,467,433,429,0,457],
[455,438,452,456,446,416,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,478,467,466,441,479,489],
[436,0,482,476,465,447,445,499],
[412,408,0,443,447,413,455,441],
[423,414,447,0,430,394,437,456],
[424,425,443,460,0,396,450,447],
[449,443,477,496,494,0,466,470],
[411,445,435,453,440,424,0,462],
[401,391,449,434,443,420,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,439,439,436,439,431,427],
[451,0,434,437,456,466,469,464],
[451,456,0,455,422,416,454,454],
[451,453,435,0,468,441,445,422],
[454,434,468,422,0,445,421,457],
[451,424,474,449,445,0,448,438],
[459,421,436,445,469,442,0,454],
[463,426,436,468,433,452,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,446,472,457,442,455,439],
[441,0,446,473,452,435,451,446],
[444,444,0,463,460,449,409,437],
[418,417,427,0,410,426,419,419],
[433,438,430,480,0,429,438,462],
[448,455,441,464,461,0,433,448],
[435,439,481,471,452,457,0,461],
[451,444,453,471,428,442,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,414,465,459,438,461,451],
[418,0,478,449,464,405,477,496],
[476,412,0,456,415,432,443,471],
[425,441,434,0,448,438,419,427],
[431,426,475,442,0,406,444,452],
[452,485,458,452,484,0,443,449],
[429,413,447,471,446,447,0,419],
[439,394,419,463,438,441,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,415,391,404,401,398,432],
[464,0,395,413,451,429,415,441],
[475,495,0,444,479,470,466,490],
[499,477,446,0,474,442,465,496],
[486,439,411,416,0,407,439,446],
[489,461,420,448,483,0,437,452],
[492,475,424,425,451,453,0,470],
[458,449,400,394,444,438,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,468,464,430,475,467,448],
[438,0,423,463,439,510,470,513],
[422,467,0,442,445,499,487,467],
[426,427,448,0,405,492,427,464],
[460,451,445,485,0,482,438,457],
[415,380,391,398,408,0,406,422],
[423,420,403,463,452,484,0,450],
[442,377,423,426,433,468,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,444,433,452,434,426,453],
[427,0,440,440,449,442,439,453],
[446,450,0,431,426,452,456,444],
[457,450,459,0,449,456,434,450],
[438,441,464,441,0,466,431,454],
[456,448,438,434,424,0,427,451],
[464,451,434,456,459,463,0,445],
[437,437,446,440,436,439,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,436,449,425,430,444,436],
[455,0,455,458,460,453,438,455],
[454,435,0,440,423,441,435,436],
[441,432,450,0,424,464,439,440],
[465,430,467,466,0,441,445,469],
[460,437,449,426,449,0,439,444],
[446,452,455,451,445,451,0,459],
[454,435,454,450,421,446,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,386,471,423,448,445,411],
[448,0,479,534,441,359,431,488],
[504,411,0,485,427,408,451,399],
[419,356,405,0,330,418,462,400],
[467,449,463,560,0,443,440,461],
[442,531,482,472,447,0,441,467],
[445,459,439,428,450,449,0,418],
[479,402,491,490,429,423,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,455,463,418,441,487,465],
[424,0,455,456,411,465,419,474],
[435,435,0,446,386,443,476,447],
[427,434,444,0,415,408,454,479],
[472,479,504,475,0,437,501,477],
[449,425,447,482,453,0,460,449],
[403,471,414,436,389,430,0,436],
[425,416,443,411,413,441,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,516,523,445,482,510,511,487],
[374,0,457,403,475,453,421,456],
[367,433,0,377,469,479,423,488],
[445,487,513,0,466,462,469,525],
[408,415,421,424,0,428,398,443],
[380,437,411,428,462,0,446,455],
[379,469,467,421,492,444,0,454],
[403,434,402,365,447,435,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,371,421,326,397,371,422],
[418,0,467,446,422,445,370,468],
[519,423,0,473,450,471,373,496],
[469,444,417,0,448,417,467,491],
[564,468,440,442,0,444,520,567],
[493,445,419,473,446,0,448,446],
[519,520,517,423,370,442,0,446],
[468,422,394,399,323,444,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,458,439,447,450,461,465],
[436,0,454,443,433,441,445,450],
[432,436,0,427,445,436,462,465],
[451,447,463,0,445,425,440,456],
[443,457,445,445,0,456,460,465],
[440,449,454,465,434,0,438,460],
[429,445,428,450,430,452,0,464],
[425,440,425,434,425,430,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,450,439,458,432,448,443],
[467,0,464,447,457,479,440,464],
[440,426,0,414,446,457,433,437],
[451,443,476,0,469,475,456,453],
[432,433,444,421,0,447,444,455],
[458,411,433,415,443,0,448,462],
[442,450,457,434,446,442,0,450],
[447,426,453,437,435,428,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,445,398,442,431,454,440],
[456,0,465,441,449,445,454,464],
[445,425,0,424,451,424,440,448],
[492,449,466,0,446,449,441,458],
[448,441,439,444,0,438,431,463],
[459,445,466,441,452,0,450,460],
[436,436,450,449,459,440,0,458],
[450,426,442,432,427,430,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,458,431,425,437,463,489],
[450,0,423,449,414,426,390,503],
[432,467,0,469,479,454,455,463],
[459,441,421,0,446,429,386,459],
[465,476,411,444,0,461,465,498],
[453,464,436,461,429,0,454,504],
[427,500,435,504,425,436,0,486],
[401,387,427,431,392,386,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,410,406,400,425,473,498],
[465,0,471,384,417,416,458,459],
[480,419,0,444,454,457,522,497],
[484,506,446,0,459,436,490,481],
[490,473,436,431,0,416,512,508],
[465,474,433,454,474,0,477,494],
[417,432,368,400,378,413,0,483],
[392,431,393,409,382,396,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,432,413,401,436,447,434],
[455,0,470,417,425,449,456,449],
[458,420,0,427,432,444,452,451],
[477,473,463,0,445,473,477,474],
[489,465,458,445,0,454,482,460],
[454,441,446,417,436,0,446,443],
[443,434,438,413,408,444,0,418],
[456,441,439,416,430,447,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,472,436,461,445,465,456],
[428,0,429,441,413,471,444,428],
[418,461,0,442,450,454,445,431],
[454,449,448,0,457,471,460,444],
[429,477,440,433,0,454,450,430],
[445,419,436,419,436,0,449,411],
[425,446,445,430,440,441,0,428],
[434,462,459,446,460,479,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,454,491,425,481,449,450],
[427,0,462,423,445,461,451,459],
[436,428,0,450,442,474,431,454],
[399,467,440,0,404,472,444,434],
[465,445,448,486,0,495,450,445],
[409,429,416,418,395,0,442,404],
[441,439,459,446,440,448,0,446],
[440,431,436,456,445,486,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,433,439,438,461,444,446],
[453,0,440,465,452,492,449,497],
[457,450,0,432,468,469,458,476],
[451,425,458,0,452,455,425,459],
[452,438,422,438,0,480,427,438],
[429,398,421,435,410,0,411,440],
[446,441,432,465,463,479,0,475],
[444,393,414,431,452,450,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,444,474,427,439,424,434],
[476,0,467,460,448,446,437,468],
[446,423,0,464,425,429,432,461],
[416,430,426,0,429,449,454,442],
[463,442,465,461,0,450,446,485],
[451,444,461,441,440,0,445,458],
[466,453,458,436,444,445,0,482],
[456,422,429,448,405,432,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,442,437,445,442,443,430],
[448,0,469,457,419,462,452,443],
[448,421,0,452,461,455,440,447],
[453,433,438,0,461,443,445,438],
[445,471,429,429,0,452,449,447],
[448,428,435,447,438,0,427,428],
[447,438,450,445,441,463,0,455],
[460,447,443,452,443,462,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,397,410,440,455,456,455],
[452,0,442,421,437,473,438,457],
[493,448,0,451,423,454,457,492],
[480,469,439,0,434,454,478,476],
[450,453,467,456,0,444,476,516],
[435,417,436,436,446,0,481,440],
[434,452,433,412,414,409,0,457],
[435,433,398,414,374,450,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,465,473,441,462,448,428],
[430,0,465,432,437,445,440,426],
[425,425,0,442,414,433,413,405],
[417,458,448,0,438,442,441,434],
[449,453,476,452,0,454,442,449],
[428,445,457,448,436,0,433,436],
[442,450,477,449,448,457,0,414],
[462,464,485,456,441,454,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,430,464,445,457,445,464],
[420,0,433,445,436,432,421,455],
[460,457,0,445,457,473,435,489],
[426,445,445,0,436,425,444,470],
[445,454,433,454,0,438,451,473],
[433,458,417,465,452,0,464,480],
[445,469,455,446,439,426,0,476],
[426,435,401,420,417,410,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,389,449,413,401,442,403],
[475,0,455,479,438,434,468,438],
[501,435,0,452,459,452,458,438],
[441,411,438,0,415,446,452,398],
[477,452,431,475,0,458,463,434],
[489,456,438,444,432,0,444,453],
[448,422,432,438,427,446,0,424],
[487,452,452,492,456,437,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,447,410,434,432,461,450],
[427,0,430,434,440,449,458,446],
[443,460,0,423,433,456,453,442],
[480,456,467,0,463,464,435,450],
[456,450,457,427,0,454,445,444],
[458,441,434,426,436,0,430,452],
[429,432,437,455,445,460,0,430],
[440,444,448,440,446,438,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,432,439,422,437,465,456],
[445,0,450,438,440,479,473,446],
[458,440,0,425,470,454,486,445],
[451,452,465,0,431,474,492,467],
[468,450,420,459,0,487,463,459],
[453,411,436,416,403,0,472,441],
[425,417,404,398,427,418,0,427],
[434,444,445,423,431,449,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,451,460,443,450,456,449],
[434,0,448,458,453,433,440,451],
[439,442,0,464,450,446,440,437],
[430,432,426,0,434,432,436,440],
[447,437,440,456,0,432,416,448],
[440,457,444,458,458,0,448,448],
[434,450,450,454,474,442,0,445],
[441,439,453,450,442,442,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,470,465,487,455,425,470],
[446,0,451,485,489,443,446,462],
[420,439,0,427,439,442,434,433],
[425,405,463,0,461,437,441,461],
[403,401,451,429,0,432,418,414],
[435,447,448,453,458,0,420,459],
[465,444,456,449,472,470,0,469],
[420,428,457,429,476,431,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,436,441,441,424,458,415],
[442,0,454,426,460,441,437,436],
[454,436,0,443,443,431,445,437],
[449,464,447,0,476,461,455,441],
[449,430,447,414,0,438,454,439],
[466,449,459,429,452,0,454,453],
[432,453,445,435,436,436,0,444],
[475,454,453,449,451,437,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,433,417,407,429,443,409],
[477,0,437,424,457,473,449,451],
[457,453,0,434,444,444,446,407],
[473,466,456,0,444,475,471,459],
[483,433,446,446,0,445,462,413],
[461,417,446,415,445,0,454,426],
[447,441,444,419,428,436,0,409],
[481,439,483,431,477,464,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,425,348,420,429,459,415],
[465,0,474,406,492,451,489,471],
[465,416,0,435,466,458,479,433],
[542,484,455,0,475,475,461,444],
[470,398,424,415,0,450,465,394],
[461,439,432,415,440,0,437,396],
[431,401,411,429,425,453,0,439],
[475,419,457,446,496,494,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,426,407,434,438,460,458],
[440,0,451,441,460,466,446,455],
[464,439,0,470,454,491,453,466],
[483,449,420,0,451,467,444,429],
[456,430,436,439,0,462,453,446],
[452,424,399,423,428,0,442,436],
[430,444,437,446,437,448,0,429],
[432,435,424,461,444,454,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,433,433,401,440,440,473],
[425,0,428,415,416,431,448,468],
[457,462,0,456,453,439,471,473],
[457,475,434,0,402,424,445,448],
[489,474,437,488,0,472,492,481],
[450,459,451,466,418,0,474,482],
[450,442,419,445,398,416,0,438],
[417,422,417,442,409,408,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,508,445,473,452,466,470,442],
[382,0,430,438,416,422,408,424],
[445,460,0,438,432,416,428,418],
[417,452,452,0,427,419,482,459],
[438,474,458,463,0,429,476,431],
[424,468,474,471,461,0,468,468],
[420,482,462,408,414,422,0,425],
[448,466,472,431,459,422,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,429,460,460,431,450,449],
[431,0,403,439,424,437,433,426],
[461,487,0,476,436,434,459,443],
[430,451,414,0,442,423,423,415],
[430,466,454,448,0,460,459,443],
[459,453,456,467,430,0,460,395],
[440,457,431,467,431,430,0,429],
[441,464,447,475,447,495,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,442,461,459,440,459,432],
[432,0,434,424,448,442,440,438],
[448,456,0,443,475,438,453,447],
[429,466,447,0,461,455,435,441],
[431,442,415,429,0,445,432,413],
[450,448,452,435,445,0,446,448],
[431,450,437,455,458,444,0,430],
[458,452,443,449,477,442,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,464,432,466,456,449,459],
[487,0,466,465,486,442,435,486],
[426,424,0,417,429,441,431,471],
[458,425,473,0,457,445,425,461],
[424,404,461,433,0,401,431,426],
[434,448,449,445,489,0,463,488],
[441,455,459,465,459,427,0,480],
[431,404,419,429,464,402,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,482,446,449,460,447,424],
[431,0,455,398,465,439,447,426],
[408,435,0,415,450,430,410,425],
[444,492,475,0,477,470,466,451],
[441,425,440,413,0,442,430,443],
[430,451,460,420,448,0,441,452],
[443,443,480,424,460,449,0,428],
[466,464,465,439,447,438,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,394,363,414,420,394,390,387],
[496,0,369,395,434,454,424,421],
[527,521,0,414,433,445,471,433],
[476,495,476,0,412,418,405,443],
[470,456,457,478,0,443,460,465],
[496,436,445,472,447,0,419,467],
[500,466,419,485,430,471,0,442],
[503,469,457,447,425,423,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,667,668,445,667,444,668],
[445,0,445,446,0,445,222,223],
[223,445,0,446,445,223,0,668],
[222,444,444,0,222,444,222,222],
[445,890,445,668,0,445,445,445],
[223,445,667,446,445,0,223,445],
[446,668,890,668,445,667,0,668],
[222,667,222,668,445,445,222,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,467,437,446,469,427,460],
[451,0,459,453,443,470,426,452],
[423,431,0,426,434,435,427,436],
[453,437,464,0,461,471,443,448],
[444,447,456,429,0,451,426,435],
[421,420,455,419,439,0,416,422],
[463,464,463,447,464,474,0,445],
[430,438,454,442,455,468,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,472,443,498,438,460,452],
[417,0,450,481,463,419,462,476],
[418,440,0,461,471,450,479,430],
[447,409,429,0,446,420,431,417],
[392,427,419,444,0,428,453,417],
[452,471,440,470,462,0,439,437],
[430,428,411,459,437,451,0,438],
[438,414,460,473,473,453,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,467,486,418,423,433,405],
[439,0,435,451,435,456,427,417],
[423,455,0,461,425,401,417,414],
[404,439,429,0,428,418,395,399],
[472,455,465,462,0,422,434,429],
[467,434,489,472,468,0,423,445],
[457,463,473,495,456,467,0,438],
[485,473,476,491,461,445,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,441,428,419,420,434,432],
[485,0,464,460,445,464,462,445],
[449,426,0,437,409,428,438,436],
[462,430,453,0,434,441,448,450],
[471,445,481,456,0,447,451,445],
[470,426,462,449,443,0,452,440],
[456,428,452,442,439,438,0,435],
[458,445,454,440,445,450,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,445,456,463,446,447,480],
[446,0,427,452,440,448,435,453],
[445,463,0,465,433,457,440,469],
[434,438,425,0,432,451,452,466],
[427,450,457,458,0,442,444,491],
[444,442,433,439,448,0,446,488],
[443,455,450,438,446,444,0,479],
[410,437,421,424,399,402,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,431,415,418,439,422,415],
[475,0,425,452,481,430,455,443],
[459,465,0,463,468,455,463,440],
[475,438,427,0,456,448,481,441],
[472,409,422,434,0,451,452,460],
[451,460,435,442,439,0,452,447],
[468,435,427,409,438,438,0,427],
[475,447,450,449,430,443,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,475,447,445,427,455,442],
[451,0,448,416,436,417,437,429],
[415,442,0,429,455,425,442,422],
[443,474,461,0,454,442,455,461],
[445,454,435,436,0,446,469,447],
[463,473,465,448,444,0,479,446],
[435,453,448,435,421,411,0,450],
[448,461,468,429,443,444,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,401,452,407,416,415,414,433],
[489,0,415,413,445,433,464,448],
[438,475,0,449,459,430,414,445],
[483,477,441,0,443,429,439,476],
[474,445,431,447,0,447,428,454],
[475,457,460,461,443,0,442,468],
[476,426,476,451,462,448,0,449],
[457,442,445,414,436,422,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,428,466,481,466,465,449],
[448,0,462,490,494,471,443,452],
[462,428,0,477,483,477,460,445],
[424,400,413,0,429,429,455,448],
[409,396,407,461,0,456,400,421],
[424,419,413,461,434,0,426,428],
[425,447,430,435,490,464,0,418],
[441,438,445,442,469,462,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,462,381,465,411,384,306],
[456,0,460,372,409,374,361,391],
[428,430,0,327,360,394,365,363],
[509,518,563,0,394,465,500,393],
[425,481,530,496,0,480,483,479],
[479,516,496,425,410,0,501,443],
[506,529,525,390,407,389,0,392],
[584,499,527,497,411,447,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,448,467,426,470,448,469],
[443,0,441,420,452,453,442,459],
[442,449,0,442,461,462,460,447],
[423,470,448,0,459,449,474,439],
[464,438,429,431,0,454,454,450],
[420,437,428,441,436,0,437,429],
[442,448,430,416,436,453,0,458],
[421,431,443,451,440,461,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,439,446,442,446,430,449],
[450,0,461,456,439,439,426,447],
[451,429,0,462,442,455,438,429],
[444,434,428,0,416,436,443,414],
[448,451,448,474,0,456,442,458],
[444,451,435,454,434,0,452,439],
[460,464,452,447,448,438,0,438],
[441,443,461,476,432,451,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,451,456,464,466,446,439],
[429,0,453,440,462,450,421,445],
[439,437,0,431,439,434,416,442],
[434,450,459,0,447,460,463,448],
[426,428,451,443,0,437,450,448],
[424,440,456,430,453,0,458,444],
[444,469,474,427,440,432,0,441],
[451,445,448,442,442,446,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,532,485,489,506,443,484,509],
[358,0,362,529,503,380,461,445],
[405,528,0,528,549,525,543,489],
[401,361,362,0,380,398,415,382],
[384,387,341,510,0,361,402,549],
[447,510,365,492,529,0,466,452],
[406,429,347,475,488,424,0,552],
[381,445,401,508,341,438,338,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,417,423,414,457,454,449],
[420,0,445,403,440,423,429,439],
[473,445,0,466,469,452,462,483],
[467,487,424,0,439,439,472,470],
[476,450,421,451,0,452,467,421],
[433,467,438,451,438,0,465,449],
[436,461,428,418,423,425,0,431],
[441,451,407,420,469,441,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,509,445,506,403,439,432],
[421,0,477,491,468,403,452,462],
[381,413,0,426,478,389,422,414],
[445,399,464,0,460,406,403,436],
[384,422,412,430,0,376,422,437],
[487,487,501,484,514,0,472,441],
[451,438,468,487,468,418,0,424],
[458,428,476,454,453,449,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,436,430,385,456,436,462],
[464,0,451,449,421,506,474,450],
[454,439,0,404,432,484,463,455],
[460,441,486,0,472,512,474,514],
[505,469,458,418,0,491,451,467],
[434,384,406,378,399,0,405,430],
[454,416,427,416,439,485,0,446],
[428,440,435,376,423,460,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,399,409,410,435,455,391],
[485,0,490,434,478,500,492,482],
[491,400,0,416,462,466,434,451],
[481,456,474,0,475,495,480,445],
[480,412,428,415,0,444,459,428],
[455,390,424,395,446,0,456,439],
[435,398,456,410,431,434,0,438],
[499,408,439,445,462,451,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,439,464,456,440,423,441],
[468,0,440,422,444,448,458,461],
[451,450,0,425,474,453,448,456],
[426,468,465,0,456,442,444,464],
[434,446,416,434,0,452,434,445],
[450,442,437,448,438,0,442,436],
[467,432,442,446,456,448,0,465],
[449,429,434,426,445,454,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,447,467,460,428,458,449],
[457,0,425,465,463,449,455,456],
[443,465,0,476,469,475,472,464],
[423,425,414,0,425,416,436,409],
[430,427,421,465,0,442,452,432],
[462,441,415,474,448,0,440,472],
[432,435,418,454,438,450,0,455],
[441,434,426,481,458,418,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,427,403,418,428,402,395],
[446,0,415,410,407,383,418,398],
[463,475,0,446,464,429,429,416],
[487,480,444,0,483,429,436,458],
[472,483,426,407,0,441,451,457],
[462,507,461,461,449,0,479,434],
[488,472,461,454,439,411,0,451],
[495,492,474,432,433,456,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,391,452,440,406,425,445],
[446,0,459,491,492,430,460,453],
[499,431,0,488,474,484,452,469],
[438,399,402,0,409,413,387,449],
[450,398,416,481,0,433,416,436],
[484,460,406,477,457,0,421,448],
[465,430,438,503,474,469,0,464],
[445,437,421,441,454,442,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,414,426,442,418,475,436],
[442,0,416,419,471,424,465,418],
[476,474,0,449,443,443,474,435],
[464,471,441,0,474,447,494,449],
[448,419,447,416,0,440,481,428],
[472,466,447,443,450,0,482,456],
[415,425,416,396,409,408,0,389],
[454,472,455,441,462,434,501,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,435,431,416,475,441,471],
[456,0,450,452,449,464,442,478],
[455,440,0,434,444,468,434,470],
[459,438,456,0,444,478,436,477],
[474,441,446,446,0,470,459,469],
[415,426,422,412,420,0,419,454],
[449,448,456,454,431,471,0,467],
[419,412,420,413,421,436,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,451,431,431,430,445,423],
[462,0,436,450,439,419,467,433],
[439,454,0,440,433,451,440,424],
[459,440,450,0,426,423,439,432],
[459,451,457,464,0,455,444,436],
[460,471,439,467,435,0,461,460],
[445,423,450,451,446,429,0,436],
[467,457,466,458,454,430,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,426,415,423,429,439,402],
[435,0,427,447,422,437,450,423],
[464,463,0,435,447,450,463,445],
[475,443,455,0,410,437,437,444],
[467,468,443,480,0,439,458,422],
[461,453,440,453,451,0,477,460],
[451,440,427,453,432,413,0,433],
[488,467,445,446,468,430,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,521,442,456,460,392,427,484],
[369,0,367,355,425,312,439,384],
[448,523,0,429,512,398,456,469],
[434,535,461,0,458,459,462,420],
[430,465,378,432,0,406,471,430],
[498,578,492,431,484,0,440,470],
[463,451,434,428,419,450,0,393],
[406,506,421,470,460,420,497,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,459,445,474,440,447,458],
[473,0,439,474,492,472,428,458],
[431,451,0,502,504,435,446,444],
[445,416,388,0,470,424,438,429],
[416,398,386,420,0,395,415,413],
[450,418,455,466,495,0,459,459],
[443,462,444,452,475,431,0,449],
[432,432,446,461,477,431,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,452,453,454,458,458,477],
[446,0,440,431,422,446,438,466],
[438,450,0,451,448,458,452,457],
[437,459,439,0,433,447,440,450],
[436,468,442,457,0,469,458,479],
[432,444,432,443,421,0,432,457],
[432,452,438,450,432,458,0,464],
[413,424,433,440,411,433,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,463,441,443,442,451,463],
[423,0,431,425,418,450,441,437],
[427,459,0,471,438,420,418,447],
[449,465,419,0,453,433,442,432],
[447,472,452,437,0,444,442,450],
[448,440,470,457,446,0,424,450],
[439,449,472,448,448,466,0,450],
[427,453,443,458,440,440,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,454,501,429,420,496,488],
[393,0,389,430,357,417,414,415],
[436,501,0,464,445,463,454,472],
[389,460,426,0,372,380,410,463],
[461,533,445,518,0,477,445,499],
[470,473,427,510,413,0,446,471],
[394,476,436,480,445,444,0,461],
[402,475,418,427,391,419,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,452,425,420,457,437,456],
[432,0,452,412,443,467,461,454],
[438,438,0,423,413,439,409,424],
[465,478,467,0,449,473,436,445],
[470,447,477,441,0,453,444,461],
[433,423,451,417,437,0,413,426],
[453,429,481,454,446,477,0,422],
[434,436,466,445,429,464,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,509,492,541,471,440,456,484],
[381,0,429,398,421,409,414,372],
[398,461,0,395,415,430,425,425],
[349,492,495,0,441,425,423,399],
[419,469,475,449,0,456,454,422],
[450,481,460,465,434,0,438,518],
[434,476,465,467,436,452,0,459],
[406,518,465,491,468,372,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,396,406,457,455,472,497],
[483,0,445,441,418,447,462,448],
[494,445,0,459,423,518,484,466],
[484,449,431,0,421,443,473,496],
[433,472,467,469,0,507,454,459],
[435,443,372,447,383,0,448,413],
[418,428,406,417,436,442,0,478],
[393,442,424,394,431,477,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,475,467,434,456,447,463],
[430,0,441,447,445,453,419,463],
[415,449,0,440,435,424,439,452],
[423,443,450,0,422,435,431,427],
[456,445,455,468,0,459,443,461],
[434,437,466,455,431,0,424,459],
[443,471,451,459,447,466,0,433],
[427,427,438,463,429,431,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,405,413,429,417,437,449],
[454,0,417,432,438,464,450,420],
[485,473,0,464,467,464,455,436],
[477,458,426,0,470,443,445,444],
[461,452,423,420,0,432,440,428],
[473,426,426,447,458,0,477,451],
[453,440,435,445,450,413,0,459],
[441,470,454,446,462,439,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,441,458,422,413,439,422],
[421,0,431,465,433,417,456,423],
[449,459,0,472,424,437,471,448],
[432,425,418,0,439,449,452,417],
[468,457,466,451,0,450,475,443],
[477,473,453,441,440,0,464,425],
[451,434,419,438,415,426,0,403],
[468,467,442,473,447,465,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,430,453,422,417,422,426],
[478,0,437,476,441,460,460,430],
[460,453,0,468,441,439,436,399],
[437,414,422,0,438,459,427,402],
[468,449,449,452,0,435,433,430],
[473,430,451,431,455,0,425,447],
[468,430,454,463,457,465,0,423],
[464,460,491,488,460,443,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,431,462,458,477,470,458],
[425,0,436,432,425,434,428,441],
[459,454,0,454,448,458,468,439],
[428,458,436,0,440,442,444,423],
[432,465,442,450,0,467,419,425],
[413,456,432,448,423,0,455,428],
[420,462,422,446,471,435,0,428],
[432,449,451,467,465,462,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,452,428,439,413,447,453],
[473,0,450,431,434,446,440,433],
[438,440,0,417,425,417,438,443],
[462,459,473,0,457,439,459,446],
[451,456,465,433,0,449,444,429],
[477,444,473,451,441,0,463,457],
[443,450,452,431,446,427,0,447],
[437,457,447,444,461,433,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,433,423,439,427,433,408],
[426,0,436,404,427,436,411,436],
[457,454,0,427,454,453,436,447],
[467,486,463,0,445,468,460,433],
[451,463,436,445,0,433,442,441],
[463,454,437,422,457,0,408,456],
[457,479,454,430,448,482,0,471],
[482,454,443,457,449,434,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,431,438,475,453,459,453],
[449,0,438,432,471,459,473,492],
[459,452,0,445,484,460,468,465],
[452,458,445,0,494,478,474,469],
[415,419,406,396,0,458,426,424],
[437,431,430,412,432,0,467,456],
[431,417,422,416,464,423,0,454],
[437,398,425,421,466,434,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,463,477,418,426,416,449],
[436,0,427,470,432,414,438,431],
[427,463,0,457,464,425,423,437],
[413,420,433,0,422,420,411,415],
[472,458,426,468,0,450,461,454],
[464,476,465,470,440,0,467,462],
[474,452,467,479,429,423,0,454],
[441,459,453,475,436,428,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,403,459,436,447,396,427],
[461,0,432,439,427,456,428,433],
[487,458,0,464,459,511,435,458],
[431,451,426,0,439,448,404,442],
[454,463,431,451,0,450,415,459],
[443,434,379,442,440,0,394,394],
[494,462,455,486,475,496,0,438],
[463,457,432,448,431,496,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,431,446,433,432,443,458],
[473,0,417,435,460,491,464,464],
[459,473,0,442,498,441,479,486],
[444,455,448,0,459,455,436,502],
[457,430,392,431,0,432,416,461],
[458,399,449,435,458,0,434,488],
[447,426,411,454,474,456,0,444],
[432,426,404,388,429,402,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_8_890.csv", index=False, header=False)