
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,13,9,7,5,5,17,12],
[8,0,4,4,5,5,17,4],
[12,17,0,11,9,10,20,8],
[14,17,10,0,13,14,21,13],
[16,16,12,8,0,17,16,12],
[16,16,11,7,4,0,20,7],
[4,4,1,0,5,1,0,3],
[9,17,13,8,9,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,9,11,13,15,9],
[11,0,11,11,11,12,11,8],
[9,10,0,9,11,12,14,10],
[12,10,12,0,13,14,15,9],
[10,10,10,8,0,15,11,11],
[8,9,9,7,6,0,8,8],
[6,10,7,6,10,13,0,9],
[12,13,11,12,10,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,11,13,8,11,11],
[11,0,12,12,8,6,9,6],
[10,9,0,12,6,7,12,11],
[10,9,9,0,9,6,7,10],
[8,13,15,12,0,11,12,12],
[13,15,14,15,10,0,14,13],
[10,12,9,14,9,7,0,14],
[10,15,10,11,9,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,2,14,7,7,8,1,7],
[19,0,19,7,18,19,12,12],
[7,2,0,3,12,8,6,13],
[14,14,18,0,19,13,6,13],
[14,3,9,2,0,14,1,8],
[13,2,13,8,7,0,1,7],
[20,9,15,15,20,20,0,14],
[14,9,8,8,13,14,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,13,7,7,10,7],
[14,0,12,10,13,9,11,11],
[13,9,0,10,11,9,11,9],
[8,11,11,0,9,8,6,8],
[14,8,10,12,0,7,9,10],
[14,12,12,13,14,0,9,12],
[11,10,10,15,12,12,0,11],
[14,10,12,13,11,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,13,9,12,9,9],
[12,0,9,12,13,14,12,13],
[11,12,0,13,10,12,11,12],
[8,9,8,0,8,8,8,9],
[12,8,11,13,0,12,14,14],
[9,7,9,13,9,0,12,9],
[12,9,10,13,7,9,0,10],
[12,8,9,12,7,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,10,9,10,8,8],
[12,0,12,13,11,12,8,11],
[12,9,0,11,8,12,8,8],
[11,8,10,0,10,12,9,11],
[12,10,13,11,0,12,11,12],
[11,9,9,9,9,0,6,9],
[13,13,13,12,10,15,0,13],
[13,10,13,10,9,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,1,5,5,1,9,1],
[10,0,6,10,5,10,14,10],
[20,15,0,8,14,13,9,8],
[16,11,13,0,13,10,12,13],
[16,16,7,8,0,8,11,7],
[20,11,8,11,13,0,17,12],
[12,7,12,9,10,4,0,12],
[20,11,13,8,14,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,14,11,14,11,11],
[9,0,10,9,8,9,8,6],
[12,11,0,10,8,14,10,7],
[7,12,11,0,7,8,9,6],
[10,13,13,14,0,16,12,9],
[7,12,7,13,5,0,7,8],
[10,13,11,12,9,14,0,11],
[10,15,14,15,12,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,9,12,15,12,12],
[9,0,9,11,11,15,9,9],
[8,12,0,9,13,14,12,11],
[12,10,12,0,11,14,12,9],
[9,10,8,10,0,14,9,10],
[6,6,7,7,7,0,4,6],
[9,12,9,9,12,17,0,10],
[9,12,10,12,11,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,9,12,10,11,9],
[11,0,13,10,12,12,6,9],
[9,8,0,9,10,9,8,10],
[12,11,12,0,10,12,9,8],
[9,9,11,11,0,11,9,9],
[11,9,12,9,10,0,9,8],
[10,15,13,12,12,12,0,11],
[12,12,11,13,12,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,9,14,14,13,8,11],
[6,0,8,9,13,14,12,10],
[12,13,0,13,16,13,12,7],
[7,12,8,0,10,11,6,11],
[7,8,5,11,0,8,6,9],
[8,7,8,10,13,0,10,11],
[13,9,9,15,15,11,0,11],
[10,11,14,10,12,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,18,14,7,14,15,15],
[9,0,12,6,7,11,15,7],
[3,9,0,2,8,12,11,4],
[7,15,19,0,14,18,18,16],
[14,14,13,7,0,16,18,14],
[7,10,9,3,5,0,14,10],
[6,6,10,3,3,7,0,3],
[6,14,17,5,7,11,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,7,14,13,8,11],
[13,0,12,9,14,11,14,9],
[14,9,0,11,18,14,9,11],
[14,12,10,0,16,13,12,12],
[7,7,3,5,0,8,7,5],
[8,10,7,8,13,0,11,9],
[13,7,12,9,14,10,0,7],
[10,12,10,9,16,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,7,12,10,14,13,15],
[6,0,9,10,6,6,6,8],
[14,12,0,12,11,10,10,10],
[9,11,9,0,10,10,9,14],
[11,15,10,11,0,9,13,15],
[7,15,11,11,12,0,11,11],
[8,15,11,12,8,10,0,16],
[6,13,11,7,6,10,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,7,6,11,8,5],
[9,0,9,10,5,11,6,5],
[13,12,0,13,12,16,11,9],
[14,11,8,0,6,11,12,8],
[15,16,9,15,0,14,11,14],
[10,10,5,10,7,0,9,7],
[13,15,10,9,10,12,0,11],
[16,16,12,13,7,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,11,13,12,14,12],
[10,0,11,11,13,13,14,9],
[11,10,0,10,9,10,14,9],
[10,10,11,0,12,10,10,9],
[8,8,12,9,0,8,13,9],
[9,8,11,11,13,0,11,10],
[7,7,7,11,8,10,0,7],
[9,12,12,12,12,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,10,9,10,11,11],
[12,0,11,7,9,12,8,14],
[7,10,0,8,9,8,8,7],
[11,14,13,0,8,8,8,15],
[12,12,12,13,0,12,8,13],
[11,9,13,13,9,0,11,10],
[10,13,13,13,13,10,0,11],
[10,7,14,6,8,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,5,10,7,13,11],
[13,0,12,10,9,8,9,12],
[11,9,0,7,8,6,8,12],
[16,11,14,0,12,8,12,10],
[11,12,13,9,0,9,15,16],
[14,13,15,13,12,0,11,8],
[8,12,13,9,6,10,0,11],
[10,9,9,11,5,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,15,7,13,6,7],
[11,0,8,12,8,13,6,8],
[11,13,0,18,11,10,9,14],
[6,9,3,0,6,6,9,9],
[14,13,10,15,0,13,12,18],
[8,8,11,15,8,0,11,8],
[15,15,12,12,9,10,0,12],
[14,13,7,12,3,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,0,2,0,8,0,2],
[13,0,7,13,13,12,13,7],
[21,14,0,8,13,18,8,12],
[19,8,13,0,13,12,4,6],
[21,8,8,8,0,12,2,12],
[13,9,3,9,9,0,9,7],
[21,8,13,17,19,12,0,12],
[19,14,9,15,9,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,14,9,9,7,10,2],
[21,0,18,13,9,11,14,9],
[7,3,0,10,7,5,10,5],
[12,8,11,0,14,7,11,7],
[12,12,14,7,0,10,14,11],
[14,10,16,14,11,0,11,7],
[11,7,11,10,7,10,0,5],
[19,12,16,14,10,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,13,8,6,9,11],
[12,0,11,10,8,11,11,10],
[11,10,0,15,12,9,11,10],
[8,11,6,0,8,7,7,8],
[13,13,9,13,0,11,12,10],
[15,10,12,14,10,0,12,13],
[12,10,10,14,9,9,0,9],
[10,11,11,13,11,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,12,7,11,9,7],
[9,0,9,11,10,13,11,14],
[11,12,0,12,10,12,12,13],
[9,10,9,0,10,10,6,7],
[14,11,11,11,0,10,15,16],
[10,8,9,11,11,0,11,9],
[12,10,9,15,6,10,0,14],
[14,7,8,14,5,12,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,9,7,8,15,9],
[10,0,10,8,5,11,13,10],
[8,11,0,8,7,5,13,7],
[12,13,13,0,12,6,12,10],
[14,16,14,9,0,12,14,13],
[13,10,16,15,9,0,12,16],
[6,8,8,9,7,9,0,5],
[12,11,14,11,8,5,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,17,13,9,9,15,13],
[12,0,12,14,4,10,12,12],
[4,9,0,10,4,6,8,4],
[8,7,11,0,7,10,11,4],
[12,17,17,14,0,10,15,10],
[12,11,15,11,11,0,15,8],
[6,9,13,10,6,6,0,6],
[8,9,17,17,11,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,5,20,12,13,20],
[8,0,16,12,20,12,21,20],
[13,5,0,5,21,13,13,13],
[16,9,16,0,16,8,17,20],
[1,1,0,5,0,1,1,12],
[9,9,8,13,20,0,13,20],
[8,0,8,4,20,8,0,12],
[1,1,8,1,9,1,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,13,8,10,7,13],
[12,0,11,13,9,11,8,12],
[13,10,0,12,12,13,11,13],
[8,8,9,0,7,7,7,9],
[13,12,9,14,0,12,6,11],
[11,10,8,14,9,0,7,10],
[14,13,10,14,15,14,0,14],
[8,9,8,12,10,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,12,11,10,11,10],
[7,0,6,9,7,8,5,8],
[9,15,0,12,13,12,11,11],
[9,12,9,0,12,12,7,12],
[10,14,8,9,0,12,9,11],
[11,13,9,9,9,0,11,12],
[10,16,10,14,12,10,0,11],
[11,13,10,9,10,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,13,12,9,13,14],
[7,0,8,8,7,4,8,8],
[8,13,0,12,13,10,13,14],
[8,13,9,0,13,5,10,5],
[9,14,8,8,0,13,13,9],
[12,17,11,16,8,0,16,12],
[8,13,8,11,8,5,0,9],
[7,13,7,16,12,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,13,12,9,10,9],
[13,0,9,10,12,11,11,15],
[12,12,0,7,11,5,10,13],
[8,11,14,0,13,10,9,12],
[9,9,10,8,0,8,8,8],
[12,10,16,11,13,0,10,15],
[11,10,11,12,13,11,0,15],
[12,6,8,9,13,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,10,15,11,13,11],
[10,0,12,11,9,10,9,10],
[11,9,0,6,9,10,10,9],
[11,10,15,0,9,10,10,14],
[6,12,12,12,0,9,10,13],
[10,11,11,11,12,0,10,10],
[8,12,11,11,11,11,0,12],
[10,11,12,7,8,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,16,11,10,8,7,6],
[12,0,12,11,11,10,9,11],
[5,9,0,6,9,6,6,8],
[10,10,15,0,13,10,10,9],
[11,10,12,8,0,12,9,10],
[13,11,15,11,9,0,11,12],
[14,12,15,11,12,10,0,8],
[15,10,13,12,11,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,10,7,7,6,7,7],
[15,0,10,11,11,14,13,15],
[11,11,0,10,11,9,12,12],
[14,10,11,0,12,11,8,13],
[14,10,10,9,0,15,10,13],
[15,7,12,10,6,0,10,11],
[14,8,9,13,11,11,0,11],
[14,6,9,8,8,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,7,11,9,6,6,3],
[18,0,16,15,14,11,13,10],
[14,5,0,12,11,14,11,11],
[10,6,9,0,9,14,11,11],
[12,7,10,12,0,11,10,10],
[15,10,7,7,10,0,9,11],
[15,8,10,10,11,12,0,10],
[18,11,10,10,11,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,9,11,10,13,11],
[10,0,10,9,12,12,8,13],
[10,11,0,8,10,11,14,11],
[12,12,13,0,12,10,10,10],
[10,9,11,9,0,9,8,11],
[11,9,10,11,12,0,12,11],
[8,13,7,11,13,9,0,14],
[10,8,10,11,10,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,10,10,10,8,7],
[9,0,7,9,10,9,9,9],
[12,14,0,10,10,15,9,10],
[11,12,11,0,12,11,9,10],
[11,11,11,9,0,11,14,8],
[11,12,6,10,10,0,9,11],
[13,12,12,12,7,12,0,8],
[14,12,11,11,13,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,16,10,9,12,10],
[10,0,13,11,12,10,15,13],
[11,8,0,10,12,13,8,7],
[5,10,11,0,7,12,9,7],
[11,9,9,14,0,15,13,5],
[12,11,8,9,6,0,10,6],
[9,6,13,12,8,11,0,8],
[11,8,14,14,16,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,5,12,8,8,7],
[8,0,5,7,8,11,8,4],
[9,16,0,10,9,12,8,8],
[16,14,11,0,11,12,10,12],
[9,13,12,10,0,12,11,9],
[13,10,9,9,9,0,9,9],
[13,13,13,11,10,12,0,10],
[14,17,13,9,12,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,12,12,12,13,8],
[11,0,13,12,15,10,11,11],
[11,8,0,11,12,15,11,8],
[9,9,10,0,11,9,9,9],
[9,6,9,10,0,8,8,6],
[9,11,6,12,13,0,10,7],
[8,10,10,12,13,11,0,10],
[13,10,13,12,15,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,6,14,12,15,12],
[3,0,7,6,11,4,4,6],
[6,14,0,8,10,10,12,9],
[15,15,13,0,15,13,13,9],
[7,10,11,6,0,6,12,7],
[9,17,11,8,15,0,12,7],
[6,17,9,8,9,9,0,8],
[9,15,12,12,14,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,8,7,12,3,21],
[13,0,16,13,16,9,12,18],
[9,5,0,9,12,9,12,14],
[13,8,12,0,7,12,12,18],
[14,5,9,14,0,9,12,14],
[9,12,12,9,12,0,12,9],
[18,9,9,9,9,9,0,18],
[0,3,7,3,7,12,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,7,11,11,11,9],
[11,0,8,5,8,12,13,10],
[13,13,0,10,14,16,16,12],
[14,16,11,0,11,14,15,10],
[10,13,7,10,0,11,12,8],
[10,9,5,7,10,0,12,8],
[10,8,5,6,9,9,0,8],
[12,11,9,11,13,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,6,8,6,6,4],
[15,0,10,9,12,6,9,4],
[15,11,0,9,13,4,6,3],
[15,12,12,0,15,5,9,9],
[13,9,8,6,0,5,6,8],
[15,15,17,16,16,0,11,8],
[15,12,15,12,15,10,0,12],
[17,17,18,12,13,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,10,11,12,14,15],
[8,0,8,9,5,10,7,12],
[9,13,0,9,10,10,7,17],
[11,12,12,0,8,9,15,17],
[10,16,11,13,0,12,12,20],
[9,11,11,12,9,0,13,17],
[7,14,14,6,9,8,0,14],
[6,9,4,4,1,4,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,14,12,15,11,14],
[6,0,10,13,14,17,13,13],
[11,11,0,14,15,14,8,12],
[7,8,7,0,5,9,7,8],
[9,7,6,16,0,13,10,12],
[6,4,7,12,8,0,7,8],
[10,8,13,14,11,14,0,11],
[7,8,9,13,9,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,15,12,15,17,10],
[10,0,13,14,10,15,15,14],
[6,8,0,10,7,11,14,9],
[6,7,11,0,7,14,15,10],
[9,11,14,14,0,12,17,17],
[6,6,10,7,9,0,9,8],
[4,6,7,6,4,12,0,8],
[11,7,12,11,4,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,9,9,11,13,11],
[13,0,12,8,10,12,14,10],
[12,9,0,10,9,13,11,8],
[12,13,11,0,12,10,16,13],
[12,11,12,9,0,10,13,11],
[10,9,8,11,11,0,12,10],
[8,7,10,5,8,9,0,5],
[10,11,13,8,10,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,4,10,15,9,9],
[10,0,16,11,19,11,13,11],
[13,5,0,7,10,13,16,9],
[17,10,14,0,17,17,13,13],
[11,2,11,4,0,7,10,10],
[6,10,8,4,14,0,11,8],
[12,8,5,8,11,10,0,9],
[12,10,12,8,11,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,7,6,6,7,13],
[14,0,6,14,11,14,11,12],
[9,15,0,14,11,14,7,7],
[14,7,7,0,0,0,12,7],
[15,10,10,21,0,9,16,13],
[15,7,7,21,12,0,12,12],
[14,10,14,9,5,9,0,13],
[8,9,14,14,8,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,10,11,12,12,11],
[6,0,4,7,5,6,4,10],
[8,17,0,8,10,9,9,10],
[11,14,13,0,9,7,9,10],
[10,16,11,12,0,9,14,12],
[9,15,12,14,12,0,12,13],
[9,17,12,12,7,9,0,12],
[10,11,11,11,9,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,11,11,12,10,13],
[9,0,10,8,15,10,12,10],
[10,11,0,9,14,11,7,11],
[10,13,12,0,12,14,11,12],
[10,6,7,9,0,11,8,9],
[9,11,10,7,10,0,14,12],
[11,9,14,10,13,7,0,9],
[8,11,10,9,12,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,11,14,14,14,9],
[13,0,15,4,11,12,7,6],
[10,6,0,5,10,16,11,6],
[10,17,16,0,15,12,7,10],
[7,10,11,6,0,9,7,6],
[7,9,5,9,12,0,4,3],
[7,14,10,14,14,17,0,11],
[12,15,15,11,15,18,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,12,9,7,10,8,11],
[15,0,13,9,7,8,11,10],
[9,8,0,8,9,12,3,5],
[12,12,13,0,9,16,6,9],
[14,14,12,12,0,11,10,11],
[11,13,9,5,10,0,6,10],
[13,10,18,15,11,15,0,17],
[10,11,16,12,10,11,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,17,9,9,13,14],
[7,0,13,8,0,0,7,7],
[6,8,0,11,6,3,7,1],
[4,13,10,0,3,8,4,1],
[12,21,15,18,0,10,16,16],
[12,21,18,13,11,0,10,12],
[8,14,14,17,5,11,0,10],
[7,14,20,20,5,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,15,0,7,8,8],
[6,0,14,7,0,13,0,0],
[7,7,0,7,7,7,0,0],
[6,14,14,0,6,13,14,14],
[21,21,14,15,0,13,8,8],
[14,8,14,8,8,0,8,8],
[13,21,21,7,13,13,0,13],
[13,21,21,7,13,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,4,4,4,8,4,4],
[7,0,7,7,11,15,11,7],
[17,14,0,12,13,17,6,13],
[17,14,9,0,13,17,13,9],
[17,10,8,8,0,15,8,15],
[13,6,4,4,6,0,6,6],
[17,10,15,8,13,15,0,7],
[17,14,8,12,6,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,6,6,9,5,9,10],
[13,0,11,9,9,5,14,9],
[15,10,0,10,16,11,10,14],
[15,12,11,0,15,7,16,14],
[12,12,5,6,0,3,9,7],
[16,16,10,14,18,0,16,13],
[12,7,11,5,12,5,0,8],
[11,12,7,7,14,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,9,10,12,9,14],
[7,0,12,9,10,7,9,8],
[7,9,0,8,9,9,9,8],
[12,12,13,0,11,10,12,11],
[11,11,12,10,0,11,14,9],
[9,14,12,11,10,0,9,10],
[12,12,12,9,7,12,0,12],
[7,13,13,10,12,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,14,7,9,14,11],
[11,0,13,13,11,9,11,11],
[8,8,0,12,9,7,10,10],
[7,8,9,0,8,4,11,9],
[14,10,12,13,0,12,15,10],
[12,12,14,17,9,0,12,12],
[7,10,11,10,6,9,0,13],
[10,10,11,12,11,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,11,10,6,9,8,8],
[17,0,12,11,5,8,10,16],
[10,9,0,10,13,14,10,15],
[11,10,11,0,10,9,9,18],
[15,16,8,11,0,10,8,16],
[12,13,7,12,11,0,12,16],
[13,11,11,12,13,9,0,11],
[13,5,6,3,5,5,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,13,14,16,16,9],
[5,0,12,14,13,17,16,14],
[9,9,0,9,9,14,9,9],
[8,7,12,0,8,12,8,9],
[7,8,12,13,0,20,16,16],
[5,4,7,9,1,0,16,13],
[5,5,12,13,5,5,0,2],
[12,7,12,12,5,8,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,10,16,11,11,13],
[8,0,3,8,7,8,2,6],
[9,18,0,10,12,13,11,12],
[11,13,11,0,11,10,13,12],
[5,14,9,10,0,11,7,13],
[10,13,8,11,10,0,11,13],
[10,19,10,8,14,10,0,13],
[8,15,9,9,8,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,9,11,9,10,18],
[12,0,7,13,11,8,12,18],
[8,14,0,11,12,12,10,17],
[12,8,10,0,9,10,10,15],
[10,10,9,12,0,14,10,17],
[12,13,9,11,7,0,12,16],
[11,9,11,11,11,9,0,12],
[3,3,4,6,4,5,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,7,13,9,12,17,12],
[7,0,9,12,7,10,13,8],
[14,12,0,13,9,11,16,10],
[8,9,8,0,8,8,10,7],
[12,14,12,13,0,10,16,12],
[9,11,10,13,11,0,12,11],
[4,8,5,11,5,9,0,6],
[9,13,11,14,9,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,14,12,4,16,4],
[8,0,9,18,12,8,20,8],
[9,12,0,13,11,11,15,8],
[7,3,8,0,3,10,18,8],
[9,9,10,18,0,7,17,10],
[17,13,10,11,14,0,21,11],
[5,1,6,3,4,0,0,1],
[17,13,13,13,11,10,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,10,10,10,12,12],
[8,0,10,12,10,11,11,10],
[12,11,0,10,10,11,8,10],
[11,9,11,0,12,8,6,11],
[11,11,11,9,0,10,11,14],
[11,10,10,13,11,0,14,13],
[9,10,13,15,10,7,0,11],
[9,11,11,10,7,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,19,10,17,14,13,14],
[5,0,13,10,14,10,6,8],
[2,8,0,5,8,3,5,5],
[11,11,16,0,15,13,8,15],
[4,7,13,6,0,10,5,8],
[7,11,18,8,11,0,5,11],
[8,15,16,13,16,16,0,11],
[7,13,16,6,13,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,9,10,11,12,13],
[10,0,13,8,9,5,8,12],
[6,8,0,8,6,6,10,7],
[12,13,13,0,10,9,8,12],
[11,12,15,11,0,11,9,7],
[10,16,15,12,10,0,12,10],
[9,13,11,13,12,9,0,10],
[8,9,14,9,14,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,8,14,13,7,14,13],
[7,0,15,8,13,14,6,14],
[13,6,0,13,13,6,6,13],
[7,13,8,0,13,7,6,13],
[8,8,8,8,0,8,8,7],
[14,7,15,14,13,0,7,14],
[7,15,15,15,13,14,0,14],
[8,7,8,8,14,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,10,12,12,13,13],
[9,0,9,9,9,10,10,13],
[10,12,0,9,14,13,12,13],
[11,12,12,0,9,14,10,13],
[9,12,7,12,0,10,11,13],
[9,11,8,7,11,0,11,12],
[8,11,9,11,10,10,0,12],
[8,8,8,8,8,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,13,14,16,9,12],
[11,0,18,10,15,9,14,11],
[5,3,0,3,6,8,5,8],
[8,11,18,0,15,9,10,10],
[7,6,15,6,0,8,7,8],
[5,12,13,12,13,0,12,6],
[12,7,16,11,14,9,0,10],
[9,10,13,11,13,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,13,8,16,6,14],
[7,0,9,9,3,14,7,14],
[11,12,0,6,12,14,7,12],
[8,12,15,0,8,17,11,14],
[13,18,9,13,0,17,9,14],
[5,7,7,4,4,0,3,5],
[15,14,14,10,12,18,0,16],
[7,7,9,7,7,16,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,9,12,11,9,8],
[15,0,8,10,13,7,10,11],
[13,13,0,9,12,10,10,14],
[12,11,12,0,13,11,10,12],
[9,8,9,8,0,8,8,10],
[10,14,11,10,13,0,14,12],
[12,11,11,11,13,7,0,11],
[13,10,7,9,11,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,8,12,5,6,5,12],
[6,0,8,13,10,6,1,13],
[13,13,0,16,14,13,9,13],
[9,8,5,0,5,5,9,9],
[16,11,7,16,0,12,12,16],
[15,15,8,16,9,0,16,20],
[16,20,12,12,9,5,0,16],
[9,8,8,12,5,1,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,13,15,8,10,9],
[9,0,13,14,14,9,13,10],
[13,8,0,13,15,11,11,10],
[8,7,8,0,15,5,7,5],
[6,7,6,6,0,6,8,5],
[13,12,10,16,15,0,11,11],
[11,8,10,14,13,10,0,7],
[12,11,11,16,16,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,20,14,12,10,8],
[6,0,8,9,8,10,9,4],
[8,13,0,13,11,12,10,12],
[1,12,8,0,7,11,3,4],
[7,13,10,14,0,5,9,5],
[9,11,9,10,16,0,6,3],
[11,12,11,18,12,15,0,7],
[13,17,9,17,16,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,7,13,7,10,9],
[6,0,11,5,9,5,7,5],
[7,10,0,7,12,6,10,4],
[14,16,14,0,12,8,10,11],
[8,12,9,9,0,7,12,8],
[14,16,15,13,14,0,11,9],
[11,14,11,11,9,10,0,7],
[12,16,17,10,13,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,8,15,12,12,14],
[11,0,14,8,16,15,14,15],
[7,7,0,7,15,11,11,13],
[13,13,14,0,13,10,14,14],
[6,5,6,8,0,9,9,10],
[9,6,10,11,12,0,10,11],
[9,7,10,7,12,11,0,12],
[7,6,8,7,11,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,18,10,7,10,15],
[8,0,6,18,3,0,0,8],
[8,15,0,15,11,8,8,8],
[3,3,6,0,0,0,3,3],
[11,18,10,21,0,15,12,15],
[14,21,13,21,6,0,15,18],
[11,21,13,18,9,6,0,15],
[6,13,13,18,6,3,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,7,13,13,15,8],
[8,0,8,8,13,8,15,7],
[8,13,0,9,9,9,14,4],
[14,13,12,0,19,7,15,10],
[8,8,12,2,0,4,10,4],
[8,13,12,14,17,0,10,14],
[6,6,7,6,11,11,0,7],
[13,14,17,11,17,7,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,11,14,16,12,9],
[5,0,6,7,5,14,4,5],
[7,15,0,10,4,17,13,7],
[10,14,11,0,9,16,11,6],
[7,16,17,12,0,16,15,11],
[5,7,4,5,5,0,2,5],
[9,17,8,10,6,19,0,6],
[12,16,14,15,10,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,11,13,11,15,10,10],
[4,0,9,10,9,13,10,6],
[10,12,0,11,11,16,13,9],
[8,11,10,0,11,13,9,8],
[10,12,10,10,0,11,9,11],
[6,8,5,8,10,0,9,6],
[11,11,8,12,12,12,0,6],
[11,15,12,13,10,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,14,15,12,13,11],
[11,0,8,15,16,9,8,11],
[11,13,0,14,12,10,13,13],
[7,6,7,0,11,8,5,10],
[6,5,9,10,0,6,9,7],
[9,12,11,13,15,0,8,10],
[8,13,8,16,12,13,0,9],
[10,10,8,11,14,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,14,2,15,3,10],
[9,0,8,8,3,12,12,8],
[14,13,0,14,10,16,7,11],
[7,13,7,0,6,13,4,10],
[19,18,11,15,0,13,9,17],
[6,9,5,8,8,0,4,4],
[18,9,14,17,12,17,0,14],
[11,13,10,11,4,17,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,10,10,7,10,8],
[11,0,8,11,13,10,14,9],
[12,13,0,11,11,11,11,8],
[11,10,10,0,13,10,11,8],
[11,8,10,8,0,11,11,8],
[14,11,10,11,10,0,12,11],
[11,7,10,10,10,9,0,7],
[13,12,13,13,13,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,11,10,12,8,10],
[13,0,11,12,12,11,10,11],
[11,10,0,11,10,12,12,11],
[10,9,10,0,9,13,10,11],
[11,9,11,12,0,14,9,11],
[9,10,9,8,7,0,7,9],
[13,11,9,11,12,14,0,13],
[11,10,10,10,10,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,9,11,14,15,9],
[8,0,11,8,13,8,10,10],
[13,10,0,14,13,9,10,11],
[12,13,7,0,13,9,14,8],
[10,8,8,8,0,8,8,4],
[7,13,12,12,13,0,16,12],
[6,11,11,7,13,5,0,8],
[12,11,10,13,17,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,10,15,15,13,12],
[11,0,9,11,14,12,10,9],
[10,12,0,14,15,13,10,11],
[11,10,7,0,14,13,11,12],
[6,7,6,7,0,8,9,6],
[6,9,8,8,13,0,9,11],
[8,11,11,10,12,12,0,10],
[9,12,10,9,15,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,2,11,11,10,11,12],
[9,0,11,11,11,9,11,11],
[19,10,0,9,19,19,11,19],
[10,10,12,0,21,10,21,10],
[10,10,2,0,0,10,11,10],
[11,12,2,11,11,0,11,21],
[10,10,10,0,10,10,0,10],
[9,10,2,11,11,0,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,7,13,14,13,13],
[8,0,8,9,10,11,8,11],
[9,13,0,9,11,13,9,12],
[14,12,12,0,13,13,10,10],
[8,11,10,8,0,7,10,10],
[7,10,8,8,14,0,9,8],
[8,13,12,11,11,12,0,15],
[8,10,9,11,11,13,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,12,7,10,13,12],
[12,0,12,9,14,10,14,14],
[13,9,0,11,12,10,11,12],
[9,12,10,0,9,10,15,11],
[14,7,9,12,0,11,8,12],
[11,11,11,11,10,0,12,14],
[8,7,10,6,13,9,0,11],
[9,7,9,10,9,7,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,12,10,11,16,13],
[5,0,10,6,8,7,10,7],
[4,11,0,9,10,6,10,11],
[9,15,12,0,11,6,10,10],
[11,13,11,10,0,9,11,8],
[10,14,15,15,12,0,13,12],
[5,11,11,11,10,8,0,11],
[8,14,10,11,13,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,17,10,17,11,16],
[13,0,11,16,13,10,13,12],
[11,10,0,14,9,10,10,10],
[4,5,7,0,8,8,6,7],
[11,8,12,13,0,13,13,13],
[4,11,11,13,8,0,7,10],
[10,8,11,15,8,14,0,13],
[5,9,11,14,8,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,10,10,8,7,7],
[14,0,11,12,10,11,10,10],
[12,10,0,10,8,10,9,12],
[11,9,11,0,8,8,11,8],
[11,11,13,13,0,7,11,10],
[13,10,11,13,14,0,10,9],
[14,11,12,10,10,11,0,10],
[14,11,9,13,11,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,11,11,15,12,11],
[12,0,8,9,12,12,11,9],
[11,13,0,12,10,11,8,9],
[10,12,9,0,10,13,10,13],
[10,9,11,11,0,13,12,11],
[6,9,10,8,8,0,6,11],
[9,10,13,11,9,15,0,11],
[10,12,12,8,10,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,7,10,8,12,7,13],
[17,0,11,12,12,12,6,12],
[14,10,0,13,16,7,7,9],
[11,9,8,0,15,3,14,8],
[13,9,5,6,0,6,7,9],
[9,9,14,18,15,0,12,12],
[14,15,14,7,14,9,0,9],
[8,9,12,13,12,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,10,9,9,12,12,9],
[15,0,15,12,11,9,14,11],
[11,6,0,10,10,9,13,10],
[12,9,11,0,10,12,13,9],
[12,10,11,11,0,9,12,7],
[9,12,12,9,12,0,12,7],
[9,7,8,8,9,9,0,8],
[12,10,11,12,14,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,17,16,10,11,11],
[5,0,7,11,15,9,6,7],
[5,14,0,13,12,11,9,11],
[4,10,8,0,14,9,9,11],
[5,6,9,7,0,5,7,5],
[11,12,10,12,16,0,10,13],
[10,15,12,12,14,11,0,10],
[10,14,10,10,16,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,5,6,12,7,11],
[10,0,11,11,8,13,9,11],
[13,10,0,10,7,11,9,11],
[16,10,11,0,9,14,7,8],
[15,13,14,12,0,12,10,12],
[9,8,10,7,9,0,10,11],
[14,12,12,14,11,11,0,8],
[10,10,10,13,9,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,12,10,13,13,12],
[10,0,6,10,10,12,9,13],
[10,15,0,12,10,12,10,13],
[9,11,9,0,11,12,6,12],
[11,11,11,10,0,12,13,13],
[8,9,9,9,9,0,9,10],
[8,12,11,15,8,12,0,13],
[9,8,8,9,8,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,7,9,10,11,11],
[11,0,14,10,13,10,14,12],
[10,7,0,11,15,10,16,16],
[14,11,10,0,12,11,16,13],
[12,8,6,9,0,11,11,13],
[11,11,11,10,10,0,12,8],
[10,7,5,5,10,9,0,7],
[10,9,5,8,8,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,13,10,8,11,12],
[9,0,4,8,13,2,8,7],
[11,17,0,14,13,13,10,13],
[8,13,7,0,8,10,10,10],
[11,8,8,13,0,8,10,6],
[13,19,8,11,13,0,13,14],
[10,13,11,11,11,8,0,9],
[9,14,8,11,15,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,15,10,11,10,11],
[4,0,13,10,9,8,8,8],
[7,8,0,9,6,9,8,7],
[6,11,12,0,10,7,9,8],
[11,12,15,11,0,9,9,7],
[10,13,12,14,12,0,8,11],
[11,13,13,12,12,13,0,9],
[10,13,14,13,14,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,6,13,7,12,13,9],
[10,0,11,13,9,14,9,9],
[15,10,0,14,10,11,12,12],
[8,8,7,0,8,8,8,7],
[14,12,11,13,0,12,14,9],
[9,7,10,13,9,0,10,7],
[8,12,9,13,7,11,0,8],
[12,12,9,14,12,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,15,9,10,5,12],
[12,0,6,11,14,7,9,10],
[12,15,0,13,14,8,9,12],
[6,10,8,0,10,11,5,7],
[12,7,7,11,0,6,7,8],
[11,14,13,10,15,0,11,11],
[16,12,12,16,14,10,0,14],
[9,11,9,14,13,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,12,11,11,11,13],
[13,0,12,12,11,9,12,11],
[8,9,0,6,7,5,10,11],
[9,9,15,0,10,11,9,9],
[10,10,14,11,0,13,11,10],
[10,12,16,10,8,0,16,11],
[10,9,11,12,10,5,0,12],
[8,10,10,12,11,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,16,11,10,9,12],
[10,0,12,14,12,13,10,11],
[11,9,0,13,13,9,9,9],
[5,7,8,0,12,8,7,7],
[10,9,8,9,0,10,7,9],
[11,8,12,13,11,0,11,12],
[12,11,12,14,14,10,0,10],
[9,10,12,14,12,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,7,13,10,10,9],
[13,0,10,6,12,10,9,7],
[12,11,0,11,10,12,9,10],
[14,15,10,0,14,11,8,11],
[8,9,11,7,0,14,8,5],
[11,11,9,10,7,0,11,6],
[11,12,12,13,13,10,0,8],
[12,14,11,10,16,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,11,9,13,15,15],
[9,0,11,10,7,8,10,7],
[6,10,0,7,2,12,11,9],
[10,11,14,0,11,14,12,15],
[12,14,19,10,0,16,14,17],
[8,13,9,7,5,0,8,12],
[6,11,10,9,7,13,0,13],
[6,14,12,6,4,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,10,9,16,11,11],
[13,0,8,9,12,16,13,9],
[12,13,0,13,12,15,12,10],
[11,12,8,0,8,14,10,9],
[12,9,9,13,0,12,11,10],
[5,5,6,7,9,0,8,5],
[10,8,9,11,10,13,0,11],
[10,12,11,12,11,16,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,7,11,11,9,14],
[10,0,10,11,11,9,7,11],
[12,11,0,8,9,10,12,12],
[14,10,13,0,12,11,11,14],
[10,10,12,9,0,10,8,14],
[10,12,11,10,11,0,9,12],
[12,14,9,10,13,12,0,13],
[7,10,9,7,7,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,15,13,12,15,13],
[12,0,12,12,11,10,16,13],
[8,9,0,9,11,9,12,11],
[6,9,12,0,14,11,11,15],
[8,10,10,7,0,11,12,10],
[9,11,12,10,10,0,13,10],
[6,5,9,10,9,8,0,9],
[8,8,10,6,11,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,9,9,9,10,7],
[12,0,12,10,10,13,9,9],
[9,9,0,8,13,7,10,10],
[12,11,13,0,11,11,8,11],
[12,11,8,10,0,8,12,9],
[12,8,14,10,13,0,7,6],
[11,12,11,13,9,14,0,11],
[14,12,11,10,12,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,11,4,11,7,8,8],
[15,0,14,10,18,12,13,15],
[10,7,0,4,10,8,8,9],
[17,11,17,0,15,10,12,13],
[10,3,11,6,0,5,8,8],
[14,9,13,11,16,0,9,12],
[13,8,13,9,13,12,0,14],
[13,6,12,8,13,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,6,11,3,9,12,10],
[18,0,11,12,9,15,14,13],
[15,10,0,10,8,13,16,13],
[10,9,11,0,12,10,13,13],
[18,12,13,9,0,15,16,12],
[12,6,8,11,6,0,13,11],
[9,7,5,8,5,8,0,7],
[11,8,8,8,9,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,12,11,9,12,6],
[13,0,13,13,12,11,13,10],
[10,8,0,10,12,11,9,8],
[9,8,11,0,12,10,14,11],
[10,9,9,9,0,9,8,7],
[12,10,10,11,12,0,11,10],
[9,8,12,7,13,10,0,6],
[15,11,13,10,14,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,21,17,8,7,10,10],
[13,0,20,17,11,8,12,4],
[0,1,0,0,7,0,0,3],
[4,4,21,0,10,0,12,3],
[13,10,14,11,0,0,10,4],
[14,13,21,21,21,0,13,4],
[11,9,21,9,11,8,0,11],
[11,17,18,18,17,17,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,16,15,12,10,13],
[8,0,13,11,6,9,9,11],
[6,8,0,8,5,8,8,11],
[5,10,13,0,8,5,9,10],
[6,15,16,13,0,8,12,14],
[9,12,13,16,13,0,14,13],
[11,12,13,12,9,7,0,10],
[8,10,10,11,7,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,17,9,16,9,14,21],
[12,0,12,9,16,16,16,12],
[4,9,0,9,11,9,14,16],
[12,12,12,0,12,7,21,17],
[5,5,10,9,0,9,14,17],
[12,5,12,14,12,0,21,17],
[7,5,7,0,7,0,0,12],
[0,9,5,4,4,4,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,11,15,10,10,9],
[9,0,10,9,11,12,13,12],
[9,11,0,11,10,7,12,11],
[10,12,10,0,12,10,10,9],
[6,10,11,9,0,10,10,10],
[11,9,14,11,11,0,12,11],
[11,8,9,11,11,9,0,12],
[12,9,10,12,11,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,12,8,9,12,9],
[11,0,14,13,12,11,8,8],
[14,7,0,15,7,10,12,6],
[9,8,6,0,8,8,13,4],
[13,9,14,13,0,8,8,13],
[12,10,11,13,13,0,10,13],
[9,13,9,8,13,11,0,9],
[12,13,15,17,8,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,10,8,6,14,9],
[9,0,13,13,9,7,13,9],
[9,8,0,9,11,7,10,8],
[11,8,12,0,12,5,14,11],
[13,12,10,9,0,11,10,12],
[15,14,14,16,10,0,14,15],
[7,8,11,7,11,7,0,8],
[12,12,13,10,9,6,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,12,7,12,5,12],
[14,0,12,12,12,12,5,5],
[14,9,0,21,5,14,14,14],
[9,9,0,0,0,0,0,9],
[14,9,16,21,0,21,14,14],
[9,9,7,21,0,0,14,14],
[16,16,7,21,7,7,0,21],
[9,16,7,12,7,7,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,9,7,10,11,10],
[9,0,10,14,6,10,12,9],
[13,11,0,9,7,12,11,12],
[12,7,12,0,6,9,10,10],
[14,15,14,15,0,9,13,12],
[11,11,9,12,12,0,9,8],
[10,9,10,11,8,12,0,12],
[11,12,9,11,9,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,16,15,13,10,13],
[7,0,9,12,16,11,11,14],
[9,12,0,15,15,11,12,13],
[5,9,6,0,9,9,9,11],
[6,5,6,12,0,8,10,13],
[8,10,10,12,13,0,12,12],
[11,10,9,12,11,9,0,11],
[8,7,8,10,8,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,8,15,9,11,7],
[9,0,10,6,12,9,10,6],
[9,11,0,9,12,9,10,6],
[13,15,12,0,15,10,12,12],
[6,9,9,6,0,7,9,5],
[12,12,12,11,14,0,13,9],
[10,11,11,9,12,8,0,8],
[14,15,15,9,16,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,13,12,9,12,13,11],
[15,0,15,15,12,14,13,10],
[8,6,0,11,7,7,9,8],
[9,6,10,0,3,6,9,8],
[12,9,14,18,0,13,11,12],
[9,7,14,15,8,0,12,12],
[8,8,12,12,10,9,0,7],
[10,11,13,13,9,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,6,10,18,12,13,10],
[3,0,7,8,14,14,9,13],
[15,14,0,8,14,14,16,8],
[11,13,13,0,14,9,15,12],
[3,7,7,7,0,2,7,7],
[9,7,7,12,19,0,14,11],
[8,12,5,6,14,7,0,10],
[11,8,13,9,14,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,15,15,11,6,15],
[10,0,11,15,10,9,16,16],
[10,10,0,15,10,15,16,10],
[6,6,6,0,16,5,12,16],
[6,11,11,5,0,5,12,16],
[10,12,6,16,16,0,16,16],
[15,5,5,9,9,5,0,15],
[6,5,11,5,5,5,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,7,8,9,7,8],
[15,0,10,11,12,15,12,11],
[13,11,0,12,10,15,12,13],
[14,10,9,0,13,12,12,10],
[13,9,11,8,0,12,9,10],
[12,6,6,9,9,0,8,5],
[14,9,9,9,12,13,0,10],
[13,10,8,11,11,16,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,0,14,4,9,4,5],
[16,0,9,9,9,16,11,9],
[21,12,0,14,9,21,16,14],
[7,12,7,0,4,16,11,5],
[17,12,12,17,0,17,11,10],
[12,5,0,5,4,0,4,5],
[17,10,5,10,10,17,0,10],
[16,12,7,16,11,16,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,10,12,12,6,4,10],
[3,0,3,5,5,3,3,3],
[11,18,0,8,8,13,4,13],
[9,16,13,0,6,7,11,13],
[9,16,13,15,0,7,13,9],
[15,18,8,14,14,0,6,6],
[17,18,17,10,8,15,0,13],
[11,18,8,8,12,15,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,9,13,12,9,5],
[12,0,12,13,13,9,11,10],
[11,9,0,9,10,10,4,9],
[12,8,12,0,12,10,9,10],
[8,8,11,9,0,9,7,9],
[9,12,11,11,12,0,7,10],
[12,10,17,12,14,14,0,13],
[16,11,12,11,12,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,15,10,15,12,9],
[13,0,16,15,13,14,10,9],
[8,5,0,11,9,13,6,7],
[6,6,10,0,6,12,9,7],
[11,8,12,15,0,11,9,9],
[6,7,8,9,10,0,9,6],
[9,11,15,12,12,12,0,11],
[12,12,14,14,12,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,17,9,14,11,10],
[6,0,10,15,8,12,9,7],
[6,11,0,16,12,17,8,12],
[4,6,5,0,5,9,2,4],
[12,13,9,16,0,11,8,10],
[7,9,4,12,10,0,8,9],
[10,12,13,19,13,13,0,11],
[11,14,9,17,11,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,12,12,14,15,11],
[11,0,10,9,11,9,10,11],
[9,11,0,12,9,10,14,10],
[9,12,9,0,12,11,13,9],
[9,10,12,9,0,7,12,11],
[7,12,11,10,14,0,13,11],
[6,11,7,8,9,8,0,7],
[10,10,11,12,10,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,7,9,6,14,6,15],
[6,0,13,15,12,15,9,16],
[14,8,0,11,6,14,11,17],
[12,6,10,0,6,9,9,10],
[15,9,15,15,0,15,11,15],
[7,6,7,12,6,0,4,11],
[15,12,10,12,10,17,0,10],
[6,5,4,11,6,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,9,13,14,10,13],
[8,0,9,10,12,12,9,14],
[9,12,0,12,14,12,11,12],
[12,11,9,0,12,9,10,9],
[8,9,7,9,0,11,7,7],
[7,9,9,12,10,0,14,12],
[11,12,10,11,14,7,0,10],
[8,7,9,12,14,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,16,19,17,13,11,14],
[12,0,10,15,10,9,10,15],
[5,11,0,14,4,9,11,12],
[2,6,7,0,3,4,6,11],
[4,11,17,18,0,12,9,15],
[8,12,12,17,9,0,13,14],
[10,11,10,15,12,8,0,16],
[7,6,9,10,6,7,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,9,13,11,15,15],
[11,0,14,7,14,12,14,11],
[8,7,0,9,15,9,16,14],
[12,14,12,0,11,9,14,14],
[8,7,6,10,0,9,11,10],
[10,9,12,12,12,0,11,15],
[6,7,5,7,10,10,0,10],
[6,10,7,7,11,6,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,15,15,9,10,10,15],
[12,0,10,17,15,10,12,16],
[6,11,0,17,11,7,7,17],
[6,4,4,0,10,5,11,16],
[12,6,10,11,0,11,12,11],
[11,11,14,16,10,0,10,16],
[11,9,14,10,9,11,0,12],
[6,5,4,5,10,5,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,7,9,8,8,10,10],
[15,0,9,7,8,12,10,16],
[14,12,0,6,8,11,8,14],
[12,14,15,0,10,13,11,13],
[13,13,13,11,0,14,9,17],
[13,9,10,8,7,0,7,13],
[11,11,13,10,12,14,0,16],
[11,5,7,8,4,8,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,18,17,17,11,10,6],
[16,0,19,15,14,17,6,12],
[3,2,0,11,12,8,7,5],
[4,6,10,0,16,5,7,1],
[4,7,9,5,0,5,5,0],
[10,4,13,16,16,0,8,8],
[11,15,14,14,16,13,0,7],
[15,9,16,20,21,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,13,10,12,13,13],
[7,0,13,7,9,11,9,15],
[9,8,0,8,10,10,9,11],
[8,14,13,0,11,8,10,14],
[11,12,11,10,0,9,12,11],
[9,10,11,13,12,0,15,9],
[8,12,12,11,9,6,0,13],
[8,6,10,7,10,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,13,10,15,11,12],
[9,0,10,11,13,10,6,10],
[9,11,0,11,13,12,12,9],
[8,10,10,0,12,11,9,9],
[11,8,8,9,0,10,7,8],
[6,11,9,10,11,0,10,9],
[10,15,9,12,14,11,0,12],
[9,11,12,12,13,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,12,11,7,12,11],
[11,0,13,13,10,9,12,10],
[10,8,0,13,11,11,12,10],
[9,8,8,0,10,10,13,9],
[10,11,10,11,0,8,11,10],
[14,12,10,11,13,0,11,11],
[9,9,9,8,10,10,0,11],
[10,11,11,12,11,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,10,16,15,11,10],
[7,0,12,11,13,12,12,7],
[6,9,0,4,9,11,10,5],
[11,10,17,0,16,13,10,6],
[5,8,12,5,0,12,7,4],
[6,9,10,8,9,0,10,11],
[10,9,11,11,14,11,0,7],
[11,14,16,15,17,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,12,5,9,13,8],
[11,0,15,10,13,8,8,11],
[6,6,0,8,3,8,10,7],
[9,11,13,0,9,10,9,9],
[16,8,18,12,0,12,12,12],
[12,13,13,11,9,0,8,10],
[8,13,11,12,9,13,0,13],
[13,10,14,12,9,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,13,12,6,9,11,11],
[14,0,14,12,10,12,13,13],
[8,7,0,8,6,6,8,9],
[9,9,13,0,11,10,12,10],
[15,11,15,10,0,11,11,14],
[12,9,15,11,10,0,11,10],
[10,8,13,9,10,10,0,9],
[10,8,12,11,7,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,11,11,11,12,10],
[9,0,10,10,12,7,9,9],
[8,11,0,13,10,6,10,9],
[10,11,8,0,11,10,6,7],
[10,9,11,10,0,7,8,8],
[10,14,15,11,14,0,9,11],
[9,12,11,15,13,12,0,10],
[11,12,12,14,13,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,1,10,0,0,0],
[11,0,11,11,21,1,11,1],
[11,10,0,11,10,10,10,0],
[20,10,10,0,10,10,0,0],
[11,0,11,11,0,0,10,1],
[21,20,11,11,21,0,10,11],
[21,10,11,21,11,11,0,1],
[21,20,21,21,20,10,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,15,16,7,11,10],
[4,0,15,15,11,11,9,9],
[5,6,0,10,7,5,5,5],
[6,6,11,0,12,5,1,10],
[5,10,14,9,0,9,10,14],
[14,10,16,16,12,0,5,10],
[10,12,16,20,11,16,0,14],
[11,12,16,11,7,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,13,11,12,16,11,11],
[14,0,16,11,9,16,13,15],
[8,5,0,13,6,14,9,11],
[10,10,8,0,11,14,10,13],
[9,12,15,10,0,14,15,15],
[5,5,7,7,7,0,10,9],
[10,8,12,11,6,11,0,10],
[10,6,10,8,6,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,11,12,10,10,10],
[14,0,13,10,9,12,10,14],
[11,8,0,10,11,11,9,14],
[10,11,11,0,12,15,11,15],
[9,12,10,9,0,13,12,15],
[11,9,10,6,8,0,11,13],
[11,11,12,10,9,10,0,13],
[11,7,7,6,6,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,15,17,13,12,9],
[9,0,9,16,14,15,12,14],
[9,12,0,16,14,13,17,14],
[6,5,5,0,10,9,9,11],
[4,7,7,11,0,9,13,9],
[8,6,8,12,12,0,11,8],
[9,9,4,12,8,10,0,13],
[12,7,7,10,12,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,4,3,9,5,8,6],
[14,0,10,9,12,9,12,12],
[17,11,0,9,13,8,13,10],
[18,12,12,0,11,9,13,11],
[12,9,8,10,0,8,12,9],
[16,12,13,12,13,0,14,9],
[13,9,8,8,9,7,0,8],
[15,9,11,10,12,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,10,15,11,10,12],
[9,0,13,8,8,8,6,7],
[8,8,0,12,7,8,9,8],
[11,13,9,0,10,7,9,11],
[6,13,14,11,0,9,6,10],
[10,13,13,14,12,0,12,12],
[11,15,12,12,15,9,0,14],
[9,14,13,10,11,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,13,6,11,6,13],
[6,0,9,15,9,16,8,8],
[11,12,0,16,8,9,11,13],
[8,6,5,0,1,7,7,7],
[15,12,13,20,0,19,9,13],
[10,5,12,14,2,0,10,7],
[15,13,10,14,12,11,0,13],
[8,13,8,14,8,14,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,7,7,6,6,7],
[13,0,13,12,15,11,7,13],
[9,8,0,6,7,8,5,7],
[14,9,15,0,8,11,8,10],
[14,6,14,13,0,11,6,13],
[15,10,13,10,10,0,9,8],
[15,14,16,13,15,12,0,10],
[14,8,14,11,8,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,8,5,2,5,3,5],
[17,0,11,15,8,13,13,9],
[13,10,0,8,1,5,12,8],
[16,6,13,0,7,15,13,7],
[19,13,20,14,0,10,18,10],
[16,8,16,6,11,0,15,11],
[18,8,9,8,3,6,0,6],
[16,12,13,14,11,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,7,14,9,13,11],
[7,0,9,8,10,9,10,14],
[8,12,0,11,11,8,13,12],
[14,13,10,0,12,10,10,12],
[7,11,10,9,0,10,9,11],
[12,12,13,11,11,0,10,13],
[8,11,8,11,12,11,0,11],
[10,7,9,9,10,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,16,14,17,12,10,5],
[12,0,11,10,13,12,5,12],
[5,10,0,14,13,5,5,5],
[7,11,7,0,7,7,12,11],
[4,8,8,14,0,5,9,4],
[9,9,16,14,16,0,10,9],
[11,16,16,9,12,11,0,7],
[16,9,16,10,17,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,8,12,11,6,16],
[10,0,9,12,11,12,11,16],
[9,12,0,10,15,10,12,14],
[13,9,11,0,8,7,4,12],
[9,10,6,13,0,7,7,12],
[10,9,11,14,14,0,13,15],
[15,10,9,17,14,8,0,12],
[5,5,7,9,9,6,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,11,12,14,10,12],
[8,0,7,4,12,7,7,12],
[9,14,0,8,13,14,7,11],
[10,17,13,0,12,14,11,13],
[9,9,8,9,0,14,9,10],
[7,14,7,7,7,0,7,9],
[11,14,14,10,12,14,0,12],
[9,9,10,8,11,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,11,10,13,14,13],
[11,0,14,10,6,5,9,13],
[8,7,0,12,11,9,11,6],
[10,11,9,0,5,12,15,3],
[11,15,10,16,0,14,16,12],
[8,16,12,9,7,0,13,8],
[7,12,10,6,5,8,0,6],
[8,8,15,18,9,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,13,10,15,12,8],
[7,0,8,4,6,9,9,4],
[12,13,0,11,11,16,10,4],
[8,17,10,0,9,12,9,4],
[11,15,10,12,0,15,10,7],
[6,12,5,9,6,0,7,9],
[9,12,11,12,11,14,0,12],
[13,17,17,17,14,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,14,10,11,12,13],
[11,0,12,13,13,7,10,12],
[13,9,0,12,14,10,15,15],
[7,8,9,0,11,5,12,10],
[11,8,7,10,0,5,12,17],
[10,14,11,16,16,0,17,18],
[9,11,6,9,9,4,0,11],
[8,9,6,11,4,3,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,12,12,15,9,12],
[10,0,12,8,10,11,11,11],
[8,9,0,10,7,8,8,10],
[9,13,11,0,10,12,12,8],
[9,11,14,11,0,12,8,13],
[6,10,13,9,9,0,6,8],
[12,10,13,9,13,15,0,11],
[9,10,11,13,8,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,2,10,0,9,10],
[11,0,11,2,11,3,11,11],
[11,10,0,10,11,11,11,13],
[19,19,11,0,21,1,19,21],
[11,10,10,0,0,0,9,10],
[21,18,10,20,21,0,19,21],
[12,10,10,2,12,2,0,10],
[11,10,8,0,11,0,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,5,17,12,3,5,3],
[13,0,6,13,15,6,6,8],
[16,15,0,16,15,19,10,12],
[4,8,5,0,3,7,3,7],
[9,6,6,18,0,9,4,11],
[18,15,2,14,12,0,12,9],
[16,15,11,18,17,9,0,11],
[18,13,9,14,10,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,10,9,15,6,6],
[12,0,10,11,10,11,7,11],
[12,11,0,6,4,15,6,5],
[11,10,15,0,8,14,11,0],
[12,11,17,13,0,13,7,11],
[6,10,6,7,8,0,6,1],
[15,14,15,10,14,15,0,5],
[15,10,16,21,10,20,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,12,7,7,8,9],
[12,0,9,14,10,7,11,13],
[12,12,0,15,14,13,10,12],
[9,7,6,0,10,10,4,7],
[14,11,7,11,0,11,8,10],
[14,14,8,11,10,0,8,13],
[13,10,11,17,13,13,0,13],
[12,8,9,14,11,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,10,12,14,10,10],
[7,0,4,8,8,3,5,3],
[10,17,0,12,12,14,11,9],
[11,13,9,0,8,9,11,13],
[9,13,9,13,0,9,9,10],
[7,18,7,12,12,0,10,12],
[11,16,10,10,12,11,0,9],
[11,18,12,8,11,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,12,2,12,11,11,5],
[21,0,16,9,19,14,16,12],
[9,5,0,2,7,7,7,7],
[19,12,19,0,12,12,14,10],
[9,2,14,9,0,4,7,7],
[10,7,14,9,17,0,14,12],
[10,5,14,7,14,7,0,12],
[16,9,14,11,14,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,11,10,12,10,10],
[8,0,9,9,9,10,6,8],
[9,12,0,9,11,11,6,10],
[10,12,12,0,10,14,12,10],
[11,12,10,11,0,10,8,12],
[9,11,10,7,11,0,9,7],
[11,15,15,9,13,12,0,12],
[11,13,11,11,9,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,7,9,9,5,6],
[14,0,8,14,13,13,11,9],
[13,13,0,12,14,10,7,10],
[14,7,9,0,16,10,9,9],
[12,8,7,5,0,12,6,9],
[12,8,11,11,9,0,6,11],
[16,10,14,12,15,15,0,11],
[15,12,11,12,12,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,11,9,18,13,15],
[5,0,6,10,5,8,7,13],
[8,15,0,11,8,12,9,11],
[10,11,10,0,11,7,11,13],
[12,16,13,10,0,12,11,14],
[3,13,9,14,9,0,4,14],
[8,14,12,10,10,17,0,15],
[6,8,10,8,7,7,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,10,15,12,12,15],
[5,0,9,9,12,12,9,12],
[9,12,0,6,11,11,8,11],
[11,12,15,0,15,15,12,9],
[6,9,10,6,0,3,7,0],
[9,9,10,6,18,0,10,11],
[9,12,13,9,14,11,0,11],
[6,9,10,12,21,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,12,9,12,11,8],
[9,0,12,11,13,12,12,13],
[9,9,0,9,9,9,10,10],
[9,10,12,0,11,8,10,12],
[12,8,12,10,0,11,9,11],
[9,9,12,13,10,0,11,10],
[10,9,11,11,12,10,0,11],
[13,8,11,9,10,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,7,10,10,6,7],
[9,0,11,3,6,9,3,6],
[8,10,0,3,8,9,6,9],
[14,18,18,0,14,11,13,9],
[11,15,13,7,0,9,10,12],
[11,12,12,10,12,0,8,10],
[15,18,15,8,11,13,0,11],
[14,15,12,12,9,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,12,13,10,10,11],
[8,0,13,15,11,10,9,10],
[8,8,0,13,12,11,10,11],
[9,6,8,0,11,7,9,9],
[8,10,9,10,0,8,7,11],
[11,11,10,14,13,0,10,8],
[11,12,11,12,14,11,0,9],
[10,11,10,12,10,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,13,14,12,9,15],
[8,0,9,14,9,12,11,13],
[9,12,0,13,14,10,11,11],
[8,7,8,0,8,8,8,11],
[7,12,7,13,0,15,10,10],
[9,9,11,13,6,0,8,9],
[12,10,10,13,11,13,0,11],
[6,8,10,10,11,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,5,6,7,8,6],
[13,0,10,9,10,14,11,10],
[13,11,0,6,10,8,10,9],
[16,12,15,0,10,18,13,14],
[15,11,11,11,0,14,10,12],
[14,7,13,3,7,0,8,7],
[13,10,11,8,11,13,0,11],
[15,11,12,7,9,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,11,12,16,10,15],
[4,0,7,9,7,11,12,12],
[9,14,0,10,7,14,14,13],
[10,12,11,0,8,7,12,7],
[9,14,14,13,0,15,17,16],
[5,10,7,14,6,0,8,15],
[11,9,7,9,4,13,0,14],
[6,9,8,14,5,6,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,14,7,9,14,14],
[9,0,14,11,9,7,14,14],
[7,7,0,7,7,9,7,7],
[7,10,14,0,9,12,14,14],
[14,12,14,12,0,7,9,9],
[12,14,12,9,14,0,7,7],
[7,7,14,7,12,14,0,12],
[7,7,14,7,12,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,5,5,6,8,2,6],
[13,0,13,13,13,15,10,13],
[16,8,0,13,16,16,16,16],
[16,8,8,0,16,16,16,16],
[15,8,5,5,0,16,10,13],
[13,6,5,5,5,0,2,5],
[19,11,5,5,11,19,0,19],
[15,8,5,5,8,16,2,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,10,8,12,12,10],
[11,0,8,11,8,15,8,9],
[8,13,0,10,6,10,9,10],
[11,10,11,0,8,16,8,9],
[13,13,15,13,0,15,10,9],
[9,6,11,5,6,0,5,9],
[9,13,12,13,11,16,0,13],
[11,12,11,12,12,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,6,9,7,5,9],
[15,0,14,10,13,14,13,13],
[13,7,0,8,11,9,5,10],
[15,11,13,0,14,10,7,10],
[12,8,10,7,0,11,7,10],
[14,7,12,11,10,0,9,10],
[16,8,16,14,14,12,0,12],
[12,8,11,11,11,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,2,5,11,7,2,10,8],
[19,0,15,10,12,7,16,19],
[16,6,0,10,10,6,10,19],
[10,11,11,0,7,7,12,10],
[14,9,11,14,0,10,11,14],
[19,14,15,14,11,0,9,19],
[11,5,11,9,10,12,0,15],
[13,2,2,11,7,2,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,10,11,10,13,11],
[11,0,12,10,12,11,14,10],
[11,9,0,10,12,10,11,11],
[11,11,11,0,11,10,12,11],
[10,9,9,10,0,6,10,10],
[11,10,11,11,15,0,14,8],
[8,7,10,9,11,7,0,9],
[10,11,10,10,11,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,9,14,15,16,11],
[7,0,9,6,11,10,13,10],
[10,12,0,13,11,11,12,13],
[12,15,8,0,15,15,16,14],
[7,10,10,6,0,9,11,9],
[6,11,10,6,12,0,13,14],
[5,8,9,5,10,8,0,9],
[10,11,8,7,12,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,7,5,9,9,11],
[13,0,9,15,10,8,10,8],
[11,12,0,12,12,9,8,8],
[14,6,9,0,10,11,8,11],
[16,11,9,11,0,12,14,9],
[12,13,12,10,9,0,12,5],
[12,11,13,13,7,9,0,8],
[10,13,13,10,12,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,9,17,10,17,9],
[6,0,14,5,5,7,10,7],
[5,7,0,4,5,7,14,10],
[12,16,17,0,11,10,14,17],
[4,16,16,10,0,13,13,13],
[11,14,14,11,8,0,20,17],
[4,11,7,7,8,1,0,8],
[12,14,11,4,8,4,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,12,11,10,13,14],
[14,0,11,13,15,15,14,10],
[10,10,0,8,7,10,14,13],
[9,8,13,0,11,12,16,13],
[10,6,14,10,0,9,14,12],
[11,6,11,9,12,0,13,11],
[8,7,7,5,7,8,0,7],
[7,11,8,8,9,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,14,10,15,13,15],
[12,0,10,12,6,16,21,14],
[8,11,0,13,14,15,18,18],
[7,9,8,0,10,18,14,18],
[11,15,7,11,0,11,17,11],
[6,5,6,3,10,0,10,12],
[8,0,3,7,4,11,0,9],
[6,7,3,3,10,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,10,10,5,6,7],
[14,0,9,12,9,11,7,10],
[11,12,0,12,11,7,9,8],
[11,9,9,0,9,9,5,9],
[11,12,10,12,0,7,8,10],
[16,10,14,12,14,0,12,14],
[15,14,12,16,13,9,0,14],
[14,11,13,12,11,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,10,10,8,13,8],
[9,0,12,11,12,9,16,11],
[8,9,0,11,9,11,12,9],
[11,10,10,0,11,8,14,10],
[11,9,12,10,0,11,16,10],
[13,12,10,13,10,0,10,11],
[8,5,9,7,5,11,0,8],
[13,10,12,11,11,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,9,9,18,13,18,18],
[4,0,7,9,14,9,9,13],
[12,14,0,11,18,10,14,18],
[12,12,10,0,20,9,14,17],
[3,7,3,1,0,5,9,7],
[8,12,11,12,16,0,12,16],
[3,12,7,7,12,9,0,11],
[3,8,3,4,14,5,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,10,10,8,11,10],
[14,0,10,14,8,5,12,8],
[9,11,0,13,11,11,16,11],
[11,7,8,0,8,5,12,8],
[11,13,10,13,0,11,17,11],
[13,16,10,16,10,0,19,11],
[10,9,5,9,4,2,0,7],
[11,13,10,13,10,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,6,11,4,10,10,6],
[16,0,5,8,4,10,9,4],
[15,16,0,12,11,9,11,6],
[10,13,9,0,8,7,7,8],
[17,17,10,13,0,9,8,8],
[11,11,12,14,12,0,7,12],
[11,12,10,14,13,14,0,8],
[15,17,15,13,13,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,12,9,11,8,11],
[15,0,12,13,12,14,13,9],
[13,9,0,12,15,11,13,11],
[9,8,9,0,11,10,10,10],
[12,9,6,10,0,8,8,10],
[10,7,10,11,13,0,10,8],
[13,8,8,11,13,11,0,9],
[10,12,10,11,11,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,17,9,9,9,7],
[11,0,9,12,7,10,14,5],
[11,12,0,11,14,5,11,7],
[4,9,10,0,4,8,10,3],
[12,14,7,17,0,12,11,12],
[12,11,16,13,9,0,13,8],
[12,7,10,11,10,8,0,4],
[14,16,14,18,9,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,13,10,18,18,13],
[11,0,13,13,10,18,21,3],
[8,8,0,10,10,18,18,0],
[8,8,11,0,18,18,18,8],
[11,11,11,3,0,18,21,11],
[3,3,3,3,3,0,3,3],
[3,0,3,3,0,18,0,3],
[8,18,21,13,10,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,12,5,6,9,6],
[14,0,11,12,9,9,12,11],
[11,10,0,12,7,3,11,9],
[9,9,9,0,5,4,8,6],
[16,12,14,16,0,12,17,9],
[15,12,18,17,9,0,17,15],
[12,9,10,13,4,4,0,7],
[15,10,12,15,12,6,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,14,11,12,11,10],
[10,0,10,13,11,10,9,11],
[6,11,0,10,13,12,8,11],
[7,8,11,0,9,10,7,8],
[10,10,8,12,0,12,6,9],
[9,11,9,11,9,0,9,9],
[10,12,13,14,15,12,0,11],
[11,10,10,13,12,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,12,8,9,7,13],
[12,0,10,11,9,11,10,13],
[12,11,0,16,11,9,12,13],
[9,10,5,0,9,11,8,12],
[13,12,10,12,0,11,13,12],
[12,10,12,10,10,0,9,15],
[14,11,9,13,8,12,0,14],
[8,8,8,9,9,6,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,14,21,14,9,14,14],
[16,0,16,16,16,9,9,9],
[7,5,0,16,21,9,9,5],
[0,5,5,0,5,0,9,5],
[7,5,0,16,0,9,9,0],
[12,12,12,21,12,0,14,5],
[7,12,12,12,12,7,0,12],
[7,12,16,16,21,16,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,9,14,14,16,11],
[7,0,10,6,13,12,11,9],
[12,11,0,10,13,12,14,12],
[12,15,11,0,13,9,13,11],
[7,8,8,8,0,14,12,11],
[7,9,9,12,7,0,12,11],
[5,10,7,8,9,9,0,5],
[10,12,9,10,10,10,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,10,6,8,15,8],
[12,0,13,12,11,10,15,13],
[7,8,0,12,5,7,14,5],
[11,9,9,0,3,7,11,4],
[15,10,16,18,0,13,16,9],
[13,11,14,14,8,0,17,9],
[6,6,7,10,5,4,0,4],
[13,8,16,17,12,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,8,7,10,4,3,4],
[16,0,13,18,13,16,15,9],
[13,8,0,9,8,13,15,11],
[14,3,12,0,10,10,7,4],
[11,8,13,11,0,7,9,8],
[17,5,8,11,14,0,13,4],
[18,6,6,14,12,8,0,7],
[17,12,10,17,13,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,10,18,13,10,14],
[3,0,2,10,8,12,1,8],
[7,19,0,10,17,12,14,15],
[11,11,11,0,14,11,9,11],
[3,13,4,7,0,11,9,12],
[8,9,9,10,10,0,5,11],
[11,20,7,12,12,16,0,17],
[7,13,6,10,9,10,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,11,14,8,13,13],
[11,0,8,12,14,10,10,13],
[10,13,0,12,12,8,12,15],
[10,9,9,0,14,10,12,11],
[7,7,9,7,0,11,9,10],
[13,11,13,11,10,0,12,12],
[8,11,9,9,12,9,0,7],
[8,8,6,10,11,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,10,13,10,9,11],
[11,0,12,11,9,11,12,11],
[9,9,0,6,10,9,10,9],
[11,10,15,0,10,9,9,9],
[8,12,11,11,0,9,11,8],
[11,10,12,12,12,0,8,8],
[12,9,11,12,10,13,0,10],
[10,10,12,12,13,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,9,6,8,7,8],
[13,0,9,10,12,12,10,12],
[12,12,0,9,12,11,10,15],
[12,11,12,0,14,10,10,10],
[15,9,9,7,0,8,10,8],
[13,9,10,11,13,0,9,9],
[14,11,11,11,11,12,0,10],
[13,9,6,11,13,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,4,8,8,5,6,7],
[17,0,12,12,12,7,8,10],
[17,9,0,10,9,6,7,10],
[13,9,11,0,11,11,10,10],
[13,9,12,10,0,11,10,9],
[16,14,15,10,10,0,12,12],
[15,13,14,11,11,9,0,12],
[14,11,11,11,12,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,5,8,12,8,9,14],
[12,0,12,10,13,12,11,19],
[16,9,0,12,13,11,15,11],
[13,11,9,0,16,11,11,13],
[9,8,8,5,0,5,10,14],
[13,9,10,10,16,0,13,17],
[12,10,6,10,11,8,0,13],
[7,2,10,8,7,4,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,12,11,10,15,15],
[10,0,11,9,12,11,15,13],
[11,10,0,9,12,14,12,15],
[9,12,12,0,12,14,15,14],
[10,9,9,9,0,12,12,14],
[11,10,7,7,9,0,13,13],
[6,6,9,6,9,8,0,7],
[6,8,6,7,7,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,8,8,9,9,13],
[9,0,10,11,8,10,12,17],
[9,11,0,6,12,9,15,15],
[13,10,15,0,7,11,9,17],
[13,13,9,14,0,12,10,19],
[12,11,12,10,9,0,9,16],
[12,9,6,12,11,12,0,19],
[8,4,6,4,2,5,2,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,9,9,5,10,11],
[14,0,15,11,10,8,12,13],
[12,6,0,7,7,7,10,10],
[12,10,14,0,13,11,13,13],
[12,11,14,8,0,7,10,13],
[16,13,14,10,14,0,16,15],
[11,9,11,8,11,5,0,15],
[10,8,11,8,8,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,16,21,19,16,10],
[3,0,5,4,13,3,12,13],
[8,16,0,8,17,11,17,13],
[5,17,13,0,17,11,16,13],
[0,8,4,4,0,8,4,4],
[2,18,10,10,13,0,14,10],
[5,9,4,5,17,7,0,6],
[11,8,8,8,17,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,8,12,16,12,14],
[8,0,13,12,17,17,12,8],
[8,8,0,12,12,15,12,12],
[13,9,9,0,10,11,7,10],
[9,4,9,11,0,10,10,8],
[5,4,6,10,11,0,11,10],
[9,9,9,14,11,10,0,9],
[7,13,9,11,13,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,11,11,11,11,14,6],
[15,0,8,18,12,14,12,3],
[10,13,0,10,6,11,15,6],
[10,3,11,0,6,8,11,6],
[10,9,15,15,0,17,11,12],
[10,7,10,13,4,0,15,7],
[7,9,6,10,10,6,0,10],
[15,18,15,15,9,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,13,13,11,11,12],
[8,0,8,11,9,8,10,9],
[13,13,0,13,13,10,11,12],
[8,10,8,0,10,6,6,13],
[8,12,8,11,0,12,10,12],
[10,13,11,15,9,0,10,11],
[10,11,10,15,11,11,0,12],
[9,12,9,8,9,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,1,4,3,5,9,2,4],
[20,0,12,10,16,13,10,18],
[17,9,0,14,10,13,13,15],
[18,11,7,0,14,13,8,14],
[16,5,11,7,0,13,9,10],
[12,8,8,8,8,0,9,10],
[19,11,8,13,12,12,0,18],
[17,3,6,7,11,11,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,5,9,7,7,10,13],
[11,0,9,8,6,12,9,13],
[16,12,0,13,10,10,13,14],
[12,13,8,0,6,9,12,12],
[14,15,11,15,0,10,11,15],
[14,9,11,12,11,0,11,11],
[11,12,8,9,10,10,0,12],
[8,8,7,9,6,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,15,15,11,11,14],
[12,0,8,18,9,9,12,13],
[7,13,0,19,13,15,12,17],
[6,3,2,0,11,8,8,6],
[6,12,8,10,0,11,12,11],
[10,12,6,13,10,0,8,8],
[10,9,9,13,9,13,0,13],
[7,8,4,15,10,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,10,7,9,10,15],
[10,0,8,9,7,7,12,14],
[9,13,0,14,9,9,14,12],
[11,12,7,0,11,11,11,15],
[14,14,12,10,0,9,13,13],
[12,14,12,10,12,0,13,16],
[11,9,7,10,8,8,0,13],
[6,7,9,6,8,5,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,12,11,3,7,6],
[11,0,9,12,9,12,10,12],
[13,12,0,12,12,9,9,9],
[9,9,9,0,11,9,6,9],
[10,12,9,10,0,4,7,8],
[18,9,12,12,17,0,14,5],
[14,11,12,15,14,7,0,7],
[15,9,12,12,13,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,9,9,11,11,10],
[13,0,9,9,13,12,10,9],
[11,12,0,11,13,13,12,10],
[12,12,10,0,12,14,12,11],
[12,8,8,9,0,8,6,9],
[10,9,8,7,13,0,9,10],
[10,11,9,9,15,12,0,9],
[11,12,11,10,12,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,10,10,12,12,13],
[9,0,10,10,7,9,8,15],
[12,11,0,10,9,6,11,17],
[11,11,11,0,10,5,12,14],
[11,14,12,11,0,9,11,12],
[9,12,15,16,12,0,11,16],
[9,13,10,9,10,10,0,11],
[8,6,4,7,9,5,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,13,21,14,19,7,14],
[0,0,2,9,12,3,3,10],
[8,19,0,21,21,10,12,10],
[0,12,0,0,5,3,5,8],
[7,9,0,16,0,8,0,8],
[2,18,11,18,13,0,4,11],
[14,18,9,16,21,17,0,8],
[7,11,11,13,13,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,16,8,13,11,14],
[14,0,10,12,12,11,11,12],
[10,11,0,9,9,12,11,8],
[5,9,12,0,7,5,9,12],
[13,9,12,14,0,11,9,12],
[8,10,9,16,10,0,10,12],
[10,10,10,12,12,11,0,8],
[7,9,13,9,9,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,14,15,12,9,11],
[10,0,13,11,15,12,10,10],
[11,8,0,10,10,5,9,8],
[7,10,11,0,11,7,11,8],
[6,6,11,10,0,9,12,8],
[9,9,16,14,12,0,12,11],
[12,11,12,10,9,9,0,8],
[10,11,13,13,13,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,7,7,7,13,11,11],
[8,0,9,7,7,10,11,12],
[14,12,0,11,11,9,10,12],
[14,14,10,0,11,13,10,11],
[14,14,10,10,0,12,14,16],
[8,11,12,8,9,0,13,13],
[10,10,11,11,7,8,0,10],
[10,9,9,10,5,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,13,10,12,15,12],
[11,0,9,8,7,7,11,10],
[13,12,0,10,8,8,12,12],
[8,13,11,0,12,8,12,14],
[11,14,13,9,0,14,17,14],
[9,14,13,13,7,0,10,13],
[6,10,9,9,4,11,0,8],
[9,11,9,7,7,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,10,10,7,8,10],
[11,0,11,11,15,10,10,10],
[13,10,0,11,10,9,13,13],
[11,10,10,0,12,10,13,11],
[11,6,11,9,0,8,7,8],
[14,11,12,11,13,0,8,8],
[13,11,8,8,14,13,0,9],
[11,11,8,10,13,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,10,13,10,12,9],
[10,0,15,14,12,14,14,12],
[6,6,0,8,9,10,9,8],
[11,7,13,0,11,12,13,8],
[8,9,12,10,0,9,8,11],
[11,7,11,9,12,0,9,10],
[9,7,12,8,13,12,0,7],
[12,9,13,13,10,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,13,13,14,19,10,10],
[15,0,13,13,16,19,8,15],
[8,8,0,4,9,19,10,8],
[8,8,17,0,16,19,9,16],
[7,5,12,5,0,18,7,2],
[2,2,2,2,3,0,4,0],
[11,13,11,12,14,17,0,8],
[11,6,13,5,19,21,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,9,12,15,16,18],
[7,0,14,7,8,7,8,12],
[6,7,0,6,9,11,11,9],
[12,14,15,0,9,12,13,17],
[9,13,12,12,0,12,12,13],
[6,14,10,9,9,0,12,12],
[5,13,10,8,9,9,0,14],
[3,9,12,4,8,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,9,12,8,9,14],
[11,0,13,12,9,12,12,16],
[11,8,0,6,9,5,12,11],
[12,9,15,0,12,13,11,18],
[9,12,12,9,0,7,13,16],
[13,9,16,8,14,0,15,18],
[12,9,9,10,8,6,0,11],
[7,5,10,3,5,3,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,3,1,9,10,10],
[14,0,13,7,9,10,9,6],
[11,8,0,5,1,2,1,2],
[18,14,16,0,14,15,13,10],
[20,12,20,7,0,10,14,11],
[12,11,19,6,11,0,15,11],
[11,12,20,8,7,6,0,4],
[11,15,19,11,10,10,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,14,7,12,4,12,11],
[18,0,17,11,11,7,15,15],
[7,4,0,3,7,3,8,7],
[14,10,18,0,9,11,10,12],
[9,10,14,12,0,3,14,13],
[17,14,18,10,18,0,18,18],
[9,6,13,11,7,3,0,8],
[10,6,14,9,8,3,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,6,12,9,13,10],
[11,0,10,11,13,14,9,13],
[13,11,0,9,15,17,13,9],
[15,10,12,0,13,15,16,10],
[9,8,6,8,0,10,9,3],
[12,7,4,6,11,0,8,7],
[8,12,8,5,12,13,0,7],
[11,8,12,11,18,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,12,13,10,15,12],
[12,0,14,11,8,11,11,12],
[9,7,0,13,11,11,9,8],
[9,10,8,0,9,11,10,11],
[8,13,10,12,0,12,13,11],
[11,10,10,10,9,0,11,9],
[6,10,12,11,8,10,0,11],
[9,9,13,10,10,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,10,11,7,8,9],
[13,0,8,12,14,10,12,11],
[10,13,0,13,13,12,10,12],
[11,9,8,0,12,11,13,10],
[10,7,8,9,0,4,7,8],
[14,11,9,10,17,0,13,11],
[13,9,11,8,14,8,0,11],
[12,10,9,11,13,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,8,9,8,10,12],
[10,0,11,9,9,9,7,12],
[9,10,0,9,10,8,11,10],
[13,12,12,0,10,12,7,10],
[12,12,11,11,0,11,11,8],
[13,12,13,9,10,0,11,10],
[11,14,10,14,10,10,0,14],
[9,9,11,11,13,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,10,7,11,11,11,13],
[3,0,11,5,10,10,12,7],
[11,10,0,9,11,12,9,12],
[14,16,12,0,11,11,10,14],
[10,11,10,10,0,9,14,11],
[10,11,9,10,12,0,8,11],
[10,9,12,11,7,13,0,9],
[8,14,9,7,10,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,11,11,10,10,10],
[10,0,12,9,12,11,9,14],
[12,9,0,9,10,11,8,11],
[10,12,12,0,11,9,8,10],
[10,9,11,10,0,13,11,13],
[11,10,10,12,8,0,9,12],
[11,12,13,13,10,12,0,12],
[11,7,10,11,8,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,11,13,12,14,10],
[10,0,12,9,9,8,9,7],
[6,9,0,8,10,8,8,7],
[10,12,13,0,13,11,13,9],
[8,12,11,8,0,11,13,12],
[9,13,13,10,10,0,12,11],
[7,12,13,8,8,9,0,6],
[11,14,14,12,9,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,8,8,11,11,8],
[13,0,12,12,13,14,11,10],
[10,9,0,12,9,11,11,11],
[13,9,9,0,9,12,13,8],
[13,8,12,12,0,11,12,11],
[10,7,10,9,10,0,8,9],
[10,10,10,8,9,13,0,11],
[13,11,10,13,10,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,6,12,12,21,12],
[15,0,12,6,12,21,21,12],
[15,9,0,14,20,15,20,20],
[15,15,7,0,12,16,21,21],
[9,9,1,9,0,15,20,20],
[9,0,6,5,6,0,20,5],
[0,0,1,0,1,1,0,0],
[9,9,1,0,1,16,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,12,7,9,10,7],
[9,0,10,12,13,11,12,13],
[13,11,0,17,10,7,11,12],
[9,9,4,0,4,4,6,6],
[14,8,11,17,0,12,10,10],
[12,10,14,17,9,0,17,10],
[11,9,10,15,11,4,0,9],
[14,8,9,15,11,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,2,12,2,12,12,0],
[10,0,2,10,0,10,10,0],
[19,19,0,19,19,10,19,19],
[9,11,2,0,0,0,0,0],
[19,21,2,21,0,12,21,19],
[9,11,11,21,9,0,11,9],
[9,11,2,21,0,10,0,0],
[21,21,2,21,2,12,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,10,11,13,13,11],
[11,0,9,11,10,10,13,12],
[10,12,0,12,13,11,13,12],
[11,10,9,0,13,12,11,11],
[10,11,8,8,0,8,11,10],
[8,11,10,9,13,0,11,12],
[8,8,8,10,10,10,0,8],
[10,9,9,10,11,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,14,10,15,10,11],
[11,0,11,13,12,15,9,11],
[10,10,0,9,13,12,8,14],
[7,8,12,0,10,11,12,14],
[11,9,8,11,0,10,9,12],
[6,6,9,10,11,0,4,12],
[11,12,13,9,12,17,0,16],
[10,10,7,7,9,9,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,15,13,13,11,9],
[6,0,12,10,12,8,12,12],
[7,9,0,8,17,11,12,12],
[6,11,13,0,13,12,14,9],
[8,9,4,8,0,10,10,9],
[8,13,10,9,11,0,9,8],
[10,9,9,7,11,12,0,7],
[12,9,9,12,12,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,10,10,9,4,9,12],
[17,0,18,17,9,13,17,17],
[11,3,0,9,12,3,3,12],
[11,4,12,0,3,4,3,3],
[12,12,9,18,0,12,9,12],
[17,8,18,17,9,0,17,17],
[12,4,18,18,12,4,0,21],
[9,4,9,18,9,4,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,10,14,9,7,9],
[9,0,9,13,16,13,14,11],
[12,12,0,15,12,7,13,6],
[11,8,6,0,10,9,8,10],
[7,5,9,11,0,9,8,8],
[12,8,14,12,12,0,10,12],
[14,7,8,13,13,11,0,5],
[12,10,15,11,13,9,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,10,12,11,13,11],
[11,0,10,9,12,12,10,11],
[12,11,0,12,10,9,12,8],
[11,12,9,0,13,11,11,10],
[9,9,11,8,0,7,10,8],
[10,9,12,10,14,0,10,11],
[8,11,9,10,11,11,0,9],
[10,10,13,11,13,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,10,11,10,12,13],
[7,0,9,10,9,10,9,12],
[9,12,0,9,11,12,12,8],
[11,11,12,0,10,8,13,12],
[10,12,10,11,0,11,15,11],
[11,11,9,13,10,0,15,12],
[9,12,9,8,6,6,0,9],
[8,9,13,9,10,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,9,9,6,8,8],
[14,0,14,12,14,11,10,9],
[11,7,0,9,9,5,6,8],
[12,9,12,0,12,9,11,11],
[12,7,12,9,0,7,9,12],
[15,10,16,12,14,0,13,13],
[13,11,15,10,12,8,0,11],
[13,12,13,10,9,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,11,9,7,11,10],
[13,0,14,10,11,12,9,15],
[10,7,0,10,13,8,12,9],
[10,11,11,0,11,9,10,9],
[12,10,8,10,0,11,10,11],
[14,9,13,12,10,0,7,11],
[10,12,9,11,11,14,0,10],
[11,6,12,12,10,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,11,11,11,11,13],
[13,0,11,10,8,12,11,10],
[12,10,0,12,11,13,10,14],
[10,11,9,0,14,12,8,10],
[10,13,10,7,0,14,12,14],
[10,9,8,9,7,0,12,11],
[10,10,11,13,9,9,0,10],
[8,11,7,11,7,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,11,7,14,4,14],
[10,0,21,21,17,14,14,14],
[10,0,0,10,17,14,10,14],
[10,0,11,0,17,14,10,14],
[14,4,4,4,0,14,4,14],
[7,7,7,7,7,0,7,17],
[17,7,11,11,17,14,0,14],
[7,7,7,7,7,4,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,11,15,13,9,9],
[12,0,12,8,12,14,11,10],
[8,9,0,7,12,8,6,11],
[10,13,14,0,13,14,10,11],
[6,9,9,8,0,10,5,7],
[8,7,13,7,11,0,8,10],
[12,10,15,11,16,13,0,12],
[12,11,10,10,14,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,2,12,5,6,14,8,11],
[19,0,14,9,8,18,14,16],
[9,7,0,5,1,13,10,11],
[16,12,16,0,13,15,8,14],
[15,13,20,8,0,18,16,17],
[7,3,8,6,3,0,5,6],
[13,7,11,13,5,16,0,11],
[10,5,10,7,4,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,6,14,11,8,14,8],
[11,0,7,6,7,7,10,8],
[15,14,0,16,10,10,14,13],
[7,15,5,0,6,4,10,11],
[10,14,11,15,0,7,11,11],
[13,14,11,17,14,0,13,10],
[7,11,7,11,10,8,0,9],
[13,13,8,10,10,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,12,8,13,4,9],
[12,0,12,12,8,4,12,4],
[8,9,0,12,8,4,12,0],
[9,9,9,0,17,13,9,9],
[13,13,13,4,0,13,4,13],
[8,17,17,8,8,0,8,9],
[17,9,9,12,17,13,0,9],
[12,17,21,12,8,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,9,13,14,15,15,17],
[5,0,8,6,8,8,8,11],
[12,13,0,12,15,14,10,16],
[8,15,9,0,12,14,10,12],
[7,13,6,9,0,10,8,10],
[6,13,7,7,11,0,11,11],
[6,13,11,11,13,10,0,11],
[4,10,5,9,11,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,11,11,14,11,10],
[10,0,10,9,3,10,8,7],
[8,11,0,6,8,12,4,3],
[10,12,15,0,8,12,13,11],
[10,18,13,13,0,14,13,15],
[7,11,9,9,7,0,7,6],
[10,13,17,8,8,14,0,5],
[11,14,18,10,6,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,18,9,20,12,9,20],
[11,0,18,18,19,12,10,11],
[3,3,0,3,19,11,12,2],
[12,3,18,0,20,12,11,11],
[1,2,2,1,0,13,10,3],
[9,9,10,9,8,0,1,10],
[12,11,9,10,11,20,0,11],
[1,10,19,10,18,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,11,19,10,19,19],
[7,0,6,5,15,7,15,13],
[3,15,0,13,17,8,17,8],
[10,16,8,0,15,11,15,16],
[2,6,4,6,0,8,8,3],
[11,14,13,10,13,0,14,12],
[2,6,4,6,13,7,0,6],
[2,8,13,5,18,9,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,9,9,6,16,0],
[13,0,5,3,3,3,13,10],
[10,16,0,16,19,16,10,10],
[12,18,5,0,11,12,12,12],
[12,18,2,10,0,10,10,10],
[15,18,5,9,11,0,15,12],
[5,8,11,9,11,6,0,2],
[21,11,11,9,11,9,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,0,14,7,6,15],
[14,0,0,8,14,6,6,21],
[14,21,0,14,14,6,6,21],
[21,13,7,0,14,13,6,21],
[7,7,7,7,0,7,13,7],
[14,15,15,8,14,0,14,15],
[15,15,15,15,8,7,0,15],
[6,0,0,0,14,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,10,12,10,9,12],
[14,0,14,11,14,13,10,16],
[12,7,0,12,12,7,10,11],
[11,10,9,0,12,10,9,13],
[9,7,9,9,0,6,8,8],
[11,8,14,11,15,0,12,14],
[12,11,11,12,13,9,0,12],
[9,5,10,8,13,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,8,8,19,10,12],
[11,0,9,9,17,11,5,11],
[11,12,0,9,17,14,14,14],
[13,12,12,0,19,16,10,16],
[13,4,4,2,0,11,7,4],
[2,10,7,5,10,0,10,7],
[11,16,7,11,14,11,0,11],
[9,10,7,5,17,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,13,9,13,12,11],
[9,0,11,11,9,13,10,10],
[5,10,0,8,11,11,12,8],
[8,10,13,0,9,11,13,9],
[12,12,10,12,0,11,9,10],
[8,8,10,10,10,0,10,10],
[9,11,9,8,12,11,0,12],
[10,11,13,12,11,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,7,9,10,12,13],
[10,0,10,9,12,10,14,9],
[11,11,0,11,9,7,14,9],
[14,12,10,0,15,11,13,11],
[12,9,12,6,0,10,12,10],
[11,11,14,10,11,0,13,10],
[9,7,7,8,9,8,0,8],
[8,12,12,10,11,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,7,14,8,11,9,13],
[5,0,5,14,13,13,13,16],
[14,16,0,18,8,15,10,15],
[7,7,3,0,7,14,4,14],
[13,8,13,14,0,13,13,16],
[10,8,6,7,8,0,8,14],
[12,8,11,17,8,13,0,10],
[8,5,6,7,5,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,15,11,12,11,7],
[10,0,14,14,7,12,9,11],
[7,7,0,10,7,8,7,4],
[6,7,11,0,8,9,10,6],
[10,14,14,13,0,13,10,10],
[9,9,13,12,8,0,9,10],
[10,12,14,11,11,12,0,10],
[14,10,17,15,11,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,11,9,11,14,14],
[10,0,7,6,10,8,10,9],
[12,14,0,13,14,11,10,13],
[10,15,8,0,11,11,11,13],
[12,11,7,10,0,9,10,14],
[10,13,10,10,12,0,11,11],
[7,11,11,10,11,10,0,12],
[7,12,8,8,7,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,5,11,8,9,9,7],
[15,0,9,11,11,14,17,10],
[16,12,0,12,11,11,15,8],
[10,10,9,0,8,10,10,8],
[13,10,10,13,0,13,12,12],
[12,7,10,11,8,0,12,6],
[12,4,6,11,9,9,0,10],
[14,11,13,13,9,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,16,21,16,15,10],
[11,0,16,16,11,6,5,6],
[5,5,0,15,5,5,5,5],
[5,5,6,0,11,6,5,0],
[0,10,16,10,0,6,10,10],
[5,15,16,15,15,0,15,15],
[6,16,16,16,11,6,0,16],
[11,15,16,21,11,6,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,10,9,6,16,13],
[14,0,9,14,7,9,11,11],
[9,12,0,7,2,9,10,6],
[11,7,14,0,6,9,14,12],
[12,14,19,15,0,14,17,9],
[15,12,12,12,7,0,14,16],
[5,10,11,7,4,7,0,8],
[8,10,15,9,12,5,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,12,10,14,17,12],
[11,0,14,13,14,13,17,10],
[10,7,0,11,12,11,13,10],
[9,8,10,0,12,12,14,10],
[11,7,9,9,0,10,14,9],
[7,8,10,9,11,0,15,10],
[4,4,8,7,7,6,0,4],
[9,11,11,11,12,11,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,7,16,6,6,14],
[14,0,14,9,15,15,11,17],
[10,7,0,12,14,14,11,12],
[14,12,9,0,14,9,7,16],
[5,6,7,7,0,4,6,12],
[15,6,7,12,17,0,6,13],
[15,10,10,14,15,15,0,16],
[7,4,9,5,9,8,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,7,4,2,8,6,10],
[15,0,9,11,7,12,9,14],
[14,12,0,5,14,11,15,14],
[17,10,16,0,10,14,17,12],
[19,14,7,11,0,12,16,14],
[13,9,10,7,9,0,7,14],
[15,12,6,4,5,14,0,10],
[11,7,7,9,7,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,8,12,15,14,11],
[11,0,8,12,13,12,14,12],
[10,13,0,10,11,11,14,13],
[13,9,11,0,14,14,14,11],
[9,8,10,7,0,10,10,12],
[6,9,10,7,11,0,12,11],
[7,7,7,7,11,9,0,11],
[10,9,8,10,9,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,14,15,16,14,8,14],
[13,0,11,16,13,13,10,12],
[7,10,0,15,12,10,12,11],
[6,5,6,0,10,12,5,7],
[5,8,9,11,0,14,6,10],
[7,8,11,9,7,0,7,10],
[13,11,9,16,15,14,0,11],
[7,9,10,14,11,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,14,9,10,14,9],
[10,0,11,10,10,10,10,8],
[12,10,0,13,10,10,11,10],
[7,11,8,0,11,10,6,9],
[12,11,11,10,0,11,10,12],
[11,11,11,11,10,0,9,10],
[7,11,10,15,11,12,0,11],
[12,13,11,12,9,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,11,15,10,15,13],
[6,0,13,9,9,8,11,8],
[6,8,0,7,5,7,11,4],
[10,12,14,0,10,13,13,10],
[6,12,16,11,0,10,11,10],
[11,13,14,8,11,0,16,11],
[6,10,10,8,10,5,0,4],
[8,13,17,11,11,10,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,14,14,11,16,12],
[11,0,9,14,13,10,13,12],
[11,12,0,14,14,7,14,13],
[7,7,7,0,10,7,9,9],
[7,8,7,11,0,7,9,8],
[10,11,14,14,14,0,13,12],
[5,8,7,12,12,8,0,8],
[9,9,8,12,13,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,9,11,8,9,11,8],
[15,0,11,12,11,10,14,14],
[12,10,0,12,7,8,15,12],
[10,9,9,0,5,5,12,10],
[13,10,14,16,0,11,14,11],
[12,11,13,16,10,0,12,9],
[10,7,6,9,7,9,0,6],
[13,7,9,11,10,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,12,10,11,11,16],
[5,0,2,6,11,2,3,10],
[11,19,0,9,12,12,12,12],
[9,15,12,0,12,11,8,11],
[11,10,9,9,0,7,10,15],
[10,19,9,10,14,0,16,16],
[10,18,9,13,11,5,0,16],
[5,11,9,10,6,5,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,13,9,5,15,10],
[10,0,8,15,9,5,13,11],
[10,13,0,15,10,9,15,9],
[8,6,6,0,9,3,10,4],
[12,12,11,12,0,7,12,9],
[16,16,12,18,14,0,15,10],
[6,8,6,11,9,6,0,10],
[11,10,12,17,12,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,0,3,0,4,0,0],
[21,0,12,12,12,4,9,8],
[21,9,0,12,5,4,9,9],
[18,9,9,0,9,13,18,9],
[21,9,16,12,0,13,18,9],
[17,17,17,8,8,0,8,17],
[21,12,12,3,3,13,0,12],
[21,13,12,12,12,4,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,10,11,10,14,11],
[9,0,12,9,15,10,11,13],
[9,9,0,11,14,12,11,11],
[11,12,10,0,14,13,14,12],
[10,6,7,7,0,9,8,8],
[11,11,9,8,12,0,11,12],
[7,10,10,7,13,10,0,11],
[10,8,10,9,13,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,11,13,13,9,10],
[5,0,7,5,6,8,7,10],
[8,14,0,7,14,7,10,9],
[10,16,14,0,13,12,14,14],
[8,15,7,8,0,9,10,8],
[8,13,14,9,12,0,12,10],
[12,14,11,7,11,9,0,12],
[11,11,12,7,13,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,11,12,9,9,7],
[8,0,9,7,10,14,6,8],
[8,12,0,8,9,10,8,8],
[10,14,13,0,10,14,10,10],
[9,11,12,11,0,11,11,9],
[12,7,11,7,10,0,10,8],
[12,15,13,11,10,11,0,12],
[14,13,13,11,12,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,13,12,8,9,11],
[5,0,12,7,12,8,6,6],
[7,9,0,9,9,12,12,10],
[8,14,12,0,11,10,10,9],
[9,9,12,10,0,9,8,7],
[13,13,9,11,12,0,10,9],
[12,15,9,11,13,11,0,9],
[10,15,11,12,14,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,10,11,8,11,14],
[8,0,12,10,8,9,12,9],
[9,9,0,6,9,9,12,10],
[11,11,15,0,12,13,13,10],
[10,13,12,9,0,11,11,9],
[13,12,12,8,10,0,10,9],
[10,9,9,8,10,11,0,8],
[7,12,11,11,12,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,10,12,10,11,12],
[13,0,15,9,10,13,15,11],
[13,6,0,13,10,13,10,10],
[11,12,8,0,12,14,10,12],
[9,11,11,9,0,9,10,9],
[11,8,8,7,12,0,11,6],
[10,6,11,11,11,10,0,10],
[9,10,11,9,12,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,9,11,12,12,9],
[6,0,12,10,6,7,11,10],
[10,9,0,10,4,7,14,7],
[12,11,11,0,8,8,17,8],
[10,15,17,13,0,13,17,11],
[9,14,14,13,8,0,14,5],
[9,10,7,4,4,7,0,4],
[12,11,14,13,10,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,6,18,16,10,12,12],
[5,0,5,11,13,7,9,7],
[15,16,0,15,15,10,14,9],
[3,10,6,0,17,6,8,7],
[5,8,6,4,0,4,5,5],
[11,14,11,15,17,0,10,13],
[9,12,7,13,16,11,0,6],
[9,14,12,14,16,8,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,16,12,17,9,18],
[6,0,9,9,11,13,6,14],
[7,12,0,11,11,11,11,15],
[5,12,10,0,10,14,8,14],
[9,10,10,11,0,10,13,15],
[4,8,10,7,11,0,6,10],
[12,15,10,13,8,15,0,18],
[3,7,6,7,6,11,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,10,12,15,12,13],
[9,0,13,10,8,10,11,11],
[8,8,0,6,7,10,9,7],
[11,11,15,0,11,10,13,10],
[9,13,14,10,0,12,13,12],
[6,11,11,11,9,0,12,10],
[9,10,12,8,8,9,0,11],
[8,10,14,11,9,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,10,10,11,11,10],
[11,0,9,11,13,10,11,10],
[14,12,0,11,12,10,11,12],
[11,10,10,0,13,11,9,11],
[11,8,9,8,0,11,10,9],
[10,11,11,10,10,0,8,10],
[10,10,10,12,11,13,0,11],
[11,11,9,10,12,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,18,12,11,14,9,12],
[12,0,16,14,9,13,15,13],
[3,5,0,6,3,6,5,7],
[9,7,15,0,10,9,8,10],
[10,12,18,11,0,12,9,12],
[7,8,15,12,9,0,11,12],
[12,6,16,13,12,10,0,14],
[9,8,14,11,9,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,11,10,10,10,20],
[8,0,9,13,7,6,5,14],
[10,12,0,10,5,9,10,18],
[10,8,11,0,11,9,6,17],
[11,14,16,10,0,8,12,18],
[11,15,12,12,13,0,10,15],
[11,16,11,15,9,11,0,20],
[1,7,3,4,3,6,1,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,10,10,10,7,11],
[12,0,8,15,12,15,10,10],
[14,13,0,15,13,12,8,14],
[11,6,6,0,7,8,8,5],
[11,9,8,14,0,15,12,13],
[11,6,9,13,6,0,5,9],
[14,11,13,13,9,16,0,14],
[10,11,7,16,8,12,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,13,5,7,12,9],
[7,0,12,8,4,7,12,4],
[3,9,0,4,0,7,12,7],
[8,13,17,0,7,13,13,12],
[16,17,21,14,0,10,15,12],
[14,14,14,8,11,0,10,9],
[9,9,9,8,6,11,0,11],
[12,17,14,9,9,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,10,9,4,10,10],
[11,0,13,8,9,9,9,15],
[6,8,0,9,4,5,6,6],
[11,13,12,0,12,11,10,12],
[12,12,17,9,0,12,10,15],
[17,12,16,10,9,0,12,13],
[11,12,15,11,11,9,0,13],
[11,6,15,9,6,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,17,9,13,8,4],
[8,0,4,13,4,8,4,4],
[12,17,0,17,17,17,8,12],
[4,8,4,0,4,8,4,4],
[12,17,4,17,0,17,8,8],
[8,13,4,13,4,0,4,12],
[13,17,13,17,13,17,0,8],
[17,17,9,17,13,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,13,10,8,9,9,7],
[16,0,16,12,15,15,9,5],
[8,5,0,8,8,6,8,3],
[11,9,13,0,13,13,8,6],
[13,6,13,8,0,11,9,7],
[12,6,15,8,10,0,12,8],
[12,12,13,13,12,9,0,11],
[14,16,18,15,14,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,12,15,11,11,10],
[11,0,14,11,16,9,11,11],
[8,7,0,10,10,9,9,11],
[9,10,11,0,14,7,9,8],
[6,5,11,7,0,4,7,3],
[10,12,12,14,17,0,12,9],
[10,10,12,12,14,9,0,8],
[11,10,10,13,18,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,14,13,7,13,11],
[11,0,14,14,13,10,16,10],
[10,7,0,10,10,8,13,10],
[7,7,11,0,9,9,13,9],
[8,8,11,12,0,10,16,10],
[14,11,13,12,11,0,11,9],
[8,5,8,8,5,10,0,6],
[10,11,11,12,11,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,8,13,17,7,13],
[10,0,9,5,7,8,6,10],
[5,12,0,7,13,13,9,14],
[13,16,14,0,12,14,9,16],
[8,14,8,9,0,9,11,18],
[4,13,8,7,12,0,7,12],
[14,15,12,12,10,14,0,13],
[8,11,7,5,3,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,10,13,11,13,14],
[9,0,9,8,7,9,9,10],
[9,12,0,9,11,9,11,11],
[11,13,12,0,10,10,11,11],
[8,14,10,11,0,14,11,11],
[10,12,12,11,7,0,9,10],
[8,12,10,10,10,12,0,13],
[7,11,10,10,10,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,15,12,9,9,18,16],
[12,0,14,8,15,6,18,16],
[6,7,0,5,7,0,18,16],
[9,13,16,0,10,13,15,16],
[12,6,14,11,0,6,18,16],
[12,15,21,8,15,0,18,19],
[3,3,3,6,3,3,0,3],
[5,5,5,5,5,2,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,12,12,9,9,14],
[11,0,7,5,14,9,14,17],
[10,14,0,11,13,9,13,15],
[9,16,10,0,14,15,13,13],
[9,7,8,7,0,7,4,11],
[12,12,12,6,14,0,13,13],
[12,7,8,8,17,8,0,17],
[7,4,6,8,10,8,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,6,10,6,9,10],
[14,0,14,10,14,19,14,14],
[10,7,0,5,9,9,4,9],
[15,11,16,0,10,15,20,10],
[11,7,12,11,0,12,11,11],
[15,2,12,6,9,0,14,14],
[12,7,17,1,10,7,0,10],
[11,7,12,11,10,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,16,7,13,11,8,8],
[12,0,10,7,8,10,9,8],
[5,11,0,5,7,7,6,6],
[14,14,16,0,12,12,10,11],
[8,13,14,9,0,9,5,7],
[10,11,14,9,12,0,11,8],
[13,12,15,11,16,10,0,9],
[13,13,15,10,14,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,11,14,11,6,12,5],
[16,0,16,14,11,12,16,9],
[10,5,0,13,8,7,10,4],
[7,7,8,0,6,7,9,7],
[10,10,13,15,0,11,12,11],
[15,9,14,14,10,0,15,11],
[9,5,11,12,9,6,0,10],
[16,12,17,14,10,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,11,10,9,9,13],
[8,0,6,5,6,5,4,8],
[10,15,0,11,6,9,8,10],
[10,16,10,0,12,13,9,15],
[11,15,15,9,0,13,10,12],
[12,16,12,8,8,0,12,9],
[12,17,13,12,11,9,0,15],
[8,13,11,6,9,12,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,13,12,13,8,17],
[7,0,6,6,14,8,5,15],
[9,15,0,16,13,10,12,16],
[8,15,5,0,10,9,8,18],
[9,7,8,11,0,12,7,12],
[8,13,11,12,9,0,9,12],
[13,16,9,13,14,12,0,19],
[4,6,5,3,9,9,2,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,10,13,3,10,6,10],
[15,0,10,10,18,10,15,10],
[11,11,0,11,14,8,11,18],
[8,11,10,0,11,18,11,18],
[18,3,7,10,0,7,10,10],
[11,11,13,3,14,0,11,10],
[15,6,10,10,11,10,0,10],
[11,11,3,3,11,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,6,9,11,10,15],
[13,0,9,7,5,17,10,15],
[8,12,0,12,13,17,10,16],
[15,14,9,0,9,19,14,15],
[12,16,8,12,0,17,6,10],
[10,4,4,2,4,0,6,10],
[11,11,11,7,15,15,0,17],
[6,6,5,6,11,11,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,3,8,12,8,8],
[11,0,15,10,13,18,15,13],
[8,6,0,11,11,9,15,1],
[18,11,10,0,9,13,10,10],
[13,8,10,12,0,13,10,10],
[9,3,12,8,8,0,13,7],
[13,6,6,11,11,8,0,3],
[13,8,20,11,11,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,9,15,14,10,14],
[11,0,13,10,11,13,13,13],
[6,8,0,7,9,9,6,7],
[12,11,14,0,15,11,10,12],
[6,10,12,6,0,10,9,7],
[7,8,12,10,11,0,10,10],
[11,8,15,11,12,11,0,8],
[7,8,14,9,14,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,11,14,10,12,14],
[8,0,10,11,10,12,10,13],
[9,11,0,12,12,12,12,13],
[10,10,9,0,9,9,10,12],
[7,11,9,12,0,10,13,15],
[11,9,9,12,11,0,11,14],
[9,11,9,11,8,10,0,14],
[7,8,8,9,6,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,13,12,11,12,12],
[11,0,12,13,12,9,11,10],
[9,9,0,12,11,10,9,11],
[8,8,9,0,12,8,7,8],
[9,9,10,9,0,6,9,8],
[10,12,11,13,15,0,15,10],
[9,10,12,14,12,6,0,9],
[9,11,10,13,13,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,7,10,11,15,13],
[9,0,8,10,10,13,10,8],
[11,13,0,12,8,13,14,10],
[14,11,9,0,9,13,12,12],
[11,11,13,12,0,10,9,9],
[10,8,8,8,11,0,11,9],
[6,11,7,9,12,10,0,11],
[8,13,11,9,12,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,16,15,13,8,5],
[9,0,9,14,14,9,6,8],
[12,12,0,14,15,10,11,12],
[5,7,7,0,10,10,8,5],
[6,7,6,11,0,9,8,5],
[8,12,11,11,12,0,8,10],
[13,15,10,13,13,13,0,11],
[16,13,9,16,16,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,11,9,12,10,11],
[9,0,7,9,12,10,12,7],
[10,14,0,8,12,13,12,9],
[10,12,13,0,9,10,11,12],
[12,9,9,12,0,12,11,10],
[9,11,8,11,9,0,8,8],
[11,9,9,10,10,13,0,8],
[10,14,12,9,11,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,10,11,13,7,13],
[9,0,9,10,7,13,7,6],
[10,12,0,13,8,13,11,9],
[11,11,8,0,8,13,8,8],
[10,14,13,13,0,13,11,10],
[8,8,8,8,8,0,7,11],
[14,14,10,13,10,14,0,14],
[8,15,12,13,11,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,18,15,11,10,14],
[7,0,10,16,18,13,11,11],
[6,11,0,16,12,13,7,11],
[3,5,5,0,12,9,3,7],
[6,3,9,9,0,4,2,2],
[10,8,8,12,17,0,10,14],
[11,10,14,18,19,11,0,17],
[7,10,10,14,19,7,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,14,9,12,16,15],
[8,0,12,8,7,11,14,7],
[10,9,0,8,9,10,12,11],
[7,13,13,0,13,11,19,11],
[12,14,12,8,0,11,15,13],
[9,10,11,10,10,0,12,10],
[5,7,9,2,6,9,0,8],
[6,14,10,10,8,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,9,8,7,8,6],
[12,0,11,11,8,11,10,6],
[11,10,0,10,10,8,8,8],
[12,10,11,0,10,12,9,10],
[13,13,11,11,0,11,8,9],
[14,10,13,9,10,0,12,9],
[13,11,13,12,13,9,0,12],
[15,15,13,11,12,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,3,9,14,8,3,5],
[14,0,15,12,20,9,13,13],
[18,6,0,12,18,8,15,8],
[12,9,9,0,11,13,11,7],
[7,1,3,10,0,4,3,4],
[13,12,13,8,17,0,16,12],
[18,8,6,10,18,5,0,6],
[16,8,13,14,17,9,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,11,9,12,8,13],
[8,0,11,8,6,7,6,8],
[10,10,0,12,9,9,10,9],
[10,13,9,0,7,7,7,9],
[12,15,12,14,0,9,10,12],
[9,14,12,14,12,0,11,13],
[13,15,11,14,11,10,0,10],
[8,13,12,12,9,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,8,10,8,13,7],
[11,0,8,12,11,11,7,10],
[11,13,0,12,11,11,8,13],
[13,9,9,0,11,9,10,11],
[11,10,10,10,0,10,9,14],
[13,10,10,12,11,0,14,10],
[8,14,13,11,12,7,0,10],
[14,11,8,10,7,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,19,19,14,14,16,19],
[15,0,16,21,9,14,15,21],
[2,5,0,17,10,14,10,18],
[2,0,4,0,1,9,5,18],
[7,12,11,20,0,21,12,20],
[7,7,7,12,0,0,7,15],
[5,6,11,16,9,14,0,16],
[2,0,3,3,1,6,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,14,15,11,14,13],
[7,0,4,10,14,9,11,15],
[12,17,0,13,15,10,10,13],
[7,11,8,0,10,12,9,14],
[6,7,6,11,0,11,10,15],
[10,12,11,9,10,0,9,11],
[7,10,11,12,11,12,0,12],
[8,6,8,7,6,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,10,13,12,15,12],
[10,0,16,15,11,11,17,17],
[9,5,0,11,6,11,14,12],
[11,6,10,0,9,10,13,12],
[8,10,15,12,0,11,12,12],
[9,10,10,11,10,0,14,12],
[6,4,7,8,9,7,0,10],
[9,4,9,9,9,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,8,13,8,13,11],
[13,0,10,10,12,10,11,10],
[9,11,0,9,10,8,11,13],
[13,11,12,0,13,11,8,15],
[8,9,11,8,0,5,6,8],
[13,11,13,10,16,0,13,12],
[8,10,10,13,15,8,0,15],
[10,11,8,6,13,9,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,11,7,11,7,12],
[12,0,11,9,11,9,11,9],
[11,10,0,15,10,12,10,10],
[10,12,6,0,5,7,7,9],
[14,10,11,16,0,10,9,12],
[10,12,9,14,11,0,9,11],
[14,10,11,14,12,12,0,13],
[9,12,11,12,9,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,17,9,15,14,11],
[7,0,8,9,8,11,11,8],
[7,13,0,12,11,11,11,8],
[4,12,9,0,7,10,9,10],
[12,13,10,14,0,14,12,13],
[6,10,10,11,7,0,10,9],
[7,10,10,12,9,11,0,9],
[10,13,13,11,8,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,10,15,10,12,12],
[8,0,9,9,12,10,8,10],
[7,12,0,7,12,7,8,7],
[11,12,14,0,14,12,13,10],
[6,9,9,7,0,10,7,9],
[11,11,14,9,11,0,9,13],
[9,13,13,8,14,12,0,10],
[9,11,14,11,12,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,10,11,12,10,17],
[8,0,15,13,14,14,10,20],
[5,6,0,3,9,8,1,14],
[11,8,18,0,10,10,12,18],
[10,7,12,11,0,10,8,17],
[9,7,13,11,11,0,11,15],
[11,11,20,9,13,10,0,19],
[4,1,7,3,4,6,2,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,7,9,9,5,9],
[13,0,12,9,9,8,13,16],
[14,9,0,6,10,6,6,13],
[14,12,15,0,8,12,11,15],
[12,12,11,13,0,9,10,17],
[12,13,15,9,12,0,12,15],
[16,8,15,10,11,9,0,15],
[12,5,8,6,4,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,12,10,7,8,6],
[13,0,9,18,11,5,8,11],
[11,12,0,16,15,10,6,7],
[9,3,5,0,8,4,7,4],
[11,10,6,13,0,5,6,9],
[14,16,11,17,16,0,10,12],
[13,13,15,14,15,11,0,10],
[15,10,14,17,12,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,7,12,17,12,14],
[7,0,8,14,13,7,14,13],
[10,13,0,6,13,11,11,13],
[14,7,15,0,12,12,15,17],
[9,8,8,9,0,6,10,15],
[4,14,10,9,15,0,9,9],
[9,7,10,6,11,12,0,13],
[7,8,8,4,6,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,12,10,8,12,15],
[10,0,11,12,11,12,11,12],
[9,10,0,11,10,10,13,16],
[9,9,10,0,8,9,12,10],
[11,10,11,13,0,9,12,14],
[13,9,11,12,12,0,10,14],
[9,10,8,9,9,11,0,15],
[6,9,5,11,7,7,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,7,9,8,13,9],
[7,0,9,9,9,12,7,7],
[11,12,0,9,13,14,13,12],
[14,12,12,0,13,10,15,8],
[12,12,8,8,0,10,18,11],
[13,9,7,11,11,0,13,6],
[8,14,8,6,3,8,0,6],
[12,14,9,13,10,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,10,6,13,6,9],
[11,0,17,13,14,16,6,6],
[10,4,0,9,7,13,5,5],
[11,8,12,0,12,14,7,12],
[15,7,14,9,0,13,13,13],
[8,5,8,7,8,0,3,3],
[15,15,16,14,8,18,0,10],
[12,15,16,9,8,18,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,14,14,16,16,8],
[4,0,14,8,12,15,6,9],
[7,7,0,9,12,12,6,12],
[7,13,12,0,12,14,12,8],
[7,9,9,9,0,17,10,9],
[5,6,9,7,4,0,9,9],
[5,15,15,9,11,12,0,12],
[13,12,9,13,12,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,5,2,5,5,3,11],
[10,0,5,3,5,12,3,2],
[16,16,0,16,12,21,12,9],
[19,18,5,0,5,12,3,11],
[16,16,9,16,0,12,7,9],
[16,9,0,9,9,0,9,9],
[18,18,9,18,14,12,0,11],
[10,19,12,10,12,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,12,11,15,15,17],
[7,0,7,9,9,9,10,12],
[12,14,0,11,9,9,15,15],
[9,12,10,0,11,8,9,12],
[10,12,12,10,0,9,9,12],
[6,12,12,13,12,0,12,15],
[6,11,6,12,12,9,0,12],
[4,9,6,9,9,6,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,12,10,10,11,15],
[4,0,12,4,8,7,7,9],
[8,9,0,6,6,10,6,10],
[9,17,15,0,15,13,12,13],
[11,13,15,6,0,10,10,13],
[11,14,11,8,11,0,7,13],
[10,14,15,9,11,14,0,14],
[6,12,11,8,8,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,10,11,9,8,9],
[9,0,8,8,11,8,9,11],
[14,13,0,14,13,10,13,12],
[11,13,7,0,11,10,11,9],
[10,10,8,10,0,11,8,11],
[12,13,11,11,10,0,12,14],
[13,12,8,10,13,9,0,9],
[12,10,9,12,10,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,5,17,5,12,16,9],
[1,0,2,8,6,6,10,6],
[16,19,0,17,9,9,20,16],
[4,13,4,0,4,11,10,8],
[16,15,12,17,0,9,12,12],
[9,15,12,10,12,0,15,13],
[5,11,1,11,9,6,0,10],
[12,15,5,13,9,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,11,10,12,13,9],
[8,0,10,14,7,12,13,8],
[9,11,0,13,11,12,14,9],
[10,7,8,0,7,10,13,7],
[11,14,10,14,0,11,14,12],
[9,9,9,11,10,0,11,8],
[8,8,7,8,7,10,0,4],
[12,13,12,14,9,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,10,10,9,12,8],
[10,0,9,8,8,11,11,7],
[13,12,0,13,11,10,12,12],
[11,13,8,0,10,11,14,10],
[11,13,10,11,0,11,11,12],
[12,10,11,10,10,0,12,11],
[9,10,9,7,10,9,0,8],
[13,14,9,11,9,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,11,10,10,13,12],
[11,0,12,13,7,12,13,8],
[11,9,0,11,7,11,11,9],
[10,8,10,0,10,11,12,10],
[11,14,14,11,0,11,14,10],
[11,9,10,10,10,0,12,9],
[8,8,10,9,7,9,0,7],
[9,13,12,11,11,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,19,8,9,10,7,11],
[12,0,12,8,8,4,5,10],
[2,9,0,6,5,3,6,7],
[13,13,15,0,11,10,15,15],
[12,13,16,10,0,13,10,12],
[11,17,18,11,8,0,11,15],
[14,16,15,6,11,10,0,11],
[10,11,14,6,9,6,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,16,15,15,13,16],
[11,0,13,10,13,13,7,13],
[5,8,0,8,11,7,7,8],
[5,11,13,0,11,13,11,9],
[6,8,10,10,0,10,7,12],
[6,8,14,8,11,0,8,10],
[8,14,14,10,14,13,0,11],
[5,8,13,12,9,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,9,10,8,12,13],
[12,0,12,13,14,11,10,13],
[12,9,0,13,14,13,9,11],
[12,8,8,0,9,6,9,13],
[11,7,7,12,0,13,7,8],
[13,10,8,15,8,0,8,11],
[9,11,12,12,14,13,0,11],
[8,8,10,8,13,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,7,8,13,11,9],
[13,0,10,9,11,13,10,11],
[14,11,0,13,7,15,9,13],
[14,12,8,0,11,13,9,12],
[13,10,14,10,0,15,14,14],
[8,8,6,8,6,0,8,13],
[10,11,12,12,7,13,0,13],
[12,10,8,9,7,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,12,14,16,9,21],
[5,0,16,12,5,21,14,21],
[5,5,0,12,5,21,5,12],
[9,9,9,0,9,16,9,16],
[7,16,16,12,0,16,9,21],
[5,0,0,5,5,0,0,5],
[12,7,16,12,12,21,0,12],
[0,0,9,5,0,16,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,12,11,15,9,10],
[9,0,2,9,6,11,5,9],
[9,19,0,13,11,15,10,12],
[9,12,8,0,4,8,5,12],
[10,15,10,17,0,13,11,13],
[6,10,6,13,8,0,7,9],
[12,16,11,16,10,14,0,15],
[11,12,9,9,8,12,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,10,9,7,13,9,6],
[15,0,12,7,9,11,10,12],
[11,9,0,9,7,10,8,8],
[12,14,12,0,10,15,12,14],
[14,12,14,11,0,12,14,7],
[8,10,11,6,9,0,6,6],
[12,11,13,9,7,15,0,8],
[15,9,13,7,14,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,12,13,11,12,14],
[10,0,11,14,16,12,13,15],
[12,10,0,12,13,13,12,14],
[9,7,9,0,12,11,5,12],
[8,5,8,9,0,11,7,12],
[10,9,8,10,10,0,8,11],
[9,8,9,16,14,13,0,13],
[7,6,7,9,9,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,11,11,13,11,8],
[8,0,7,8,5,10,7,6],
[12,14,0,10,9,13,9,6],
[10,13,11,0,10,12,10,12],
[10,16,12,11,0,16,10,14],
[8,11,8,9,5,0,8,9],
[10,14,12,11,11,13,0,8],
[13,15,15,9,7,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,12,16,16,13,13],
[7,0,9,6,16,10,13,13],
[12,12,0,11,14,12,10,12],
[9,15,10,0,16,15,10,13],
[5,5,7,5,0,12,13,9],
[5,11,9,6,9,0,9,6],
[8,8,11,11,8,12,0,12],
[8,8,9,8,12,15,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,12,10,12,11,10],
[9,0,12,11,11,10,12,12],
[11,9,0,13,10,10,12,10],
[9,10,8,0,9,6,9,10],
[11,10,11,12,0,10,13,13],
[9,11,11,15,11,0,9,12],
[10,9,9,12,8,12,0,12],
[11,9,11,11,8,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,3,7,7,10,5,4],
[17,0,11,9,12,20,11,10],
[18,10,0,14,14,17,8,11],
[14,12,7,0,7,11,9,8],
[14,9,7,14,0,11,11,9],
[11,1,4,10,10,0,2,4],
[16,10,13,12,10,19,0,11],
[17,11,10,13,12,17,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,16,10,8,14,8],
[11,0,10,13,12,11,14,12],
[12,11,0,14,13,8,14,12],
[5,8,7,0,7,6,8,5],
[11,9,8,14,0,9,11,6],
[13,10,13,15,12,0,17,13],
[7,7,7,13,10,4,0,8],
[13,9,9,16,15,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,6,12,12,7,11,9],
[9,0,8,13,12,4,10,8],
[15,13,0,16,16,7,14,14],
[9,8,5,0,7,8,8,5],
[9,9,5,14,0,12,12,9],
[14,17,14,13,9,0,13,18],
[10,11,7,13,9,8,0,13],
[12,13,7,16,12,3,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,13,7,10,13,11],
[10,0,11,11,5,8,12,4],
[9,10,0,12,8,10,13,7],
[8,10,9,0,7,10,11,8],
[14,16,13,14,0,11,13,9],
[11,13,11,11,10,0,12,8],
[8,9,8,10,8,9,0,8],
[10,17,14,13,12,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,10,12,8,12,9],
[9,0,11,10,10,8,16,6],
[6,10,0,8,8,5,10,9],
[11,11,13,0,9,11,9,8],
[9,11,13,12,0,12,13,8],
[13,13,16,10,9,0,11,12],
[9,5,11,12,8,10,0,7],
[12,15,12,13,13,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,8,5,6,7,8,10],
[17,0,15,6,14,7,15,12],
[13,6,0,12,10,3,14,10],
[16,15,9,0,14,10,12,13],
[15,7,11,7,0,6,8,7],
[14,14,18,11,15,0,14,10],
[13,6,7,9,13,7,0,5],
[11,9,11,8,14,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,9,12,12,10,13],
[8,0,5,7,10,10,12,13],
[10,16,0,11,10,14,13,17],
[12,14,10,0,13,12,12,14],
[9,11,11,8,0,11,12,12],
[9,11,7,9,10,0,13,14],
[11,9,8,9,9,8,0,12],
[8,8,4,7,9,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,7,5,4,2,9,1],
[16,0,12,10,9,14,11,12],
[14,9,0,5,4,2,8,4],
[16,11,16,0,10,10,15,9],
[17,12,17,11,0,14,18,10],
[19,7,19,11,7,0,8,13],
[12,10,13,6,3,13,0,6],
[20,9,17,12,11,8,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,10,10,13,10,9],
[9,0,7,9,12,8,6,8],
[11,14,0,11,10,12,13,9],
[11,12,10,0,13,11,13,11],
[11,9,11,8,0,13,10,10],
[8,13,9,10,8,0,13,8],
[11,15,8,8,11,8,0,12],
[12,13,12,10,11,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,8,6,5,11,7],
[14,0,17,18,9,14,15,18],
[10,4,0,5,2,2,8,7],
[13,3,16,0,5,7,12,13],
[15,12,19,16,0,10,17,17],
[16,7,19,14,11,0,12,11],
[10,6,13,9,4,9,0,14],
[14,3,14,8,4,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,13,14,13,7,14],
[13,0,12,16,14,10,9,17],
[10,9,0,14,12,10,8,15],
[8,5,7,0,11,6,8,11],
[7,7,9,10,0,9,7,11],
[8,11,11,15,12,0,11,13],
[14,12,13,13,14,10,0,16],
[7,4,6,10,10,8,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,11,9,9,10,9],
[11,0,13,12,10,10,8,12],
[9,8,0,7,9,8,7,5],
[10,9,14,0,13,10,7,9],
[12,11,12,8,0,11,9,8],
[12,11,13,11,10,0,11,9],
[11,13,14,14,12,10,0,9],
[12,9,16,12,13,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,7,8,10,7,11,6],
[16,0,12,15,16,13,13,10],
[14,9,0,12,12,12,14,12],
[13,6,9,0,11,10,10,7],
[11,5,9,10,0,9,12,9],
[14,8,9,11,12,0,12,11],
[10,8,7,11,9,9,0,6],
[15,11,9,14,12,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,16,12,14,14,13,14],
[14,0,16,12,10,14,13,17],
[5,5,0,5,6,8,6,8],
[9,9,16,0,17,13,8,14],
[7,11,15,4,0,12,11,12],
[7,7,13,8,9,0,9,13],
[8,8,15,13,10,12,0,11],
[7,4,13,7,9,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,13,8,17,7,14],
[11,0,10,10,8,11,15,16],
[7,11,0,12,7,12,12,10],
[8,11,9,0,6,9,12,11],
[13,13,14,15,0,12,9,15],
[4,10,9,12,9,0,9,15],
[14,6,9,9,12,12,0,10],
[7,5,11,10,6,6,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,13,13,12,7,9],
[12,0,10,7,9,10,7,9],
[11,11,0,8,10,10,10,8],
[8,14,13,0,12,12,10,10],
[8,12,11,9,0,10,9,10],
[9,11,11,9,11,0,10,11],
[14,14,11,11,12,11,0,10],
[12,12,13,11,11,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,7,13,11,16,16,15],
[8,0,5,11,8,12,9,12],
[14,16,0,10,15,16,14,18],
[8,10,11,0,14,19,12,11],
[10,13,6,7,0,13,16,12],
[5,9,5,2,8,0,5,7],
[5,12,7,9,5,16,0,13],
[6,9,3,10,9,14,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,5,6,10,7,13,10],
[9,0,8,10,8,12,10,15],
[16,13,0,8,16,13,17,15],
[15,11,13,0,10,6,16,10],
[11,13,5,11,0,15,13,15],
[14,9,8,15,6,0,11,4],
[8,11,4,5,8,10,0,10],
[11,6,6,11,6,17,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,10,13,11,7,5],
[9,0,8,9,13,10,9,7],
[10,13,0,10,13,8,9,8],
[11,12,11,0,11,7,13,10],
[8,8,8,10,0,6,9,10],
[10,11,13,14,15,0,10,11],
[14,12,12,8,12,11,0,11],
[16,14,13,11,11,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,6,12,6,6,6,0],
[21,0,15,18,12,15,18,9],
[15,6,0,6,12,9,12,9],
[9,3,15,0,6,9,6,3],
[15,9,9,15,0,15,12,15],
[15,6,12,12,6,0,12,3],
[15,3,9,15,9,9,0,3],
[21,12,12,18,6,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,11,14,8,5,4],
[14,0,13,9,10,7,12,9],
[13,8,0,13,11,10,6,6],
[10,12,8,0,7,4,9,7],
[7,11,10,14,0,6,10,4],
[13,14,11,17,15,0,12,7],
[16,9,15,12,11,9,0,11],
[17,12,15,14,17,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,6,9,11,14,10,10],
[8,0,9,11,13,16,13,7],
[15,12,0,11,13,14,10,8],
[12,10,10,0,14,9,11,12],
[10,8,8,7,0,8,7,11],
[7,5,7,12,13,0,12,10],
[11,8,11,10,14,9,0,11],
[11,14,13,9,10,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,12,9,13,15,15],
[9,0,12,15,11,9,11,14],
[9,9,0,17,9,10,8,14],
[9,6,4,0,11,5,8,10],
[12,10,12,10,0,12,13,14],
[8,12,11,16,9,0,8,14],
[6,10,13,13,8,13,0,13],
[6,7,7,11,7,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,17,8,17,15,12,8],
[10,0,10,10,10,9,14,10],
[4,11,0,0,12,19,10,10],
[13,11,21,0,19,19,12,10],
[4,11,9,2,0,7,12,8],
[6,12,2,2,14,0,12,12],
[9,7,11,9,9,9,0,7],
[13,11,11,11,13,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,4,10,16,18,14,18],
[0,0,0,5,5,11,13,5],
[17,21,0,10,17,18,14,18],
[11,16,11,0,16,10,11,16],
[5,16,4,5,0,10,11,4],
[3,10,3,11,11,0,10,8],
[7,8,7,10,10,11,0,12],
[3,16,3,5,17,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,17,7,12,18,11,12],
[10,0,12,6,7,12,2,11],
[4,9,0,8,8,9,4,7],
[14,15,13,0,14,13,6,13],
[9,14,13,7,0,8,6,10],
[3,9,12,8,13,0,3,12],
[10,19,17,15,15,18,0,14],
[9,10,14,8,11,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,8,6,11,13,10],
[14,0,12,10,10,10,13,12],
[12,9,0,10,10,7,14,12],
[13,11,11,0,11,9,12,15],
[15,11,11,10,0,12,15,12],
[10,11,14,12,9,0,14,13],
[8,8,7,9,6,7,0,9],
[11,9,9,6,9,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,15,15,13,16,14,9],
[14,0,10,19,16,17,18,15],
[6,11,0,15,14,15,11,11],
[6,2,6,0,10,11,7,9],
[8,5,7,11,0,15,10,11],
[5,4,6,10,6,0,10,8],
[7,3,10,14,11,11,0,9],
[12,6,10,12,10,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,6,7,8,8,3,10],
[3,0,2,8,6,5,1,11],
[15,19,0,18,13,16,9,16],
[14,13,3,0,14,5,4,17],
[13,15,8,7,0,11,11,14],
[13,16,5,16,10,0,7,13],
[18,20,12,17,10,14,0,21],
[11,10,5,4,7,8,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,7,18,12,6,6],
[9,0,13,11,20,13,14,8],
[13,8,0,10,17,11,6,9],
[14,10,11,0,21,8,9,10],
[3,1,4,0,0,6,1,1],
[9,8,10,13,15,0,7,7],
[15,7,15,12,20,14,0,11],
[15,13,12,11,20,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,12,13,12,11,11],
[9,0,10,12,13,10,8,10],
[11,11,0,9,13,9,9,9],
[9,9,12,0,11,12,6,7],
[8,8,8,10,0,7,7,5],
[9,11,12,9,14,0,6,8],
[10,13,12,15,14,15,0,9],
[10,11,12,14,16,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,5,12,5,12,12,5],
[9,0,9,9,9,5,12,14],
[16,12,0,16,9,12,12,21],
[9,12,5,0,14,5,12,5],
[16,12,12,7,0,12,12,12],
[9,16,9,16,9,0,16,9],
[9,9,9,9,9,5,0,9],
[16,7,0,16,9,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,16,13,12,11,13],
[13,0,12,13,11,10,12,11],
[11,9,0,11,13,8,8,11],
[5,8,10,0,6,7,6,11],
[8,10,8,15,0,9,11,14],
[9,11,13,14,12,0,11,11],
[10,9,13,15,10,10,0,11],
[8,10,10,10,7,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,7,15,8,9,10],
[14,0,15,10,14,11,8,10],
[12,6,0,9,14,9,11,7],
[14,11,12,0,16,13,9,10],
[6,7,7,5,0,8,7,10],
[13,10,12,8,13,0,9,11],
[12,13,10,12,14,12,0,13],
[11,11,14,11,11,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,13,8,8,10,8],
[12,0,13,10,10,10,9,10],
[8,8,0,10,9,4,10,6],
[8,11,11,0,7,9,9,6],
[13,11,12,14,0,12,13,10],
[13,11,17,12,9,0,14,12],
[11,12,11,12,8,7,0,11],
[13,11,15,15,11,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,14,12,4,12,12],
[9,0,4,14,3,4,7,12],
[9,17,0,14,11,13,7,8],
[7,7,7,0,7,7,7,12],
[9,18,10,14,0,10,10,12],
[17,17,8,14,11,0,11,8],
[9,14,14,14,11,10,0,8],
[9,9,13,9,9,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,1,17,9,4,7,2],
[6,0,1,12,8,4,6,2],
[20,20,0,20,16,10,16,16],
[4,9,1,0,9,4,5,6],
[12,13,5,12,0,6,17,8],
[17,17,11,17,15,0,13,9],
[14,15,5,16,4,8,0,8],
[19,19,5,15,13,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,8,12,11,12,12],
[8,0,15,12,11,7,8,9],
[6,6,0,7,10,5,5,3],
[13,9,14,0,14,10,11,11],
[9,10,11,7,0,8,8,8],
[10,14,16,11,13,0,13,10],
[9,13,16,10,13,8,0,12],
[9,12,18,10,13,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,9,10,7,9,6,10],
[15,0,12,12,10,11,12,11],
[12,9,0,10,8,9,9,11],
[11,9,11,0,11,8,12,9],
[14,11,13,10,0,13,14,11],
[12,10,12,13,8,0,12,8],
[15,9,12,9,7,9,0,11],
[11,10,10,12,10,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,5,8,5,16,5,12],
[16,0,7,12,10,12,9,11],
[16,14,0,13,13,19,9,10],
[13,9,8,0,11,11,9,7],
[16,11,8,10,0,17,10,11],
[5,9,2,10,4,0,9,8],
[16,12,12,12,11,12,0,10],
[9,10,11,14,10,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,13,12,12,9,12],
[12,0,15,10,5,18,9,15],
[9,6,0,10,6,12,4,10],
[8,11,11,0,4,19,11,12],
[9,16,15,17,0,17,14,14],
[9,3,9,2,4,0,6,10],
[12,12,17,10,7,15,0,18],
[9,6,11,9,7,11,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,8,12,10,11,12],
[13,0,9,9,11,6,14,11],
[12,12,0,14,9,11,13,11],
[13,12,7,0,12,9,12,11],
[9,10,12,9,0,11,11,10],
[11,15,10,12,10,0,15,10],
[10,7,8,9,10,6,0,12],
[9,10,10,10,11,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,8,6,11,10,11],
[13,0,8,10,9,13,9,17],
[11,13,0,11,11,11,10,13],
[13,11,10,0,12,12,12,9],
[15,12,10,9,0,10,10,13],
[10,8,10,9,11,0,10,8],
[11,12,11,9,11,11,0,12],
[10,4,8,12,8,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,6,9,7,12,9],
[15,0,13,10,13,20,19,14],
[15,8,0,11,7,16,10,8],
[15,11,10,0,13,10,14,11],
[12,8,14,8,0,14,13,14],
[14,1,5,11,7,0,11,5],
[9,2,11,7,8,10,0,11],
[12,7,13,10,7,16,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,15,11,10,13,13,9],
[12,0,16,14,10,16,14,12],
[6,5,0,8,9,10,9,9],
[10,7,13,0,10,13,9,10],
[11,11,12,11,0,13,11,9],
[8,5,11,8,8,0,8,5],
[8,7,12,12,10,13,0,9],
[12,9,12,11,12,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,14,13,12,9,10],
[9,0,16,16,13,14,14,11],
[5,5,0,5,9,8,7,8],
[7,5,16,0,12,13,13,7],
[8,8,12,9,0,7,7,6],
[9,7,13,8,14,0,10,8],
[12,7,14,8,14,11,0,10],
[11,10,13,14,15,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,9,6,9,9,8],
[9,0,8,10,6,2,9,12],
[8,13,0,11,6,11,8,14],
[12,11,10,0,12,9,13,11],
[15,15,15,9,0,10,11,16],
[12,19,10,12,11,0,13,15],
[12,12,13,8,10,8,0,14],
[13,9,7,10,5,6,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,9,12,6,8,12],
[11,0,14,12,11,7,13,17],
[12,7,0,7,9,7,10,14],
[12,9,14,0,11,8,14,13],
[9,10,12,10,0,8,10,16],
[15,14,14,13,13,0,10,15],
[13,8,11,7,11,11,0,11],
[9,4,7,8,5,6,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,11,11,11,14,8],
[11,0,9,7,7,8,13,6],
[12,12,0,12,13,10,14,10],
[10,14,9,0,13,9,15,11],
[10,14,8,8,0,10,10,11],
[10,13,11,12,11,0,12,8],
[7,8,7,6,11,9,0,6],
[13,15,11,10,10,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,7,17,13,10,17],
[2,0,6,6,2,13,6,7],
[7,15,0,7,8,7,13,17],
[14,15,14,0,10,10,18,14],
[4,19,13,11,0,17,10,18],
[8,8,14,11,4,0,14,14],
[11,15,8,3,11,7,0,17],
[4,14,4,7,3,7,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,11,7,6,7,8,6],
[17,0,12,15,13,12,13,10],
[10,9,0,8,9,9,8,9],
[14,6,13,0,9,9,10,8],
[15,8,12,12,0,10,9,6],
[14,9,12,12,11,0,5,7],
[13,8,13,11,12,16,0,11],
[15,11,12,13,15,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,12,10,9,9,13],
[10,0,17,13,11,11,14,11],
[6,4,0,8,12,4,12,8],
[9,8,13,0,11,7,7,14],
[11,10,9,10,0,9,9,11],
[12,10,17,14,12,0,12,7],
[12,7,9,14,12,9,0,11],
[8,10,13,7,10,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,15,9,17,11,16],
[11,0,7,14,10,12,14,12],
[9,14,0,15,11,14,14,13],
[6,7,6,0,8,9,12,10],
[12,11,10,13,0,12,13,13],
[4,9,7,12,9,0,6,8],
[10,7,7,9,8,15,0,7],
[5,9,8,11,8,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,11,13,13,11,6],
[10,0,8,6,10,9,11,9],
[10,13,0,10,10,15,13,6],
[10,15,11,0,10,6,9,11],
[8,11,11,11,0,9,11,11],
[8,12,6,15,12,0,4,7],
[10,10,8,12,10,17,0,8],
[15,12,15,10,10,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,10,10,17,12,9],
[10,0,14,17,13,15,12,12],
[9,7,0,8,7,11,8,5],
[11,4,13,0,9,14,10,9],
[11,8,14,12,0,13,11,11],
[4,6,10,7,8,0,12,6],
[9,9,13,11,10,9,0,11],
[12,9,16,12,10,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,17,9,11,5,11,11],
[10,0,18,7,13,11,11,13],
[4,3,0,6,9,7,8,7],
[12,14,15,0,13,9,9,10],
[10,8,12,8,0,6,12,10],
[16,10,14,12,15,0,10,11],
[10,10,13,12,9,11,0,6],
[10,8,14,11,11,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,11,13,11,12,11],
[9,0,6,2,9,12,13,9],
[12,15,0,10,13,15,15,15],
[10,19,11,0,12,14,15,14],
[8,12,8,9,0,12,12,10],
[10,9,6,7,9,0,9,10],
[9,8,6,6,9,12,0,13],
[10,12,6,7,11,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,6,10,11,10,8],
[11,0,11,11,11,10,12,10],
[12,10,0,10,13,12,9,14],
[15,10,11,0,14,11,12,11],
[11,10,8,7,0,13,9,11],
[10,11,9,10,8,0,13,11],
[11,9,12,9,12,8,0,10],
[13,11,7,10,10,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,9,12,8,12,13,7],
[5,0,8,9,8,9,15,6],
[12,13,0,12,11,9,11,9],
[9,12,9,0,10,5,12,8],
[13,13,10,11,0,11,13,13],
[9,12,12,16,10,0,12,9],
[8,6,10,9,8,9,0,6],
[14,15,12,13,8,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,12,11,9,10,9],
[9,0,11,15,12,11,9,11],
[10,10,0,11,10,9,9,9],
[9,6,10,0,9,7,8,7],
[10,9,11,12,0,11,7,5],
[12,10,12,14,10,0,9,6],
[11,12,12,13,14,12,0,10],
[12,10,12,14,16,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,0,7,17,17,17],
[4,0,17,4,11,21,17,21],
[4,4,0,4,11,14,14,4],
[21,17,17,0,7,17,17,21],
[14,10,10,14,0,10,10,14],
[4,0,7,4,11,0,17,4],
[4,4,7,4,11,4,0,4],
[4,0,17,0,7,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,9,8,12,14,8,12],
[6,0,8,11,8,13,10,10],
[12,13,0,11,8,15,9,13],
[13,10,10,0,9,9,6,10],
[9,13,13,12,0,12,9,11],
[7,8,6,12,9,0,10,9],
[13,11,12,15,12,11,0,10],
[9,11,8,11,10,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,11,9,15,14,9],
[8,0,5,8,7,9,11,7],
[11,16,0,13,14,13,9,11],
[10,13,8,0,8,11,11,15],
[12,14,7,13,0,14,11,13],
[6,12,8,10,7,0,13,9],
[7,10,12,10,10,8,0,5],
[12,14,10,6,8,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,16,11,16,12,14],
[12,0,13,14,9,12,8,13],
[9,8,0,13,9,11,8,12],
[5,7,8,0,7,11,10,10],
[10,12,12,14,0,14,11,12],
[5,9,10,10,7,0,10,11],
[9,13,13,11,10,11,0,16],
[7,8,9,11,9,10,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,12,6,11,13,10],
[13,0,18,10,6,13,10,14],
[11,3,0,9,5,11,10,7],
[9,11,12,0,10,9,9,11],
[15,15,16,11,0,11,9,14],
[10,8,10,12,10,0,14,8],
[8,11,11,12,12,7,0,8],
[11,7,14,10,7,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,14,12,12,14,12],
[10,0,10,13,9,11,11,12],
[11,11,0,11,9,12,11,14],
[7,8,10,0,10,10,11,10],
[9,12,12,11,0,10,11,15],
[9,10,9,11,11,0,9,13],
[7,10,10,10,10,12,0,12],
[9,9,7,11,6,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,8,6,8,8,13],
[8,0,9,8,7,7,9,12],
[10,12,0,12,11,11,9,10],
[13,13,9,0,9,7,8,11],
[15,14,10,12,0,10,11,12],
[13,14,10,14,11,0,9,12],
[13,12,12,13,10,12,0,10],
[8,9,11,10,9,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,8,6,15,8,19,12],
[4,0,4,4,6,2,8,6],
[13,17,0,15,19,12,15,8],
[15,17,6,0,15,6,13,8],
[6,15,2,6,0,4,4,2],
[13,19,9,15,17,0,17,13],
[2,13,6,8,17,4,0,6],
[9,15,13,13,19,8,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,11,12,10,8,6],
[14,0,10,13,14,13,12,8],
[11,11,0,12,15,9,10,11],
[10,8,9,0,13,7,9,6],
[9,7,6,8,0,9,11,7],
[11,8,12,14,12,0,9,7],
[13,9,11,12,10,12,0,8],
[15,13,10,15,14,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,4,4,8,10,10,6],
[11,0,7,6,6,6,4,7],
[17,14,0,13,9,15,12,7],
[17,15,8,0,14,10,16,11],
[13,15,12,7,0,11,16,6],
[11,15,6,11,10,0,6,2],
[11,17,9,5,5,15,0,10],
[15,14,14,10,15,19,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,8,5,5,9,4],
[12,0,8,5,9,9,4,3],
[13,13,0,8,5,9,5,4],
[13,16,13,0,12,12,16,7],
[16,12,16,9,0,20,15,11],
[16,12,12,9,1,0,15,6],
[12,17,16,5,6,6,0,4],
[17,18,17,14,10,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,1,8,7,7,1,0,21],
[20,0,20,21,7,16,1,21],
[13,1,0,13,6,1,0,16],
[14,0,8,0,7,1,0,15],
[14,14,15,14,0,9,14,21],
[20,5,20,20,12,0,6,21],
[21,20,21,21,7,15,0,21],
[0,0,5,6,0,0,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,16,17,13,13,15],
[8,0,8,10,9,15,11,10],
[13,13,0,15,10,18,14,10],
[5,11,6,0,11,14,14,10],
[4,12,11,10,0,14,13,11],
[8,6,3,7,7,0,7,7],
[8,10,7,7,8,14,0,6],
[6,11,11,11,10,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,10,8,9,7,7,6],
[15,0,10,6,12,14,9,14],
[11,11,0,11,13,11,9,11],
[13,15,10,0,11,14,11,15],
[12,9,8,10,0,10,8,10],
[14,7,10,7,11,0,11,12],
[14,12,12,10,13,10,0,12],
[15,7,10,6,11,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,13,8,9,16,9],
[14,0,8,9,12,13,11,12],
[13,13,0,13,7,9,13,9],
[8,12,8,0,8,7,12,8],
[13,9,14,13,0,10,9,12],
[12,8,12,14,11,0,14,9],
[5,10,8,9,12,7,0,9],
[12,9,12,13,9,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,11,12,8,11,7],
[14,0,13,14,13,13,11,8],
[9,8,0,11,10,10,10,10],
[10,7,10,0,11,12,11,8],
[9,8,11,10,0,10,6,10],
[13,8,11,9,11,0,10,9],
[10,10,11,10,15,11,0,11],
[14,13,11,13,11,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,9,21,14,10,10,10],
[4,0,9,4,11,7,7,9],
[12,12,0,12,12,8,15,15],
[0,17,9,0,14,8,10,10],
[7,10,9,7,0,14,14,16],
[11,14,13,13,7,0,16,16],
[11,14,6,11,7,5,0,17],
[11,12,6,11,5,5,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,10,16,21,15,21],
[9,0,5,9,15,21,9,9],
[9,16,0,15,21,21,15,15],
[11,12,6,0,11,17,11,11],
[5,6,0,10,0,17,15,5],
[0,0,0,4,4,0,4,4],
[6,12,6,10,6,17,0,11],
[0,12,6,10,16,17,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,6,12,11,9,10],
[10,0,12,6,9,6,9,6],
[11,9,0,6,11,7,5,7],
[15,15,15,0,14,12,15,9],
[9,12,10,7,0,10,9,10],
[10,15,14,9,11,0,15,11],
[12,12,16,6,12,6,0,13],
[11,15,14,12,11,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,0,6,11,8,8,11],
[10,0,6,4,12,9,8,10],
[21,15,0,11,16,9,9,13],
[15,17,10,0,12,9,9,12],
[10,9,5,9,0,13,14,11],
[13,12,12,12,8,0,12,10],
[13,13,12,12,7,9,0,4],
[10,11,8,9,10,11,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,6,6,8,16,5],
[9,0,9,11,8,8,14,5],
[8,12,0,8,11,11,11,12],
[15,10,13,0,8,7,13,8],
[15,13,10,13,0,16,16,8],
[13,13,10,14,5,0,17,5],
[5,7,10,8,5,4,0,5],
[16,16,9,13,13,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,0,15,6,10,15,15],
[16,0,16,21,16,10,21,21],
[21,5,0,21,16,10,21,21],
[6,0,0,0,6,10,10,10],
[15,5,5,15,0,15,15,15],
[11,11,11,11,6,0,21,11],
[6,0,0,11,6,0,0,6],
[6,0,0,11,6,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,9,10,14,11,15],
[9,0,8,7,8,11,8,8],
[10,13,0,10,6,9,12,12],
[12,14,11,0,14,12,10,15],
[11,13,15,7,0,13,11,14],
[7,10,12,9,8,0,11,12],
[10,13,9,11,10,10,0,10],
[6,13,9,6,7,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,14,9,15,12,14],
[7,0,9,12,13,8,16,18],
[7,12,0,16,16,8,16,13],
[7,9,5,0,9,11,12,18],
[12,8,5,12,0,13,15,18],
[6,13,13,10,8,0,8,10],
[9,5,5,9,6,13,0,9],
[7,3,8,3,3,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,11,14,12,7,19],
[9,0,13,14,11,14,9,18],
[10,8,0,10,16,14,14,10],
[10,7,11,0,15,15,10,10],
[7,10,5,6,0,12,10,11],
[9,7,7,6,9,0,8,10],
[14,12,7,11,11,13,0,14],
[2,3,11,11,10,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,9,12,4,8,9,9],
[16,0,11,15,11,9,18,12],
[12,10,0,11,12,9,12,10],
[9,6,10,0,9,8,9,8],
[17,10,9,12,0,15,16,11],
[13,12,12,13,6,0,16,13],
[12,3,9,12,5,5,0,9],
[12,9,11,13,10,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,13,11,9,11,14],
[7,0,10,12,9,11,7,12],
[7,11,0,12,10,12,8,13],
[8,9,9,0,8,8,7,9],
[10,12,11,13,0,12,12,14],
[12,10,9,13,9,0,9,12],
[10,14,13,14,9,12,0,11],
[7,9,8,12,7,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,10,15,10,17,14],
[9,0,11,8,15,8,16,13],
[10,10,0,12,12,12,16,14],
[11,13,9,0,15,14,12,14],
[6,6,9,6,0,9,10,9],
[11,13,9,7,12,0,12,12],
[4,5,5,9,11,9,0,5],
[7,8,7,7,12,9,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,6,7,5,7,7,8],
[16,0,13,14,11,12,10,12],
[15,8,0,11,6,10,8,15],
[14,7,10,0,5,7,5,10],
[16,10,15,16,0,11,12,13],
[14,9,11,14,10,0,10,13],
[14,11,13,16,9,11,0,14],
[13,9,6,11,8,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,11,10,11,13,12],
[11,0,12,11,14,12,13,10],
[12,9,0,9,9,7,10,10],
[10,10,12,0,9,10,12,8],
[11,7,12,12,0,9,14,12],
[10,9,14,11,12,0,15,10],
[8,8,11,9,7,6,0,7],
[9,11,11,13,9,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,9,8,7,9,6],
[11,0,9,8,8,9,6,4],
[9,12,0,9,10,8,5,9],
[12,13,12,0,12,8,10,7],
[13,13,11,9,0,8,12,7],
[14,12,13,13,13,0,10,8],
[12,15,16,11,9,11,0,11],
[15,17,12,14,14,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,1,7,6,10,7,5,4],
[20,0,13,16,16,10,13,7],
[14,8,0,15,15,11,10,11],
[15,5,6,0,15,8,10,6],
[11,5,6,6,0,7,14,2],
[14,11,10,13,14,0,13,9],
[16,8,11,11,7,8,0,5],
[17,14,10,15,19,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,4,16,8,4,7,4],
[13,0,8,16,8,8,11,8],
[17,13,0,21,8,9,12,12],
[5,5,0,0,4,0,7,4],
[13,13,13,17,0,9,12,12],
[17,13,12,21,12,0,16,7],
[14,10,9,14,9,5,0,9],
[17,13,9,17,9,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,8,7,9,10,6],
[11,0,9,7,8,11,10,8],
[13,12,0,12,12,10,11,14],
[13,14,9,0,8,9,12,9],
[14,13,9,13,0,12,14,9],
[12,10,11,12,9,0,12,11],
[11,11,10,9,7,9,0,10],
[15,13,7,12,12,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,10,11,9,7,14],
[14,0,9,7,11,12,13,15],
[14,12,0,9,10,11,11,13],
[11,14,12,0,9,13,11,17],
[10,10,11,12,0,9,12,14],
[12,9,10,8,12,0,10,16],
[14,8,10,10,9,11,0,14],
[7,6,8,4,7,5,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,6,10,9,9,7],
[10,0,9,6,7,4,8,6],
[13,12,0,9,11,9,16,12],
[15,15,12,0,10,12,11,11],
[11,14,10,11,0,12,12,14],
[12,17,12,9,9,0,10,13],
[12,13,5,10,9,11,0,10],
[14,15,9,10,7,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,9,7,8,7,8],
[11,0,11,9,7,10,5,10],
[11,10,0,9,10,11,11,11],
[12,12,12,0,11,10,10,13],
[14,14,11,10,0,11,9,11],
[13,11,10,11,10,0,9,11],
[14,16,10,11,12,12,0,12],
[13,11,10,8,10,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,11,12,7,10,8],
[9,0,8,10,10,7,9,6],
[8,13,0,9,7,8,12,10],
[10,11,12,0,13,9,12,12],
[9,11,14,8,0,7,10,7],
[14,14,13,12,14,0,14,8],
[11,12,9,9,11,7,0,9],
[13,15,11,9,14,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,7,7,12,12,7],
[14,0,12,12,5,5,5,12],
[14,9,0,0,5,14,7,2],
[14,9,21,0,5,14,7,14],
[14,16,16,16,0,14,7,16],
[9,16,7,7,7,0,0,7],
[9,16,14,14,14,21,0,16],
[14,9,19,7,5,14,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,9,12,12,8,10],
[13,0,10,7,10,7,6,11],
[8,11,0,9,13,10,11,10],
[12,14,12,0,13,8,9,10],
[9,11,8,8,0,10,5,10],
[9,14,11,13,11,0,11,9],
[13,15,10,12,16,10,0,11],
[11,10,11,11,11,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,0,6,0,0,6,0],
[21,0,13,17,9,9,17,15],
[21,8,0,17,9,9,17,15],
[15,4,4,0,4,0,4,0],
[21,12,12,17,0,11,17,8],
[21,12,12,21,10,0,21,10],
[15,4,4,17,4,0,0,0],
[21,6,6,21,13,11,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,13,12,10,16,11],
[9,0,14,16,14,13,18,13],
[10,7,0,15,13,11,13,10],
[8,5,6,0,9,7,9,4],
[9,7,8,12,0,9,11,8],
[11,8,10,14,12,0,16,9],
[5,3,8,12,10,5,0,8],
[10,8,11,17,13,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,10,15,10,10,13],
[9,0,8,8,14,13,11,10],
[11,13,0,12,13,12,10,12],
[11,13,9,0,17,11,10,12],
[6,7,8,4,0,6,4,6],
[11,8,9,10,15,0,12,9],
[11,10,11,11,17,9,0,13],
[8,11,9,9,15,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,12,11,9,9,8],
[10,0,9,14,15,10,12,12],
[9,12,0,13,15,10,12,14],
[9,7,8,0,13,8,11,7],
[10,6,6,8,0,7,9,10],
[12,11,11,13,14,0,16,10],
[12,9,9,10,12,5,0,8],
[13,9,7,14,11,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,11,14,9,8,11],
[13,0,8,8,10,10,10,9],
[10,13,0,8,11,7,6,8],
[10,13,13,0,13,11,9,6],
[7,11,10,8,0,11,8,7],
[12,11,14,10,10,0,11,13],
[13,11,15,12,13,10,0,14],
[10,12,13,15,14,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,11,7,10,10,13],
[11,0,13,12,11,9,10,11],
[8,8,0,10,7,8,7,10],
[10,9,11,0,12,11,7,12],
[14,10,14,9,0,10,12,12],
[11,12,13,10,11,0,10,13],
[11,11,14,14,9,11,0,11],
[8,10,11,9,9,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,15,11,12,15,13,6],
[13,0,11,11,12,12,9,14],
[6,10,0,6,6,3,12,7],
[10,10,15,0,11,14,13,9],
[9,9,15,10,0,13,11,10],
[6,9,18,7,8,0,12,6],
[8,12,9,8,10,9,0,9],
[15,7,14,12,11,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,16,9,16,16,9,3],
[12,0,21,21,13,18,16,7],
[5,0,0,9,7,13,9,0],
[12,0,12,0,7,13,6,7],
[5,8,14,14,0,18,9,0],
[5,3,8,8,3,0,3,0],
[12,5,12,15,12,18,0,12],
[18,14,21,14,21,21,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,0,10,10,10,9,10],
[11,0,6,11,9,10,15,6],
[21,15,0,15,15,21,15,10],
[11,10,6,0,15,16,9,10],
[11,12,6,6,0,10,11,12],
[11,11,0,5,11,0,5,6],
[12,6,6,12,10,16,0,6],
[11,15,11,11,9,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,6,5,12,13,8],
[11,0,17,9,11,8,10,13],
[8,4,0,7,7,6,10,7],
[15,12,14,0,18,15,10,12],
[16,10,14,3,0,12,8,13],
[9,13,15,6,9,0,7,11],
[8,11,11,11,13,14,0,11],
[13,8,14,9,8,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,6,6,4,10,8],
[15,0,21,13,15,13,7,15],
[13,0,0,10,6,10,4,13],
[15,8,11,0,11,15,15,11],
[15,6,15,10,0,12,6,15],
[17,8,11,6,9,0,12,11],
[11,14,17,6,15,9,0,11],
[13,6,8,10,6,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,12,10,12,14,9],
[8,0,10,13,7,13,11,10],
[10,11,0,13,12,12,9,10],
[9,8,8,0,7,12,10,13],
[11,14,9,14,0,10,13,12],
[9,8,9,9,11,0,8,12],
[7,10,12,11,8,13,0,8],
[12,11,11,8,9,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,7,11,10,12,8],
[10,0,9,8,10,12,9,10],
[11,12,0,9,11,11,10,11],
[14,13,12,0,9,15,11,16],
[10,11,10,12,0,9,11,12],
[11,9,10,6,12,0,8,9],
[9,12,11,10,10,13,0,8],
[13,11,10,5,9,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,16,8,11,16,11],
[10,0,3,13,3,10,8,8],
[10,18,0,13,6,7,10,10],
[5,8,8,0,5,11,12,8],
[13,18,15,16,0,10,10,10],
[10,11,14,10,11,0,11,11],
[5,13,11,9,11,10,0,9],
[10,13,11,13,11,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,16,17,17,8,17],
[4,0,5,16,9,12,9,12],
[9,16,0,16,18,17,17,21],
[5,5,5,0,10,10,5,10],
[4,12,3,11,0,12,12,8],
[4,9,4,11,9,0,9,9],
[13,12,4,16,9,12,0,12],
[4,9,0,11,13,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,2,6,13,7,12,7,7],
[19,0,15,17,9,18,15,11],
[15,6,0,12,7,9,6,9],
[8,4,9,0,11,9,3,8],
[14,12,14,10,0,14,10,7],
[9,3,12,12,7,0,6,10],
[14,6,15,18,11,15,0,12],
[14,10,12,13,14,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,14,12,8,13,11],
[9,0,9,10,9,6,12,8],
[10,12,0,13,11,9,12,13],
[7,11,8,0,10,9,10,8],
[9,12,10,11,0,11,10,11],
[13,15,12,12,10,0,12,12],
[8,9,9,11,11,9,0,9],
[10,13,8,13,10,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,6,8,9,10,7],
[14,0,9,11,12,13,12,13],
[13,12,0,5,11,10,8,11],
[15,10,16,0,16,13,13,16],
[13,9,10,5,0,12,11,12],
[12,8,11,8,9,0,8,8],
[11,9,13,8,10,13,0,10],
[14,8,10,5,9,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,4,13,9,8,5,10],
[13,0,8,14,14,11,10,10],
[17,13,0,10,15,10,13,13],
[8,7,11,0,13,12,9,12],
[12,7,6,8,0,11,12,10],
[13,10,11,9,10,0,11,10],
[16,11,8,12,9,10,0,8],
[11,11,8,9,11,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,14,11,14,13,10],
[11,0,13,12,12,12,12,9],
[7,8,0,11,11,8,10,5],
[7,9,10,0,10,6,9,8],
[10,9,10,11,0,7,10,9],
[7,9,13,15,14,0,11,9],
[8,9,11,12,11,10,0,11],
[11,12,16,13,12,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,6,11,8,8,10,7],
[13,0,8,12,10,10,7,9],
[15,13,0,13,15,8,9,12],
[10,9,8,0,8,5,8,5],
[13,11,6,13,0,12,9,10],
[13,11,13,16,9,0,10,10],
[11,14,12,13,12,11,0,8],
[14,12,9,16,11,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,14,10,13,9,12],
[9,0,10,14,11,9,10,10],
[13,11,0,14,10,12,11,12],
[7,7,7,0,8,8,5,7],
[11,10,11,13,0,9,11,12],
[8,12,9,13,12,0,11,11],
[12,11,10,16,10,10,0,10],
[9,11,9,14,9,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,8,10,5,8,8,7],
[17,0,9,12,12,11,6,13],
[13,12,0,11,8,7,12,13],
[11,9,10,0,5,6,6,10],
[16,9,13,16,0,12,11,15],
[13,10,14,15,9,0,11,11],
[13,15,9,15,10,10,0,12],
[14,8,8,11,6,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,11,12,13,10,17],
[8,0,11,10,6,9,8,9],
[9,10,0,11,8,13,8,14],
[10,11,10,0,11,7,10,14],
[9,15,13,10,0,10,12,13],
[8,12,8,14,11,0,12,15],
[11,13,13,11,9,9,0,11],
[4,12,7,7,8,6,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,9,9,7,7,4],
[14,0,13,14,13,12,11,8],
[12,8,0,10,9,8,10,7],
[12,7,11,0,9,9,8,7],
[12,8,12,12,0,11,12,7],
[14,9,13,12,10,0,11,12],
[14,10,11,13,9,10,0,9],
[17,13,14,14,14,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,9,9,9,6,8],
[11,0,10,9,8,12,7,13],
[12,11,0,11,6,14,10,15],
[12,12,10,0,5,13,9,13],
[12,13,15,16,0,13,10,14],
[12,9,7,8,8,0,10,7],
[15,14,11,12,11,11,0,9],
[13,8,6,8,7,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,7,14,11,12,8],
[13,0,10,4,11,12,11,12],
[8,11,0,7,11,7,8,9],
[14,17,14,0,14,10,12,10],
[7,10,10,7,0,8,12,12],
[10,9,14,11,13,0,10,8],
[9,10,13,9,9,11,0,9],
[13,9,12,11,9,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,11,13,14,12,7],
[11,0,10,13,9,15,8,3],
[9,11,0,14,6,11,7,5],
[10,8,7,0,10,11,2,4],
[8,12,15,11,0,13,9,6],
[7,6,10,10,8,0,5,2],
[9,13,14,19,12,16,0,11],
[14,18,16,17,15,19,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,11,8,11,5,6],
[8,0,7,9,9,9,6,11],
[12,14,0,9,11,15,11,12],
[10,12,12,0,8,15,9,12],
[13,12,10,13,0,15,14,13],
[10,12,6,6,6,0,3,10],
[16,15,10,12,7,18,0,12],
[15,10,9,9,8,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,6,11,11,11,11,16],
[5,0,5,5,5,11,5,11],
[15,16,0,21,5,21,11,21],
[10,16,0,0,0,16,0,16],
[10,16,16,21,0,21,6,16],
[10,10,0,5,0,0,0,10],
[10,16,10,21,15,21,0,16],
[5,10,0,5,5,11,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,9,11,11,14,9,11],
[15,0,12,10,12,18,13,12],
[12,9,0,7,12,14,8,9],
[10,11,14,0,15,14,7,10],
[10,9,9,6,0,11,7,11],
[7,3,7,7,10,0,7,10],
[12,8,13,14,14,14,0,12],
[10,9,12,11,10,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,5,7,4,3,7],
[12,0,8,8,9,4,5,6],
[11,13,0,9,12,7,6,10],
[16,13,12,0,12,9,16,8],
[14,12,9,9,0,11,8,10],
[17,17,14,12,10,0,13,12],
[18,16,15,5,13,8,0,8],
[14,15,11,13,11,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,6,6,9,6,9,13],
[10,0,7,7,6,4,7,12],
[15,14,0,8,8,6,12,12],
[15,14,13,0,11,7,12,13],
[12,15,13,10,0,14,14,17],
[15,17,15,14,7,0,14,19],
[12,14,9,9,7,7,0,15],
[8,9,9,8,4,2,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,9,12,18,12,16],
[9,0,9,9,10,6,12,9],
[5,12,0,11,10,11,10,19],
[12,12,10,0,15,18,10,19],
[9,11,11,6,0,13,10,11],
[3,15,10,3,8,0,10,19],
[9,9,11,11,11,11,0,11],
[5,12,2,2,10,2,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,15,16,12,13,15],
[6,0,6,9,16,10,8,10],
[11,15,0,13,14,10,11,9],
[6,12,8,0,10,10,8,6],
[5,5,7,11,0,7,5,10],
[9,11,11,11,14,0,9,12],
[8,13,10,13,16,12,0,9],
[6,11,12,15,11,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,15,11,7,10,14,10],
[13,0,11,8,9,11,14,10],
[6,10,0,8,9,11,11,10],
[10,13,13,0,13,13,15,12],
[14,12,12,8,0,10,15,7],
[11,10,10,8,11,0,12,10],
[7,7,10,6,6,9,0,7],
[11,11,11,9,14,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,16,8,13,17,18],
[1,0,8,14,7,8,9,8],
[5,13,0,11,12,9,14,10],
[5,7,10,0,5,10,10,11],
[13,14,9,16,0,13,14,14],
[8,13,12,11,8,0,14,13],
[4,12,7,11,7,7,0,8],
[3,13,11,10,7,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,10,10,11,10,14],
[10,0,8,11,11,12,8,15],
[9,13,0,8,10,9,6,12],
[11,10,13,0,13,11,7,13],
[11,10,11,8,0,11,11,17],
[10,9,12,10,10,0,10,12],
[11,13,15,14,10,11,0,14],
[7,6,9,8,4,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,9,6,15,12,3,0],
[15,0,6,18,12,12,12,12],
[12,15,0,18,18,12,12,9],
[15,3,3,0,12,15,12,3],
[6,9,3,9,0,12,3,0],
[9,9,9,6,9,0,9,6],
[18,9,9,9,18,12,0,3],
[21,9,12,18,21,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,10,3,0,12,5,10],
[18,0,10,9,15,10,19,18],
[11,11,0,2,10,11,10,17],
[18,12,19,0,10,10,17,18],
[21,6,11,11,0,12,20,20],
[9,11,10,11,9,0,11,10],
[16,2,11,4,1,10,0,17],
[11,3,4,3,1,11,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,4,5,0,7,9,6],
[18,0,8,11,7,11,16,8],
[17,13,0,9,9,15,18,15],
[16,10,12,0,11,13,13,14],
[21,14,12,10,0,18,17,17],
[14,10,6,8,3,0,12,13],
[12,5,3,8,4,9,0,8],
[15,13,6,7,4,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,11,8,8,7,11],
[12,0,10,12,7,10,9,12],
[12,11,0,13,11,12,9,14],
[10,9,8,0,11,9,10,13],
[13,14,10,10,0,9,12,14],
[13,11,9,12,12,0,9,16],
[14,12,12,11,9,12,0,16],
[10,9,7,8,7,5,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,13,13,9,11,9],
[9,0,9,6,9,9,6,7],
[9,12,0,10,12,6,11,6],
[8,15,11,0,13,10,7,10],
[8,12,9,8,0,6,4,9],
[12,12,15,11,15,0,8,13],
[10,15,10,14,17,13,0,10],
[12,14,15,11,12,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,6,6,11,6,3,12],
[18,0,9,10,14,18,11,15],
[15,12,0,13,8,15,5,12],
[15,11,8,0,14,17,7,12],
[10,7,13,7,0,7,7,4],
[15,3,6,4,14,0,0,12],
[18,10,16,14,14,21,0,15],
[9,6,9,9,17,9,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,13,11,14,12,10],
[9,0,13,10,10,9,11,10],
[11,8,0,10,12,12,8,10],
[8,11,11,0,8,13,7,10],
[10,11,9,13,0,12,9,9],
[7,12,9,8,9,0,7,12],
[9,10,13,14,12,14,0,14],
[11,11,11,11,12,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,12,7,7,9,12],
[9,0,16,12,13,12,9,9],
[14,5,0,8,13,3,14,8],
[9,9,13,0,10,6,13,18],
[14,8,8,11,0,3,14,8],
[14,9,18,15,18,0,18,12],
[12,12,7,8,7,3,0,12],
[9,12,13,3,13,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,8,12,13,11,10],
[13,0,11,7,11,12,12,7],
[10,10,0,13,14,13,10,12],
[13,14,8,0,12,15,13,12],
[9,10,7,9,0,14,8,9],
[8,9,8,6,7,0,9,9],
[10,9,11,8,13,12,0,9],
[11,14,9,9,12,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,4,9,7,7,9],
[9,0,10,9,8,9,8,9],
[13,11,0,11,12,15,11,9],
[17,12,10,0,12,14,12,10],
[12,13,9,9,0,8,9,12],
[14,12,6,7,13,0,8,9],
[14,13,10,9,12,13,0,8],
[12,12,12,11,9,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,13,9,16,8,11],
[9,0,11,11,5,10,6,4],
[14,10,0,15,8,10,11,8],
[8,10,6,0,9,14,8,11],
[12,16,13,12,0,11,5,8],
[5,11,11,7,10,0,7,9],
[13,15,10,13,16,14,0,13],
[10,17,13,10,13,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,13,13,10,13,12],
[8,0,7,12,7,6,11,7],
[9,14,0,10,10,8,11,12],
[8,9,11,0,9,8,12,7],
[8,14,11,12,0,11,13,12],
[11,15,13,13,10,0,13,17],
[8,10,10,9,8,8,0,9],
[9,14,9,14,9,4,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,8,9,13,10,8],
[10,0,12,8,8,11,10,9],
[11,9,0,8,8,13,9,9],
[13,13,13,0,12,16,10,12],
[12,13,13,9,0,15,13,8],
[8,10,8,5,6,0,8,4],
[11,11,12,11,8,13,0,9],
[13,12,12,9,13,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,14,13,13,6,15],
[6,0,5,10,8,8,7,7],
[10,16,0,15,5,14,12,17],
[7,11,6,0,5,12,11,15],
[8,13,16,16,0,16,11,15],
[8,13,7,9,5,0,5,19],
[15,14,9,10,10,16,0,15],
[6,14,4,6,6,2,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,8,10,10,6,7,10],
[7,0,12,10,11,10,8,8],
[13,9,0,11,12,11,5,10],
[11,11,10,0,7,5,5,9],
[11,10,9,14,0,11,6,11],
[15,11,10,16,10,0,6,9],
[14,13,16,16,15,15,0,10],
[11,13,11,12,10,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,6,9,13,11,11,6],
[8,0,6,12,12,11,9,7],
[15,15,0,13,15,15,13,10],
[12,9,8,0,16,15,6,11],
[8,9,6,5,0,7,4,7],
[10,10,6,6,14,0,9,8],
[10,12,8,15,17,12,0,8],
[15,14,11,10,14,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,6,11,9,12,10],
[8,0,12,11,10,9,15,11],
[12,9,0,9,11,8,10,10],
[15,10,12,0,14,9,9,13],
[10,11,10,7,0,11,11,11],
[12,12,13,12,10,0,19,11],
[9,6,11,12,10,2,0,11],
[11,10,11,8,10,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,11,11,15,15,9,9],
[2,0,2,9,17,15,9,9],
[10,19,0,11,15,15,9,7],
[10,12,10,0,10,9,2,2],
[6,4,6,11,0,5,7,12],
[6,6,6,12,16,0,12,8],
[12,12,12,19,14,9,0,14],
[12,12,14,19,9,13,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,12,13,14,10,11],
[8,0,8,11,9,8,10,6],
[12,13,0,12,10,10,11,6],
[9,10,9,0,11,10,10,9],
[8,12,11,10,0,11,8,10],
[7,13,11,11,10,0,8,6],
[11,11,10,11,13,13,0,7],
[10,15,15,12,11,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,12,13,13,10,10],
[10,0,15,11,13,12,14,12],
[7,6,0,10,10,9,7,6],
[9,10,11,0,12,12,10,11],
[8,8,11,9,0,10,9,9],
[8,9,12,9,11,0,12,10],
[11,7,14,11,12,9,0,10],
[11,9,15,10,12,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,10,15,6,13,14],
[9,0,17,14,15,10,13,14],
[9,4,0,11,12,7,10,15],
[11,7,10,0,14,6,13,14],
[6,6,9,7,0,6,6,8],
[15,11,14,15,15,0,8,11],
[8,8,11,8,15,13,0,15],
[7,7,6,7,13,10,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,12,14,10,12,11],
[7,0,6,11,10,9,8,11],
[12,15,0,14,14,10,12,11],
[9,10,7,0,10,8,9,9],
[7,11,7,11,0,9,10,11],
[11,12,11,13,12,0,12,9],
[9,13,9,12,11,9,0,7],
[10,10,10,12,10,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,5,12,13,8,8],
[12,0,11,7,12,4,9,8],
[14,10,0,13,19,10,17,15],
[16,14,8,0,18,14,10,14],
[9,9,2,3,0,10,8,6],
[8,17,11,7,11,0,9,9],
[13,12,4,11,13,12,0,11],
[13,13,6,7,15,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,11,8,13,8,13],
[10,0,13,11,9,12,8,11],
[6,8,0,9,8,12,7,11],
[10,10,12,0,10,12,6,13],
[13,12,13,11,0,10,11,16],
[8,9,9,9,11,0,11,12],
[13,13,14,15,10,10,0,14],
[8,10,10,8,5,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,15,4,7,0,11,7],
[17,0,17,10,17,10,17,13],
[6,4,0,0,0,6,11,0],
[17,11,21,0,13,17,17,7],
[14,4,21,8,0,14,21,11],
[21,11,15,4,7,0,15,11],
[10,4,10,4,0,6,0,0],
[14,8,21,14,10,10,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,5,12,9,11,12],
[11,0,7,5,11,9,10,11],
[11,14,0,13,10,16,13,19],
[16,16,8,0,12,6,13,13],
[9,10,11,9,0,13,9,14],
[12,12,5,15,8,0,12,9],
[10,11,8,8,12,9,0,13],
[9,10,2,8,7,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,4,9,8,9,9,10],
[8,0,7,8,5,7,9,12],
[17,14,0,9,13,11,6,10],
[12,13,12,0,10,11,8,14],
[13,16,8,11,0,17,13,14],
[12,14,10,10,4,0,9,13],
[12,12,15,13,8,12,0,10],
[11,9,11,7,7,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,12,12,10,12,11],
[10,0,10,7,12,14,12,11],
[12,11,0,12,14,10,14,11],
[9,14,9,0,12,13,11,12],
[9,9,7,9,0,7,9,9],
[11,7,11,8,14,0,11,11],
[9,9,7,10,12,10,0,10],
[10,10,10,9,12,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,8,8,8,9,7],
[14,0,12,15,10,11,13,10],
[10,9,0,10,7,9,9,8],
[13,6,11,0,11,9,15,11],
[13,11,14,10,0,11,9,12],
[13,10,12,12,10,0,15,10],
[12,8,12,6,12,6,0,8],
[14,11,13,10,9,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,13,9,10,12,12],
[13,0,15,12,14,15,10,13],
[9,6,0,11,8,8,10,10],
[8,9,10,0,8,9,9,12],
[12,7,13,13,0,16,10,12],
[11,6,13,12,5,0,9,12],
[9,11,11,12,11,12,0,12],
[9,8,11,9,9,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,10,12,6,13,7],
[8,0,9,8,11,12,12,8],
[12,12,0,8,14,9,14,8],
[11,13,13,0,16,10,14,14],
[9,10,7,5,0,7,5,5],
[15,9,12,11,14,0,13,14],
[8,9,7,7,16,8,0,12],
[14,13,13,7,16,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,4,7,10,6,8,11],
[11,0,7,9,8,7,8,12],
[17,14,0,7,9,12,13,12],
[14,12,14,0,9,12,12,12],
[11,13,12,12,0,10,10,10],
[15,14,9,9,11,0,14,13],
[13,13,8,9,11,7,0,14],
[10,9,9,9,11,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,15,13,10,8,13],
[11,0,11,10,10,10,13,13],
[13,10,0,13,10,9,11,11],
[6,11,8,0,10,11,8,6],
[8,11,11,11,0,11,11,12],
[11,11,12,10,10,0,11,12],
[13,8,10,13,10,10,0,16],
[8,8,10,15,9,9,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,11,11,15,12,8],
[9,0,7,7,9,15,7,7],
[11,14,0,13,10,12,10,12],
[10,14,8,0,10,13,11,11],
[10,12,11,11,0,11,9,5],
[6,6,9,8,10,0,7,5],
[9,14,11,10,12,14,0,11],
[13,14,9,10,16,16,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,11,11,7,11,8],
[12,0,8,8,7,9,7,7],
[13,13,0,9,8,13,9,13],
[10,13,12,0,10,11,9,11],
[10,14,13,11,0,8,8,12],
[14,12,8,10,13,0,13,10],
[10,14,12,12,13,8,0,15],
[13,14,8,10,9,11,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,8,13,13,8,13],
[8,0,8,0,16,5,8,5],
[13,13,0,13,13,13,13,5],
[13,21,8,0,21,13,13,13],
[8,5,8,0,0,5,8,5],
[8,16,8,8,16,0,8,13],
[13,13,8,8,13,13,0,13],
[8,16,16,8,16,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,13,11,9,12,11],
[8,0,11,11,10,10,12,12],
[5,10,0,9,8,8,10,10],
[8,10,12,0,10,8,9,11],
[10,11,13,11,0,13,9,14],
[12,11,13,13,8,0,11,14],
[9,9,11,12,12,10,0,9],
[10,9,11,10,7,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,6,10,12,8,11],
[11,0,10,11,15,12,9,13],
[14,11,0,8,12,7,15,13],
[15,10,13,0,14,11,10,14],
[11,6,9,7,0,7,6,6],
[9,9,14,10,14,0,9,12],
[13,12,6,11,15,12,0,17],
[10,8,8,7,15,9,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,5,5,8,7,7,10],
[15,0,11,12,11,12,9,10],
[16,10,0,13,13,8,10,13],
[16,9,8,0,12,8,11,12],
[13,10,8,9,0,8,10,11],
[14,9,13,13,13,0,11,11],
[14,12,11,10,11,10,0,8],
[11,11,8,9,10,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,9,8,6,8,8],
[11,0,6,6,12,7,6,8],
[8,15,0,13,9,10,8,8],
[12,15,8,0,13,12,11,12],
[13,9,12,8,0,4,7,5],
[15,14,11,9,17,0,7,7],
[13,15,13,10,14,14,0,7],
[13,13,13,9,16,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,12,14,13,11,10],
[5,0,9,9,12,10,7,7],
[10,12,0,12,12,13,15,11],
[9,12,9,0,15,15,15,12],
[7,9,9,6,0,14,8,8],
[8,11,8,6,7,0,5,8],
[10,14,6,6,13,16,0,10],
[11,14,10,9,13,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,8,10,8,7,7],
[11,0,11,12,13,12,9,10],
[10,10,0,12,8,10,12,9],
[13,9,9,0,12,9,6,10],
[11,8,13,9,0,9,10,9],
[13,9,11,12,12,0,9,10],
[14,12,9,15,11,12,0,13],
[14,11,12,11,12,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,9,14,9,11,12],
[9,0,12,7,10,8,5,7],
[8,9,0,2,10,7,5,10],
[12,14,19,0,15,11,10,13],
[7,11,11,6,0,9,7,7],
[12,13,14,10,12,0,8,15],
[10,16,16,11,14,13,0,12],
[9,14,11,8,14,6,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,10,7,9,12,6],
[3,0,7,8,4,5,7,5],
[8,14,0,8,7,2,8,7],
[11,13,13,0,8,6,9,7],
[14,17,14,13,0,10,15,14],
[12,16,19,15,11,0,12,7],
[9,14,13,12,6,9,0,5],
[15,16,14,14,7,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,18,14,12,15,14,14],
[11,0,14,9,9,10,15,12],
[3,7,0,14,8,14,8,12],
[7,12,7,0,7,15,13,14],
[9,12,13,14,0,15,14,14],
[6,11,7,6,6,0,9,9],
[7,6,13,8,7,12,0,11],
[7,9,9,7,7,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,18,6,12,13,16,18],
[9,0,13,6,15,13,11,13],
[3,8,0,3,8,5,16,5],
[15,15,18,0,17,10,15,18],
[9,6,13,4,0,8,11,8],
[8,8,16,11,13,0,13,11],
[5,10,5,6,10,8,0,5],
[3,8,16,3,13,10,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,7,11,6,14,7,6],
[16,0,5,7,10,9,11,5],
[14,16,0,11,9,9,10,3],
[10,14,10,0,10,15,15,4],
[15,11,12,11,0,14,10,11],
[7,12,12,6,7,0,7,2],
[14,10,11,6,11,14,0,5],
[15,16,18,17,10,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,10,11,13,9,16],
[8,0,8,9,5,14,10,12],
[9,13,0,11,10,14,13,15],
[11,12,10,0,7,15,10,11],
[10,16,11,14,0,14,13,17],
[8,7,7,6,7,0,9,13],
[12,11,8,11,8,12,0,15],
[5,9,6,10,4,8,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,1,18,13,10,11,19],
[2,0,1,7,10,5,3,16],
[20,20,0,20,20,10,15,20],
[3,14,1,0,8,5,11,14],
[8,11,1,13,0,11,8,11],
[11,16,11,16,10,0,11,16],
[10,18,6,10,13,10,0,19],
[2,5,1,7,10,5,2,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,15,9,12,12,12],
[7,0,8,9,9,10,9,10],
[8,13,0,12,9,11,10,10],
[6,12,9,0,9,10,9,12],
[12,12,12,12,0,13,11,10],
[9,11,10,11,8,0,7,10],
[9,12,11,12,10,14,0,11],
[9,11,11,9,11,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,12,8,11,8,13],
[9,0,7,9,8,13,8,9],
[12,14,0,14,9,13,10,14],
[9,12,7,0,11,10,8,12],
[13,13,12,10,0,11,11,14],
[10,8,8,11,10,0,6,9],
[13,13,11,13,10,15,0,13],
[8,12,7,9,7,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,12,11,12,13,10],
[11,0,13,14,8,11,5,13],
[11,8,0,10,10,17,8,9],
[9,7,11,0,12,13,7,11],
[10,13,11,9,0,10,7,12],
[9,10,4,8,11,0,6,10],
[8,16,13,14,14,15,0,17],
[11,8,12,10,9,11,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,6,6,3,8,5,8],
[13,0,9,7,8,10,8,11],
[15,12,0,13,11,8,11,11],
[15,14,8,0,8,8,9,9],
[18,13,10,13,0,11,11,10],
[13,11,13,13,10,0,16,12],
[16,13,10,12,10,5,0,12],
[13,10,10,12,11,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,12,12,16,11,10],
[8,0,11,10,7,11,7,7],
[7,10,0,6,6,14,11,11],
[9,11,15,0,14,11,8,7],
[9,14,15,7,0,11,10,7],
[5,10,7,10,10,0,11,4],
[10,14,10,13,11,10,0,6],
[11,14,10,14,14,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,13,11,11,12,15],
[13,0,11,14,10,9,13,17],
[11,10,0,14,14,10,13,11],
[8,7,7,0,7,6,11,8],
[10,11,7,14,0,9,13,12],
[10,12,11,15,12,0,13,11],
[9,8,8,10,8,8,0,12],
[6,4,10,13,9,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,10,8,12,12,15],
[10,0,11,14,10,9,9,8],
[8,10,0,12,6,13,7,13],
[11,7,9,0,10,8,9,12],
[13,11,15,11,0,9,13,11],
[9,12,8,13,12,0,9,13],
[9,12,14,12,8,12,0,13],
[6,13,8,9,10,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,15,17,15,9,9,13],
[13,0,13,15,9,9,13,13],
[6,8,0,8,6,0,15,10],
[4,6,13,0,6,0,9,13],
[6,12,15,15,0,11,13,13],
[12,12,21,21,10,0,19,19],
[12,8,6,12,8,2,0,4],
[8,8,11,8,8,2,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,12,11,10,9,14],
[8,0,10,8,10,10,6,10],
[12,11,0,9,6,9,6,13],
[9,13,12,0,14,10,6,11],
[10,11,15,7,0,13,8,14],
[11,11,12,11,8,0,11,16],
[12,15,15,15,13,10,0,11],
[7,11,8,10,7,5,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,10,13,14,12,13],
[8,0,16,8,5,10,9,11],
[6,5,0,7,6,8,9,11],
[11,13,14,0,8,10,10,12],
[8,16,15,13,0,12,12,16],
[7,11,13,11,9,0,6,11],
[9,12,12,11,9,15,0,12],
[8,10,10,9,5,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,9,13,8,7,13],
[10,0,12,9,13,12,11,8],
[14,9,0,11,12,13,7,13],
[12,12,10,0,14,13,9,13],
[8,8,9,7,0,3,6,5],
[13,9,8,8,18,0,6,11],
[14,10,14,12,15,15,0,15],
[8,13,8,8,16,10,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,6,10,12,13,12,10],
[14,0,13,8,10,17,15,15],
[15,8,0,11,12,18,15,15],
[11,13,10,0,11,14,13,15],
[9,11,9,10,0,14,12,12],
[8,4,3,7,7,0,7,7],
[9,6,6,8,9,14,0,10],
[11,6,6,6,9,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,8,13,7,13,10,10],
[6,0,4,10,3,14,3,10],
[13,17,0,15,13,19,9,12],
[8,11,6,0,9,13,9,7],
[14,18,8,12,0,16,13,10],
[8,7,2,8,5,0,3,11],
[11,18,12,12,8,18,0,10],
[11,11,9,14,11,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,11,6,10,8,6],
[12,0,11,12,8,12,9,6],
[13,10,0,12,9,12,10,13],
[10,9,9,0,8,11,11,6],
[15,13,12,13,0,13,9,12],
[11,9,9,10,8,0,9,7],
[13,12,11,10,12,12,0,11],
[15,15,8,15,9,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,7,12,21,21,7,11],
[5,0,10,6,16,11,7,6],
[14,11,0,10,20,16,11,5],
[9,15,11,0,16,16,11,16],
[0,5,1,5,0,11,5,4],
[0,10,5,5,10,0,5,9],
[14,14,10,10,16,16,0,10],
[10,15,16,5,17,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,15,9,8,11,8],
[10,0,11,8,8,11,7,6],
[7,10,0,11,11,8,7,7],
[6,13,10,0,10,13,9,12],
[12,13,10,11,0,12,10,13],
[13,10,13,8,9,0,8,10],
[10,14,14,12,11,13,0,8],
[13,15,14,9,8,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,7,7,11,7,10,10],
[7,0,7,14,14,7,14,7],
[14,14,0,11,18,11,21,10],
[14,7,10,0,11,4,10,3],
[10,7,3,10,0,0,10,3],
[14,14,10,17,21,0,17,17],
[11,7,0,11,11,4,0,10],
[11,14,11,18,18,4,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,3,3,8,20,1,18],
[6,0,6,6,11,14,7,12],
[18,15,0,8,8,20,12,18],
[18,15,13,0,12,21,4,18],
[13,10,13,9,0,13,7,13],
[1,7,1,0,8,0,1,4],
[20,14,9,17,14,20,0,18],
[3,9,3,3,8,17,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,8,10,7,7,8],
[11,0,10,9,9,7,7,8],
[12,11,0,6,12,9,7,13],
[13,12,15,0,17,11,8,12],
[11,12,9,4,0,7,7,11],
[14,14,12,10,14,0,11,10],
[14,14,14,13,14,10,0,14],
[13,13,8,9,10,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,13,5,3,7,14,9],
[17,0,15,3,14,9,17,10],
[8,6,0,4,9,8,13,10],
[16,18,17,0,13,10,18,14],
[18,7,12,8,0,14,15,16],
[14,12,13,11,7,0,14,16],
[7,4,8,3,6,7,0,9],
[12,11,11,7,5,5,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,17,13,15,10,17,9],
[15,0,13,9,11,9,17,5],
[4,8,0,7,11,4,9,9],
[8,12,14,0,12,12,10,7],
[6,10,10,9,0,7,12,7],
[11,12,17,9,14,0,15,14],
[4,4,12,11,9,6,0,7],
[12,16,12,14,14,7,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,8,5,10,9,17],
[13,0,11,14,11,13,10,21],
[12,10,0,9,7,10,12,17],
[13,7,12,0,6,8,10,15],
[16,10,14,15,0,17,10,18],
[11,8,11,13,4,0,10,15],
[12,11,9,11,11,11,0,17],
[4,0,4,6,3,6,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,10,7,10,7,10],
[11,0,12,8,12,10,7,14],
[12,9,0,9,12,9,8,10],
[11,13,12,0,10,10,9,14],
[14,9,9,11,0,11,12,11],
[11,11,12,11,10,0,6,12],
[14,14,13,12,9,15,0,16],
[11,7,11,7,10,9,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,11,10,11,10,14],
[11,0,14,9,13,13,13,15],
[9,7,0,4,7,6,9,10],
[10,12,17,0,13,12,10,15],
[11,8,14,8,0,9,7,15],
[10,8,15,9,12,0,12,14],
[11,8,12,11,14,9,0,11],
[7,6,11,6,6,7,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,9,15,9,16,9],
[12,0,7,7,13,8,14,12],
[13,14,0,13,14,8,14,12],
[12,14,8,0,16,9,14,9],
[6,8,7,5,0,4,16,9],
[12,13,13,12,17,0,17,10],
[5,7,7,7,5,4,0,7],
[12,9,9,12,12,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,9,16,10,13,12],
[11,0,12,7,15,11,14,11],
[9,9,0,8,10,8,9,10],
[12,14,13,0,15,12,13,10],
[5,6,11,6,0,8,11,11],
[11,10,13,9,13,0,12,11],
[8,7,12,8,10,9,0,10],
[9,10,11,11,10,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,11,8,10,4,1],
[14,0,13,13,14,10,10,8],
[11,8,0,15,11,15,9,8],
[10,8,6,0,9,12,7,6],
[13,7,10,12,0,10,10,7],
[11,11,6,9,11,0,11,11],
[17,11,12,14,11,10,0,9],
[20,13,13,15,14,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,15,9,12,9,11],
[8,0,9,12,10,8,12,8],
[9,12,0,11,10,8,12,8],
[6,9,10,0,10,8,10,8],
[12,11,11,11,0,10,12,9],
[9,13,13,13,11,0,14,13],
[12,9,9,11,9,7,0,9],
[10,13,13,13,12,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,7,12,13,13,9],
[14,0,11,11,17,17,13,9],
[11,10,0,12,14,12,10,7],
[14,10,9,0,12,14,11,11],
[9,4,7,9,0,14,8,6],
[8,4,9,7,7,0,10,6],
[8,8,11,10,13,11,0,10],
[12,12,14,10,15,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,10,5,8,11,8],
[11,0,16,12,11,14,9,10],
[8,5,0,10,4,10,7,4],
[11,9,11,0,5,14,9,5],
[16,10,17,16,0,16,15,13],
[13,7,11,7,5,0,10,9],
[10,12,14,12,6,11,0,6],
[13,11,17,16,8,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,9,12,12,13,11],
[10,0,15,12,12,15,17,13],
[9,6,0,9,11,8,8,6],
[12,9,12,0,10,12,11,11],
[9,9,10,11,0,14,10,9],
[9,6,13,9,7,0,8,11],
[8,4,13,10,11,13,0,12],
[10,8,15,10,12,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,12,11,8,12,7],
[14,0,15,12,14,9,12,9],
[11,6,0,10,11,8,8,4],
[9,9,11,0,15,12,7,11],
[10,7,10,6,0,8,9,7],
[13,12,13,9,13,0,12,9],
[9,9,13,14,12,9,0,10],
[14,12,17,10,14,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,11,11,10,13,7],
[10,0,13,12,10,9,13,9],
[7,8,0,6,9,8,7,6],
[10,9,15,0,11,9,12,11],
[10,11,12,10,0,10,10,8],
[11,12,13,12,11,0,12,10],
[8,8,14,9,11,9,0,11],
[14,12,15,10,13,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,11,11,7,12,10],
[10,0,9,13,7,10,9,1],
[9,12,0,12,7,9,8,5],
[10,8,9,0,6,12,5,7],
[10,14,14,15,0,11,14,10],
[14,11,12,9,10,0,8,6],
[9,12,13,16,7,13,0,11],
[11,20,16,14,11,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,16,8,12,12,12],
[9,0,15,6,14,12,10,11],
[6,6,0,8,12,16,10,14],
[5,15,13,0,11,12,9,11],
[13,7,9,10,0,6,5,5],
[9,9,5,9,15,0,7,11],
[9,11,11,12,16,14,0,15],
[9,10,7,10,16,10,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,10,13,13,13,6],
[8,0,8,15,15,8,15,8],
[5,13,0,15,7,5,7,5],
[11,6,6,0,6,11,6,11],
[8,6,14,15,0,8,16,5],
[8,13,16,10,13,0,16,5],
[8,6,14,15,5,5,0,5],
[15,13,16,10,16,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,10,6,8,12,14],
[11,0,12,14,3,10,10,17],
[13,9,0,8,7,12,11,10],
[11,7,13,0,6,13,9,11],
[15,18,14,15,0,9,12,15],
[13,11,9,8,12,0,15,10],
[9,11,10,12,9,6,0,13],
[7,4,11,10,6,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,11,16,6,10,12],
[8,0,10,4,16,6,10,9],
[6,11,0,5,15,10,9,11],
[10,17,16,0,16,7,8,11],
[5,5,6,5,0,7,11,8],
[15,15,11,14,14,0,9,6],
[11,11,12,13,10,12,0,15],
[9,12,10,10,13,15,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,14,11,13,14,18,8],
[0,0,10,4,3,0,8,1],
[7,11,0,1,3,0,15,1],
[10,17,20,0,6,10,17,7],
[8,18,18,15,0,15,15,15],
[7,21,21,11,6,0,15,1],
[3,13,6,4,6,6,0,0],
[13,20,20,14,6,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,13,13,12,14,10],
[10,0,17,14,15,13,13,11],
[5,4,0,6,13,10,9,10],
[8,7,15,0,16,11,11,8],
[8,6,8,5,0,7,13,7],
[9,8,11,10,14,0,12,5],
[7,8,12,10,8,9,0,8],
[11,10,11,13,14,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,13,12,15,14,12],
[11,0,15,13,8,17,16,12],
[7,6,0,12,8,11,12,10],
[8,8,9,0,5,10,13,4],
[9,13,13,16,0,15,13,13],
[6,4,10,11,6,0,11,7],
[7,5,9,8,8,10,0,6],
[9,9,11,17,8,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,13,10,14,10,13,6],
[15,0,13,10,16,16,12,14],
[8,8,0,11,11,12,10,7],
[11,11,10,0,9,10,19,9],
[7,5,10,12,0,9,12,6],
[11,5,9,11,12,0,13,8],
[8,9,11,2,9,8,0,8],
[15,7,14,12,15,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,11,7,17,18,18],
[9,0,11,9,11,15,10,12],
[7,10,0,14,5,18,14,21],
[10,12,7,0,11,14,14,7],
[14,10,16,10,0,18,18,17],
[4,6,3,7,3,0,6,8],
[3,11,7,7,3,15,0,8],
[3,9,0,14,4,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,11,11,7,11,12],
[12,0,13,11,11,11,13,10],
[9,8,0,12,13,9,10,10],
[10,10,9,0,11,9,14,11],
[10,10,8,10,0,7,12,9],
[14,10,12,12,14,0,13,11],
[10,8,11,7,9,8,0,8],
[9,11,11,10,12,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,9,9,12,11,6,11],
[6,0,12,4,5,10,7,8],
[12,9,0,8,9,12,13,12],
[12,17,13,0,11,15,10,12],
[9,16,12,10,0,11,7,7],
[10,11,9,6,10,0,11,1],
[15,14,8,11,14,10,0,8],
[10,13,9,9,14,20,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,6,13,10,10,15,12],
[9,0,9,12,8,11,13,11],
[15,12,0,13,10,12,15,15],
[8,9,8,0,14,13,17,11],
[11,13,11,7,0,9,7,10],
[11,10,9,8,12,0,14,12],
[6,8,6,4,14,7,0,10],
[9,10,6,10,11,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,11,11,9,10,12],
[14,0,15,12,10,11,12,14],
[10,6,0,5,8,7,8,11],
[10,9,16,0,10,9,12,14],
[10,11,13,11,0,6,11,11],
[12,10,14,12,15,0,12,11],
[11,9,13,9,10,9,0,10],
[9,7,10,7,10,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,7,10,13,11,9,9],
[5,0,4,6,11,8,5,6],
[14,17,0,10,14,16,11,10],
[11,15,11,0,11,12,9,12],
[8,10,7,10,0,7,9,7],
[10,13,5,9,14,0,8,10],
[12,16,10,12,12,13,0,10],
[12,15,11,9,14,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,11,15,1,6,6],
[14,0,10,16,19,10,11,10],
[16,11,0,15,15,11,11,10],
[10,5,6,0,14,6,11,9],
[6,2,6,7,0,6,2,6],
[20,11,10,15,15,0,16,20],
[15,10,10,10,19,5,0,9],
[15,11,11,12,15,1,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,11,12,6,10,9],
[9,0,7,9,11,11,6,6],
[13,14,0,11,13,11,8,11],
[10,12,10,0,14,9,9,12],
[9,10,8,7,0,7,8,9],
[15,10,10,12,14,0,11,14],
[11,15,13,12,13,10,0,13],
[12,15,10,9,12,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,9,17,21,9,12,10],
[6,0,12,13,12,9,12,10],
[12,9,0,13,21,8,12,14],
[4,8,8,0,13,11,12,5],
[0,9,0,8,0,3,8,5],
[12,12,13,10,18,0,13,11],
[9,9,9,9,13,8,0,9],
[11,11,7,16,16,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,9,9,13,8,8],
[8,0,8,7,9,11,8,7],
[12,13,0,11,11,11,11,9],
[12,14,10,0,10,10,12,11],
[12,12,10,11,0,13,11,13],
[8,10,10,11,8,0,11,8],
[13,13,10,9,10,10,0,10],
[13,14,12,10,8,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,11,8,11,12,11],
[12,0,18,10,10,10,17,13],
[9,3,0,7,7,11,10,11],
[10,11,14,0,14,10,14,10],
[13,11,14,7,0,8,12,14],
[10,11,10,11,13,0,9,14],
[9,4,11,7,9,12,0,14],
[10,8,10,11,7,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,14,13,10,12,13],
[9,0,15,14,14,15,14,15],
[6,6,0,10,8,10,13,10],
[7,7,11,0,7,11,12,10],
[8,7,13,14,0,16,11,13],
[11,6,11,10,5,0,10,10],
[9,7,8,9,10,11,0,11],
[8,6,11,11,8,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,10,8,9,11,15],
[9,0,13,14,11,12,13,14],
[13,8,0,11,10,11,10,11],
[11,7,10,0,10,7,11,10],
[13,10,11,11,0,10,10,13],
[12,9,10,14,11,0,13,9],
[10,8,11,10,11,8,0,11],
[6,7,10,11,8,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,13,12,16,11,10],
[7,0,2,2,3,9,7,6],
[12,19,0,10,9,7,12,15],
[8,19,11,0,11,9,11,13],
[9,18,12,10,0,11,13,12],
[5,12,14,12,10,0,10,13],
[10,14,9,10,8,11,0,12],
[11,15,6,8,9,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,12,14,10,12,8],
[10,0,12,13,13,11,12,13],
[8,9,0,15,11,15,11,15],
[9,8,6,0,9,9,5,11],
[7,8,10,12,0,11,7,11],
[11,10,6,12,10,0,8,10],
[9,9,10,16,14,13,0,11],
[13,8,6,10,10,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,10,11,10,13,3],
[11,0,14,14,14,10,9,13],
[6,7,0,4,8,3,7,6],
[11,7,17,0,12,13,11,8],
[10,7,13,9,0,5,12,8],
[11,11,18,8,16,0,8,7],
[8,12,14,10,9,13,0,9],
[18,8,15,13,13,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,8,10,6,13,12,4],
[21,0,11,16,14,17,18,10],
[13,10,0,12,10,10,9,13],
[11,5,9,0,9,16,16,8],
[15,7,11,12,0,10,11,10],
[8,4,11,5,11,0,7,10],
[9,3,12,5,10,14,0,6],
[17,11,8,13,11,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,9,9,10,12,10],
[9,0,9,10,10,9,11,12],
[9,12,0,11,14,10,13,11],
[12,11,10,0,10,11,11,8],
[12,11,7,11,0,6,12,11],
[11,12,11,10,15,0,11,11],
[9,10,8,10,9,10,0,10],
[11,9,10,13,10,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,12,8,11,15,14],
[12,0,13,13,11,9,12,11],
[9,8,0,9,10,10,13,9],
[9,8,12,0,11,7,12,12],
[13,10,11,10,0,10,12,12],
[10,12,11,14,11,0,13,11],
[6,9,8,9,9,8,0,11],
[7,10,12,9,9,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,12,12,12,12,8],
[9,0,10,13,15,10,11,9],
[10,11,0,11,17,12,15,12],
[9,8,10,0,9,10,10,7],
[9,6,4,12,0,11,9,6],
[9,11,9,11,10,0,9,7],
[9,10,6,11,12,12,0,9],
[13,12,9,14,15,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,6,8,7,11,11],
[10,0,8,13,10,9,10,11],
[12,13,0,15,12,12,8,15],
[15,8,6,0,9,8,8,9],
[13,11,9,12,0,9,10,15],
[14,12,9,13,12,0,13,15],
[10,11,13,13,11,8,0,10],
[10,10,6,12,6,6,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,10,10,13,10,13],
[10,0,12,9,12,11,6,13],
[8,9,0,8,10,7,7,7],
[11,12,13,0,10,14,10,14],
[11,9,11,11,0,11,9,11],
[8,10,14,7,10,0,12,7],
[11,15,14,11,12,9,0,10],
[8,8,14,7,10,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,6,13,9,9,8],
[12,0,8,6,15,12,7,9],
[15,13,0,9,16,14,13,13],
[15,15,12,0,15,9,9,13],
[8,6,5,6,0,7,6,6],
[12,9,7,12,14,0,12,12],
[12,14,8,12,15,9,0,10],
[13,12,8,8,15,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,13,12,15,10,12],
[5,0,9,9,10,9,13,10],
[10,12,0,8,12,13,14,13],
[8,12,13,0,14,14,12,12],
[9,11,9,7,0,8,11,7],
[6,12,8,7,13,0,10,10],
[11,8,7,9,10,11,0,9],
[9,11,8,9,14,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,12,15,18,11,7],
[9,0,14,11,12,12,12,10],
[7,7,0,12,15,10,11,9],
[9,10,9,0,14,9,7,7],
[6,9,6,7,0,8,9,2],
[3,9,11,12,13,0,6,7],
[10,9,10,14,12,15,0,13],
[14,11,12,14,19,14,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,4,8,7,4,8,8],
[17,0,5,7,13,4,13,11],
[17,16,0,7,15,8,13,11],
[13,14,14,0,13,6,6,11],
[14,8,6,8,0,4,10,4],
[17,17,13,15,17,0,9,11],
[13,8,8,15,11,12,0,11],
[13,10,10,10,17,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,16,12,13,11,15],
[9,0,11,13,9,5,9,9],
[13,10,0,8,10,9,9,9],
[5,8,13,0,10,5,5,9],
[9,12,11,11,0,9,5,9],
[8,16,12,16,12,0,6,13],
[10,12,12,16,16,15,0,19],
[6,12,12,12,12,8,2,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,9,9,5,9,9,5],
[16,0,11,14,5,16,11,17],
[12,10,0,10,5,12,17,10],
[12,7,11,0,12,12,11,12],
[16,16,16,9,0,11,16,16],
[12,5,9,9,10,0,16,5],
[12,10,4,10,5,5,0,10],
[16,4,11,9,5,16,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,7,12,7,9,12],
[12,0,11,9,15,11,14,11],
[15,10,0,5,14,11,14,12],
[14,12,16,0,18,11,15,9],
[9,6,7,3,0,7,9,11],
[14,10,10,10,14,0,15,10],
[12,7,7,6,12,6,0,12],
[9,10,9,12,10,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,6,5,6,3,10],
[11,0,9,7,14,6,11,12],
[11,12,0,8,9,6,6,12],
[15,14,13,0,13,7,11,16],
[16,7,12,8,0,9,5,15],
[15,15,15,14,12,0,12,10],
[18,10,15,10,16,9,0,17],
[11,9,9,5,6,11,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,4,8,4,8,10,8],
[18,0,9,12,13,12,11,12],
[17,12,0,13,10,11,13,9],
[13,9,8,0,12,13,14,12],
[17,8,11,9,0,12,13,10],
[13,9,10,8,9,0,16,6],
[11,10,8,7,8,5,0,8],
[13,9,12,9,11,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,11,8,12,14,13],
[6,0,13,11,6,11,14,12],
[10,8,0,11,11,11,15,14],
[10,10,10,0,12,12,16,13],
[13,15,10,9,0,9,16,12],
[9,10,10,9,12,0,15,11],
[7,7,6,5,5,6,0,8],
[8,9,7,8,9,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,13,9,10,14,12],
[7,0,4,9,5,10,7,7],
[8,17,0,12,9,12,11,13],
[8,12,9,0,9,10,10,10],
[12,16,12,12,0,9,11,12],
[11,11,9,11,12,0,9,8],
[7,14,10,11,10,12,0,10],
[9,14,8,11,9,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,7,9,6,9,7,10],
[15,0,14,9,10,13,11,10],
[14,7,0,9,10,9,10,12],
[12,12,12,0,8,11,10,11],
[15,11,11,13,0,13,9,9],
[12,8,12,10,8,0,7,7],
[14,10,11,11,12,14,0,11],
[11,11,9,10,12,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,13,11,9,17,11],
[11,0,15,10,10,11,11,9],
[7,6,0,10,5,11,14,10],
[8,11,11,0,9,11,11,9],
[10,11,16,12,0,12,11,10],
[12,10,10,10,9,0,12,9],
[4,10,7,10,10,9,0,7],
[10,12,11,12,11,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,14,13,13,14,11],
[5,0,8,9,9,5,9,8],
[11,13,0,11,10,9,11,10],
[7,12,10,0,11,9,12,12],
[8,12,11,10,0,13,15,12],
[8,16,12,12,8,0,13,13],
[7,12,10,9,6,8,0,7],
[10,13,11,9,9,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,5,8,4,6,9,8],
[12,0,7,10,5,2,11,14],
[16,14,0,14,9,13,12,13],
[13,11,7,0,8,10,13,6],
[17,16,12,13,0,14,9,14],
[15,19,8,11,7,0,12,12],
[12,10,9,8,12,9,0,12],
[13,7,8,15,7,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,10,9,8,6,10],
[10,0,11,11,9,8,8,12],
[12,10,0,11,9,8,9,12],
[11,10,10,0,11,9,12,14],
[12,12,12,10,0,12,13,14],
[13,13,13,12,9,0,8,10],
[15,13,12,9,8,13,0,10],
[11,9,9,7,7,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,9,12,9,9,8],
[8,0,4,6,2,8,6,2],
[11,17,0,5,15,19,15,12],
[12,15,16,0,13,16,14,10],
[9,19,6,8,0,16,7,3],
[12,13,2,5,5,0,4,3],
[12,15,6,7,14,17,0,11],
[13,19,9,11,18,18,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,9,7,10,8,10],
[8,0,11,9,9,10,8,9],
[12,10,0,11,11,11,9,10],
[12,12,10,0,12,10,13,13],
[14,12,10,9,0,11,11,12],
[11,11,10,11,10,0,7,6],
[13,13,12,8,10,14,0,11],
[11,12,11,8,9,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,9,15,16,14,15],
[7,0,13,10,16,11,9,7],
[6,8,0,6,13,8,11,8],
[12,11,15,0,15,11,10,12],
[6,5,8,6,0,8,5,5],
[5,10,13,10,13,0,10,9],
[7,12,10,11,16,11,0,9],
[6,14,13,9,16,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,6,15,6,14,8],
[11,0,6,11,11,11,11,11],
[7,15,0,11,15,11,11,7],
[15,10,10,0,15,4,12,15],
[6,10,6,6,0,6,6,2],
[15,10,10,17,15,0,10,15],
[7,10,10,9,15,11,0,15],
[13,10,14,6,19,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,17,11,14,19,15],
[11,0,14,17,7,12,17,18],
[8,7,0,8,5,9,12,12],
[4,4,13,0,4,8,11,8],
[10,14,16,17,0,16,17,18],
[7,9,12,13,5,0,13,13],
[2,4,9,10,4,8,0,13],
[6,3,9,13,3,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,14,10,13,16,13],
[7,0,10,12,9,11,14,15],
[9,11,0,17,13,9,14,11],
[7,9,4,0,9,7,7,6],
[11,12,8,12,0,14,12,12],
[8,10,12,14,7,0,11,10],
[5,7,7,14,9,10,0,11],
[8,6,10,15,9,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,10,11,10,11,10,14],
[15,0,10,12,10,12,11,16],
[11,11,0,14,11,7,11,13],
[10,9,7,0,8,7,9,12],
[11,11,10,13,0,9,8,16],
[10,9,14,14,12,0,11,12],
[11,10,10,12,13,10,0,13],
[7,5,8,9,5,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,10,10,10,8,12,8],
[15,0,12,11,14,7,15,9],
[11,9,0,12,14,11,15,10],
[11,10,9,0,14,11,16,14],
[11,7,7,7,0,9,12,9],
[13,14,10,10,12,0,14,10],
[9,6,6,5,9,7,0,7],
[13,12,11,7,12,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,9,12,8,6,12],
[10,0,10,9,11,10,6,9],
[14,11,0,8,12,13,8,14],
[12,12,13,0,10,14,13,15],
[9,10,9,11,0,10,5,9],
[13,11,8,7,11,0,10,11],
[15,15,13,8,16,11,0,16],
[9,12,7,6,12,10,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,6,6,7,6,5],
[13,0,12,7,12,10,9,8],
[13,9,0,12,14,10,7,9],
[15,14,9,0,8,14,9,11],
[15,9,7,13,0,12,10,6],
[14,11,11,7,9,0,9,6],
[15,12,14,12,11,12,0,10],
[16,13,12,10,15,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,10,8,10,14,11],
[9,0,10,10,12,11,12,12],
[8,11,0,7,7,9,9,10],
[11,11,14,0,9,13,15,12],
[13,9,14,12,0,12,13,11],
[11,10,12,8,9,0,12,10],
[7,9,12,6,8,9,0,11],
[10,9,11,9,10,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,7,14,12,16,17],
[12,0,9,8,12,13,14,13],
[11,12,0,14,11,9,17,13],
[14,13,7,0,16,14,15,17],
[7,9,10,5,0,7,10,11],
[9,8,12,7,14,0,10,15],
[5,7,4,6,11,11,0,7],
[4,8,8,4,10,6,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,10,12,8,16,7],
[5,0,10,7,16,8,7,8],
[9,11,0,12,11,12,8,12],
[11,14,9,0,10,13,16,14],
[9,5,10,11,0,12,12,8],
[13,13,9,8,9,0,15,12],
[5,14,13,5,9,6,0,7],
[14,13,9,7,13,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,15,13,10,13,18],
[8,0,4,5,7,8,8,8],
[8,17,0,8,11,8,14,14],
[6,16,13,0,13,13,9,9],
[8,14,10,8,0,8,11,8],
[11,13,13,8,13,0,14,14],
[8,13,7,12,10,7,0,12],
[3,13,7,12,13,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,9,9,12,8,10],
[13,0,13,11,13,11,10,13],
[14,8,0,10,11,11,11,13],
[12,10,11,0,10,15,12,14],
[12,8,10,11,0,13,9,11],
[9,10,10,6,8,0,10,8],
[13,11,10,9,12,11,0,12],
[11,8,8,7,10,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,2,4,7,0,2,10,9],
[19,0,11,11,8,8,13,14],
[17,10,0,11,12,7,18,9],
[14,10,10,0,6,7,14,10],
[21,13,9,15,0,11,16,10],
[19,13,14,14,10,0,15,14],
[11,8,3,7,5,6,0,6],
[12,7,12,11,11,7,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,12,9,11,10,6],
[8,0,8,10,9,7,8,6],
[9,13,0,13,11,11,9,12],
[9,11,8,0,9,8,6,5],
[12,12,10,12,0,15,10,5],
[10,14,10,13,6,0,9,7],
[11,13,12,15,11,12,0,6],
[15,15,9,16,16,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,9,8,9,17,9],
[13,0,12,7,10,13,19,9],
[11,9,0,9,9,16,13,12],
[12,14,12,0,17,12,15,9],
[13,11,12,4,0,13,15,9],
[12,8,5,9,8,0,12,7],
[4,2,8,6,6,9,0,5],
[12,12,9,12,12,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,6,10,7,4,5,5],
[17,0,10,11,14,12,7,10],
[15,11,0,15,13,14,14,9],
[11,10,6,0,8,8,8,9],
[14,7,8,13,0,11,10,10],
[17,9,7,13,10,0,8,11],
[16,14,7,13,11,13,0,12],
[16,11,12,12,11,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,10,14,8,12,10],
[9,0,11,11,11,8,12,13],
[11,10,0,13,13,9,13,9],
[11,10,8,0,12,14,13,13],
[7,10,8,9,0,8,9,6],
[13,13,12,7,13,0,14,13],
[9,9,8,8,12,7,0,11],
[11,8,12,8,15,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,13,15,11,11,13],
[11,0,14,11,13,8,7,11],
[9,7,0,10,10,5,10,13],
[8,10,11,0,11,6,8,10],
[6,8,11,10,0,6,6,9],
[10,13,16,15,15,0,15,16],
[10,14,11,13,15,6,0,13],
[8,10,8,11,12,5,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,14,12,11,6,13],
[6,0,9,9,8,4,8,6],
[10,12,0,9,15,12,12,10],
[7,12,12,0,16,12,10,8],
[9,13,6,5,0,12,12,12],
[10,17,9,9,9,0,13,12],
[15,13,9,11,9,8,0,14],
[8,15,11,13,9,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,15,14,13,12,10],
[8,0,11,13,12,12,10,12],
[6,10,0,11,10,10,9,8],
[6,8,10,0,13,8,9,7],
[7,9,11,8,0,13,9,7],
[8,9,11,13,8,0,10,8],
[9,11,12,12,12,11,0,10],
[11,9,13,14,14,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,13,16,10,11,13],
[3,0,5,4,7,10,6,10],
[6,16,0,13,9,14,9,9],
[8,17,8,0,10,14,11,13],
[5,14,12,11,0,13,8,12],
[11,11,7,7,8,0,10,8],
[10,15,12,10,13,11,0,10],
[8,11,12,8,9,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,7,7,7,10,9],
[13,0,11,10,9,12,14,12],
[14,10,0,9,13,13,13,12],
[14,11,12,0,10,8,13,12],
[14,12,8,11,0,13,14,10],
[14,9,8,13,8,0,13,11],
[11,7,8,8,7,8,0,8],
[12,9,9,9,11,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,11,7,11,10,9],
[12,0,12,11,9,12,9,9],
[11,9,0,11,9,8,7,8],
[10,10,10,0,11,9,9,8],
[14,12,12,10,0,9,12,11],
[10,9,13,12,12,0,10,4],
[11,12,14,12,9,11,0,12],
[12,12,13,13,10,17,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,13,13,5,8,14],
[9,0,9,9,13,6,8,11],
[8,12,0,10,12,11,10,10],
[8,12,11,0,12,11,8,10],
[8,8,9,9,0,6,11,12],
[16,15,10,10,15,0,7,13],
[13,13,11,13,10,14,0,8],
[7,10,11,11,9,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,9,21,4,7,7,0],
[21,0,12,21,21,16,7,12],
[12,9,0,12,9,12,16,12],
[0,0,9,0,0,3,7,0],
[17,0,12,21,0,7,7,3],
[14,5,9,18,14,0,12,14],
[14,14,5,14,14,9,0,9],
[21,9,9,21,18,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,13,7,8,7,4],
[9,0,12,12,9,8,5,8],
[6,9,0,9,4,10,6,5],
[8,9,12,0,6,11,9,6],
[14,12,17,15,0,14,11,6],
[13,13,11,10,7,0,7,6],
[14,16,15,12,10,14,0,12],
[17,13,16,15,15,15,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,12,10,13,13,15],
[10,0,11,10,11,13,13,13],
[8,10,0,11,8,10,11,13],
[9,11,10,0,8,10,11,9],
[11,10,13,13,0,12,12,14],
[8,8,11,11,9,0,13,12],
[8,8,10,10,9,8,0,11],
[6,8,8,12,7,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,0,9,9,18,12],
[12,0,3,12,12,12,12,3],
[12,18,0,9,9,12,9,12],
[21,9,12,0,21,12,18,12],
[12,9,12,0,0,12,18,12],
[12,9,9,9,9,0,9,12],
[3,9,12,3,3,12,0,12],
[9,18,9,9,9,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,6,6,11,14,12],
[9,0,9,6,8,11,9,12],
[14,12,0,8,11,12,16,13],
[15,15,13,0,14,10,16,13],
[15,13,10,7,0,10,13,15],
[10,10,9,11,11,0,12,13],
[7,12,5,5,8,9,0,12],
[9,9,8,8,6,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,12,13,9,5,11],
[12,0,11,11,13,13,14,5],
[14,10,0,10,16,13,12,8],
[9,10,11,0,11,13,4,12],
[8,8,5,10,0,10,8,8],
[12,8,8,8,11,0,9,6],
[16,7,9,17,13,12,0,9],
[10,16,13,9,13,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,9,11,21,17,19],
[12,0,2,9,13,12,10,21],
[12,19,0,19,19,12,10,19],
[12,12,2,0,12,12,12,21],
[10,8,2,9,0,12,8,19],
[0,9,9,9,9,0,9,9],
[4,11,11,9,13,12,0,13],
[2,0,2,0,2,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,9,11,14,12,14,13],
[3,0,9,6,5,8,9,8],
[12,12,0,12,9,12,14,12],
[10,15,9,0,8,6,12,7],
[7,16,12,13,0,11,12,13],
[9,13,9,15,10,0,13,11],
[7,12,7,9,9,8,0,10],
[8,13,9,14,8,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,12,11,10,10,11],
[9,0,13,12,13,11,9,12],
[11,8,0,9,13,9,7,11],
[9,9,12,0,9,8,9,12],
[10,8,8,12,0,8,12,10],
[11,10,12,13,13,0,10,14],
[11,12,14,12,9,11,0,13],
[10,9,10,9,11,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,7,9,8,13,10],
[11,0,9,4,8,8,8,8],
[11,12,0,9,7,8,11,7],
[14,17,12,0,13,11,16,9],
[12,13,14,8,0,11,14,10],
[13,13,13,10,10,0,15,12],
[8,13,10,5,7,6,0,8],
[11,13,14,12,11,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,12,10,10,13,15],
[12,0,9,11,10,9,9,12],
[10,12,0,12,9,12,12,13],
[9,10,9,0,7,11,11,14],
[11,11,12,14,0,10,8,14],
[11,12,9,10,11,0,15,11],
[8,12,9,10,13,6,0,11],
[6,9,8,7,7,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,13,15,10,8,9],
[8,0,8,11,12,7,11,9],
[9,13,0,8,15,12,10,12],
[8,10,13,0,13,9,5,10],
[6,9,6,8,0,8,5,10],
[11,14,9,12,13,0,10,9],
[13,10,11,16,16,11,0,13],
[12,12,9,11,11,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,6,9,2,5,16,10],
[11,0,10,9,8,11,10,13],
[15,11,0,13,13,9,20,15],
[12,12,8,0,12,8,18,12],
[19,13,8,9,0,15,16,17],
[16,10,12,13,6,0,14,16],
[5,11,1,3,5,7,0,5],
[11,8,6,9,4,5,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,6,1,11,6,11,9],
[18,0,11,1,11,10,15,9],
[15,10,0,8,6,8,9,9],
[20,20,13,0,11,10,14,14],
[10,10,15,10,0,13,15,8],
[15,11,13,11,8,0,13,8],
[10,6,12,7,6,8,0,4],
[12,12,12,7,13,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,8,10,14,15,9],
[13,0,15,14,10,16,16,11],
[10,6,0,11,10,18,15,11],
[13,7,10,0,7,13,12,6],
[11,11,11,14,0,10,10,14],
[7,5,3,8,11,0,6,8],
[6,5,6,9,11,15,0,5],
[12,10,10,15,7,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,7,15,14,9,7,14],
[8,0,8,13,13,13,11,15],
[14,13,0,16,12,10,13,17],
[6,8,5,0,9,7,4,9],
[7,8,9,12,0,12,9,13],
[12,8,11,14,9,0,11,14],
[14,10,8,17,12,10,0,15],
[7,6,4,12,8,7,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,8,11,8,11,10],
[10,0,12,12,10,10,13,11],
[11,9,0,10,12,11,10,12],
[13,9,11,0,10,11,11,12],
[10,11,9,11,0,7,11,10],
[13,11,10,10,14,0,12,15],
[10,8,11,10,10,9,0,12],
[11,10,9,9,11,6,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,15,11,15,11,11],
[8,0,6,15,11,8,10,7],
[11,15,0,15,9,11,15,15],
[6,6,6,0,8,6,8,4],
[10,10,12,13,0,12,10,10],
[6,13,10,15,9,0,13,13],
[10,11,6,13,11,8,0,11],
[10,14,6,17,11,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,9,7,7,15,11],
[14,0,8,7,14,11,13,16],
[14,13,0,10,10,11,13,17],
[12,14,11,0,8,9,8,20],
[14,7,11,13,0,12,15,16],
[14,10,10,12,9,0,11,15],
[6,8,8,13,6,10,0,17],
[10,5,4,1,5,6,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,7,14,14,15,11,13],
[7,0,8,11,13,11,9,11],
[14,13,0,13,16,15,10,12],
[7,10,8,0,10,13,7,7],
[7,8,5,11,0,10,8,9],
[6,10,6,8,11,0,7,9],
[10,12,11,14,13,14,0,11],
[8,10,9,14,12,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,11,15,12,11,15],
[11,0,9,11,9,10,7,10],
[6,12,0,8,12,10,9,14],
[10,10,13,0,13,11,9,15],
[6,12,9,8,0,9,7,12],
[9,11,11,10,12,0,11,12],
[10,14,12,12,14,10,0,15],
[6,11,7,6,9,9,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,9,12,10,7,7],
[14,0,15,9,15,15,10,11],
[13,6,0,10,10,11,12,8],
[12,12,11,0,15,13,9,12],
[9,6,11,6,0,11,9,10],
[11,6,10,8,10,0,9,9],
[14,11,9,12,12,12,0,9],
[14,10,13,9,11,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,10,14,10,10,10],
[7,0,10,8,10,6,10,10],
[11,11,0,12,11,11,10,14],
[11,13,9,0,11,10,13,15],
[7,11,10,10,0,7,9,10],
[11,15,10,11,14,0,15,16],
[11,11,11,8,12,6,0,14],
[11,11,7,6,11,5,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,8,10,10,7,12],
[9,0,9,8,8,7,9,11],
[14,12,0,11,9,10,11,13],
[13,13,10,0,12,13,12,13],
[11,13,12,9,0,10,10,12],
[11,14,11,8,11,0,10,17],
[14,12,10,9,11,11,0,14],
[9,10,8,8,9,4,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,10,16,10,2,6],
[9,0,14,14,6,10,6,10],
[11,7,0,10,6,10,6,6],
[11,7,11,0,12,9,9,11],
[5,15,15,9,0,13,5,11],
[11,11,11,12,8,0,12,6],
[19,15,15,12,16,9,0,10],
[15,11,15,10,10,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,11,12,11,10,9],
[11,0,10,12,9,9,12,10],
[11,11,0,9,8,12,10,8],
[10,9,12,0,9,9,7,8],
[9,12,13,12,0,13,10,11],
[10,12,9,12,8,0,9,10],
[11,9,11,14,11,12,0,9],
[12,11,13,13,10,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,8,16,18,16,13,21],
[4,0,8,5,14,16,12,13],
[13,13,0,8,18,19,13,13],
[5,16,13,0,17,16,9,12],
[3,7,3,4,0,7,8,16],
[5,5,2,5,14,0,5,10],
[8,9,8,12,13,16,0,8],
[0,8,8,9,5,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,5,14,10,11,14,12],
[13,0,11,15,10,13,18,12],
[16,10,0,15,13,12,16,12],
[7,6,6,0,6,5,14,9],
[11,11,8,15,0,13,16,15],
[10,8,9,16,8,0,14,11],
[7,3,5,7,5,7,0,10],
[9,9,9,12,6,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,8,0,0,7,0],
[13,0,15,0,0,0,7,0],
[13,6,0,0,0,0,7,6],
[13,21,21,0,6,13,7,6],
[21,21,21,15,0,7,15,14],
[21,21,21,8,14,0,15,14],
[14,14,14,14,6,6,0,14],
[21,21,15,15,7,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,18,10,11,14,15],
[7,0,10,11,12,11,12,17],
[10,11,0,13,11,15,14,15],
[3,10,8,0,12,10,15,12],
[11,9,10,9,0,14,11,18],
[10,10,6,11,7,0,13,14],
[7,9,7,6,10,8,0,13],
[6,4,6,9,3,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,7,4,14,9,4],
[14,0,7,4,9,16,10,9],
[12,14,0,12,5,9,8,7],
[14,17,9,0,9,16,14,9],
[17,12,16,12,0,14,10,16],
[7,5,12,5,7,0,10,4],
[12,11,13,7,11,11,0,13],
[17,12,14,12,5,17,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,9,3,9,9,8],
[12,0,10,8,7,10,14,9],
[14,11,0,11,10,18,10,12],
[12,13,10,0,7,12,12,15],
[18,14,11,14,0,12,11,9],
[12,11,3,9,9,0,11,9],
[12,7,11,9,10,10,0,13],
[13,12,9,6,12,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,10,9,15,13,12],
[9,0,7,7,10,11,14,7],
[13,14,0,14,12,16,13,8],
[11,14,7,0,9,13,13,9],
[12,11,9,12,0,15,11,10],
[6,10,5,8,6,0,12,7],
[8,7,8,8,10,9,0,8],
[9,14,13,12,11,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,10,12,12,8,13],
[10,0,12,10,11,10,8,8],
[7,9,0,11,11,10,8,13],
[11,11,10,0,9,9,9,11],
[9,10,10,12,0,9,7,12],
[9,11,11,12,12,0,12,11],
[13,13,13,12,14,9,0,12],
[8,13,8,10,9,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,15,12,9,15,12],
[10,0,12,13,17,14,13,13],
[12,9,0,16,19,12,15,12],
[6,8,5,0,11,11,9,11],
[9,4,2,10,0,6,9,11],
[12,7,9,10,15,0,13,12],
[6,8,6,12,12,8,0,11],
[9,8,9,10,10,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,6,13,9,10,10],
[11,0,9,11,10,8,8,11],
[14,12,0,15,20,18,14,7],
[15,10,6,0,12,10,10,6],
[8,11,1,9,0,10,8,4],
[12,13,3,11,11,0,8,6],
[11,13,7,11,13,13,0,9],
[11,10,14,15,17,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,6,5,8,11,7,9],
[14,0,15,9,8,9,12,15],
[15,6,0,6,9,10,12,14],
[16,12,15,0,13,9,13,13],
[13,13,12,8,0,11,10,9],
[10,12,11,12,10,0,7,10],
[14,9,9,8,11,14,0,16],
[12,6,7,8,12,11,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,11,14,8,12,13],
[11,0,9,12,16,11,8,13],
[11,12,0,11,13,11,10,10],
[10,9,10,0,12,9,11,10],
[7,5,8,9,0,6,11,7],
[13,10,10,12,15,0,12,13],
[9,13,11,10,10,9,0,10],
[8,8,11,11,14,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,16,13,11,11,14],
[8,0,10,10,10,7,10,8],
[12,11,0,13,12,12,10,10],
[5,11,8,0,8,7,7,7],
[8,11,9,13,0,9,10,13],
[10,14,9,14,12,0,10,10],
[10,11,11,14,11,11,0,14],
[7,13,11,14,8,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,15,7,11,11,12],
[10,0,9,11,6,6,9,8],
[7,12,0,9,6,4,8,9],
[6,10,12,0,3,7,10,7],
[14,15,15,18,0,6,15,15],
[10,15,17,14,15,0,11,14],
[10,12,13,11,6,10,0,8],
[9,13,12,14,6,7,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,10,12,8,9,8],
[10,0,5,5,13,5,3,10],
[13,16,0,14,17,9,14,11],
[11,16,7,0,14,9,6,12],
[9,8,4,7,0,9,1,4],
[13,16,12,12,12,0,9,12],
[12,18,7,15,20,12,0,12],
[13,11,10,9,17,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,15,17,12,16,15],
[10,0,12,14,16,12,19,15],
[13,9,0,14,15,12,18,13],
[6,7,7,0,9,8,12,14],
[4,5,6,12,0,7,15,10],
[9,9,9,13,14,0,13,10],
[5,2,3,9,6,8,0,10],
[6,6,8,7,11,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,17,12,10,11,10],
[10,0,13,10,10,11,14,10],
[6,8,0,9,10,6,8,10],
[4,11,12,0,9,5,11,7],
[9,11,11,12,0,12,10,12],
[11,10,15,16,9,0,14,9],
[10,7,13,10,11,7,0,9],
[11,11,11,14,9,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,11,12,11,9,10],
[11,0,10,10,11,12,9,12],
[8,11,0,9,13,12,12,11],
[10,11,12,0,11,13,11,12],
[9,10,8,10,0,10,9,13],
[10,9,9,8,11,0,9,11],
[12,12,9,10,12,12,0,11],
[11,9,10,9,8,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,10,12,9,11,14],
[9,0,11,11,10,10,8,10],
[11,10,0,13,8,9,10,12],
[11,10,8,0,10,10,12,14],
[9,11,13,11,0,12,10,15],
[12,11,12,11,9,0,8,10],
[10,13,11,9,11,13,0,13],
[7,11,9,7,6,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,10,9,11,10,10],
[11,0,13,10,11,10,12,13],
[11,8,0,7,10,9,8,13],
[11,11,14,0,11,10,11,12],
[12,10,11,10,0,12,10,14],
[10,11,12,11,9,0,8,15],
[11,9,13,10,11,13,0,14],
[11,8,8,9,7,6,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,15,12,9,6,12,9],
[12,0,6,6,9,6,14,9],
[6,15,0,12,11,11,15,11],
[9,15,9,0,12,9,15,9],
[12,12,10,9,0,12,18,15],
[15,15,10,12,9,0,15,15],
[9,7,6,6,3,6,0,6],
[12,12,10,12,6,6,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,8,8,7,10,8],
[15,0,12,10,10,12,8,10],
[13,9,0,8,11,7,13,10],
[13,11,13,0,13,9,10,13],
[13,11,10,8,0,10,12,10],
[14,9,14,12,11,0,14,10],
[11,13,8,11,9,7,0,10],
[13,11,11,8,11,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,12,13,10,15,12],
[8,0,9,7,12,10,12,10],
[9,12,0,15,10,12,9,8],
[9,14,6,0,8,10,12,7],
[8,9,11,13,0,10,12,8],
[11,11,9,11,11,0,12,12],
[6,9,12,9,9,9,0,8],
[9,11,13,14,13,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,21,14,14,7,16,9],
[10,0,10,5,3,10,10,9],
[0,11,0,11,14,7,16,7],
[7,16,10,0,8,10,14,14],
[7,18,7,13,0,11,18,11],
[14,11,14,11,10,0,18,13],
[5,11,5,7,3,3,0,7],
[12,12,14,7,10,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,11,7,8,8,7],
[12,0,7,12,10,11,8,10],
[14,14,0,11,10,15,11,14],
[10,9,10,0,11,11,7,14],
[14,11,11,10,0,13,8,12],
[13,10,6,10,8,0,7,14],
[13,13,10,14,13,14,0,12],
[14,11,7,7,9,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,12,12,4,9,14],
[8,0,8,16,11,8,10,13],
[8,13,0,11,13,6,7,9],
[9,5,10,0,12,8,5,6],
[9,10,8,9,0,7,10,11],
[17,13,15,13,14,0,12,10],
[12,11,14,16,11,9,0,12],
[7,8,12,15,10,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,14,12,11,16,9],
[8,0,11,9,9,4,12,7],
[9,10,0,9,8,8,11,5],
[7,12,12,0,9,7,11,9],
[9,12,13,12,0,9,14,11],
[10,17,13,14,12,0,15,10],
[5,9,10,10,7,6,0,8],
[12,14,16,12,10,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,15,18,12,15,9,15],
[12,0,15,12,12,12,9,12],
[6,6,0,6,12,12,6,0],
[3,9,15,0,9,15,9,15],
[9,9,9,12,0,15,9,9],
[6,9,9,6,6,0,3,9],
[12,12,15,12,12,18,0,6],
[6,9,21,6,12,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,9,13,10,8,8],
[11,0,14,11,12,8,11,10],
[9,7,0,8,11,5,5,8],
[12,10,13,0,11,7,6,5],
[8,9,10,10,0,5,7,5],
[11,13,16,14,16,0,10,13],
[13,10,16,15,14,11,0,9],
[13,11,13,16,16,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,12,11,10,16,11],
[9,0,12,10,11,11,12,8],
[8,9,0,10,7,7,13,9],
[9,11,11,0,10,12,12,10],
[10,10,14,11,0,10,12,10],
[11,10,14,9,11,0,13,10],
[5,9,8,9,9,8,0,7],
[10,13,12,11,11,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,7,7,10,12,10],
[14,0,8,6,14,12,11,13],
[13,13,0,10,8,9,12,12],
[14,15,11,0,13,12,9,15],
[14,7,13,8,0,11,12,12],
[11,9,12,9,10,0,13,12],
[9,10,9,12,9,8,0,10],
[11,8,9,6,9,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,6,14,14,13,7],
[13,0,12,7,10,15,12,9],
[8,9,0,7,7,11,8,8],
[15,14,14,0,12,16,10,13],
[7,11,14,9,0,16,9,8],
[7,6,10,5,5,0,3,7],
[8,9,13,11,12,18,0,11],
[14,12,13,8,13,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,13,9,15,13,15],
[7,0,13,13,11,9,11,10],
[11,8,0,11,11,9,15,12],
[8,8,10,0,12,14,10,9],
[12,10,10,9,0,11,14,8],
[6,12,12,7,10,0,11,7],
[8,10,6,11,7,10,0,6],
[6,11,9,12,13,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,9,12,5,4,2],
[12,0,11,9,13,5,6,6],
[14,10,0,16,12,12,11,12],
[12,12,5,0,12,7,3,8],
[9,8,9,9,0,10,8,4],
[16,16,9,14,11,0,9,11],
[17,15,10,18,13,12,0,10],
[19,15,9,13,17,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,10,8,12,13,9],
[8,0,8,4,6,5,6,7],
[6,13,0,10,5,12,13,13],
[11,17,11,0,11,15,9,10],
[13,15,16,10,0,16,14,15],
[9,16,9,6,5,0,11,10],
[8,15,8,12,7,10,0,7],
[12,14,8,11,6,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,7,0,11,8,7],
[13,0,5,10,10,15,9,12],
[10,16,0,13,7,20,16,10],
[14,11,8,0,12,18,11,12],
[21,11,14,9,0,21,13,19],
[10,6,1,3,0,0,9,8],
[13,12,5,10,8,12,0,10],
[14,9,11,9,2,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,10,14,14,16,12],
[9,0,13,0,5,7,12,6],
[10,8,0,8,12,9,11,8],
[11,21,13,0,12,13,16,9],
[7,16,9,9,0,13,12,6],
[7,14,12,8,8,0,16,7],
[5,9,10,5,9,5,0,7],
[9,15,13,12,15,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,11,8,10,11,10],
[10,0,10,8,10,11,9,9],
[11,11,0,12,13,9,12,11],
[10,13,9,0,7,12,8,8],
[13,11,8,14,0,13,10,11],
[11,10,12,9,8,0,7,9],
[10,12,9,13,11,14,0,14],
[11,12,10,13,10,12,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,9,12,7,9,15],
[10,0,11,7,8,11,8,15],
[12,10,0,5,12,6,7,12],
[12,14,16,0,12,11,8,19],
[9,13,9,9,0,8,11,15],
[14,10,15,10,13,0,11,15],
[12,13,14,13,10,10,0,17],
[6,6,9,2,6,6,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,7,9,11,9,7],
[10,0,9,9,8,9,7,10],
[13,12,0,9,11,7,10,12],
[14,12,12,0,13,7,10,13],
[12,13,10,8,0,10,11,11],
[10,12,14,14,11,0,16,12],
[12,14,11,11,10,5,0,8],
[14,11,9,8,10,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,13,9,14,16,12],
[8,0,6,12,4,11,10,9],
[11,15,0,17,10,15,17,14],
[8,9,4,0,7,9,12,11],
[12,17,11,14,0,10,14,12],
[7,10,6,12,11,0,12,14],
[5,11,4,9,7,9,0,10],
[9,12,7,10,9,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,6,8,8,9,7],
[14,0,12,9,11,11,11,8],
[13,9,0,10,12,11,15,6],
[15,12,11,0,11,12,10,11],
[13,10,9,10,0,9,7,6],
[13,10,10,9,12,0,9,7],
[12,10,6,11,14,12,0,8],
[14,13,15,10,15,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,11,12,9,11,12],
[9,0,7,7,9,8,11,10],
[9,14,0,10,10,9,11,11],
[10,14,11,0,12,13,14,15],
[9,12,11,9,0,8,10,13],
[12,13,12,8,13,0,10,14],
[10,10,10,7,11,11,0,9],
[9,11,10,6,8,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,12,8,9,10,9,4],
[15,0,12,12,17,9,8,10],
[9,9,0,11,14,8,7,10],
[13,9,10,0,17,11,13,11],
[12,4,7,4,0,7,6,7],
[11,12,13,10,14,0,9,8],
[12,13,14,8,15,12,0,9],
[17,11,11,10,14,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,8,12,13,14,9],
[9,0,10,9,13,9,14,7],
[8,11,0,11,11,9,11,12],
[13,12,10,0,12,13,15,11],
[9,8,10,9,0,12,11,10],
[8,12,12,8,9,0,13,9],
[7,7,10,6,10,8,0,7],
[12,14,9,10,11,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,11,14,14,13,11],
[7,0,13,8,13,13,10,12],
[11,8,0,12,15,15,12,11],
[10,13,9,0,13,12,8,9],
[7,8,6,8,0,8,8,8],
[7,8,6,9,13,0,8,6],
[8,11,9,13,13,13,0,10],
[10,9,10,12,13,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,7,6,7,12,12],
[13,0,18,10,9,9,15,14],
[8,3,0,6,6,7,9,7],
[14,11,15,0,7,9,11,10],
[15,12,15,14,0,9,16,11],
[14,12,14,12,12,0,14,10],
[9,6,12,10,5,7,0,8],
[9,7,14,11,10,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,10,12,11,11,11],
[8,0,8,14,13,11,7,9],
[11,13,0,12,13,14,8,8],
[11,7,9,0,14,11,4,10],
[9,8,8,7,0,12,7,9],
[10,10,7,10,9,0,7,11],
[10,14,13,17,14,14,0,10],
[10,12,13,11,12,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,12,12,9,6,8],
[9,0,9,11,7,11,7,13],
[6,12,0,8,4,2,4,14],
[9,10,13,0,4,9,7,8],
[9,14,17,17,0,9,3,17],
[12,10,19,12,12,0,12,18],
[15,14,17,14,18,9,0,14],
[13,8,7,13,4,3,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,8,8,5,13,21,13],
[16,0,16,8,0,13,16,13],
[13,5,0,13,5,13,21,13],
[13,13,8,0,13,5,13,13],
[16,21,16,8,0,13,16,21],
[8,8,8,16,8,0,8,8],
[0,5,0,8,5,13,0,13],
[8,8,8,8,0,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,7,8,7,13,10],
[11,0,5,1,4,7,6,7],
[7,16,0,7,14,9,12,10],
[14,20,14,0,12,12,9,10],
[13,17,7,9,0,15,12,13],
[14,14,12,9,6,0,7,8],
[8,15,9,12,9,14,0,12],
[11,14,11,11,8,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,10,11,11,6,11],
[10,0,8,9,11,12,5,11],
[11,13,0,11,9,10,7,10],
[11,12,10,0,10,9,9,10],
[10,10,12,11,0,11,8,10],
[10,9,11,12,10,0,8,8],
[15,16,14,12,13,13,0,10],
[10,10,11,11,11,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,8,7,7,9,8],
[14,0,12,11,10,12,13,12],
[12,9,0,8,5,7,10,8],
[13,10,13,0,11,9,12,8],
[14,11,16,10,0,9,13,13],
[14,9,14,12,12,0,11,13],
[12,8,11,9,8,10,0,9],
[13,9,13,13,8,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,9,10,10,8,9],
[10,0,8,8,8,10,11,9],
[10,13,0,12,9,11,9,11],
[12,13,9,0,11,11,11,11],
[11,13,12,10,0,12,12,12],
[11,11,10,10,9,0,10,9],
[13,10,12,10,9,11,0,11],
[12,12,10,10,9,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,11,10,11,9,9],
[7,0,5,9,8,8,5,5],
[10,16,0,10,12,12,11,11],
[10,12,11,0,10,11,9,8],
[11,13,9,11,0,12,11,9],
[10,13,9,10,9,0,10,10],
[12,16,10,12,10,11,0,10],
[12,16,10,13,12,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,6,12,12,8,10,10],
[10,0,12,13,13,10,13,10],
[15,9,0,10,10,12,13,15],
[9,8,11,0,14,7,14,9],
[9,8,11,7,0,6,9,10],
[13,11,9,14,15,0,14,11],
[11,8,8,7,12,7,0,10],
[11,11,6,12,11,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,14,13,11,13,13],
[9,0,9,12,10,11,12,9],
[11,12,0,12,10,11,14,11],
[7,9,9,0,6,9,11,12],
[8,11,11,15,0,11,15,12],
[10,10,10,12,10,0,11,13],
[8,9,7,10,6,10,0,9],
[8,12,10,9,9,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,2,4,4,6,3,8,2],
[19,0,6,2,10,5,10,6],
[17,15,0,6,10,13,14,14],
[17,19,15,0,19,10,14,13],
[15,11,11,2,0,10,6,11],
[18,16,8,11,11,0,11,13],
[13,11,7,7,15,10,0,5],
[19,15,7,8,10,8,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,9,8,9,12,7],
[12,0,13,10,12,12,13,11],
[12,8,0,11,13,11,12,12],
[12,11,10,0,12,10,10,10],
[13,9,8,9,0,10,9,7],
[12,9,10,11,11,0,14,9],
[9,8,9,11,12,7,0,11],
[14,10,9,11,14,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,8,9,8,9,7],
[11,0,8,8,10,10,6,9],
[14,13,0,9,13,14,10,11],
[13,13,12,0,14,14,9,11],
[12,11,8,7,0,12,6,6],
[13,11,7,7,9,0,6,9],
[12,15,11,12,15,15,0,10],
[14,12,10,10,15,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,10,9,14,9,8],
[9,0,13,7,12,8,8,6],
[5,8,0,8,5,7,11,9],
[11,14,13,0,14,16,10,10],
[12,9,16,7,0,8,9,10],
[7,13,14,5,13,0,7,6],
[12,13,10,11,12,14,0,11],
[13,15,12,11,11,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,7,4,9,8,6],
[11,0,13,12,9,7,10,10],
[11,8,0,11,9,10,9,8],
[14,9,10,0,6,8,9,8],
[17,12,12,15,0,11,10,8],
[12,14,11,13,10,0,12,13],
[13,11,12,12,11,9,0,11],
[15,11,13,13,13,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,9,14,7,13,10],
[11,0,10,9,13,10,13,11],
[12,11,0,8,13,11,12,12],
[12,12,13,0,13,12,15,9],
[7,8,8,8,0,9,12,9],
[14,11,10,9,12,0,15,9],
[8,8,9,6,9,6,0,7],
[11,10,9,12,12,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,7,10,7,11,14,13],
[4,0,8,6,3,4,5,7],
[14,13,0,9,12,11,13,12],
[11,15,12,0,10,13,15,10],
[14,18,9,11,0,11,17,15],
[10,17,10,8,10,0,16,11],
[7,16,8,6,4,5,0,6],
[8,14,9,11,6,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,9,11,9,11,11,10],
[16,0,10,15,8,13,12,10],
[12,11,0,10,11,7,15,8],
[10,6,11,0,9,5,12,10],
[12,13,10,12,0,10,12,14],
[10,8,14,16,11,0,12,8],
[10,9,6,9,9,9,0,8],
[11,11,13,11,7,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,10,15,14,14,17],
[2,0,13,2,13,2,5,6],
[2,8,0,5,5,0,3,10],
[11,19,16,0,17,9,4,10],
[6,8,16,4,0,0,3,10],
[7,19,21,12,21,0,7,18],
[7,16,18,17,18,14,0,18],
[4,15,11,11,11,3,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,4,12,10,6,8],
[13,0,12,9,7,8,9,12],
[11,9,0,4,8,5,8,14],
[17,12,17,0,10,10,13,14],
[9,14,13,11,0,12,9,12],
[11,13,16,11,9,0,11,15],
[15,12,13,8,12,10,0,15],
[13,9,7,7,9,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,6,8,4,2,10,7],
[14,0,11,10,11,6,12,9],
[15,10,0,9,9,8,13,17],
[13,11,12,0,2,10,15,12],
[17,10,12,19,0,14,14,15],
[19,15,13,11,7,0,18,11],
[11,9,8,6,7,3,0,6],
[14,12,4,9,6,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,10,8,7,11,6],
[10,0,18,15,10,9,13,10],
[9,3,0,4,3,8,4,5],
[11,6,17,0,9,6,12,7],
[13,11,18,12,0,10,12,11],
[14,12,13,15,11,0,9,13],
[10,8,17,9,9,12,0,7],
[15,11,16,14,10,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,17,11,11,14,11,15],
[11,0,16,11,10,9,11,16],
[4,5,0,2,8,5,5,12],
[10,10,19,0,15,8,8,15],
[10,11,13,6,0,9,10,12],
[7,12,16,13,12,0,10,17],
[10,10,16,13,11,11,0,17],
[6,5,9,6,9,4,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,10,10,15,9,11],
[11,0,10,9,10,15,12,8],
[12,11,0,18,14,13,11,10],
[11,12,3,0,7,10,4,5],
[11,11,7,14,0,12,9,7],
[6,6,8,11,9,0,9,4],
[12,9,10,17,12,12,0,11],
[10,13,11,16,14,17,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,12,10,11,10,16],
[5,0,8,9,6,4,6,14],
[9,13,0,9,9,7,9,14],
[9,12,12,0,12,10,9,20],
[11,15,12,9,0,13,11,18],
[10,17,14,11,8,0,10,17],
[11,15,12,12,10,11,0,15],
[5,7,7,1,3,4,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,9,13,8,7,13],
[13,0,10,15,11,8,11,15],
[10,11,0,10,13,13,9,12],
[12,6,11,0,12,7,7,10],
[8,10,8,9,0,8,7,11],
[13,13,8,14,13,0,9,11],
[14,10,12,14,14,12,0,9],
[8,6,9,11,10,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,12,9,17,11,14],
[6,0,9,10,10,13,7,4],
[9,12,0,7,7,12,6,9],
[9,11,14,0,7,11,3,10],
[12,11,14,14,0,11,10,10],
[4,8,9,10,10,0,7,10],
[10,14,15,18,11,14,0,11],
[7,17,12,11,11,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,10,15,16,14,14],
[7,0,11,8,10,11,13,13],
[7,10,0,11,10,11,9,11],
[11,13,10,0,12,11,15,15],
[6,11,11,9,0,10,10,12],
[5,10,10,10,11,0,9,9],
[7,8,12,6,11,12,0,13],
[7,8,10,6,9,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,11,10,13,17,9],
[8,0,15,9,12,12,15,12],
[4,6,0,5,4,2,6,0],
[10,12,16,0,12,9,16,12],
[11,9,17,9,0,13,13,12],
[8,9,19,12,8,0,14,8],
[4,6,15,5,8,7,0,3],
[12,9,21,9,9,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,8,8,12,9,12],
[6,0,7,10,7,15,12,17],
[10,14,0,14,8,15,8,11],
[13,11,7,0,8,21,9,15],
[13,14,13,13,0,17,8,11],
[9,6,6,0,4,0,0,6],
[12,9,13,12,13,21,0,10],
[9,4,10,6,10,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,17,9,15,14,12],
[10,0,15,13,16,4,14,12],
[5,6,0,14,9,9,14,9],
[4,8,7,0,13,7,11,11],
[12,5,12,8,0,8,12,4],
[6,17,12,14,13,0,18,9],
[7,7,7,10,9,3,0,7],
[9,9,12,10,17,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,9,10,13,9,13],
[8,0,10,3,3,10,2,7],
[12,11,0,8,12,7,11,16],
[12,18,13,0,17,10,11,15],
[11,18,9,4,0,13,4,15],
[8,11,14,11,8,0,11,16],
[12,19,10,10,17,10,0,15],
[8,14,5,6,6,5,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,12,20,20,13,20,12],
[17,0,8,16,17,10,17,8],
[9,13,0,8,9,10,9,9],
[1,5,13,0,9,2,1,1],
[1,4,12,12,0,1,1,4],
[8,11,11,19,20,0,11,11],
[1,4,12,20,20,10,0,12],
[9,13,12,20,17,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,8,9,5,15,10],
[12,0,13,8,12,10,15,11],
[11,8,0,6,10,8,16,6],
[13,13,15,0,16,12,13,10],
[12,9,11,5,0,7,14,9],
[16,11,13,9,14,0,14,11],
[6,6,5,8,7,7,0,9],
[11,10,15,11,12,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,12,10,10,10,13],
[11,0,5,12,9,9,10,11],
[13,16,0,12,13,12,10,14],
[9,9,9,0,7,9,9,12],
[11,12,8,14,0,12,11,10],
[11,12,9,12,9,0,10,16],
[11,11,11,12,10,11,0,11],
[8,10,7,9,11,5,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,9,4,7,10,7],
[10,0,10,12,6,8,14,12],
[14,11,0,16,10,11,17,13],
[12,9,5,0,6,8,14,13],
[17,15,11,15,0,9,18,12],
[14,13,10,13,12,0,15,13],
[11,7,4,7,3,6,0,4],
[14,9,8,8,9,8,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,14,10,11,12,16],
[5,0,7,11,12,11,7,11],
[9,14,0,13,11,9,8,13],
[7,10,8,0,10,8,6,10],
[11,9,10,11,0,10,6,12],
[10,10,12,13,11,0,9,14],
[9,14,13,15,15,12,0,15],
[5,10,8,11,9,7,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,10,11,12,11,13],
[14,0,8,12,12,13,12,14],
[11,13,0,10,12,13,9,17],
[11,9,11,0,14,15,10,15],
[10,9,9,7,0,6,10,11],
[9,8,8,6,15,0,9,12],
[10,9,12,11,11,12,0,16],
[8,7,4,6,10,9,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,9,6,7,9,8],
[14,0,7,12,7,11,10,8],
[16,14,0,7,11,12,11,11],
[12,9,14,0,8,12,10,8],
[15,14,10,13,0,10,13,12],
[14,10,9,9,11,0,9,9],
[12,11,10,11,8,12,0,11],
[13,13,10,13,9,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,15,12,6,18,6,12],
[12,0,10,14,12,18,12,12],
[6,11,0,16,12,18,12,16],
[9,7,5,0,11,11,4,5],
[15,9,9,10,0,17,2,13],
[3,3,3,10,4,0,0,13],
[15,9,9,17,19,21,0,13],
[9,9,5,16,8,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,11,16,11,13,8],
[12,0,10,8,12,11,14,11],
[8,11,0,8,11,8,11,9],
[10,13,13,0,12,10,18,10],
[5,9,10,9,0,8,11,8],
[10,10,13,11,13,0,16,10],
[8,7,10,3,10,5,0,8],
[13,10,12,11,13,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,15,14,9,14,8],
[11,0,6,13,13,7,19,7],
[14,15,0,15,8,8,14,8],
[6,8,6,0,0,3,7,8],
[7,8,13,21,0,15,21,15],
[12,14,13,18,6,0,13,9],
[7,2,7,14,0,8,0,8],
[13,14,13,13,6,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,12,13,10,13,11],
[8,0,10,12,10,6,10,11],
[10,11,0,12,11,7,12,10],
[9,9,9,0,12,7,9,8],
[8,11,10,9,0,9,13,9],
[11,15,14,14,12,0,12,10],
[8,11,9,12,8,9,0,8],
[10,10,11,13,12,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,5,12,5,11,8],
[6,0,12,6,7,6,11,6],
[10,9,0,7,12,8,5,6],
[16,15,14,0,14,8,11,11],
[9,14,9,7,0,4,10,8],
[16,15,13,13,17,0,11,9],
[10,10,16,10,11,10,0,7],
[13,15,15,10,13,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,13,9,9,11,11],
[12,0,7,13,9,9,7,12],
[11,14,0,11,11,13,7,11],
[8,8,10,0,9,10,9,9],
[12,12,10,12,0,8,12,10],
[12,12,8,11,13,0,8,14],
[10,14,14,12,9,13,0,12],
[10,9,10,12,11,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,12,16,12,9,7],
[9,0,13,3,9,13,13,16],
[9,8,0,8,13,8,8,11],
[9,18,13,0,18,17,18,16],
[5,12,8,3,0,8,9,7],
[9,8,13,4,13,0,13,16],
[12,8,13,3,12,8,0,7],
[14,5,10,5,14,5,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,11,10,10,11,11],
[11,0,8,7,8,9,9,7],
[12,13,0,7,12,10,13,12],
[10,14,14,0,13,13,13,12],
[11,13,9,8,0,8,13,9],
[11,12,11,8,13,0,14,10],
[10,12,8,8,8,7,0,12],
[10,14,9,9,12,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,9,11,10,9,8],
[11,0,12,11,8,9,8,6],
[8,9,0,12,7,9,9,6],
[12,10,9,0,9,11,10,11],
[10,13,14,12,0,14,12,7],
[11,12,12,10,7,0,12,6],
[12,13,12,11,9,9,0,7],
[13,15,15,10,14,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,13,12,8,12,10],
[8,0,10,15,8,9,8,9],
[10,11,0,14,7,8,9,8],
[8,6,7,0,5,7,10,3],
[9,13,14,16,0,10,12,11],
[13,12,13,14,11,0,14,9],
[9,13,12,11,9,7,0,6],
[11,12,13,18,10,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,6,11,21,11,14,21],
[7,0,10,8,10,10,13,21],
[15,11,0,8,15,8,21,18],
[10,13,13,0,13,10,13,13],
[0,11,6,8,0,11,14,21],
[10,11,13,11,10,0,21,18],
[7,8,0,8,7,0,0,15],
[0,0,3,8,0,3,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,5,8,1,7,8],
[12,0,6,9,10,1,5,8],
[11,15,0,11,14,6,10,13],
[16,12,10,0,10,7,13,12],
[13,11,7,11,0,7,10,12],
[20,20,15,14,14,0,9,11],
[14,16,11,8,11,12,0,10],
[13,13,8,9,9,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,9,6,9,6,12],
[14,0,11,10,13,13,8,13],
[11,10,0,14,8,12,10,11],
[12,11,7,0,10,14,9,10],
[15,8,13,11,0,14,13,14],
[12,8,9,7,7,0,9,12],
[15,13,11,12,8,12,0,12],
[9,8,10,11,7,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,10,9,7,6,5],
[10,0,11,9,7,8,5,6],
[13,10,0,12,12,9,9,8],
[11,12,9,0,8,10,8,7],
[12,14,9,13,0,13,12,13],
[14,13,12,11,8,0,9,12],
[15,16,12,13,9,12,0,12],
[16,15,13,14,8,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,13,10,8,10,11],
[9,0,13,8,11,8,9,14],
[7,8,0,11,11,8,7,11],
[8,13,10,0,14,9,11,16],
[11,10,10,7,0,9,7,13],
[13,13,13,12,12,0,8,13],
[11,12,14,10,14,13,0,15],
[10,7,10,5,8,8,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,14,9,9,11,7,4],
[14,0,10,11,11,10,11,13],
[7,11,0,12,16,11,11,11],
[12,10,9,0,7,11,7,13],
[12,10,5,14,0,14,7,13],
[10,11,10,10,7,0,8,7],
[14,10,10,14,14,13,0,13],
[17,8,10,8,8,14,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,12,10,11,12,9],
[11,0,13,11,9,13,16,10],
[8,8,0,11,7,10,10,9],
[9,10,10,0,12,12,12,9],
[11,12,14,9,0,10,15,13],
[10,8,11,9,11,0,13,10],
[9,5,11,9,6,8,0,6],
[12,11,12,12,8,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,12,7,11,9,10],
[10,0,9,13,7,12,6,11],
[13,12,0,15,9,11,12,14],
[9,8,6,0,6,7,6,7],
[14,14,12,15,0,12,9,12],
[10,9,10,14,9,0,12,9],
[12,15,9,15,12,9,0,13],
[11,10,7,14,9,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,8,9,9,10,8],
[14,0,9,13,10,15,12,8],
[16,12,0,12,11,10,12,14],
[13,8,9,0,11,12,12,6],
[12,11,10,10,0,13,12,9],
[12,6,11,9,8,0,8,9],
[11,9,9,9,9,13,0,10],
[13,13,7,15,12,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,5,7,7,11,11,11],
[12,0,9,8,9,11,6,7],
[16,12,0,12,13,10,14,11],
[14,13,9,0,12,12,16,10],
[14,12,8,9,0,12,15,11],
[10,10,11,9,9,0,12,6],
[10,15,7,5,6,9,0,9],
[10,14,10,11,10,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,14,12,8,14,10],
[7,0,12,10,11,5,8,10],
[10,9,0,10,7,9,7,7],
[7,11,11,0,7,7,8,8],
[9,10,14,14,0,11,9,13],
[13,16,12,14,10,0,13,11],
[7,13,14,13,12,8,0,11],
[11,11,14,13,8,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,18,16,13,16,10],
[5,0,2,7,11,6,6,6],
[8,19,0,12,17,11,13,13],
[3,14,9,0,10,8,8,5],
[5,10,4,11,0,4,9,1],
[8,15,10,13,17,0,15,10],
[5,15,8,13,12,6,0,10],
[11,15,8,16,20,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,8,5,10,8,5],
[15,0,12,15,7,11,11,12],
[13,9,0,10,10,15,10,10],
[13,6,11,0,8,12,8,8],
[16,14,11,13,0,14,14,10],
[11,10,6,9,7,0,10,8],
[13,10,11,13,7,11,0,9],
[16,9,11,13,11,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,6,11,11,9,5,9],
[11,0,8,13,13,9,7,9],
[15,13,0,11,14,11,9,11],
[10,8,10,0,12,10,8,7],
[10,8,7,9,0,12,5,8],
[12,12,10,11,9,0,7,8],
[16,14,12,13,16,14,0,10],
[12,12,10,14,13,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,10,10,10,12,10],
[9,0,13,10,9,11,11,8],
[8,8,0,3,10,11,11,8],
[11,11,18,0,10,14,13,14],
[11,12,11,11,0,10,9,9],
[11,10,10,7,11,0,11,7],
[9,10,10,8,12,10,0,8],
[11,13,13,7,12,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,5,10,8,8,11,9],
[12,0,11,10,8,9,9,12],
[16,10,0,13,9,9,15,12],
[11,11,8,0,8,11,10,10],
[13,13,12,13,0,12,13,8],
[13,12,12,10,9,0,12,13],
[10,12,6,11,8,9,0,8],
[12,9,9,11,13,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,12,13,9,13,14],
[11,0,15,11,14,11,10,11],
[6,6,0,6,12,5,5,7],
[9,10,15,0,13,9,10,11],
[8,7,9,8,0,10,8,10],
[12,10,16,12,11,0,13,15],
[8,11,16,11,13,8,0,14],
[7,10,14,10,11,6,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,10,8,9,14,8],
[11,0,12,13,10,9,12,13],
[11,9,0,11,8,7,14,8],
[11,8,10,0,7,5,13,9],
[13,11,13,14,0,11,15,10],
[12,12,14,16,10,0,13,12],
[7,9,7,8,6,8,0,8],
[13,8,13,12,11,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,9,15,9,13,14,11],
[6,0,11,13,12,13,8,12],
[12,10,0,13,12,10,9,12],
[6,8,8,0,3,7,7,9],
[12,9,9,18,0,9,8,10],
[8,8,11,14,12,0,12,12],
[7,13,12,14,13,9,0,11],
[10,9,9,12,11,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,10,10,10,0,18,8],
[3,0,13,13,13,3,21,11],
[11,8,0,18,11,11,11,8],
[11,8,3,0,11,11,11,11],
[11,8,10,10,0,11,8,8],
[21,18,10,10,10,0,18,18],
[3,0,10,10,13,3,0,8],
[13,10,13,10,13,3,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,9,13,10,15,12],
[8,0,9,10,7,8,11,9],
[11,12,0,10,11,13,9,10],
[12,11,11,0,10,11,11,14],
[8,14,10,11,0,12,11,13],
[11,13,8,10,9,0,10,10],
[6,10,12,10,10,11,0,9],
[9,12,11,7,8,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,7,10,14,13,18],
[7,0,13,10,10,14,10,14],
[4,8,0,7,10,14,13,10],
[14,11,14,0,10,11,13,20],
[11,11,11,11,0,7,7,14],
[7,7,7,10,14,0,10,14],
[8,11,8,8,14,11,0,11],
[3,7,11,1,7,7,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,13,10,9,13,13],
[12,0,10,16,13,15,10,13],
[11,11,0,14,9,12,9,15],
[8,5,7,0,6,6,9,9],
[11,8,12,15,0,9,14,10],
[12,6,9,15,12,0,8,9],
[8,11,12,12,7,13,0,12],
[8,8,6,12,11,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,9,16,13,11,12],
[10,0,12,6,18,11,12,14],
[11,9,0,13,17,9,10,17],
[12,15,8,0,17,15,9,16],
[5,3,4,4,0,6,5,10],
[8,10,12,6,15,0,10,11],
[10,9,11,12,16,11,0,17],
[9,7,4,5,11,10,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,6,5,7,8,8,7],
[9,0,8,5,5,10,9,6],
[15,13,0,12,13,9,11,10],
[16,16,9,0,18,11,13,11],
[14,16,8,3,0,10,11,10],
[13,11,12,10,11,0,9,9],
[13,12,10,8,10,12,0,6],
[14,15,11,10,11,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,17,17,16,7,8],
[12,0,9,13,11,11,13,11],
[9,12,0,6,7,7,6,4],
[4,8,15,0,14,9,9,6],
[4,10,14,7,0,11,9,3],
[5,10,14,12,10,0,4,8],
[14,8,15,12,12,17,0,8],
[13,10,17,15,18,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,8,8,9,10,8],
[13,0,7,7,8,12,9,8],
[12,14,0,7,12,17,10,12],
[13,14,14,0,13,17,12,10],
[13,13,9,8,0,12,10,8],
[12,9,4,4,9,0,10,9],
[11,12,11,9,11,11,0,13],
[13,13,9,11,13,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,13,9,11,10,8],
[11,0,9,12,10,10,9,8],
[11,12,0,11,10,9,9,10],
[8,9,10,0,8,10,9,7],
[12,11,11,13,0,12,10,11],
[10,11,12,11,9,0,8,8],
[11,12,12,12,11,13,0,8],
[13,13,11,14,10,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,12,9,11,11,11],
[9,0,10,9,11,8,10,6],
[8,11,0,10,11,10,11,10],
[9,12,11,0,8,10,11,7],
[12,10,10,13,0,9,12,7],
[10,13,11,11,12,0,13,9],
[10,11,10,10,9,8,0,8],
[10,15,11,14,14,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,9,6,11,10,6],
[10,0,12,12,8,13,12,12],
[12,9,0,13,10,11,13,10],
[12,9,8,0,8,8,7,6],
[15,13,11,13,0,14,15,8],
[10,8,10,13,7,0,15,7],
[11,9,8,14,6,6,0,8],
[15,9,11,15,13,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,12,9,12,13,11],
[10,0,10,10,9,12,14,13],
[9,11,0,13,11,15,13,13],
[9,11,8,0,8,11,9,9],
[12,12,10,13,0,10,11,11],
[9,9,6,10,11,0,10,10],
[8,7,8,12,10,11,0,13],
[10,8,8,12,10,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,11,13,7,10,13],
[8,0,7,13,9,9,6,8],
[6,14,0,13,14,6,7,9],
[10,8,8,0,6,8,7,7],
[8,12,7,15,0,5,11,10],
[14,12,15,13,16,0,11,9],
[11,15,14,14,10,10,0,12],
[8,13,12,14,11,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,14,11,14,12,10,8],
[14,0,12,13,13,10,10,14],
[7,9,0,9,6,7,6,8],
[10,8,12,0,9,12,9,14],
[7,8,15,12,0,6,9,10],
[9,11,14,9,15,0,12,10],
[11,11,15,12,12,9,0,8],
[13,7,13,7,11,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,14,10,10,11,11],
[10,0,10,11,10,8,10,11],
[9,11,0,11,8,12,12,6],
[7,10,10,0,8,11,13,7],
[11,11,13,13,0,12,12,7],
[11,13,9,10,9,0,10,10],
[10,11,9,8,9,11,0,10],
[10,10,15,14,14,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,14,12,9,9,13],
[11,0,9,14,10,10,12,13],
[12,12,0,18,10,12,12,15],
[7,7,3,0,9,10,8,12],
[9,11,11,12,0,12,8,12],
[12,11,9,11,9,0,12,10],
[12,9,9,13,13,9,0,15],
[8,8,6,9,9,11,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,11,14,12,18,19],
[8,0,11,12,11,13,10,11],
[11,10,0,5,10,8,10,10],
[10,9,16,0,12,13,11,14],
[7,10,11,9,0,8,11,12],
[9,8,13,8,13,0,12,13],
[3,11,11,10,10,9,0,12],
[2,10,11,7,9,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,14,13,9,10,12],
[9,0,9,14,13,9,10,11],
[12,12,0,15,10,10,11,11],
[7,7,6,0,10,9,9,11],
[8,8,11,11,0,11,7,10],
[12,12,11,12,10,0,12,10],
[11,11,10,12,14,9,0,12],
[9,10,10,10,11,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,16,11,13,17,15],
[11,0,11,9,7,13,11,10],
[10,10,0,10,14,15,15,14],
[5,12,11,0,9,13,12,12],
[10,14,7,12,0,9,15,12],
[8,8,6,8,12,0,13,7],
[4,10,6,9,6,8,0,8],
[6,11,7,9,9,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,8,9,11,9,10],
[10,0,15,12,12,12,12,8],
[14,6,0,9,13,11,13,10],
[13,9,12,0,10,12,12,13],
[12,9,8,11,0,12,14,11],
[10,9,10,9,9,0,11,7],
[12,9,8,9,7,10,0,8],
[11,13,11,8,10,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,8,16,9,11,10],
[13,0,13,10,14,8,15,16],
[13,8,0,14,16,9,10,11],
[13,11,7,0,15,14,14,11],
[5,7,5,6,0,7,8,8],
[12,13,12,7,14,0,13,11],
[10,6,11,7,13,8,0,11],
[11,5,10,10,13,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,9,11,15,8,7],
[11,0,17,10,11,18,11,11],
[12,4,0,9,8,10,3,9],
[12,11,12,0,11,12,9,11],
[10,10,13,10,0,9,9,12],
[6,3,11,9,12,0,4,9],
[13,10,18,12,12,17,0,14],
[14,10,12,10,9,12,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,5,2,5,8,5,2],
[16,0,10,16,8,7,8,16],
[16,11,0,11,8,7,8,16],
[19,5,10,0,11,10,8,21],
[16,13,13,10,0,12,12,16],
[13,14,14,11,9,0,8,13],
[16,13,13,13,9,13,0,13],
[19,5,5,0,5,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,15,7,21,8,18,11],
[14,0,10,16,16,3,16,6],
[6,11,0,6,11,11,8,6],
[14,5,15,0,19,8,13,11],
[0,5,10,2,0,8,2,6],
[13,18,10,13,13,0,13,11],
[3,5,13,8,19,8,0,6],
[10,15,15,10,15,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,6,6,2,8,13],
[12,0,15,12,5,12,12,16],
[7,6,0,8,5,7,11,12],
[15,9,13,0,7,9,13,17],
[15,16,16,14,0,8,7,18],
[19,9,14,12,13,0,12,14],
[13,9,10,8,14,9,0,13],
[8,5,9,4,3,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,10,11,12,10,11],
[8,0,5,7,6,10,8,11],
[13,16,0,12,12,13,11,10],
[11,14,9,0,9,11,9,12],
[10,15,9,12,0,8,12,11],
[9,11,8,10,13,0,11,12],
[11,13,10,12,9,10,0,12],
[10,10,11,9,10,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,0,1,8,0,12,2],
[9,0,1,9,1,8,2,2],
[21,20,0,10,17,8,13,10],
[20,12,11,0,11,3,12,5],
[13,20,4,10,0,12,5,13],
[21,13,13,18,9,0,13,2],
[9,19,8,9,16,8,0,9],
[19,19,11,16,8,19,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,10,13,3,13,5],
[11,0,8,16,16,3,8,13],
[11,13,0,11,16,11,8,13],
[11,5,10,0,16,3,8,13],
[8,5,5,5,0,8,5,5],
[18,18,10,18,13,0,13,13],
[8,13,13,13,16,8,0,13],
[16,8,8,8,16,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,7,11,10,8,10,9],
[15,0,9,16,12,13,11,11],
[14,12,0,16,15,13,8,12],
[10,5,5,0,7,8,7,6],
[11,9,6,14,0,11,8,9],
[13,8,8,13,10,0,9,13],
[11,10,13,14,13,12,0,8],
[12,10,9,15,12,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,12,15,6,13,12],
[11,0,14,11,16,12,15,10],
[10,7,0,12,15,7,12,11],
[9,10,9,0,12,6,12,7],
[6,5,6,9,0,5,10,10],
[15,9,14,15,16,0,13,13],
[8,6,9,9,11,8,0,8],
[9,11,10,14,11,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,13,13,18,9,7],
[7,0,7,18,5,14,11,4],
[7,14,0,13,9,14,8,11],
[8,3,8,0,8,14,8,0],
[8,16,12,13,0,13,12,4],
[3,7,7,7,8,0,7,4],
[12,10,13,13,9,14,0,7],
[14,17,10,21,17,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,6,7,4,15,12,17],
[5,0,5,6,8,16,8,14],
[15,16,0,11,9,17,14,21],
[14,15,10,0,11,17,16,18],
[17,13,12,10,0,17,19,20],
[6,5,4,4,4,0,6,11],
[9,13,7,5,2,15,0,10],
[4,7,0,3,1,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,7,5,10,11,6],
[14,0,14,15,5,10,15,10],
[16,7,0,11,10,10,16,8],
[14,6,10,0,4,10,11,6],
[16,16,11,17,0,15,13,9],
[11,11,11,11,6,0,9,11],
[10,6,5,10,8,12,0,6],
[15,11,13,15,12,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,14,11,10,12,12],
[10,0,10,12,14,15,13,16],
[9,11,0,13,11,9,11,12],
[7,9,8,0,10,8,7,13],
[10,7,10,11,0,10,9,10],
[11,6,12,13,11,0,7,15],
[9,8,10,14,12,14,0,14],
[9,5,9,8,11,6,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,7,13,11,11,10],
[10,0,14,14,14,11,16,16],
[10,7,0,7,13,15,14,15],
[14,7,14,0,13,16,14,14],
[8,7,8,8,0,8,8,8],
[10,10,6,5,13,0,8,13],
[10,5,7,7,13,13,0,12],
[11,5,6,7,13,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,4,3,4,14,4,9],
[9,0,9,6,6,20,11,10],
[17,12,0,6,11,16,10,19],
[18,15,15,0,9,18,16,16],
[17,15,10,12,0,19,12,21],
[7,1,5,3,2,0,5,10],
[17,10,11,5,9,16,0,9],
[12,11,2,5,0,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,6,4,7,4,5],
[14,0,10,9,9,8,6,9],
[16,11,0,12,6,7,6,7],
[15,12,9,0,7,9,7,7],
[17,12,15,14,0,11,9,13],
[14,13,14,12,10,0,12,11],
[17,15,15,14,12,9,0,10],
[16,12,14,14,8,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,12,12,11,13,10],
[11,0,11,11,16,9,13,11],
[9,10,0,10,12,10,14,10],
[9,10,11,0,12,11,13,10],
[9,5,9,9,0,9,13,8],
[10,12,11,10,12,0,12,13],
[8,8,7,8,8,9,0,10],
[11,10,11,11,13,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,11,9,10,10,8],
[13,0,15,14,14,13,11,9],
[9,6,0,10,6,11,8,5],
[10,7,11,0,8,14,9,7],
[12,7,15,13,0,14,11,5],
[11,8,10,7,7,0,10,8],
[11,10,13,12,10,11,0,12],
[13,12,16,14,16,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,9,12,7,11,15],
[12,0,8,15,12,7,7,13],
[13,13,0,11,14,11,10,16],
[12,6,10,0,13,8,10,12],
[9,9,7,8,0,7,9,13],
[14,14,10,13,14,0,11,16],
[10,14,11,11,12,10,0,17],
[6,8,5,9,8,5,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,18,8,14,14,10],
[8,0,13,13,4,13,18,14],
[12,8,0,16,12,9,17,5],
[3,8,5,0,3,12,14,7],
[13,17,9,18,0,14,14,10],
[7,8,12,9,7,0,17,10],
[7,3,4,7,7,4,0,0],
[11,7,16,14,11,11,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,17,12,14,7,3],
[15,0,12,17,12,16,9,9],
[15,9,0,16,15,11,15,9],
[4,4,5,0,5,0,4,4],
[9,9,6,16,0,7,9,11],
[7,5,10,21,14,0,4,9],
[14,12,6,17,12,17,0,10],
[18,12,12,17,10,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,11,6,12,5,14],
[14,0,10,10,7,12,7,15],
[10,11,0,7,11,13,11,9],
[10,11,14,0,6,16,8,9],
[15,14,10,15,0,16,8,16],
[9,9,8,5,5,0,3,7],
[16,14,10,13,13,18,0,15],
[7,6,12,12,5,14,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,13,13,16,10,11],
[9,0,9,11,12,14,12,10],
[10,12,0,12,14,15,11,10],
[8,10,9,0,12,11,7,8],
[8,9,7,9,0,14,9,6],
[5,7,6,10,7,0,6,6],
[11,9,10,14,12,15,0,10],
[10,11,11,13,15,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,10,8,13,9,8],
[11,0,11,13,11,14,11,10],
[12,10,0,10,11,13,10,13],
[11,8,11,0,8,10,5,8],
[13,10,10,13,0,11,10,8],
[8,7,8,11,10,0,5,12],
[12,10,11,16,11,16,0,10],
[13,11,8,13,13,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,4,10,13,5,11],
[10,0,6,10,6,9,10,11],
[13,15,0,12,6,10,9,12],
[17,11,9,0,13,14,17,16],
[11,15,15,8,0,16,5,11],
[8,12,11,7,5,0,9,10],
[16,11,12,4,16,12,0,7],
[10,10,9,5,10,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,7,7,5,10,8],
[13,0,11,12,13,8,13,10],
[14,10,0,7,10,9,16,12],
[14,9,14,0,9,13,15,10],
[14,8,11,12,0,6,11,10],
[16,13,12,8,15,0,14,9],
[11,8,5,6,10,7,0,7],
[13,11,9,11,11,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,6,9,9,19,19],
[8,0,9,8,12,8,12,12],
[6,12,0,7,8,7,17,14],
[15,13,14,0,9,14,15,15],
[12,9,13,12,0,6,13,12],
[12,13,14,7,15,0,13,19],
[2,9,4,6,8,8,0,10],
[2,9,7,6,9,2,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,4,16,14,4,12,2],
[14,0,7,19,12,9,7,7],
[17,14,0,14,10,7,19,14],
[5,2,7,0,7,9,7,2],
[7,9,11,14,0,9,9,4],
[17,12,14,12,12,0,17,7],
[9,14,2,14,12,4,0,9],
[19,14,7,19,17,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,7,6,2,6,1,5],
[16,0,9,10,9,14,8,10],
[14,12,0,8,9,7,11,14],
[15,11,13,0,8,10,11,15],
[19,12,12,13,0,9,12,11],
[15,7,14,11,12,0,9,15],
[20,13,10,10,9,12,0,11],
[16,11,7,6,10,6,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,14,9,11,11,10],
[12,0,7,12,11,9,8,13],
[10,14,0,14,10,12,13,12],
[7,9,7,0,6,7,10,8],
[12,10,11,15,0,10,13,11],
[10,12,9,14,11,0,7,9],
[10,13,8,11,8,14,0,8],
[11,8,9,13,10,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,11,12,13,11,11],
[14,0,10,11,14,12,11,10],
[11,11,0,11,13,12,9,12],
[10,10,10,0,9,11,7,9],
[9,7,8,12,0,9,8,8],
[8,9,9,10,12,0,11,9],
[10,10,12,14,13,10,0,11],
[10,11,9,12,13,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,3,3,5,7,2,4],
[13,0,11,7,8,9,9,6],
[18,10,0,9,9,10,9,6],
[18,14,12,0,11,12,7,9],
[16,13,12,10,0,15,4,10],
[14,12,11,9,6,0,7,12],
[19,12,12,14,17,14,0,7],
[17,15,15,12,11,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,11,8,14,15,11],
[7,0,13,10,9,12,10,10],
[3,8,0,3,5,10,9,9],
[10,11,18,0,12,13,13,16],
[13,12,16,9,0,14,13,8],
[7,9,11,8,7,0,13,11],
[6,11,12,8,8,8,0,11],
[10,11,12,5,13,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,10,7,10,12,9],
[10,0,8,11,5,8,7,10],
[14,13,0,12,8,16,14,15],
[11,10,9,0,6,11,8,12],
[14,16,13,15,0,13,10,15],
[11,13,5,10,8,0,9,8],
[9,14,7,13,11,12,0,12],
[12,11,6,9,6,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,15,12,15,9,15],
[9,0,9,6,13,9,1,6],
[8,12,0,11,9,12,12,6],
[6,15,10,0,10,13,7,10],
[9,8,12,11,0,14,6,9],
[6,12,9,8,7,0,12,6],
[12,20,9,14,15,9,0,11],
[6,15,15,11,12,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,14,14,10,12,9],
[11,0,11,15,17,6,10,11],
[9,10,0,10,16,5,13,9],
[7,6,11,0,9,5,8,8],
[7,4,5,12,0,5,6,6],
[11,15,16,16,16,0,14,10],
[9,11,8,13,15,7,0,10],
[12,10,12,13,15,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,4,7,6,9,9,5],
[17,0,9,12,11,14,13,11],
[17,12,0,11,13,14,8,8],
[14,9,10,0,14,16,14,11],
[15,10,8,7,0,12,10,9],
[12,7,7,5,9,0,11,9],
[12,8,13,7,11,10,0,11],
[16,10,13,10,12,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,19,13,10,10,11],
[5,0,9,19,9,9,9,9],
[5,12,0,21,2,6,2,5],
[2,2,0,0,2,5,2,0],
[8,12,19,19,0,13,10,12],
[11,12,15,16,8,0,15,11],
[11,12,19,19,11,6,0,12],
[10,12,16,21,9,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,13,9,10,11,10],
[9,0,10,13,10,7,12,8],
[14,11,0,13,11,9,8,9],
[8,8,8,0,9,7,7,8],
[12,11,10,12,0,10,12,10],
[11,14,12,14,11,0,11,9],
[10,9,13,14,9,10,0,11],
[11,13,12,13,11,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,13,14,10,9,13],
[13,0,12,18,8,12,17,13],
[9,9,0,13,12,12,13,13],
[8,3,8,0,7,4,8,7],
[7,13,9,14,0,14,15,16],
[11,9,9,17,7,0,7,11],
[12,4,8,13,6,14,0,8],
[8,8,8,14,5,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,3,19,10,15,10,13],
[8,0,3,19,10,15,10,19],
[18,18,0,16,10,18,16,16],
[2,2,5,0,10,12,2,2],
[11,11,11,11,0,11,8,11],
[6,6,3,9,10,0,6,9],
[11,11,5,19,13,15,0,21],
[8,2,5,19,10,12,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,11,9,11,11,17],
[9,0,8,7,11,11,11,15],
[10,13,0,8,13,14,12,17],
[10,14,13,0,12,12,11,15],
[12,10,8,9,0,12,12,18],
[10,10,7,9,9,0,11,11],
[10,10,9,10,9,10,0,16],
[4,6,4,6,3,10,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,11,11,9,7,10],
[12,0,9,14,9,8,7,11],
[14,12,0,14,13,11,8,13],
[10,7,7,0,8,9,6,12],
[10,12,8,13,0,8,11,9],
[12,13,10,12,13,0,11,13],
[14,14,13,15,10,10,0,12],
[11,10,8,9,12,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,9,11,7,9,8],
[12,0,9,9,11,9,9,8],
[12,12,0,10,14,11,12,11],
[12,12,11,0,13,10,10,10],
[10,10,7,8,0,7,9,11],
[14,12,10,11,14,0,12,11],
[12,12,9,11,12,9,0,11],
[13,13,10,11,10,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,12,11,13,7,12],
[10,0,12,13,14,12,10,12],
[10,9,0,12,15,16,11,16],
[9,8,9,0,7,10,10,10],
[10,7,6,14,0,14,8,13],
[8,9,5,11,7,0,8,13],
[14,11,10,11,13,13,0,15],
[9,9,5,11,8,8,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,8,13,7,10,8],
[9,0,9,11,18,7,13,12],
[11,12,0,9,16,10,10,6],
[13,10,12,0,9,7,8,12],
[8,3,5,12,0,5,5,6],
[14,14,11,14,16,0,11,9],
[11,8,11,13,16,10,0,11],
[13,9,15,9,15,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,6,18,6,15,15,10],
[9,0,6,10,9,18,12,13],
[15,15,0,15,18,18,12,10],
[3,11,6,0,3,12,15,10],
[15,12,3,18,0,12,15,7],
[6,3,3,9,9,0,7,3],
[6,9,9,6,6,14,0,9],
[11,8,11,11,14,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,7,14,9,12,14,16],
[7,0,5,9,6,15,16,14],
[14,16,0,10,14,10,12,13],
[7,12,11,0,8,17,18,13],
[12,15,7,13,0,15,19,14],
[9,6,11,4,6,0,6,11],
[7,5,9,3,2,15,0,7],
[5,7,8,8,7,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,17,8,12,12,11,8],
[13,0,16,14,13,11,18,9],
[4,5,0,9,8,5,2,5],
[13,7,12,0,12,8,5,9],
[9,8,13,9,0,8,8,6],
[9,10,16,13,13,0,13,11],
[10,3,19,16,13,8,0,9],
[13,12,16,12,15,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,7,6,1,3,3],
[14,0,13,10,15,10,9,9],
[14,8,0,9,17,13,9,12],
[14,11,12,0,15,13,9,12],
[15,6,4,6,0,7,10,14],
[20,11,8,8,14,0,12,14],
[18,12,12,12,11,9,0,17],
[18,12,9,9,7,7,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,11,10,10,9,15],
[11,0,11,9,12,13,13,9],
[13,10,0,9,9,13,14,12],
[10,12,12,0,12,17,13,12],
[11,9,12,9,0,15,10,12],
[11,8,8,4,6,0,12,10],
[12,8,7,8,11,9,0,11],
[6,12,9,9,9,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,10,12,14,14,11],
[9,0,9,9,8,8,11,9],
[10,12,0,10,16,11,15,11],
[11,12,11,0,10,7,12,7],
[9,13,5,11,0,12,10,8],
[7,13,10,14,9,0,10,6],
[7,10,6,9,11,11,0,8],
[10,12,10,14,13,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,11,11,8,14,12],
[11,0,14,12,5,12,14,9],
[8,7,0,14,11,9,11,13],
[10,9,7,0,5,9,9,7],
[10,16,10,16,0,13,17,15],
[13,9,12,12,8,0,16,10],
[7,7,10,12,4,5,0,8],
[9,12,8,14,6,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,11,13,11,11,13],
[12,0,13,12,13,9,11,13],
[9,8,0,15,14,15,14,15],
[10,9,6,0,14,12,11,11],
[8,8,7,7,0,8,10,11],
[10,12,6,9,13,0,10,11],
[10,10,7,10,11,11,0,12],
[8,8,6,10,10,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,11,10,3,12,10],
[10,0,12,1,10,10,10,10],
[9,9,0,0,18,0,9,0],
[10,20,21,0,19,12,19,10],
[11,11,3,2,0,2,2,3],
[18,11,21,9,19,0,18,19],
[9,11,12,2,19,3,0,1],
[11,11,21,11,18,2,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,7,10,9,9,11],
[12,0,11,9,11,14,13,11],
[11,10,0,12,12,15,10,10],
[14,12,9,0,14,12,12,11],
[11,10,9,7,0,11,10,8],
[12,7,6,9,10,0,9,8],
[12,8,11,9,11,12,0,8],
[10,10,11,10,13,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,8,11,11,11,10,11],
[7,0,6,10,10,11,9,9],
[13,15,0,9,14,10,9,12],
[10,11,12,0,11,9,8,11],
[10,11,7,10,0,10,12,10],
[10,10,11,12,11,0,12,13],
[11,12,12,13,9,9,0,13],
[10,12,9,10,11,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,10,11,11,10,13],
[5,0,5,8,10,9,6,10],
[10,16,0,10,9,11,15,14],
[11,13,11,0,10,15,12,15],
[10,11,12,11,0,13,10,11],
[10,12,10,6,8,0,12,12],
[11,15,6,9,11,9,0,13],
[8,11,7,6,10,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,2,8,8,6,10,7],
[13,0,11,11,13,9,12,7],
[19,10,0,15,14,14,16,9],
[13,10,6,0,12,7,12,6],
[13,8,7,9,0,9,11,9],
[15,12,7,14,12,0,14,11],
[11,9,5,9,10,7,0,7],
[14,14,12,15,12,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,13,11,15,14,9],
[11,0,12,10,11,15,14,15],
[12,9,0,13,13,13,15,14],
[8,11,8,0,13,12,9,14],
[10,10,8,8,0,9,9,9],
[6,6,8,9,12,0,13,10],
[7,7,6,12,12,8,0,10],
[12,6,7,7,12,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,6,10,10,6,19,12],
[21,0,12,12,10,12,19,21],
[15,9,0,10,6,12,15,17],
[11,9,11,0,9,11,15,17],
[11,11,15,12,0,6,21,21],
[15,9,9,10,15,0,15,15],
[2,2,6,6,0,6,0,2],
[9,0,4,4,0,6,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,17,15,14,13,15],
[11,0,10,16,13,16,13,14],
[9,11,0,17,16,14,14,13],
[4,5,4,0,10,8,8,8],
[6,8,5,11,0,8,12,8],
[7,5,7,13,13,0,11,12],
[8,8,7,13,9,10,0,14],
[6,7,8,13,13,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,15,9,13,11,10],
[13,0,15,12,10,12,13,10],
[9,6,0,11,11,12,10,12],
[6,9,10,0,13,11,8,11],
[12,11,10,8,0,11,9,7],
[8,9,9,10,10,0,11,10],
[10,8,11,13,12,10,0,12],
[11,11,9,10,14,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,10,9,12,15,10],
[11,0,16,11,11,8,14,10],
[7,5,0,6,10,9,12,9],
[11,10,15,0,12,13,15,11],
[12,10,11,9,0,10,13,11],
[9,13,12,8,11,0,14,6],
[6,7,9,6,8,7,0,6],
[11,11,12,10,10,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,10,10,9,12,10],
[10,0,12,8,7,10,8,8],
[10,9,0,10,8,7,10,8],
[11,13,11,0,11,11,9,11],
[11,14,13,10,0,12,11,11],
[12,11,14,10,9,0,9,8],
[9,13,11,12,10,12,0,12],
[11,13,13,10,10,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,10,9,13,9,15],
[8,0,5,12,5,6,5,15],
[12,16,0,10,3,6,10,12],
[11,9,11,0,11,5,9,15],
[12,16,18,10,0,12,10,16],
[8,15,15,16,9,0,15,15],
[12,16,11,12,11,6,0,15],
[6,6,9,6,5,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,10,11,8,10,9],
[10,0,6,14,10,8,10,11],
[13,15,0,13,14,11,10,16],
[11,7,8,0,10,9,8,9],
[10,11,7,11,0,7,10,12],
[13,13,10,12,14,0,12,14],
[11,11,11,13,11,9,0,13],
[12,10,5,12,9,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,10,9,10,12,8],
[10,0,13,11,12,10,10,7],
[8,8,0,8,10,7,7,7],
[11,10,13,0,15,13,10,12],
[12,9,11,6,0,12,10,10],
[11,11,14,8,9,0,10,9],
[9,11,14,11,11,11,0,9],
[13,14,14,9,11,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,12,12,9,13,12],
[6,0,13,15,9,9,10,12],
[6,8,0,9,8,11,6,11],
[9,6,12,0,6,6,9,6],
[9,12,13,15,0,9,13,12],
[12,12,10,15,12,0,13,7],
[8,11,15,12,8,8,0,8],
[9,9,10,15,9,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,1,6,7,1,4,1,13],
[20,0,14,8,16,14,8,19],
[15,7,0,13,8,13,9,14],
[14,13,8,0,14,11,14,20],
[20,5,13,7,0,6,1,19],
[17,7,8,10,15,0,15,16],
[20,13,12,7,20,6,0,19],
[8,2,7,1,2,5,2,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,15,11,12,10,12],
[9,0,7,10,8,7,6,6],
[12,14,0,18,12,12,10,15],
[6,11,3,0,9,6,11,8],
[10,13,9,12,0,9,9,13],
[9,14,9,15,12,0,12,13],
[11,15,11,10,12,9,0,13],
[9,15,6,13,8,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,12,10,12,11,12],
[11,0,9,9,10,8,8,9],
[10,12,0,11,10,12,13,11],
[9,12,10,0,12,8,9,8],
[11,11,11,9,0,9,13,10],
[9,13,9,13,12,0,11,8],
[10,13,8,12,8,10,0,11],
[9,12,10,13,11,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,14,10,13,11,11],
[10,0,11,11,13,14,15,10],
[10,10,0,12,13,12,13,12],
[7,10,9,0,11,11,12,10],
[11,8,8,10,0,11,11,9],
[8,7,9,10,10,0,11,11],
[10,6,8,9,10,10,0,10],
[10,11,9,11,12,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,11,11,8,12,9],
[10,0,10,6,8,7,8,8],
[9,11,0,9,6,8,11,7],
[10,15,12,0,10,8,9,12],
[10,13,15,11,0,13,12,12],
[13,14,13,13,8,0,14,11],
[9,13,10,12,9,7,0,7],
[12,13,14,9,9,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,10,10,14,11,14],
[11,0,11,11,7,14,11,11],
[10,10,0,11,3,7,10,7],
[11,10,10,0,3,11,7,8],
[11,14,18,18,0,14,7,14],
[7,7,14,10,7,0,11,11],
[10,10,11,14,14,10,0,10],
[7,10,14,13,7,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,13,10,11,14,16],
[7,0,13,10,7,9,17,10],
[7,8,0,8,6,7,11,10],
[8,11,13,0,11,9,19,16],
[11,14,15,10,0,14,17,17],
[10,12,14,12,7,0,19,13],
[7,4,10,2,4,2,0,7],
[5,11,11,5,4,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,11,9,11,13,12],
[12,0,10,7,3,10,9,9],
[8,11,0,7,13,11,15,12],
[10,14,14,0,10,12,15,13],
[12,18,8,11,0,14,17,11],
[10,11,10,9,7,0,18,10],
[8,12,6,6,4,3,0,6],
[9,12,9,8,10,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,7,6,7,11,11,11],
[15,0,11,17,7,7,19,13],
[14,10,0,10,11,6,10,14],
[15,4,11,0,5,5,15,9],
[14,14,10,16,0,6,14,14],
[10,14,15,16,15,0,19,15],
[10,2,11,6,7,2,0,6],
[10,8,7,12,7,6,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,2,8,8,5,5,5,5],
[19,0,21,13,9,13,16,8],
[13,0,0,6,0,10,0,5],
[13,8,15,0,8,12,8,8],
[16,12,21,13,0,10,10,12],
[16,8,11,9,11,0,6,8],
[16,5,21,13,11,15,0,8],
[16,13,16,13,9,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,12,12,9,9,12],
[9,0,18,21,21,18,9,12],
[9,3,0,3,3,0,9,12],
[9,0,18,0,3,9,9,12],
[9,0,18,18,0,18,9,9],
[12,3,21,12,3,0,12,12],
[12,12,12,12,12,9,0,3],
[9,9,9,9,12,9,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,11,11,11,11,9],
[9,0,11,8,11,12,13,7],
[10,10,0,11,13,9,13,10],
[10,13,10,0,11,13,11,10],
[10,10,8,10,0,15,12,8],
[10,9,12,8,6,0,15,12],
[10,8,8,10,9,6,0,6],
[12,14,11,11,13,9,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,14,21,14,5,5],
[6,0,6,6,6,9,5,0],
[7,15,0,5,13,9,5,0],
[7,15,16,0,16,16,12,7],
[0,15,8,5,0,8,5,0],
[7,12,12,5,13,0,5,0],
[16,16,16,9,16,16,0,16],
[16,21,21,14,21,21,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,11,17,15,11,9],
[6,0,10,11,11,13,8,9],
[8,11,0,12,15,14,13,10],
[10,10,9,0,13,16,13,11],
[4,10,6,8,0,15,6,4],
[6,8,7,5,6,0,6,6],
[10,13,8,8,15,15,0,8],
[12,12,11,10,17,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,19,9,5,10,10,8],
[17,0,17,8,6,11,10,8],
[2,4,0,10,4,9,9,3],
[12,13,11,0,7,10,11,7],
[16,15,17,14,0,10,14,11],
[11,10,12,11,11,0,16,6],
[11,11,12,10,7,5,0,6],
[13,13,18,14,10,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,12,4,9,9,9],
[15,0,7,13,8,7,10,10],
[13,14,0,11,11,11,12,10],
[9,8,10,0,11,9,11,11],
[17,13,10,10,0,13,11,12],
[12,14,10,12,8,0,10,10],
[12,11,9,10,10,11,0,8],
[12,11,11,10,9,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,18,13,10,13,18],
[8,0,13,13,13,10,13,16],
[3,8,0,21,13,8,16,16],
[3,8,0,0,0,8,11,3],
[8,8,8,21,0,13,16,21],
[11,11,13,13,8,0,8,11],
[8,8,5,10,5,13,0,13],
[3,5,5,18,0,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,12,13,15,7,12],
[11,0,13,13,4,18,10,10],
[11,8,0,18,6,10,10,10],
[9,8,3,0,1,13,7,10],
[8,17,15,20,0,14,7,12],
[6,3,11,8,7,0,8,5],
[14,11,11,14,14,13,0,10],
[9,11,11,11,9,16,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,11,10,13,7,12],
[11,0,9,9,11,13,6,12],
[10,12,0,8,9,12,8,10],
[10,12,13,0,11,16,12,13],
[11,10,12,10,0,10,10,10],
[8,8,9,5,11,0,6,11],
[14,15,13,9,11,15,0,13],
[9,9,11,8,11,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,15,7,9,13,10],
[12,0,11,9,12,7,14,8],
[11,10,0,17,12,14,12,15],
[6,12,4,0,9,6,7,7],
[14,9,9,12,0,9,14,7],
[12,14,7,15,12,0,9,11],
[8,7,9,14,7,12,0,9],
[11,13,6,14,14,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,8,9,14,12,9],
[13,0,12,10,11,17,7,16],
[8,9,0,4,6,8,7,5],
[13,11,17,0,16,14,9,12],
[12,10,15,5,0,17,8,12],
[7,4,13,7,4,0,8,7],
[9,14,14,12,13,13,0,14],
[12,5,16,9,9,14,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,8,11,13,11,10],
[8,0,14,9,10,10,9,13],
[7,7,0,4,7,8,10,11],
[13,12,17,0,9,14,11,12],
[10,11,14,12,0,11,11,12],
[8,11,13,7,10,0,10,10],
[10,12,11,10,10,11,0,12],
[11,8,10,9,9,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,4,7,7,11,9,8],
[12,0,10,12,13,7,11,13],
[17,11,0,6,12,11,11,12],
[14,9,15,0,10,12,9,12],
[14,8,9,11,0,12,14,18],
[10,14,10,9,9,0,9,7],
[12,10,10,12,7,12,0,12],
[13,8,9,9,3,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,12,14,10,6,9],
[7,0,9,12,9,14,5,11],
[6,12,0,15,15,10,8,11],
[9,9,6,0,8,11,7,7],
[7,12,6,13,0,10,12,13],
[11,7,11,10,11,0,6,11],
[15,16,13,14,9,15,0,14],
[12,10,10,14,8,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,12,12,13,13,14],
[11,0,10,11,9,14,10,11],
[9,11,0,8,11,10,8,11],
[9,10,13,0,9,9,8,12],
[9,12,10,12,0,10,7,11],
[8,7,11,12,11,0,11,10],
[8,11,13,13,14,10,0,14],
[7,10,10,9,10,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,12,14,10,12,10],
[8,0,10,10,10,10,11,11],
[9,11,0,11,11,9,9,8],
[9,11,10,0,13,11,10,7],
[7,11,10,8,0,7,7,8],
[11,11,12,10,14,0,10,9],
[9,10,12,11,14,11,0,9],
[11,10,13,14,13,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,9,12,9,11,12],
[12,0,8,13,10,12,9,9],
[14,13,0,14,12,16,14,10],
[12,8,7,0,11,10,12,10],
[9,11,9,10,0,9,12,8],
[12,9,5,11,12,0,9,9],
[10,12,7,9,9,12,0,7],
[9,12,11,11,13,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,11,10,11,15,15],
[14,0,11,15,10,13,11,13],
[14,10,0,16,15,13,14,13],
[10,6,5,0,15,10,11,9],
[11,11,6,6,0,13,12,12],
[10,8,8,11,8,0,11,13],
[6,10,7,10,9,10,0,14],
[6,8,8,12,9,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,13,8,11,14,12],
[12,0,9,14,12,15,14,18],
[9,12,0,16,13,12,13,14],
[8,7,5,0,11,12,9,14],
[13,9,8,10,0,11,10,13],
[10,6,9,9,10,0,10,12],
[7,7,8,12,11,11,0,13],
[9,3,7,7,8,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,8,9,11,12,6],
[12,0,13,7,10,9,12,11],
[14,8,0,7,11,12,11,7],
[13,14,14,0,5,19,17,12],
[12,11,10,16,0,16,12,11],
[10,12,9,2,5,0,9,8],
[9,9,10,4,9,12,0,4],
[15,10,14,9,10,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,9,5,3,2,11],
[9,0,4,6,5,9,6,9],
[14,17,0,7,11,9,5,18],
[12,15,14,0,15,10,8,16],
[16,16,10,6,0,11,12,18],
[18,12,12,11,10,0,8,14],
[19,15,16,13,9,13,0,16],
[10,12,3,5,3,7,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,6,17,12,2,14,12],
[11,0,9,17,12,7,21,7],
[15,12,0,17,12,11,12,10],
[4,4,4,0,12,1,9,1],
[9,9,9,9,0,6,9,6],
[19,14,10,20,15,0,19,13],
[7,0,9,12,12,2,0,5],
[9,14,11,20,15,8,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,9,8,12,12,10],
[11,0,8,10,7,12,10,8],
[10,13,0,9,8,10,13,10],
[12,11,12,0,11,10,14,12],
[13,14,13,10,0,11,13,12],
[9,9,11,11,10,0,14,10],
[9,11,8,7,8,7,0,6],
[11,13,11,9,9,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,19,19,20,21,19,19],
[11,0,21,10,20,20,21,20],
[2,0,0,1,11,11,0,9],
[2,11,20,0,20,20,20,20],
[1,1,10,1,0,19,1,19],
[0,1,10,1,2,0,1,10],
[2,0,21,1,20,20,0,18],
[2,1,12,1,2,11,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,13,9,13,10,10,11],
[14,0,11,8,11,15,12,9],
[8,10,0,9,13,13,13,11],
[12,13,12,0,10,14,9,11],
[8,10,8,11,0,12,8,12],
[11,6,8,7,9,0,5,10],
[11,9,8,12,13,16,0,11],
[10,12,10,10,9,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,10,6,9,6,10],
[10,0,10,14,8,11,10,13],
[12,11,0,10,8,11,10,11],
[11,7,11,0,11,10,9,11],
[15,13,13,10,0,12,13,16],
[12,10,10,11,9,0,7,10],
[15,11,11,12,8,14,0,12],
[11,8,10,10,5,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,11,8,7,4,8,6],
[15,0,8,8,7,8,11,9],
[10,13,0,13,8,7,9,8],
[13,13,8,0,7,8,7,9],
[14,14,13,14,0,8,13,8],
[17,13,14,13,13,0,13,9],
[13,10,12,14,8,8,0,12],
[15,12,13,12,13,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,14,10,12,12,13],
[6,0,9,11,9,11,9,10],
[9,12,0,12,15,15,10,11],
[7,10,9,0,10,10,6,6],
[11,12,6,11,0,9,7,11],
[9,10,6,11,12,0,11,11],
[9,12,11,15,14,10,0,12],
[8,11,10,15,10,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,13,14,8,5,13],
[11,0,15,14,15,10,7,14],
[8,6,0,12,10,8,4,6],
[8,7,9,0,11,7,8,4],
[7,6,11,10,0,11,6,6],
[13,11,13,14,10,0,11,13],
[16,14,17,13,15,10,0,14],
[8,7,15,17,15,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,3,7,6,9,9],
[13,0,13,8,9,8,11,13],
[14,8,0,8,8,5,9,7],
[18,13,13,0,12,8,15,14],
[14,12,13,9,0,13,16,11],
[15,13,16,13,8,0,15,11],
[12,10,12,6,5,6,0,9],
[12,8,14,7,10,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,13,10,11,8,9],
[10,0,11,12,14,11,7,8],
[11,10,0,10,12,10,10,10],
[8,9,11,0,12,9,7,10],
[11,7,9,9,0,12,7,7],
[10,10,11,12,9,0,11,11],
[13,14,11,14,14,10,0,10],
[12,13,11,11,14,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,11,13,12,15,15],
[12,0,11,17,13,9,13,16],
[11,10,0,9,12,7,16,13],
[10,4,12,0,11,6,14,11],
[8,8,9,10,0,6,12,15],
[9,12,14,15,15,0,13,16],
[6,8,5,7,9,8,0,9],
[6,5,8,10,6,5,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,12,14,10,11,13],
[10,0,13,14,15,12,11,10],
[10,8,0,15,13,11,11,13],
[9,7,6,0,12,10,11,9],
[7,6,8,9,0,7,9,10],
[11,9,10,11,14,0,11,10],
[10,10,10,10,12,10,0,11],
[8,11,8,12,11,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,9,9,15,14,8],
[9,0,13,12,11,14,13,10],
[11,8,0,13,10,17,7,8],
[12,9,8,0,8,13,12,10],
[12,10,11,13,0,13,8,9],
[6,7,4,8,8,0,7,5],
[7,8,14,9,13,14,0,11],
[13,11,13,11,12,16,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,7,10,17,12,10],
[7,0,9,9,7,13,9,8],
[11,12,0,10,9,16,9,10],
[14,12,11,0,11,15,10,12],
[11,14,12,10,0,17,12,9],
[4,8,5,6,4,0,6,8],
[9,12,12,11,9,15,0,8],
[11,13,11,9,12,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,14,12,11,11,10],
[9,0,10,11,10,11,9,11],
[11,11,0,9,12,7,11,9],
[7,10,12,0,8,9,9,7],
[9,11,9,13,0,6,11,8],
[10,10,14,12,15,0,13,11],
[10,12,10,12,10,8,0,12],
[11,10,12,14,13,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,10,13,15,10,12],
[9,0,11,12,12,16,12,11],
[10,10,0,10,11,14,10,8],
[11,9,11,0,10,13,11,13],
[8,9,10,11,0,13,11,10],
[6,5,7,8,8,0,3,7],
[11,9,11,10,10,18,0,14],
[9,10,13,8,11,14,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,7,12,12,12,14],
[9,0,11,10,10,13,13,11],
[8,10,0,10,11,11,13,13],
[14,11,11,0,10,12,11,9],
[9,11,10,11,0,9,16,12],
[9,8,10,9,12,0,11,13],
[9,8,8,10,5,10,0,11],
[7,10,8,12,9,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,11,12,15,14,11],
[11,0,12,7,10,14,12,9],
[9,9,0,7,8,9,9,7],
[10,14,14,0,12,13,13,11],
[9,11,13,9,0,12,10,10],
[6,7,12,8,9,0,8,9],
[7,9,12,8,11,13,0,11],
[10,12,14,10,11,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,14,13,16,8,14],
[10,0,9,12,10,13,9,12],
[8,12,0,12,14,11,11,12],
[7,9,9,0,11,9,7,10],
[8,11,7,10,0,9,10,12],
[5,8,10,12,12,0,6,11],
[13,12,10,14,11,15,0,14],
[7,9,9,11,9,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,7,12,11,9,14],
[6,0,16,10,4,5,9,7],
[7,5,0,6,3,5,5,7],
[14,11,15,0,9,11,14,11],
[9,17,18,12,0,8,13,10],
[10,16,16,10,13,0,11,9],
[12,12,16,7,8,10,0,8],
[7,14,14,10,11,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,13,14,12,13,10],
[11,0,9,12,11,10,6,8],
[9,12,0,9,13,8,8,9],
[8,9,12,0,13,9,4,8],
[7,10,8,8,0,5,8,3],
[9,11,13,12,16,0,10,11],
[8,15,13,17,13,11,0,8],
[11,13,12,13,18,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,10,8,12,12,11],
[11,0,11,12,9,10,13,10],
[10,10,0,12,9,8,14,9],
[11,9,9,0,6,12,13,10],
[13,12,12,15,0,12,17,10],
[9,11,13,9,9,0,11,9],
[9,8,7,8,4,10,0,7],
[10,11,12,11,11,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,6,6,8,8,7,8],
[13,0,9,8,12,7,9,9],
[15,12,0,8,10,9,10,11],
[15,13,13,0,10,12,8,13],
[13,9,11,11,0,9,10,9],
[13,14,12,9,12,0,10,9],
[14,12,11,13,11,11,0,9],
[13,12,10,8,12,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,12,10,17,9,5],
[11,0,16,8,16,13,10,16],
[5,5,0,10,2,18,4,4],
[9,13,11,0,11,12,14,10],
[11,5,19,10,0,16,4,4],
[4,8,3,9,5,0,7,3],
[12,11,17,7,17,14,0,15],
[16,5,17,11,17,18,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,12,14,10,13,10],
[9,0,10,12,17,11,13,11],
[10,11,0,12,20,10,15,13],
[9,9,9,0,13,7,12,8],
[7,4,1,8,0,4,7,5],
[11,10,11,14,17,0,16,13],
[8,8,6,9,14,5,0,9],
[11,10,8,13,16,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,14,10,8,11,13],
[8,0,9,13,6,5,9,10],
[6,12,0,13,11,4,11,13],
[7,8,8,0,11,6,10,12],
[11,15,10,10,0,13,11,16],
[13,16,17,15,8,0,12,13],
[10,12,10,11,10,9,0,16],
[8,11,8,9,5,8,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,11,16,14,12,7],
[9,0,16,13,13,18,15,14],
[9,5,0,8,14,15,12,6],
[10,8,13,0,13,18,16,10],
[5,8,7,8,0,8,8,6],
[7,3,6,3,13,0,7,4],
[9,6,9,5,13,14,0,3],
[14,7,15,11,15,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,17,14,10,14,14],
[11,0,16,11,8,8,19,8],
[8,5,0,8,13,6,11,11],
[4,10,13,0,14,7,8,14],
[7,13,8,7,0,11,15,13],
[11,13,15,14,10,0,19,16],
[7,2,10,13,6,2,0,6],
[7,13,10,7,8,5,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,5,12,17,7,3],
[12,0,7,5,11,18,10,5],
[15,14,0,10,9,19,13,13],
[16,16,11,0,18,14,13,8],
[9,10,12,3,0,13,10,8],
[4,3,2,7,8,0,7,7],
[14,11,8,8,11,14,0,10],
[18,16,8,13,13,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,9,10,12,11,13,10],
[6,0,8,9,8,8,7,9],
[12,13,0,11,11,10,9,12],
[11,12,10,0,10,10,9,13],
[9,13,10,11,0,11,9,10],
[10,13,11,11,10,0,11,12],
[8,14,12,12,12,10,0,11],
[11,12,9,8,11,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,13,16,12,11,13],
[12,0,8,13,11,6,9,13],
[7,13,0,13,13,11,10,14],
[8,8,8,0,12,9,11,11],
[5,10,8,9,0,9,7,10],
[9,15,10,12,12,0,10,15],
[10,12,11,10,14,11,0,13],
[8,8,7,10,11,6,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,14,9,15,9,10],
[8,0,11,12,7,8,9,7],
[10,10,0,12,9,12,11,10],
[7,9,9,0,5,10,8,9],
[12,14,12,16,0,12,10,11],
[6,13,9,11,9,0,11,11],
[12,12,10,13,11,10,0,10],
[11,14,11,12,10,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,12,12,8,5,12,10],
[18,0,12,15,12,10,14,13],
[9,9,0,11,9,6,14,11],
[9,6,10,0,3,8,12,8],
[13,9,12,18,0,14,12,12],
[16,11,15,13,7,0,14,14],
[9,7,7,9,9,7,0,8],
[11,8,10,13,9,7,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,17,19,14,10,11],
[10,0,8,8,13,10,11,14],
[6,13,0,8,11,7,8,10],
[4,13,13,0,16,14,11,14],
[2,8,10,5,0,4,4,8],
[7,11,14,7,17,0,8,9],
[11,10,13,10,17,13,0,14],
[10,7,11,7,13,12,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,10,11,14,14,12],
[13,0,8,15,13,10,11,10],
[13,13,0,7,13,14,11,9],
[11,6,14,0,12,11,13,15],
[10,8,8,9,0,8,9,4],
[7,11,7,10,13,0,12,15],
[7,10,10,8,12,9,0,10],
[9,11,12,6,17,6,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,5,7,10,7,11,10],
[15,0,10,9,10,9,13,13],
[16,11,0,11,9,7,11,9],
[14,12,10,0,12,7,12,10],
[11,11,12,9,0,9,6,5],
[14,12,14,14,12,0,14,10],
[10,8,10,9,15,7,0,8],
[11,8,12,11,16,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,11,10,15,12,13],
[8,0,12,10,8,10,8,11],
[6,9,0,6,12,9,5,10],
[10,11,15,0,12,14,9,13],
[11,13,9,9,0,11,9,8],
[6,11,12,7,10,0,8,12],
[9,13,16,12,12,13,0,10],
[8,10,11,8,13,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,5,7,8,10,4],
[11,0,13,8,7,8,11,5],
[8,8,0,8,8,9,9,6],
[16,13,13,0,10,12,13,10],
[14,14,13,11,0,9,11,7],
[13,13,12,9,12,0,9,9],
[11,10,12,8,10,12,0,11],
[17,16,15,11,14,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,11,13,13,11,12],
[10,0,11,13,11,14,10,10],
[11,10,0,10,12,14,8,7],
[10,8,11,0,13,14,10,7],
[8,10,9,8,0,10,6,4],
[8,7,7,7,11,0,9,4],
[10,11,13,11,15,12,0,7],
[9,11,14,14,17,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,8,15,13,9,11],
[7,0,11,8,12,12,8,10],
[11,10,0,11,11,9,9,10],
[13,13,10,0,14,13,11,10],
[6,9,10,7,0,13,3,10],
[8,9,12,8,8,0,6,7],
[12,13,12,10,18,15,0,10],
[10,11,11,11,11,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,11,14,14,12,11],
[9,0,10,9,9,13,10,12],
[11,11,0,12,9,14,13,12],
[10,12,9,0,12,13,12,11],
[7,12,12,9,0,13,12,9],
[7,8,7,8,8,0,12,8],
[9,11,8,9,9,9,0,9],
[10,9,9,10,12,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,6,4,10,7,12],
[12,0,16,14,10,12,8,8],
[10,5,0,5,5,7,6,8],
[15,7,16,0,5,12,5,6],
[17,11,16,16,0,14,9,10],
[11,9,14,9,7,0,10,10],
[14,13,15,16,12,11,0,7],
[9,13,13,15,11,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,11,11,10,12,10],
[11,0,8,12,8,11,14,7],
[9,13,0,11,9,10,12,10],
[10,9,10,0,7,8,11,11],
[10,13,12,14,0,13,15,11],
[11,10,11,13,8,0,10,11],
[9,7,9,10,6,11,0,8],
[11,14,11,10,10,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,11,9,8,11,8],
[11,0,8,12,9,11,14,11],
[13,13,0,12,10,11,13,11],
[10,9,9,0,12,12,12,15],
[12,12,11,9,0,13,14,10],
[13,10,10,9,8,0,9,11],
[10,7,8,9,7,12,0,12],
[13,10,10,6,11,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,6,17,16,10,8],
[13,0,12,5,12,15,8,9],
[9,9,0,7,10,12,11,10],
[15,16,14,0,14,15,8,12],
[4,9,11,7,0,6,10,7],
[5,6,9,6,15,0,10,3],
[11,13,10,13,11,11,0,10],
[13,12,11,9,14,18,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,9,9,9,11,13],
[14,0,11,13,14,9,11,16],
[13,10,0,12,10,12,11,14],
[12,8,9,0,11,12,11,12],
[12,7,11,10,0,9,9,13],
[12,12,9,9,12,0,7,12],
[10,10,10,10,12,14,0,11],
[8,5,7,9,8,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,11,12,10,8,13],
[9,0,11,6,6,9,6,12],
[11,10,0,8,12,11,9,13],
[10,15,13,0,13,13,8,10],
[9,15,9,8,0,12,8,13],
[11,12,10,8,9,0,8,13],
[13,15,12,13,13,13,0,10],
[8,9,8,11,8,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,12,10,8,8,10],
[11,0,14,11,14,14,15,10],
[9,7,0,11,9,11,7,12],
[9,10,10,0,10,8,8,11],
[11,7,12,11,0,10,11,13],
[13,7,10,13,11,0,8,10],
[13,6,14,13,10,13,0,14],
[11,11,9,10,8,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,12,11,12,8,11,9],
[16,0,15,15,14,9,12,12],
[9,6,0,12,9,10,12,10],
[10,6,9,0,12,10,9,12],
[9,7,12,9,0,13,13,11],
[13,12,11,11,8,0,11,12],
[10,9,9,12,8,10,0,9],
[12,9,11,9,10,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,7,6,12,15,9],
[12,0,3,6,2,9,6,6],
[12,18,0,11,9,17,16,13],
[14,15,10,0,11,16,11,9],
[15,19,12,10,0,19,9,12],
[9,12,4,5,2,0,7,8],
[6,15,5,10,12,14,0,14],
[12,15,8,12,9,13,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,13,13,13,4,21],
[8,0,17,13,0,8,12,8],
[8,4,0,4,4,4,4,12],
[8,8,17,0,8,8,12,8],
[8,21,17,13,0,12,12,17],
[8,13,17,13,9,0,4,17],
[17,9,17,9,9,17,0,17],
[0,13,9,13,4,4,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,8,9,7,11,7],
[13,0,9,13,11,14,15,10],
[12,12,0,10,10,13,14,11],
[13,8,11,0,11,8,12,9],
[12,10,11,10,0,11,14,9],
[14,7,8,13,10,0,10,8],
[10,6,7,9,7,11,0,6],
[14,11,10,12,12,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,8,10,10,10,12],
[6,0,3,3,8,6,8,6],
[10,18,0,13,11,13,14,15],
[13,18,8,0,14,15,10,12],
[11,13,10,7,0,12,14,9],
[11,15,8,6,9,0,12,11],
[11,13,7,11,7,9,0,11],
[9,15,6,9,12,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,11,11,7,11,8,7],
[16,0,13,14,13,15,13,10],
[10,8,0,12,11,14,10,9],
[10,7,9,0,13,14,11,7],
[14,8,10,8,0,15,9,11],
[10,6,7,7,6,0,7,6],
[13,8,11,10,12,14,0,10],
[14,11,12,14,10,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,12,5,4,11,15],
[10,0,10,21,14,9,17,15],
[7,11,0,12,5,11,7,15],
[9,0,9,0,14,0,11,15],
[16,7,16,7,0,7,11,11],
[17,12,10,21,14,0,12,15],
[10,4,14,10,10,9,0,15],
[6,6,6,6,10,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,12,8,11,13,10],
[7,0,6,8,8,11,11,9],
[9,15,0,9,9,13,12,11],
[9,13,12,0,13,14,15,11],
[13,13,12,8,0,12,15,15],
[10,10,8,7,9,0,13,11],
[8,10,9,6,6,8,0,10],
[11,12,10,10,6,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,11,9,13,12,8],
[9,0,12,8,8,10,10,9],
[10,9,0,11,9,10,11,9],
[10,13,10,0,13,12,11,10],
[12,13,12,8,0,11,13,12],
[8,11,11,9,10,0,12,7],
[9,11,10,10,8,9,0,8],
[13,12,12,11,9,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,6,9,17,13,17],
[10,0,6,5,11,10,10,16],
[11,15,0,12,14,17,9,18],
[15,16,9,0,12,16,15,21],
[12,10,7,9,0,12,13,18],
[4,11,4,5,9,0,9,14],
[8,11,12,6,8,12,0,15],
[4,5,3,0,3,7,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,5,9,5,14,10],
[13,0,15,9,16,12,13,14],
[12,6,0,14,16,12,14,12],
[16,12,7,0,15,14,14,13],
[12,5,5,6,0,10,12,6],
[16,9,9,7,11,0,14,15],
[7,8,7,7,9,7,0,7],
[11,7,9,8,15,6,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,8,8,11,10,8],
[9,0,7,3,5,8,4,7],
[14,14,0,6,12,12,11,13],
[13,18,15,0,12,6,10,12],
[13,16,9,9,0,11,9,12],
[10,13,9,15,10,0,8,7],
[11,17,10,11,12,13,0,9],
[13,14,8,9,9,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,10,5,13,13,14],
[7,0,7,12,12,9,5,11],
[12,14,0,14,10,15,10,15],
[11,9,7,0,4,6,9,10],
[16,9,11,17,0,15,14,19],
[8,12,6,15,6,0,11,11],
[8,16,11,12,7,10,0,12],
[7,10,6,11,2,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,8,10,10,9,11],
[13,0,16,13,8,11,13,12],
[8,5,0,8,8,9,9,10],
[13,8,13,0,7,8,10,13],
[11,13,13,14,0,10,11,12],
[11,10,12,13,11,0,12,14],
[12,8,12,11,10,9,0,11],
[10,9,11,8,9,7,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,13,11,11,12,10],
[11,0,15,9,9,9,13,10],
[7,6,0,10,8,11,7,11],
[8,12,11,0,9,13,11,11],
[10,12,13,12,0,9,13,13],
[10,12,10,8,12,0,9,10],
[9,8,14,10,8,12,0,11],
[11,11,10,10,8,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,12,12,8,4,14],
[15,0,13,14,12,13,10,16],
[15,8,0,14,8,6,8,14],
[9,7,7,0,4,5,7,9],
[9,9,13,17,0,13,11,9],
[13,8,15,16,8,0,4,8],
[17,11,13,14,10,17,0,17],
[7,5,7,12,12,13,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,11,10,12,9,9],
[10,0,8,10,10,10,10,13],
[10,13,0,9,8,11,10,10],
[10,11,12,0,11,15,10,11],
[11,11,13,10,0,9,8,11],
[9,11,10,6,12,0,5,12],
[12,11,11,11,13,16,0,10],
[12,8,11,10,10,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,10,8,12,11,13],
[12,0,11,12,8,11,15,16],
[11,10,0,11,11,14,16,14],
[11,9,10,0,7,12,18,15],
[13,13,10,14,0,10,15,14],
[9,10,7,9,11,0,14,11],
[10,6,5,3,6,7,0,8],
[8,5,7,6,7,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,10,14,13,13,8],
[12,0,11,10,13,10,12,8],
[7,10,0,8,10,4,15,5],
[11,11,13,0,16,11,17,10],
[7,8,11,5,0,6,13,8],
[8,11,17,10,15,0,15,11],
[8,9,6,4,8,6,0,5],
[13,13,16,11,13,10,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,9,11,11,10,7],
[8,0,14,9,14,11,10,10],
[7,7,0,14,13,3,3,7],
[12,12,7,0,11,10,10,14],
[10,7,8,10,0,10,11,3],
[10,10,18,11,11,0,5,10],
[11,11,18,11,10,16,0,11],
[14,11,14,7,18,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,19,17,12,11,14,11],
[12,0,15,14,9,11,13,9],
[2,6,0,7,9,5,3,8],
[4,7,14,0,9,7,5,7],
[9,12,12,12,0,10,9,11],
[10,10,16,14,11,0,12,7],
[7,8,18,16,12,9,0,10],
[10,12,13,14,10,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,7,7,8,6,7,7],
[15,0,8,10,10,7,8,7],
[14,13,0,11,11,8,12,11],
[14,11,10,0,12,7,12,9],
[13,11,10,9,0,10,12,8],
[15,14,13,14,11,0,11,9],
[14,13,9,9,9,10,0,8],
[14,14,10,12,13,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,15,12,12,12,11],
[10,0,9,15,15,13,16,8],
[11,12,0,14,10,9,17,10],
[6,6,7,0,9,9,14,10],
[9,6,11,12,0,7,15,10],
[9,8,12,12,14,0,16,9],
[9,5,4,7,6,5,0,9],
[10,13,11,11,11,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,10,18,7,11,14],
[10,0,10,8,16,8,10,14],
[5,11,0,3,16,8,9,11],
[11,13,18,0,16,13,10,15],
[3,5,5,5,0,5,9,10],
[14,13,13,8,16,0,10,12],
[10,11,12,11,12,11,0,10],
[7,7,10,6,11,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,14,13,10,8,12,9],
[15,0,13,11,10,10,10,11],
[7,8,0,13,6,9,8,9],
[8,10,8,0,4,12,6,9],
[11,11,15,17,0,15,10,11],
[13,11,12,9,6,0,10,12],
[9,11,13,15,11,11,0,12],
[12,10,12,12,10,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,15,14,15,12,15,16],
[12,0,16,14,15,10,13,13],
[6,5,0,8,14,8,8,10],
[7,7,13,0,12,4,8,9],
[6,6,7,9,0,8,8,9],
[9,11,13,17,13,0,13,12],
[6,8,13,13,13,8,0,10],
[5,8,11,12,12,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,8,11,16,9,6],
[14,0,14,12,11,16,10,11],
[10,7,0,5,6,13,8,6],
[13,9,16,0,10,18,11,11],
[10,10,15,11,0,15,12,10],
[5,5,8,3,6,0,6,3],
[12,11,13,10,9,15,0,10],
[15,10,15,10,11,18,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,10,11,10,9,13],
[10,0,10,12,11,10,7,14],
[9,11,0,12,11,9,11,16],
[11,9,9,0,8,9,8,14],
[10,10,10,13,0,11,10,15],
[11,11,12,12,10,0,11,15],
[12,14,10,13,11,10,0,15],
[8,7,5,7,6,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,12,14,11,12,9],
[13,0,10,11,14,9,9,8],
[12,11,0,9,14,10,13,8],
[9,10,12,0,16,11,11,13],
[7,7,7,5,0,8,8,10],
[10,12,11,10,13,0,10,11],
[9,12,8,10,13,11,0,10],
[12,13,13,8,11,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,9,8,8,10,12],
[5,0,10,8,8,5,6,9],
[10,11,0,7,8,9,10,10],
[12,13,14,0,11,10,11,12],
[13,13,13,10,0,11,12,14],
[13,16,12,11,10,0,14,17],
[11,15,11,10,9,7,0,13],
[9,12,11,9,7,4,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,4,10,9,8,13],
[9,0,9,8,7,3,13,11],
[7,12,0,4,7,9,7,7],
[17,13,17,0,14,10,15,16],
[11,14,14,7,0,11,12,17],
[12,18,12,11,10,0,17,14],
[13,8,14,6,9,4,0,12],
[8,10,14,5,4,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,14,10,12,11,12],
[9,0,13,13,11,15,10,12],
[10,8,0,13,11,15,11,11],
[7,8,8,0,11,9,12,8],
[11,10,10,10,0,17,15,15],
[9,6,6,12,4,0,10,8],
[10,11,10,9,6,11,0,6],
[9,9,10,13,6,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,11,12,12,13,12],
[11,0,11,7,9,14,10,7],
[12,10,0,10,14,13,13,6],
[10,14,11,0,14,17,12,11],
[9,12,7,7,0,9,13,9],
[9,7,8,4,12,0,10,6],
[8,11,8,9,8,11,0,10],
[9,14,15,10,12,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,5,11,7,16,11],
[11,0,8,11,9,8,11,8],
[12,13,0,11,11,7,17,11],
[16,10,10,0,11,8,15,14],
[10,12,10,10,0,12,9,11],
[14,13,14,13,9,0,14,11],
[5,10,4,6,12,7,0,9],
[10,13,10,7,10,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,11,12,13,7,15],
[11,0,10,14,13,12,10,15],
[9,11,0,6,17,13,10,14],
[10,7,15,0,16,14,11,19],
[9,8,4,5,0,10,2,7],
[8,9,8,7,11,0,7,13],
[14,11,11,10,19,14,0,14],
[6,6,7,2,14,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,14,15,9,9,13,10],
[13,0,10,12,10,9,10,12],
[7,11,0,10,11,6,9,11],
[6,9,11,0,9,8,12,10],
[12,11,10,12,0,10,11,10],
[12,12,15,13,11,0,15,8],
[8,11,12,9,10,6,0,9],
[11,9,10,11,11,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,11,14,14,9,11],
[3,0,14,14,9,9,9,14],
[3,7,0,6,6,3,9,6],
[10,7,15,0,13,10,10,7],
[7,12,15,8,0,15,7,12],
[7,12,18,11,6,0,13,12],
[12,12,12,11,14,8,0,11],
[10,7,15,14,9,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,13,10,12,9,12,11],
[14,0,14,12,11,9,9,11],
[8,7,0,8,8,9,6,8],
[11,9,13,0,12,9,7,9],
[9,10,13,9,0,10,7,10],
[12,12,12,12,11,0,10,10],
[9,12,15,14,14,11,0,8],
[10,10,13,12,11,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,7,11,8,5,7],
[10,0,8,8,11,8,5,8],
[14,13,0,8,4,11,5,10],
[14,13,13,0,14,10,11,13],
[10,10,17,7,0,11,8,7],
[13,13,10,11,10,0,11,13],
[16,16,16,10,13,10,0,9],
[14,13,11,8,14,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,6,11,6,0,11,5],
[16,0,6,11,11,16,16,21],
[15,15,0,5,10,10,15,15],
[10,10,16,0,5,5,10,10],
[15,10,11,16,0,10,16,10],
[21,5,11,16,11,0,11,10],
[10,5,6,11,5,10,0,15],
[16,0,6,11,11,11,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,14,0,7,7,7,7],
[14,0,21,7,7,14,7,14],
[7,0,0,0,7,7,7,7],
[21,14,21,0,14,7,14,7],
[14,14,14,7,0,7,14,7],
[14,7,14,14,14,0,14,7],
[14,14,14,7,7,7,0,7],
[14,7,14,14,14,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,6,9,6,14,6],
[13,0,10,8,7,8,12,4],
[14,11,0,8,9,5,18,7],
[15,13,13,0,12,10,16,14],
[12,14,12,9,0,9,15,9],
[15,13,16,11,12,0,16,10],
[7,9,3,5,6,5,0,4],
[15,17,14,7,12,11,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,16,12,12,13,10],
[8,0,8,18,8,14,3,13],
[13,13,0,13,12,15,13,10],
[5,3,8,0,2,5,6,7],
[9,13,9,19,0,18,6,10],
[9,7,6,16,3,0,6,7],
[8,18,8,15,15,15,0,12],
[11,8,11,14,11,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,13,12,10,11,12],
[7,0,12,12,9,12,9,12],
[5,9,0,10,9,9,8,9],
[8,9,11,0,5,6,9,10],
[9,12,12,16,0,12,13,13],
[11,9,12,15,9,0,12,11],
[10,12,13,12,8,9,0,12],
[9,9,12,11,8,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,11,10,16,15,14],
[6,0,7,5,2,8,13,6],
[9,14,0,9,10,12,18,8],
[10,16,12,0,13,11,15,7],
[11,19,11,8,0,12,19,11],
[5,13,9,10,9,0,14,6],
[6,8,3,6,2,7,0,4],
[7,15,13,14,10,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,13,11,12,8,8],
[11,0,8,12,7,9,9,10],
[11,13,0,13,12,13,9,8],
[8,9,8,0,9,12,7,7],
[10,14,9,12,0,10,10,10],
[9,12,8,9,11,0,10,12],
[13,12,12,14,11,11,0,10],
[13,11,13,14,11,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,10,12,12,9,13],
[10,0,7,10,4,11,8,10],
[12,14,0,13,7,10,8,12],
[11,11,8,0,7,10,9,8],
[9,17,14,14,0,13,12,14],
[9,10,11,11,8,0,12,13],
[12,13,13,12,9,9,0,13],
[8,11,9,13,7,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,12,11,10,11,10],
[9,0,10,10,12,12,11,11],
[13,11,0,9,12,9,13,10],
[9,11,12,0,11,10,10,11],
[10,9,9,10,0,9,9,12],
[11,9,12,11,12,0,11,12],
[10,10,8,11,12,10,0,10],
[11,10,11,10,9,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,18,15,9,13,7],
[11,0,9,15,16,6,13,11],
[7,12,0,15,15,12,14,5],
[3,6,6,0,14,6,13,5],
[6,5,6,7,0,6,12,3],
[12,15,9,15,15,0,16,10],
[8,8,7,8,9,5,0,3],
[14,10,16,16,18,11,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,10,13,13,13,11],
[10,0,7,6,8,14,12,8],
[9,14,0,10,10,13,15,12],
[11,15,11,0,9,15,12,13],
[8,13,11,12,0,12,14,11],
[8,7,8,6,9,0,12,9],
[8,9,6,9,7,9,0,10],
[10,13,9,8,10,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,11,8,13,14,10],
[10,0,11,11,11,14,15,11],
[9,10,0,10,12,13,11,13],
[10,10,11,0,12,16,16,8],
[13,10,9,9,0,14,15,12],
[8,7,8,5,7,0,12,9],
[7,6,10,5,6,9,0,7],
[11,10,8,13,9,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,13,5,9,11,11],
[12,0,11,8,6,9,7,10],
[7,10,0,7,8,7,11,9],
[8,13,14,0,11,12,12,13],
[16,15,13,10,0,12,15,12],
[12,12,14,9,9,0,14,12],
[10,14,10,9,6,7,0,12],
[10,11,12,8,9,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,6,14,6,6,6],
[7,0,7,13,7,0,7,7],
[8,14,0,14,14,14,14,14],
[15,8,7,0,8,0,15,0],
[7,14,7,13,0,6,13,7],
[15,21,7,21,15,0,15,15],
[15,14,7,6,8,6,0,0],
[15,14,7,21,14,6,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,11,11,9,11,11],
[10,0,12,8,9,12,14,12],
[12,9,0,7,9,13,9,9],
[10,13,14,0,7,16,13,8],
[10,12,12,14,0,9,11,9],
[12,9,8,5,12,0,9,2],
[10,7,12,8,10,12,0,7],
[10,9,12,13,12,19,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,14,15,10,10,10],
[10,0,11,14,11,9,9,12],
[9,10,0,12,9,7,9,11],
[7,7,9,0,10,9,9,10],
[6,10,12,11,0,9,7,9],
[11,12,14,12,12,0,13,10],
[11,12,12,12,14,8,0,11],
[11,9,10,11,12,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,19,11,19,7,15],
[6,0,8,11,11,15,5,11],
[6,13,0,17,13,17,5,13],
[2,10,4,0,4,8,2,8],
[10,10,8,17,0,8,13,4],
[2,6,4,13,13,0,5,2],
[14,16,16,19,8,16,0,8],
[6,10,8,13,17,19,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,6,9,6,8,8,11],
[13,0,7,13,10,10,10,9],
[15,14,0,13,10,12,13,13],
[12,8,8,0,11,12,10,10],
[15,11,11,10,0,12,13,14],
[13,11,9,9,9,0,8,13],
[13,11,8,11,8,13,0,11],
[10,12,8,11,7,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,5,5,13,13,10,10],
[16,0,16,8,18,13,10,15],
[16,5,0,5,18,18,15,15],
[16,13,16,0,18,13,10,15],
[8,3,3,3,0,3,0,5],
[8,8,3,8,18,0,5,8],
[11,11,6,11,21,16,0,11],
[11,6,6,6,16,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,10,8,8,14,8],
[7,0,7,12,8,4,17,12],
[11,14,0,21,12,8,18,16],
[11,9,0,0,12,8,14,7],
[13,13,9,9,0,13,14,12],
[13,17,13,13,8,0,17,13],
[7,4,3,7,7,4,0,7],
[13,9,5,14,9,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,13,8,13,10,10],
[12,0,13,10,12,12,10,11],
[9,8,0,7,8,11,8,9],
[8,11,14,0,9,11,8,9],
[13,9,13,12,0,14,11,12],
[8,9,10,10,7,0,9,9],
[11,11,13,13,10,12,0,9],
[11,10,12,12,9,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,14,13,15,9,16],
[3,0,7,8,9,9,7,9],
[7,14,0,10,7,4,9,7],
[7,13,11,0,10,13,7,8],
[8,12,14,11,0,14,7,10],
[6,12,17,8,7,0,7,8],
[12,14,12,14,14,14,0,10],
[5,12,14,13,11,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,14,13,10,10,11],
[6,0,12,11,9,9,8,4],
[9,9,0,9,11,9,11,9],
[7,10,12,0,12,9,10,6],
[8,12,10,9,0,8,10,7],
[11,12,12,12,13,0,13,10],
[11,13,10,11,11,8,0,7],
[10,17,12,15,14,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,11,10,14,11,12],
[8,0,12,7,8,12,11,9],
[8,9,0,9,7,7,4,8],
[10,14,12,0,10,15,11,14],
[11,13,14,11,0,11,10,13],
[7,9,14,6,10,0,9,12],
[10,10,17,10,11,12,0,11],
[9,12,13,7,8,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,13,11,10,12,11],
[10,0,13,12,10,11,14,10],
[10,8,0,13,9,9,12,9],
[8,9,8,0,7,6,9,11],
[10,11,12,14,0,9,10,9],
[11,10,12,15,12,0,11,10],
[9,7,9,12,11,10,0,9],
[10,11,12,10,12,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,9,6,12,13,10],
[15,0,9,13,7,10,11,12],
[15,12,0,13,4,8,15,8],
[12,8,8,0,6,12,8,8],
[15,14,17,15,0,12,15,10],
[9,11,13,9,9,0,13,11],
[8,10,6,13,6,8,0,6],
[11,9,13,13,11,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,11,15,8,9,13],
[11,0,10,12,15,13,11,16],
[8,11,0,14,16,9,8,13],
[10,9,7,0,18,9,9,11],
[6,6,5,3,0,7,8,9],
[13,8,12,12,14,0,9,13],
[12,10,13,12,13,12,0,14],
[8,5,8,10,12,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,3,4,7,10,7,6],
[15,0,1,6,5,11,10,11],
[18,20,0,6,9,17,10,13],
[17,15,15,0,7,17,4,7],
[14,16,12,14,0,14,11,8],
[11,10,4,4,7,0,5,6],
[14,11,11,17,10,16,0,15],
[15,10,8,14,13,15,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,9,13,9,4,8],
[9,0,9,8,11,9,4,12],
[6,12,0,10,13,13,4,12],
[12,13,11,0,11,12,9,12],
[8,10,8,10,0,9,6,12],
[12,12,8,9,12,0,12,13],
[17,17,17,12,15,9,0,13],
[13,9,9,9,9,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,10,12,11,14,12],
[12,0,13,12,9,11,13,17],
[11,8,0,7,8,11,12,15],
[11,9,14,0,9,14,11,15],
[9,12,13,12,0,11,11,14],
[10,10,10,7,10,0,10,10],
[7,8,9,10,10,11,0,12],
[9,4,6,6,7,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,12,12,10,13,13],
[9,0,7,12,11,9,10,9],
[14,14,0,12,11,11,10,14],
[9,9,9,0,10,12,12,11],
[9,10,10,11,0,9,8,12],
[11,12,10,9,12,0,12,13],
[8,11,11,9,13,9,0,14],
[8,12,7,10,9,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,6,8,7,10,9],
[10,0,11,10,8,5,10,10],
[10,10,0,11,9,12,10,10],
[15,11,10,0,10,10,10,9],
[13,13,12,11,0,9,12,13],
[14,16,9,11,12,0,13,13],
[11,11,11,11,9,8,0,9],
[12,11,11,12,8,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,9,13,11,13,10],
[10,0,13,11,15,8,12,11],
[5,8,0,10,12,8,9,6],
[12,10,11,0,14,8,13,10],
[8,6,9,7,0,8,11,9],
[10,13,13,13,13,0,12,11],
[8,9,12,8,10,9,0,9],
[11,10,15,11,12,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,15,14,7,9,13],
[14,0,15,17,15,12,10,16],
[11,6,0,16,13,12,6,14],
[6,4,5,0,8,8,10,6],
[7,6,8,13,0,7,10,8],
[14,9,9,13,14,0,11,11],
[12,11,15,11,11,10,0,13],
[8,5,7,15,13,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,10,12,10,10,13],
[8,0,11,8,9,7,9,14],
[9,10,0,8,8,7,10,10],
[11,13,13,0,11,11,10,13],
[9,12,13,10,0,7,8,13],
[11,14,14,10,14,0,12,14],
[11,12,11,11,13,9,0,14],
[8,7,11,8,8,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,14,8,6,8,0,14],
[13,0,21,21,13,7,13,21],
[7,0,0,8,6,7,7,21],
[13,0,13,0,6,7,7,21],
[15,8,15,15,0,15,15,21],
[13,14,14,14,6,0,13,21],
[21,8,14,14,6,8,0,14],
[7,0,0,0,0,0,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,6,10,7,9,12],
[9,0,8,5,15,7,8,7],
[11,13,0,7,13,9,10,7],
[15,16,14,0,14,10,13,11],
[11,6,8,7,0,5,4,7],
[14,14,12,11,16,0,9,10],
[12,13,11,8,17,12,0,12],
[9,14,14,10,14,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,6,11,8,7,8,15],
[10,0,13,14,7,7,7,15],
[15,8,0,8,12,7,12,15],
[10,7,13,0,4,4,4,10],
[13,14,9,17,0,13,6,18],
[14,14,14,17,8,0,8,14],
[13,14,9,17,15,13,0,15],
[6,6,6,11,3,7,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,16,11,16,16,5],
[5,0,10,10,6,5,16,0],
[0,11,0,5,11,6,11,5],
[5,11,16,0,11,11,11,5],
[10,15,10,10,0,5,21,15],
[5,16,15,10,16,0,16,10],
[5,5,10,10,0,5,0,0],
[16,21,16,16,6,11,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,9,7,9,5,11],
[11,0,8,11,14,9,8,9],
[10,13,0,7,10,10,7,9],
[12,10,14,0,10,12,14,9],
[14,7,11,11,0,14,7,10],
[12,12,11,9,7,0,8,13],
[16,13,14,7,14,13,0,11],
[10,12,12,12,11,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,14,8,11,18,11],
[8,0,8,12,8,8,15,11],
[9,13,0,17,14,9,16,6],
[7,9,4,0,7,10,14,10],
[13,13,7,14,0,13,14,13],
[10,13,12,11,8,0,17,9],
[3,6,5,7,7,4,0,6],
[10,10,15,11,8,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,18,16,16,15,18],
[11,0,9,16,13,10,11,15],
[11,12,0,16,12,14,9,16],
[3,5,5,0,8,5,7,11],
[5,8,9,13,0,9,10,13],
[5,11,7,16,12,0,9,16],
[6,10,12,14,11,12,0,15],
[3,6,5,10,8,5,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,9,4,8,3,10],
[10,0,7,10,7,10,10,10],
[13,14,0,7,4,8,7,14],
[12,11,14,0,12,12,7,16],
[17,14,17,9,0,10,3,21],
[13,11,13,9,11,0,14,16],
[18,11,14,14,18,7,0,18],
[11,11,7,5,0,5,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,12,15,10,12,14],
[4,0,11,10,8,6,7,9],
[5,10,0,9,9,6,7,8],
[9,11,12,0,13,8,12,12],
[6,13,12,8,0,5,6,11],
[11,15,15,13,16,0,10,12],
[9,14,14,9,15,11,0,11],
[7,12,13,9,10,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,4,8,9,8,6,4],
[14,0,10,15,15,10,12,8],
[17,11,0,14,15,13,11,10],
[13,6,7,0,12,9,6,10],
[12,6,6,9,0,7,7,5],
[13,11,8,12,14,0,9,11],
[15,9,10,15,14,12,0,10],
[17,13,11,11,16,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,16,11,9,9,11],
[12,0,14,16,8,8,13,11],
[9,7,0,12,11,6,12,7],
[5,5,9,0,9,9,12,8],
[10,13,10,12,0,12,10,10],
[12,13,15,12,9,0,13,11],
[12,8,9,9,11,8,0,13],
[10,10,14,13,11,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,21,21,20,7,21,11],
[6,0,16,21,9,13,13,17],
[0,5,0,14,8,0,11,5],
[0,0,7,0,0,7,13,5],
[1,12,13,21,0,7,13,12],
[14,8,21,14,14,0,15,5],
[0,8,10,8,8,6,0,5],
[10,4,16,16,9,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,9,6,8,9,8],
[11,0,10,6,10,12,10,9],
[13,11,0,10,12,10,9,12],
[12,15,11,0,13,10,11,12],
[15,11,9,8,0,10,12,13],
[13,9,11,11,11,0,12,14],
[12,11,12,10,9,9,0,11],
[13,12,9,9,8,7,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,15,14,10,7,15],
[9,0,17,21,17,17,9,13],
[9,4,0,11,10,13,11,15],
[6,0,10,0,10,14,6,13],
[7,4,11,11,0,7,7,15],
[11,4,8,7,14,0,11,15],
[14,12,10,15,14,10,0,17],
[6,8,6,8,6,6,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,7,6,6,10,6,9],
[15,0,10,7,9,14,7,9],
[14,11,0,9,6,12,6,13],
[15,14,12,0,11,9,8,12],
[15,12,15,10,0,14,11,12],
[11,7,9,12,7,0,7,11],
[15,14,15,13,10,14,0,13],
[12,12,8,9,9,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,14,12,10,17,11],
[10,0,10,11,6,7,16,12],
[8,11,0,11,5,14,16,10],
[7,10,10,0,6,6,13,12],
[9,15,16,15,0,12,17,12],
[11,14,7,15,9,0,15,10],
[4,5,5,8,4,6,0,4],
[10,9,11,9,9,11,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,6,4,9,13,16,8],
[16,0,15,13,8,12,14,11],
[15,6,0,10,10,12,13,11],
[17,8,11,0,11,12,18,13],
[12,13,11,10,0,15,12,13],
[8,9,9,9,6,0,11,5],
[5,7,8,3,9,10,0,7],
[13,10,10,8,8,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,8,6,14,12,18],
[13,0,13,12,6,14,12,16],
[12,8,0,13,13,17,12,12],
[13,9,8,0,14,14,11,17],
[15,15,8,7,0,11,15,15],
[7,7,4,7,10,0,7,13],
[9,9,9,10,6,14,0,17],
[3,5,9,4,6,8,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,6,13,11,12,6],
[12,0,7,18,15,15,12,12],
[12,14,0,18,18,14,11,8],
[15,3,3,0,15,8,6,5],
[8,6,3,6,0,5,6,3],
[10,6,7,13,16,0,10,7],
[9,9,10,15,15,11,0,8],
[15,9,13,16,18,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,13,13,8,9,7],
[8,0,15,11,16,7,11,8],
[12,6,0,8,12,6,9,9],
[8,10,13,0,12,6,9,4],
[8,5,9,9,0,5,10,8],
[13,14,15,15,16,0,9,12],
[12,10,12,12,11,12,0,12],
[14,13,12,17,13,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,9,13,13,15,19],
[7,0,9,8,10,11,13,14],
[10,12,0,11,12,13,15,14],
[12,13,10,0,13,16,10,16],
[8,11,9,8,0,12,10,11],
[8,10,8,5,9,0,10,15],
[6,8,6,11,11,11,0,14],
[2,7,7,5,10,6,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,7,11,6,11,7,12],
[16,0,11,14,11,11,8,15],
[14,10,0,14,9,14,11,11],
[10,7,7,0,9,9,6,13],
[15,10,12,12,0,11,7,12],
[10,10,7,12,10,0,6,13],
[14,13,10,15,14,15,0,12],
[9,6,10,8,9,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,7,11,12,7,8],
[9,0,11,5,6,10,10,9],
[11,10,0,8,9,12,8,9],
[14,16,13,0,11,13,11,10],
[10,15,12,10,0,15,10,11],
[9,11,9,8,6,0,6,8],
[14,11,13,10,11,15,0,10],
[13,12,12,11,10,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,13,13,10,14,12],
[13,0,11,13,13,15,14,10],
[9,10,0,12,11,8,15,11],
[8,8,9,0,12,7,14,12],
[8,8,10,9,0,8,16,12],
[11,6,13,14,13,0,17,12],
[7,7,6,7,5,4,0,2],
[9,11,10,9,9,9,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,7,14,12,10,17],
[13,0,16,7,14,16,11,12],
[12,5,0,5,13,18,10,13],
[14,14,16,0,14,18,7,11],
[7,7,8,7,0,11,5,7],
[9,5,3,3,10,0,7,10],
[11,10,11,14,16,14,0,15],
[4,9,8,10,14,11,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,10,8,14,11,11],
[6,0,7,10,9,12,8,8],
[10,14,0,10,8,14,13,12],
[11,11,11,0,9,9,11,9],
[13,12,13,12,0,14,15,10],
[7,9,7,12,7,0,10,6],
[10,13,8,10,6,11,0,10],
[10,13,9,12,11,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,12,17,17,8,17],
[13,0,4,8,21,13,4,13],
[9,17,0,4,17,9,4,9],
[9,13,17,0,17,17,12,9],
[4,0,4,4,0,4,4,9],
[4,8,12,4,17,0,12,9],
[13,17,17,9,17,9,0,9],
[4,8,12,12,12,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,8,11,9,10,10],
[12,0,12,13,12,12,9,11],
[8,9,0,10,8,7,7,12],
[13,8,11,0,10,8,12,11],
[10,9,13,11,0,10,10,13],
[12,9,14,13,11,0,11,13],
[11,12,14,9,11,10,0,11],
[11,10,9,10,8,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,12,12,8,15,12],
[13,0,16,10,15,14,15,12],
[9,5,0,14,13,9,12,8],
[9,11,7,0,10,12,11,7],
[9,6,8,11,0,8,9,10],
[13,7,12,9,13,0,15,9],
[6,6,9,10,12,6,0,6],
[9,9,13,14,11,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,11,13,10,12,11],
[7,0,9,8,12,9,10,8],
[7,12,0,8,10,8,9,7],
[10,13,13,0,15,14,16,13],
[8,9,11,6,0,8,9,8],
[11,12,13,7,13,0,10,11],
[9,11,12,5,12,11,0,11],
[10,13,14,8,13,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,15,14,9,14,14],
[12,0,11,12,12,11,14,10],
[13,10,0,13,15,18,12,12],
[6,9,8,0,15,11,11,8],
[7,9,6,6,0,9,9,11],
[12,10,3,10,12,0,12,12],
[7,7,9,10,12,9,0,12],
[7,11,9,13,10,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,10,10,10,8,8],
[9,0,11,10,7,8,6,8],
[13,10,0,10,9,10,9,7],
[11,11,11,0,10,9,7,9],
[11,14,12,11,0,10,13,10],
[11,13,11,12,11,0,9,11],
[13,15,12,14,8,12,0,11],
[13,13,14,12,11,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,9,6,7,6,12],
[13,0,12,12,9,10,11,10],
[13,9,0,9,8,7,11,8],
[12,9,12,0,8,8,11,11],
[15,12,13,13,0,13,9,12],
[14,11,14,13,8,0,12,12],
[15,10,10,10,12,9,0,11],
[9,11,13,10,9,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,6,11,6,6,10,11],
[13,0,10,9,11,9,15,11],
[15,11,0,5,11,11,9,15],
[10,12,16,0,12,10,6,16],
[15,10,10,9,0,4,10,15],
[15,12,10,11,17,0,11,15],
[11,6,12,15,11,10,0,17],
[10,10,6,5,6,6,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,9,10,12,10,10],
[11,0,7,10,12,10,9,11],
[14,14,0,13,9,14,14,9],
[12,11,8,0,6,9,13,5],
[11,9,12,15,0,12,11,6],
[9,11,7,12,9,0,11,2],
[11,12,7,8,10,10,0,9],
[11,10,12,16,15,19,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,12,14,12,12,10],
[5,0,8,13,8,10,8,13],
[9,13,0,14,6,10,6,11],
[9,8,7,0,6,9,7,10],
[7,13,15,15,0,7,9,13],
[9,11,11,12,14,0,12,14],
[9,13,15,14,12,9,0,13],
[11,8,10,11,8,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,10,14,13,13,13],
[11,0,11,13,16,7,16,7],
[9,10,0,9,9,5,13,13],
[11,8,12,0,16,12,12,12],
[7,5,12,5,0,8,8,8],
[8,14,16,9,13,0,12,8],
[8,5,8,9,13,9,0,3],
[8,14,8,9,13,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,6,15,9,9,12],
[12,0,12,9,21,12,12,15],
[9,9,0,6,12,6,12,15],
[15,12,15,0,21,9,15,12],
[6,0,9,0,0,3,9,9],
[12,9,15,12,18,0,12,15],
[12,9,9,6,12,9,0,9],
[9,6,6,9,12,6,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,11,9,13,8,12],
[9,0,7,7,9,11,6,7],
[7,14,0,8,10,14,6,9],
[10,14,13,0,14,12,14,13],
[12,12,11,7,0,7,6,16],
[8,10,7,9,14,0,4,12],
[13,15,15,7,15,17,0,17],
[9,14,12,8,5,9,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,13,12,7,11,11],
[9,0,11,11,10,10,9,10],
[11,10,0,10,7,4,7,5],
[8,10,11,0,9,10,8,8],
[9,11,14,12,0,9,11,8],
[14,11,17,11,12,0,10,11],
[10,12,14,13,10,11,0,10],
[10,11,16,13,13,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,7,8,6,12,9],
[12,0,12,8,8,8,14,12],
[13,9,0,9,9,11,9,9],
[14,13,12,0,10,9,16,14],
[13,13,12,11,0,10,14,14],
[15,13,10,12,11,0,14,13],
[9,7,12,5,7,7,0,10],
[12,9,12,7,7,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,6,11,8,9,13],
[12,0,9,11,13,10,9,14],
[12,12,0,11,15,9,12,15],
[15,10,10,0,12,11,7,17],
[10,8,6,9,0,5,6,16],
[13,11,12,10,16,0,9,17],
[12,12,9,14,15,12,0,17],
[8,7,6,4,5,4,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,12,14,11,11,13],
[12,0,14,14,10,11,12,15],
[9,7,0,10,9,13,8,12],
[9,7,11,0,8,7,9,11],
[7,11,12,13,0,10,10,17],
[10,10,8,14,11,0,9,10],
[10,9,13,12,11,12,0,11],
[8,6,9,10,4,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,16,10,15,12,15],
[9,0,9,14,9,10,8,8],
[8,12,0,17,14,10,11,11],
[5,7,4,0,6,8,6,7],
[11,12,7,15,0,9,12,11],
[6,11,11,13,12,0,10,9],
[9,13,10,15,9,11,0,10],
[6,13,10,14,10,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,6,6,7,12,6,7],
[13,0,9,10,13,13,14,7],
[15,12,0,11,13,14,12,10],
[15,11,10,0,12,10,9,9],
[14,8,8,9,0,13,12,11],
[9,8,7,11,8,0,9,9],
[15,7,9,12,9,12,0,9],
[14,14,11,12,10,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,16,13,13,15,14],
[9,0,8,12,9,13,16,10],
[11,13,0,15,13,10,15,14],
[5,9,6,0,11,12,14,12],
[8,12,8,10,0,11,14,11],
[8,8,11,9,10,0,12,13],
[6,5,6,7,7,9,0,10],
[7,11,7,9,10,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,9,17,9,12,8],
[8,0,13,8,16,13,15,11],
[9,8,0,4,12,6,8,6],
[12,13,17,0,18,9,14,14],
[4,5,9,3,0,6,11,8],
[12,8,15,12,15,0,8,10],
[9,6,13,7,10,13,0,9],
[13,10,15,7,13,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,18,17,10,17,18],
[6,0,6,6,10,6,10,10],
[7,15,0,11,15,13,14,15],
[3,15,10,0,7,13,13,10],
[4,11,6,14,0,10,13,11],
[11,15,8,8,11,0,10,11],
[4,11,7,8,8,11,0,15],
[3,11,6,11,10,10,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,7,6,9,8,4],
[12,0,10,8,7,6,13,6],
[15,11,0,5,4,9,11,9],
[14,13,16,0,12,6,11,9],
[15,14,17,9,0,11,15,11],
[12,15,12,15,10,0,13,11],
[13,8,10,10,6,8,0,9],
[17,15,12,12,10,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,5,14,14,12,12],
[5,0,4,3,7,6,12,10],
[8,17,0,11,15,17,16,17],
[16,18,10,0,17,18,18,19],
[7,14,6,4,0,7,13,12],
[7,15,4,3,14,0,15,14],
[9,9,5,3,8,6,0,14],
[9,11,4,2,9,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,5,6,14,11,6,11],
[9,0,9,5,12,10,7,12],
[16,12,0,12,16,14,10,12],
[15,16,9,0,17,16,12,13],
[7,9,5,4,0,7,4,6],
[10,11,7,5,14,0,7,10],
[15,14,11,9,17,14,0,14],
[10,9,9,8,15,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,12,10,9,11,16],
[8,0,10,9,9,8,8,11],
[11,11,0,14,11,10,11,16],
[9,12,7,0,10,11,10,13],
[11,12,10,11,0,11,11,14],
[12,13,11,10,10,0,14,16],
[10,13,10,11,10,7,0,15],
[5,10,5,8,7,5,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,10,12,6,10,4],
[11,0,14,11,15,10,8,10],
[13,7,0,9,10,10,8,12],
[11,10,12,0,11,11,8,11],
[9,6,11,10,0,9,10,8],
[15,11,11,10,12,0,13,16],
[11,13,13,13,11,8,0,10],
[17,11,9,10,13,5,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,7,11,9,12,11],
[12,0,12,8,10,9,12,8],
[13,9,0,12,15,12,10,9],
[14,13,9,0,14,13,11,10],
[10,11,6,7,0,10,10,10],
[12,12,9,8,11,0,14,11],
[9,9,11,10,11,7,0,12],
[10,13,12,11,11,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,16,16,10,10,11],
[11,0,11,11,11,11,11,6],
[11,10,0,11,11,10,10,11],
[5,10,10,0,10,10,10,10],
[5,10,10,11,0,10,10,5],
[11,10,11,11,11,0,16,6],
[11,10,11,11,11,5,0,6],
[10,15,10,11,16,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,8,13,9,8,8],
[9,0,17,8,13,9,12,12],
[8,4,0,8,5,9,0,8],
[13,13,13,0,5,9,4,17],
[8,8,16,16,0,13,16,12],
[12,12,12,12,8,0,12,8],
[13,9,21,17,5,9,0,13],
[13,9,13,4,9,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,9,9,12,11,10],
[10,0,10,7,7,5,6,10],
[11,11,0,6,11,9,6,13],
[12,14,15,0,13,12,10,12],
[12,14,10,8,0,10,9,13],
[9,16,12,9,11,0,13,13],
[10,15,15,11,12,8,0,11],
[11,11,8,9,8,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,6,12,8,12,7],
[12,0,12,9,9,8,13,7],
[10,9,0,7,5,8,9,8],
[15,12,14,0,10,9,13,8],
[9,12,16,11,0,11,14,12],
[13,13,13,12,10,0,13,8],
[9,8,12,8,7,8,0,10],
[14,14,13,13,9,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,12,4,9,9,9],
[12,0,8,12,5,10,13,14],
[12,13,0,12,9,10,14,14],
[9,9,9,0,9,14,14,18],
[17,16,12,12,0,10,17,14],
[12,11,11,7,11,0,12,14],
[12,8,7,7,4,9,0,13],
[12,7,7,3,7,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,12,12,11,14,13],
[11,0,8,13,13,12,15,13],
[10,13,0,11,10,14,14,15],
[9,8,10,0,10,13,10,10],
[9,8,11,11,0,13,11,15],
[10,9,7,8,8,0,10,13],
[7,6,7,11,10,11,0,11],
[8,8,6,11,6,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,14,8,11,10,11],
[8,0,11,12,8,9,11,10],
[8,10,0,13,10,8,9,10],
[7,9,8,0,8,6,9,7],
[13,13,11,13,0,13,10,9],
[10,12,13,15,8,0,13,11],
[11,10,12,12,11,8,0,8],
[10,11,11,14,12,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,16,11,14,15,6],
[8,0,9,16,9,11,16,11],
[12,12,0,12,10,7,12,9],
[5,5,9,0,0,3,4,3],
[10,12,11,21,0,13,18,5],
[7,10,14,18,8,0,13,5],
[6,5,9,17,3,8,0,3],
[15,10,12,18,16,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,13,21,13,5,5,13],
[16,0,8,21,8,16,13,16],
[8,13,0,21,13,13,13,8],
[0,0,0,0,0,0,5,0],
[8,13,8,21,0,8,13,8],
[16,5,8,21,13,0,13,16],
[16,8,8,16,8,8,0,16],
[8,5,13,21,13,5,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,8,11,11,9,11],
[10,0,15,9,12,8,9,12],
[7,6,0,10,10,9,10,14],
[13,12,11,0,7,10,10,16],
[10,9,11,14,0,8,10,12],
[10,13,12,11,13,0,11,11],
[12,12,11,11,11,10,0,13],
[10,9,7,5,9,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,15,10,12,14,11],
[8,0,4,7,8,10,10,7],
[13,17,0,17,14,17,15,10],
[6,14,4,0,9,9,11,5],
[11,13,7,12,0,13,11,9],
[9,11,4,12,8,0,9,8],
[7,11,6,10,10,12,0,8],
[10,14,11,16,12,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,3,3,7,6,6,0],
[15,0,10,4,15,11,10,8],
[18,11,0,11,11,11,7,8],
[18,17,10,0,11,14,14,10],
[14,6,10,10,0,10,6,14],
[15,10,10,7,11,0,13,11],
[15,11,14,7,15,8,0,11],
[21,13,13,11,7,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,16,10,9,10,10],
[8,0,9,13,8,8,12,9],
[13,12,0,15,11,9,11,12],
[5,8,6,0,10,7,8,5],
[11,13,10,11,0,12,11,10],
[12,13,12,14,9,0,16,12],
[11,9,10,13,10,5,0,12],
[11,12,9,16,11,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,10,17,9,18,14],
[10,0,11,14,11,11,18,12],
[14,10,0,11,17,13,15,12],
[11,7,10,0,12,12,12,12],
[4,10,4,9,0,5,12,9],
[12,10,8,9,16,0,17,15],
[3,3,6,9,9,4,0,8],
[7,9,9,9,12,6,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,6,4,9,10,15,9],
[17,0,6,9,9,10,12,6],
[15,15,0,7,11,11,17,9],
[17,12,14,0,12,9,14,12],
[12,12,10,9,0,12,14,13],
[11,11,10,12,9,0,13,12],
[6,9,4,7,7,8,0,2],
[12,15,12,9,8,9,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,14,12,9,12,9],
[7,0,13,11,9,11,13,8],
[8,8,0,9,9,6,9,8],
[7,10,12,0,8,8,14,10],
[9,12,12,13,0,12,12,13],
[12,10,15,13,9,0,13,10],
[9,8,12,7,9,8,0,10],
[12,13,13,11,8,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,15,9,17,14,15],
[13,0,13,13,8,16,17,12],
[8,8,0,8,10,13,11,6],
[6,8,13,0,8,12,11,7],
[12,13,11,13,0,17,15,9],
[4,5,8,9,4,0,11,1],
[7,4,10,10,6,10,0,8],
[6,9,15,14,12,20,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,10,9,13,9,10],
[11,0,14,15,10,13,12,10],
[9,7,0,17,10,15,10,6],
[11,6,4,0,6,8,8,5],
[12,11,11,15,0,17,12,10],
[8,8,6,13,4,0,7,8],
[12,9,11,13,9,14,0,12],
[11,11,15,16,11,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,10,12,14,9,10],
[7,0,13,13,14,14,14,15],
[7,8,0,10,14,14,12,12],
[11,8,11,0,14,11,9,8],
[9,7,7,7,0,10,7,10],
[7,7,7,10,11,0,14,12],
[12,7,9,12,14,7,0,9],
[11,6,9,13,11,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,13,13,13,12,10],
[6,0,8,10,11,9,9,6],
[9,13,0,11,11,10,10,12],
[8,11,10,0,12,12,9,9],
[8,10,10,9,0,11,12,7],
[8,12,11,9,10,0,7,10],
[9,12,11,12,9,14,0,8],
[11,15,9,12,14,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,6,7,9,5,7,9],
[13,0,9,11,12,6,11,8],
[15,12,0,10,9,7,11,9],
[14,10,11,0,7,7,10,10],
[12,9,12,14,0,12,12,13],
[16,15,14,14,9,0,12,11],
[14,10,10,11,9,9,0,13],
[12,13,12,11,8,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,11,10,11,13,15],
[9,0,7,8,11,7,11,9],
[9,14,0,13,12,14,17,14],
[10,13,8,0,10,9,14,10],
[11,10,9,11,0,12,14,13],
[10,14,7,12,9,0,13,13],
[8,10,4,7,7,8,0,8],
[6,12,7,11,8,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,5,7,6,9,8],
[13,0,13,11,11,7,15,11],
[13,8,0,12,10,7,13,11],
[16,10,9,0,10,7,12,11],
[14,10,11,11,0,9,14,9],
[15,14,14,14,12,0,14,10],
[12,6,8,9,7,7,0,7],
[13,10,10,10,12,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,11,9,9,6,8,10],
[16,0,11,7,12,10,11,16],
[10,10,0,8,12,5,7,11],
[12,14,13,0,11,14,8,15],
[12,9,9,10,0,12,9,15],
[15,11,16,7,9,0,13,11],
[13,10,14,13,12,8,0,11],
[11,5,10,6,6,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,13,7,15,11,6],
[11,0,11,10,8,12,13,10],
[13,10,0,13,10,14,16,11],
[8,11,8,0,4,14,9,5],
[14,13,11,17,0,15,14,8],
[6,9,7,7,6,0,11,7],
[10,8,5,12,7,10,0,5],
[15,11,10,16,13,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,13,10,9,11,10],
[8,0,10,13,11,9,9,8],
[10,11,0,12,9,7,11,11],
[8,8,9,0,9,9,9,9],
[11,10,12,12,0,11,12,11],
[12,12,14,12,10,0,14,12],
[10,12,10,12,9,7,0,9],
[11,13,10,12,10,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,13,15,13,7,13],
[8,0,15,14,8,8,8,21],
[8,6,0,14,8,8,8,6],
[8,7,7,0,15,8,8,7],
[6,13,13,6,0,6,6,13],
[8,13,13,13,15,0,15,13],
[14,13,13,13,15,6,0,13],
[8,0,15,14,8,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,7,7,9,8,7,7],
[8,0,11,4,8,8,3,9],
[14,10,0,9,10,8,11,12],
[14,17,12,0,7,9,5,12],
[12,13,11,14,0,10,10,11],
[13,13,13,12,11,0,10,15],
[14,18,10,16,11,11,0,12],
[14,12,9,9,10,6,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,5,12,16,9,10,9],
[13,0,8,11,12,10,11,11],
[16,13,0,9,13,9,11,13],
[9,10,12,0,14,11,9,10],
[5,9,8,7,0,13,5,9],
[12,11,12,10,8,0,6,10],
[11,10,10,12,16,15,0,13],
[12,10,8,11,12,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,13,13,13,13,6],
[8,0,0,7,7,13,0,14],
[8,21,0,13,13,13,6,14],
[8,14,8,0,0,21,8,14],
[8,14,8,21,0,21,8,14],
[8,8,8,0,0,0,8,8],
[8,21,15,13,13,13,0,14],
[15,7,7,7,7,13,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,9,7,2,10,7],
[10,0,14,12,11,8,11,14],
[14,7,0,12,4,9,9,7],
[12,9,9,0,5,3,10,5],
[14,10,17,16,0,10,10,13],
[19,13,12,18,11,0,12,7],
[11,10,12,11,11,9,0,12],
[14,7,14,16,8,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,6,13,10,12,13,12],
[9,0,15,21,10,21,11,17],
[15,6,0,21,14,17,11,20],
[8,0,0,0,8,8,2,6],
[11,11,7,13,0,11,13,9],
[9,0,4,13,10,0,3,12],
[8,10,10,19,8,18,0,14],
[9,4,1,15,12,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,14,7,4,9,9],
[11,0,7,15,7,8,11,11],
[7,14,0,19,7,8,11,13],
[7,6,2,0,7,0,5,9],
[14,14,14,14,0,12,10,17],
[17,13,13,21,9,0,9,17],
[12,10,10,16,11,12,0,17],
[12,10,8,12,4,4,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,7,17,15,11,14,13],
[7,0,7,10,10,10,13,11],
[14,14,0,18,13,8,15,12],
[4,11,3,0,7,7,12,6],
[6,11,8,14,0,7,13,9],
[10,11,13,14,14,0,17,13],
[7,8,6,9,8,4,0,8],
[8,10,9,15,12,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,12,12,16,14,12],
[11,0,12,13,11,11,8,10],
[11,9,0,10,15,10,9,12],
[9,8,11,0,11,13,8,12],
[9,10,6,10,0,8,9,10],
[5,10,11,8,13,0,8,10],
[7,13,12,13,12,13,0,15],
[9,11,9,9,11,11,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,17,13,9,11,8],
[12,0,14,18,13,14,14,9],
[8,7,0,14,10,9,11,7],
[4,3,7,0,5,7,5,4],
[8,8,11,16,0,13,6,8],
[12,7,12,14,8,0,12,14],
[10,7,10,16,15,9,0,10],
[13,12,14,17,13,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,7,14,14,21,14,21],
[7,0,14,14,14,21,14,14],
[14,7,0,14,14,14,14,14],
[7,7,7,0,14,7,14,14],
[7,7,7,7,0,7,14,21],
[0,0,7,14,14,0,14,14],
[7,7,7,7,7,7,0,7],
[0,7,7,7,0,7,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,6,13,21,6,14,13],
[7,0,13,13,21,7,21,13],
[15,8,0,15,21,15,15,13],
[8,8,6,0,21,0,8,6],
[0,0,0,0,0,0,8,0],
[15,14,6,21,21,0,14,13],
[7,0,6,13,13,7,0,13],
[8,8,8,15,21,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,11,14,9,13,14,15],
[4,0,8,9,8,5,8,14],
[10,13,0,7,18,10,13,15],
[7,12,14,0,12,4,12,9],
[12,13,3,9,0,12,10,15],
[8,16,11,17,9,0,12,13],
[7,13,8,9,11,9,0,12],
[6,7,6,12,6,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,12,7,11,11,7],
[9,0,8,10,7,9,10,6],
[10,13,0,8,8,17,10,13],
[9,11,13,0,7,14,9,11],
[14,14,13,14,0,13,9,10],
[10,12,4,7,8,0,6,3],
[10,11,11,12,12,15,0,13],
[14,15,8,10,11,18,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,5,11,10,6,5,10],
[16,0,11,6,21,16,11,16],
[16,10,0,11,21,16,5,5],
[10,15,10,0,15,16,10,15],
[11,0,0,6,0,6,0,5],
[15,5,5,5,15,0,10,10],
[16,10,16,11,21,11,0,10],
[11,5,16,6,16,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,9,9,14,16,21,14],
[5,0,6,0,5,9,11,11],
[12,15,0,8,8,15,21,8],
[12,21,13,0,8,16,21,11],
[7,16,13,13,0,16,16,13],
[5,12,6,5,5,0,11,11],
[0,10,0,0,5,10,0,0],
[7,10,13,10,8,10,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,11,10,12,13,11],
[8,0,11,11,9,11,11,8],
[7,10,0,8,7,6,12,9],
[10,10,13,0,11,9,9,12],
[11,12,14,10,0,12,12,8],
[9,10,15,12,9,0,12,12],
[8,10,9,12,9,9,0,11],
[10,13,12,9,13,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,4,9,14,11,10],
[4,0,12,6,6,12,10,10],
[7,9,0,11,11,15,15,10],
[17,15,10,0,5,12,12,14],
[12,15,10,16,0,11,12,17],
[7,9,6,9,10,0,3,13],
[10,11,6,9,9,18,0,13],
[11,11,11,7,4,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,8,17,12,14,15],
[10,0,9,13,13,13,7,18],
[10,12,0,7,11,13,12,14],
[13,8,14,0,9,9,12,15],
[4,8,10,12,0,10,5,12],
[9,8,8,12,11,0,8,7],
[7,14,9,9,16,13,0,17],
[6,3,7,6,9,14,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,10,12,11,12,10],
[9,0,15,9,6,9,11,8],
[8,6,0,5,7,7,7,8],
[11,12,16,0,9,11,11,8],
[9,15,14,12,0,10,12,10],
[10,12,14,10,11,0,10,12],
[9,10,14,10,9,11,0,13],
[11,13,13,13,11,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,6,12,9,4,13],
[15,0,15,12,14,8,12,12],
[13,6,0,6,9,6,5,11],
[15,9,15,0,13,8,10,10],
[9,7,12,8,0,10,5,14],
[12,13,15,13,11,0,6,17],
[17,9,16,11,16,15,0,17],
[8,9,10,11,7,4,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,10,10,10,5,16,5],
[16,0,5,16,10,10,11,10],
[11,16,0,16,15,5,16,5],
[11,5,5,0,10,5,11,5],
[11,11,6,11,0,11,6,6],
[16,11,16,16,10,0,16,11],
[5,10,5,10,15,5,0,10],
[16,11,16,16,15,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,11,11,9,9,11],
[8,0,10,6,9,8,5,7],
[7,11,0,9,8,9,7,9],
[10,15,12,0,11,14,13,11],
[10,12,13,10,0,12,9,10],
[12,13,12,7,9,0,8,9],
[12,16,14,8,12,13,0,12],
[10,14,12,10,11,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,11,4,6,11,5],
[11,0,8,10,2,10,6,8],
[11,13,0,16,6,10,9,12],
[10,11,5,0,5,8,8,6],
[17,19,15,16,0,10,21,15],
[15,11,11,13,11,0,12,9],
[10,15,12,13,0,9,0,15],
[16,13,9,15,6,12,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,9,12,13,10,9],
[12,0,8,10,12,13,14,13],
[13,13,0,12,10,13,12,12],
[12,11,9,0,14,13,13,11],
[9,9,11,7,0,13,11,12],
[8,8,8,8,8,0,12,9],
[11,7,9,8,10,9,0,12],
[12,8,9,10,9,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,12,12,13,7,7],
[6,0,3,5,5,3,3,7],
[11,18,0,15,10,11,8,15],
[9,16,6,0,5,15,11,7],
[9,16,11,16,0,12,6,10],
[8,18,10,6,9,0,12,9],
[14,18,13,10,15,9,0,15],
[14,14,6,14,11,12,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,14,13,10,16,15],
[7,0,13,10,13,13,13,18],
[8,8,0,11,13,5,11,10],
[7,11,10,0,15,7,11,12],
[8,8,8,6,0,6,11,9],
[11,8,16,14,15,0,13,14],
[5,8,10,10,10,8,0,9],
[6,3,11,9,12,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,9,14,9,8,18],
[14,0,8,12,15,11,10,16],
[12,13,0,9,12,15,14,15],
[12,9,12,0,15,12,11,13],
[7,6,9,6,0,7,11,13],
[12,10,6,9,14,0,10,13],
[13,11,7,10,10,11,0,14],
[3,5,6,8,8,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,12,12,11,9,10],
[11,0,12,11,10,14,11,12],
[9,9,0,11,9,12,10,10],
[9,10,10,0,10,10,10,11],
[9,11,12,11,0,14,10,12],
[10,7,9,11,7,0,9,8],
[12,10,11,11,11,12,0,13],
[11,9,11,10,9,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,10,8,8,12,10],
[14,0,12,13,15,11,10,11],
[10,9,0,7,9,6,13,8],
[11,8,14,0,8,7,9,14],
[13,6,12,13,0,12,13,14],
[13,10,15,14,9,0,15,18],
[9,11,8,12,8,6,0,12],
[11,10,13,7,7,3,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,13,6,14,12,9],
[13,0,13,10,8,15,15,12],
[8,8,0,9,11,11,13,9],
[8,11,12,0,4,12,9,8],
[15,13,10,17,0,13,18,14],
[7,6,10,9,8,0,14,10],
[9,6,8,12,3,7,0,11],
[12,9,12,13,7,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,14,10,13,8,16],
[8,0,12,7,8,8,8,11],
[10,9,0,7,8,7,12,12],
[7,14,14,0,9,16,9,17],
[11,13,13,12,0,13,10,15],
[8,13,14,5,8,0,10,14],
[13,13,9,12,11,11,0,17],
[5,10,9,4,6,7,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,14,21,12,14,18],
[7,0,9,14,16,3,9,13],
[12,12,0,14,16,3,12,16],
[7,7,7,0,7,7,7,7],
[0,5,5,14,0,8,0,9],
[9,18,18,14,13,0,9,13],
[7,12,9,14,21,12,0,18],
[3,8,5,14,12,8,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,11,15,10,7,11],
[11,0,7,10,15,7,7,14],
[10,14,0,21,14,14,14,17],
[10,11,0,0,8,3,4,7],
[6,6,7,13,0,9,6,17],
[11,14,7,18,12,0,11,18],
[14,14,7,17,15,10,0,21],
[10,7,4,14,4,3,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,14,12,12,8,6],
[12,0,13,15,13,10,11,10],
[11,8,0,10,10,8,7,7],
[7,6,11,0,13,7,9,10],
[9,8,11,8,0,8,10,9],
[9,11,13,14,13,0,9,10],
[13,10,14,12,11,12,0,12],
[15,11,14,11,12,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,10,8,8,7,8],
[9,0,8,12,9,8,6,8],
[11,13,0,11,10,9,13,11],
[11,9,10,0,6,6,8,6],
[13,12,11,15,0,11,11,9],
[13,13,12,15,10,0,13,7],
[14,15,8,13,10,8,0,9],
[13,13,10,15,12,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,14,15,9,13,13],
[8,0,8,15,13,10,12,12],
[9,13,0,15,15,9,16,13],
[7,6,6,0,9,10,10,12],
[6,8,6,12,0,9,11,9],
[12,11,12,11,12,0,13,10],
[8,9,5,11,10,8,0,11],
[8,9,8,9,12,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,7,5,11,10,9],
[13,0,14,10,10,14,13,11],
[12,7,0,10,8,8,11,7],
[14,11,11,0,7,13,13,10],
[16,11,13,14,0,12,14,10],
[10,7,13,8,9,0,11,5],
[11,8,10,8,7,10,0,4],
[12,10,14,11,11,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,11,15,13,6,14],
[9,0,11,9,14,11,12,15],
[10,10,0,8,14,13,6,15],
[10,12,13,0,14,14,10,16],
[6,7,7,7,0,7,6,13],
[8,10,8,7,14,0,11,16],
[15,9,15,11,15,10,0,14],
[7,6,6,5,8,5,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,7,8,17,11,11],
[13,0,12,11,7,13,12,13],
[12,9,0,10,13,11,10,9],
[14,10,11,0,15,14,11,10],
[13,14,8,6,0,16,10,10],
[4,8,10,7,5,0,11,10],
[10,9,11,10,11,10,0,9],
[10,8,12,11,11,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,11,13,11,13,11],
[6,0,10,10,11,10,8,11],
[11,11,0,10,11,7,13,11],
[10,11,11,0,10,10,9,9],
[8,10,10,11,0,11,9,13],
[10,11,14,11,10,0,11,10],
[8,13,8,12,12,10,0,12],
[10,10,10,12,8,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,7,11,13,12,10],
[14,0,9,6,12,14,14,9],
[16,12,0,9,7,14,18,15],
[14,15,12,0,12,14,16,10],
[10,9,14,9,0,17,16,10],
[8,7,7,7,4,0,6,9],
[9,7,3,5,5,15,0,10],
[11,12,6,11,11,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,10,10,12,11,11],
[9,0,9,8,10,10,6,10],
[7,12,0,7,8,11,8,9],
[11,13,14,0,12,13,11,9],
[11,11,13,9,0,12,11,11],
[9,11,10,8,9,0,6,9],
[10,15,13,10,10,15,0,12],
[10,11,12,12,10,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,8,10,8,10,10],
[12,0,6,12,12,8,12,11],
[12,15,0,11,9,13,12,9],
[13,9,10,0,9,10,12,9],
[11,9,12,12,0,10,11,11],
[13,13,8,11,11,0,17,11],
[11,9,9,9,10,4,0,11],
[11,10,12,12,10,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,10,6,9,9,6],
[13,0,12,8,5,11,7,8],
[11,9,0,9,5,12,7,8],
[11,13,12,0,9,12,13,12],
[15,16,16,12,0,14,10,12],
[12,10,9,9,7,0,8,11],
[12,14,14,8,11,13,0,12],
[15,13,13,9,9,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,12,13,12,9,15],
[9,0,8,14,12,9,11,17],
[10,13,0,13,14,12,8,17],
[9,7,8,0,10,10,3,15],
[8,9,7,11,0,8,3,13],
[9,12,9,11,13,0,10,14],
[12,10,13,18,18,11,0,17],
[6,4,4,6,8,7,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,8,14,14,21,14],
[6,0,14,14,14,14,21,14],
[7,7,0,0,21,14,13,13],
[13,7,21,0,21,14,13,13],
[7,7,0,0,0,8,7,0],
[7,7,7,7,13,0,13,13],
[0,0,8,8,14,8,0,0],
[7,7,8,8,21,8,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,12,9,14,14,14],
[8,0,11,10,9,9,8,6],
[6,10,0,10,7,12,9,7],
[9,11,11,0,11,11,9,8],
[12,12,14,10,0,14,11,12],
[7,12,9,10,7,0,6,8],
[7,13,12,12,10,15,0,7],
[7,15,14,13,9,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,6,7,13,14,15,4],
[11,0,10,11,15,8,9,13],
[15,11,0,10,14,12,11,8],
[14,10,11,0,12,12,15,13],
[8,6,7,9,0,4,9,7],
[7,13,9,9,17,0,15,9],
[6,12,10,6,12,6,0,10],
[17,8,13,8,14,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,13,18,11,11,9],
[11,0,7,11,14,9,14,9],
[14,14,0,13,16,11,14,8],
[8,10,8,0,12,10,10,6],
[3,7,5,9,0,5,8,4],
[10,12,10,11,16,0,10,11],
[10,7,7,11,13,11,0,6],
[12,12,13,15,17,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,16,14,14,7,12,10],
[13,0,13,15,12,8,10,12],
[5,8,0,8,7,11,7,11],
[7,6,13,0,12,7,8,9],
[7,9,14,9,0,10,9,10],
[14,13,10,14,11,0,8,7],
[9,11,14,13,12,13,0,12],
[11,9,10,12,11,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,17,11,15,14,14],
[9,0,14,13,8,16,15,15],
[11,7,0,15,7,12,12,13],
[4,8,6,0,9,6,8,9],
[10,13,14,12,0,14,12,12],
[6,5,9,15,7,0,14,12],
[7,6,9,13,9,7,0,8],
[7,6,8,12,9,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,13,8,11,9,12],
[13,0,11,13,11,16,9,10],
[10,10,0,12,15,13,15,12],
[8,8,9,0,10,9,11,10],
[13,10,6,11,0,11,6,9],
[10,5,8,12,10,0,9,10],
[12,12,6,10,15,12,0,11],
[9,11,9,11,12,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,17,14,10,10,10],
[6,0,14,17,10,6,10,6],
[7,7,0,7,10,7,7,6],
[4,4,14,0,10,4,4,10],
[7,11,11,11,0,11,11,11],
[11,15,14,17,10,0,17,6],
[11,11,14,17,10,4,0,10],
[11,15,15,11,10,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,14,9,9,13,9],
[11,0,6,11,6,12,10,9],
[9,15,0,9,8,9,18,15],
[7,10,12,0,6,4,13,9],
[12,15,13,15,0,9,13,10],
[12,9,12,17,12,0,12,9],
[8,11,3,8,8,9,0,14],
[12,12,6,12,11,12,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,3,10,20,11,9,14],
[18,0,8,15,17,15,17,14],
[18,13,0,7,18,14,13,18],
[11,6,14,0,11,11,6,11],
[1,4,3,10,0,7,4,6],
[10,6,7,10,14,0,10,7],
[12,4,8,15,17,11,0,11],
[7,7,3,10,15,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,3,9,5,8,1,7],
[15,0,9,13,10,10,6,12],
[18,12,0,10,6,14,5,9],
[12,8,11,0,9,14,6,9],
[16,11,15,12,0,16,9,12],
[13,11,7,7,5,0,11,8],
[20,15,16,15,12,10,0,12],
[14,9,12,12,9,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,11,11,11,4,4,11],
[17,0,13,13,17,6,14,17],
[10,8,0,8,15,8,8,15],
[10,8,13,0,17,14,14,21],
[10,4,6,4,0,10,10,14],
[17,15,13,7,11,0,21,21],
[17,7,13,7,11,0,0,11],
[10,4,6,0,7,0,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,8,13,11,11,11],
[8,0,12,9,8,13,14,8],
[10,9,0,12,10,11,12,12],
[13,12,9,0,14,12,14,13],
[8,13,11,7,0,12,10,11],
[10,8,10,9,9,0,10,11],
[10,7,9,7,11,11,0,9],
[10,13,9,8,10,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,7,7,11,10,10],
[13,0,8,7,10,17,13,10],
[13,13,0,9,8,15,14,11],
[14,14,12,0,11,15,14,8],
[14,11,13,10,0,18,17,14],
[10,4,6,6,3,0,7,10],
[11,8,7,7,4,14,0,11],
[11,11,10,13,7,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,12,10,11,9,15],
[9,0,10,10,10,10,12,8],
[11,11,0,9,8,10,10,13],
[9,11,12,0,9,8,11,12],
[11,11,13,12,0,8,9,12],
[10,11,11,13,13,0,11,16],
[12,9,11,10,12,10,0,12],
[6,13,8,9,9,5,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,7,8,13,12,16,13],
[17,0,10,12,12,13,14,17],
[14,11,0,15,10,13,16,18],
[13,9,6,0,13,13,13,13],
[8,9,11,8,0,10,13,13],
[9,8,8,8,11,0,12,8],
[5,7,5,8,8,9,0,9],
[8,4,3,8,8,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,11,9,11,9,10],
[8,0,11,9,6,9,10,7],
[10,10,0,12,11,9,7,6],
[10,12,9,0,11,10,4,6],
[12,15,10,10,0,10,11,9],
[10,12,12,11,11,0,8,11],
[12,11,14,17,10,13,0,9],
[11,14,15,15,12,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,17,13,13,10,12],
[12,0,12,13,11,12,10,14],
[7,9,0,12,13,7,10,11],
[4,8,9,0,8,4,7,8],
[8,10,8,13,0,8,11,14],
[8,9,14,17,13,0,10,12],
[11,11,11,14,10,11,0,13],
[9,7,10,13,7,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,9,13,8,12,12],
[7,0,9,8,8,6,7,3],
[10,12,0,8,10,7,12,10],
[12,13,13,0,9,11,8,9],
[8,13,11,12,0,11,9,5],
[13,15,14,10,10,0,14,10],
[9,14,9,13,12,7,0,7],
[9,18,11,12,16,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,12,15,10,6,12],
[9,0,9,7,13,9,11,10],
[11,12,0,9,7,10,5,12],
[9,14,12,0,9,7,6,12],
[6,8,14,12,0,11,8,10],
[11,12,11,14,10,0,7,11],
[15,10,16,15,13,14,0,11],
[9,11,9,9,11,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,16,14,13,12,9],
[13,0,11,18,18,13,5,10],
[13,10,0,13,13,8,5,5],
[5,3,8,0,13,10,2,5],
[7,3,8,8,0,5,4,0],
[8,8,13,11,16,0,6,3],
[9,16,16,19,17,15,0,12],
[12,11,16,16,21,18,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,8,8,16,14,10,6],
[16,0,10,12,16,16,12,14],
[13,11,0,13,16,14,11,10],
[13,9,8,0,18,16,13,11],
[5,5,5,3,0,10,10,4],
[7,5,7,5,11,0,5,6],
[11,9,10,8,11,16,0,11],
[15,7,11,10,17,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,13,10,12,7,12],
[15,0,10,11,19,16,15,12],
[13,11,0,10,15,6,7,6],
[8,10,11,0,11,7,8,7],
[11,2,6,10,0,6,6,4],
[9,5,15,14,15,0,9,15],
[14,6,14,13,15,12,0,10],
[9,9,15,14,17,6,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,15,11,15,15,9],
[13,0,12,14,11,11,9,7],
[8,9,0,15,14,11,14,12],
[6,7,6,0,6,7,9,1],
[10,10,7,15,0,11,18,8],
[6,10,10,14,10,0,14,4],
[6,12,7,12,3,7,0,7],
[12,14,9,20,13,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,10,13,11,6,19],
[7,0,10,9,10,5,8,13],
[9,11,0,15,17,15,11,16],
[11,12,6,0,8,8,11,12],
[8,11,4,13,0,5,8,11],
[10,16,6,13,16,0,12,13],
[15,13,10,10,13,9,0,18],
[2,8,5,9,10,8,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,8,10,11,13,9],
[11,0,12,9,12,13,14,7],
[10,9,0,8,8,11,13,7],
[13,12,13,0,12,13,15,9],
[11,9,13,9,0,14,16,9],
[10,8,10,8,7,0,15,11],
[8,7,8,6,5,6,0,4],
[12,14,14,12,12,10,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,12,11,10,13,7],
[9,0,15,13,13,7,11,9],
[7,6,0,6,4,11,10,7],
[9,8,15,0,11,13,15,12],
[10,8,17,10,0,10,13,10],
[11,14,10,8,11,0,13,11],
[8,10,11,6,8,8,0,8],
[14,12,14,9,11,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,12,11,10,10,10],
[9,0,13,15,12,13,11,12],
[7,8,0,7,11,8,10,11],
[9,6,14,0,13,9,12,13],
[10,9,10,8,0,8,9,10],
[11,8,13,12,13,0,11,14],
[11,10,11,9,12,10,0,9],
[11,9,10,8,11,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,10,12,15,14,12],
[9,0,11,12,15,11,16,12],
[9,10,0,11,11,11,15,9],
[11,9,10,0,11,12,12,10],
[9,6,10,10,0,10,9,6],
[6,10,10,9,11,0,11,13],
[7,5,6,9,12,10,0,9],
[9,9,12,11,15,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,6,9,8,11,10,11],
[16,0,14,10,7,16,12,9],
[15,7,0,11,7,15,10,10],
[12,11,10,0,6,12,9,8],
[13,14,14,15,0,12,12,10],
[10,5,6,9,9,0,6,11],
[11,9,11,12,9,15,0,8],
[10,12,11,13,11,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,15,8,7,6,14,0],
[14,0,21,8,14,14,14,14],
[6,0,0,0,0,6,6,6],
[13,13,21,0,13,6,14,6],
[14,7,21,8,0,14,14,14],
[15,7,15,15,7,0,14,0],
[7,7,15,7,7,7,0,7],
[21,7,15,15,7,21,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,14,9,5,6,9,5],
[16,0,9,9,3,9,9,8],
[7,12,0,12,12,5,16,12],
[12,12,9,0,8,5,16,8],
[16,18,9,13,0,6,15,13],
[15,12,16,16,15,0,16,9],
[12,12,5,5,6,5,0,8],
[16,13,9,13,8,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,9,11,10,14,10],
[12,0,12,10,12,8,16,11],
[12,9,0,12,14,11,16,10],
[12,11,9,0,14,12,14,10],
[10,9,7,7,0,7,11,11],
[11,13,10,9,14,0,15,14],
[7,5,5,7,10,6,0,11],
[11,10,11,11,10,7,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,11,14,15,15,13],
[10,0,12,12,9,10,14,11],
[12,9,0,11,10,13,11,14],
[10,9,10,0,14,11,11,14],
[7,12,11,7,0,14,15,10],
[6,11,8,10,7,0,11,10],
[6,7,10,10,6,10,0,9],
[8,10,7,7,11,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,17,15,11,10,12],
[9,0,8,12,11,13,10,9],
[5,13,0,9,12,11,10,10],
[4,9,12,0,10,8,12,9],
[6,10,9,11,0,11,6,5],
[10,8,10,13,10,0,7,11],
[11,11,11,9,15,14,0,16],
[9,12,11,12,16,10,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,10,9,12,8,8],
[10,0,14,13,8,13,10,9],
[13,7,0,11,10,16,13,9],
[11,8,10,0,12,16,10,12],
[12,13,11,9,0,14,10,8],
[9,8,5,5,7,0,8,7],
[13,11,8,11,11,13,0,11],
[13,12,12,9,13,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,7,10,11,12,11,9],
[15,0,14,15,18,18,9,13],
[14,7,0,18,10,16,8,15],
[11,6,3,0,9,5,4,9],
[10,3,11,12,0,11,3,8],
[9,3,5,16,10,0,6,11],
[10,12,13,17,18,15,0,12],
[12,8,6,12,13,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,12,5,11,13,11],
[9,0,4,6,7,7,9,6],
[13,17,0,13,11,12,9,11],
[9,15,8,0,9,8,5,6],
[16,14,10,12,0,11,14,12],
[10,14,9,13,10,0,9,6],
[8,12,12,16,7,12,0,11],
[10,15,10,15,9,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,12,11,9,8,11],
[13,0,12,15,13,13,12,8],
[8,9,0,10,10,10,12,11],
[9,6,11,0,9,10,11,8],
[10,8,11,12,0,12,10,10],
[12,8,11,11,9,0,12,11],
[13,9,9,10,11,9,0,8],
[10,13,10,13,11,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,11,9,10,9,9],
[10,0,10,8,8,7,7,11],
[11,11,0,8,5,6,7,8],
[10,13,13,0,8,11,7,10],
[12,13,16,13,0,9,10,12],
[11,14,15,10,12,0,12,12],
[12,14,14,14,11,9,0,15],
[12,10,13,11,9,9,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,9,3,7,9,9],
[12,0,11,8,7,10,8,8],
[8,10,0,10,6,8,11,9],
[12,13,11,0,7,9,10,11],
[18,14,15,14,0,10,9,9],
[14,11,13,12,11,0,7,10],
[12,13,10,11,12,14,0,11],
[12,13,12,10,12,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,7,12,10,10,10,6],
[16,0,13,13,14,10,18,12],
[14,8,0,13,9,11,10,9],
[9,8,8,0,9,4,7,10],
[11,7,12,12,0,10,11,9],
[11,11,10,17,11,0,12,11],
[11,3,11,14,10,9,0,11],
[15,9,12,11,12,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,8,8,14,11,9],
[14,0,10,9,7,11,9,6],
[11,11,0,10,11,14,12,11],
[13,12,11,0,9,19,11,7],
[13,14,10,12,0,15,16,13],
[7,10,7,2,6,0,5,3],
[10,12,9,10,5,16,0,9],
[12,15,10,14,8,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,11,11,12,11,8],
[13,0,8,8,7,11,9,10],
[10,13,0,13,10,13,16,12],
[10,13,8,0,12,12,17,10],
[10,14,11,9,0,10,15,10],
[9,10,8,9,11,0,13,8],
[10,12,5,4,6,8,0,8],
[13,11,9,11,11,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,14,11,11,14,9],
[9,0,9,2,13,5,10,13],
[6,12,0,6,7,7,14,13],
[7,19,15,0,15,15,13,13],
[10,8,14,6,0,4,10,14],
[10,16,14,6,17,0,14,13],
[7,11,7,8,11,7,0,11],
[12,8,8,8,7,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,8,10,10,10,11],
[11,0,13,9,6,10,7,9],
[9,8,0,9,10,12,6,9],
[13,12,12,0,12,10,12,9],
[11,15,11,9,0,15,9,9],
[11,11,9,11,6,0,11,9],
[11,14,15,9,12,10,0,13],
[10,12,12,12,12,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,9,11,14,11,12],
[13,0,13,12,9,14,11,16],
[9,8,0,11,10,14,10,12],
[12,9,10,0,7,15,12,17],
[10,12,11,14,0,18,15,15],
[7,7,7,6,3,0,11,14],
[10,10,11,9,6,10,0,16],
[9,5,9,4,6,7,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,13,12,16,10,13],
[10,0,13,11,8,12,11,11],
[9,8,0,12,12,12,11,13],
[8,10,9,0,9,15,10,14],
[9,13,9,12,0,12,9,11],
[5,9,9,6,9,0,9,12],
[11,10,10,11,12,12,0,12],
[8,10,8,7,10,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,0,9,5,4,9],
[12,0,7,8,18,8,9,9],
[15,14,0,10,16,6,11,16],
[21,13,11,0,13,9,8,9],
[12,3,5,8,0,8,8,8],
[16,13,15,12,13,0,8,13],
[17,12,10,13,13,13,0,14],
[12,12,5,12,13,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,5,16,12,8,9,11],
[12,0,12,13,18,6,9,11],
[16,9,0,13,18,12,7,13],
[5,8,8,0,12,3,9,11],
[9,3,3,9,0,3,3,9],
[13,15,9,18,18,0,13,11],
[12,12,14,12,18,8,0,17],
[10,10,8,10,12,10,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,8,14,9,13,13],
[13,0,9,10,13,10,12,14],
[12,12,0,10,15,13,12,12],
[13,11,11,0,10,9,9,13],
[7,8,6,11,0,8,9,15],
[12,11,8,12,13,0,11,13],
[8,9,9,12,12,10,0,11],
[8,7,9,8,6,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,6,8,14,6,8,0],
[8,0,6,8,8,6,8,0],
[15,15,0,8,8,14,8,0],
[13,13,13,0,21,6,14,13],
[7,13,13,0,0,6,8,0],
[15,15,7,15,15,0,8,7],
[13,13,13,7,13,13,0,7],
[21,21,21,8,21,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,12,7,12,8,12],
[14,0,11,13,12,15,9,13],
[13,10,0,11,8,12,13,15],
[9,8,10,0,9,11,11,14],
[14,9,13,12,0,13,15,15],
[9,6,9,10,8,0,9,10],
[13,12,8,10,6,12,0,14],
[9,8,6,7,6,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,14,6,10,13,9],
[12,0,9,15,12,12,12,7],
[15,12,0,15,15,15,10,12],
[7,6,6,0,6,16,13,9],
[15,9,6,15,0,15,9,7],
[11,9,6,5,6,0,8,9],
[8,9,11,8,12,13,0,5],
[12,14,9,12,14,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,11,12,10,11,12],
[10,0,7,6,6,8,11,10],
[9,14,0,8,6,9,11,7],
[10,15,13,0,10,12,10,13],
[9,15,15,11,0,13,15,12],
[11,13,12,9,8,0,9,12],
[10,10,10,11,6,12,0,7],
[9,11,14,8,9,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,9,11,10,10,7,7],
[15,0,12,12,8,10,10,9],
[12,9,0,12,12,13,10,11],
[10,9,9,0,6,11,9,8],
[11,13,9,15,0,13,11,11],
[11,11,8,10,8,0,8,11],
[14,11,11,12,10,13,0,9],
[14,12,10,13,10,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,8,9,15,9,12],
[11,0,15,9,13,8,13,16],
[14,6,0,3,9,9,6,14],
[13,12,18,0,17,9,16,14],
[12,8,12,4,0,9,9,12],
[6,13,12,12,12,0,11,12],
[12,8,15,5,12,10,0,12],
[9,5,7,7,9,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,7,9,11,11,8],
[11,0,9,10,8,9,8,9],
[13,12,0,9,10,14,10,11],
[14,11,12,0,13,12,10,13],
[12,13,11,8,0,11,10,9],
[10,12,7,9,10,0,9,9],
[10,13,11,11,11,12,0,10],
[13,12,10,8,12,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,9,14,13,19,1,12],
[5,0,13,14,17,14,5,16],
[12,8,0,13,11,12,11,10],
[7,7,8,0,8,9,3,7],
[8,4,10,13,0,13,7,13],
[2,7,9,12,8,0,3,9],
[20,16,10,18,14,18,0,12],
[9,5,11,14,8,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,9,16,12,18,9,12],
[6,0,7,13,10,13,9,10],
[12,14,0,16,11,9,8,11],
[5,8,5,0,5,11,5,5],
[9,11,10,16,0,16,11,11],
[3,8,12,10,5,0,5,5],
[12,12,13,16,10,16,0,9],
[9,11,10,16,10,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,12,12,9,12,11],
[7,0,13,13,9,9,12,11],
[10,8,0,11,8,14,11,13],
[9,8,10,0,8,10,10,9],
[9,12,13,13,0,14,12,13],
[12,12,7,11,7,0,8,12],
[9,9,10,11,9,13,0,11],
[10,10,8,12,8,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,8,13,7,13,9],
[10,0,14,11,12,10,11,11],
[8,7,0,6,9,5,9,6],
[13,10,15,0,17,5,13,8],
[8,9,12,4,0,4,8,6],
[14,11,16,16,17,0,12,8],
[8,10,12,8,13,9,0,9],
[12,10,15,13,15,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,8,11,14,13,13],
[7,0,12,8,6,13,11,13],
[9,9,0,8,8,12,11,10],
[13,13,13,0,9,15,13,10],
[10,15,13,12,0,15,12,11],
[7,8,9,6,6,0,8,10],
[8,10,10,8,9,13,0,6],
[8,8,11,11,10,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,5,6,10,8,10],
[13,0,9,8,8,13,13,12],
[14,12,0,8,9,10,11,8],
[16,13,13,0,14,14,14,10],
[15,13,12,7,0,13,13,10],
[11,8,11,7,8,0,10,12],
[13,8,10,7,8,11,0,9],
[11,9,13,11,11,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,15,11,8,15,11],
[8,0,8,14,12,8,11,8],
[12,13,0,17,9,12,12,8],
[6,7,4,0,6,7,6,8],
[10,9,12,15,0,6,12,12],
[13,13,9,14,15,0,15,15],
[6,10,9,15,9,6,0,14],
[10,13,13,13,9,6,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,6,6,11,10,6],
[9,0,7,5,7,8,9,5],
[11,14,0,8,9,9,9,11],
[15,16,13,0,10,13,13,8],
[15,14,12,11,0,12,18,10],
[10,13,12,8,9,0,12,10],
[11,12,12,8,3,9,0,6],
[15,16,10,13,11,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,9,10,14,10,10],
[8,0,5,11,8,8,11,8],
[11,16,0,10,16,12,13,16],
[12,10,11,0,12,10,10,11],
[11,13,5,9,0,13,11,11],
[7,13,9,11,8,0,10,13],
[11,10,8,11,10,11,0,12],
[11,13,5,10,10,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,13,8,6,10,10,9],
[14,0,19,13,12,13,10,20],
[8,2,0,10,6,7,8,10],
[13,8,11,0,8,9,8,12],
[15,9,15,13,0,8,8,11],
[11,8,14,12,13,0,11,13],
[11,11,13,13,13,10,0,11],
[12,1,11,9,10,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,5,15,12,7,10,4],
[9,0,4,9,9,5,9,9],
[16,17,0,16,14,7,16,14],
[6,12,5,0,9,5,9,2],
[9,12,7,12,0,8,6,5],
[14,16,14,16,13,0,9,11],
[11,12,5,12,15,12,0,9],
[17,12,7,19,16,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,11,11,10,10,11],
[11,0,10,9,13,10,11,13],
[12,11,0,15,8,9,9,11],
[10,12,6,0,10,7,6,10],
[10,8,13,11,0,9,9,10],
[11,11,12,14,12,0,8,10],
[11,10,12,15,12,13,0,10],
[10,8,10,11,11,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,15,12,13,11,21],
[6,0,8,9,10,9,15,17],
[11,13,0,13,8,11,13,13],
[6,12,8,0,10,15,17,21],
[9,11,13,11,0,9,7,21],
[8,12,10,6,12,0,17,12],
[10,6,8,4,14,4,0,16],
[0,4,8,0,0,9,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,0,15,6,6,14],
[7,0,21,7,7,7,13,21],
[7,0,0,0,7,7,6,6],
[21,14,21,0,15,13,6,14],
[6,14,14,6,0,6,6,14],
[15,14,14,8,15,0,6,14],
[15,8,15,15,15,15,0,14],
[7,0,15,7,7,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,6,2,4,5,9,7],
[11,0,11,8,11,8,9,11],
[15,10,0,14,11,7,14,10],
[19,13,7,0,7,9,12,9],
[17,10,10,14,0,9,14,13],
[16,13,14,12,12,0,18,10],
[12,12,7,9,7,3,0,8],
[14,10,11,12,8,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,10,12,5,10,10],
[12,0,8,15,15,12,11,10],
[11,13,0,11,12,13,8,10],
[11,6,10,0,13,9,10,12],
[9,6,9,8,0,7,8,10],
[16,9,8,12,14,0,13,12],
[11,10,13,11,13,8,0,7],
[11,11,11,9,11,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,9,12,14,10,9],
[11,0,13,9,6,12,8,13],
[12,8,0,6,6,11,7,6],
[12,12,15,0,7,15,15,7],
[9,15,15,14,0,18,12,10],
[7,9,10,6,3,0,7,6],
[11,13,14,6,9,14,0,6],
[12,8,15,14,11,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,14,12,8,8,4,8],
[14,0,14,10,17,16,11,14],
[7,7,0,5,7,11,7,10],
[9,11,16,0,10,10,7,10],
[13,4,14,11,0,13,7,11],
[13,5,10,11,8,0,6,8],
[17,10,14,14,14,15,0,13],
[13,7,11,11,10,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,13,10,9,18,13],
[4,0,14,4,4,10,9,9],
[3,7,0,3,3,9,8,10],
[8,17,18,0,13,9,15,10],
[11,17,18,8,0,12,16,13],
[12,11,12,12,9,0,11,11],
[3,12,13,6,5,10,0,5],
[8,12,11,11,8,10,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,11,16,8,11,19],
[10,0,7,12,12,7,7,16],
[8,14,0,19,19,3,5,19],
[10,9,2,0,8,2,5,14],
[5,9,2,13,0,2,0,14],
[13,14,18,19,19,0,10,19],
[10,14,16,16,21,11,0,21],
[2,5,2,7,7,2,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,13,12,11,10,12],
[11,0,11,17,21,5,15,13],
[11,10,0,9,15,13,17,13],
[8,4,12,0,12,7,10,8],
[9,0,6,9,0,3,6,6],
[10,16,8,14,18,0,16,10],
[11,6,4,11,15,5,0,11],
[9,8,8,13,15,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,5,9,11,13,11],
[10,0,10,12,11,16,12,12],
[8,11,0,8,7,11,13,12],
[16,9,13,0,16,16,14,15],
[12,10,14,5,0,14,13,12],
[10,5,10,5,7,0,10,8],
[8,9,8,7,8,11,0,10],
[10,9,9,6,9,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,15,16,10,14,12],
[6,0,10,3,7,10,8,9],
[7,11,0,8,6,14,11,10],
[6,18,13,0,9,12,8,14],
[5,14,15,12,0,14,13,15],
[11,11,7,9,7,0,11,16],
[7,13,10,13,8,10,0,16],
[9,12,11,7,6,5,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,10,6,13,10,7],
[11,0,9,11,9,13,8,8],
[12,12,0,13,13,11,10,11],
[11,10,8,0,7,10,11,6],
[15,12,8,14,0,14,9,13],
[8,8,10,11,7,0,9,6],
[11,13,11,10,12,12,0,9],
[14,13,10,15,8,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,8,11,13,14,10],
[6,0,12,10,8,7,7,9],
[9,9,0,9,11,7,9,11],
[13,11,12,0,13,13,11,7],
[10,13,10,8,0,7,11,11],
[8,14,14,8,14,0,13,10],
[7,14,12,10,10,8,0,8],
[11,12,10,14,10,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,13,11,11,9,11],
[12,0,13,12,10,8,13,12],
[14,8,0,14,10,10,10,10],
[8,9,7,0,6,4,11,12],
[10,11,11,15,0,8,13,6],
[10,13,11,17,13,0,13,15],
[12,8,11,10,8,8,0,10],
[10,9,11,9,15,6,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,7,8,10,9,8],
[11,0,9,10,9,11,6,8],
[14,12,0,10,9,9,11,10],
[14,11,11,0,11,11,10,10],
[13,12,12,10,0,14,11,12],
[11,10,12,10,7,0,6,6],
[12,15,10,11,10,15,0,12],
[13,13,11,11,9,15,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,6,12,12,8,10,12],
[10,0,12,10,9,10,12,9],
[15,9,0,14,10,7,14,11],
[9,11,7,0,6,8,10,12],
[9,12,11,15,0,6,11,14],
[13,11,14,13,15,0,9,13],
[11,9,7,11,10,12,0,6],
[9,12,10,9,7,8,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,8,10,12,10,12,8],
[7,0,8,9,10,11,10,9],
[13,13,0,12,13,10,14,13],
[11,12,9,0,10,13,10,12],
[9,11,8,11,0,9,13,11],
[11,10,11,8,12,0,12,12],
[9,11,7,11,8,9,0,10],
[13,12,8,9,10,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,11,14,10,11,11],
[9,0,11,9,8,10,11,10],
[8,10,0,9,10,9,11,13],
[10,12,12,0,13,12,14,12],
[7,13,11,8,0,10,13,12],
[11,11,12,9,11,0,9,12],
[10,10,10,7,8,12,0,11],
[10,11,8,9,9,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,12,12,9,10,15],
[10,0,11,12,13,12,11,13],
[10,10,0,13,8,9,11,14],
[9,9,8,0,9,9,10,11],
[9,8,13,12,0,8,11,13],
[12,9,12,12,13,0,9,14],
[11,10,10,11,10,12,0,12],
[6,8,7,10,8,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,17,17,6,10,6,17],
[15,0,15,17,10,14,4,11],
[4,6,0,6,6,10,10,0],
[4,4,15,0,6,4,4,11],
[15,11,15,15,0,8,11,15],
[11,7,11,17,13,0,11,7],
[15,17,11,17,10,10,0,11],
[4,10,21,10,6,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,7,9,7,8,8],
[11,0,7,10,4,5,7,11],
[12,14,0,8,10,13,12,12],
[14,11,13,0,9,9,9,8],
[12,17,11,12,0,10,10,13],
[14,16,8,12,11,0,11,13],
[13,14,9,12,11,10,0,12],
[13,10,9,13,8,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,11,11,9,13,12],
[10,0,11,5,8,9,9,10],
[8,10,0,5,8,11,9,11],
[10,16,16,0,4,11,12,11],
[10,13,13,17,0,12,19,15],
[12,12,10,10,9,0,13,11],
[8,12,12,9,2,8,0,11],
[9,11,10,10,6,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,13,15,13,14,9],
[7,0,14,10,15,6,8,10],
[6,7,0,9,10,8,9,8],
[8,11,12,0,14,7,8,11],
[6,6,11,7,0,5,6,5],
[8,15,13,14,16,0,14,9],
[7,13,12,13,15,7,0,6],
[12,11,13,10,16,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,17,14,14,18,18,14],
[12,0,18,11,9,18,21,11],
[4,3,0,0,3,4,7,0],
[7,10,21,0,12,21,21,12],
[7,12,18,9,0,13,16,14],
[3,3,17,0,8,0,12,8],
[3,0,14,0,5,9,0,5],
[7,10,21,9,7,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,17,5,21,12,21],
[5,0,17,10,5,14,5,14],
[9,4,0,14,9,14,0,9],
[4,11,7,0,5,16,7,9],
[16,16,12,16,0,21,7,16],
[0,7,7,5,0,0,0,9],
[9,16,21,14,14,21,0,9],
[0,7,12,12,5,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,12,11,9,10,9,8],
[15,0,16,14,11,13,9,11],
[9,5,0,9,6,7,6,7],
[10,7,12,0,11,11,7,9],
[12,10,15,10,0,11,8,11],
[11,8,14,10,10,0,12,12],
[12,12,15,14,13,9,0,13],
[13,10,14,12,10,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,5,9,9,16,16,16],
[12,0,17,10,17,17,12,12],
[16,4,0,14,14,21,16,16],
[12,11,7,0,16,12,16,12],
[12,4,7,5,0,12,16,12],
[5,4,0,9,9,0,11,7],
[5,9,5,5,5,10,0,12],
[5,9,5,9,9,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,13,13,10,15,12],
[9,0,9,15,13,8,11,9],
[13,12,0,14,12,10,15,11],
[8,6,7,0,11,6,10,8],
[8,8,9,10,0,9,11,11],
[11,13,11,15,12,0,11,10],
[6,10,6,11,10,10,0,12],
[9,12,10,13,10,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,11,11,6,11,11,9],
[15,0,10,13,10,8,16,19],
[10,11,0,7,11,10,14,14],
[10,8,14,0,11,12,11,11],
[15,11,10,10,0,14,13,15],
[10,13,11,9,7,0,12,15],
[10,5,7,10,8,9,0,11],
[12,2,7,10,6,6,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,10,12,10,14,10],
[14,0,8,11,11,10,17,11],
[10,13,0,11,11,10,16,10],
[11,10,10,0,14,12,16,11],
[9,10,10,7,0,10,14,11],
[11,11,11,9,11,0,17,11],
[7,4,5,5,7,4,0,8],
[11,10,11,10,10,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,10,11,14,10,10],
[8,0,8,8,10,8,12,12],
[10,13,0,14,11,13,13,14],
[11,13,7,0,12,9,13,11],
[10,11,10,9,0,9,10,10],
[7,13,8,12,12,0,11,11],
[11,9,8,8,11,10,0,14],
[11,9,7,10,11,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,0,3,7,10,8,7],
[12,0,11,12,10,16,11,13],
[21,10,0,12,15,15,16,19],
[18,9,9,0,11,14,17,11],
[14,11,6,10,0,16,17,16],
[11,5,6,7,5,0,7,12],
[13,10,5,4,4,14,0,11],
[14,8,2,10,5,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,13,6,6,6,13],
[7,0,0,7,6,0,6,7],
[7,21,0,13,6,6,6,7],
[8,14,8,0,6,6,6,0],
[15,15,15,15,0,7,8,7],
[15,21,15,15,14,0,14,7],
[15,15,15,15,13,7,0,7],
[8,14,14,21,14,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,18,12,14,14,10],
[11,0,11,12,14,12,12,10],
[9,10,0,13,12,16,15,11],
[3,9,8,0,6,7,12,3],
[9,7,9,15,0,9,13,8],
[7,9,5,14,12,0,12,5],
[7,9,6,9,8,9,0,3],
[11,11,10,18,13,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,13,9,8,10,10],
[13,0,10,13,9,9,14,10],
[11,11,0,13,3,7,11,11],
[8,8,8,0,6,7,7,10],
[12,12,18,15,0,7,11,11],
[13,12,14,14,14,0,10,14],
[11,7,10,14,10,11,0,12],
[11,11,10,11,10,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,21,21,5,14,14],
[7,0,9,16,21,0,9,14],
[12,12,0,21,12,5,14,5],
[0,5,0,0,12,5,0,5],
[0,0,9,9,0,0,9,5],
[16,21,16,16,21,0,9,14],
[7,12,7,21,12,12,0,5],
[7,7,16,16,16,7,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,14,8,9,11,14],
[8,0,8,10,12,8,9,13],
[9,13,0,12,9,12,8,12],
[7,11,9,0,8,12,4,8],
[13,9,12,13,0,10,8,13],
[12,13,9,9,11,0,13,14],
[10,12,13,17,13,8,0,11],
[7,8,9,13,8,7,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,11,12,12,10,10],
[6,0,7,7,10,7,9,11],
[8,14,0,14,12,14,12,16],
[10,14,7,0,13,14,16,16],
[9,11,9,8,0,9,6,9],
[9,14,7,7,12,0,5,10],
[11,12,9,5,15,16,0,9],
[11,10,5,5,12,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,9,8,8,8,7],
[13,0,6,8,9,12,12,9],
[12,15,0,13,9,11,10,10],
[12,13,8,0,10,11,13,10],
[13,12,12,11,0,14,9,9],
[13,9,10,10,7,0,10,11],
[13,9,11,8,12,11,0,14],
[14,12,11,11,12,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,10,14,12,13,14],
[11,0,13,10,15,12,14,13],
[10,8,0,13,15,12,11,10],
[11,11,8,0,11,14,14,15],
[7,6,6,10,0,9,11,9],
[9,9,9,7,12,0,10,15],
[8,7,10,7,10,11,0,13],
[7,8,11,6,12,6,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,15,2,10,7,9,6],
[16,0,19,8,11,12,8,13],
[6,2,0,4,6,6,9,1],
[19,13,17,0,16,19,12,9],
[11,10,15,5,0,10,10,9],
[14,9,15,2,11,0,4,9],
[12,13,12,9,11,17,0,13],
[15,8,20,12,12,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,14,8,9,8,13,13],
[13,0,10,11,10,9,13,13],
[7,11,0,11,12,5,10,12],
[13,10,10,0,12,7,13,16],
[12,11,9,9,0,13,9,12],
[13,12,16,14,8,0,10,13],
[8,8,11,8,12,11,0,14],
[8,8,9,5,9,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,9,15,10,7,10],
[10,0,9,10,10,12,9,10],
[12,12,0,9,15,7,6,14],
[12,11,12,0,15,8,7,12],
[6,11,6,6,0,7,6,9],
[11,9,14,13,14,0,12,11],
[14,12,15,14,15,9,0,14],
[11,11,7,9,12,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,5,9,16,12,7,6],
[8,0,6,7,10,11,4,8],
[16,15,0,10,19,19,15,15],
[12,14,11,0,16,16,10,8],
[5,11,2,5,0,8,4,8],
[9,10,2,5,13,0,6,4],
[14,17,6,11,17,15,0,12],
[15,13,6,13,13,17,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,12,12,10,12,9],
[11,0,13,9,9,10,9,9],
[12,8,0,13,13,14,10,11],
[9,12,8,0,7,11,10,8],
[9,12,8,14,0,13,13,5],
[11,11,7,10,8,0,7,6],
[9,12,11,11,8,14,0,5],
[12,12,10,13,16,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,12,11,8,11,5,6],
[16,0,12,12,10,8,8,7],
[9,9,0,12,6,11,14,10],
[10,9,9,0,9,8,2,6],
[13,11,15,12,0,8,8,12],
[10,13,10,13,13,0,9,10],
[16,13,7,19,13,12,0,13],
[15,14,11,15,9,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,12,12,7,8,6],
[15,0,10,13,16,10,14,10],
[15,11,0,13,14,10,11,10],
[9,8,8,0,8,10,9,6],
[9,5,7,13,0,9,8,9],
[14,11,11,11,12,0,10,11],
[13,7,10,12,13,11,0,13],
[15,11,11,15,12,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,7,7,10,5,7],
[12,0,14,10,14,11,10,12],
[13,7,0,12,13,13,11,10],
[14,11,9,0,15,11,11,10],
[14,7,8,6,0,8,6,6],
[11,10,8,10,13,0,11,5],
[16,11,10,10,15,10,0,7],
[14,9,11,11,15,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,13,12,10,13,10],
[9,0,9,12,12,12,14,12],
[12,12,0,9,9,9,11,9],
[8,9,12,0,9,13,10,13],
[9,9,12,12,0,10,9,10],
[11,9,12,8,11,0,12,12],
[8,7,10,11,12,9,0,13],
[11,9,12,8,11,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,12,9,10,10,15],
[11,0,13,10,9,10,12,12],
[7,8,0,6,5,10,10,10],
[9,11,15,0,11,10,10,12],
[12,12,16,10,0,12,10,15],
[11,11,11,11,9,0,12,15],
[11,9,11,11,11,9,0,11],
[6,9,11,9,6,6,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,12,12,13,11,11],
[10,0,10,15,12,11,14,8],
[12,11,0,10,11,10,9,12],
[9,6,11,0,13,10,11,10],
[9,9,10,8,0,12,11,8],
[8,10,11,11,9,0,13,9],
[10,7,12,10,10,8,0,8],
[10,13,9,11,13,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,15,18,12,14,12],
[9,0,8,6,14,7,6,11],
[11,13,0,7,16,13,10,14],
[6,15,14,0,12,10,15,14],
[3,7,5,9,0,9,9,6],
[9,14,8,11,12,0,13,8],
[7,15,11,6,12,8,0,10],
[9,10,7,7,15,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,4,8,8,7,7,6],
[15,0,10,14,13,12,7,11],
[17,11,0,13,12,7,12,13],
[13,7,8,0,7,6,7,12],
[13,8,9,14,0,8,7,12],
[14,9,14,15,13,0,9,15],
[14,14,9,14,14,12,0,13],
[15,10,8,9,9,6,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,11,13,12,16,7],
[12,0,7,15,6,19,8,10],
[11,14,0,11,8,16,10,8],
[10,6,10,0,7,8,11,11],
[8,15,13,14,0,17,14,12],
[9,2,5,13,4,0,7,7],
[5,13,11,10,7,14,0,11],
[14,11,13,10,9,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,11,9,19,18,14,17],
[0,0,5,4,6,7,3,5],
[10,16,0,14,13,7,10,12],
[12,17,7,0,12,12,9,12],
[2,15,8,9,0,9,5,7],
[3,14,14,9,12,0,8,9],
[7,18,11,12,16,13,0,11],
[4,16,9,9,14,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,15,14,8,11,8],
[12,0,7,21,20,4,10,14],
[10,14,0,18,18,11,10,15],
[6,0,3,0,3,0,0,4],
[7,1,3,18,0,0,4,12],
[13,17,10,21,21,0,11,18],
[10,11,11,21,17,10,0,15],
[13,7,6,17,9,3,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,12,11,12,7,7],
[14,0,10,16,7,17,12,7],
[16,11,0,11,11,16,16,7],
[9,5,10,0,12,13,8,12],
[10,14,10,9,0,17,17,17],
[9,4,5,8,4,0,9,4],
[14,9,5,13,4,12,0,4],
[14,14,14,9,4,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,10,11,6,6,8],
[11,0,15,15,14,7,8,11],
[6,6,0,11,15,11,6,6],
[11,6,10,0,10,11,6,5],
[10,7,6,11,0,7,3,5],
[15,14,10,10,14,0,3,7],
[15,13,15,15,18,18,0,10],
[13,10,15,16,16,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,0,13,5,13,13,8],
[13,0,0,13,5,13,13,13],
[21,21,0,21,5,21,13,21],
[8,8,0,0,0,13,8,8],
[16,16,16,21,0,21,8,16],
[8,8,0,8,0,0,0,8],
[8,8,8,13,13,21,0,8],
[13,8,0,13,5,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,16,9,10,8,13],
[12,0,8,14,10,8,7,12],
[15,13,0,18,12,11,10,11],
[5,7,3,0,8,5,7,6],
[12,11,9,13,0,11,10,12],
[11,13,10,16,10,0,12,10],
[13,14,11,14,11,9,0,13],
[8,9,10,15,9,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,15,9,14,18,15,17],
[1,0,13,3,11,16,8,9],
[6,8,0,5,11,9,6,8],
[12,18,16,0,8,16,18,17],
[7,10,10,13,0,10,10,10],
[3,5,12,5,11,0,9,6],
[6,13,15,3,11,12,0,12],
[4,12,13,4,11,15,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,6,8,8,11,5],
[10,0,7,8,9,9,9,8],
[14,14,0,11,10,12,13,12],
[15,13,10,0,12,12,10,12],
[13,12,11,9,0,10,10,11],
[13,12,9,9,11,0,9,8],
[10,12,8,11,11,12,0,9],
[16,13,9,9,10,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,12,11,9,11,11],
[11,0,12,14,14,11,13,9],
[10,9,0,11,9,11,13,11],
[9,7,10,0,10,9,11,7],
[10,7,12,11,0,12,13,9],
[12,10,10,12,9,0,13,11],
[10,8,8,10,8,8,0,6],
[10,12,10,14,12,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,11,12,10,11,9],
[7,0,11,11,9,10,13,11],
[10,10,0,7,10,9,12,10],
[10,10,14,0,12,8,11,11],
[9,12,11,9,0,9,11,12],
[11,11,12,13,12,0,10,9],
[10,8,9,10,10,11,0,9],
[12,10,11,10,9,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,9,7,11,14,7],
[9,0,7,7,10,11,12,7],
[13,14,0,13,9,11,14,11],
[12,14,8,0,10,13,15,8],
[14,11,12,11,0,7,15,9],
[10,10,10,8,14,0,10,11],
[7,9,7,6,6,11,0,8],
[14,14,10,13,12,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,21,14,14,21,8,14],
[7,0,7,7,0,7,15,8],
[0,14,0,0,6,0,8,14],
[7,14,21,0,6,13,8,14],
[7,21,15,15,0,15,15,8],
[0,14,21,8,6,0,8,14],
[13,6,13,13,6,13,0,6],
[7,13,7,7,13,7,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,7,11,9,10,9],
[9,0,8,9,8,4,5,10],
[9,13,0,9,9,9,8,8],
[14,12,12,0,10,11,9,10],
[10,13,12,11,0,8,9,13],
[12,17,12,10,13,0,8,14],
[11,16,13,12,12,13,0,10],
[12,11,13,11,8,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,7,7,7,7,0,7],
[21,0,14,7,14,14,0,7],
[14,7,0,14,14,14,7,14],
[14,14,7,0,14,14,14,7],
[14,7,7,7,0,21,7,14],
[14,7,7,7,0,0,7,14],
[21,21,14,7,14,14,0,14],
[14,14,7,14,7,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,19,12,12,8,10,11],
[11,0,17,9,6,11,9,9],
[2,4,0,6,6,10,6,7],
[9,12,15,0,10,11,8,11],
[9,15,15,11,0,13,9,9],
[13,10,11,10,8,0,12,9],
[11,12,15,13,12,9,0,15],
[10,12,14,10,12,12,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,14,10,15,13,10],
[10,0,11,13,12,12,13,9],
[7,10,0,8,9,11,7,7],
[7,8,13,0,8,14,9,8],
[11,9,12,13,0,15,14,12],
[6,9,10,7,6,0,8,6],
[8,8,14,12,7,13,0,7],
[11,12,14,13,9,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,14,9,18,15,11],
[7,0,7,10,11,12,6,6],
[9,14,0,11,9,15,12,11],
[7,11,10,0,8,15,7,8],
[12,10,12,13,0,16,9,8],
[3,9,6,6,5,0,3,3],
[6,15,9,14,12,18,0,13],
[10,15,10,13,13,18,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,12,17,9,12,11],
[11,0,11,9,13,10,9,3],
[11,10,0,12,17,13,14,10],
[9,12,9,0,20,8,11,12],
[4,8,4,1,0,3,7,3],
[12,11,8,13,18,0,15,10],
[9,12,7,10,14,6,0,8],
[10,18,11,9,18,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,8,9,9,8,10],
[13,0,9,10,9,14,13,13],
[12,12,0,12,12,12,11,9],
[13,11,9,0,15,11,11,13],
[12,12,9,6,0,12,11,10],
[12,7,9,10,9,0,10,9],
[13,8,10,10,10,11,0,8],
[11,8,12,8,11,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,10,12,5,7,5,7],
[16,0,16,13,11,16,9,14],
[11,5,0,10,2,6,6,8],
[9,8,11,0,8,8,10,10],
[16,10,19,13,0,14,11,15],
[14,5,15,13,7,0,7,10],
[16,12,15,11,10,14,0,14],
[14,7,13,11,6,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,9,9,16,12,12],
[8,0,15,8,12,13,7,7],
[9,6,0,14,10,6,6,7],
[12,13,7,0,7,13,11,7],
[12,9,11,14,0,9,9,11],
[5,8,15,8,12,0,11,10],
[9,14,15,10,12,10,0,7],
[9,14,14,14,10,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,13,14,10,10,9],
[14,0,14,15,9,19,17,11],
[9,7,0,11,13,12,13,7],
[8,6,10,0,6,12,12,6],
[7,12,8,15,0,12,12,7],
[11,2,9,9,9,0,14,4],
[11,4,8,9,9,7,0,8],
[12,10,14,15,14,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,11,12,11,15,12],
[13,0,9,17,10,10,11,10],
[11,12,0,15,14,10,10,10],
[10,4,6,0,5,7,9,10],
[9,11,7,16,0,11,7,9],
[10,11,11,14,10,0,11,7],
[6,10,11,12,14,10,0,8],
[9,11,11,11,12,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,5,8,8,7,13,4],
[13,0,4,12,13,6,16,6],
[16,17,0,13,13,14,17,8],
[13,9,8,0,7,7,11,9],
[13,8,8,14,0,5,13,8],
[14,15,7,14,16,0,17,11],
[8,5,4,10,8,4,0,3],
[17,15,13,12,13,10,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,13,14,13,12,10],
[10,0,14,14,11,14,13,12],
[8,7,0,8,7,11,6,7],
[8,7,13,0,10,11,10,9],
[7,10,14,11,0,13,11,11],
[8,7,10,10,8,0,8,7],
[9,8,15,11,10,13,0,10],
[11,9,14,12,10,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,7,6,10,9,14],
[9,0,6,9,5,8,4,9],
[11,15,0,10,8,8,6,9],
[14,12,11,0,9,11,11,14],
[15,16,13,12,0,12,9,14],
[11,13,13,10,9,0,8,14],
[12,17,15,10,12,13,0,16],
[7,12,12,7,7,7,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,7,13,9,11,11],
[8,0,13,7,12,12,10,8],
[9,8,0,5,11,11,7,8],
[14,14,16,0,14,15,9,11],
[8,9,10,7,0,7,7,7],
[12,9,10,6,14,0,8,9],
[10,11,14,12,14,13,0,9],
[10,13,13,10,14,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,12,16,8,11,10],
[13,0,14,12,10,10,13,17],
[11,7,0,10,8,6,11,13],
[9,9,11,0,12,13,11,11],
[5,11,13,9,0,7,11,11],
[13,11,15,8,14,0,13,17],
[10,8,10,10,10,8,0,10],
[11,4,8,10,10,4,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,5,12,5,12,7,9],
[16,0,16,9,13,9,16,14],
[16,5,0,12,8,8,7,9],
[9,12,9,0,8,15,14,12],
[16,8,13,13,0,9,12,17],
[9,12,13,6,12,0,14,17],
[14,5,14,7,9,7,0,14],
[12,7,12,9,4,4,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,11,11,6,16,11],
[10,0,15,10,5,0,5,5],
[5,6,0,10,11,6,5,5],
[10,11,11,0,11,6,10,5],
[10,16,10,10,0,6,15,5],
[15,21,15,15,15,0,15,10],
[5,16,16,11,6,6,0,5],
[10,16,16,16,16,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,12,12,11,9,14],
[10,0,7,9,13,16,14,19],
[12,14,0,7,12,12,13,15],
[9,12,14,0,14,13,13,18],
[9,8,9,7,0,14,13,10],
[10,5,9,8,7,0,6,9],
[12,7,8,8,8,15,0,11],
[7,2,6,3,11,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,9,9,15,11,11,12],
[5,0,9,7,13,11,11,5],
[12,12,0,12,16,14,10,10],
[12,14,9,0,14,12,10,9],
[6,8,5,7,0,12,9,7],
[10,10,7,9,9,0,8,8],
[10,10,11,11,12,13,0,10],
[9,16,11,12,14,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,9,14,8,9,10],
[9,0,8,6,16,11,9,12],
[10,13,0,10,14,10,12,14],
[12,15,11,0,16,13,12,10],
[7,5,7,5,0,9,8,8],
[13,10,11,8,12,0,8,12],
[12,12,9,9,13,13,0,12],
[11,9,7,11,13,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,8,11,9,13,9],
[8,0,10,8,12,10,10,9],
[11,11,0,10,13,12,10,12],
[13,13,11,0,13,12,11,10],
[10,9,8,8,0,9,9,10],
[12,11,9,9,12,0,11,12],
[8,11,11,10,12,10,0,12],
[12,12,9,11,11,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,12,10,9,16,13],
[6,0,7,8,8,4,11,9],
[8,14,0,9,9,11,14,9],
[9,13,12,0,13,9,16,11],
[11,13,12,8,0,9,14,12],
[12,17,10,12,12,0,15,13],
[5,10,7,5,7,6,0,6],
[8,12,12,10,9,8,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,4,9,8,8,11,16],
[15,0,10,18,12,10,11,14],
[17,11,0,16,7,8,11,16],
[12,3,5,0,7,5,6,13],
[13,9,14,14,0,11,7,13],
[13,11,13,16,10,0,8,11],
[10,10,10,15,14,13,0,13],
[5,7,5,8,8,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,12,4,10,12,1],
[14,0,15,15,4,9,11,1],
[9,6,0,7,6,6,8,1],
[9,6,14,0,9,5,7,0],
[17,17,15,12,0,8,13,12],
[11,12,15,16,13,0,7,5],
[9,10,13,14,8,14,0,5],
[20,20,20,21,9,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,11,8,8,11,7],
[13,0,13,11,10,11,11,9],
[9,8,0,10,7,11,11,10],
[10,10,11,0,7,8,13,10],
[13,11,14,14,0,10,13,9],
[13,10,10,13,11,0,13,11],
[10,10,10,8,8,8,0,6],
[14,12,11,11,12,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,9,13,11,10,10],
[9,0,15,14,12,11,11,14],
[5,6,0,2,10,12,9,9],
[12,7,19,0,11,15,12,10],
[8,9,11,10,0,11,11,9],
[10,10,9,6,10,0,5,6],
[11,10,12,9,10,16,0,10],
[11,7,12,11,12,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,7,6,7,10,13],
[11,0,12,9,11,7,14,14],
[10,9,0,7,9,10,10,12],
[14,12,14,0,8,13,15,16],
[15,10,12,13,0,10,13,15],
[14,14,11,8,11,0,13,14],
[11,7,11,6,8,8,0,8],
[8,7,9,5,6,7,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,8,11,14,13,9],
[13,0,9,9,14,16,13,8],
[14,12,0,10,11,15,12,11],
[13,12,11,0,13,16,12,10],
[10,7,10,8,0,12,10,9],
[7,5,6,5,9,0,7,9],
[8,8,9,9,11,14,0,9],
[12,13,10,11,12,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,10,13,12,16,14],
[5,0,10,11,11,9,9,10],
[4,11,0,5,11,6,7,10],
[11,10,16,0,11,10,10,13],
[8,10,10,10,0,10,9,11],
[9,12,15,11,11,0,10,12],
[5,12,14,11,12,11,0,11],
[7,11,11,8,10,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,18,15,12,10,9,9],
[11,0,11,11,5,7,5,11],
[3,10,0,15,7,10,5,9],
[6,10,6,0,3,10,5,3],
[9,16,14,18,0,13,11,9],
[11,14,11,11,8,0,11,14],
[12,16,16,16,10,10,0,12],
[12,10,12,18,12,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,9,8,11,13,11],
[11,0,12,10,10,12,9,9],
[10,9,0,9,7,10,6,6],
[12,11,12,0,11,9,11,8],
[13,11,14,10,0,12,12,7],
[10,9,11,12,9,0,9,10],
[8,12,15,10,9,12,0,9],
[10,12,15,13,14,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,12,12,15,14,8],
[14,0,13,7,10,13,12,11],
[11,8,0,9,11,12,11,15],
[9,14,12,0,9,14,12,13],
[9,11,10,12,0,12,12,11],
[6,8,9,7,9,0,11,10],
[7,9,10,9,9,10,0,15],
[13,10,6,8,10,11,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,13,13,0,13,5,13],
[16,0,13,21,16,21,8,21],
[8,8,0,21,8,13,8,16],
[8,0,0,0,8,8,8,8],
[21,5,13,13,0,21,13,21],
[8,0,8,13,0,0,8,16],
[16,13,13,13,8,13,0,21],
[8,0,5,13,0,5,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,8,6,8,11,8],
[13,0,14,5,6,9,6,3],
[10,7,0,9,7,0,7,7],
[13,16,12,0,12,12,12,6],
[15,15,14,9,0,11,11,5],
[13,12,21,9,10,0,15,12],
[10,15,14,9,10,6,0,4],
[13,18,14,15,16,9,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,11,12,8,9,12],
[11,0,9,9,13,9,7,12],
[13,12,0,8,13,8,10,10],
[10,12,13,0,14,12,11,11],
[9,8,8,7,0,8,9,12],
[13,12,13,9,13,0,12,10],
[12,14,11,10,12,9,0,9],
[9,9,11,10,9,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,8,11,8,12,11],
[12,0,14,11,11,10,15,13],
[7,7,0,7,8,6,10,9],
[13,10,14,0,12,9,15,13],
[10,10,13,9,0,11,13,10],
[13,11,15,12,10,0,11,12],
[9,6,11,6,8,10,0,13],
[10,8,12,8,11,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,9,10,9,11,11],
[13,0,9,10,10,14,9,12],
[13,12,0,11,17,10,14,16],
[12,11,10,0,13,7,12,14],
[11,11,4,8,0,9,11,13],
[12,7,11,14,12,0,11,10],
[10,12,7,9,10,10,0,16],
[10,9,5,7,8,11,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,10,10,21,7,10],
[14,0,9,12,11,18,7,8],
[9,12,0,16,6,17,12,6],
[11,9,5,0,6,14,3,3],
[11,10,15,15,0,15,10,6],
[0,3,4,7,6,0,7,6],
[14,14,9,18,11,14,0,11],
[11,13,15,18,15,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,21,14,14,14,7],
[7,0,21,21,14,14,21,14],
[7,0,0,7,14,14,14,7],
[0,0,14,0,7,7,14,7],
[7,7,7,14,0,7,14,0],
[7,7,7,14,14,0,14,7],
[7,0,7,7,7,7,0,7],
[14,7,14,14,21,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,10,11,10,14,17],
[9,0,13,8,10,9,9,11],
[7,8,0,6,6,8,9,8],
[11,13,15,0,11,10,13,13],
[10,11,15,10,0,11,12,13],
[11,12,13,11,10,0,13,12],
[7,12,12,8,9,8,0,12],
[4,10,13,8,8,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,11,6,12,9,9],
[14,0,14,10,15,14,15,16],
[13,7,0,13,11,8,12,12],
[10,11,8,0,13,11,11,11],
[15,6,10,8,0,11,11,11],
[9,7,13,10,10,0,11,13],
[12,6,9,10,10,10,0,7],
[12,5,9,10,10,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,7,7,7,15,12,10],
[8,0,6,8,7,13,12,9],
[14,15,0,10,12,16,15,12],
[14,13,11,0,7,12,16,10],
[14,14,9,14,0,13,17,11],
[6,8,5,9,8,0,12,12],
[9,9,6,5,4,9,0,9],
[11,12,9,11,10,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,7,11,9,10,12],
[12,0,14,12,14,10,12,13],
[12,7,0,9,11,8,11,11],
[14,9,12,0,12,8,12,11],
[10,7,10,9,0,6,9,12],
[12,11,13,13,15,0,10,14],
[11,9,10,9,12,11,0,10],
[9,8,10,10,9,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,5,12,6,9,8],
[13,0,11,6,14,12,9,11],
[11,10,0,9,13,7,8,12],
[16,15,12,0,14,10,11,13],
[9,7,8,7,0,8,8,11],
[15,9,14,11,13,0,16,14],
[12,12,13,10,13,5,0,13],
[13,10,9,8,10,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,11,12,13,10,11],
[9,0,13,14,11,12,9,10],
[5,8,0,7,9,6,5,3],
[10,7,14,0,9,5,11,9],
[9,10,12,12,0,9,12,14],
[8,9,15,16,12,0,10,10],
[11,12,16,10,9,11,0,8],
[10,11,18,12,7,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,9,11,9,12,14],
[11,0,11,10,14,6,14,13],
[13,10,0,10,8,8,10,12],
[12,11,11,0,14,8,14,12],
[10,7,13,7,0,11,8,11],
[12,15,13,13,10,0,14,13],
[9,7,11,7,13,7,0,10],
[7,8,9,9,10,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,8,7,7,7,14],
[14,0,12,10,17,12,17,12],
[9,9,0,9,8,6,8,12],
[13,11,12,0,9,10,12,16],
[14,4,13,12,0,7,10,9],
[14,9,15,11,14,0,13,12],
[14,4,13,9,11,8,0,12],
[7,9,9,5,12,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,8,15,11,7,8],
[10,0,11,12,14,10,12,13],
[7,10,0,7,11,3,8,7],
[13,9,14,0,11,9,14,7],
[6,7,10,10,0,6,6,4],
[10,11,18,12,15,0,11,11],
[14,9,13,7,15,10,0,10],
[13,8,14,14,17,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,12,5,14,13,9],
[12,0,9,10,8,10,13,8],
[8,12,0,12,11,14,14,7],
[9,11,9,0,11,13,12,14],
[16,13,10,10,0,11,15,10],
[7,11,7,8,10,0,10,11],
[8,8,7,9,6,11,0,8],
[12,13,14,7,11,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,10,10,11,12,11],
[10,0,12,9,8,10,10,11],
[9,9,0,10,9,9,13,11],
[11,12,11,0,10,12,11,10],
[11,13,12,11,0,9,13,14],
[10,11,12,9,12,0,13,11],
[9,11,8,10,8,8,0,11],
[10,10,10,11,7,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,14,16,7,14,12],
[9,0,14,16,19,5,10,12],
[9,7,0,12,14,7,12,7],
[7,5,9,0,17,5,12,3],
[5,2,7,4,0,5,2,2],
[14,16,14,16,16,0,10,16],
[7,11,9,9,19,11,0,6],
[9,9,14,18,19,5,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,10,11,8,12,8],
[9,0,10,7,8,8,11,14],
[9,11,0,5,5,6,8,7],
[11,14,16,0,11,10,11,15],
[10,13,16,10,0,11,10,14],
[13,13,15,11,10,0,11,11],
[9,10,13,10,11,10,0,11],
[13,7,14,6,7,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,17,10,13,7,16],
[10,0,7,16,10,14,10,17],
[11,14,0,15,11,15,7,17],
[4,5,6,0,6,2,6,8],
[11,11,10,15,0,10,13,15],
[8,7,6,19,11,0,9,13],
[14,11,14,15,8,12,0,19],
[5,4,4,13,6,8,2,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,8,10,10,13,8],
[9,0,11,12,10,12,11,10],
[8,10,0,10,9,11,12,9],
[13,9,11,0,10,13,13,10],
[11,11,12,11,0,10,11,9],
[11,9,10,8,11,0,13,11],
[8,10,9,8,10,8,0,9],
[13,11,12,11,12,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,14,12,10,12,13],
[9,0,9,9,6,8,9,10],
[6,12,0,10,12,10,11,12],
[7,12,11,0,14,8,9,8],
[9,15,9,7,0,11,9,10],
[11,13,11,13,10,0,10,12],
[9,12,10,12,12,11,0,12],
[8,11,9,13,11,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,12,10,9,6,12],
[12,0,9,10,18,10,11,9],
[11,12,0,9,17,12,11,10],
[9,11,12,0,14,10,12,12],
[11,3,4,7,0,10,6,8],
[12,11,9,11,11,0,8,11],
[15,10,10,9,15,13,0,12],
[9,12,11,9,13,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,15,15,15,9,9,9],
[12,0,12,6,15,6,12,15],
[6,9,0,9,9,9,15,9],
[6,15,12,0,15,9,15,15],
[6,6,12,6,0,0,6,9],
[12,15,12,12,21,0,6,21],
[12,9,6,6,15,15,0,15],
[12,6,12,6,12,0,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,12,16,10,13,10],
[5,0,8,6,8,8,11,9],
[11,13,0,15,11,10,11,10],
[9,15,6,0,12,12,12,11],
[5,13,10,9,0,7,8,9],
[11,13,11,9,14,0,12,10],
[8,10,10,9,13,9,0,14],
[11,12,11,10,12,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,14,12,11,13,10],
[9,0,14,11,10,10,11,12],
[8,7,0,7,6,8,12,8],
[7,10,14,0,14,10,14,10],
[9,11,15,7,0,9,12,8],
[10,11,13,11,12,0,11,10],
[8,10,9,7,9,10,0,8],
[11,9,13,11,13,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,4,13,7,7,6,6],
[11,0,7,12,10,9,12,10],
[17,14,0,17,9,13,9,14],
[8,9,4,0,8,7,7,5],
[14,11,12,13,0,8,12,9],
[14,12,8,14,13,0,12,9],
[15,9,12,14,9,9,0,11],
[15,11,7,16,12,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,7,8,6,10,8],
[11,0,11,14,10,10,15,11],
[14,10,0,12,10,10,14,12],
[14,7,9,0,11,9,11,10],
[13,11,11,10,0,13,12,8],
[15,11,11,12,8,0,15,13],
[11,6,7,10,9,6,0,4],
[13,10,9,11,13,8,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,12,12,7,12,16],
[10,0,11,13,12,9,13,13],
[8,10,0,11,8,9,10,15],
[9,8,10,0,8,11,14,13],
[9,9,13,13,0,9,13,16],
[14,12,12,10,12,0,15,15],
[9,8,11,7,8,6,0,12],
[5,8,6,8,5,6,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,10,14,15,13,12],
[10,0,17,11,14,15,14,8],
[7,4,0,5,9,9,10,8],
[11,10,16,0,12,15,13,9],
[7,7,12,9,0,12,10,9],
[6,6,12,6,9,0,10,7],
[8,7,11,8,11,11,0,9],
[9,13,13,12,12,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,0,9,9,12,12],
[13,0,7,2,9,9,12,8],
[14,14,0,11,11,7,18,14],
[21,19,10,0,13,11,19,18],
[12,12,10,8,0,8,18,12],
[12,12,14,10,13,0,16,14],
[9,9,3,2,3,5,0,9],
[9,13,7,3,9,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,13,6,7,13,9],
[9,0,6,9,9,6,9,6],
[14,15,0,13,14,11,9,6],
[8,12,8,0,8,5,11,9],
[15,12,7,13,0,10,13,13],
[14,15,10,16,11,0,12,12],
[8,12,12,10,8,9,0,9],
[12,15,15,12,8,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,8,10,10,10,5],
[10,0,10,12,8,12,12,8],
[10,11,0,11,9,13,9,11],
[13,9,10,0,9,11,11,8],
[11,13,12,12,0,10,9,6],
[11,9,8,10,11,0,9,8],
[11,9,12,10,12,12,0,11],
[16,13,10,13,15,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,5,4,0,0,5,14],
[17,0,5,16,7,0,12,14],
[16,16,0,11,12,16,7,16],
[17,5,10,0,5,5,17,10],
[21,14,9,16,0,9,12,14],
[21,21,5,16,12,0,12,21],
[16,9,14,4,9,9,0,14],
[7,7,5,11,7,0,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,14,14,7,14,14],
[7,0,7,0,7,14,14,7],
[7,14,0,7,14,7,14,7],
[7,21,14,0,14,14,21,7],
[7,14,7,7,0,7,21,7],
[14,7,14,7,14,0,14,14],
[7,7,7,0,0,7,0,0],
[7,14,14,14,14,7,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,8,12,8,16,8],
[13,0,17,17,17,13,12,8],
[9,4,0,9,13,9,8,0],
[13,4,12,0,12,12,12,8],
[9,4,8,9,0,13,8,4],
[13,8,12,9,8,0,12,12],
[5,9,13,9,13,9,0,4],
[13,13,21,13,17,9,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,6,5,0,11,11,0],
[10,0,6,0,0,10,11,0],
[15,15,0,10,15,15,16,15],
[16,21,11,0,5,16,11,5],
[21,21,6,16,0,21,16,16],
[10,11,6,5,0,0,11,0],
[10,10,5,10,5,10,0,5],
[21,21,6,16,5,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,6,6,8,7,9,10],
[13,0,12,8,14,12,10,11],
[15,9,0,7,12,10,11,10],
[15,13,14,0,17,13,10,10],
[13,7,9,4,0,11,4,5],
[14,9,11,8,10,0,10,11],
[12,11,10,11,17,11,0,12],
[11,10,11,11,16,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,16,15,9,8,11],
[11,0,10,10,11,8,8,7],
[7,11,0,9,9,9,7,8],
[5,11,12,0,9,11,8,11],
[6,10,12,12,0,8,6,10],
[12,13,12,10,13,0,11,11],
[13,13,14,13,15,10,0,11],
[10,14,13,10,11,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,11,9,13,13,14],
[9,0,12,5,7,10,11,10],
[8,9,0,7,9,11,8,9],
[10,16,14,0,11,17,15,14],
[12,14,12,10,0,12,16,13],
[8,11,10,4,9,0,12,12],
[8,10,13,6,5,9,0,11],
[7,11,12,7,8,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,13,11,12,5,10],
[13,0,13,15,9,14,11,12],
[9,8,0,13,7,12,7,12],
[8,6,8,0,6,4,7,9],
[10,12,14,15,0,7,10,13],
[9,7,9,17,14,0,9,11],
[16,10,14,14,11,12,0,11],
[11,9,9,12,8,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,6,8,10,11,12],
[9,0,8,9,6,9,7,9],
[14,13,0,13,10,13,12,16],
[15,12,8,0,12,8,8,13],
[13,15,11,9,0,12,10,10],
[11,12,8,13,9,0,13,17],
[10,14,9,13,11,8,0,10],
[9,12,5,8,11,4,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,5,8,7,8,7,10],
[9,0,3,9,6,8,4,7],
[16,18,0,13,11,13,10,14],
[13,12,8,0,10,11,6,11],
[14,15,10,11,0,12,14,12],
[13,13,8,10,9,0,9,10],
[14,17,11,15,7,12,0,12],
[11,14,7,10,9,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,9,6,3,6,12,3],
[18,0,10,10,10,13,13,7],
[12,11,0,9,10,7,13,11],
[15,11,12,0,15,15,10,12],
[18,11,11,6,0,18,13,5],
[15,8,14,6,3,0,13,8],
[9,8,8,11,8,8,0,8],
[18,14,10,9,16,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,14,9,12,14,13],
[10,0,13,11,13,7,7,9],
[10,8,0,7,7,1,10,13],
[7,10,14,0,10,0,14,14],
[12,8,14,11,0,9,12,17],
[9,14,20,21,12,0,17,20],
[7,14,11,7,9,4,0,13],
[8,12,8,7,4,1,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,4,10,7,8,8,4],
[14,0,14,10,14,15,10,11],
[17,7,0,10,7,8,14,4],
[11,11,11,0,8,8,8,4],
[14,7,14,13,0,11,14,11],
[13,6,13,13,10,0,9,6],
[13,11,7,13,7,12,0,7],
[17,10,17,17,10,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,12,10,15,16,13],
[5,0,9,5,2,8,10,10],
[9,12,0,6,7,5,9,8],
[9,16,15,0,12,13,14,13],
[11,19,14,9,0,15,11,10],
[6,13,16,8,6,0,12,10],
[5,11,12,7,10,9,0,3],
[8,11,13,8,11,11,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,12,12,13,12,14],
[9,0,8,13,13,12,13,11],
[12,13,0,10,15,13,14,10],
[9,8,11,0,12,8,11,9],
[9,8,6,9,0,12,9,12],
[8,9,8,13,9,0,12,10],
[9,8,7,10,12,9,0,10],
[7,10,11,12,9,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,7,11,9,7,9,9],
[8,0,8,6,10,7,7,8],
[14,13,0,13,11,13,11,7],
[10,15,8,0,10,8,13,9],
[12,11,10,11,0,14,10,11],
[14,14,8,13,7,0,14,8],
[12,14,10,8,11,7,0,8],
[12,13,14,12,10,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,5,11,6,4,4,2],
[12,0,11,8,9,10,8,7],
[16,10,0,17,8,12,14,10],
[10,13,4,0,5,10,7,5],
[15,12,13,16,0,8,11,10],
[17,11,9,11,13,0,12,11],
[17,13,7,14,10,9,0,10],
[19,14,11,16,11,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,12,10,14,12,11],
[10,0,11,14,9,9,14,9],
[9,10,0,11,11,13,11,10],
[9,7,10,0,9,9,11,7],
[11,12,10,12,0,13,16,9],
[7,12,8,12,8,0,12,8],
[9,7,10,10,5,9,0,7],
[10,12,11,14,12,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,14,10,12,16,16],
[7,0,14,10,12,4,16,14],
[6,7,0,10,5,5,14,8],
[7,11,11,0,11,9,12,10],
[11,9,16,10,0,7,16,12],
[9,17,16,12,14,0,19,14],
[5,5,7,9,5,2,0,9],
[5,7,13,11,9,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,7,8,9,8,10],
[13,0,9,13,12,11,13,10],
[13,12,0,13,13,11,8,12],
[14,8,8,0,8,8,10,11],
[13,9,8,13,0,9,10,10],
[12,10,10,13,12,0,13,10],
[13,8,13,11,11,8,0,11],
[11,11,9,10,11,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,13,13,14,13,12],
[10,0,6,9,6,11,13,12],
[11,15,0,13,10,11,14,14],
[8,12,8,0,11,12,10,8],
[8,15,11,10,0,12,13,9],
[7,10,10,9,9,0,10,8],
[8,8,7,11,8,11,0,8],
[9,9,7,13,12,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,6,21,13,14,21,13],
[7,0,6,7,7,0,15,7],
[15,15,0,15,15,8,15,15],
[0,14,6,0,0,0,8,13],
[8,14,6,21,0,8,15,21],
[7,21,13,21,13,0,15,13],
[0,6,6,13,6,6,0,13],
[8,14,6,8,0,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,7,11,9,9,7,7],
[15,0,10,12,10,10,10,15],
[14,11,0,13,10,12,10,12],
[10,9,8,0,11,9,10,12],
[12,11,11,10,0,10,7,9],
[12,11,9,12,11,0,11,13],
[14,11,11,11,14,10,0,13],
[14,6,9,9,12,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,10,12,12,14,12],
[9,0,5,8,7,7,10,9],
[9,16,0,14,15,11,18,15],
[11,13,7,0,11,12,11,11],
[9,14,6,10,0,8,10,10],
[9,14,10,9,13,0,13,13],
[7,11,3,10,11,8,0,10],
[9,12,6,10,11,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,10,9,14,10,9],
[10,0,11,9,9,9,9,11],
[12,10,0,5,6,10,13,3],
[11,12,16,0,8,10,14,7],
[12,12,15,13,0,10,16,11],
[7,12,11,11,11,0,14,11],
[11,12,8,7,5,7,0,8],
[12,10,18,14,10,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,13,12,7,11,11],
[9,0,6,15,11,11,7,9],
[10,15,0,15,12,12,11,12],
[8,6,6,0,7,9,3,9],
[9,10,9,14,0,11,9,13],
[14,10,9,12,10,0,9,16],
[10,14,10,18,12,12,0,12],
[10,12,9,12,8,5,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,10,14,9,15,12],
[8,0,9,11,9,7,8,14],
[9,12,0,13,11,8,10,9],
[11,10,8,0,9,7,7,9],
[7,12,10,12,0,10,10,11],
[12,14,13,14,11,0,10,13],
[6,13,11,14,11,11,0,10],
[9,7,12,12,10,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,6,11,11,9,8],
[8,0,11,0,7,4,6,8],
[10,10,0,10,15,8,4,10],
[15,21,11,0,7,13,11,15],
[10,14,6,14,0,8,6,10],
[10,17,13,8,13,0,9,14],
[12,15,17,10,15,12,0,14],
[13,13,11,6,11,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,9,12,8,11,10],
[13,0,8,11,12,10,10,10],
[14,13,0,10,15,13,10,9],
[12,10,11,0,12,13,8,13],
[9,9,6,9,0,8,9,9],
[13,11,8,8,13,0,10,11],
[10,11,11,13,12,11,0,12],
[11,11,12,8,12,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,18,17,13,13,10],
[6,0,7,13,9,13,10,10],
[10,14,0,15,15,14,16,13],
[3,8,6,0,7,10,7,6],
[4,12,6,14,0,11,8,8],
[8,8,7,11,10,0,8,7],
[8,11,5,14,13,13,0,11],
[11,11,8,15,13,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,11,11,9,9,11],
[12,0,12,11,11,7,7,7],
[13,9,0,11,10,12,12,11],
[10,10,10,0,10,10,11,12],
[10,10,11,11,0,10,11,10],
[12,14,9,11,11,0,13,13],
[12,14,9,10,10,8,0,7],
[10,14,10,9,11,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,13,11,9,7,10],
[11,0,9,10,9,10,12,11],
[12,12,0,6,5,9,12,8],
[8,11,15,0,8,11,9,9],
[10,12,16,13,0,12,15,12],
[12,11,12,10,9,0,9,9],
[14,9,9,12,6,12,0,7],
[11,10,13,12,9,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,11,11,7,11,14],
[10,0,6,13,11,11,12,13],
[11,15,0,9,10,6,7,8],
[10,8,12,0,13,9,8,9],
[10,10,11,8,0,10,15,10],
[14,10,15,12,11,0,9,16],
[10,9,14,13,6,12,0,14],
[7,8,13,12,11,5,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,15,8,11,9,9,9],
[14,0,15,9,14,11,13,11],
[6,6,0,4,10,5,9,3],
[13,12,17,0,11,8,12,9],
[10,7,11,10,0,6,6,8],
[12,10,16,13,15,0,14,15],
[12,8,12,9,15,7,0,11],
[12,10,18,12,13,6,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,21,18,16,18,16,9],
[8,0,8,13,12,13,8,13],
[0,13,0,13,16,18,7,9],
[3,8,8,0,16,17,8,3],
[5,9,5,5,0,10,3,5],
[3,8,3,4,11,0,3,7],
[5,13,14,13,18,18,0,9],
[12,8,12,18,16,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,12,13,14,11,6],
[9,0,16,12,11,16,13,10],
[12,5,0,5,7,11,5,4],
[9,9,16,0,8,14,12,4],
[8,10,14,13,0,16,16,11],
[7,5,10,7,5,0,8,2],
[10,8,16,9,5,13,0,6],
[15,11,17,17,10,19,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,13,13,11,11,10],
[9,0,11,16,14,12,14,14],
[8,10,0,16,14,16,11,11],
[8,5,5,0,11,12,10,9],
[8,7,7,10,0,15,8,5],
[10,9,5,9,6,0,6,5],
[10,7,10,11,13,15,0,8],
[11,7,10,12,16,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,15,13,13,15,7,21],
[0,0,0,6,0,0,0,21],
[6,21,0,6,13,6,13,21],
[8,15,15,0,7,15,15,21],
[8,21,8,14,0,8,8,21],
[6,21,15,6,13,0,13,21],
[14,21,8,6,13,8,0,21],
[0,0,0,0,0,0,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,11,8,21,14,14,12],
[0,0,0,0,6,6,0,0],
[10,21,0,15,21,14,14,12],
[13,21,6,0,16,14,9,7],
[0,15,0,5,0,14,8,5],
[7,15,7,7,7,0,0,7],
[7,21,7,12,13,21,0,7],
[9,21,9,14,16,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,6,13,6,6,6,6],
[8,0,14,21,14,14,14,14],
[15,7,0,15,15,7,7,15],
[8,0,6,0,6,6,6,6],
[15,7,6,15,0,0,0,8],
[15,7,14,15,21,0,6,14],
[15,7,14,15,21,15,0,15],
[15,7,6,15,13,7,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,6,6,8,13,14],
[10,0,12,8,9,11,7,9],
[7,9,0,5,11,9,9,11],
[15,13,16,0,10,11,12,13],
[15,12,10,11,0,13,16,14],
[13,10,12,10,8,0,11,9],
[8,14,12,9,5,10,0,11],
[7,12,10,8,7,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,11,12,8,7,15,3],
[18,0,18,9,15,7,12,7],
[10,3,0,7,12,7,10,7],
[9,12,14,0,17,12,12,12],
[13,6,9,4,0,7,7,3],
[14,14,14,9,14,0,17,17],
[6,9,11,9,14,4,0,6],
[18,14,14,9,18,4,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,9,7,11,12,5],
[13,0,12,15,11,13,13,9],
[10,9,0,12,10,12,16,14],
[12,6,9,0,9,11,10,3],
[14,10,11,12,0,17,12,8],
[10,8,9,10,4,0,12,6],
[9,8,5,11,9,9,0,11],
[16,12,7,18,13,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,7,10,10,5,10],
[13,0,10,9,12,7,6,9],
[11,11,0,9,8,6,8,5],
[14,12,12,0,10,9,11,10],
[11,9,13,11,0,12,10,8],
[11,14,15,12,9,0,11,10],
[16,15,13,10,11,10,0,11],
[11,12,16,11,13,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,10,7,10,14,5,11],
[18,0,13,9,10,15,7,15],
[11,8,0,8,12,7,9,6],
[14,12,13,0,14,14,13,10],
[11,11,9,7,0,11,8,11],
[7,6,14,7,10,0,4,9],
[16,14,12,8,13,17,0,15],
[10,6,15,11,10,12,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,11,13,10,8,17],
[7,0,10,10,12,9,9,12],
[7,11,0,10,11,8,7,15],
[10,11,11,0,11,13,13,14],
[8,9,10,10,0,6,8,11],
[11,12,13,8,15,0,7,12],
[13,12,14,8,13,14,0,13],
[4,9,6,7,10,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,14,11,9,9,6],
[9,0,11,9,10,6,7,6],
[11,10,0,10,11,10,10,9],
[7,12,11,0,10,5,9,7],
[10,11,10,11,0,8,7,8],
[12,15,11,16,13,0,12,9],
[12,14,11,12,14,9,0,11],
[15,15,12,14,13,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,5,10,5,10,5,10],
[21,0,5,10,5,21,10,10],
[16,16,0,21,12,16,12,9],
[11,11,0,0,0,11,0,4],
[16,16,9,21,0,16,5,9],
[11,0,5,10,5,0,5,10],
[16,11,9,21,16,16,0,14],
[11,11,12,17,12,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,6,9,8,9,12],
[11,0,12,6,6,13,8,8],
[9,9,0,7,12,13,8,8],
[15,15,14,0,9,15,14,12],
[12,15,9,12,0,10,14,11],
[13,8,8,6,11,0,10,7],
[12,13,13,7,7,11,0,11],
[9,13,13,9,10,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,10,10,10,14,8],
[9,0,14,10,8,9,17,7],
[10,7,0,8,8,10,14,9],
[11,11,13,0,11,10,13,14],
[11,13,13,10,0,12,15,11],
[11,12,11,11,9,0,17,11],
[7,4,7,8,6,4,0,7],
[13,14,12,7,10,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,9,6,7,7,3],
[12,0,13,11,8,11,8,7],
[11,8,0,9,11,7,10,6],
[12,10,12,0,6,8,7,4],
[15,13,10,15,0,9,9,5],
[14,10,14,13,12,0,10,12],
[14,13,11,14,12,11,0,7],
[18,14,15,17,16,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,14,12,12,10,10],
[5,0,8,6,11,9,9,12],
[8,13,0,7,13,8,11,15],
[7,15,14,0,17,8,13,13],
[9,10,8,4,0,9,13,11],
[9,12,13,13,12,0,8,10],
[11,12,10,8,8,13,0,10],
[11,9,6,8,10,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,6,3,3,10,4,3],
[8,0,0,3,0,7,4,5],
[15,21,0,9,12,12,10,8],
[18,18,12,0,9,15,13,9],
[18,21,9,12,0,12,13,14],
[11,14,9,6,9,0,7,8],
[17,17,11,8,8,14,0,8],
[18,16,13,12,7,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,16,12,8,13,13],
[3,0,6,4,1,9,11,4],
[8,15,0,10,9,12,12,10],
[5,17,11,0,8,8,10,4],
[9,20,12,13,0,15,17,7],
[13,12,9,13,6,0,12,10],
[8,10,9,11,4,9,0,5],
[8,17,11,17,14,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,5,11,9,10,6,10],
[9,0,8,11,13,11,8,9],
[16,13,0,8,17,15,13,12],
[10,10,13,0,16,14,9,8],
[12,8,4,5,0,10,7,8],
[11,10,6,7,11,0,8,11],
[15,13,8,12,14,13,0,10],
[11,12,9,13,13,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,10,8,13,8,7,13],
[15,0,10,12,13,11,11,12],
[11,11,0,12,13,12,7,9],
[13,9,9,0,11,8,10,10],
[8,8,8,10,0,10,6,10],
[13,10,9,13,11,0,10,13],
[14,10,14,11,15,11,0,16],
[8,9,12,11,11,8,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,10,12,10,13,9],
[11,0,13,15,12,11,14,8],
[11,8,0,12,10,8,10,10],
[11,6,9,0,9,8,11,10],
[9,9,11,12,0,12,10,8],
[11,10,13,13,9,0,10,11],
[8,7,11,10,11,11,0,9],
[12,13,11,11,13,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,14,7,7,0,7,14],
[0,0,0,0,0,0,0,0],
[7,21,0,0,0,0,7,14],
[14,21,21,0,7,7,14,14],
[14,21,21,14,0,14,7,21],
[21,21,21,14,7,0,14,14],
[14,21,14,7,14,7,0,14],
[7,21,7,7,0,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,12,13,13,11,6],
[14,0,11,10,15,13,14,11],
[9,10,0,7,14,12,8,8],
[9,11,14,0,14,16,8,9],
[8,6,7,7,0,13,7,8],
[8,8,9,5,8,0,8,4],
[10,7,13,13,14,13,0,8],
[15,10,13,12,13,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,9,9,6,6,6],
[15,0,3,12,12,21,21,6],
[15,18,0,9,12,21,18,12],
[12,9,12,0,9,12,9,12],
[12,9,9,12,0,15,15,12],
[15,0,0,9,6,0,12,3],
[15,0,3,12,6,9,0,3],
[15,15,9,9,9,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,6,7,13,9,9,8],
[11,0,8,8,13,13,15,12],
[15,13,0,12,15,13,13,10],
[14,13,9,0,13,11,12,10],
[8,8,6,8,0,8,7,8],
[12,8,8,10,13,0,8,4],
[12,6,8,9,14,13,0,8],
[13,9,11,11,13,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,10,12,7,9,15],
[12,0,15,13,14,11,9,17],
[12,6,0,8,11,2,8,14],
[11,8,13,0,15,8,12,15],
[9,7,10,6,0,9,9,14],
[14,10,19,13,12,0,14,17],
[12,12,13,9,12,7,0,17],
[6,4,7,6,7,4,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,11,15,13,13,8],
[12,0,8,13,15,11,11,13],
[10,13,0,15,12,10,13,12],
[10,8,6,0,7,7,7,4],
[6,6,9,14,0,7,11,8],
[8,10,11,14,14,0,11,11],
[8,10,8,14,10,10,0,12],
[13,8,9,17,13,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,12,10,10,10,7],
[11,0,11,13,13,9,11,11],
[11,10,0,13,10,9,12,13],
[9,8,8,0,9,9,6,9],
[11,8,11,12,0,7,9,10],
[11,12,12,12,14,0,11,10],
[11,10,9,15,12,10,0,10],
[14,10,8,12,11,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,8,14,13,10,12],
[7,0,8,6,8,11,5,7],
[8,13,0,16,7,16,14,14],
[13,15,5,0,12,21,11,12],
[7,13,14,9,0,14,14,13],
[8,10,5,0,7,0,5,7],
[11,16,7,10,7,16,0,7],
[9,14,7,9,8,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,11,7,11,15,13],
[10,0,11,12,8,14,8,12],
[13,10,0,9,11,10,12,11],
[10,9,12,0,8,10,9,13],
[14,13,10,13,0,12,13,14],
[10,7,11,11,9,0,9,13],
[6,13,9,12,8,12,0,12],
[8,9,10,8,7,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,11,12,10,11,10],
[12,0,7,14,8,10,12,6],
[15,14,0,16,16,12,14,10],
[10,7,5,0,5,5,12,3],
[9,13,5,16,0,8,12,6],
[11,11,9,16,13,0,12,13],
[10,9,7,9,9,9,0,6],
[11,15,11,18,15,8,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,4,4,6,10,5,5],
[18,0,10,13,14,16,15,11],
[17,11,0,8,12,8,9,8],
[17,8,13,0,9,16,11,11],
[15,7,9,12,0,15,14,10],
[11,5,13,5,6,0,8,5],
[16,6,12,10,7,13,0,10],
[16,10,13,10,11,16,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,8,10,10,13,10],
[13,0,13,7,10,10,12,9],
[12,8,0,10,8,10,8,14],
[13,14,11,0,14,12,14,9],
[11,11,13,7,0,11,15,10],
[11,11,11,9,10,0,13,7],
[8,9,13,7,6,8,0,7],
[11,12,7,12,11,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,13,10,16,10,10],
[12,0,9,15,11,17,12,12],
[9,12,0,6,10,16,17,7],
[8,6,15,0,7,13,14,7],
[11,10,11,14,0,14,14,7],
[5,4,5,8,7,0,9,8],
[11,9,4,7,7,12,0,9],
[11,9,14,14,14,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,10,11,14,8,16],
[8,0,9,5,8,10,10,12],
[10,12,0,9,11,14,11,12],
[11,16,12,0,12,9,12,13],
[10,13,10,9,0,11,12,15],
[7,11,7,12,10,0,9,11],
[13,11,10,9,9,12,0,13],
[5,9,9,8,6,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,14,7,6,13,10,6],
[18,0,16,11,13,16,14,9],
[7,5,0,9,9,9,12,4],
[14,10,12,0,15,14,10,12],
[15,8,12,6,0,12,9,10],
[8,5,12,7,9,0,8,7],
[11,7,9,11,12,13,0,11],
[15,12,17,9,11,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,10,11,9,11,8],
[14,0,13,13,12,9,16,13],
[13,8,0,12,11,10,12,10],
[11,8,9,0,10,10,13,11],
[10,9,10,11,0,12,12,12],
[12,12,11,11,9,0,13,9],
[10,5,9,8,9,8,0,12],
[13,8,11,10,9,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,21,17,15,16,20],
[8,0,11,21,18,16,14,21],
[13,10,0,21,20,20,13,20],
[0,0,0,0,14,7,10,7],
[4,3,1,7,0,11,6,8],
[6,5,1,14,10,0,6,8],
[5,7,8,11,15,15,0,15],
[1,0,1,14,13,13,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,7,8,7,7,0,7],
[21,0,13,14,13,21,6,13],
[14,8,0,14,14,21,14,21],
[13,7,7,0,13,13,6,13],
[14,8,7,8,0,21,0,7],
[14,0,0,8,0,0,0,0],
[21,15,7,15,21,21,0,15],
[14,8,0,8,14,21,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,14,11,17,14,15],
[8,0,11,11,10,12,12,14],
[11,10,0,11,8,12,11,13],
[7,10,10,0,9,11,9,11],
[10,11,13,12,0,15,13,15],
[4,9,9,10,6,0,9,9],
[7,9,10,12,8,12,0,10],
[6,7,8,10,6,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,13,10,10,14,14],
[8,0,12,9,10,9,13,15],
[5,9,0,10,12,12,11,12],
[8,12,11,0,9,12,13,14],
[11,11,9,12,0,9,15,16],
[11,12,9,9,12,0,17,19],
[7,8,10,8,6,4,0,9],
[7,6,9,7,5,2,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,13,10,9,10,9],
[10,0,8,12,12,11,12,15],
[10,13,0,12,12,12,9,14],
[8,9,9,0,10,10,10,11],
[11,9,9,11,0,7,11,10],
[12,10,9,11,14,0,10,14],
[11,9,12,11,10,11,0,12],
[12,6,7,10,11,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,12,6,10,6,16],
[9,0,4,9,9,4,11,21],
[9,17,0,9,5,10,11,21],
[9,12,12,0,6,10,6,16],
[15,12,16,15,0,16,6,21],
[11,17,11,11,5,0,11,17],
[15,10,10,15,15,10,0,21],
[5,0,0,5,0,4,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,14,11,12,11,15],
[10,0,8,10,11,10,10,15],
[11,13,0,12,9,10,12,14],
[7,11,9,0,9,10,9,13],
[10,10,12,12,0,11,13,15],
[9,11,11,11,10,0,11,13],
[10,11,9,12,8,10,0,14],
[6,6,7,8,6,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,11,8,12,9,11],
[7,0,5,8,10,14,4,3],
[11,16,0,9,7,10,8,8],
[10,13,12,0,12,17,15,4],
[13,11,14,9,0,21,12,7],
[9,7,11,4,0,0,7,1],
[12,17,13,6,9,14,0,7],
[10,18,13,17,14,20,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,3,7,9,6,7,7],
[17,0,11,9,13,10,12,9],
[18,10,0,10,13,14,10,12],
[14,12,11,0,12,15,11,10],
[12,8,8,9,0,12,10,10],
[15,11,7,6,9,0,6,10],
[14,9,11,10,11,15,0,11],
[14,12,9,11,11,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,16,9,16,11,10,12],
[15,0,14,13,15,7,8,12],
[5,7,0,8,7,10,9,8],
[12,8,13,0,16,9,8,7],
[5,6,14,5,0,7,6,6],
[10,14,11,12,14,0,16,10],
[11,13,12,13,15,5,0,8],
[9,9,13,14,15,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,14,14,10,12,13],
[11,0,11,15,10,8,11,10],
[8,10,0,15,12,9,13,12],
[7,6,6,0,7,9,8,8],
[7,11,9,14,0,9,12,8],
[11,13,12,12,12,0,11,10],
[9,10,8,13,9,10,0,8],
[8,11,9,13,13,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,9,6,7,10,10],
[10,0,10,12,9,6,4,9],
[12,11,0,16,15,6,10,9],
[12,9,5,0,5,6,6,6],
[15,12,6,16,0,9,9,10],
[14,15,15,15,12,0,11,10],
[11,17,11,15,12,10,0,11],
[11,12,12,15,11,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,15,11,16,12,10],
[9,0,9,14,10,14,9,11],
[9,12,0,14,11,14,10,12],
[6,7,7,0,9,11,6,9],
[10,11,10,12,0,14,12,10],
[5,7,7,10,7,0,7,6],
[9,12,11,15,9,14,0,10],
[11,10,9,12,11,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,15,11,8,8,14],
[7,0,11,6,7,2,9,11],
[6,10,0,10,6,11,9,14],
[6,15,11,0,6,6,10,18],
[10,14,15,15,0,13,11,18],
[13,19,10,15,8,0,8,15],
[13,12,12,11,10,13,0,15],
[7,10,7,3,3,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,13,6,6,11,9,9],
[14,0,14,10,12,14,14,13],
[8,7,0,7,7,8,5,5],
[15,11,14,0,11,11,11,10],
[15,9,14,10,0,16,13,11],
[10,7,13,10,5,0,13,10],
[12,7,16,10,8,8,0,9],
[12,8,16,11,10,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,3,8,3,8,9],
[10,0,10,6,7,3,3,10],
[11,11,0,14,8,3,8,11],
[18,15,7,0,15,7,12,12],
[13,14,13,6,0,6,6,7],
[18,18,18,14,15,0,5,15],
[13,18,13,9,15,16,0,10],
[12,11,10,9,14,6,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,11,12,9,14,14],
[8,0,12,6,11,10,11,13],
[8,9,0,8,11,9,9,9],
[10,15,13,0,13,9,10,15],
[9,10,10,8,0,12,12,12],
[12,11,12,12,9,0,11,13],
[7,10,12,11,9,10,0,13],
[7,8,12,6,9,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,10,7,9,8,11],
[14,0,10,11,16,11,13,13],
[14,11,0,15,13,12,8,8],
[11,10,6,0,14,10,10,7],
[14,5,8,7,0,12,11,8],
[12,10,9,11,9,0,8,8],
[13,8,13,11,10,13,0,8],
[10,8,13,14,13,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,0,8,14,6,0,8],
[13,0,6,6,14,6,6,6],
[21,15,0,15,21,13,7,15],
[13,15,6,0,14,6,0,8],
[7,7,0,7,0,6,7,7],
[15,15,8,15,15,0,15,15],
[21,15,14,21,14,6,0,8],
[13,15,6,13,14,6,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,6,7,8,7,12],
[8,0,13,11,11,5,9,8],
[6,8,0,8,5,6,4,4],
[15,10,13,0,5,12,11,13],
[14,10,16,16,0,10,12,13],
[13,16,15,9,11,0,12,11],
[14,12,17,10,9,9,0,14],
[9,13,17,8,8,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,8,11,11,12,14],
[7,0,11,10,7,11,12,10],
[5,10,0,10,8,13,12,11],
[13,11,11,0,9,10,12,11],
[10,14,13,12,0,11,16,13],
[10,10,8,11,10,0,11,8],
[9,9,9,9,5,10,0,11],
[7,11,10,10,8,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,5,7,5,4,10],
[14,0,12,16,16,10,14,11],
[13,9,0,8,8,6,7,14],
[16,5,13,0,17,11,14,13],
[14,5,13,4,0,10,8,10],
[16,11,15,10,11,0,12,21],
[17,7,14,7,13,9,0,12],
[11,10,7,8,11,0,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,9,4,6,3,2],
[14,0,14,12,18,7,10,8],
[16,7,0,7,10,12,6,3],
[12,9,14,0,13,9,12,4],
[17,3,11,8,0,7,10,5],
[15,14,9,12,14,0,10,12],
[18,11,15,9,11,11,0,9],
[19,13,18,17,16,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,9,12,12,9,12],
[12,0,9,11,7,12,11,7],
[12,12,0,11,7,7,11,7],
[12,10,10,0,12,12,5,12],
[9,14,14,9,0,16,9,16],
[9,9,14,9,5,0,9,5],
[12,10,10,16,12,12,0,7],
[9,14,14,9,5,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,18,14,13,12,8,16],
[9,0,11,11,12,14,10,21],
[3,10,0,11,7,11,6,15],
[7,10,10,0,16,7,3,11],
[8,9,14,5,0,5,1,16],
[9,7,10,14,16,0,13,15],
[13,11,15,18,20,8,0,16],
[5,0,6,10,5,6,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,9,12,14,4,7],
[6,0,8,7,8,14,6,3],
[10,13,0,12,13,13,12,13],
[12,14,9,0,11,12,7,5],
[9,13,8,10,0,12,8,9],
[7,7,8,9,9,0,6,5],
[17,15,9,14,13,15,0,11],
[14,18,8,16,12,16,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,14,7,14,7,7,7],
[21,0,14,7,14,14,14,14],
[7,7,0,7,7,14,7,7],
[14,14,14,0,14,14,14,7],
[7,7,14,7,0,7,7,7],
[14,7,7,7,14,0,14,14],
[14,7,14,7,14,7,0,7],
[14,7,14,14,14,7,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,11,9,10,9,14,12],
[16,0,12,10,13,12,17,13],
[10,9,0,11,10,10,12,14],
[12,11,10,0,11,13,14,15],
[11,8,11,10,0,10,15,11],
[12,9,11,8,11,0,16,16],
[7,4,9,7,6,5,0,7],
[9,8,7,6,10,5,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,9,10,11,12,11],
[13,0,16,11,9,13,10,12],
[11,5,0,7,7,11,10,7],
[12,10,14,0,9,13,14,8],
[11,12,14,12,0,12,10,11],
[10,8,10,8,9,0,8,9],
[9,11,11,7,11,13,0,9],
[10,9,14,13,10,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,9,17,13,11,13],
[7,0,14,9,15,10,11,10],
[11,7,0,8,12,6,3,8],
[12,12,13,0,13,11,10,11],
[4,6,9,8,0,5,3,6],
[8,11,15,10,16,0,12,13],
[10,10,18,11,18,9,0,13],
[8,11,13,10,15,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,13,11,8,14,8],
[14,0,7,12,11,12,12,6],
[12,14,0,15,11,9,10,12],
[8,9,6,0,11,8,9,12],
[10,10,10,10,0,9,12,10],
[13,9,12,13,12,0,14,12],
[7,9,11,12,9,7,0,8],
[13,15,9,9,11,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,21,14,9,14,21,14],
[7,0,7,0,9,5,12,5],
[0,14,0,14,9,14,5,5],
[7,21,7,0,16,12,12,12],
[12,12,12,5,0,5,12,5],
[7,16,7,9,16,0,7,5],
[0,9,16,9,9,14,0,5],
[7,16,16,9,16,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,13,16,15,12,16],
[12,0,8,11,13,12,10,16],
[10,13,0,14,15,11,10,13],
[8,10,7,0,12,12,9,13],
[5,8,6,9,0,8,4,12],
[6,9,10,9,13,0,8,12],
[9,11,11,12,17,13,0,17],
[5,5,8,8,9,9,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,0,7,0,14,21],
[14,0,7,7,7,0,14,14],
[14,14,0,14,14,7,14,21],
[21,14,7,0,7,14,14,21],
[14,14,7,14,0,14,14,14],
[21,21,14,7,7,0,21,21],
[7,7,7,7,7,0,0,7],
[0,7,0,0,7,0,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,15,13,10,14,16],
[10,0,12,12,9,12,11,14],
[10,9,0,14,11,10,13,16],
[6,9,7,0,7,9,9,12],
[8,12,10,14,0,10,13,14],
[11,9,11,12,11,0,11,14],
[7,10,8,12,8,10,0,11],
[5,7,5,9,7,7,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,8,17,13,13,16,17],
[0,0,0,8,5,5,4,9],
[13,21,0,13,5,13,8,9],
[4,13,8,0,5,9,8,13],
[8,16,16,16,0,8,8,13],
[8,16,8,12,13,0,16,17],
[5,17,13,13,13,5,0,13],
[4,12,12,8,8,4,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,13,8,8,13,11],
[9,0,11,12,9,9,9,12],
[9,10,0,19,9,10,10,9],
[8,9,2,0,7,8,7,7],
[13,12,12,14,0,14,10,13],
[13,12,11,13,7,0,10,12],
[8,12,11,14,11,11,0,9],
[10,9,12,14,8,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,9,11,12,12,10],
[9,0,15,12,9,14,12,12],
[8,6,0,10,9,9,11,10],
[12,9,11,0,8,11,13,11],
[10,12,12,13,0,10,9,10],
[9,7,12,10,11,0,11,11],
[9,9,10,8,12,10,0,11],
[11,9,11,10,11,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,7,7,11,9,6],
[15,0,11,16,17,12,15,10],
[15,10,0,11,11,14,14,14],
[14,5,10,0,10,10,15,11],
[14,4,10,11,0,7,10,7],
[10,9,7,11,14,0,11,9],
[12,6,7,6,11,10,0,8],
[15,11,7,10,14,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,11,18,13,10,9],
[6,0,9,11,8,8,5,4],
[10,12,0,13,16,11,14,10],
[10,10,8,0,11,11,11,11],
[3,13,5,10,0,8,8,3],
[8,13,10,10,13,0,7,6],
[11,16,7,10,13,14,0,10],
[12,17,11,10,18,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,12,15,11,7,9],
[11,0,9,10,16,8,8,9],
[7,12,0,7,13,8,10,12],
[9,11,14,0,15,9,13,14],
[6,5,8,6,0,5,7,8],
[10,13,13,12,16,0,14,13],
[14,13,11,8,14,7,0,15],
[12,12,9,7,13,8,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,9,11,7,13,13],
[9,0,12,10,10,8,12,11],
[13,9,0,9,11,14,12,13],
[12,11,12,0,10,10,13,15],
[10,11,10,11,0,11,11,10],
[14,13,7,11,10,0,13,16],
[8,9,9,8,10,8,0,9],
[8,10,8,6,11,5,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,10,9,11,7,11],
[8,0,8,11,7,9,6,8],
[10,13,0,14,10,13,10,15],
[11,10,7,0,10,7,11,12],
[12,14,11,11,0,11,11,10],
[10,12,8,14,10,0,10,14],
[14,15,11,10,10,11,0,11],
[10,13,6,9,11,7,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,11,14,18,13,10,10],
[3,0,10,8,7,6,4,10],
[10,11,0,7,15,13,7,7],
[7,13,14,0,14,10,13,6],
[3,14,6,7,0,6,7,13],
[8,15,8,11,15,0,11,7],
[11,17,14,8,14,10,0,10],
[11,11,14,15,8,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,9,10,13,9,6],
[9,0,12,9,11,11,11,11],
[10,9,0,8,8,11,7,7],
[12,12,13,0,8,10,12,12],
[11,10,13,13,0,11,6,12],
[8,10,10,11,10,0,8,9],
[12,10,14,9,15,13,0,12],
[15,10,14,9,9,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,10,13,12,9,8],
[6,0,4,4,7,6,7,2],
[4,17,0,6,7,12,9,6],
[11,17,15,0,13,13,13,10],
[8,14,14,8,0,8,13,4],
[9,15,9,8,13,0,11,4],
[12,14,12,8,8,10,0,12],
[13,19,15,11,17,17,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,17,12,12,8,12],
[4,0,9,9,7,11,7,4],
[8,12,0,17,11,11,8,13],
[4,12,4,0,7,11,12,9],
[9,14,10,14,0,12,8,9],
[9,10,10,10,9,0,5,5],
[13,14,13,9,13,16,0,13],
[9,17,8,12,12,16,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,11,15,10,9,15],
[8,0,11,10,12,10,6,13],
[11,10,0,13,14,14,11,17],
[10,11,8,0,11,8,10,12],
[6,9,7,10,0,10,11,7],
[11,11,7,13,11,0,11,10],
[12,15,10,11,10,10,0,9],
[6,8,4,9,14,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,5,10,3,15,8,10],
[13,0,7,11,10,13,16,13],
[16,14,0,10,11,14,11,11],
[11,10,11,0,4,11,10,7],
[18,11,10,17,0,17,8,12],
[6,8,7,10,4,0,6,5],
[13,5,10,11,13,15,0,14],
[11,8,10,14,9,16,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,4,8,8,4,4,4],
[13,0,9,13,9,9,4,13],
[17,12,0,13,13,9,8,13],
[13,8,8,0,12,4,8,13],
[13,12,8,9,0,8,8,9],
[17,12,12,17,13,0,12,9],
[17,17,13,13,13,9,0,13],
[17,8,8,8,12,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,9,7,13,13,12],
[7,0,10,10,5,9,11,7],
[9,11,0,10,9,13,12,9],
[12,11,11,0,10,12,13,8],
[14,16,12,11,0,15,15,10],
[8,12,8,9,6,0,12,8],
[8,10,9,8,6,9,0,9],
[9,14,12,13,11,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,16,9,9,9,12],
[3,0,11,11,7,10,8,10],
[9,10,0,14,10,10,11,10],
[5,10,7,0,12,4,7,7],
[12,14,11,9,0,10,11,10],
[12,11,11,17,11,0,8,10],
[12,13,10,14,10,13,0,13],
[9,11,11,14,11,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,13,8,12,12,9],
[8,0,10,11,7,10,10,10],
[11,11,0,10,10,9,8,10],
[8,10,11,0,11,13,9,12],
[13,14,11,10,0,12,14,12],
[9,11,12,8,9,0,11,11],
[9,11,13,12,7,10,0,11],
[12,11,11,9,9,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,3,13,6,9,10],
[13,0,14,10,16,12,13,13],
[9,7,0,6,13,4,8,8],
[18,11,15,0,19,6,12,10],
[8,5,8,2,0,5,3,9],
[15,9,17,15,16,0,17,16],
[12,8,13,9,18,4,0,7],
[11,8,13,11,12,5,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,13,8,11,10,14],
[10,0,13,16,12,11,15,17],
[12,8,0,9,6,6,11,7],
[8,5,12,0,7,8,15,13],
[13,9,15,14,0,15,15,8],
[10,10,15,13,6,0,10,12],
[11,6,10,6,6,11,0,9],
[7,4,14,8,13,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,6,6,6,6,0],
[13,0,15,6,6,13,13,13],
[13,6,0,6,6,6,6,6],
[15,15,15,0,6,13,13,7],
[15,15,15,15,0,13,13,7],
[15,8,15,8,8,0,7,15],
[15,8,15,8,8,14,0,15],
[21,8,15,14,14,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,10,9,9,9,12],
[12,0,8,7,8,13,9,13],
[15,13,0,9,13,14,12,15],
[11,14,12,0,9,13,10,12],
[12,13,8,12,0,12,9,16],
[12,8,7,8,9,0,8,11],
[12,12,9,11,12,13,0,16],
[9,8,6,9,5,10,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,7,12,9,7,11],
[15,0,10,12,13,11,9,11],
[13,11,0,10,13,11,12,11],
[14,9,11,0,11,11,11,10],
[9,8,8,10,0,5,9,9],
[12,10,10,10,16,0,11,13],
[14,12,9,10,12,10,0,13],
[10,10,10,11,12,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,7,13,21,21,13],
[0,0,0,0,0,0,8,6],
[0,21,0,7,7,15,21,13],
[14,21,14,0,13,14,21,6],
[8,21,14,8,0,14,14,6],
[0,21,6,7,7,0,21,13],
[0,13,0,0,7,0,0,6],
[8,15,8,15,15,8,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,8,8,8,10,10],
[10,0,10,8,9,11,10,8],
[9,11,0,6,9,8,4,10],
[13,13,15,0,11,8,7,12],
[13,12,12,10,0,11,13,13],
[13,10,13,13,10,0,12,12],
[11,11,17,14,8,9,0,14],
[11,13,11,9,8,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,9,10,11,12,10],
[13,0,15,14,8,12,14,7],
[13,6,0,7,10,10,12,7],
[12,7,14,0,6,10,13,6],
[11,13,11,15,0,10,12,11],
[10,9,11,11,11,0,9,8],
[9,7,9,8,9,12,0,5],
[11,14,14,15,10,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,4,4,9,8,9,11],
[10,0,0,5,9,8,10,7],
[17,21,0,12,12,16,17,7],
[17,16,9,0,12,16,17,12],
[12,12,9,9,0,9,14,12],
[13,13,5,5,12,0,13,8],
[12,11,4,4,7,8,0,7],
[10,14,14,9,9,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,15,11,7,13,10,14],
[14,0,14,10,13,14,11,15],
[6,7,0,5,7,5,6,5],
[10,11,16,0,9,13,12,13],
[14,8,14,12,0,10,11,11],
[8,7,16,8,11,0,7,7],
[11,10,15,9,10,14,0,11],
[7,6,16,8,10,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,10,7,10,9,10],
[11,0,15,9,12,11,12,15],
[11,6,0,10,6,3,9,10],
[11,12,11,0,11,9,12,11],
[14,9,15,10,0,12,12,12],
[11,10,18,12,9,0,9,9],
[12,9,12,9,9,12,0,9],
[11,6,11,10,9,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,12,10,9,9,13],
[14,0,11,13,15,15,15,9],
[12,10,0,11,6,14,10,11],
[9,8,10,0,11,14,10,10],
[11,6,15,10,0,14,4,12],
[12,6,7,7,7,0,10,9],
[12,6,11,11,17,11,0,10],
[8,12,10,11,9,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,7,12,12,13,11,11],
[8,0,6,10,9,6,12,8],
[14,15,0,10,12,13,13,12],
[9,11,11,0,10,8,17,10],
[9,12,9,11,0,12,14,11],
[8,15,8,13,9,0,15,11],
[10,9,8,4,7,6,0,8],
[10,13,9,11,10,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,16,13,11,11,11],
[14,0,11,17,13,18,11,9],
[13,10,0,10,9,14,19,3],
[5,4,11,0,8,11,11,11],
[8,8,12,13,0,8,12,5],
[10,3,7,10,13,0,12,7],
[10,10,2,10,9,9,0,5],
[10,12,18,10,16,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,5,6,5,3,3],
[12,0,6,12,12,6,7,6],
[15,15,0,13,10,9,7,15],
[16,9,8,0,4,8,13,10],
[15,9,11,17,0,9,11,13],
[16,15,12,13,12,0,9,14],
[18,14,14,8,10,12,0,14],
[18,15,6,11,8,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,8,7,4,6,3],
[13,0,11,10,10,11,10,11],
[14,10,0,16,8,11,15,7],
[13,11,5,0,9,14,10,9],
[14,11,13,12,0,15,12,9],
[17,10,10,7,6,0,10,8],
[15,11,6,11,9,11,0,6],
[18,10,14,12,12,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,16,11,12,9,11,13],
[13,0,14,13,8,12,14,14],
[5,7,0,7,7,9,10,13],
[10,8,14,0,9,7,12,14],
[9,13,14,12,0,12,11,14],
[12,9,12,14,9,0,12,15],
[10,7,11,9,10,9,0,11],
[8,7,8,7,7,6,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,3,0,3,10,0,10],
[18,0,11,11,14,10,18,17],
[18,10,0,7,10,17,10,21],
[21,10,14,0,14,13,17,17],
[18,7,11,7,0,10,14,17],
[11,11,4,8,11,0,11,14],
[21,3,11,4,7,10,0,17],
[11,4,0,4,4,7,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,9,13,14,10,14],
[11,0,9,7,8,11,7,9],
[11,12,0,10,10,11,11,10],
[12,14,11,0,10,13,11,12],
[8,13,11,11,0,10,10,11],
[7,10,10,8,11,0,5,10],
[11,14,10,10,11,16,0,13],
[7,12,11,9,10,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,11,9,11,12,10],
[11,0,12,12,9,10,10,12],
[14,9,0,9,9,10,9,11],
[10,9,12,0,10,11,11,10],
[12,12,12,11,0,9,14,13],
[10,11,11,10,12,0,13,12],
[9,11,12,10,7,8,0,11],
[11,9,10,11,8,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,10,7,7,8,8],
[13,0,12,7,11,14,12,9],
[11,9,0,11,8,11,9,10],
[11,14,10,0,11,10,10,11],
[14,10,13,10,0,12,13,13],
[14,7,10,11,9,0,7,8],
[13,9,12,11,8,14,0,9],
[13,12,11,10,8,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,9,15,11,10,11,11],
[6,0,8,13,9,9,5,7],
[12,13,0,16,13,16,10,11],
[6,8,5,0,7,6,3,5],
[10,12,8,14,0,13,8,10],
[11,12,5,15,8,0,7,12],
[10,16,11,18,13,14,0,13],
[10,14,10,16,11,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,9,9,12,7,7],
[11,0,10,5,13,10,11,9],
[12,11,0,11,10,12,11,7],
[12,16,10,0,11,13,15,11],
[12,8,11,10,0,12,13,8],
[9,11,9,8,9,0,13,10],
[14,10,10,6,8,8,0,8],
[14,12,14,10,13,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,14,9,14,15,16],
[5,0,8,7,8,7,11,10],
[8,13,0,12,11,12,10,10],
[7,14,9,0,9,11,14,14],
[12,13,10,12,0,11,12,16],
[7,14,9,10,10,0,11,14],
[6,10,11,7,9,10,0,11],
[5,11,11,7,5,7,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,13,11,7,10,12],
[14,0,8,12,14,9,10,11],
[14,13,0,17,13,9,11,10],
[8,9,4,0,10,6,7,8],
[10,7,8,11,0,8,5,10],
[14,12,12,15,13,0,11,10],
[11,11,10,14,16,10,0,11],
[9,10,11,13,11,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,8,8,13,10,5],
[14,0,10,15,14,13,12,12],
[9,11,0,11,14,10,9,11],
[13,6,10,0,7,10,3,8],
[13,7,7,14,0,11,12,8],
[8,8,11,11,10,0,10,8],
[11,9,12,18,9,11,0,8],
[16,9,10,13,13,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,14,14,12,11,12],
[12,0,11,14,8,14,11,10],
[10,10,0,13,11,12,8,12],
[7,7,8,0,7,9,10,8],
[7,13,10,14,0,14,11,15],
[9,7,9,12,7,0,8,15],
[10,10,13,11,10,13,0,13],
[9,11,9,13,6,6,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,9,10,12,13,10],
[9,0,7,8,7,9,9,6],
[11,14,0,11,11,11,11,9],
[12,13,10,0,9,11,12,9],
[11,14,10,12,0,12,13,11],
[9,12,10,10,9,0,10,10],
[8,12,10,9,8,11,0,9],
[11,15,12,12,10,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,18,14,14,14,14],
[14,0,13,14,18,10,10,10],
[10,8,0,14,14,10,14,10],
[3,7,7,0,10,10,10,10],
[7,3,7,11,0,13,10,7],
[7,11,11,11,8,0,11,11],
[7,11,7,11,11,10,0,7],
[7,11,11,11,14,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,13,3,13,3,14,14],
[17,0,16,10,13,6,16,20],
[8,5,0,5,9,1,5,10],
[18,11,16,0,10,13,11,11],
[8,8,12,11,0,4,12,13],
[18,15,20,8,17,0,18,18],
[7,5,16,10,9,3,0,9],
[7,1,11,10,8,3,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,2,8,8,9,6],
[10,0,10,3,9,7,15,14],
[13,11,0,6,12,13,16,11],
[19,18,15,0,10,15,17,13],
[13,12,9,11,0,14,11,13],
[13,14,8,6,7,0,10,9],
[12,6,5,4,10,11,0,5],
[15,7,10,8,8,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,14,10,7,9,9,9],
[14,0,11,13,11,9,10,12],
[7,10,0,8,7,7,9,5],
[11,8,13,0,12,8,10,9],
[14,10,14,9,0,11,10,10],
[12,12,14,13,10,0,13,12],
[12,11,12,11,11,8,0,12],
[12,9,16,12,11,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,12,9,17,9,12],
[12,0,9,12,14,19,12,19],
[7,12,0,10,12,19,7,12],
[9,9,11,0,9,9,4,12],
[12,7,9,12,0,19,9,11],
[4,2,2,12,2,0,2,3],
[12,9,14,17,12,19,0,15],
[9,2,9,9,10,18,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,13,13,14,14,10],
[7,0,7,8,11,9,8,9],
[11,14,0,9,10,12,14,12],
[8,13,12,0,9,12,12,12],
[8,10,11,12,0,12,9,9],
[7,12,9,9,9,0,11,8],
[7,13,7,9,12,10,0,10],
[11,12,9,9,12,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,18,8,18,18,11],
[8,0,5,8,3,9,5,8],
[8,16,0,12,11,16,16,12],
[3,13,9,0,8,6,10,6],
[13,18,10,13,0,15,15,15],
[3,12,5,15,6,0,10,3],
[3,16,5,11,6,11,0,14],
[10,13,9,15,6,18,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,10,15,11,10,12],
[13,0,8,11,18,12,13,14],
[10,13,0,14,15,18,15,13],
[11,10,7,0,15,10,17,15],
[6,3,6,6,0,9,11,15],
[10,9,3,11,12,0,15,13],
[11,8,6,4,10,6,0,6],
[9,7,8,6,6,8,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,9,10,13,7,14],
[12,0,12,9,7,9,7,14],
[10,9,0,5,8,7,9,7],
[12,12,16,0,6,9,12,16],
[11,14,13,15,0,9,13,16],
[8,12,14,12,12,0,12,14],
[14,14,12,9,8,9,0,14],
[7,7,14,5,5,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,13,11,15,14,12],
[9,0,12,14,7,14,12,17],
[11,9,0,9,9,14,12,11],
[8,7,12,0,9,10,12,11],
[10,14,12,12,0,14,13,16],
[6,7,7,11,7,0,10,10],
[7,9,9,9,8,11,0,12],
[9,4,10,10,5,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,7,11,12,8,16],
[9,0,9,4,9,9,5,13],
[5,12,0,5,9,5,10,12],
[14,17,16,0,12,9,8,16],
[10,12,12,9,0,5,5,16],
[9,12,16,12,16,0,13,16],
[13,16,11,13,16,8,0,11],
[5,8,9,5,5,5,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,14,9,11,14,16],
[8,0,12,13,10,6,15,15],
[4,9,0,8,8,3,9,10],
[7,8,13,0,12,5,14,16],
[12,11,13,9,0,10,10,13],
[10,15,18,16,11,0,14,18],
[7,6,12,7,11,7,0,12],
[5,6,11,5,8,3,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,7,11,10,12,9],
[12,0,11,7,12,7,11,8],
[10,10,0,11,8,10,6,12],
[14,14,10,0,11,10,10,10],
[10,9,13,10,0,7,10,11],
[11,14,11,11,14,0,12,7],
[9,10,15,11,11,9,0,13],
[12,13,9,11,10,14,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,12,10,11,12,13],
[13,0,12,13,14,15,7,15],
[11,9,0,8,10,10,12,10],
[9,8,13,0,10,11,8,8],
[11,7,11,11,0,8,9,10],
[10,6,11,10,13,0,9,14],
[9,14,9,13,12,12,0,17],
[8,6,11,13,11,7,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,0,6,13,13,0],
[8,0,8,8,8,13,8,8],
[7,13,0,7,6,13,13,0],
[21,13,14,0,14,13,21,8],
[15,13,15,7,0,13,15,15],
[8,8,8,8,8,0,8,8],
[8,13,8,0,6,13,0,0],
[21,13,21,13,6,13,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,10,10,5,5,10,9],
[16,0,14,10,16,10,14,10],
[11,7,0,10,10,10,11,13],
[11,11,11,0,12,10,14,9],
[16,5,11,9,0,8,8,11],
[16,11,11,11,13,0,11,7],
[11,7,10,7,13,10,0,11],
[12,11,8,12,10,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,13,15,13,14,11],
[11,0,11,10,14,7,11,11],
[8,10,0,12,12,9,8,11],
[8,11,9,0,15,6,11,11],
[6,7,9,6,0,6,10,11],
[8,14,12,15,15,0,10,13],
[7,10,13,10,11,11,0,11],
[10,10,10,10,10,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,13,12,13,8,15],
[5,0,7,9,10,8,8,9],
[11,14,0,10,10,9,12,13],
[8,12,11,0,11,9,9,12],
[9,11,11,10,0,10,9,10],
[8,13,12,12,11,0,9,12],
[13,13,9,12,12,12,0,11],
[6,12,8,9,11,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,13,8,12,10,11],
[11,0,12,9,11,10,10,8],
[6,9,0,10,8,9,9,6],
[8,12,11,0,9,11,12,11],
[13,10,13,12,0,13,10,11],
[9,11,12,10,8,0,9,4],
[11,11,12,9,11,12,0,6],
[10,13,15,10,10,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,8,12,8,11,11],
[14,0,12,8,16,14,13,13],
[13,9,0,9,14,12,13,12],
[13,13,12,0,15,10,13,13],
[9,5,7,6,0,5,5,10],
[13,7,9,11,16,0,12,12],
[10,8,8,8,16,9,0,10],
[10,8,9,8,11,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,15,6,12,10,10],
[12,0,7,9,4,6,10,8],
[14,14,0,15,11,15,12,10],
[6,12,6,0,6,6,8,9],
[15,17,10,15,0,13,15,7],
[9,15,6,15,8,0,10,9],
[11,11,9,13,6,11,0,11],
[11,13,11,12,14,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,9,10,13,13,16],
[10,0,10,8,8,7,12,10],
[10,11,0,11,9,7,15,14],
[12,13,10,0,14,13,13,16],
[11,13,12,7,0,8,12,13],
[8,14,14,8,13,0,15,13],
[8,9,6,8,9,6,0,11],
[5,11,7,5,8,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,8,12,11,11,12],
[11,0,13,10,12,11,16,13],
[10,8,0,11,8,11,10,9],
[13,11,10,0,12,12,10,13],
[9,9,13,9,0,12,14,16],
[10,10,10,9,9,0,11,11],
[10,5,11,11,7,10,0,10],
[9,8,12,8,5,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,6,9,10,13,12,8],
[7,0,7,6,10,10,7,9],
[15,14,0,10,12,13,15,11],
[12,15,11,0,8,12,10,10],
[11,11,9,13,0,14,12,10],
[8,11,8,9,7,0,8,7],
[9,14,6,11,9,13,0,12],
[13,12,10,11,11,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,6,4,9,10,14],
[7,0,12,2,6,12,12,2],
[12,9,0,7,4,7,7,7],
[15,19,14,0,14,10,15,15],
[17,15,17,7,0,12,12,17],
[12,9,14,11,9,0,7,7],
[11,9,14,6,9,14,0,11],
[7,19,14,6,4,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,11,7,12,11,11],
[12,0,9,9,8,12,9,9],
[10,12,0,11,12,13,9,9],
[10,12,10,0,6,9,7,9],
[14,13,9,15,0,12,10,12],
[9,9,8,12,9,0,9,11],
[10,12,12,14,11,12,0,12],
[10,12,12,12,9,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,16,8,9,12,12],
[11,0,14,15,6,11,13,12],
[13,7,0,13,6,8,12,12],
[5,6,8,0,6,7,8,7],
[13,15,15,15,0,10,16,15],
[12,10,13,14,11,0,14,14],
[9,8,9,13,5,7,0,7],
[9,9,9,14,6,7,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,12,10,13,15,16],
[10,0,14,12,12,10,10,14],
[8,7,0,11,13,8,11,10],
[9,9,10,0,10,9,10,14],
[11,9,8,11,0,11,10,14],
[8,11,13,12,10,0,10,13],
[6,11,10,11,11,11,0,11],
[5,7,11,7,7,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,5,7,12,6,15],
[13,0,14,10,14,15,14,16],
[13,7,0,9,15,15,9,17],
[16,11,12,0,13,15,8,15],
[14,7,6,8,0,12,10,12],
[9,6,6,6,9,0,7,7],
[15,7,12,13,11,14,0,15],
[6,5,4,6,9,14,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,9,19,18,7,11],
[9,0,9,15,19,16,11,11],
[12,12,0,12,19,13,9,11],
[12,6,9,0,19,13,10,16],
[2,2,2,2,0,13,3,13],
[3,5,8,8,8,0,5,13],
[14,10,12,11,18,16,0,15],
[10,10,10,5,8,8,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,10,8,11,8,8],
[12,0,8,12,12,11,8,11],
[13,13,0,13,10,13,10,11],
[11,9,8,0,9,9,10,11],
[13,9,11,12,0,13,13,11],
[10,10,8,12,8,0,5,10],
[13,13,11,11,8,16,0,16],
[13,10,10,10,10,11,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,14,10,11,8,11,9],
[15,0,15,13,13,9,10,7],
[7,6,0,8,11,4,10,8],
[11,8,13,0,13,7,15,11],
[10,8,10,8,0,7,10,4],
[13,12,17,14,14,0,10,8],
[10,11,11,6,11,11,0,11],
[12,14,13,10,17,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,8,13,14,13,12],
[8,0,8,5,5,8,9,11],
[8,13,0,8,11,11,12,12],
[13,16,13,0,10,15,14,13],
[8,16,10,11,0,15,15,14],
[7,13,10,6,6,0,10,9],
[8,12,9,7,6,11,0,11],
[9,10,9,8,7,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,6,3,9,9,10,5],
[13,0,11,12,11,11,14,6],
[15,10,0,15,12,18,20,12],
[18,9,6,0,11,12,12,4],
[12,10,9,10,0,19,16,11],
[12,10,3,9,2,0,15,4],
[11,7,1,9,5,6,0,3],
[16,15,9,17,10,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,7,4,13,14,11],
[7,0,15,13,10,15,18,8],
[7,6,0,12,6,14,10,8],
[14,8,9,0,9,10,11,6],
[17,11,15,12,0,14,12,10],
[8,6,7,11,7,0,9,5],
[7,3,11,10,9,12,0,4],
[10,13,13,15,11,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,9,10,10,7,9,7],
[15,0,11,12,12,8,8,8],
[12,10,0,10,12,9,11,13],
[11,9,11,0,13,12,8,11],
[11,9,9,8,0,5,10,7],
[14,13,12,9,16,0,10,12],
[12,13,10,13,11,11,0,9],
[14,13,8,10,14,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,8,4,14,14,11,14],
[3,0,11,3,11,7,4,14],
[13,10,0,7,14,17,14,17],
[17,18,14,0,18,17,10,17],
[7,10,7,3,0,10,3,11],
[7,14,4,4,11,0,8,11],
[10,17,7,11,18,13,0,18],
[7,7,4,4,10,10,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,13,16,12,14,16],
[12,0,6,10,12,11,12,7],
[9,15,0,10,18,12,15,7],
[8,11,11,0,15,8,11,7],
[5,9,3,6,0,8,11,3],
[9,10,9,13,13,0,18,7],
[7,9,6,10,10,3,0,7],
[5,14,14,14,18,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,12,11,10,9,9],
[9,0,11,9,6,10,10,10],
[12,10,0,9,8,9,10,12],
[9,12,12,0,9,13,11,13],
[10,15,13,12,0,11,13,14],
[11,11,12,8,10,0,10,11],
[12,11,11,10,8,11,0,13],
[12,11,9,8,7,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,9,10,10,12,12],
[9,0,11,9,7,9,6,13],
[9,10,0,6,9,7,6,7],
[12,12,15,0,9,14,11,14],
[11,14,12,12,0,14,8,11],
[11,12,14,7,7,0,11,10],
[9,15,15,10,13,10,0,14],
[9,8,14,7,10,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,9,8,13,7,9],
[10,0,8,11,11,11,4,11],
[11,13,0,9,10,13,8,8],
[12,10,12,0,7,12,11,11],
[13,10,11,14,0,15,8,13],
[8,10,8,9,6,0,9,10],
[14,17,13,10,13,12,0,11],
[12,10,13,10,8,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,12,12,10,10,11],
[10,0,10,10,9,10,8,9],
[10,11,0,9,8,11,8,7],
[9,11,12,0,8,10,11,7],
[9,12,13,13,0,11,13,11],
[11,11,10,11,10,0,8,10],
[11,13,13,10,8,13,0,8],
[10,12,14,14,10,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,8,14,8,10,12],
[8,0,8,10,8,13,10,8],
[7,13,0,9,8,13,12,12],
[13,11,12,0,13,17,12,10],
[7,13,13,8,0,12,15,11],
[13,8,8,4,9,0,9,6],
[11,11,9,9,6,12,0,4],
[9,13,9,11,10,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,10,11,10,13,8],
[10,0,10,8,7,12,13,14],
[6,11,0,5,11,9,9,6],
[11,13,16,0,10,11,12,11],
[10,14,10,11,0,14,15,10],
[11,9,12,10,7,0,8,12],
[8,8,12,9,6,13,0,11],
[13,7,15,10,11,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,8,9,9,10,6],
[9,0,9,5,7,10,7,5],
[10,12,0,8,11,10,13,9],
[13,16,13,0,13,12,11,8],
[12,14,10,8,0,12,8,11],
[12,11,11,9,9,0,9,7],
[11,14,8,10,13,12,0,7],
[15,16,12,13,10,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,4,10,6,4,5,7],
[16,0,10,13,13,10,8,12],
[17,11,0,14,11,9,6,9],
[11,8,7,0,9,7,7,10],
[15,8,10,12,0,7,6,13],
[17,11,12,14,14,0,11,10],
[16,13,15,14,15,10,0,15],
[14,9,12,11,8,11,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,21,12,16,16,16,12],
[15,0,21,12,10,21,21,16],
[0,0,0,0,0,4,0,0],
[9,9,21,0,9,15,9,21],
[5,11,21,12,0,15,11,17],
[5,0,17,6,6,0,5,6],
[5,0,21,12,10,16,0,12],
[9,5,21,0,4,15,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,15,8,10,5,13],
[7,0,8,10,10,7,6,7],
[10,13,0,12,11,12,8,12],
[6,11,9,0,6,8,3,10],
[13,11,10,15,0,11,11,11],
[11,14,9,13,10,0,5,8],
[16,15,13,18,10,16,0,15],
[8,14,9,11,10,13,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,12,14,11,7,11],
[9,0,11,10,11,10,9,8],
[5,10,0,11,11,10,8,9],
[9,11,10,0,11,11,13,10],
[7,10,10,10,0,8,8,6],
[10,11,11,10,13,0,9,11],
[14,12,13,8,13,12,0,10],
[10,13,12,11,15,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,10,6,10,12,4,10],
[17,0,10,6,13,18,21,13],
[11,11,0,8,6,11,11,11],
[15,15,13,0,10,15,15,15],
[11,8,15,11,0,11,11,18],
[9,3,10,6,10,0,3,13],
[17,0,10,6,10,18,0,13],
[11,8,10,6,3,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,9,9,11,11,10],
[10,0,11,11,14,15,13,14],
[11,10,0,9,10,11,12,14],
[12,10,12,0,9,13,9,14],
[12,7,11,12,0,11,9,14],
[10,6,10,8,10,0,10,9],
[10,8,9,12,12,11,0,12],
[11,7,7,7,7,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,11,11,14,12,12],
[9,0,9,9,13,13,9,13],
[13,12,0,13,9,12,10,12],
[10,12,8,0,10,11,12,9],
[10,8,12,11,0,11,8,10],
[7,8,9,10,10,0,10,9],
[9,12,11,9,13,11,0,13],
[9,8,9,12,11,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,3,8,8,7,3],
[14,0,8,5,8,13,10,3],
[10,13,0,10,8,8,6,13],
[18,16,11,0,12,13,7,8],
[13,13,13,9,0,10,5,5],
[13,8,13,8,11,0,10,8],
[14,11,15,14,16,11,0,7],
[18,18,8,13,16,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,11,11,11,8,8],
[10,0,13,11,10,14,7,10],
[13,8,0,10,11,11,6,10],
[10,10,11,0,11,11,7,9],
[10,11,10,10,0,9,8,10],
[10,7,10,10,12,0,4,12],
[13,14,15,14,13,17,0,10],
[13,11,11,12,11,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,13,10,7,8,10],
[13,0,4,9,5,6,11,9],
[12,17,0,12,10,10,12,13],
[8,12,9,0,10,11,12,14],
[11,16,11,11,0,9,9,13],
[14,15,11,10,12,0,12,14],
[13,10,9,9,12,9,0,13],
[11,12,8,7,8,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,14,15,10,17,16],
[5,0,10,13,9,7,7,8],
[7,11,0,9,13,10,8,10],
[7,8,12,0,14,9,10,12],
[6,12,8,7,0,11,6,13],
[11,14,11,12,10,0,11,14],
[4,14,13,11,15,10,0,12],
[5,13,11,9,8,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,10,14,16,11,10],
[7,0,9,9,13,13,8,9],
[9,12,0,6,8,10,9,15],
[11,12,15,0,8,12,12,10],
[7,8,13,13,0,13,13,10],
[5,8,11,9,8,0,10,8],
[10,13,12,9,8,11,0,10],
[11,12,6,11,11,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,4,4,4,14,13],
[11,0,7,3,11,7,21,9],
[7,14,0,11,11,11,17,13],
[17,18,10,0,21,17,21,9],
[17,10,10,0,0,9,17,9],
[17,14,10,4,12,0,18,9],
[7,0,4,0,4,3,0,3],
[8,12,8,12,12,12,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,6,9,11,16,9],
[9,0,11,11,11,13,20,11],
[9,10,0,8,11,12,13,8],
[15,10,13,0,15,14,11,8],
[12,10,10,6,0,11,13,8],
[10,8,9,7,10,0,11,7],
[5,1,8,10,8,10,0,6],
[12,10,13,13,13,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,17,11,12,14,10],
[9,0,12,14,16,13,11,8],
[9,9,0,10,8,10,13,9],
[4,7,11,0,9,4,16,9],
[10,5,13,12,0,14,13,9],
[9,8,11,17,7,0,17,9],
[7,10,8,5,8,4,0,11],
[11,13,12,12,12,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,0,0,7,7,7,0],
[21,0,7,13,13,13,13,13],
[21,14,0,14,21,13,13,6],
[21,8,7,0,21,13,13,7],
[14,8,0,0,0,7,13,0],
[14,8,8,8,14,0,6,0],
[14,8,8,8,8,15,0,8],
[21,8,15,14,21,21,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,7,10,6,12,7],
[14,0,10,13,12,7,14,11],
[14,11,0,12,12,13,12,10],
[14,8,9,0,8,9,10,12],
[11,9,9,13,0,6,9,11],
[15,14,8,12,15,0,18,11],
[9,7,9,11,12,3,0,8],
[14,10,11,9,10,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,8,10,11,7,11,12],
[6,0,6,9,6,5,8,7],
[13,15,0,14,12,13,10,8],
[11,12,7,0,10,7,6,7],
[10,15,9,11,0,6,9,5],
[14,16,8,14,15,0,14,9],
[10,13,11,15,12,7,0,7],
[9,14,13,14,16,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,13,13,10,10,15],
[9,0,7,7,15,7,10,15],
[8,14,0,7,12,7,8,12],
[8,14,14,0,11,11,8,12],
[8,6,9,10,0,6,9,15],
[11,14,14,10,15,0,11,18],
[11,11,13,13,12,10,0,12],
[6,6,9,9,6,3,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,14,13,13,9,14],
[7,0,10,10,9,8,10,15],
[8,11,0,8,9,10,9,14],
[7,11,13,0,11,10,10,13],
[8,12,12,10,0,11,11,12],
[8,13,11,11,10,0,10,14],
[12,11,12,11,10,11,0,11],
[7,6,7,8,9,7,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,16,10,14,14,14,16],
[2,0,6,4,10,14,10,10],
[5,15,0,9,6,8,8,17],
[11,17,12,0,16,10,12,15],
[7,11,15,5,0,6,5,15],
[7,7,13,11,15,0,13,13],
[7,11,13,9,16,8,0,15],
[5,11,4,6,6,8,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,9,12,12,14,16],
[11,0,8,11,15,13,15,14],
[11,13,0,8,12,13,17,13],
[12,10,13,0,14,16,14,11],
[9,6,9,7,0,10,10,12],
[9,8,8,5,11,0,10,9],
[7,6,4,7,11,11,0,10],
[5,7,8,10,9,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,0,15,7,0,0,0],
[14,0,14,14,6,14,14,8],
[21,7,0,15,13,0,6,7],
[6,7,6,0,13,6,6,0],
[14,15,8,8,0,8,14,8],
[21,7,21,15,13,0,6,7],
[21,7,15,15,7,15,0,15],
[21,13,14,21,13,14,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,15,10,9,8,6],
[8,0,6,9,10,9,8,8],
[11,15,0,7,15,11,13,11],
[6,12,14,0,12,13,12,10],
[11,11,6,9,0,3,6,2],
[12,12,10,8,18,0,10,10],
[13,13,8,9,15,11,0,13],
[15,13,10,11,19,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,19,12,5,12,6,11],
[10,0,18,11,9,12,7,13],
[2,3,0,4,4,3,3,5],
[9,10,17,0,11,6,9,12],
[16,12,17,10,0,10,6,14],
[9,9,18,15,11,0,11,12],
[15,14,18,12,15,10,0,10],
[10,8,16,9,7,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,8,12,13,13,7],
[9,0,10,12,9,14,11,8],
[13,11,0,9,10,9,11,9],
[13,9,12,0,13,15,11,12],
[9,12,11,8,0,11,14,8],
[8,7,12,6,10,0,13,11],
[8,10,10,10,7,8,0,9],
[14,13,12,9,13,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,4,10,9,4,13],
[10,0,16,8,16,8,10,17],
[10,5,0,8,16,4,6,13],
[17,13,13,0,13,11,8,15],
[11,5,5,8,0,9,0,9],
[12,13,17,10,12,0,12,15],
[17,11,15,13,21,9,0,15],
[8,4,8,6,12,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,9,7,9,9,8],
[11,0,12,15,10,13,13,13],
[14,9,0,12,9,11,14,13],
[12,6,9,0,11,7,8,8],
[14,11,12,10,0,12,12,11],
[12,8,10,14,9,0,8,9],
[12,8,7,13,9,13,0,8],
[13,8,8,13,10,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,7,11,10,13,10],
[7,0,8,6,3,8,6,7],
[9,13,0,6,6,7,8,9],
[14,15,15,0,11,11,10,10],
[10,18,15,10,0,12,8,13],
[11,13,14,10,9,0,11,9],
[8,15,13,11,13,10,0,13],
[11,14,12,11,8,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,6,9,8,13,13],
[8,0,8,6,9,8,8,13],
[8,13,0,6,10,7,11,13],
[15,15,15,0,9,8,10,11],
[12,12,11,12,0,10,10,13],
[13,13,14,13,11,0,10,12],
[8,13,10,11,11,11,0,12],
[8,8,8,10,8,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,15,14,11,14,14],
[11,0,12,17,15,7,13,13],
[9,9,0,15,12,10,13,14],
[6,4,6,0,9,9,6,12],
[7,6,9,12,0,7,12,9],
[10,14,11,12,14,0,11,14],
[7,8,8,15,9,10,0,10],
[7,8,7,9,12,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,4,5,5,9,5],
[12,0,13,8,4,9,9,5],
[12,8,0,12,8,4,13,13],
[17,13,9,0,9,9,5,5],
[16,17,13,12,0,13,13,9],
[16,12,17,12,8,0,17,13],
[12,12,8,16,8,4,0,8],
[16,16,8,16,12,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,8,6,9,6,8],
[10,0,8,10,4,9,6,8],
[13,13,0,13,11,13,9,9],
[13,11,8,0,1,5,9,10],
[15,17,10,20,0,15,10,10],
[12,12,8,16,6,0,14,12],
[15,15,12,12,11,7,0,14],
[13,13,12,11,11,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,9,12,10,15,9],
[10,0,6,4,12,10,7,3],
[8,15,0,3,9,9,8,4],
[12,17,18,0,13,11,13,8],
[9,9,12,8,0,16,9,9],
[11,11,12,10,5,0,12,6],
[6,14,13,8,12,9,0,11],
[12,18,17,13,12,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,10,7,8,7,8],
[10,0,11,13,12,11,10,12],
[13,10,0,12,6,8,13,9],
[11,8,9,0,4,6,13,6],
[14,9,15,17,0,13,16,14],
[13,10,13,15,8,0,16,12],
[14,11,8,8,5,5,0,7],
[13,9,12,15,7,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,8,7,9,6,9],
[14,0,11,14,15,12,9,13],
[16,10,0,11,12,10,7,12],
[13,7,10,0,12,13,9,14],
[14,6,9,9,0,10,11,13],
[12,9,11,8,11,0,10,10],
[15,12,14,12,10,11,0,14],
[12,8,9,7,8,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,17,21,4,17,10],
[7,0,11,7,7,11,17,4],
[10,10,0,13,10,6,6,6],
[4,14,8,0,10,8,10,14],
[0,14,11,11,0,4,10,10],
[17,10,15,13,17,0,13,10],
[4,4,15,11,11,8,0,8],
[11,17,15,7,11,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,8,12,5,17,11,17],
[7,0,5,6,6,7,10,8],
[13,16,0,9,12,13,15,14],
[9,15,12,0,7,5,12,12],
[16,15,9,14,0,16,12,17],
[4,14,8,16,5,0,8,12],
[10,11,6,9,9,13,0,11],
[4,13,7,9,4,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,7,11,13,10,12],
[5,0,8,5,7,7,7,6],
[9,13,0,10,8,15,11,9],
[14,16,11,0,15,13,12,10],
[10,14,13,6,0,11,9,8],
[8,14,6,8,10,0,9,12],
[11,14,10,9,12,12,0,10],
[9,15,12,11,13,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,8,8,10,9,8],
[11,0,10,11,8,9,10,9],
[13,11,0,11,8,11,9,13],
[13,10,10,0,5,10,9,9],
[13,13,13,16,0,13,9,15],
[11,12,10,11,8,0,11,12],
[12,11,12,12,12,10,0,10],
[13,12,8,12,6,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,17,12,12,21,17,12],
[14,0,14,9,14,14,14,5],
[4,7,0,9,0,11,17,7],
[9,12,12,0,5,16,12,12],
[9,7,21,16,0,16,17,12],
[0,7,10,5,5,0,17,12],
[4,7,4,9,4,4,0,7],
[9,16,14,9,9,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,4,4,10,11,11,10],
[17,0,4,8,17,15,11,10],
[17,17,0,8,13,17,11,17],
[17,13,13,0,13,17,7,17],
[11,4,8,8,0,11,15,4],
[10,6,4,4,10,0,4,10],
[10,10,10,14,6,17,0,10],
[11,11,4,4,17,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,8,13,12,14,11],
[12,0,10,10,14,14,17,13],
[9,11,0,9,16,10,15,10],
[13,11,12,0,13,9,13,8],
[8,7,5,8,0,11,9,9],
[9,7,11,12,10,0,10,5],
[7,4,6,8,12,11,0,9],
[10,8,11,13,12,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,5,9,7,9,6],
[12,0,2,6,6,8,3,8],
[15,19,0,11,11,6,8,17],
[16,15,10,0,18,16,18,16],
[12,15,10,3,0,12,11,9],
[14,13,15,5,9,0,9,18],
[12,18,13,3,10,12,0,9],
[15,13,4,5,12,3,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,10,10,9,15,13],
[9,0,12,13,10,13,16,16],
[13,9,0,8,11,9,13,11],
[11,8,13,0,11,10,16,14],
[11,11,10,10,0,10,15,16],
[12,8,12,11,11,0,15,14],
[6,5,8,5,6,6,0,7],
[8,5,10,7,5,7,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,13,7,7,8,10],
[12,0,12,17,12,6,8,15],
[14,9,0,19,13,12,11,17],
[8,4,2,0,3,4,4,5],
[14,9,8,18,0,7,8,11],
[14,15,9,17,14,0,11,11],
[13,13,10,17,13,10,0,14],
[11,6,4,16,10,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,10,11,12,13,9],
[13,0,13,10,12,13,12,11],
[11,8,0,6,12,10,10,10],
[11,11,15,0,13,13,13,10],
[10,9,9,8,0,11,11,11],
[9,8,11,8,10,0,12,8],
[8,9,11,8,10,9,0,8],
[12,10,11,11,10,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,6,17,5,8,11,11],
[10,0,12,13,6,12,11,13],
[15,9,0,17,10,10,10,12],
[4,8,4,0,1,4,7,5],
[16,15,11,20,0,11,13,10],
[13,9,11,17,10,0,7,11],
[10,10,11,14,8,14,0,11],
[10,8,9,16,11,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,10,9,9,8,7],
[13,0,10,12,15,10,12,11],
[11,11,0,11,13,9,11,11],
[11,9,10,0,15,11,13,8],
[12,6,8,6,0,8,9,5],
[12,11,12,10,13,0,12,8],
[13,9,10,8,12,9,0,6],
[14,10,10,13,16,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,10,9,11,13,9],
[10,0,9,12,12,13,12,7],
[14,12,0,17,12,9,15,9],
[11,9,4,0,8,9,9,7],
[12,9,9,13,0,15,13,11],
[10,8,12,12,6,0,13,8],
[8,9,6,12,8,8,0,6],
[12,14,12,14,10,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,4,12,7,7,8],
[5,0,9,9,8,6,2,10],
[9,12,0,4,9,6,9,4],
[17,12,17,0,12,14,14,8],
[9,13,12,9,0,6,9,10],
[14,15,15,7,15,0,10,11],
[14,19,12,7,12,11,0,11],
[13,11,17,13,11,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,13,14,13,15,17],
[9,0,9,9,12,11,11,16],
[11,12,0,11,14,10,15,13],
[8,12,10,0,12,14,10,14],
[7,9,7,9,0,9,7,13],
[8,10,11,7,12,0,13,11],
[6,10,6,11,14,8,0,13],
[4,5,8,7,8,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,5,8,8,14,4],
[14,0,17,15,8,13,17,18],
[9,4,0,9,9,16,11,7],
[16,6,12,0,11,11,13,10],
[13,13,12,10,0,10,12,10],
[13,8,5,10,11,0,11,8],
[7,4,10,8,9,10,0,10],
[17,3,14,11,11,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,13,10,13,9,11],
[13,0,11,18,11,9,14,13],
[10,10,0,13,9,9,10,9],
[8,3,8,0,3,6,10,6],
[11,10,12,18,0,10,13,12],
[8,12,12,15,11,0,13,12],
[12,7,11,11,8,8,0,11],
[10,8,12,15,9,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,17,12,14,14,12],
[11,0,10,13,9,11,12,10],
[12,11,0,16,11,11,7,7],
[4,8,5,0,6,11,8,6],
[9,12,10,15,0,10,11,7],
[7,10,10,10,11,0,7,9],
[7,9,14,13,10,14,0,10],
[9,11,14,15,14,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,2,9,8,8,15],
[11,0,10,10,13,11,13,13],
[8,11,0,3,12,6,7,18],
[19,11,18,0,19,9,18,18],
[12,8,9,2,0,9,8,15],
[13,10,15,12,12,0,14,17],
[13,8,14,3,13,7,0,18],
[6,8,3,3,6,4,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,11,7,11,15,11],
[8,0,8,3,8,9,10,7],
[11,13,0,7,8,8,13,12],
[10,18,14,0,12,13,13,12],
[14,13,13,9,0,11,12,12],
[10,12,13,8,10,0,14,11],
[6,11,8,8,9,7,0,11],
[10,14,9,9,9,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,12,9,12,16,12],
[5,0,13,13,14,12,21,17],
[9,8,0,9,14,13,8,12],
[9,8,12,0,14,4,8,7],
[12,7,7,7,0,7,11,7],
[9,9,8,17,14,0,16,12],
[5,0,13,13,10,5,0,13],
[9,4,9,14,14,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,7,10,9,10,9],
[12,0,7,5,9,6,10,9],
[14,14,0,12,10,8,16,9],
[14,16,9,0,11,10,12,12],
[11,12,11,10,0,11,11,10],
[12,15,13,11,10,0,16,10],
[11,11,5,9,10,5,0,11],
[12,12,12,9,11,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,3,11,3,12,6,11],
[14,0,3,8,12,12,10,17],
[18,18,0,8,14,18,10,17],
[10,13,13,0,10,18,13,18],
[18,9,7,11,0,14,9,17],
[9,9,3,3,7,0,5,13],
[15,11,11,8,12,16,0,14],
[10,4,4,3,4,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,8,8,9,8,7],
[14,0,12,13,9,14,13,12],
[13,9,0,11,8,8,9,11],
[13,8,10,0,9,8,14,9],
[13,12,13,12,0,12,14,10],
[12,7,13,13,9,0,14,11],
[13,8,12,7,7,7,0,8],
[14,9,10,12,11,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,15,10,12,13,14],
[10,0,11,10,10,10,8,12],
[8,10,0,10,13,12,10,14],
[6,11,11,0,10,9,10,14],
[11,11,8,11,0,10,10,12],
[9,11,9,12,11,0,10,15],
[8,13,11,11,11,11,0,12],
[7,9,7,7,9,6,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,8,6,11,8,11],
[12,0,9,11,10,8,12,9],
[12,12,0,14,11,11,8,10],
[13,10,7,0,8,11,9,10],
[15,11,10,13,0,12,12,10],
[10,13,10,10,9,0,9,10],
[13,9,13,12,9,12,0,10],
[10,12,11,11,11,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,4,13,10,7,11,13],
[18,0,4,13,10,10,8,14],
[17,17,0,9,17,13,13,17],
[8,8,12,0,14,8,4,8],
[11,11,4,7,0,7,11,7],
[14,11,8,13,14,0,7,13],
[10,13,8,17,10,14,0,10],
[8,7,4,13,14,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,16,16,13,15,14,16],
[12,0,12,13,16,18,10,12],
[5,9,0,9,11,8,9,14],
[5,8,12,0,6,10,7,15],
[8,5,10,15,0,10,7,12],
[6,3,13,11,11,0,6,9],
[7,11,12,14,14,15,0,16],
[5,9,7,6,9,12,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,6,6,6,9,14,6],
[9,0,7,7,8,4,18,9],
[15,14,0,7,8,13,14,9],
[15,14,14,0,14,6,11,11],
[15,13,13,7,0,10,18,9],
[12,17,8,15,11,0,14,8],
[7,3,7,10,3,7,0,7],
[15,12,12,10,12,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,11,10,17,11,12,15],
[4,0,6,6,8,7,7,10],
[10,15,0,11,10,11,11,11],
[11,15,10,0,11,11,9,12],
[4,13,11,10,0,10,9,11],
[10,14,10,10,11,0,10,12],
[9,14,10,12,12,11,0,11],
[6,11,10,9,10,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,9,9,12,12,13],
[10,0,12,9,13,12,14,12],
[12,9,0,12,10,11,13,11],
[12,12,9,0,12,11,12,10],
[12,8,11,9,0,9,16,15],
[9,9,10,10,12,0,13,13],
[9,7,8,9,5,8,0,7],
[8,9,10,11,6,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,13,13,15,7,14],
[10,0,8,17,13,16,14,14],
[9,13,0,13,8,15,12,9],
[8,4,8,0,6,7,6,4],
[8,8,13,15,0,17,8,4],
[6,5,6,14,4,0,6,6],
[14,7,9,15,13,15,0,12],
[7,7,12,17,17,15,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,10,14,12,14,11],
[10,0,11,11,5,9,10,13],
[7,10,0,6,8,8,11,11],
[11,10,15,0,10,10,9,8],
[7,16,13,11,0,12,14,12],
[9,12,13,11,9,0,11,16],
[7,11,10,12,7,10,0,11],
[10,8,10,13,9,5,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,10,9,13,10,7],
[10,0,13,13,13,10,9,13],
[7,8,0,13,7,13,10,7],
[11,8,8,0,7,10,5,11],
[12,8,14,14,0,11,14,10],
[8,11,8,11,10,0,11,5],
[11,12,11,16,7,10,0,13],
[14,8,14,10,11,16,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,8,12,10,9,5],
[7,0,8,12,8,11,7,5],
[11,13,0,13,14,13,10,8],
[13,9,8,0,9,12,11,11],
[9,13,7,12,0,8,7,8],
[11,10,8,9,13,0,9,10],
[12,14,11,10,14,12,0,9],
[16,16,13,10,13,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,12,13,12,12,8],
[11,0,15,7,13,11,12,9],
[6,6,0,7,11,7,8,7],
[9,14,14,0,15,11,15,13],
[8,8,10,6,0,10,10,8],
[9,10,14,10,11,0,8,8],
[9,9,13,6,11,13,0,6],
[13,12,14,8,13,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,8,10,7,8,11],
[12,0,11,11,12,8,8,12],
[13,10,0,8,13,9,11,14],
[13,10,13,0,13,12,12,14],
[11,9,8,8,0,9,8,11],
[14,13,12,9,12,0,12,14],
[13,13,10,9,13,9,0,13],
[10,9,7,7,10,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,9,9,9,15,15,9],
[16,0,16,10,15,10,21,15],
[12,5,0,6,9,11,11,15],
[12,11,15,0,9,11,17,9],
[12,6,12,12,0,12,12,6],
[6,11,10,10,9,0,11,9],
[6,0,10,4,9,10,0,4],
[12,6,6,12,15,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,17,9,12,12,13,11],
[11,0,14,11,10,12,12,12],
[4,7,0,5,5,5,7,9],
[12,10,16,0,8,14,15,11],
[9,11,16,13,0,12,12,15],
[9,9,16,7,9,0,10,12],
[8,9,14,6,9,11,0,11],
[10,9,12,10,6,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,9,13,5,5,11],
[8,0,9,14,13,10,10,14],
[10,12,0,14,16,13,15,21],
[12,7,7,0,16,13,13,19],
[8,8,5,5,0,10,5,9],
[16,11,8,8,11,0,2,11],
[16,11,6,8,16,19,0,14],
[10,7,0,2,12,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,7,15,10,9,13,9],
[8,0,6,10,4,6,9,4],
[14,15,0,17,14,8,17,11],
[6,11,4,0,7,5,9,5],
[11,17,7,14,0,8,14,8],
[12,15,13,16,13,0,16,10],
[8,12,4,12,7,5,0,6],
[12,17,10,16,13,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,11,13,10,8,7,8],
[15,0,12,17,14,13,11,9],
[10,9,0,12,8,12,4,6],
[8,4,9,0,8,6,4,5],
[11,7,13,13,0,9,7,6],
[13,8,9,15,12,0,6,3],
[14,10,17,17,14,15,0,15],
[13,12,15,16,15,18,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,6,5,9,6,12],
[10,0,6,4,5,3,13,10],
[10,15,0,11,11,9,12,11],
[15,17,10,0,5,12,12,13],
[16,16,10,16,0,14,13,16],
[12,18,12,9,7,0,13,14],
[15,8,9,9,8,8,0,10],
[9,11,10,8,5,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,13,15,13,10,9],
[5,0,11,11,10,8,8,9],
[8,10,0,13,15,13,13,14],
[8,10,8,0,15,12,9,11],
[6,11,6,6,0,11,9,8],
[8,13,8,9,10,0,9,7],
[11,13,8,12,12,12,0,15],
[12,12,7,10,13,14,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,11,6,3,8,11,6],
[18,0,13,11,7,19,16,15],
[10,8,0,12,12,10,8,8],
[15,10,9,0,9,14,14,11],
[18,14,9,12,0,16,15,11],
[13,2,11,7,5,0,15,13],
[10,5,13,7,6,6,0,10],
[15,6,13,10,10,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,9,10,9,11,9],
[11,0,14,15,16,13,10,12],
[10,7,0,8,11,7,7,12],
[12,6,13,0,10,8,7,12],
[11,5,10,11,0,8,10,15],
[12,8,14,13,13,0,11,15],
[10,11,14,14,11,10,0,15],
[12,9,9,9,6,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,13,13,12,8,16],
[5,0,10,9,12,9,10,8],
[11,11,0,6,11,13,12,13],
[8,12,15,0,10,12,14,12],
[8,9,10,11,0,13,10,13],
[9,12,8,9,8,0,9,12],
[13,11,9,7,11,12,0,13],
[5,13,8,9,8,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,9,9,11,8,8],
[14,0,12,9,11,11,9,13],
[16,9,0,9,13,14,12,9],
[12,12,12,0,12,12,10,11],
[12,10,8,9,0,7,8,9],
[10,10,7,9,14,0,6,9],
[13,12,9,11,13,15,0,11],
[13,8,12,10,12,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,7,11,11,14,14],
[6,0,14,10,14,7,17,14],
[7,7,0,11,15,4,10,18],
[14,11,10,0,11,7,13,14],
[10,7,6,10,0,4,10,11],
[10,14,17,14,17,0,10,18],
[7,4,11,8,11,11,0,15],
[7,7,3,7,10,3,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,14,18,11,11,9],
[7,0,9,12,13,8,7,7],
[9,12,0,12,13,13,13,12],
[7,9,9,0,10,3,6,6],
[3,8,8,11,0,9,9,7],
[10,13,8,18,12,0,8,10],
[10,14,8,15,12,13,0,12],
[12,14,9,15,14,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,9,14,18,12,10],
[9,0,18,12,12,15,10,11],
[5,3,0,8,7,11,9,5],
[12,9,13,0,14,18,9,8],
[7,9,14,7,0,16,11,10],
[3,6,10,3,5,0,4,3],
[9,11,12,12,10,17,0,9],
[11,10,16,13,11,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,11,16,16,14,14],
[13,0,9,13,17,15,15,18],
[11,12,0,10,16,15,15,13],
[10,8,11,0,16,12,12,8],
[5,4,5,5,0,10,11,9],
[5,6,6,9,11,0,13,7],
[7,6,6,9,10,8,0,10],
[7,3,8,13,12,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,10,10,10,11,14,8],
[16,0,14,13,17,16,13,10],
[11,7,0,11,10,9,10,9],
[11,8,10,0,10,9,10,7],
[11,4,11,11,0,12,12,11],
[10,5,12,12,9,0,10,5],
[7,8,11,11,9,11,0,8],
[13,11,12,14,10,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,10,10,6,5,10,16],
[21,0,15,21,16,15,10,16],
[11,6,0,16,6,16,5,16],
[11,0,5,0,6,5,5,11],
[15,5,15,15,0,10,15,16],
[16,6,5,16,11,0,5,11],
[11,11,16,16,6,16,0,16],
[5,5,5,10,5,10,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,9,9,9,12,9],
[12,0,14,18,15,8,14,11],
[10,7,0,12,7,4,10,7],
[12,3,9,0,3,0,3,3],
[12,6,14,18,0,8,6,6],
[12,13,17,21,13,0,13,9],
[9,7,11,18,15,8,0,11],
[12,10,14,18,15,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,10,8,4,21,14],
[11,0,11,10,4,8,11,14],
[14,10,0,14,10,14,14,14],
[11,11,7,0,8,7,15,14],
[13,17,11,13,0,7,13,17],
[17,13,7,14,14,0,21,14],
[0,10,7,6,8,0,0,14],
[7,7,7,7,4,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,13,17,16,12,12],
[13,0,9,14,12,8,13,12],
[9,12,0,17,16,7,12,3],
[8,7,4,0,12,8,13,7],
[4,9,5,9,0,4,9,0],
[5,13,14,13,17,0,9,17],
[9,8,9,8,12,12,0,12],
[9,9,18,14,21,4,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,9,10,8,11,9,8],
[15,0,11,12,9,13,14,15],
[12,10,0,11,11,13,12,11],
[11,9,10,0,10,15,14,11],
[13,12,10,11,0,14,12,12],
[10,8,8,6,7,0,10,8],
[12,7,9,7,9,11,0,13],
[13,6,10,10,9,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,12,14,14,11,10],
[10,0,14,12,10,11,10,14],
[13,7,0,13,10,8,13,13],
[9,9,8,0,11,8,11,8],
[7,11,11,10,0,13,9,6],
[7,10,13,13,8,0,9,8],
[10,11,8,10,12,12,0,10],
[11,7,8,13,15,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,10,18,13,18,12],
[8,0,10,11,15,11,13,11],
[8,11,0,10,13,11,13,14],
[11,10,11,0,14,12,15,13],
[3,6,8,7,0,9,8,9],
[8,10,10,9,12,0,13,8],
[3,8,8,6,13,8,0,6],
[9,10,7,8,12,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,7,12,12,17,17],
[9,0,18,9,14,17,17,14],
[5,3,0,3,3,3,13,8],
[14,12,18,0,9,17,13,13],
[9,7,18,12,0,17,17,17],
[9,4,18,4,4,0,14,5],
[4,4,8,8,4,7,0,5],
[4,7,13,8,4,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,10,10,7,5,7],
[11,0,13,13,9,10,10,7],
[12,8,0,12,9,9,7,8],
[11,8,9,0,9,9,8,6],
[11,12,12,12,0,9,11,9],
[14,11,12,12,12,0,12,8],
[16,11,14,13,10,9,0,11],
[14,14,13,15,12,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,7,8,7,11,6,6],
[15,0,9,11,7,11,8,8],
[14,12,0,7,10,14,12,11],
[13,10,14,0,10,14,13,10],
[14,14,11,11,0,8,9,6],
[10,10,7,7,13,0,9,6],
[15,13,9,8,12,12,0,10],
[15,13,10,11,15,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,9,10,15,12,11],
[13,0,12,13,10,16,9,12],
[10,9,0,10,6,12,9,10],
[12,8,11,0,11,10,9,9],
[11,11,15,10,0,15,12,12],
[6,5,9,11,6,0,8,3],
[9,12,12,12,9,13,0,9],
[10,9,11,12,9,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,17,9,12,8,8,21],
[21,0,21,13,16,12,8,21],
[4,0,0,9,4,8,8,8],
[12,8,12,0,12,12,12,12],
[9,5,17,9,0,9,9,9],
[13,9,13,9,12,0,12,17],
[13,13,13,9,12,9,0,17],
[0,0,13,9,12,4,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,8,7,2,8,9,11],
[16,0,12,12,12,8,12,12],
[13,9,0,9,4,8,15,13],
[14,9,12,0,8,12,11,17],
[19,9,17,13,0,11,12,13],
[13,13,13,9,10,0,13,16],
[12,9,6,10,9,8,0,15],
[10,9,8,4,8,5,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,13,10,11,10,8],
[12,0,14,13,13,13,13,8],
[8,7,0,12,5,8,10,7],
[8,8,9,0,7,9,9,8],
[11,8,16,14,0,12,13,10],
[10,8,13,12,9,0,13,9],
[11,8,11,12,8,8,0,11],
[13,13,14,13,11,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,21,10,10,15,16],
[11,0,9,21,10,15,15,10],
[12,12,0,12,12,6,12,12],
[0,0,9,0,0,0,5,0],
[11,11,9,21,0,15,11,6],
[11,6,15,21,6,0,11,6],
[6,6,9,16,10,10,0,16],
[5,11,9,21,15,15,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,9,11,12,15,15],
[11,0,6,6,7,9,8,8],
[10,15,0,11,10,13,14,7],
[12,15,10,0,12,9,12,11],
[10,14,11,9,0,12,16,11],
[9,12,8,12,9,0,9,11],
[6,13,7,9,5,12,0,11],
[6,13,14,10,10,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,9,8,10,5,11],
[10,0,7,6,6,11,9,9],
[14,14,0,13,10,16,11,14],
[12,15,8,0,12,16,9,17],
[13,15,11,9,0,12,8,11],
[11,10,5,5,9,0,8,12],
[16,12,10,12,13,13,0,14],
[10,12,7,4,10,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,7,12,13,16,11],
[13,0,8,8,11,14,13,14],
[10,13,0,12,15,14,18,18],
[14,13,9,0,13,16,17,14],
[9,10,6,8,0,13,15,10],
[8,7,7,5,8,0,14,13],
[5,8,3,4,6,7,0,9],
[10,7,3,7,11,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,10,9,13,9,10],
[12,0,8,12,10,15,12,15],
[13,13,0,14,8,15,17,14],
[11,9,7,0,11,14,11,9],
[12,11,13,10,0,12,14,12],
[8,6,6,7,9,0,9,7],
[12,9,4,10,7,12,0,14],
[11,6,7,12,9,14,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,10,6,11,9,9],
[12,0,11,14,10,15,12,10],
[12,10,0,12,7,13,9,9],
[11,7,9,0,6,12,10,11],
[15,11,14,15,0,12,10,10],
[10,6,8,9,9,0,9,7],
[12,9,12,11,11,12,0,11],
[12,11,12,10,11,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,9,14,10,12,14],
[8,0,5,9,6,6,10,12],
[10,16,0,13,14,6,9,14],
[12,12,8,0,11,7,9,15],
[7,15,7,10,0,5,6,15],
[11,15,15,14,16,0,10,16],
[9,11,12,12,15,11,0,13],
[7,9,7,6,6,5,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,9,13,13,12,13],
[12,0,7,13,14,13,12,13],
[11,14,0,10,12,14,10,11],
[12,8,11,0,13,13,11,12],
[8,7,9,8,0,11,11,11],
[8,8,7,8,10,0,9,9],
[9,9,11,10,10,12,0,12],
[8,8,10,9,10,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,13,9,9,15,11],
[8,0,13,15,10,11,17,11],
[6,8,0,8,9,9,6,10],
[8,6,13,0,7,7,10,12],
[12,11,12,14,0,9,16,9],
[12,10,12,14,12,0,13,14],
[6,4,15,11,5,8,0,8],
[10,10,11,9,12,7,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,9,9,5,11,14,7],
[16,0,15,9,12,12,16,17],
[12,6,0,9,9,11,10,14],
[12,12,12,0,8,12,16,15],
[16,9,12,13,0,12,13,12],
[10,9,10,9,9,0,14,17],
[7,5,11,5,8,7,0,7],
[14,4,7,6,9,4,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,12,10,8,11,13],
[8,0,8,9,6,10,9,9],
[12,13,0,10,13,11,11,12],
[9,12,11,0,10,12,11,12],
[11,15,8,11,0,12,10,14],
[13,11,10,9,9,0,10,10],
[10,12,10,10,11,11,0,11],
[8,12,9,9,7,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,11,11,14,10,15],
[12,0,14,7,13,10,12,13],
[7,7,0,6,8,9,9,13],
[10,14,15,0,15,15,11,14],
[10,8,13,6,0,10,11,11],
[7,11,12,6,11,0,8,10],
[11,9,12,10,10,13,0,17],
[6,8,8,7,10,11,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,13,13,15,13,8],
[8,0,19,14,13,21,14,9],
[3,2,0,2,0,2,4,6],
[8,7,19,0,5,12,9,12],
[8,8,21,16,0,17,10,7],
[6,0,19,9,4,0,4,4],
[8,7,17,12,11,17,0,7],
[13,12,15,9,14,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,8,11,11,11,10],
[11,0,13,5,11,6,9,9],
[8,8,0,7,7,7,6,6],
[13,16,14,0,9,13,10,9],
[10,10,14,12,0,9,8,11],
[10,15,14,8,12,0,13,13],
[10,12,15,11,13,8,0,14],
[11,12,15,12,10,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,6,3,8,6,7],
[12,0,7,9,9,10,9,9],
[13,14,0,9,8,11,9,11],
[15,12,12,0,7,11,8,11],
[18,12,13,14,0,10,13,13],
[13,11,10,10,11,0,9,9],
[15,12,12,13,8,12,0,10],
[14,12,10,10,8,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,9,11,8,12,11],
[11,0,6,11,10,11,14,10],
[13,15,0,10,11,13,15,14],
[12,10,11,0,12,9,16,16],
[10,11,10,9,0,9,12,11],
[13,10,8,12,12,0,15,13],
[9,7,6,5,9,6,0,9],
[10,11,7,5,10,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,17,10,16,13,15],
[7,0,8,10,8,8,10,5],
[12,13,0,16,8,17,10,14],
[4,11,5,0,5,9,8,7],
[11,13,13,16,0,14,10,16],
[5,13,4,12,7,0,8,11],
[8,11,11,13,11,13,0,14],
[6,16,7,14,5,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,12,7,17,12,17],
[10,0,8,8,9,17,10,13],
[9,13,0,9,13,13,18,13],
[9,13,12,0,8,21,18,13],
[14,12,8,13,0,17,14,17],
[4,4,8,0,4,0,5,0],
[9,11,3,3,7,16,0,12],
[4,8,8,8,4,21,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,16,12,12,13,17,17],
[12,0,7,7,7,8,8,16],
[5,14,0,3,8,5,5,12],
[9,14,18,0,10,5,5,13],
[9,14,13,11,0,5,5,16],
[8,13,16,16,16,0,17,21],
[4,13,16,16,16,4,0,16],
[4,5,9,8,5,0,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,5,11,8,5,6,2],
[9,0,8,5,6,8,10,5],
[16,13,0,12,15,11,11,10],
[10,16,9,0,10,8,11,5],
[13,15,6,11,0,7,9,5],
[16,13,10,13,14,0,9,11],
[15,11,10,10,12,12,0,11],
[19,16,11,16,16,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,2,6,9,9,7,7,11],
[19,0,12,12,9,9,9,15],
[15,9,0,7,7,10,11,10],
[12,9,14,0,7,13,16,12],
[12,12,14,14,0,9,15,16],
[14,12,11,8,12,0,15,11],
[14,12,10,5,6,6,0,11],
[10,6,11,9,5,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,12,13,9,7,11],
[12,0,9,13,15,11,8,10],
[10,12,0,12,13,11,10,13],
[9,8,9,0,7,8,10,9],
[8,6,8,14,0,8,7,9],
[12,10,10,13,13,0,11,12],
[14,13,11,11,14,10,0,13],
[10,11,8,12,12,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,11,8,11,7,4],
[6,0,8,8,9,9,8,4],
[9,13,0,13,11,11,11,7],
[10,13,8,0,8,9,10,5],
[13,12,10,13,0,13,10,11],
[10,12,10,12,8,0,5,10],
[14,13,10,11,11,16,0,10],
[17,17,14,16,10,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,16,14,11,13,11],
[12,0,11,13,12,14,8,14],
[9,10,0,9,7,10,8,8],
[5,8,12,0,12,14,9,10],
[7,9,14,9,0,10,12,7],
[10,7,11,7,11,0,10,6],
[8,13,13,12,9,11,0,11],
[10,7,13,11,14,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,15,15,15,6,7,15],
[14,0,8,15,15,14,15,15],
[6,13,0,7,7,6,13,15],
[6,6,14,0,7,6,13,8],
[6,6,14,14,0,6,6,8],
[15,7,15,15,15,0,7,15],
[14,6,8,8,15,14,0,8],
[6,6,6,13,13,6,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,6,14,16,15,11,10],
[10,0,8,10,16,11,14,12],
[15,13,0,13,13,13,11,10],
[7,11,8,0,14,14,7,11],
[5,5,8,7,0,8,5,2],
[6,10,8,7,13,0,9,11],
[10,7,10,14,16,12,0,7],
[11,9,11,10,19,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,13,16,11,11,14],
[12,0,10,15,14,14,12,16],
[9,11,0,12,13,14,11,14],
[8,6,9,0,12,11,10,12],
[5,7,8,9,0,9,9,10],
[10,7,7,10,12,0,5,11],
[10,9,10,11,12,16,0,13],
[7,5,7,9,11,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,12,10,8,11,6],
[11,0,10,11,10,7,11,11],
[12,11,0,13,12,11,8,6],
[9,10,8,0,10,8,8,10],
[11,11,9,11,0,8,10,9],
[13,14,10,13,13,0,11,13],
[10,10,13,13,11,10,0,11],
[15,10,15,11,12,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,10,15,11,15,10],
[11,0,14,8,12,10,9,10],
[5,7,0,9,10,10,8,9],
[11,13,12,0,11,10,8,12],
[6,9,11,10,0,12,10,5],
[10,11,11,11,9,0,9,5],
[6,12,13,13,11,12,0,9],
[11,11,12,9,16,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,16,10,16,16,10],
[10,0,6,10,5,5,11,5],
[10,15,0,15,10,15,15,15],
[5,11,6,0,5,5,11,5],
[11,16,11,16,0,16,11,10],
[5,16,6,16,5,0,11,10],
[5,10,6,10,10,10,0,10],
[11,16,6,16,11,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,10,11,14,10,11],
[10,0,11,12,11,11,11,13],
[7,10,0,9,7,12,10,13],
[11,9,12,0,9,10,6,12],
[10,10,14,12,0,15,10,14],
[7,10,9,11,6,0,9,11],
[11,10,11,15,11,12,0,14],
[10,8,8,9,7,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,14,12,14,13,11,10],
[13,0,14,12,12,13,14,9],
[7,7,0,9,9,11,7,6],
[9,9,12,0,9,11,12,10],
[7,9,12,12,0,9,11,9],
[8,8,10,10,12,0,8,7],
[10,7,14,9,10,13,0,11],
[11,12,15,11,12,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,17,8,8,8,8,12],
[13,0,17,13,8,13,8,8],
[4,4,0,8,4,0,8,8],
[13,8,13,0,8,4,8,12],
[13,13,17,13,0,9,17,8],
[13,8,21,17,12,0,16,8],
[13,13,13,13,4,5,0,4],
[9,13,13,9,13,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,6,13,15,8,21,21],
[7,0,0,7,15,0,15,15],
[15,21,0,7,15,15,15,21],
[8,14,14,0,15,8,15,21],
[6,6,6,6,0,0,21,14],
[13,21,6,13,21,0,21,21],
[0,6,6,6,0,0,0,6],
[0,6,0,0,7,0,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,13,7,10,10,13],
[11,0,15,9,7,12,18,7],
[9,6,0,13,7,10,13,7],
[8,12,8,0,4,7,18,10],
[14,14,14,17,0,8,17,15],
[11,9,11,14,13,0,15,16],
[11,3,8,3,4,6,0,7],
[8,14,14,11,6,5,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,8,17,12,7,4],
[8,0,14,8,17,11,8,4],
[9,7,0,9,13,10,9,5],
[13,13,12,0,17,15,10,11],
[4,4,8,4,0,7,6,3],
[9,10,11,6,14,0,5,7],
[14,13,12,11,15,16,0,10],
[17,17,16,10,18,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,6,7,9,7,8],
[14,0,11,11,8,11,11,10],
[16,10,0,11,10,15,13,14],
[15,10,10,0,12,12,10,11],
[14,13,11,9,0,13,13,12],
[12,10,6,9,8,0,8,10],
[14,10,8,11,8,13,0,9],
[13,11,7,10,9,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,13,11,14,9,7],
[7,0,7,9,13,11,7,6],
[9,14,0,12,13,13,7,7],
[8,12,9,0,12,14,5,6],
[10,8,8,9,0,11,8,12],
[7,10,8,7,10,0,7,5],
[12,14,14,16,13,14,0,9],
[14,15,14,15,9,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,4,9,9,11,15],
[6,0,15,6,7,8,5,12],
[2,6,0,6,3,5,5,9],
[17,15,15,0,12,9,14,16],
[12,14,18,9,0,12,8,12],
[12,13,16,12,9,0,10,12],
[10,16,16,7,13,11,0,14],
[6,9,12,5,9,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,13,10,16,9,17],
[5,0,11,6,10,9,6,9],
[11,10,0,5,16,8,12,11],
[8,15,16,0,14,16,14,16],
[11,11,5,7,0,12,10,11],
[5,12,13,5,9,0,5,13],
[12,15,9,7,11,16,0,15],
[4,12,10,5,10,8,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,3,15,4,4,10],
[11,0,14,8,15,9,5,18],
[8,7,0,8,12,9,12,9],
[18,13,13,0,18,9,12,15],
[6,6,9,3,0,7,6,13],
[17,12,12,12,14,0,14,9],
[17,16,9,9,15,7,0,13],
[11,3,12,6,8,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,16,14,10,14,13],
[5,0,9,10,5,9,5,14],
[11,12,0,13,11,11,8,9],
[5,11,8,0,0,8,12,10],
[7,16,10,21,0,15,14,13],
[11,12,10,13,6,0,12,9],
[7,16,13,9,7,9,0,13],
[8,7,12,11,8,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,14,15,15,14,12],
[11,0,11,15,10,12,9,14],
[9,10,0,11,9,11,9,14],
[7,6,10,0,7,10,10,12],
[6,11,12,14,0,13,12,12],
[6,9,10,11,8,0,10,10],
[7,12,12,11,9,11,0,11],
[9,7,7,9,9,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,9,11,9,11,11],
[8,0,6,7,10,8,10,7],
[11,15,0,9,13,11,14,8],
[12,14,12,0,12,14,13,10],
[10,11,8,9,0,10,10,9],
[12,13,10,7,11,0,15,9],
[10,11,7,8,11,6,0,7],
[10,14,13,11,12,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,14,11,11,10,17],
[10,0,9,14,11,10,8,10],
[8,12,0,11,10,14,11,9],
[7,7,10,0,8,10,8,10],
[10,10,11,13,0,12,6,9],
[10,11,7,11,9,0,11,8],
[11,13,10,13,15,10,0,13],
[4,11,12,11,12,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,17,17,16,15,8,15],
[12,0,17,14,14,8,10,14],
[4,4,0,12,10,8,8,6],
[4,7,9,0,8,10,8,11],
[5,7,11,13,0,11,11,9],
[6,13,13,11,10,0,6,11],
[13,11,13,13,10,15,0,11],
[6,7,15,10,12,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,13,17,5,5,3],
[14,0,12,13,17,15,8,6],
[13,9,0,7,13,11,13,13],
[8,8,14,0,13,10,6,8],
[4,4,8,8,0,2,0,0],
[16,6,10,11,19,0,6,2],
[16,13,8,15,21,15,0,5],
[18,15,8,13,21,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,5,12,8,10,16,9],
[13,0,11,10,6,5,9,9],
[16,10,0,12,14,12,14,12],
[9,11,9,0,6,13,10,8],
[13,15,7,15,0,15,12,11],
[11,16,9,8,6,0,12,9],
[5,12,7,11,9,9,0,11],
[12,12,9,13,10,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,14,12,10,11,10],
[8,0,9,10,9,8,9,7],
[12,12,0,10,12,10,10,10],
[7,11,11,0,9,12,9,7],
[9,12,9,12,0,12,10,11],
[11,13,11,9,9,0,9,10],
[10,12,11,12,11,12,0,11],
[11,14,11,14,10,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,9,7,6,7,6,5],
[15,0,13,10,8,11,10,8],
[12,8,0,9,6,6,10,11],
[14,11,12,0,8,9,10,10],
[15,13,15,13,0,12,9,10],
[14,10,15,12,9,0,11,12],
[15,11,11,11,12,10,0,11],
[16,13,10,11,11,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,13,13,13,7,14],
[9,0,7,10,12,7,7,9],
[9,14,0,11,18,17,11,14],
[8,11,10,0,11,10,8,12],
[8,9,3,10,0,11,5,11],
[8,14,4,11,10,0,9,9],
[14,14,10,13,16,12,0,16],
[7,12,7,9,10,12,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,17,12,16,16,16],
[9,0,12,18,18,12,12,12],
[14,9,0,14,9,9,12,9],
[4,3,7,0,6,10,7,7],
[9,3,12,15,0,9,12,9],
[5,9,12,11,12,0,13,7],
[5,9,9,14,9,8,0,0],
[5,9,12,14,12,14,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,8,7,14,16,12],
[10,0,9,10,9,12,16,12],
[9,12,0,5,10,11,16,8],
[13,11,16,0,10,16,13,11],
[14,12,11,11,0,11,15,10],
[7,9,10,5,10,0,12,8],
[5,5,5,8,6,9,0,9],
[9,9,13,10,11,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,11,9,11,10,16],
[13,0,8,10,10,11,9,12],
[13,13,0,11,12,10,12,13],
[10,11,10,0,9,14,13,16],
[12,11,9,12,0,12,10,15],
[10,10,11,7,9,0,7,10],
[11,12,9,8,11,14,0,12],
[5,9,8,5,6,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,14,12,12,13,7],
[14,0,18,14,12,10,14,10],
[9,3,0,10,8,5,8,2],
[7,7,11,0,7,7,4,7],
[9,9,13,14,0,7,6,6],
[9,11,16,14,14,0,11,11],
[8,7,13,17,15,10,0,9],
[14,11,19,14,15,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,4,7,5,9,6],
[8,0,12,7,7,9,10,12],
[10,9,0,10,8,7,11,9],
[17,14,11,0,13,11,12,9],
[14,14,13,8,0,8,8,7],
[16,12,14,10,13,0,12,11],
[12,11,10,9,13,9,0,7],
[15,9,12,12,14,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,10,4,6,9,9],
[12,0,11,9,10,17,13,16],
[12,10,0,8,3,11,7,14],
[11,12,13,0,12,10,12,10],
[17,11,18,9,0,15,14,18],
[15,4,10,11,6,0,9,9],
[12,8,14,9,7,12,0,16],
[12,5,7,11,3,12,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,9,11,6,12,7,12],
[16,0,10,14,11,14,12,16],
[12,11,0,12,9,10,10,12],
[10,7,9,0,14,8,10,14],
[15,10,12,7,0,11,9,12],
[9,7,11,13,10,0,9,13],
[14,9,11,11,12,12,0,12],
[9,5,9,7,9,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,10,14,13,9,11],
[13,0,10,10,14,13,11,11],
[13,11,0,14,15,14,10,10],
[11,11,7,0,11,11,9,12],
[7,7,6,10,0,8,9,9],
[8,8,7,10,13,0,11,9],
[12,10,11,12,12,10,0,7],
[10,10,11,9,12,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,10,10,4,11,9,5],
[16,0,16,13,12,10,15,14],
[11,5,0,12,8,11,14,11],
[11,8,9,0,5,13,9,14],
[17,9,13,16,0,14,14,12],
[10,11,10,8,7,0,13,6],
[12,6,7,12,7,8,0,11],
[16,7,10,7,9,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,12,19,12,8,13],
[3,0,7,12,13,9,5,11],
[5,14,0,12,9,9,5,9],
[9,9,9,0,14,4,6,7],
[2,8,12,7,0,3,6,3],
[9,12,12,17,18,0,12,18],
[13,16,16,15,15,9,0,14],
[8,10,12,14,18,3,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,10,12,10,13,11],
[12,0,13,12,11,14,9,13],
[9,8,0,13,15,11,12,9],
[11,9,8,0,11,9,9,7],
[9,10,6,10,0,14,12,9],
[11,7,10,12,7,0,13,11],
[8,12,9,12,9,8,0,14],
[10,8,12,14,12,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,15,14,14,14,9],
[6,0,7,8,7,9,9,6],
[10,14,0,16,12,9,11,11],
[6,13,5,0,10,10,8,6],
[7,14,9,11,0,11,9,9],
[7,12,12,11,10,0,9,10],
[7,12,10,13,12,12,0,9],
[12,15,10,15,12,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,6,10,13,10,13,10],
[6,0,6,13,13,16,16,10],
[15,15,0,10,10,13,13,10],
[11,8,11,0,15,11,18,15],
[8,8,11,6,0,11,11,15],
[11,5,8,10,10,0,13,15],
[8,5,8,3,10,8,0,12],
[11,11,11,6,6,6,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,11,6,10,12,11,12],
[15,0,12,7,11,17,15,15],
[10,9,0,8,4,13,14,11],
[15,14,13,0,8,14,14,12],
[11,10,17,13,0,14,13,15],
[9,4,8,7,7,0,6,8],
[10,6,7,7,8,15,0,13],
[9,6,10,9,6,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,14,11,12,9,15],
[11,0,18,16,10,15,11,11],
[7,3,0,9,6,10,5,8],
[7,5,12,0,7,9,10,13],
[10,11,15,14,0,8,13,11],
[9,6,11,12,13,0,10,14],
[12,10,16,11,8,11,0,10],
[6,10,13,8,10,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,12,14,12,9,12],
[10,0,10,8,13,9,12,13],
[8,11,0,9,11,12,8,11],
[9,13,12,0,15,12,10,11],
[7,8,10,6,0,10,6,10],
[9,12,9,9,11,0,10,9],
[12,9,13,11,15,11,0,12],
[9,8,10,10,11,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,13,12,10,10,10],
[11,0,13,10,13,9,11,8],
[10,8,0,5,7,2,2,2],
[8,11,16,0,10,9,13,8],
[9,8,14,11,0,11,8,11],
[11,12,19,12,10,0,13,10],
[11,10,19,8,13,8,0,11],
[11,13,19,13,10,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,12,9,10,10,13],
[9,0,9,13,13,7,12,12],
[11,12,0,15,12,10,9,10],
[9,8,6,0,8,7,11,10],
[12,8,9,13,0,7,10,10],
[11,14,11,14,14,0,9,11],
[11,9,12,10,11,12,0,12],
[8,9,11,11,11,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,11,10,11,12,12],
[9,0,11,10,11,11,10,10],
[11,10,0,10,11,10,10,13],
[10,11,11,0,11,11,8,12],
[11,10,10,10,0,10,7,11],
[10,10,11,10,11,0,10,12],
[9,11,11,13,14,11,0,13],
[9,11,8,9,10,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,13,15,13,13,11],
[11,0,11,11,15,7,11,9],
[8,10,0,11,15,7,14,8],
[8,10,10,0,16,10,15,12],
[6,6,6,5,0,3,12,3],
[8,14,14,11,18,0,17,10],
[8,10,7,6,9,4,0,9],
[10,12,13,9,18,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,14,10,14,9,8],
[9,0,11,14,10,8,11,6],
[9,10,0,12,13,11,9,9],
[7,7,9,0,7,11,8,11],
[11,11,8,14,0,12,7,9],
[7,13,10,10,9,0,10,7],
[12,10,12,13,14,11,0,12],
[13,15,12,10,12,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,11,14,16,11,10],
[11,0,8,10,16,12,9,7],
[8,13,0,12,15,16,15,9],
[10,11,9,0,12,15,12,13],
[7,5,6,9,0,11,8,6],
[5,9,5,6,10,0,8,5],
[10,12,6,9,13,13,0,11],
[11,14,12,8,15,16,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,11,8,12,6,8],
[10,0,11,9,12,12,11,11],
[13,10,0,13,11,9,12,11],
[10,12,8,0,9,10,11,9],
[13,9,10,12,0,11,9,11],
[9,9,12,11,10,0,9,8],
[15,10,9,10,12,12,0,10],
[13,10,10,12,10,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,10,12,9,9,8,9],
[16,0,11,10,6,10,10,8],
[11,10,0,11,7,6,6,11],
[9,11,10,0,9,9,4,8],
[12,15,14,12,0,14,11,9],
[12,11,15,12,7,0,12,9],
[13,11,15,17,10,9,0,9],
[12,13,10,13,12,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,13,12,7,15,12,7],
[14,0,8,16,15,17,10,11],
[8,13,0,9,11,14,8,9],
[9,5,12,0,8,13,13,8],
[14,6,10,13,0,15,12,6],
[6,4,7,8,6,0,7,6],
[9,11,13,8,9,14,0,9],
[14,10,12,13,15,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,9,11,12,10,5],
[7,0,11,7,9,12,6,7],
[10,10,0,5,12,11,9,5],
[12,14,16,0,14,14,10,11],
[10,12,9,7,0,12,8,5],
[9,9,10,7,9,0,8,8],
[11,15,12,11,13,13,0,9],
[16,14,16,10,16,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,13,9,9,12,10],
[10,0,9,12,10,9,13,10],
[9,12,0,12,8,10,10,10],
[8,9,9,0,9,9,10,8],
[12,11,13,12,0,10,11,10],
[12,12,11,12,11,0,14,9],
[9,8,11,11,10,7,0,11],
[11,11,11,13,11,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,10,13,19,14,9,18],
[4,0,8,5,12,10,7,10],
[11,13,0,10,14,11,11,13],
[8,16,11,0,14,8,10,9],
[2,9,7,7,0,6,6,10],
[7,11,10,13,15,0,8,10],
[12,14,10,11,15,13,0,13],
[3,11,8,12,11,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,10,10,10,10,9],
[12,0,11,10,10,12,10,12],
[9,10,0,7,7,12,10,9],
[11,11,14,0,10,14,12,11],
[11,11,14,11,0,14,12,9],
[11,9,9,7,7,0,8,8],
[11,11,11,9,9,13,0,10],
[12,9,12,10,12,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,9,10,11,12,10],
[12,0,9,11,9,10,10,10],
[13,12,0,12,13,15,15,6],
[12,10,9,0,7,10,11,11],
[11,12,8,14,0,14,9,10],
[10,11,6,11,7,0,8,6],
[9,11,6,10,12,13,0,7],
[11,11,15,10,11,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,14,12,10,10,11],
[9,0,15,18,13,14,17,14],
[8,6,0,12,14,9,6,6],
[7,3,9,0,12,5,6,6],
[9,8,7,9,0,9,9,8],
[11,7,12,16,12,0,9,9],
[11,4,15,15,12,12,0,8],
[10,7,15,15,13,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,12,18,11,3,11],
[14,0,12,17,17,10,8,11],
[9,9,0,12,12,9,12,9],
[9,4,9,0,17,10,3,6],
[3,4,9,4,0,3,0,4],
[10,11,12,11,18,0,11,10],
[18,13,9,18,21,10,0,15],
[10,10,12,15,17,11,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,15,15,19,15,16],
[11,0,14,10,12,15,15,16],
[9,7,0,8,10,13,11,6],
[6,11,13,0,8,13,13,9],
[6,9,11,13,0,15,10,14],
[2,6,8,8,6,0,8,11],
[6,6,10,8,11,13,0,6],
[5,5,15,12,7,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,14,14,10,15,15],
[7,0,8,9,6,5,6,11],
[8,13,0,11,11,10,10,12],
[7,12,10,0,10,11,9,11],
[7,15,10,11,0,16,7,16],
[11,16,11,10,5,0,9,14],
[6,15,11,12,14,12,0,13],
[6,10,9,10,5,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,7,8,6,7,7],
[11,0,9,8,9,11,9,9],
[14,12,0,10,10,11,13,11],
[14,13,11,0,12,11,10,10],
[13,12,11,9,0,12,12,11],
[15,10,10,10,9,0,12,11],
[14,12,8,11,9,9,0,9],
[14,12,10,11,10,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,5,10,9,9,0,3],
[18,0,14,10,18,9,5,0],
[16,7,0,9,14,9,8,7],
[11,11,12,0,16,12,7,7],
[12,3,7,5,0,4,3,3],
[12,12,12,9,17,0,12,7],
[21,16,13,14,18,9,0,16],
[18,21,14,14,18,14,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,10,11,13,12,10],
[12,0,15,8,11,9,12,8],
[8,6,0,11,8,9,11,9],
[11,13,10,0,12,13,15,11],
[10,10,13,9,0,10,8,9],
[8,12,12,8,11,0,12,6],
[9,9,10,6,13,9,0,8],
[11,13,12,10,12,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,10,11,9,12,13],
[9,0,8,11,10,11,11,12],
[14,13,0,12,12,8,12,15],
[11,10,9,0,11,12,10,13],
[10,11,9,10,0,8,9,12],
[12,10,13,9,13,0,9,8],
[9,10,9,11,12,12,0,13],
[8,9,6,8,9,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,10,10,13,7,13],
[11,0,5,3,15,3,3,9],
[14,16,0,9,17,16,11,17],
[11,18,12,0,20,13,9,15],
[11,6,4,1,0,7,4,8],
[8,18,5,8,14,0,11,17],
[14,18,10,12,17,10,0,14],
[8,12,4,6,13,4,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,13,16,14,10,13],
[11,0,14,10,14,14,16,10],
[5,7,0,7,11,9,5,6],
[8,11,14,0,10,10,13,15],
[5,7,10,11,0,14,7,9],
[7,7,12,11,7,0,7,11],
[11,5,16,8,14,14,0,9],
[8,11,15,6,12,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,10,16,11,12,9],
[10,0,10,12,14,11,12,8],
[9,11,0,9,17,9,8,11],
[11,9,12,0,17,11,11,8],
[5,7,4,4,0,4,7,5],
[10,10,12,10,17,0,8,11],
[9,9,13,10,14,13,0,10],
[12,13,10,13,16,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,13,7,11,9,10,8],
[16,0,17,12,14,15,16,10],
[8,4,0,8,5,9,7,8],
[14,9,13,0,11,12,10,13],
[10,7,16,10,0,14,12,12],
[12,6,12,9,7,0,8,10],
[11,5,14,11,9,13,0,9],
[13,11,13,8,9,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,9,12,5,6,12,9],
[16,0,10,14,14,14,17,10],
[12,11,0,12,11,8,13,9],
[9,7,9,0,7,5,13,9],
[16,7,10,14,0,12,17,11],
[15,7,13,16,9,0,16,10],
[9,4,8,8,4,5,0,7],
[12,11,12,12,10,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,12,9,12,7,14],
[9,0,14,11,12,11,10,12],
[7,7,0,11,5,10,6,11],
[9,10,10,0,8,10,12,12],
[12,9,16,13,0,14,11,17],
[9,10,11,11,7,0,6,11],
[14,11,15,9,10,15,0,14],
[7,9,10,9,4,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,14,15,13,11,11],
[13,0,11,12,16,13,10,14],
[12,10,0,13,14,16,14,15],
[7,9,8,0,11,14,12,16],
[6,5,7,10,0,12,8,11],
[8,8,5,7,9,0,7,13],
[10,11,7,9,13,14,0,12],
[10,7,6,5,10,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,10,9,9,11,10],
[10,0,12,12,10,11,9,10],
[12,9,0,10,10,10,9,10],
[11,9,11,0,8,9,9,11],
[12,11,11,13,0,11,10,9],
[12,10,11,12,10,0,10,11],
[10,12,12,12,11,11,0,12],
[11,11,11,10,12,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,6,17,12,17,17,9],
[4,0,4,4,10,9,15,9],
[15,17,0,15,10,11,15,15],
[4,17,6,0,16,17,21,9],
[9,11,11,5,0,5,5,9],
[4,12,10,4,16,0,16,9],
[4,6,6,0,16,5,0,9],
[12,12,6,12,12,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,8,8,10,13,10],
[13,0,11,9,10,9,11,14],
[11,10,0,9,8,10,10,9],
[13,12,12,0,9,16,12,15],
[13,11,13,12,0,10,14,13],
[11,12,11,5,11,0,14,12],
[8,10,11,9,7,7,0,8],
[11,7,12,6,8,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,6,11,13,6,6],
[13,0,11,12,17,7,9,7],
[11,10,0,10,13,5,10,12],
[15,9,11,0,13,9,9,7],
[10,4,8,8,0,7,2,4],
[8,14,16,12,14,0,12,12],
[15,12,11,12,19,9,0,10],
[15,14,9,14,17,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,9,6,17,11,12],
[8,0,5,8,8,14,9,9],
[7,16,0,7,7,14,9,9],
[12,13,14,0,12,14,9,9],
[15,13,14,9,0,18,14,16],
[4,7,7,7,3,0,4,7],
[10,12,12,12,7,17,0,12],
[9,12,12,12,5,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,9,11,10,9,8],
[14,0,11,9,12,11,12,11],
[11,10,0,8,10,11,8,8],
[12,12,13,0,14,12,9,12],
[10,9,11,7,0,7,8,11],
[11,10,10,9,14,0,11,11],
[12,9,13,12,13,10,0,11],
[13,10,13,9,10,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,9,7,8,10,9],
[13,0,12,11,11,10,9,11],
[10,9,0,8,9,9,8,8],
[12,10,13,0,10,11,10,12],
[14,10,12,11,0,11,12,13],
[13,11,12,10,10,0,8,8],
[11,12,13,11,9,13,0,12],
[12,10,13,9,8,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,5,13,16,13,8],
[5,0,4,5,11,9,7,3],
[9,17,0,13,18,19,13,11],
[16,16,8,0,18,16,12,11],
[8,10,3,3,0,16,9,3],
[5,12,2,5,5,0,7,5],
[8,14,8,9,12,14,0,4],
[13,18,10,10,18,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,8,11,7,16,8],
[10,0,9,11,12,10,17,7],
[9,12,0,13,11,13,16,12],
[13,10,8,0,16,15,20,12],
[10,9,10,5,0,7,15,9],
[14,11,8,6,14,0,18,9],
[5,4,5,1,6,3,0,5],
[13,14,9,9,12,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,7,11,7,7,13,6],
[17,0,15,12,8,13,12,11],
[14,6,0,10,6,9,12,8],
[10,9,11,0,7,10,11,9],
[14,13,15,14,0,13,14,8],
[14,8,12,11,8,0,13,9],
[8,9,9,10,7,8,0,7],
[15,10,13,12,13,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,9,14,12,12,9],
[7,0,14,12,9,10,11,14],
[8,7,0,12,9,10,11,12],
[12,9,9,0,11,8,10,15],
[7,12,12,10,0,10,12,13],
[9,11,11,13,11,0,8,14],
[9,10,10,11,9,13,0,10],
[12,7,9,6,8,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,10,13,11,8,15],
[11,0,10,7,8,10,7,16],
[11,11,0,4,11,9,7,10],
[11,14,17,0,11,10,11,20],
[8,13,10,10,0,7,4,15],
[10,11,12,11,14,0,12,17],
[13,14,14,10,17,9,0,16],
[6,5,11,1,6,4,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,11,12,12,9,11],
[11,0,13,14,10,15,12,13],
[12,8,0,13,11,12,10,12],
[10,7,8,0,11,11,10,9],
[9,11,10,10,0,11,14,11],
[9,6,9,10,10,0,7,7],
[12,9,11,11,7,14,0,10],
[10,8,9,12,10,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,17,10,13,17,18],
[7,0,8,10,12,10,9,12],
[10,13,0,11,12,11,12,15],
[4,11,10,0,10,9,9,11],
[11,9,9,11,0,9,11,14],
[8,11,10,12,12,0,11,10],
[4,12,9,12,10,10,0,10],
[3,9,6,10,7,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,8,11,10,10,10],
[6,0,12,12,11,10,9,13],
[8,9,0,7,10,10,9,12],
[13,9,14,0,12,12,11,12],
[10,10,11,9,0,11,9,11],
[11,11,11,9,10,0,11,11],
[11,12,12,10,12,10,0,10],
[11,8,9,9,10,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,11,12,12,12,10],
[10,0,12,12,12,10,11,11],
[7,9,0,12,11,9,9,7],
[10,9,9,0,8,10,8,8],
[9,9,10,13,0,11,14,8],
[9,11,12,11,10,0,12,12],
[9,10,12,13,7,9,0,10],
[11,10,14,13,13,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,14,13,10,10,9],
[11,0,14,13,13,9,14,11],
[9,7,0,9,12,9,9,5],
[7,8,12,0,8,8,11,8],
[8,8,9,13,0,8,14,10],
[11,12,12,13,13,0,17,10],
[11,7,12,10,7,4,0,6],
[12,10,16,13,11,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,13,10,6,9,7,10],
[14,0,16,14,13,10,11,13],
[8,5,0,12,8,7,7,7],
[11,7,9,0,9,9,9,11],
[15,8,13,12,0,11,7,13],
[12,11,14,12,10,0,12,11],
[14,10,14,12,14,9,0,14],
[11,8,14,10,8,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,15,13,10,10,9,13],
[15,0,15,18,11,14,10,14],
[6,6,0,13,9,8,5,10],
[8,3,8,0,6,9,5,10],
[11,10,12,15,0,8,12,11],
[11,7,13,12,13,0,7,14],
[12,11,16,16,9,14,0,14],
[8,7,11,11,10,7,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,6,11,10,8,11,9],
[7,0,8,5,7,3,8,11],
[15,13,0,12,15,13,15,10],
[10,16,9,0,15,13,16,11],
[11,14,6,6,0,6,12,9],
[13,18,8,8,15,0,8,13],
[10,13,6,5,9,13,0,8],
[12,10,11,10,12,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,11,9,13,10,12],
[10,0,7,9,5,8,11,8],
[9,14,0,12,9,17,14,14],
[10,12,9,0,6,14,12,10],
[12,16,12,15,0,10,12,16],
[8,13,4,7,11,0,7,9],
[11,10,7,9,9,14,0,12],
[9,13,7,11,5,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,12,8,6,2,6],
[15,0,8,6,10,5,6,9],
[13,13,0,4,13,9,10,11],
[9,15,17,0,11,11,8,11],
[13,11,8,10,0,9,10,9],
[15,16,12,10,12,0,8,6],
[19,15,11,13,11,13,0,9],
[15,12,10,10,12,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,4,6,8,7,4,5],
[15,0,13,15,13,10,8,9],
[17,8,0,12,11,12,5,11],
[15,6,9,0,13,10,5,7],
[13,8,10,8,0,9,6,10],
[14,11,9,11,12,0,6,11],
[17,13,16,16,15,15,0,10],
[16,12,10,14,11,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,6,6,15,14,14,13],
[7,0,6,6,15,8,6,7],
[15,15,0,14,15,8,8,15],
[15,15,7,0,15,8,15,15],
[6,6,6,6,0,14,6,6],
[7,13,13,13,7,0,13,7],
[7,15,13,6,15,8,0,7],
[8,14,6,6,15,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,13,11,11,9,6],
[7,0,5,8,11,6,9,6],
[11,16,0,14,13,10,15,12],
[8,13,7,0,13,8,10,7],
[10,10,8,8,0,11,6,8],
[10,15,11,13,10,0,12,11],
[12,12,6,11,15,9,0,5],
[15,15,9,14,13,10,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,14,15,7,7,3],
[5,0,4,9,9,3,9,0],
[10,17,0,12,10,9,5,8],
[7,12,9,0,10,9,8,5],
[6,12,11,11,0,7,0,5],
[14,18,12,12,14,0,12,10],
[14,12,16,13,21,9,0,12],
[18,21,13,16,16,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,11,11,9,12,7],
[11,0,13,11,9,8,13,8],
[10,8,0,8,8,7,10,5],
[10,10,13,0,12,10,11,11],
[10,12,13,9,0,11,11,10],
[12,13,14,11,10,0,11,9],
[9,8,11,10,10,10,0,8],
[14,13,16,10,11,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,10,11,10,6,9],
[11,0,12,13,16,14,10,15],
[10,9,0,11,13,16,12,13],
[11,8,10,0,10,9,8,10],
[10,5,8,11,0,10,10,8],
[11,7,5,12,11,0,7,7],
[15,11,9,13,11,14,0,15],
[12,6,8,11,13,14,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,3,10,11,10,6],
[11,0,6,6,11,11,7,4],
[14,15,0,10,15,11,17,8],
[18,15,11,0,10,11,10,11],
[11,10,6,11,0,12,11,6],
[10,10,10,10,9,0,11,6],
[11,14,4,11,10,10,0,10],
[15,17,13,10,15,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,14,9,13,15,17],
[8,0,14,14,9,4,12,14],
[7,7,0,9,8,5,10,6],
[7,7,12,0,9,8,10,13],
[12,12,13,12,0,8,12,12],
[8,17,16,13,13,0,15,16],
[6,9,11,11,9,6,0,11],
[4,7,15,8,9,5,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,4,9,7,7,9],
[15,0,11,9,14,11,9,10],
[13,10,0,9,16,12,11,11],
[17,12,12,0,15,14,8,14],
[12,7,5,6,0,12,7,11],
[14,10,9,7,9,0,6,9],
[14,12,10,13,14,15,0,14],
[12,11,10,7,10,12,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,7,13,15,10,14],
[9,0,5,9,11,15,10,9],
[10,16,0,11,12,16,17,13],
[14,12,10,0,14,17,13,13],
[8,10,9,7,0,12,11,11],
[6,6,5,4,9,0,7,6],
[11,11,4,8,10,14,0,11],
[7,12,8,8,10,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,13,10,14,12,9],
[7,0,9,9,8,11,8,7],
[9,12,0,10,10,11,8,8],
[8,12,11,0,10,12,8,11],
[11,13,11,11,0,12,10,9],
[7,10,10,9,9,0,9,9],
[9,13,13,13,11,12,0,11],
[12,14,13,10,12,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,8,10,15,11,13],
[9,0,13,11,13,14,11,13],
[9,8,0,8,8,10,6,7],
[13,10,13,0,10,11,9,11],
[11,8,13,11,0,12,10,11],
[6,7,11,10,9,0,8,11],
[10,10,15,12,11,13,0,11],
[8,8,14,10,10,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,11,12,10,9,10],
[9,0,9,10,9,8,10,9],
[12,12,0,10,9,11,9,8],
[10,11,11,0,13,11,10,7],
[9,12,12,8,0,6,11,10],
[11,13,10,10,15,0,14,9],
[12,11,12,11,10,7,0,11],
[11,12,13,14,11,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,11,11,13,15,18],
[11,0,6,15,9,13,9,12],
[9,15,0,16,16,18,13,16],
[10,6,5,0,8,13,8,12],
[10,12,5,13,0,13,16,14],
[8,8,3,8,8,0,10,12],
[6,12,8,13,5,11,0,12],
[3,9,5,9,7,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,14,7,10,9,9],
[9,0,2,12,6,7,11,11],
[12,19,0,17,10,15,14,11],
[7,9,4,0,4,7,9,7],
[14,15,11,17,0,7,9,11],
[11,14,6,14,14,0,11,13],
[12,10,7,12,12,10,0,11],
[12,10,10,14,10,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,15,5,11,11,6],
[10,0,17,10,0,15,6,12],
[10,4,0,4,0,4,10,0],
[6,11,17,0,11,11,17,12],
[16,21,21,10,0,15,10,12],
[10,6,17,10,6,0,12,6],
[10,15,11,4,11,9,0,6],
[15,9,21,9,9,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,16,13,12,12,10],
[5,0,6,6,4,7,7,5],
[8,15,0,10,11,6,8,5],
[5,15,11,0,12,8,9,9],
[8,17,10,9,0,7,7,8],
[9,14,15,13,14,0,10,13],
[9,14,13,12,14,11,0,11],
[11,16,16,12,13,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,12,9,11,13,8],
[8,0,13,11,9,11,11,8],
[10,8,0,10,10,11,8,6],
[9,10,11,0,9,10,10,12],
[12,12,11,12,0,13,13,9],
[10,10,10,11,8,0,10,10],
[8,10,13,11,8,11,0,5],
[13,13,15,9,12,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,6,7,9,8,8],
[11,0,11,9,10,9,9,10],
[12,10,0,7,13,12,10,13],
[15,12,14,0,9,13,11,15],
[14,11,8,12,0,11,12,9],
[12,12,9,8,10,0,8,9],
[13,12,11,10,9,13,0,14],
[13,11,8,6,12,12,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,10,11,9,8,5],
[11,0,6,9,12,8,8,6],
[13,15,0,13,14,17,14,10],
[11,12,8,0,11,11,11,10],
[10,9,7,10,0,12,10,7],
[12,13,4,10,9,0,9,8],
[13,13,7,10,11,12,0,11],
[16,15,11,11,14,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,8,11,5,11,14],
[9,0,6,4,9,4,9,10],
[13,15,0,7,11,8,7,11],
[13,17,14,0,17,10,13,13],
[10,12,10,4,0,6,12,10],
[16,17,13,11,15,0,11,10],
[10,12,14,8,9,10,0,15],
[7,11,10,8,11,11,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,10,9,13,8,15],
[8,0,14,10,4,10,7,9],
[4,7,0,5,8,10,7,11],
[11,11,16,0,11,8,11,13],
[12,17,13,10,0,13,10,18],
[8,11,11,13,8,0,6,8],
[13,14,14,10,11,15,0,14],
[6,12,10,8,3,13,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,6,8,9,11,8],
[14,0,14,11,11,15,10,9],
[12,7,0,6,5,16,9,5],
[15,10,15,0,12,18,15,11],
[13,10,16,9,0,15,8,7],
[12,6,5,3,6,0,8,6],
[10,11,12,6,13,13,0,13],
[13,12,16,10,14,15,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,8,11,12,9,12],
[13,0,8,11,14,13,12,11],
[12,13,0,13,10,12,13,10],
[13,10,8,0,7,8,9,8],
[10,7,11,14,0,15,9,10],
[9,8,9,13,6,0,9,9],
[12,9,8,12,12,12,0,10],
[9,10,11,13,11,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,5,9,5,14,18],
[10,0,10,5,9,8,14,15],
[11,11,0,11,7,13,11,14],
[16,16,10,0,12,13,19,16],
[12,12,14,9,0,14,9,12],
[16,13,8,8,7,0,14,19],
[7,7,10,2,12,7,0,10],
[3,6,7,5,9,2,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,7,11,12,8,9],
[14,0,8,14,8,17,15,12],
[11,13,0,13,10,16,13,14],
[14,7,8,0,8,11,11,8],
[10,13,11,13,0,14,11,12],
[9,4,5,10,7,0,9,7],
[13,6,8,10,10,12,0,6],
[12,9,7,13,9,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,21,13,9,14,16,12],
[8,0,11,6,8,6,5,9],
[0,10,0,5,3,13,9,5],
[8,15,16,0,7,17,15,12],
[12,13,18,14,0,10,13,13],
[7,15,8,4,11,0,4,12],
[5,16,12,6,8,17,0,12],
[9,12,16,9,8,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,11,14,10,8,12],
[9,0,13,12,12,14,12,8],
[10,8,0,10,12,12,12,7],
[10,9,11,0,11,14,11,6],
[7,9,9,10,0,8,12,8],
[11,7,9,7,13,0,9,8],
[13,9,9,10,9,12,0,11],
[9,13,14,15,13,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,13,13,7,8,8],
[11,0,13,13,13,12,17,10],
[7,8,0,12,11,11,10,12],
[8,8,9,0,13,9,12,8],
[8,8,10,8,0,9,8,7],
[14,9,10,12,12,0,14,11],
[13,4,11,9,13,7,0,8],
[13,11,9,13,14,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,9,13,13,13,12],
[6,0,6,8,7,12,11,6],
[10,15,0,11,12,13,10,9],
[12,13,10,0,9,14,16,10],
[8,14,9,12,0,13,12,11],
[8,9,8,7,8,0,13,7],
[8,10,11,5,9,8,0,7],
[9,15,12,11,10,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,7,7,9,10,10,3],
[17,0,13,7,13,15,19,12],
[14,8,0,9,12,15,15,12],
[14,14,12,0,14,15,16,10],
[12,8,9,7,0,15,14,12],
[11,6,6,6,6,0,9,6],
[11,2,6,5,7,12,0,7],
[18,9,9,11,9,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,5,12,11,4,9],
[12,0,16,16,15,16,7,13],
[11,5,0,0,8,11,8,9],
[16,5,21,0,20,20,12,14],
[9,6,13,1,0,16,5,10],
[10,5,10,1,5,0,1,10],
[17,14,13,9,16,20,0,18],
[12,8,12,7,11,11,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,10,10,8,3,8],
[11,0,8,11,11,11,10,7],
[6,13,0,6,10,10,6,3],
[11,10,15,0,11,8,7,11],
[11,10,11,10,0,9,7,7],
[13,10,11,13,12,0,10,7],
[18,11,15,14,14,11,0,10],
[13,14,18,10,14,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,9,8,10,5,9],
[11,0,14,12,9,11,11,13],
[13,7,0,9,10,10,9,11],
[12,9,12,0,10,13,8,12],
[13,12,11,11,0,17,8,13],
[11,10,11,8,4,0,7,5],
[16,10,12,13,13,14,0,13],
[12,8,10,9,8,16,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,18,11,9,13,17],
[7,0,9,16,9,9,11,12],
[10,12,0,18,10,12,10,9],
[3,5,3,0,3,5,0,7],
[10,12,11,18,0,12,16,12],
[12,12,9,16,9,0,7,11],
[8,10,11,21,5,14,0,12],
[4,9,12,14,9,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,9,8,15,11,9],
[7,0,10,6,8,10,9,9],
[10,11,0,9,11,11,8,9],
[12,15,12,0,13,16,10,8],
[13,13,10,8,0,14,11,8],
[6,11,10,5,7,0,10,6],
[10,12,13,11,10,11,0,11],
[12,12,12,13,13,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,12,17,21,12,15],
[15,0,21,21,21,21,10,15],
[15,0,0,10,21,15,10,15],
[9,0,11,0,15,15,10,15],
[4,0,0,6,0,15,10,15],
[0,0,6,6,6,0,0,0],
[9,11,11,11,11,21,0,9],
[6,6,6,6,6,21,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,12,17,15,10,8],
[5,0,13,9,10,12,8,9],
[8,8,0,9,7,7,9,8],
[9,12,12,0,12,11,6,7],
[4,11,14,9,0,9,11,11],
[6,9,14,10,12,0,13,8],
[11,13,12,15,10,8,0,11],
[13,12,13,14,10,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,12,11,10,12,17],
[13,0,10,12,9,9,7,14],
[11,11,0,12,12,12,8,11],
[9,9,9,0,10,9,9,11],
[10,12,9,11,0,10,10,13],
[11,12,9,12,11,0,12,13],
[9,14,13,12,11,9,0,14],
[4,7,10,10,8,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,6,1,7,7,6,6],
[11,0,7,1,1,7,4,4],
[15,14,0,7,14,10,8,7],
[20,20,14,0,17,13,10,10],
[14,20,7,4,0,13,7,6],
[14,14,11,8,8,0,11,11],
[15,17,13,11,14,10,0,14],
[15,17,14,11,15,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,9,9,12,12,11],
[9,0,12,10,9,12,13,7],
[10,9,0,10,10,12,14,8],
[12,11,11,0,13,15,13,9],
[12,12,11,8,0,12,15,9],
[9,9,9,6,9,0,14,8],
[9,8,7,8,6,7,0,8],
[10,14,13,12,12,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,2,11,11,8,6,7,4],
[19,0,17,14,14,11,11,7],
[10,4,0,8,10,2,5,3],
[10,7,13,0,11,2,5,5],
[13,7,11,10,0,5,7,6],
[15,10,19,19,16,0,8,12],
[14,10,16,16,14,13,0,11],
[17,14,18,16,15,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,10,9,12,12,11],
[8,0,11,11,13,11,13,4],
[10,10,0,8,10,11,11,9],
[11,10,13,0,12,10,13,7],
[12,8,11,9,0,8,8,7],
[9,10,10,11,13,0,14,7],
[9,8,10,8,13,7,0,3],
[10,17,12,14,14,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,8,8,4,9,4,13],
[18,0,12,7,12,10,11,19],
[13,9,0,9,10,11,10,14],
[13,14,12,0,14,9,10,16],
[17,9,11,7,0,11,16,16],
[12,11,10,12,10,0,8,13],
[17,10,11,11,5,13,0,14],
[8,2,7,5,5,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,9,6,9,6,8,8],
[17,0,13,12,11,9,14,12],
[12,8,0,9,14,11,11,10],
[15,9,12,0,12,9,13,14],
[12,10,7,9,0,9,9,9],
[15,12,10,12,12,0,11,15],
[13,7,10,8,12,10,0,11],
[13,9,11,7,12,6,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,9,11,15,9,13],
[6,0,10,4,11,12,8,13],
[10,11,0,9,12,13,5,10],
[12,17,12,0,10,13,11,16],
[10,10,9,11,0,13,10,10],
[6,9,8,8,8,0,9,8],
[12,13,16,10,11,12,0,15],
[8,8,11,5,11,13,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,5,7,4,4,7,8],
[18,0,12,10,12,9,13,10],
[16,9,0,12,9,10,13,7],
[14,11,9,0,10,9,13,10],
[17,9,12,11,0,7,13,12],
[17,12,11,12,14,0,12,10],
[14,8,8,8,8,9,0,7],
[13,11,14,11,9,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,12,12,9,13,9],
[11,0,10,12,12,8,11,9],
[10,11,0,11,13,12,9,9],
[9,9,10,0,10,10,10,7],
[9,9,8,11,0,7,7,11],
[12,13,9,11,14,0,11,9],
[8,10,12,11,14,10,0,9],
[12,12,12,14,10,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,11,8,13,8,10],
[14,0,14,15,9,12,11,13],
[9,7,0,11,12,8,11,8],
[10,6,10,0,10,11,10,8],
[13,12,9,11,0,10,11,9],
[8,9,13,10,11,0,12,10],
[13,10,10,11,10,9,0,8],
[11,8,13,13,12,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,13,9,6,12,12],
[10,0,12,14,4,5,7,5],
[6,9,0,9,11,5,8,7],
[8,7,12,0,7,1,10,7],
[12,17,10,14,0,13,15,13],
[15,16,16,20,8,0,16,13],
[9,14,13,11,6,5,0,8],
[9,16,14,14,8,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,10,14,9,18,9],
[11,0,12,10,12,8,17,10],
[6,9,0,8,8,8,14,8],
[11,11,13,0,15,11,14,8],
[7,9,13,6,0,5,16,3],
[12,13,13,10,16,0,17,12],
[3,4,7,7,5,4,0,1],
[12,11,13,13,18,9,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,10,6,10,6,8],
[13,0,15,10,10,13,11,12],
[10,6,0,9,8,7,7,10],
[11,11,12,0,8,9,10,13],
[15,11,13,13,0,9,9,11],
[11,8,14,12,12,0,9,12],
[15,10,14,11,12,12,0,12],
[13,9,11,8,10,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,11,12,12,7,9],
[7,0,11,4,9,8,5,8],
[11,10,0,10,7,10,7,10],
[10,17,11,0,9,14,11,7],
[9,12,14,12,0,12,9,11],
[9,13,11,7,9,0,8,10],
[14,16,14,10,12,13,0,10],
[12,13,11,14,10,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,11,8,17,10,14],
[10,0,10,11,12,17,11,18],
[7,11,0,9,10,10,9,12],
[10,10,12,0,13,12,9,15],
[13,9,11,8,0,12,11,10],
[4,4,11,9,9,0,8,7],
[11,10,12,12,10,13,0,10],
[7,3,9,6,11,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,3,11,4,2,6,9],
[15,0,4,14,7,8,13,9],
[18,17,0,16,10,11,12,14],
[10,7,5,0,7,6,10,9],
[17,14,11,14,0,9,11,9],
[19,13,10,15,12,0,15,15],
[15,8,9,11,10,6,0,7],
[12,12,7,12,12,6,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,6,11,9,8,7],
[14,0,12,12,11,14,10,9],
[16,9,0,13,15,16,10,13],
[15,9,8,0,14,13,8,8],
[10,10,6,7,0,9,6,7],
[12,7,5,8,12,0,8,8],
[13,11,11,13,15,13,0,7],
[14,12,8,13,14,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,10,12,14,12,6],
[11,0,17,13,11,17,13,9],
[9,4,0,4,8,9,4,9],
[11,8,17,0,11,13,11,11],
[9,10,13,10,0,17,11,9],
[7,4,12,8,4,0,6,7],
[9,8,17,10,10,15,0,11],
[15,12,12,10,12,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,10,12,11,9,9,8],
[15,0,12,14,11,13,10,9],
[11,9,0,9,10,12,10,11],
[9,7,12,0,8,13,11,13],
[10,10,11,13,0,7,8,9],
[12,8,9,8,14,0,9,14],
[12,11,11,10,13,12,0,12],
[13,12,10,8,12,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,10,10,10,4,10,10],
[17,0,10,16,12,12,12,12],
[11,11,0,16,11,6,12,6],
[11,5,5,0,5,6,0,0],
[11,9,10,16,0,10,6,10],
[17,9,15,15,11,0,11,15],
[11,9,9,21,15,10,0,15],
[11,9,15,21,11,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,0,15,0,15,6,14],
[13,0,13,13,6,21,13,14],
[21,8,0,15,14,21,21,14],
[6,8,6,0,6,14,6,14],
[21,15,7,15,0,15,13,21],
[6,0,0,7,6,0,6,14],
[15,8,0,15,8,15,0,8],
[7,7,7,7,0,7,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,12,14,11,11,10],
[10,0,11,9,10,13,12,13],
[7,10,0,9,11,9,10,11],
[9,12,12,0,10,9,9,10],
[7,11,10,11,0,8,8,9],
[10,8,12,12,13,0,12,9],
[10,9,11,12,13,9,0,10],
[11,8,10,11,12,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,12,10,13,9,9,12],
[16,0,12,11,10,14,7,14],
[9,9,0,13,10,11,12,12],
[11,10,8,0,9,10,8,7],
[8,11,11,12,0,8,11,9],
[12,7,10,11,13,0,10,14],
[12,14,9,13,10,11,0,12],
[9,7,9,14,12,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,14,15,10,11,15],
[6,0,10,10,9,6,3,3],
[3,11,0,14,10,10,0,4],
[7,11,7,0,7,10,4,4],
[6,12,11,14,0,7,4,4],
[11,15,11,11,14,0,8,8],
[10,18,21,17,17,13,0,11],
[6,18,17,17,17,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,9,5,9,8,10,9],
[15,0,14,9,12,12,12,12],
[12,7,0,8,10,9,9,10],
[16,12,13,0,13,10,14,14],
[12,9,11,8,0,9,11,11],
[13,9,12,11,12,0,12,13],
[11,9,12,7,10,9,0,10],
[12,9,11,7,10,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,4,9,7,9,5,11],
[11,0,7,15,14,15,9,17],
[17,14,0,17,10,16,12,13],
[12,6,4,0,7,5,1,11],
[14,7,11,14,0,15,9,8],
[12,6,5,16,6,0,9,10],
[16,12,9,20,12,12,0,16],
[10,4,8,10,13,11,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,6,9,12,18,12,18],
[9,0,12,6,15,6,12,21],
[15,9,0,15,15,15,12,21],
[12,15,6,0,9,15,9,21],
[9,6,6,12,0,12,12,18],
[3,15,6,6,9,0,12,18],
[9,9,9,12,9,9,0,18],
[3,0,0,0,3,3,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,11,10,11,10,12],
[9,0,8,10,8,6,9,9],
[14,13,0,13,11,11,13,10],
[10,11,8,0,11,13,11,11],
[11,13,10,10,0,9,9,13],
[10,15,10,8,12,0,13,13],
[11,12,8,10,12,8,0,11],
[9,12,11,10,8,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,11,9,12,12,10],
[9,0,10,9,11,10,14,8],
[7,11,0,12,10,12,12,9],
[10,12,9,0,12,16,11,12],
[12,10,11,9,0,14,9,11],
[9,11,9,5,7,0,8,6],
[9,7,9,10,12,13,0,8],
[11,13,12,9,10,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,10,7,17,8,14],
[10,0,8,9,9,12,13,11],
[8,13,0,9,8,12,8,6],
[11,12,12,0,8,14,10,11],
[14,12,13,13,0,14,11,9],
[4,9,9,7,7,0,8,7],
[13,8,13,11,10,13,0,12],
[7,10,15,10,12,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,3,4,9,0,10,4],
[17,0,13,10,15,15,13,13],
[18,8,0,14,14,9,15,8],
[17,11,7,0,19,13,17,11],
[12,6,7,2,0,9,8,6],
[21,6,12,8,12,0,14,14],
[11,8,6,4,13,7,0,2],
[17,8,13,10,15,7,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,11,11,12,17,8],
[10,0,11,12,15,9,9,16],
[7,10,0,15,11,7,16,10],
[10,9,6,0,13,12,16,8],
[10,6,10,8,0,7,12,11],
[9,12,14,9,14,0,18,15],
[4,12,5,5,9,3,0,10],
[13,5,11,13,10,6,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,14,10,11,11,12],
[9,0,10,9,10,9,9,12],
[13,11,0,11,9,7,11,8],
[7,12,10,0,10,12,9,11],
[11,11,12,11,0,6,11,10],
[10,12,14,9,15,0,13,17],
[10,12,10,12,10,8,0,14],
[9,9,13,10,11,4,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,18,8,13,13,8],
[11,0,13,15,7,8,11,6],
[5,8,0,16,3,6,8,9],
[3,6,5,0,3,3,3,4],
[13,14,18,18,0,9,13,11],
[8,13,15,18,12,0,15,12],
[8,10,13,18,8,6,0,11],
[13,15,12,17,10,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,11,10,13,12,5],
[10,0,12,13,10,11,7,5],
[12,9,0,11,10,10,11,11],
[10,8,10,0,8,8,11,9],
[11,11,11,13,0,9,11,10],
[8,10,11,13,12,0,7,9],
[9,14,10,10,10,14,0,8],
[16,16,10,12,11,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,3,6,7,4,6],
[14,0,11,8,10,9,11,14],
[16,10,0,11,10,12,11,13],
[18,13,10,0,12,13,15,16],
[15,11,11,9,0,10,10,12],
[14,12,9,8,11,0,11,13],
[17,10,10,6,11,10,0,14],
[15,7,8,5,9,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,9,9,11,10,10],
[12,0,13,10,8,8,11,9],
[9,8,0,9,7,8,8,10],
[12,11,12,0,11,11,12,10],
[12,13,14,10,0,11,13,9],
[10,13,13,10,10,0,11,11],
[11,10,13,9,8,10,0,11],
[11,12,11,11,12,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,17,21,17,12,21,13],
[13,0,17,21,13,8,17,13],
[4,4,0,12,9,8,12,9],
[0,0,9,0,5,4,8,9],
[4,8,12,16,0,12,16,12],
[9,13,13,17,9,0,9,5],
[0,4,9,13,5,12,0,5],
[8,8,12,12,9,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,11,10,9,9,10],
[13,0,5,7,12,9,7,10],
[14,16,0,9,12,11,13,13],
[10,14,12,0,10,9,11,11],
[11,9,9,11,0,8,11,10],
[12,12,10,12,13,0,11,12],
[12,14,8,10,10,10,0,10],
[11,11,8,10,11,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,10,10,9,0,4],
[12,0,11,12,6,5,6,12],
[12,10,0,16,12,15,6,10],
[11,9,5,0,0,5,5,10],
[11,15,9,21,0,9,11,15],
[12,16,6,16,12,0,12,16],
[21,15,15,16,10,9,0,10],
[17,9,11,11,6,5,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,12,13,17,20,15],
[11,0,9,14,13,16,20,15],
[12,12,0,12,12,12,12,6],
[9,7,9,0,13,12,16,6],
[8,8,9,8,0,17,13,11],
[4,5,9,9,4,0,15,5],
[1,1,9,5,8,6,0,8],
[6,6,15,15,10,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,12,15,10,14,12],
[8,0,11,8,12,9,16,12],
[10,10,0,7,13,8,19,12],
[9,13,14,0,15,13,18,12],
[6,9,8,6,0,9,11,10],
[11,12,13,8,12,0,14,14],
[7,5,2,3,10,7,0,7],
[9,9,9,9,11,7,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,7,10,13,15,7],
[11,0,11,8,6,11,13,12],
[12,10,0,12,12,18,17,11],
[14,13,9,0,14,12,14,15],
[11,15,9,7,0,12,15,12],
[8,10,3,9,9,0,9,6],
[6,8,4,7,6,12,0,7],
[14,9,10,6,9,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,14,19,15,15,13],
[9,0,6,11,12,12,9,10],
[11,15,0,10,15,15,10,16],
[7,10,11,0,17,15,14,13],
[2,9,6,4,0,11,11,10],
[6,9,6,6,10,0,12,9],
[6,12,11,7,10,9,0,13],
[8,11,5,8,11,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,12,5,9,9,8,9],
[21,0,21,9,13,13,12,13],
[9,0,0,0,4,5,3,9],
[16,12,21,0,8,13,7,13],
[12,8,17,13,0,17,13,17],
[12,8,16,8,4,0,3,12],
[13,9,18,14,8,18,0,18],
[12,8,12,8,4,9,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,9,10,11,10,9],
[10,0,5,7,7,10,6,9],
[10,16,0,12,13,12,13,14],
[12,14,9,0,11,12,13,10],
[11,14,8,10,0,12,10,10],
[10,11,9,9,9,0,12,8],
[11,15,8,8,11,9,0,11],
[12,12,7,11,11,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,8,8,16,10,11],
[13,0,11,8,11,16,7,14],
[13,10,0,12,7,13,12,13],
[13,13,9,0,7,16,12,16],
[13,10,14,14,0,16,10,16],
[5,5,8,5,5,0,7,8],
[11,14,9,9,11,14,0,14],
[10,7,8,5,5,13,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,8,20,13,16,18,13],
[6,0,12,16,9,15,11,15],
[13,9,0,16,9,15,17,10],
[1,5,5,0,8,6,9,9],
[8,12,12,13,0,9,13,12],
[5,6,6,15,12,0,15,8],
[3,10,4,12,8,6,0,8],
[8,6,11,12,9,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,8,12,8,13,8],
[8,0,8,6,11,7,8,12],
[5,13,0,3,8,9,8,9],
[13,15,18,0,13,17,10,14],
[9,10,13,8,0,7,10,1],
[13,14,12,4,14,0,9,6],
[8,13,13,11,11,12,0,12],
[13,9,12,7,20,15,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,9,8,12,17,16],
[13,0,16,11,8,12,15,15],
[11,5,0,8,8,9,14,9],
[12,10,13,0,8,10,17,14],
[13,13,13,13,0,10,15,16],
[9,9,12,11,11,0,15,17],
[4,6,7,4,6,6,0,8],
[5,6,12,7,5,4,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,11,13,11,8,10],
[12,0,6,9,11,9,7,8],
[14,15,0,15,15,12,12,10],
[10,12,6,0,12,10,9,9],
[8,10,6,9,0,9,6,8],
[10,12,9,11,12,0,11,7],
[13,14,9,12,15,10,0,12],
[11,13,11,12,13,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,11,9,15,12,7],
[10,0,13,13,11,14,14,10],
[12,8,0,11,8,15,14,7],
[10,8,10,0,5,13,14,8],
[12,10,13,16,0,16,17,11],
[6,7,6,8,5,0,13,7],
[9,7,7,7,4,8,0,6],
[14,11,14,13,10,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,9,11,5,12,9],
[9,0,9,6,7,5,9,8],
[9,12,0,12,13,10,12,11],
[12,15,9,0,8,11,8,10],
[10,14,8,13,0,11,10,10],
[16,16,11,10,10,0,12,13],
[9,12,9,13,11,9,0,7],
[12,13,10,11,11,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,2,5,12,11,6,12],
[11,0,5,3,10,11,9,15],
[19,16,0,14,12,13,9,11],
[16,18,7,0,11,13,8,14],
[9,11,9,10,0,15,11,14],
[10,10,8,8,6,0,4,12],
[15,12,12,13,10,17,0,13],
[9,6,10,7,7,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,12,7,8,11,4],
[9,0,9,7,6,10,12,6],
[9,12,0,5,4,10,9,8],
[9,14,16,0,11,12,9,8],
[14,15,17,10,0,16,11,11],
[13,11,11,9,5,0,13,5],
[10,9,12,12,10,8,0,3],
[17,15,13,13,10,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,9,7,9,11,6],
[14,0,14,8,10,15,11,10],
[13,7,0,9,10,9,12,10],
[12,13,12,0,10,12,12,11],
[14,11,11,11,0,12,10,9],
[12,6,12,9,9,0,11,8],
[10,10,9,9,11,10,0,7],
[15,11,11,10,12,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,6,21,13,6,14,14],
[8,0,6,21,14,14,14,14],
[15,15,0,21,21,8,21,21],
[0,0,0,0,0,0,14,8],
[8,7,0,21,0,0,14,14],
[15,7,13,21,21,0,21,21],
[7,7,0,7,7,0,0,7],
[7,7,0,13,7,0,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,15,12,11,14,12],
[14,0,10,14,12,11,13,16],
[9,11,0,19,19,10,17,20],
[6,7,2,0,12,4,8,13],
[9,9,2,9,0,4,13,16],
[10,10,11,17,17,0,13,16],
[7,8,4,13,8,8,0,7],
[9,5,1,8,5,5,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,5,2,13,10,8,9],
[12,0,8,12,12,11,15,9],
[16,13,0,9,17,11,9,13],
[19,9,12,0,11,15,21,12],
[8,9,4,10,0,7,13,10],
[11,10,10,6,14,0,9,6],
[13,6,12,0,8,12,0,6],
[12,12,8,9,11,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,12,8,11,12,14],
[8,0,6,8,4,11,9,9],
[11,15,0,11,10,9,11,15],
[9,13,10,0,11,10,11,14],
[13,17,11,10,0,11,11,13],
[10,10,12,11,10,0,13,11],
[9,12,10,10,10,8,0,12],
[7,12,6,7,8,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,9,7,13,13,12,9],
[18,0,9,10,17,16,15,12],
[12,12,0,3,12,12,12,9],
[14,11,18,0,15,20,15,10],
[8,4,9,6,0,6,8,6],
[8,5,9,1,15,0,11,6],
[9,6,9,6,13,10,0,7],
[12,9,12,11,15,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,16,12,10,11,12],
[6,0,10,16,6,16,6,12],
[5,11,0,16,12,15,5,17],
[5,5,5,0,0,11,5,11],
[9,15,9,21,0,15,5,17],
[11,5,6,10,6,0,5,11],
[10,15,16,16,16,16,0,12],
[9,9,4,10,4,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,13,13,8,11,10],
[10,0,15,11,12,11,11,12],
[7,6,0,9,10,7,10,10],
[8,10,12,0,11,11,10,8],
[8,9,11,10,0,8,7,7],
[13,10,14,10,13,0,13,12],
[10,10,11,11,14,8,0,9],
[11,9,11,13,14,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,14,12,11,11,10],
[9,0,8,10,11,8,7,9],
[8,13,0,14,11,11,10,11],
[7,11,7,0,9,6,7,7],
[9,10,10,12,0,13,8,13],
[10,13,10,15,8,0,9,12],
[10,14,11,14,13,12,0,13],
[11,12,10,14,8,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,15,12,14,9,6],
[8,0,7,14,10,6,9,7],
[13,14,0,16,10,16,13,17],
[6,7,5,0,8,7,4,8],
[9,11,11,13,0,8,6,9],
[7,15,5,14,13,0,7,9],
[12,12,8,17,15,14,0,14],
[15,14,4,13,12,12,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,8,11,10,13,13],
[13,0,10,10,9,13,11,13],
[12,11,0,11,12,15,14,9],
[13,11,10,0,11,12,10,13],
[10,12,9,10,0,11,12,11],
[11,8,6,9,10,0,8,12],
[8,10,7,11,9,13,0,10],
[8,8,12,8,10,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,12,10,13,16,11],
[11,0,8,11,12,10,10,6],
[6,13,0,7,7,9,10,7],
[9,10,14,0,10,10,12,11],
[11,9,14,11,0,11,12,8],
[8,11,12,11,10,0,10,10],
[5,11,11,9,9,11,0,5],
[10,15,14,10,13,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,13,10,10,10,14],
[8,0,11,12,13,12,11,13],
[11,10,0,12,12,10,10,11],
[8,9,9,0,9,11,12,10],
[11,8,9,12,0,9,10,14],
[11,9,11,10,12,0,12,14],
[11,10,11,9,11,9,0,12],
[7,8,10,11,7,7,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,15,10,15,3,3,3],
[13,0,15,13,12,10,9,7],
[6,6,0,13,11,6,9,6],
[11,8,8,0,8,3,3,3],
[6,9,10,13,0,9,9,6],
[18,11,15,18,12,0,9,13],
[18,12,12,18,12,12,0,7],
[18,14,15,18,15,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,9,12,8,9,9],
[12,0,6,9,8,7,9,9],
[9,15,0,10,11,9,9,10],
[12,12,11,0,12,11,10,12],
[9,13,10,9,0,13,12,11],
[13,14,12,10,8,0,10,10],
[12,12,12,11,9,11,0,12],
[12,12,11,9,10,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,11,10,11,11,6],
[12,0,15,10,9,15,14,10],
[10,6,0,10,7,11,12,8],
[10,11,11,0,11,16,16,6],
[11,12,14,10,0,16,15,11],
[10,6,10,5,5,0,6,6],
[10,7,9,5,6,15,0,9],
[15,11,13,15,10,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,9,9,8,11,9],
[10,0,9,8,4,8,9,7],
[6,12,0,9,8,8,9,8],
[12,13,12,0,10,12,14,9],
[12,17,13,11,0,9,11,8],
[13,13,13,9,12,0,14,13],
[10,12,12,7,10,7,0,9],
[12,14,13,12,13,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,7,13,15,11,9],
[8,0,13,9,11,6,10,12],
[8,8,0,11,10,10,10,12],
[14,12,10,0,14,10,16,18],
[8,10,11,7,0,8,10,14],
[6,15,11,11,13,0,12,14],
[10,11,11,5,11,9,0,16],
[12,9,9,3,7,7,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,13,6,6,6,7],
[15,0,0,13,14,6,6,7],
[15,21,0,21,21,13,21,7],
[8,8,0,0,14,6,14,0],
[15,7,0,7,0,13,6,7],
[15,15,8,15,8,0,8,15],
[15,15,0,7,15,13,0,7],
[14,14,14,21,14,6,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,21,13,21,21,15,6],
[7,0,21,7,21,21,15,13],
[0,0,0,0,8,21,7,6],
[8,14,21,0,21,21,15,6],
[0,0,13,0,0,13,7,6],
[0,0,0,0,8,0,7,0],
[6,6,14,6,14,14,0,6],
[15,8,15,15,15,21,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,6,10,11,8,11],
[10,0,10,10,8,8,10,6],
[12,11,0,11,12,12,9,9],
[15,11,10,0,15,15,9,12],
[11,13,9,6,0,9,7,13],
[10,13,9,6,12,0,10,7],
[13,11,12,12,14,11,0,10],
[10,15,12,9,8,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,10,15,19,12,9],
[7,0,13,9,13,13,5,8],
[7,8,0,7,8,8,6,11],
[11,12,14,0,11,14,9,17],
[6,8,13,10,0,15,3,8],
[2,8,13,7,6,0,6,9],
[9,16,15,12,18,15,0,8],
[12,13,10,4,13,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,10,12,10,11,10],
[13,0,17,10,16,14,13,16],
[8,4,0,9,10,9,7,7],
[11,11,12,0,14,12,10,16],
[9,5,11,7,0,6,10,7],
[11,7,12,9,15,0,13,12],
[10,8,14,11,11,8,0,10],
[11,5,14,5,14,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,7,11,12,9,7],
[11,0,9,11,10,12,11,11],
[10,12,0,12,12,12,12,8],
[14,10,9,0,8,9,9,6],
[10,11,9,13,0,6,11,9],
[9,9,9,12,15,0,11,8],
[12,10,9,12,10,10,0,11],
[14,10,13,15,12,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,9,9,8,4,11,7],
[14,0,14,7,6,12,16,12],
[12,7,0,12,9,7,14,10],
[12,14,9,0,14,12,13,12],
[13,15,12,7,0,13,14,12],
[17,9,14,9,8,0,14,10],
[10,5,7,8,7,7,0,5],
[14,9,11,9,9,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,14,13,8,11,13],
[9,0,15,15,11,12,12,16],
[8,6,0,11,5,9,9,11],
[7,6,10,0,11,7,10,9],
[8,10,16,10,0,9,8,11],
[13,9,12,14,12,0,14,12],
[10,9,12,11,13,7,0,16],
[8,5,10,12,10,9,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,4,4,8,8,0,13],
[13,0,4,4,9,9,9,13],
[17,17,0,13,17,13,9,17],
[17,17,8,0,13,13,13,17],
[13,12,4,8,0,13,9,17],
[13,12,8,8,8,0,13,13],
[21,12,12,8,12,8,0,21],
[8,8,4,4,4,8,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,14,15,14,8,17],
[8,0,15,18,8,17,14,20],
[8,6,0,14,5,9,11,14],
[7,3,7,0,4,6,6,7],
[6,13,16,17,0,18,10,20],
[7,4,12,15,3,0,7,13],
[13,7,10,15,11,14,0,11],
[4,1,7,14,1,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,6,12,9,14,11],
[10,0,12,8,12,8,13,14],
[11,9,0,12,14,11,13,11],
[15,13,9,0,11,9,12,12],
[9,9,7,10,0,11,12,12],
[12,13,10,12,10,0,12,14],
[7,8,8,9,9,9,0,10],
[10,7,10,9,9,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,12,12,10,11,12],
[13,0,7,15,15,12,9,15],
[11,14,0,15,13,9,7,16],
[9,6,6,0,14,5,5,13],
[9,6,8,7,0,9,9,11],
[11,9,12,16,12,0,10,14],
[10,12,14,16,12,11,0,15],
[9,6,5,8,10,7,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,10,12,9,8,10],
[12,0,8,14,13,9,11,10],
[13,13,0,15,15,10,11,12],
[11,7,6,0,12,9,8,9],
[9,8,6,9,0,4,7,4],
[12,12,11,12,17,0,11,10],
[13,10,10,13,14,10,0,11],
[11,11,9,12,17,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,11,13,10,11,12],
[10,0,13,9,11,12,9,13],
[8,8,0,7,7,11,7,5],
[10,12,14,0,11,10,10,11],
[8,10,14,10,0,11,9,8],
[11,9,10,11,10,0,9,10],
[10,12,14,11,12,12,0,11],
[9,8,16,10,13,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,11,11,12,9,10],
[12,0,11,11,13,13,10,11],
[8,10,0,11,13,12,11,13],
[10,10,10,0,12,12,8,12],
[10,8,8,9,0,11,10,8],
[9,8,9,9,10,0,13,10],
[12,11,10,13,11,8,0,11],
[11,10,8,9,13,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,12,10,11,13,15],
[9,0,12,10,6,9,12,12],
[8,9,0,7,8,4,5,11],
[9,11,14,0,8,8,13,10],
[11,15,13,13,0,10,12,16],
[10,12,17,13,11,0,14,13],
[8,9,16,8,9,7,0,12],
[6,9,10,11,5,8,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,14,14,21,14,14,21],
[14,0,7,7,14,7,14,14],
[7,14,0,14,21,14,14,21],
[7,14,7,0,21,14,14,14],
[0,7,0,0,0,7,7,14],
[7,14,7,7,14,0,7,14],
[7,7,7,7,14,14,0,7],
[0,7,0,7,7,7,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,7,13,7,13,11],
[12,0,10,12,12,9,14,10],
[10,11,0,6,7,11,15,13],
[14,9,15,0,11,11,15,13],
[8,9,14,10,0,13,12,8],
[14,12,10,10,8,0,14,10],
[8,7,6,6,9,7,0,9],
[10,11,8,8,13,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,6,10,16,12,10],
[11,0,7,4,8,15,4,5],
[9,14,0,7,6,8,5,11],
[15,17,14,0,10,15,9,12],
[11,13,15,11,0,13,12,10],
[5,6,13,6,8,0,10,8],
[9,17,16,12,9,11,0,17],
[11,16,10,9,11,13,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,4,10,8,6,10],
[15,0,11,11,15,7,7,8],
[15,10,0,0,4,7,2,4],
[17,10,21,0,21,11,13,10],
[11,6,17,0,0,7,9,10],
[13,14,14,10,14,0,10,18],
[15,14,19,8,12,11,0,8],
[11,13,17,11,11,3,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,9,14,14,11,10],
[7,0,13,11,12,12,11,11],
[9,8,0,6,10,8,8,7],
[12,10,15,0,14,11,11,11],
[7,9,11,7,0,13,10,13],
[7,9,13,10,8,0,9,14],
[10,10,13,10,11,12,0,9],
[11,10,14,10,8,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,4,9,8,6,2,0],
[17,0,4,19,12,8,8,13],
[17,17,0,17,13,10,13,13],
[12,2,4,0,6,6,2,4],
[13,9,8,15,0,4,7,9],
[15,13,11,15,17,0,15,9],
[19,13,8,19,14,6,0,13],
[21,8,8,17,12,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,3,8,8,5,4],
[13,0,9,7,8,6,7,5],
[12,12,0,10,11,8,10,8],
[18,14,11,0,7,13,10,7],
[13,13,10,14,0,8,6,2],
[13,15,13,8,13,0,14,12],
[16,14,11,11,15,7,0,13],
[17,16,13,14,19,9,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,7,12,14,8,13,14],
[15,0,11,13,15,11,10,17],
[14,10,0,14,17,7,8,14],
[9,8,7,0,12,7,10,13],
[7,6,4,9,0,7,7,7],
[13,10,14,14,14,0,7,13],
[8,11,13,11,14,14,0,15],
[7,4,7,8,14,8,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,13,13,14,11,10],
[8,0,17,17,16,13,5,17],
[8,4,0,14,13,10,5,14],
[8,4,7,0,4,8,1,7],
[8,5,8,17,0,4,5,17],
[7,8,11,13,17,0,5,17],
[10,16,16,20,16,16,0,16],
[11,4,7,14,4,4,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,10,11,10,13,13],
[10,0,12,12,9,11,14,10],
[11,9,0,12,12,11,11,12],
[11,9,9,0,12,11,12,11],
[10,12,9,9,0,10,13,10],
[11,10,10,10,11,0,12,13],
[8,7,10,9,8,9,0,11],
[8,11,9,10,11,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,6,0,7,0,0,0],
[21,0,21,13,15,13,13,7],
[15,0,0,0,7,0,0,0],
[21,8,21,0,15,14,14,15],
[14,6,14,6,0,6,6,0],
[21,8,21,7,15,0,21,7],
[21,8,21,7,15,0,0,7],
[21,14,21,6,21,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,9,12,7,4,10],
[12,0,9,9,7,10,7,10],
[10,12,0,10,16,11,4,7],
[12,12,11,0,16,11,8,7],
[9,14,5,5,0,9,6,9],
[14,11,10,10,12,0,8,11],
[17,14,17,13,15,13,0,9],
[11,11,14,14,12,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,12,7,11,12,14],
[14,0,12,11,11,10,15,15],
[13,9,0,12,6,9,14,14],
[9,10,9,0,8,10,14,11],
[14,10,15,13,0,10,13,14],
[10,11,12,11,11,0,11,8],
[9,6,7,7,8,10,0,7],
[7,6,7,10,7,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,6,5,11,9,1],
[8,0,13,6,6,10,11,5],
[9,8,0,2,6,9,10,6],
[15,15,19,0,13,17,16,8],
[16,15,15,8,0,16,13,11],
[10,11,12,4,5,0,9,5],
[12,10,11,5,8,12,0,5],
[20,16,15,13,10,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,12,12,9,8,15],
[5,0,9,10,6,7,5,8],
[6,12,0,10,6,4,6,9],
[9,11,11,0,7,12,14,12],
[9,15,15,14,0,11,14,15],
[12,14,17,9,10,0,9,12],
[13,16,15,7,7,12,0,16],
[6,13,12,9,6,9,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,11,14,4,9,10],
[8,0,5,3,10,3,5,6],
[10,16,0,9,14,12,11,10],
[10,18,12,0,19,12,17,15],
[7,11,7,2,0,5,4,7],
[17,18,9,9,16,0,13,10],
[12,16,10,4,17,8,0,13],
[11,15,11,6,14,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,9,9,12,8,8,9],
[16,0,13,11,14,12,11,10],
[12,8,0,12,10,9,11,11],
[12,10,9,0,12,9,10,9],
[9,7,11,9,0,8,6,4],
[13,9,12,12,13,0,10,11],
[13,10,10,11,15,11,0,9],
[12,11,10,12,17,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,13,13,9,9,10],
[8,0,7,5,17,4,5,6],
[12,14,0,7,11,4,11,11],
[8,16,14,0,13,11,10,13],
[8,4,10,8,0,4,8,3],
[12,17,17,10,17,0,11,17],
[12,16,10,11,13,10,0,13],
[11,15,10,8,18,4,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,21,21,21,14,9,21],
[7,0,16,12,21,21,16,21],
[0,5,0,5,14,14,9,5],
[0,9,16,0,9,14,9,16],
[0,0,7,12,0,14,0,12],
[7,0,7,7,7,0,7,7],
[12,5,12,12,21,14,0,12],
[0,0,16,5,9,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,12,11,10,11,19],
[12,0,12,15,9,12,12,15],
[13,9,0,14,16,14,18,13],
[9,6,7,0,12,14,15,9],
[10,12,5,9,0,13,21,12],
[11,9,7,7,8,0,8,14],
[10,9,3,6,0,13,0,10],
[2,6,8,12,9,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,10,14,13,12,11],
[10,0,8,6,6,7,10,8],
[9,13,0,11,10,15,13,9],
[11,15,10,0,12,13,9,9],
[7,15,11,9,0,13,11,7],
[8,14,6,8,8,0,8,8],
[9,11,8,12,10,13,0,7],
[10,13,12,12,14,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,5,9,14,11,16],
[13,0,12,8,10,11,8,12],
[10,9,0,8,6,10,5,12],
[16,13,13,0,12,15,9,18],
[12,11,15,9,0,13,13,20],
[7,10,11,6,8,0,8,13],
[10,13,16,12,8,13,0,16],
[5,9,9,3,1,8,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,5,10,10,3,13],
[6,0,5,2,7,7,4,9],
[11,16,0,5,11,7,7,14],
[16,19,16,0,14,11,8,17],
[11,14,10,7,0,10,9,17],
[11,14,14,10,11,0,11,15],
[18,17,14,13,12,10,0,17],
[8,12,7,4,4,6,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,9,14,13,8,9],
[6,0,10,8,10,8,6,8],
[7,11,0,9,11,9,8,8],
[12,13,12,0,12,12,8,9],
[7,11,10,9,0,9,6,6],
[8,13,12,9,12,0,9,11],
[13,15,13,13,15,12,0,7],
[12,13,13,12,15,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,6,7,7,4,7],
[13,0,14,12,11,13,12,10],
[11,7,0,12,12,10,8,12],
[15,9,9,0,12,8,11,7],
[14,10,9,9,0,9,8,7],
[14,8,11,13,12,0,9,6],
[17,9,13,10,13,12,0,11],
[14,11,9,14,14,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,10,4,10,14,9],
[11,0,12,10,11,14,9,14],
[14,9,0,11,6,12,13,11],
[11,11,10,0,9,12,14,9],
[17,10,15,12,0,10,12,9],
[11,7,9,9,11,0,9,9],
[7,12,8,7,9,12,0,7],
[12,7,10,12,12,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,10,15,11,13,10],
[10,0,13,5,8,12,9,10],
[7,8,0,9,10,11,14,8],
[11,16,12,0,8,10,9,12],
[6,13,11,13,0,13,12,10],
[10,9,10,11,8,0,9,13],
[8,12,7,12,9,12,0,8],
[11,11,13,9,11,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,17,9,13,12,9],
[9,0,8,12,7,9,11,7],
[12,13,0,11,10,13,14,13],
[4,9,10,0,8,6,11,6],
[12,14,11,13,0,11,15,7],
[8,12,8,15,10,0,13,11],
[9,10,7,10,6,8,0,6],
[12,14,8,15,14,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,12,12,8,11,9],
[12,0,5,11,8,9,7,9],
[15,16,0,13,13,12,9,9],
[9,10,8,0,11,11,8,9],
[9,13,8,10,0,14,7,11],
[13,12,9,10,7,0,9,10],
[10,14,12,13,14,12,0,10],
[12,12,12,12,10,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,14,15,11,7,9],
[8,0,16,11,9,11,12,8],
[6,5,0,12,6,3,4,3],
[7,10,9,0,13,5,6,11],
[6,12,15,8,0,4,6,5],
[10,10,18,16,17,0,14,12],
[14,9,17,15,15,7,0,9],
[12,13,18,10,16,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,15,13,16,15,14],
[11,0,10,11,8,12,9,9],
[9,11,0,15,7,11,12,9],
[6,10,6,0,6,8,14,5],
[8,13,14,15,0,15,15,14],
[5,9,10,13,6,0,12,13],
[6,12,9,7,6,9,0,7],
[7,12,12,16,7,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,7,13,7,8,9],
[10,0,10,5,10,8,12,8],
[11,11,0,7,14,7,12,9],
[14,16,14,0,15,8,14,11],
[8,11,7,6,0,6,7,9],
[14,13,14,13,15,0,13,9],
[13,9,9,7,14,8,0,11],
[12,13,12,10,12,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,10,14,13,13,11],
[11,0,14,11,13,8,10,8],
[8,7,0,7,9,8,10,5],
[11,10,14,0,14,14,16,14],
[7,8,12,7,0,7,10,5],
[8,13,13,7,14,0,11,8],
[8,11,11,5,11,10,0,9],
[10,13,16,7,16,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,10,13,9,10,9],
[10,0,9,12,8,7,10,14],
[12,12,0,14,13,10,10,15],
[11,9,7,0,9,11,10,10],
[8,13,8,12,0,3,5,12],
[12,14,11,10,18,0,10,13],
[11,11,11,11,16,11,0,9],
[12,7,6,11,9,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,11,16,16,7,14],
[6,0,6,8,16,12,7,14],
[8,15,0,11,13,12,9,14],
[10,13,10,0,16,18,12,14],
[5,5,8,5,0,10,7,8],
[5,9,9,3,11,0,7,9],
[14,14,12,9,14,14,0,17],
[7,7,7,7,13,12,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,15,9,16,12,11],
[8,0,3,11,5,15,5,10],
[10,18,0,13,8,12,9,10],
[6,10,8,0,5,13,7,10],
[12,16,13,16,0,10,12,13],
[5,6,9,8,11,0,10,9],
[9,16,12,14,9,11,0,11],
[10,11,11,11,8,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,9,10,13,11,11],
[9,0,10,12,10,13,12,9],
[12,11,0,11,10,13,12,10],
[12,9,10,0,8,7,10,9],
[11,11,11,13,0,10,11,12],
[8,8,8,14,11,0,16,9],
[10,9,9,11,10,5,0,11],
[10,12,11,12,9,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,12,8,12,10,14],
[12,0,13,13,9,11,9,12],
[11,8,0,11,6,12,10,12],
[9,8,10,0,10,11,11,14],
[13,12,15,11,0,12,9,13],
[9,10,9,10,9,0,10,13],
[11,12,11,10,12,11,0,15],
[7,9,9,7,8,8,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,10,10,8,8,8],
[10,0,7,9,8,9,8,10],
[10,14,0,12,14,10,12,14],
[11,12,9,0,11,9,11,10],
[11,13,7,10,0,11,9,12],
[13,12,11,12,10,0,8,10],
[13,13,9,10,12,13,0,10],
[13,11,7,11,9,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,7,13,15,10,14],
[5,0,6,6,9,10,7,8],
[9,15,0,7,9,12,10,7],
[14,15,14,0,13,15,10,12],
[8,12,12,8,0,13,7,11],
[6,11,9,6,8,0,9,8],
[11,14,11,11,14,12,0,10],
[7,13,14,9,10,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,13,17,11,12,8],
[9,0,12,13,14,13,13,12],
[11,9,0,12,14,11,16,11],
[8,8,9,0,11,9,10,8],
[4,7,7,10,0,8,11,7],
[10,8,10,12,13,0,14,11],
[9,8,5,11,10,7,0,5],
[13,9,10,13,14,10,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,9,12,11,10,13],
[11,0,9,14,12,7,9,10],
[12,12,0,13,13,10,9,14],
[12,7,8,0,13,9,9,9],
[9,9,8,8,0,5,7,8],
[10,14,11,12,16,0,11,12],
[11,12,12,12,14,10,0,10],
[8,11,7,12,13,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,14,12,11,8,14],
[11,0,12,12,14,7,9,14],
[8,9,0,10,12,6,7,11],
[7,9,11,0,10,10,5,11],
[9,7,9,11,0,11,9,12],
[10,14,15,11,10,0,11,13],
[13,12,14,16,12,10,0,13],
[7,7,10,10,9,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,14,14,6,7,13],
[10,0,9,14,10,7,5,13],
[9,12,0,13,13,11,11,9],
[7,7,8,0,12,8,5,3],
[7,11,8,9,0,11,10,9],
[15,14,10,13,10,0,12,12],
[14,16,10,16,11,9,0,14],
[8,8,12,18,12,9,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,11,10,9,13,21,15],
[3,0,3,5,5,11,13,7],
[10,18,0,8,15,11,21,19],
[11,16,13,0,9,15,13,11],
[12,16,6,12,0,15,18,19],
[8,10,10,6,6,0,10,10],
[0,8,0,8,3,11,0,7],
[6,14,2,10,2,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,6,12,13,4,9,7],
[9,0,9,8,13,6,9,11],
[15,12,0,9,14,7,12,12],
[9,13,12,0,14,7,11,11],
[8,8,7,7,0,9,8,9],
[17,15,14,14,12,0,14,10],
[12,12,9,10,13,7,0,9],
[14,10,9,10,12,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,13,10,10,12,17,12],
[15,0,21,11,12,6,17,8],
[8,0,0,6,9,3,14,8],
[11,10,15,0,13,13,14,10],
[11,9,12,8,0,9,9,7],
[9,15,18,8,12,0,16,12],
[4,4,7,7,12,5,0,8],
[9,13,13,11,14,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,17,13,17,13,7],
[10,0,14,14,14,14,10,8],
[8,7,0,8,8,12,11,12],
[4,7,13,0,10,4,7,4],
[8,7,13,11,0,8,7,4],
[4,7,9,17,13,0,7,8],
[8,11,10,14,14,14,0,8],
[14,13,9,17,17,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,13,9,11,11,6],
[15,0,9,10,6,8,5,3],
[15,12,0,10,6,8,8,3],
[8,11,11,0,9,5,11,3],
[12,15,15,12,0,5,5,0],
[10,13,13,16,16,0,14,12],
[10,16,13,10,16,7,0,6],
[15,18,18,18,21,9,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,7,4,11,9,9,3],
[15,0,11,10,9,11,9,11],
[14,10,0,7,9,13,10,8],
[17,11,14,0,16,14,12,9],
[10,12,12,5,0,11,8,4],
[12,10,8,7,10,0,10,5],
[12,12,11,9,13,11,0,8],
[18,10,13,12,17,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,9,13,9,11,12],
[8,0,11,11,11,10,13,13],
[9,10,0,9,11,8,8,10],
[12,10,12,0,14,17,14,15],
[8,10,10,7,0,13,10,14],
[12,11,13,4,8,0,14,9],
[10,8,13,7,11,7,0,9],
[9,8,11,6,7,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,11,8,8,5,5],
[13,0,6,14,5,9,8,9],
[13,15,0,11,15,15,9,12],
[10,7,10,0,10,13,7,9],
[13,16,6,11,0,10,3,6],
[13,12,6,8,11,0,5,9],
[16,13,12,14,18,16,0,9],
[16,12,9,12,15,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,9,11,13,13,8],
[13,0,13,6,10,13,10,10],
[13,8,0,9,13,11,14,10],
[12,15,12,0,11,15,9,15],
[10,11,8,10,0,13,8,13],
[8,8,10,6,8,0,7,11],
[8,11,7,12,13,14,0,14],
[13,11,11,6,8,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,18,12,12,10,19],
[3,0,8,11,5,4,8,14],
[8,13,0,13,10,6,7,11],
[3,10,8,0,6,10,10,12],
[9,16,11,15,0,7,8,15],
[9,17,15,11,14,0,11,13],
[11,13,14,11,13,10,0,17],
[2,7,10,9,6,8,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,12,9,12,9,11],
[11,0,12,10,9,12,12,15],
[7,9,0,6,10,7,9,7],
[9,11,15,0,10,14,12,11],
[12,12,11,11,0,11,8,14],
[9,9,14,7,10,0,8,8],
[12,9,12,9,13,13,0,10],
[10,6,14,10,7,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,12,15,14,10,15,14],
[2,0,4,12,14,8,11,5],
[9,17,0,13,16,14,12,9],
[6,9,8,0,10,10,7,9],
[7,7,5,11,0,3,8,6],
[11,13,7,11,18,0,14,9],
[6,10,9,14,13,7,0,7],
[7,16,12,12,15,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,13,11,17,6,12],
[12,0,11,16,11,14,8,14],
[11,10,0,13,8,13,8,8],
[8,5,8,0,4,8,5,6],
[10,10,13,17,0,16,13,8],
[4,7,8,13,5,0,7,8],
[15,13,13,16,8,14,0,12],
[9,7,13,15,13,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,4,4,4,16,10,10],
[11,0,5,11,11,11,11,6],
[17,16,0,6,6,16,12,12],
[17,10,15,0,15,21,21,16],
[17,10,15,6,0,21,21,10],
[5,10,5,0,0,0,11,6],
[11,10,9,0,0,10,0,4],
[11,15,9,5,11,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,15,12,3,7,7],
[12,0,13,16,14,9,11,13],
[12,8,0,15,10,6,5,15],
[6,5,6,0,11,6,6,8],
[9,7,11,10,0,4,6,8],
[18,12,15,15,17,0,7,18],
[14,10,16,15,15,14,0,14],
[14,8,6,13,13,3,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,10,12,9,14,10],
[7,0,8,8,7,7,5,9],
[10,13,0,11,9,11,8,13],
[11,13,10,0,5,11,7,11],
[9,14,12,16,0,13,11,12],
[12,14,10,10,8,0,7,13],
[7,16,13,14,10,14,0,13],
[11,12,8,10,9,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,11,14,17,9,13],
[10,0,10,18,14,17,6,13],
[9,11,0,8,11,14,6,10],
[10,3,13,0,11,6,9,10],
[7,7,10,10,0,9,7,10],
[4,4,7,15,12,0,7,10],
[12,15,15,12,14,14,0,10],
[8,8,11,11,11,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,13,7,7,12,10],
[12,0,5,14,14,12,12,12],
[13,16,0,15,14,14,9,17],
[8,7,6,0,9,8,13,7],
[14,7,7,12,0,11,10,13],
[14,9,7,13,10,0,11,9],
[9,9,12,8,11,10,0,8],
[11,9,4,14,8,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,15,9,10,12,10],
[11,0,8,12,7,5,8,8],
[9,13,0,10,9,6,9,6],
[6,9,11,0,6,8,3,6],
[12,14,12,15,0,12,9,12],
[11,16,15,13,9,0,9,13],
[9,13,12,18,12,12,0,16],
[11,13,15,15,9,8,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,12,13,13,15,10],
[11,0,10,11,16,11,13,15],
[7,11,0,15,12,9,12,11],
[9,10,6,0,12,6,11,9],
[8,5,9,9,0,7,14,10],
[8,10,12,15,14,0,13,9],
[6,8,9,10,7,8,0,10],
[11,6,10,12,11,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,7,10,11,8,10],
[11,0,11,12,12,13,11,10],
[10,10,0,10,12,11,11,11],
[14,9,11,0,12,12,11,11],
[11,9,9,9,0,10,13,6],
[10,8,10,9,11,0,12,10],
[13,10,10,10,8,9,0,7],
[11,11,10,10,15,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,12,13,7,9,13],
[9,0,5,9,10,7,8,10],
[11,16,0,12,12,11,12,10],
[9,12,9,0,12,9,9,9],
[8,11,9,9,0,7,7,9],
[14,14,10,12,14,0,10,7],
[12,13,9,12,14,11,0,9],
[8,11,11,12,12,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,10,9,11,7,9],
[9,0,11,9,10,10,11,9],
[12,10,0,9,11,12,9,7],
[11,12,12,0,9,12,11,6],
[12,11,10,12,0,13,6,9],
[10,11,9,9,8,0,10,10],
[14,10,12,10,15,11,0,12],
[12,12,14,15,12,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,12,12,13,9,13],
[8,0,12,12,13,14,15,12],
[5,9,0,8,11,8,11,7],
[9,9,13,0,14,9,11,12],
[9,8,10,7,0,13,10,7],
[8,7,13,12,8,0,13,6],
[12,6,10,10,11,8,0,13],
[8,9,14,9,14,15,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 21, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_8_21.csv", index=False, header=False)