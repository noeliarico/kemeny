
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,13,17,17,17,24,21,21],
[18,0,17,21,19,21,15,17],
[14,14,0,16,19,21,21,21],
[14,10,15,0,11,18,19,14],
[14,12,12,20,0,24,18,14],
[7,10,10,13,7,0,11,12],
[10,16,10,12,13,20,0,15],
[10,14,10,17,17,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,20,11,11,18,5,4],
[24,0,19,14,8,18,13,13],
[11,12,0,9,6,11,7,9],
[20,17,22,0,17,26,12,18],
[20,23,25,14,0,26,12,15],
[13,13,20,5,5,0,7,12],
[26,18,24,19,19,24,0,13],
[27,18,22,13,16,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,17,9,12,7,20],
[16,0,18,22,17,15,13,17],
[17,13,0,17,16,18,14,12],
[14,9,14,0,13,11,10,13],
[22,14,15,18,0,14,14,14],
[19,16,13,20,17,0,21,14],
[24,18,17,21,17,10,0,18],
[11,14,19,18,17,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,27,16,15,18,20,19],
[12,0,15,15,17,14,15,17],
[4,16,0,19,10,11,12,13],
[15,16,12,0,12,16,17,16],
[16,14,21,19,0,13,17,17],
[13,17,20,15,18,0,28,22],
[11,16,19,14,14,3,0,21],
[12,14,18,15,14,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,21,15,16,16,18],
[17,0,20,22,15,19,17,17],
[14,11,0,16,8,20,14,17],
[10,9,15,0,12,12,10,10],
[16,16,23,19,0,22,19,15],
[15,12,11,19,9,0,12,11],
[15,14,17,21,12,19,0,15],
[13,14,14,21,16,20,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,16,16,10,14,19],
[18,0,16,19,18,15,21,18],
[15,15,0,16,17,17,20,20],
[15,12,15,0,12,11,18,16],
[15,13,14,19,0,12,15,20],
[21,16,14,20,19,0,18,21],
[17,10,11,13,16,13,0,16],
[12,13,11,15,11,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,12,10,7,8,14],
[17,0,6,15,6,17,14,11],
[18,25,0,19,18,16,17,11],
[19,16,12,0,6,4,10,13],
[21,25,13,25,0,22,15,17],
[24,14,15,27,9,0,17,13],
[23,17,14,21,16,14,0,7],
[17,20,20,18,14,18,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,9,15,20,19,17],
[15,0,14,15,14,26,15,12],
[11,17,0,11,13,24,18,18],
[22,16,20,0,19,24,21,13],
[16,17,18,12,0,24,16,19],
[11,5,7,7,7,0,9,6],
[12,16,13,10,15,22,0,15],
[14,19,13,18,12,25,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,8,24,14,13,15],
[15,0,19,13,17,13,6,20],
[17,12,0,19,18,15,11,15],
[23,18,12,0,24,20,15,25],
[7,14,13,7,0,5,6,7],
[17,18,16,11,26,0,17,13],
[18,25,20,16,25,14,0,20],
[16,11,16,6,24,18,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,13,17,18,16,10],
[16,0,17,19,14,18,19,18],
[19,14,0,16,17,18,14,15],
[18,12,15,0,12,20,18,15],
[14,17,14,19,0,19,19,18],
[13,13,13,11,12,0,15,13],
[15,12,17,13,12,16,0,12],
[21,13,16,16,13,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,25,21,18,18,22,20],
[16,0,19,20,15,17,21,17],
[6,12,0,12,12,12,14,16],
[10,11,19,0,14,10,14,14],
[13,16,19,17,0,17,18,15],
[13,14,19,21,14,0,17,17],
[9,10,17,17,13,14,0,15],
[11,14,15,17,16,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,23,19,13,30,21],
[10,0,14,14,7,13,10,11],
[8,17,0,15,9,17,9,15],
[8,17,16,0,12,12,13,12],
[12,24,22,19,0,17,24,22],
[18,18,14,19,14,0,18,15],
[1,21,22,18,7,13,0,17],
[10,20,16,19,9,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,17,15,20,16,18,17],
[6,0,15,10,15,16,18,16],
[14,16,0,13,16,12,15,11],
[16,21,18,0,19,14,19,14],
[11,16,15,12,0,12,14,21],
[15,15,19,17,19,0,16,20],
[13,13,16,12,17,15,0,14],
[14,15,20,17,10,11,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,21,10,17,20,8],
[15,0,15,18,12,13,20,13],
[14,16,0,18,16,19,21,15],
[10,13,13,0,10,13,17,12],
[21,19,15,21,0,16,21,16],
[14,18,12,18,15,0,18,15],
[11,11,10,14,10,13,0,9],
[23,18,16,19,15,16,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,22,16,20,24,21],
[14,0,13,20,16,18,22,19],
[18,18,0,22,18,19,19,15],
[9,11,9,0,10,10,11,13],
[15,15,13,21,0,19,20,19],
[11,13,12,21,12,0,19,20],
[7,9,12,20,11,12,0,13],
[10,12,16,18,12,11,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,15,17,19,21,19],
[14,0,16,12,15,14,12,18],
[13,15,0,13,17,18,12,15],
[16,19,18,0,21,15,14,14],
[14,16,14,10,0,13,17,16],
[12,17,13,16,18,0,9,11],
[10,19,19,17,14,22,0,17],
[12,13,16,17,15,20,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,12,23,20,20,17,14],
[12,0,15,14,13,9,8,10],
[19,16,0,22,17,18,14,9],
[8,17,9,0,15,13,11,11],
[11,18,14,16,0,10,10,13],
[11,22,13,18,21,0,12,16],
[14,23,17,20,21,19,0,18],
[17,21,22,20,18,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,20,21,15,14,16],
[16,0,20,20,18,15,16,16],
[18,11,0,17,14,12,12,16],
[11,11,14,0,14,5,13,14],
[10,13,17,17,0,17,14,16],
[16,16,19,26,14,0,16,23],
[17,15,19,18,17,15,0,19],
[15,15,15,17,15,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,15,15,12,20,12],
[19,0,16,12,18,19,17,9],
[19,15,0,20,24,21,20,19],
[16,19,11,0,23,14,15,21],
[16,13,7,8,0,7,13,7],
[19,12,10,17,24,0,21,15],
[11,14,11,16,18,10,0,15],
[19,22,12,10,24,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,14,15,14,17,13,14],
[10,0,12,15,10,11,8,13],
[17,19,0,16,16,17,17,15],
[16,16,15,0,12,14,13,12],
[17,21,15,19,0,17,16,13],
[14,20,14,17,14,0,15,14],
[18,23,14,18,15,16,0,16],
[17,18,16,19,18,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,12,13,12,18,15],
[17,0,18,14,14,22,23,17],
[14,13,0,14,16,16,19,17],
[19,17,17,0,17,14,20,19],
[18,17,15,14,0,15,20,19],
[19,9,15,17,16,0,18,21],
[13,8,12,11,11,13,0,12],
[16,14,14,12,12,10,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,3,3,17,5,17],
[14,0,14,5,5,14,5,17],
[12,17,0,15,3,17,17,17],
[28,26,16,0,3,14,2,17],
[28,26,28,28,0,14,26,26],
[14,17,14,17,17,0,17,15],
[26,26,14,29,5,14,0,29],
[14,14,14,14,5,16,2,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,18,19,14,20,18],
[14,0,12,15,14,13,11,16],
[17,19,0,14,13,16,14,18],
[13,16,17,0,16,15,16,18],
[12,17,18,15,0,13,16,18],
[17,18,15,16,18,0,14,18],
[11,20,17,15,15,17,0,17],
[13,15,13,13,13,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,12,6,11,15,12],
[19,0,11,12,6,5,20,17],
[20,20,0,17,6,6,20,17],
[19,19,14,0,5,5,20,19],
[25,25,25,26,0,25,15,25],
[20,26,25,26,6,0,20,26],
[16,11,11,11,16,11,0,11],
[19,14,14,12,6,5,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,15,11,20,15,13],
[18,0,11,14,14,15,14,11],
[19,20,0,12,10,19,14,12],
[16,17,19,0,8,21,17,17],
[20,17,21,23,0,19,13,16],
[11,16,12,10,12,0,15,16],
[16,17,17,14,18,16,0,17],
[18,20,19,14,15,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,15,17,18,14,14],
[16,0,14,20,13,16,10,17],
[12,17,0,17,11,14,16,18],
[16,11,14,0,15,14,13,16],
[14,18,20,16,0,17,13,18],
[13,15,17,17,14,0,15,15],
[17,21,15,18,18,16,0,20],
[17,14,13,15,13,16,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,14,15,16,15,10],
[20,0,17,16,21,16,13,19],
[18,14,0,18,20,21,18,15],
[17,15,13,0,14,16,11,14],
[16,10,11,17,0,12,8,11],
[15,15,10,15,19,0,12,13],
[16,18,13,20,23,19,0,18],
[21,12,16,17,20,18,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,22,13,19,16,20],
[15,0,13,18,16,21,13,17],
[20,18,0,20,17,19,15,18],
[9,13,11,0,12,21,13,21],
[18,15,14,19,0,16,15,17],
[12,10,12,10,15,0,11,17],
[15,18,16,18,16,20,0,17],
[11,14,13,10,14,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,18,10,15,18,14],
[16,0,18,18,10,14,18,15],
[15,13,0,16,10,11,16,7],
[13,13,15,0,9,9,13,11],
[21,21,21,22,0,15,19,17],
[16,17,20,22,16,0,22,14],
[13,13,15,18,12,9,0,7],
[17,16,24,20,14,17,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,12,14,11,17,12],
[21,0,16,13,15,15,17,13],
[17,15,0,14,21,15,17,16],
[19,18,17,0,16,16,15,16],
[17,16,10,15,0,13,17,13],
[20,16,16,15,18,0,19,17],
[14,14,14,16,14,12,0,15],
[19,18,15,15,18,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,13,17,13,19,19,18],
[12,0,15,15,10,16,15,20],
[18,16,0,19,15,20,22,22],
[14,16,12,0,15,14,18,16],
[18,21,16,16,0,16,14,19],
[12,15,11,17,15,0,17,21],
[12,16,9,13,17,14,0,20],
[13,11,9,15,12,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,7,15,24,15,13],
[15,0,24,17,27,17,20,17],
[18,7,0,12,15,20,23,13],
[24,14,19,0,24,24,19,17],
[16,4,16,7,0,12,16,14],
[7,14,11,7,19,0,16,10],
[16,11,8,12,15,15,0,13],
[18,14,18,14,17,21,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,15,15,24,15,16,17],
[11,0,6,6,15,6,6,10],
[16,25,0,12,21,15,11,13],
[16,25,19,0,21,12,13,17],
[7,16,10,10,0,16,17,8],
[16,25,16,19,15,0,16,14],
[15,25,20,18,14,15,0,17],
[14,21,18,14,23,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,14,10,22,14,11],
[15,0,23,22,18,22,19,15],
[16,8,0,4,6,14,8,2],
[17,9,27,0,6,23,13,11],
[21,13,25,25,0,21,21,21],
[9,9,17,8,10,0,9,11],
[17,12,23,18,10,22,0,19],
[20,16,29,20,10,20,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,16,17,17,14,21],
[12,0,15,17,14,10,17,15],
[14,16,0,12,14,14,12,15],
[15,14,19,0,16,14,18,17],
[14,17,17,15,0,13,19,20],
[14,21,17,17,18,0,20,22],
[17,14,19,13,12,11,0,15],
[10,16,16,14,11,9,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,12,12,7,19,6],
[20,0,16,16,16,14,24,14],
[22,15,0,17,18,19,18,14],
[19,15,14,0,16,13,18,17],
[19,15,13,15,0,11,21,8],
[24,17,12,18,20,0,23,11],
[12,7,13,13,10,8,0,11],
[25,17,17,14,23,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,16,18,18,12,16],
[17,0,19,18,23,21,17,14],
[11,12,0,12,15,19,13,15],
[15,13,19,0,18,15,14,15],
[13,8,16,13,0,16,13,13],
[13,10,12,16,15,0,10,13],
[19,14,18,17,18,21,0,14],
[15,17,16,16,18,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,20,16,17,10,16],
[14,0,17,15,11,16,13,10],
[17,14,0,19,15,22,15,14],
[11,16,12,0,15,12,12,9],
[15,20,16,16,0,17,16,13],
[14,15,9,19,14,0,14,8],
[21,18,16,19,15,17,0,12],
[15,21,17,22,18,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,11,9,10,9,15],
[17,0,15,19,15,14,16,17],
[20,16,0,24,17,10,16,19],
[20,12,7,0,16,11,12,19],
[22,16,14,15,0,15,15,16],
[21,17,21,20,16,0,15,16],
[22,15,15,19,16,16,0,18],
[16,14,12,12,15,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,19,15,14,18,17],
[15,0,19,15,14,20,21,17],
[15,12,0,16,16,10,17,15],
[12,16,15,0,15,10,15,14],
[16,17,15,16,0,13,16,16],
[17,11,21,21,18,0,19,16],
[13,10,14,16,15,12,0,13],
[14,14,16,17,15,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,8,25,17,22,25,25],
[8,0,8,25,9,14,25,12],
[23,23,0,25,9,14,31,19],
[6,6,6,0,15,12,6,12],
[14,22,22,16,0,14,22,14],
[9,17,17,19,17,0,25,21],
[6,6,0,25,9,6,0,6],
[6,19,12,19,17,10,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,15,15,14,21,16],
[14,0,13,18,14,18,18,15],
[14,18,0,18,17,14,17,19],
[16,13,13,0,13,14,14,19],
[16,17,14,18,0,16,16,20],
[17,13,17,17,15,0,19,15],
[10,13,14,17,15,12,0,16],
[15,16,12,12,11,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,19,13,16,17,15,17],
[13,0,16,12,15,10,10,13],
[12,15,0,9,10,8,12,9],
[18,19,22,0,16,15,16,20],
[15,16,21,15,0,18,13,16],
[14,21,23,16,13,0,13,19],
[16,21,19,15,18,18,0,16],
[14,18,22,11,15,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,14,16,15,16,16],
[16,0,14,15,15,16,13,19],
[16,17,0,14,19,17,14,18],
[17,16,17,0,15,19,15,18],
[15,16,12,16,0,14,16,17],
[16,15,14,12,17,0,14,19],
[15,18,17,16,15,17,0,18],
[15,12,13,13,14,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,12,17,16,12,14],
[15,0,15,9,15,12,11,17],
[14,16,0,12,14,11,15,16],
[19,22,19,0,21,16,16,15],
[14,16,17,10,0,16,16,17],
[15,19,20,15,15,0,17,20],
[19,20,16,15,15,14,0,20],
[17,14,15,16,14,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,20,15,17,15,16,19],
[12,0,12,13,13,13,16,18],
[11,19,0,13,17,18,13,21],
[16,18,18,0,19,14,17,19],
[14,18,14,12,0,10,19,19],
[16,18,13,17,21,0,16,21],
[15,15,18,14,12,15,0,20],
[12,13,10,12,12,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,18,13,16,14,11],
[18,0,17,22,19,16,14,16],
[16,14,0,12,17,11,15,13],
[13,9,19,0,15,12,11,15],
[18,12,14,16,0,16,17,17],
[15,15,20,19,15,0,20,18],
[17,17,16,20,14,11,0,16],
[20,15,18,16,14,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,17,17,18,14,17],
[19,0,17,20,15,19,18,15],
[16,14,0,10,19,17,11,17],
[14,11,21,0,18,20,15,14],
[14,16,12,13,0,9,11,12],
[13,12,14,11,22,0,9,14],
[17,13,20,16,20,22,0,22],
[14,16,14,17,19,17,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,20,17,13,16,11,11],
[18,0,17,18,16,17,17,14],
[11,14,0,15,15,15,13,14],
[14,13,16,0,12,15,12,12],
[18,15,16,19,0,16,17,15],
[15,14,16,16,15,0,11,16],
[20,14,18,19,14,20,0,17],
[20,17,17,19,16,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,14,14,14,10,12],
[14,0,18,9,10,10,9,8],
[13,13,0,9,10,7,8,11],
[17,22,22,0,17,20,18,15],
[17,21,21,14,0,14,13,16],
[17,21,24,11,17,0,13,11],
[21,22,23,13,18,18,0,16],
[19,23,20,16,15,20,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,21,16,11,11,21],
[15,0,15,21,5,21,5,10],
[10,16,0,26,21,16,0,10],
[10,10,5,0,5,5,5,10],
[15,26,10,26,0,16,0,15],
[20,10,15,26,15,0,15,10],
[20,26,31,26,31,16,0,15],
[10,21,21,21,16,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,26,15,21,7,15],
[13,0,15,23,16,16,6,12],
[14,16,0,20,17,17,15,16],
[5,8,11,0,11,15,6,6],
[16,15,14,20,0,13,4,10],
[10,15,14,16,18,0,8,13],
[24,25,16,25,27,23,0,12],
[16,19,15,25,21,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,17,12,16,12,13],
[19,0,16,20,17,15,16,16],
[15,15,0,16,15,16,21,14],
[14,11,15,0,14,18,15,15],
[19,14,16,17,0,18,15,18],
[15,16,15,13,13,0,13,15],
[19,15,10,16,16,18,0,17],
[18,15,17,16,13,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,16,18,16,16,17],
[15,0,14,15,18,13,13,14],
[17,17,0,14,18,15,14,13],
[15,16,17,0,17,20,16,18],
[13,13,13,14,0,14,16,13],
[15,18,16,11,17,0,14,20],
[15,18,17,15,15,17,0,14],
[14,17,18,13,18,11,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,17,26,14,13,13],
[13,0,15,11,17,12,10,14],
[17,16,0,9,17,16,12,13],
[14,20,22,0,27,14,18,19],
[5,14,14,4,0,10,9,10],
[17,19,15,17,21,0,16,18],
[18,21,19,13,22,15,0,13],
[18,17,18,12,21,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,16,15,16,13,20],
[19,0,16,17,17,13,12,16],
[18,15,0,18,17,18,16,18],
[15,14,13,0,14,15,12,9],
[16,14,14,17,0,14,15,15],
[15,18,13,16,17,0,14,13],
[18,19,15,19,16,17,0,20],
[11,15,13,22,16,18,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,18,10,13,8,14],
[17,0,13,22,13,18,13,19],
[18,18,0,20,12,11,16,24],
[13,9,11,0,8,6,6,11],
[21,18,19,23,0,9,12,19],
[18,13,20,25,22,0,16,19],
[23,18,15,25,19,15,0,22],
[17,12,7,20,12,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,5,17,15,17,9,10],
[11,0,5,9,9,15,12,11],
[26,26,0,15,20,26,18,28],
[14,22,16,0,23,23,18,19],
[16,22,11,8,0,14,12,16],
[14,16,5,8,17,0,15,14],
[22,19,13,13,19,16,0,13],
[21,20,3,12,15,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,18,11,17,8,18,10],
[20,0,12,16,16,14,18,10],
[13,19,0,19,20,18,16,13],
[20,15,12,0,16,13,19,2],
[14,15,11,15,0,8,8,15],
[23,17,13,18,23,0,20,17],
[13,13,15,12,23,11,0,13],
[21,21,18,29,16,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,15,15,17,12,18],
[16,0,16,15,16,14,15,19],
[16,15,0,21,20,17,18,20],
[16,16,10,0,16,14,13,16],
[16,15,11,15,0,12,11,15],
[14,17,14,17,19,0,11,13],
[19,16,13,18,20,20,0,19],
[13,12,11,15,16,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,17,19,22,22,18,13],
[10,0,15,18,17,24,19,18],
[14,16,0,18,20,18,23,24],
[12,13,13,0,19,14,13,17],
[9,14,11,12,0,17,14,10],
[9,7,13,17,14,0,14,17],
[13,12,8,18,17,17,0,15],
[18,13,7,14,21,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,16,19,17,19,15],
[14,0,15,17,17,18,17,16],
[14,16,0,19,19,21,19,18],
[15,14,12,0,12,13,17,14],
[12,14,12,19,0,19,21,15],
[14,13,10,18,12,0,14,15],
[12,14,12,14,10,17,0,13],
[16,15,13,17,16,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,10,16,10,15,16],
[17,0,15,17,20,14,20,18],
[20,16,0,12,17,14,18,17],
[21,14,19,0,19,16,19,22],
[15,11,14,12,0,11,17,17],
[21,17,17,15,20,0,21,21],
[16,11,13,12,14,10,0,18],
[15,13,14,9,14,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,11,10,12,12,18],
[19,0,14,16,13,19,20,24],
[20,17,0,20,12,18,19,21],
[20,15,11,0,14,11,18,22],
[21,18,19,17,0,18,15,17],
[19,12,13,20,13,0,16,22],
[19,11,12,13,16,15,0,17],
[13,7,10,9,14,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,14,15,16,12,15],
[19,0,16,16,15,17,18,18],
[17,15,0,16,18,16,13,19],
[17,15,15,0,14,18,15,17],
[16,16,13,17,0,15,16,19],
[15,14,15,13,16,0,15,18],
[19,13,18,16,15,16,0,20],
[16,13,12,14,12,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,11,14,11,12,18],
[18,0,16,16,22,19,15,21],
[20,15,0,21,21,22,19,26],
[20,15,10,0,16,17,11,18],
[17,9,10,15,0,13,14,18],
[20,12,9,14,18,0,14,17],
[19,16,12,20,17,17,0,21],
[13,10,5,13,13,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,20,22,12,22,18,16],
[8,0,7,10,16,11,8,8],
[11,24,0,22,14,20,19,12],
[9,21,9,0,14,19,13,15],
[19,15,17,17,0,21,16,8],
[9,20,11,12,10,0,12,6],
[13,23,12,18,15,19,0,16],
[15,23,19,16,23,25,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,23,10,15,10,7,10],
[25,0,18,11,23,23,12,18],
[8,13,0,5,15,16,1,13],
[21,20,26,0,30,18,14,20],
[16,8,16,1,0,8,14,3],
[21,8,15,13,23,0,16,9],
[24,19,30,17,17,15,0,17],
[21,13,18,11,28,22,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,15,11,15,12,18],
[15,0,18,14,12,15,13,16],
[18,13,0,15,13,16,14,17],
[16,17,16,0,10,15,17,17],
[20,19,18,21,0,19,15,20],
[16,16,15,16,12,0,15,16],
[19,18,17,14,16,16,0,14],
[13,15,14,14,11,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,30,20,11,20,22,26],
[7,0,21,6,17,17,25,8],
[1,10,0,7,8,7,8,5],
[11,25,24,0,15,21,26,16],
[20,14,23,16,0,19,28,21],
[11,14,24,10,12,0,19,9],
[9,6,23,5,3,12,0,10],
[5,23,26,15,10,22,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,18,6,11,11,11,10],
[23,0,26,12,14,10,19,20],
[13,5,0,8,8,6,5,10],
[25,19,23,0,18,23,17,13],
[20,17,23,13,0,20,12,18],
[20,21,25,8,11,0,13,18],
[20,12,26,14,19,18,0,21],
[21,11,21,18,13,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,12,14,13,12,14],
[14,0,12,12,12,12,10,14],
[16,19,0,14,17,14,14,18],
[19,19,17,0,12,15,17,17],
[17,19,14,19,0,15,17,16],
[18,19,17,16,16,0,14,14],
[19,21,17,14,14,17,0,15],
[17,17,13,14,15,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,28,18,18,18,18,15],
[25,0,25,25,15,25,15,15],
[3,6,0,3,3,15,18,0],
[13,6,28,0,3,18,18,18],
[13,16,28,28,0,28,28,18],
[13,6,16,13,3,0,18,3],
[13,16,13,13,3,13,0,3],
[16,16,31,13,13,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,16,3,15,12,11],
[20,0,20,20,13,21,14,17],
[19,11,0,11,7,14,23,13],
[15,11,20,0,16,13,15,17],
[28,18,24,15,0,22,20,16],
[16,10,17,18,9,0,16,13],
[19,17,8,16,11,15,0,15],
[20,14,18,14,15,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,23,15,16,16,18,11],
[16,0,17,14,14,12,13,12],
[8,14,0,6,11,7,7,11],
[16,17,25,0,17,12,15,16],
[15,17,20,14,0,9,14,14],
[15,19,24,19,22,0,17,15],
[13,18,24,16,17,14,0,14],
[20,19,20,15,17,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,15,10,27,19,16,16],
[11,0,15,9,13,20,12,14],
[16,16,0,17,13,16,15,21],
[21,22,14,0,22,25,16,19],
[4,18,18,9,0,19,9,13],
[12,11,15,6,12,0,9,11],
[15,19,16,15,22,22,0,17],
[15,17,10,12,18,20,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,21,14,21,17,20],
[9,0,19,22,16,19,15,14],
[7,12,0,15,14,16,11,10],
[10,9,16,0,12,16,11,14],
[17,15,17,19,0,20,15,14],
[10,12,15,15,11,0,15,10],
[14,16,20,20,16,16,0,17],
[11,17,21,17,17,21,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,19,17,19,20,15],
[18,0,18,19,14,25,23,16],
[18,13,0,19,15,15,26,11],
[12,12,12,0,13,17,19,16],
[14,17,16,18,0,21,31,9],
[12,6,16,14,10,0,16,13],
[11,8,5,12,0,15,0,8],
[16,15,20,15,22,18,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,19,23,17,17,13,16],
[6,0,9,9,11,7,14,13],
[12,22,0,15,14,16,16,10],
[8,22,16,0,16,11,12,14],
[14,20,17,15,0,18,17,19],
[14,24,15,20,13,0,17,15],
[18,17,15,19,14,14,0,14],
[15,18,21,17,12,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,17,12,23,16,12],
[18,0,22,18,18,18,12,18],
[17,9,0,19,13,19,12,13],
[14,13,12,0,16,14,6,10],
[19,13,18,15,0,19,10,11],
[8,13,12,17,12,0,16,0],
[15,19,19,25,21,15,0,15],
[19,13,18,21,20,31,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,16,11,17,9,16],
[15,0,15,19,8,16,9,16],
[14,16,0,16,10,19,18,20],
[15,12,15,0,16,16,8,20],
[20,23,21,15,0,19,19,24],
[14,15,12,15,12,0,13,11],
[22,22,13,23,12,18,0,22],
[15,15,11,11,7,20,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,13,21,17,12,15],
[15,0,14,12,17,14,10,19],
[15,17,0,17,19,14,12,19],
[18,19,14,0,19,17,16,19],
[10,14,12,12,0,11,10,16],
[14,17,17,14,20,0,16,12],
[19,21,19,15,21,15,0,16],
[16,12,12,12,15,19,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,15,21,18,25,20],
[12,0,11,10,13,11,16,14],
[12,20,0,18,12,17,18,16],
[16,21,13,0,13,16,19,21],
[10,18,19,18,0,13,21,17],
[13,20,14,15,18,0,22,21],
[6,15,13,12,10,9,0,8],
[11,17,15,10,14,10,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,17,20,12,12,15],
[14,0,18,14,20,18,13,19],
[14,13,0,15,15,10,12,9],
[14,17,16,0,19,11,15,17],
[11,11,16,12,0,12,14,12],
[19,13,21,20,19,0,15,15],
[19,18,19,16,17,16,0,15],
[16,12,22,14,19,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,15,15,16,18,14],
[14,0,14,16,16,16,19,13],
[18,17,0,17,17,14,21,16],
[16,15,14,0,13,11,16,11],
[16,15,14,18,0,13,13,14],
[15,15,17,20,18,0,21,18],
[13,12,10,15,18,10,0,12],
[17,18,15,20,17,13,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,17,16,13,18,18],
[17,0,15,14,14,18,17,17],
[13,16,0,17,17,19,21,16],
[14,17,14,0,18,14,18,17],
[15,17,14,13,0,17,19,18],
[18,13,12,17,14,0,17,16],
[13,14,10,13,12,14,0,12],
[13,14,15,14,13,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,16,19,17,17,12],
[15,0,16,9,16,15,13,15],
[13,15,0,12,14,17,12,13],
[15,22,19,0,18,16,13,17],
[12,15,17,13,0,16,16,12],
[14,16,14,15,15,0,15,13],
[14,18,19,18,15,16,0,12],
[19,16,18,14,19,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,21,14,19,16,16],
[14,0,13,17,10,15,9,11],
[13,18,0,17,20,23,13,15],
[10,14,14,0,15,15,9,13],
[17,21,11,16,0,12,12,11],
[12,16,8,16,19,0,13,13],
[15,22,18,22,19,18,0,16],
[15,20,16,18,20,18,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,9,9,18,11,18],
[17,0,11,25,4,8,8,22],
[17,20,0,25,21,12,12,22],
[22,6,6,0,10,9,9,27],
[22,27,10,21,0,13,21,27],
[13,23,19,22,18,0,17,21],
[20,23,19,22,10,14,0,28],
[13,9,9,4,4,10,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,17,16,15,21,21],
[17,0,14,16,19,13,18,21],
[18,17,0,23,17,15,19,20],
[14,15,8,0,10,9,13,15],
[15,12,14,21,0,16,18,18],
[16,18,16,22,15,0,15,23],
[10,13,12,18,13,16,0,14],
[10,10,11,16,13,8,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,20,21,12,17,18,20],
[14,0,23,10,15,14,14,16],
[11,8,0,12,18,15,18,15],
[10,21,19,0,8,6,23,15],
[19,16,13,23,0,14,15,22],
[14,17,16,25,17,0,18,25],
[13,17,13,8,16,13,0,13],
[11,15,16,16,9,6,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,11,9,12,12,20],
[15,0,21,9,14,12,14,20],
[17,10,0,11,14,20,4,22],
[20,22,20,0,13,18,17,28],
[22,17,17,18,0,16,11,23],
[19,19,11,13,15,0,13,22],
[19,17,27,14,20,18,0,20],
[11,11,9,3,8,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,12,11,10,15,15],
[17,0,17,13,17,15,19,24],
[14,14,0,10,17,15,18,22],
[19,18,21,0,18,12,19,18],
[20,14,14,13,0,15,14,19],
[21,16,16,19,16,0,12,15],
[16,12,13,12,17,19,0,18],
[16,7,9,13,12,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,19,19,17,14,11],
[16,0,19,16,19,18,15,14],
[15,12,0,12,18,17,14,16],
[12,15,19,0,19,17,14,12],
[12,12,13,12,0,16,9,11],
[14,13,14,14,15,0,13,12],
[17,16,17,17,22,18,0,15],
[20,17,15,19,20,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,11,12,16,11,12],
[16,0,15,12,11,15,18,15],
[17,16,0,13,15,17,18,17],
[20,19,18,0,18,20,19,14],
[19,20,16,13,0,15,16,13],
[15,16,14,11,16,0,15,16],
[20,13,13,12,15,16,0,17],
[19,16,14,17,18,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,24,15,19,17,16,16],
[14,0,23,9,11,13,10,21],
[7,8,0,7,12,11,15,9],
[16,22,24,0,16,15,12,17],
[12,20,19,15,0,8,8,14],
[14,18,20,16,23,0,17,17],
[15,21,16,19,23,14,0,15],
[15,10,22,14,17,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,18,10,13,13,11],
[20,0,20,22,17,17,20,15],
[17,11,0,15,14,13,15,16],
[13,9,16,0,14,13,11,13],
[21,14,17,17,0,16,19,15],
[18,14,18,18,15,0,19,16],
[18,11,16,20,12,12,0,14],
[20,16,15,18,16,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,31,31,8,11,20,8],
[20,0,20,20,20,12,20,20],
[0,11,0,14,0,11,15,0],
[0,11,17,0,0,0,17,0],
[23,11,31,31,0,23,31,31],
[20,19,20,31,8,0,20,8],
[11,11,16,14,0,11,0,11],
[23,11,31,31,0,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,19,18,15,17,15,15],
[18,0,18,16,18,15,14,15],
[12,13,0,13,17,10,7,15],
[13,15,18,0,15,18,18,19],
[16,13,14,16,0,9,8,12],
[14,16,21,13,22,0,18,20],
[16,17,24,13,23,13,0,21],
[16,16,16,12,19,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,13,16,15,15,15],
[19,0,21,18,20,19,15,17],
[15,10,0,14,14,12,12,18],
[18,13,17,0,23,14,16,20],
[15,11,17,8,0,9,12,14],
[16,12,19,17,22,0,14,13],
[16,16,19,15,19,17,0,13],
[16,14,13,11,17,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,16,15,17,19,18],
[16,0,14,14,17,13,16,16],
[13,17,0,18,16,12,18,17],
[15,17,13,0,16,19,12,14],
[16,14,15,15,0,14,16,17],
[14,18,19,12,17,0,17,19],
[12,15,13,19,15,14,0,14],
[13,15,14,17,14,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,6,19,10,12,20,15],
[19,0,22,21,15,17,21,12],
[25,9,0,21,21,11,21,18],
[12,10,10,0,3,16,12,12],
[21,16,10,28,0,21,24,15],
[19,14,20,15,10,0,15,19],
[11,10,10,19,7,16,0,4],
[16,19,13,19,16,12,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,13,13,16,13,17,13],
[24,0,19,15,15,16,20,17],
[18,12,0,13,17,16,16,21],
[18,16,18,0,15,21,22,25],
[15,16,14,16,0,18,20,21],
[18,15,15,10,13,0,24,15],
[14,11,15,9,11,7,0,14],
[18,14,10,6,10,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,16,17,20,18,18],
[13,0,15,12,11,11,12,10],
[18,16,0,16,14,15,17,16],
[15,19,15,0,13,16,12,12],
[14,20,17,18,0,20,16,22],
[11,20,16,15,11,0,17,16],
[13,19,14,19,15,14,0,17],
[13,21,15,19,9,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,14,17,18,18,18],
[17,0,12,12,13,15,16,18],
[13,19,0,13,14,18,13,15],
[17,19,18,0,13,19,16,16],
[14,18,17,18,0,17,14,15],
[13,16,13,12,14,0,16,16],
[13,15,18,15,17,15,0,12],
[13,13,16,15,16,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,19,19,13,19,17,15],
[17,0,15,21,16,19,16,18],
[12,16,0,16,14,8,10,13],
[12,10,15,0,17,9,7,10],
[18,15,17,14,0,8,10,14],
[12,12,23,22,23,0,17,17],
[14,15,21,24,21,14,0,18],
[16,13,18,21,17,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,8,9,8,10,8],
[20,0,22,16,12,18,12,20],
[22,9,0,10,14,16,12,10],
[23,15,21,0,13,18,12,16],
[22,19,17,18,0,20,11,18],
[23,13,15,13,11,0,11,16],
[21,19,19,19,20,20,0,14],
[23,11,21,15,13,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,14,12,12,15,12],
[18,0,14,15,20,13,15,15],
[17,17,0,16,15,14,14,16],
[17,16,15,0,14,12,18,13],
[19,11,16,17,0,9,16,16],
[19,18,17,19,22,0,16,15],
[16,16,17,13,15,15,0,15],
[19,16,15,18,15,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,24,16,17,16,14],
[16,0,21,19,14,14,15,14],
[15,10,0,14,10,15,6,14],
[7,12,17,0,14,17,6,5],
[15,17,21,17,0,13,14,18],
[14,17,16,14,18,0,9,14],
[15,16,25,25,17,22,0,15],
[17,17,17,26,13,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,12,20,16,21,20],
[8,0,12,9,18,5,14,15],
[14,19,0,14,21,12,18,18],
[19,22,17,0,23,11,22,24],
[11,13,10,8,0,11,14,18],
[15,26,19,20,20,0,20,23],
[10,17,13,9,17,11,0,17],
[11,16,13,7,13,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,7,18,9,10,15,6],
[11,0,9,17,7,9,18,9],
[24,22,0,17,15,17,21,17],
[13,14,14,0,11,17,27,18],
[22,24,16,20,0,11,23,20],
[21,22,14,14,20,0,22,16],
[16,13,10,4,8,9,0,13],
[25,22,14,13,11,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,17,14,16,15,19],
[13,0,13,16,13,14,14,19],
[13,18,0,16,18,15,17,19],
[14,15,15,0,13,12,12,17],
[17,18,13,18,0,14,13,20],
[15,17,16,19,17,0,18,20],
[16,17,14,19,18,13,0,18],
[12,12,12,14,11,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,16,16,18,21,13,16],
[12,0,9,6,18,11,9,17],
[15,22,0,13,20,22,11,17],
[15,25,18,0,18,22,16,19],
[13,13,11,13,0,22,12,14],
[10,20,9,9,9,0,9,13],
[18,22,20,15,19,22,0,17],
[15,14,14,12,17,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,22,16,20,13,16],
[15,0,16,16,15,14,14,16],
[13,15,0,17,18,20,11,15],
[9,15,14,0,13,13,17,15],
[15,16,13,18,0,17,11,18],
[11,17,11,18,14,0,14,18],
[18,17,20,14,20,17,0,18],
[15,15,16,16,13,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,6,15,13,13,13],
[21,0,19,12,16,16,18,17],
[15,12,0,16,17,17,17,17],
[25,19,15,0,17,21,16,22],
[16,15,14,14,0,20,14,15],
[18,15,14,10,11,0,11,13],
[18,13,14,15,17,20,0,20],
[18,14,14,9,16,18,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,19,14,16,25,12,14],
[15,0,17,15,18,18,13,16],
[12,14,0,15,13,11,8,14],
[17,16,16,0,12,16,17,11],
[15,13,18,19,0,18,9,19],
[6,13,20,15,13,0,7,11],
[19,18,23,14,22,24,0,18],
[17,15,17,20,12,20,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,11,11,15,13,11],
[15,0,15,14,11,21,12,4],
[16,16,0,19,11,15,11,9],
[20,17,12,0,18,18,18,11],
[20,20,20,13,0,15,16,21],
[16,10,16,13,16,0,18,11],
[18,19,20,13,15,13,0,22],
[20,27,22,20,10,20,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,14,13,12,16,22],
[15,0,12,12,10,6,5,25],
[11,19,0,16,12,15,12,24],
[17,19,15,0,9,12,18,15],
[18,21,19,22,0,16,15,18],
[19,25,16,19,15,0,16,24],
[15,26,19,13,16,15,0,28],
[9,6,7,16,13,7,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,12,20,14,19,17],
[15,0,13,14,16,10,17,16],
[15,18,0,20,20,17,25,19],
[19,17,11,0,17,16,16,18],
[11,15,11,14,0,13,16,15],
[17,21,14,15,18,0,20,19],
[12,14,6,15,15,11,0,14],
[14,15,12,13,16,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,18,22,17,21,17],
[17,0,15,14,16,13,16,19],
[13,16,0,16,14,12,13,19],
[13,17,15,0,14,10,15,12],
[9,15,17,17,0,12,10,15],
[14,18,19,21,19,0,22,18],
[10,15,18,16,21,9,0,15],
[14,12,12,19,16,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,17,19,13,19,15],
[17,0,18,17,21,15,21,17],
[15,13,0,17,13,14,18,11],
[14,14,14,0,14,13,16,14],
[12,10,18,17,0,9,19,15],
[18,16,17,18,22,0,19,15],
[12,10,13,15,12,12,0,12],
[16,14,20,17,16,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,31,15,9,20,20,16],
[31,0,31,26,15,20,20,31],
[0,0,0,6,9,11,0,5],
[16,5,25,0,14,14,25,16],
[22,16,22,17,0,11,11,16],
[11,11,20,17,20,0,11,16],
[11,11,31,6,20,20,0,11],
[15,0,26,15,15,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,11,22,15,20,17,21],
[12,0,10,10,9,3,6,14],
[20,21,0,17,15,17,10,20],
[9,21,14,0,16,10,9,18],
[16,22,16,15,0,18,15,23],
[11,28,14,21,13,0,14,17],
[14,25,21,22,16,17,0,20],
[10,17,11,13,8,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,14,15,14,13,15],
[19,0,15,13,20,21,13,17],
[19,16,0,21,19,15,16,17],
[17,18,10,0,18,19,16,18],
[16,11,12,13,0,16,14,18],
[17,10,16,12,15,0,13,17],
[18,18,15,15,17,18,0,15],
[16,14,14,13,13,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,11,11,11,25,0],
[20,0,14,14,20,14,20,20],
[20,17,0,14,6,0,20,6],
[20,17,17,0,17,17,31,6],
[20,11,25,14,0,25,14,0],
[20,17,31,14,6,0,20,6],
[6,11,11,0,17,11,0,6],
[31,11,25,25,31,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,14,19,16,13,16],
[12,0,19,16,15,17,12,14],
[12,12,0,14,14,18,13,17],
[17,15,17,0,17,16,18,14],
[12,16,17,14,0,14,14,18],
[15,14,13,15,17,0,14,12],
[18,19,18,13,17,17,0,14],
[15,17,14,17,13,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,19,16,19,17,18,15],
[9,0,15,11,11,15,13,9],
[12,16,0,13,15,10,12,11],
[15,20,18,0,16,20,16,17],
[12,20,16,15,0,15,15,10],
[14,16,21,11,16,0,16,13],
[13,18,19,15,16,15,0,15],
[16,22,20,14,21,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,22,25,21,13,22],
[15,0,11,17,21,24,18,19],
[15,20,0,25,25,23,21,18],
[9,14,6,0,18,19,6,13],
[6,10,6,13,0,22,0,10],
[10,7,8,12,9,0,5,9],
[18,13,10,25,31,26,0,17],
[9,12,13,18,21,22,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,31,12,25,31,25,14],
[6,0,6,17,12,31,30,20],
[0,25,0,11,25,31,25,14],
[19,14,20,0,14,31,20,20],
[6,19,6,17,0,30,19,19],
[0,0,0,0,1,0,0,13],
[6,1,6,11,12,31,0,20],
[17,11,17,11,12,18,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,12,16,6,15,12],
[19,0,17,14,18,19,21,17],
[17,14,0,14,18,11,12,17],
[19,17,17,0,21,13,16,13],
[15,13,13,10,0,13,14,16],
[25,12,20,18,18,0,19,17],
[16,10,19,15,17,12,0,17],
[19,14,14,18,15,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,17,18,16,16,12],
[14,0,20,16,18,14,16,13],
[15,11,0,15,17,12,14,16],
[14,15,16,0,17,15,16,15],
[13,13,14,14,0,6,10,11],
[15,17,19,16,25,0,22,15],
[15,15,17,15,21,9,0,11],
[19,18,15,16,20,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,12,13,17,20,15],
[20,0,15,17,17,14,19,20],
[19,16,0,13,14,15,23,18],
[19,14,18,0,19,17,22,23],
[18,14,17,12,0,11,19,17],
[14,17,16,14,20,0,23,19],
[11,12,8,9,12,8,0,13],
[16,11,13,8,14,12,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,12,13,20,17,24,11],
[11,0,13,10,14,12,16,11],
[19,18,0,22,17,15,21,18],
[18,21,9,0,18,13,19,15],
[11,17,14,13,0,12,15,11],
[14,19,16,18,19,0,19,19],
[7,15,10,12,16,12,0,11],
[20,20,13,16,20,12,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,16,18,17,12,19,12],
[22,0,19,19,20,8,23,14],
[15,12,0,17,18,11,15,11],
[13,12,14,0,20,17,19,13],
[14,11,13,11,0,10,17,8],
[19,23,20,14,21,0,24,16],
[12,8,16,12,14,7,0,7],
[19,17,20,18,23,15,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,11,20,17,15,23],
[17,0,11,12,22,16,11,20],
[15,20,0,14,20,15,16,20],
[20,19,17,0,25,18,13,22],
[11,9,11,6,0,16,9,17],
[14,15,16,13,15,0,13,15],
[16,20,15,18,22,18,0,19],
[8,11,11,9,14,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,0,13,0,27,4],
[20,0,13,4,20,11,16,4],
[18,18,0,11,31,18,27,15],
[31,27,20,0,20,20,27,13],
[18,11,0,11,0,11,27,15],
[31,20,13,11,20,0,27,24],
[4,15,4,4,4,4,0,4],
[27,27,16,18,16,7,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,8,9,22,17,15,19],
[16,0,13,13,20,10,16,21],
[23,18,0,19,20,15,16,18],
[22,18,12,0,17,17,16,23],
[9,11,11,14,0,17,7,21],
[14,21,16,14,14,0,13,15],
[16,15,15,15,24,18,0,15],
[12,10,13,8,10,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,19,20,17,19,15],
[14,0,16,15,16,18,15,12],
[12,15,0,13,12,16,17,15],
[12,16,18,0,14,16,17,16],
[11,15,19,17,0,19,19,16],
[14,13,15,15,12,0,19,14],
[12,16,14,14,12,12,0,12],
[16,19,16,15,15,17,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,14,12,13,14,12],
[19,0,15,18,19,16,18,18],
[19,16,0,19,13,17,15,18],
[17,13,12,0,14,11,13,14],
[19,12,18,17,0,14,16,13],
[18,15,14,20,17,0,20,20],
[17,13,16,18,15,11,0,16],
[19,13,13,17,18,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,20,12,14,20,16],
[12,0,19,17,18,15,21,18],
[14,12,0,20,10,16,17,16],
[11,14,11,0,12,15,16,15],
[19,13,21,19,0,18,24,20],
[17,16,15,16,13,0,11,15],
[11,10,14,15,7,20,0,15],
[15,13,15,16,11,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,16,13,15,18,17],
[14,0,20,18,16,19,21,19],
[15,11,0,15,17,16,18,22],
[15,13,16,0,18,15,17,18],
[18,15,14,13,0,14,17,16],
[16,12,15,16,17,0,15,17],
[13,10,13,14,14,16,0,14],
[14,12,9,13,15,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,15,17,16,16,20],
[14,0,16,16,15,14,18,20],
[16,15,0,15,15,18,18,19],
[16,15,16,0,15,17,16,16],
[14,16,16,16,0,12,16,17],
[15,17,13,14,19,0,17,19],
[15,13,13,15,15,14,0,16],
[11,11,12,15,14,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,27,11,21,18,27,11],
[20,0,19,20,24,21,23,13],
[4,12,0,7,7,10,20,9],
[20,11,24,0,15,16,22,14],
[10,7,24,16,0,14,25,18],
[13,10,21,15,17,0,18,21],
[4,8,11,9,6,13,0,11],
[20,18,22,17,13,10,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,15,19,17,17,18,19],
[10,0,15,14,20,13,15,12],
[16,16,0,20,16,12,18,16],
[12,17,11,0,19,9,15,13],
[14,11,15,12,0,14,18,16],
[14,18,19,22,17,0,21,20],
[13,16,13,16,13,10,0,18],
[12,19,15,18,15,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,12,13,19,18,17],
[12,0,17,9,13,16,14,18],
[14,14,0,11,14,14,15,18],
[19,22,20,0,15,19,20,21],
[18,18,17,16,0,15,16,19],
[12,15,17,12,16,0,14,18],
[13,17,16,11,15,17,0,16],
[14,13,13,10,12,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,26,9,14,21,26,18],
[19,0,26,9,16,23,29,18],
[5,5,0,9,8,11,13,5],
[22,22,22,0,15,14,20,14],
[17,15,23,16,0,21,29,18],
[10,8,20,17,10,0,20,12],
[5,2,18,11,2,11,0,15],
[13,13,26,17,13,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,20,15,16,11,11],
[20,0,8,22,15,13,8,9],
[20,23,0,22,14,16,16,13],
[11,9,9,0,6,13,8,11],
[16,16,17,25,0,16,11,9],
[15,18,15,18,15,0,7,11],
[20,23,15,23,20,24,0,17],
[20,22,18,20,22,20,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,14,13,17,12,20],
[16,0,15,12,18,20,16,11],
[18,16,0,15,20,20,20,14],
[17,19,16,0,18,19,14,16],
[18,13,11,13,0,17,10,16],
[14,11,11,12,14,0,13,16],
[19,15,11,17,21,18,0,17],
[11,20,17,15,15,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,12,21,13,20,18],
[17,0,14,16,20,18,18,21],
[19,17,0,15,24,18,20,24],
[19,15,16,0,28,19,19,18],
[10,11,7,3,0,13,11,13],
[18,13,13,12,18,0,16,16],
[11,13,11,12,20,15,0,12],
[13,10,7,13,18,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,17,22,16,15,19],
[15,0,17,16,17,14,18,18],
[15,14,0,12,19,15,16,17],
[14,15,19,0,16,13,12,16],
[9,14,12,15,0,13,14,12],
[15,17,16,18,18,0,15,16],
[16,13,15,19,17,16,0,17],
[12,13,14,15,19,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,11,14,12,13,15],
[20,0,16,16,21,14,15,17],
[19,15,0,11,17,13,15,19],
[20,15,20,0,23,22,21,20],
[17,10,14,8,0,10,13,14],
[19,17,18,9,21,0,19,18],
[18,16,16,10,18,12,0,19],
[16,14,12,11,17,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,10,18,13,18,15],
[16,0,16,11,20,13,19,13],
[19,15,0,18,24,22,15,13],
[21,20,13,0,18,18,14,19],
[13,11,7,13,0,12,13,8],
[18,18,9,13,19,0,16,10],
[13,12,16,17,18,15,0,10],
[16,18,18,12,23,21,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,20,16,12,24,17,19],
[12,0,16,14,13,18,14,14],
[11,15,0,18,17,19,17,17],
[15,17,13,0,15,20,15,13],
[19,18,14,16,0,22,15,21],
[7,13,12,11,9,0,12,8],
[14,17,14,16,16,19,0,17],
[12,17,14,18,10,23,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,18,17,12,13,15],
[15,0,20,13,19,14,12,11],
[14,11,0,13,18,15,13,14],
[13,18,18,0,21,15,20,18],
[14,12,13,10,0,13,15,11],
[19,17,16,16,18,0,14,18],
[18,19,18,11,16,17,0,18],
[16,20,17,13,20,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,13,13,17,10,11],
[16,0,20,18,28,23,19,11],
[20,11,0,14,17,22,16,16],
[18,13,17,0,19,18,11,17],
[18,3,14,12,0,16,13,6],
[14,8,9,13,15,0,14,18],
[21,12,15,20,18,17,0,16],
[20,20,15,14,25,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,22,18,19,16,18],
[13,0,19,23,13,20,17,14],
[16,12,0,21,12,19,12,19],
[9,8,10,0,8,15,10,14],
[13,18,19,23,0,22,17,17],
[12,11,12,16,9,0,14,6],
[15,14,19,21,14,17,0,18],
[13,17,12,17,14,25,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,20,20,16,21,15,19],
[14,0,15,23,20,19,17,19],
[11,16,0,14,17,20,17,15],
[11,8,17,0,12,22,14,14],
[15,11,14,19,0,20,16,15],
[10,12,11,9,11,0,11,10],
[16,14,14,17,15,20,0,13],
[12,12,16,17,16,21,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,23,13,12,16,15],
[12,0,14,15,11,16,11,16],
[13,17,0,15,15,15,15,15],
[8,16,16,0,12,15,12,15],
[18,20,16,19,0,14,14,15],
[19,15,16,16,17,0,17,13],
[15,20,16,19,17,14,0,10],
[16,15,16,16,16,18,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,18,18,20,15,16],
[18,0,12,20,11,18,9,7],
[16,19,0,13,15,18,16,16],
[13,11,18,0,12,15,15,17],
[13,20,16,19,0,16,16,15],
[11,13,13,16,15,0,8,18],
[16,22,15,16,15,23,0,18],
[15,24,15,14,16,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,20,17,19,14,24],
[13,0,11,19,16,15,13,20],
[13,20,0,23,23,26,20,24],
[11,12,8,0,9,12,14,18],
[14,15,8,22,0,18,16,22],
[12,16,5,19,13,0,14,20],
[17,18,11,17,15,17,0,18],
[7,11,7,13,9,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,16,14,15,15,13,9],
[22,0,26,12,22,22,17,19],
[15,5,0,8,8,8,6,8],
[17,19,23,0,14,24,12,9],
[16,9,23,17,0,21,18,16],
[16,9,23,7,10,0,8,7],
[18,14,25,19,13,23,0,24],
[22,12,23,22,15,24,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,18,15,17,16,13],
[14,0,17,16,13,18,14,15],
[14,14,0,19,14,16,13,11],
[13,15,12,0,12,16,12,13],
[16,18,17,19,0,16,11,15],
[14,13,15,15,15,0,15,9],
[15,17,18,19,20,16,0,16],
[18,16,20,18,16,22,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,17,20,22,22,13,24],
[7,0,17,17,10,20,5,15],
[14,14,0,11,12,20,16,20],
[11,14,20,0,19,25,11,19],
[9,21,19,12,0,25,21,21],
[9,11,11,6,6,0,11,11],
[18,26,15,20,10,20,0,25],
[7,16,11,12,10,20,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,17,17,23,20,21],
[17,0,16,16,13,19,13,16],
[11,15,0,18,17,13,17,20],
[14,15,13,0,10,13,17,19],
[14,18,14,21,0,21,15,27],
[8,12,18,18,10,0,15,20],
[11,18,14,14,16,16,0,23],
[10,15,11,12,4,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,16,15,14,14,19],
[15,0,17,16,20,14,12,15],
[15,14,0,17,15,12,16,17],
[15,15,14,0,17,15,18,16],
[16,11,16,14,0,10,12,12],
[17,17,19,16,21,0,12,15],
[17,19,15,13,19,19,0,14],
[12,16,14,15,19,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,22,19,18,14,20,15],
[19,0,19,20,23,16,17,11],
[9,12,0,18,16,13,17,10],
[12,11,13,0,19,11,14,8],
[13,8,15,12,0,9,17,8],
[17,15,18,20,22,0,21,16],
[11,14,14,17,14,10,0,13],
[16,20,21,23,23,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,11,15,14,14,16],
[14,0,18,12,15,13,15,12],
[16,13,0,13,15,14,14,13],
[20,19,18,0,20,16,15,16],
[16,16,16,11,0,14,14,14],
[17,18,17,15,17,0,17,16],
[17,16,17,16,17,14,0,11],
[15,19,18,15,17,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,20,13,20,20,18],
[15,0,17,16,15,16,16,11],
[15,14,0,19,12,21,15,16],
[11,15,12,0,11,14,14,12],
[18,16,19,20,0,19,16,14],
[11,15,10,17,12,0,13,10],
[11,15,16,17,15,18,0,16],
[13,20,15,19,17,21,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,11,7,11,11,7,7],
[24,0,11,11,10,12,0,0],
[20,20,0,15,20,20,14,20],
[24,20,16,0,12,24,20,20],
[20,21,11,19,0,21,15,21],
[20,19,11,7,10,0,2,3],
[24,31,17,11,16,29,0,19],
[24,31,11,11,10,28,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,18,25,15,23,18],
[16,0,16,15,15,12,15,13],
[9,15,0,13,12,10,11,9],
[13,16,18,0,17,16,17,13],
[6,16,19,14,0,12,19,9],
[16,19,21,15,19,0,18,12],
[8,16,20,14,12,13,0,10],
[13,18,22,18,22,19,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,13,12,15,11,11],
[21,0,18,19,19,23,15,16],
[20,13,0,21,19,16,16,18],
[18,12,10,0,15,16,15,14],
[19,12,12,16,0,12,16,16],
[16,8,15,15,19,0,12,17],
[20,16,15,16,15,19,0,20],
[20,15,13,17,15,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,16,14,17,14,17],
[14,0,13,11,10,14,16,15],
[14,18,0,11,14,15,13,15],
[15,20,20,0,18,17,17,19],
[17,21,17,13,0,20,17,18],
[14,17,16,14,11,0,18,16],
[17,15,18,14,14,13,0,17],
[14,16,16,12,13,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,15,13,18,16,13],
[16,0,14,14,19,19,16,17],
[14,17,0,14,22,18,16,16],
[16,17,17,0,15,19,13,14],
[18,12,9,16,0,16,13,11],
[13,12,13,12,15,0,12,10],
[15,15,15,18,18,19,0,14],
[18,14,15,17,20,21,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,20,17,12,16,18],
[16,0,14,16,20,18,16,16],
[15,17,0,19,18,13,13,19],
[11,15,12,0,16,8,15,14],
[14,11,13,15,0,9,15,17],
[19,13,18,23,22,0,17,19],
[15,15,18,16,16,14,0,17],
[13,15,12,17,14,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,13,18,16,15,12],
[17,0,19,12,15,14,12,14],
[17,12,0,17,17,15,12,12],
[18,19,14,0,16,19,11,16],
[13,16,14,15,0,17,14,14],
[15,17,16,12,14,0,16,14],
[16,19,19,20,17,15,0,21],
[19,17,19,15,17,17,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,19,16,18,12,15],
[13,0,14,19,13,14,13,13],
[18,17,0,20,20,15,17,16],
[12,12,11,0,12,13,11,13],
[15,18,11,19,0,13,17,14],
[13,17,16,18,18,0,13,18],
[19,18,14,20,14,18,0,16],
[16,18,15,18,17,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,15,18,14,13,17],
[16,0,12,15,19,17,16,16],
[19,19,0,19,19,18,19,14],
[16,16,12,0,17,18,16,17],
[13,12,12,14,0,14,18,12],
[17,14,13,13,17,0,19,14],
[18,15,12,15,13,12,0,11],
[14,15,17,14,19,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,31,31,31,15,15,23],
[8,0,31,31,31,8,16,16],
[0,0,0,23,15,0,0,8],
[0,0,8,0,15,0,0,8],
[0,0,16,16,0,0,0,8],
[16,23,31,31,31,0,15,31],
[16,15,31,31,31,16,0,24],
[8,15,23,23,23,0,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,12,11,19,12,16],
[16,0,16,16,11,21,16,17],
[21,15,0,19,18,20,15,16],
[19,15,12,0,22,21,8,13],
[20,20,13,9,0,26,14,19],
[12,10,11,10,5,0,7,8],
[19,15,16,23,17,24,0,16],
[15,14,15,18,12,23,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,15,17,18,20,16],
[14,0,7,5,11,12,17,14],
[16,24,0,12,14,19,23,20],
[16,26,19,0,13,14,19,17],
[14,20,17,18,0,20,21,18],
[13,19,12,17,11,0,16,12],
[11,14,8,12,10,15,0,13],
[15,17,11,14,13,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,18,11,16,16,16,16],
[8,0,8,8,5,19,16,11],
[13,23,0,16,16,16,16,16],
[20,23,15,0,16,24,23,23],
[15,26,15,15,0,19,18,18],
[15,12,15,7,12,0,23,23],
[15,15,15,8,13,8,0,8],
[15,20,15,8,13,8,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,18,17,17,14,16],
[17,0,13,17,15,16,15,18],
[20,18,0,23,15,13,13,18],
[13,14,8,0,11,13,10,13],
[14,16,16,20,0,17,15,17],
[14,15,18,18,14,0,15,13],
[17,16,18,21,16,16,0,15],
[15,13,13,18,14,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,16,12,14,11,10,11],
[22,0,21,21,19,16,14,17],
[15,10,0,18,19,12,14,12],
[19,10,13,0,20,12,12,10],
[17,12,12,11,0,11,9,9],
[20,15,19,19,20,0,18,18],
[21,17,17,19,22,13,0,16],
[20,14,19,21,22,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,13,17,14,17,14,16],
[10,0,11,19,17,19,19,20],
[18,20,0,21,17,19,15,18],
[14,12,10,0,12,16,7,15],
[17,14,14,19,0,15,14,15],
[14,12,12,15,16,0,13,16],
[17,12,16,24,17,18,0,19],
[15,11,13,16,16,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,18,11,16,14,10],
[22,0,12,17,15,22,25,14],
[23,19,0,19,16,18,23,13],
[13,14,12,0,10,13,14,11],
[20,16,15,21,0,21,18,17],
[15,9,13,18,10,0,16,8],
[17,6,8,17,13,15,0,14],
[21,17,18,20,14,23,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,15,18,15,14,21],
[12,0,10,14,16,14,18,13],
[13,21,0,14,18,15,19,18],
[16,17,17,0,17,15,19,19],
[13,15,13,14,0,15,14,12],
[16,17,16,16,16,0,15,20],
[17,13,12,12,17,16,0,20],
[10,18,13,12,19,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,19,9,3,6,3,15],
[22,0,23,17,16,13,21,23],
[12,8,0,11,15,13,15,24],
[22,14,20,0,15,19,21,27],
[28,15,16,16,0,19,24,21],
[25,18,18,12,12,0,12,18],
[28,10,16,10,7,19,0,16],
[16,8,7,4,10,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,16,24,12,13,23],
[14,0,18,11,22,12,14,27],
[14,13,0,20,26,20,16,26],
[15,20,11,0,21,8,9,27],
[7,9,5,10,0,1,7,17],
[19,19,11,23,30,0,13,25],
[18,17,15,22,24,18,0,27],
[8,4,5,4,14,6,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,8,8,13,14,14,27],
[25,0,15,16,21,16,15,28],
[23,16,0,15,21,23,30,20],
[23,15,16,0,22,16,23,27],
[18,10,10,9,0,18,24,30],
[17,15,8,15,13,0,16,20],
[17,16,1,8,7,15,0,13],
[4,3,11,4,1,11,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,24,20,22,18,19],
[19,0,17,20,27,18,23,15],
[20,14,0,27,23,22,22,19],
[7,11,4,0,17,11,15,3],
[11,4,8,14,0,11,12,10],
[9,13,9,20,20,0,16,10],
[13,8,9,16,19,15,0,11],
[12,16,12,28,21,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,17,20,14,16,17,12],
[20,0,18,23,18,15,23,24],
[14,13,0,19,8,10,22,18],
[11,8,12,0,6,7,17,14],
[17,13,23,25,0,16,21,18],
[15,16,21,24,15,0,18,14],
[14,8,9,14,10,13,0,14],
[19,7,13,17,13,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,10,17,14,14,16],
[15,0,9,13,14,19,11,20],
[20,22,0,17,14,21,14,21],
[21,18,14,0,18,19,15,17],
[14,17,17,13,0,21,20,18],
[17,12,10,12,10,0,7,17],
[17,20,17,16,11,24,0,20],
[15,11,10,14,13,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,14,16,16,15,13],
[14,0,13,13,18,12,14,17],
[19,18,0,18,21,18,15,16],
[17,18,13,0,20,17,19,17],
[15,13,10,11,0,14,11,13],
[15,19,13,14,17,0,17,17],
[16,17,16,12,20,14,0,18],
[18,14,15,14,18,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,13,13,19,13,13],
[17,0,14,16,14,22,9,20],
[21,17,0,11,24,23,17,22],
[18,15,20,0,22,19,19,21],
[18,17,7,9,0,18,17,13],
[12,9,8,12,13,0,9,8],
[18,22,14,12,14,22,0,19],
[18,11,9,10,18,23,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,16,9,21,17,16],
[20,0,18,10,18,17,18,16],
[19,13,0,10,17,17,18,14],
[15,21,21,0,19,26,23,17],
[22,13,14,12,0,21,15,19],
[10,14,14,5,10,0,13,15],
[14,13,13,8,16,18,0,12],
[15,15,17,14,12,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,19,18,18,20,14,15],
[8,0,12,8,10,12,11,13],
[12,19,0,11,22,12,12,14],
[13,23,20,0,19,18,19,16],
[13,21,9,12,0,14,11,11],
[11,19,19,13,17,0,17,11],
[17,20,19,12,20,14,0,17],
[16,18,17,15,20,20,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,18,16,21,17,15,19],
[11,0,19,18,16,12,15,15],
[13,12,0,9,18,10,13,14],
[15,13,22,0,19,19,17,20],
[10,15,13,12,0,9,14,17],
[14,19,21,12,22,0,18,20],
[16,16,18,14,17,13,0,18],
[12,16,17,11,14,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,15,15,19,16,16],
[13,0,15,17,13,12,15,14],
[14,16,0,15,13,13,14,13],
[16,14,16,0,17,14,14,15],
[16,18,18,14,0,18,16,18],
[12,19,18,17,13,0,15,19],
[15,16,17,17,15,16,0,17],
[15,17,18,16,13,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,19,12,7,14,21,11],
[19,0,22,17,13,18,23,15],
[12,9,0,11,8,17,11,12],
[19,14,20,0,16,22,21,17],
[24,18,23,15,0,17,24,17],
[17,13,14,9,14,0,18,10],
[10,8,20,10,7,13,0,9],
[20,16,19,14,14,21,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,12,16,20,17,13],
[13,0,14,15,14,13,11,16],
[14,17,0,13,13,14,15,17],
[19,16,18,0,17,20,17,13],
[15,17,18,14,0,15,13,14],
[11,18,17,11,16,0,14,12],
[14,20,16,14,18,17,0,18],
[18,15,14,18,17,19,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,19,18,14,22,17],
[10,0,23,12,17,16,18,22],
[10,8,0,14,13,15,15,15],
[12,19,17,0,13,16,17,20],
[13,14,18,18,0,15,16,21],
[17,15,16,15,16,0,21,21],
[9,13,16,14,15,10,0,16],
[14,9,16,11,10,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,18,17,14,17,19],
[14,0,20,16,13,16,18,15],
[19,11,0,22,17,16,15,16],
[13,15,9,0,13,14,11,14],
[14,18,14,18,0,14,16,17],
[17,15,15,17,17,0,18,13],
[14,13,16,20,15,13,0,16],
[12,16,15,17,14,18,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,13,14,14,14,19],
[16,0,22,19,18,17,15,18],
[14,9,0,12,9,11,7,15],
[18,12,19,0,17,14,16,19],
[17,13,22,14,0,11,20,18],
[17,14,20,17,20,0,17,17],
[17,16,24,15,11,14,0,19],
[12,13,16,12,13,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,11,19,21,14,16],
[15,0,12,11,15,19,17,14],
[16,19,0,15,15,21,22,18],
[20,20,16,0,16,21,25,14],
[12,16,16,15,0,19,18,15],
[10,12,10,10,12,0,13,9],
[17,14,9,6,13,18,0,12],
[15,17,13,17,16,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,17,24,20,17,21,13],
[9,0,8,16,6,9,13,9],
[14,23,0,20,19,20,21,17],
[7,15,11,0,12,7,17,9],
[11,25,12,19,0,14,17,10],
[14,22,11,24,17,0,18,12],
[10,18,10,14,14,13,0,15],
[18,22,14,22,21,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,12,16,15,15,9],
[15,0,19,9,17,8,11,16],
[17,12,0,18,19,17,13,16],
[19,22,13,0,19,12,12,14],
[15,14,12,12,0,3,8,7],
[16,23,14,19,28,0,10,10],
[16,20,18,19,23,21,0,12],
[22,15,15,17,24,21,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,19,16,23,23,23,15],
[9,0,14,9,11,9,12,8],
[12,17,0,12,18,17,20,14],
[15,22,19,0,12,15,17,19],
[8,20,13,19,0,7,14,16],
[8,22,14,16,24,0,21,16],
[8,19,11,14,17,10,0,6],
[16,23,17,12,15,15,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,14,15,20,18,20],
[15,0,17,15,13,20,13,19],
[17,14,0,16,12,12,11,14],
[17,16,15,0,17,20,18,18],
[16,18,19,14,0,21,14,16],
[11,11,19,11,10,0,13,15],
[13,18,20,13,17,18,0,18],
[11,12,17,13,15,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,12,8,9,11,9,8],
[25,0,17,16,14,16,17,19],
[19,14,0,13,17,9,10,14],
[23,15,18,0,14,13,13,16],
[22,17,14,17,0,12,12,14],
[20,15,22,18,19,0,18,15],
[22,14,21,18,19,13,0,12],
[23,12,17,15,17,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,18,15,5,9,15],
[20,0,16,17,18,13,15,23],
[16,15,0,20,16,15,19,22],
[13,14,11,0,12,7,6,19],
[16,13,15,19,0,14,13,16],
[26,18,16,24,17,0,14,23],
[22,16,12,25,18,17,0,27],
[16,8,9,12,15,8,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,16,19,13,19,19],
[14,0,20,13,13,13,23,8],
[15,11,0,21,13,7,27,9],
[15,18,10,0,6,10,18,14],
[12,18,18,25,0,18,24,14],
[18,18,24,21,13,0,27,12],
[12,8,4,13,7,4,0,5],
[12,23,22,17,17,19,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,5,12,19,17,12,10],
[23,0,4,14,21,20,14,8],
[26,27,0,13,30,23,19,17],
[19,17,18,0,22,18,13,13],
[12,10,1,9,0,16,14,9],
[14,11,8,13,15,0,12,7],
[19,17,12,18,17,19,0,12],
[21,23,14,18,22,24,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,12,2,26,14,10,24],
[27,0,12,22,24,25,15,29],
[19,19,0,15,21,19,17,17],
[29,9,16,0,31,29,19,31],
[5,7,10,0,0,17,5,25],
[17,6,12,2,14,0,0,24],
[21,16,14,12,26,31,0,31],
[7,2,14,0,6,7,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,19,14,18,15,17],
[16,0,15,17,13,14,13,14],
[15,16,0,17,14,17,13,16],
[12,14,14,0,13,12,10,11],
[17,18,17,18,0,16,11,12],
[13,17,14,19,15,0,16,11],
[16,18,18,21,20,15,0,14],
[14,17,15,20,19,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,9,9,16,14,11],
[13,0,12,13,12,13,14,13],
[16,19,0,17,13,12,18,13],
[22,18,14,0,14,17,18,15],
[22,19,18,17,0,15,18,12],
[15,18,19,14,16,0,18,16],
[17,17,13,13,13,13,0,11],
[20,18,18,16,19,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,15,13,19,12,17,11],
[25,0,24,19,24,16,15,20],
[16,7,0,6,22,15,14,17],
[18,12,25,0,23,14,12,22],
[12,7,9,8,0,7,5,14],
[19,15,16,17,24,0,19,17],
[14,16,17,19,26,12,0,20],
[20,11,14,9,17,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,9,18,13,13,14,14],
[15,0,12,17,19,18,11,21],
[22,19,0,23,19,20,12,23],
[13,14,8,0,14,18,10,16],
[18,12,12,17,0,20,12,27],
[18,13,11,13,11,0,16,18],
[17,20,19,21,19,15,0,20],
[17,10,8,15,4,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,16,17,18,20,20],
[16,0,19,15,13,19,21,19],
[13,12,0,14,13,15,17,16],
[15,16,17,0,14,19,17,18],
[14,18,18,17,0,20,19,19],
[13,12,16,12,11,0,17,16],
[11,10,14,14,12,14,0,15],
[11,12,15,13,12,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,10,14,16,16,15],
[11,0,8,9,14,11,15,11],
[15,23,0,13,17,18,22,14],
[21,22,18,0,17,15,17,22],
[17,17,14,14,0,14,19,12],
[15,20,13,16,17,0,13,16],
[15,16,9,14,12,18,0,8],
[16,20,17,9,19,15,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,20,14,17,22,11,21],
[16,0,15,10,15,19,13,15],
[11,16,0,13,14,17,15,18],
[17,21,18,0,16,24,15,17],
[14,16,17,15,0,20,17,14],
[9,12,14,7,11,0,10,14],
[20,18,16,16,14,21,0,17],
[10,16,13,14,17,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,13,11,8,13,16],
[16,0,15,15,17,12,16,18],
[18,16,0,14,10,15,14,16],
[18,16,17,0,14,18,15,18],
[20,14,21,17,0,21,22,21],
[23,19,16,13,10,0,19,23],
[18,15,17,16,9,12,0,18],
[15,13,15,13,10,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,14,19,21,18,23],
[6,0,15,8,8,10,17,13],
[6,16,0,14,8,7,16,8],
[17,23,17,0,11,7,16,15],
[12,23,23,20,0,12,23,20],
[10,21,24,24,19,0,21,24],
[13,14,15,15,8,10,0,8],
[8,18,23,16,11,7,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,17,17,16,15,15],
[14,0,17,12,12,13,7,13],
[13,14,0,17,14,15,11,16],
[14,19,14,0,13,12,12,17],
[14,19,17,18,0,14,11,18],
[15,18,16,19,17,0,16,17],
[16,24,20,19,20,15,0,17],
[16,18,15,14,13,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,16,19,16,14,21],
[14,0,9,14,11,15,19,17],
[14,22,0,23,20,22,24,27],
[15,17,8,0,12,18,18,18],
[12,20,11,19,0,18,20,20],
[15,16,9,13,13,0,15,20],
[17,12,7,13,11,16,0,12],
[10,14,4,13,11,11,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,12,6,13,13,7,13],
[24,0,20,10,14,11,17,18],
[19,11,0,6,8,7,14,8],
[25,21,25,0,12,11,19,8],
[18,17,23,19,0,14,17,11],
[18,20,24,20,17,0,18,13],
[24,14,17,12,14,13,0,13],
[18,13,23,23,20,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,12,13,14,11,17],
[15,0,13,13,16,14,17,12],
[19,18,0,20,20,17,16,15],
[19,18,11,0,14,15,13,15],
[18,15,11,17,0,14,14,18],
[17,17,14,16,17,0,15,16],
[20,14,15,18,17,16,0,15],
[14,19,16,16,13,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,20,16,15,20,21],
[12,0,18,18,19,16,19,19],
[13,13,0,16,13,16,16,16],
[11,13,15,0,18,15,15,16],
[15,12,18,13,0,14,20,18],
[16,15,15,16,17,0,16,19],
[11,12,15,16,11,15,0,17],
[10,12,15,15,13,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,24,15,20,19,17,23],
[8,0,12,9,13,11,16,26],
[7,19,0,9,13,8,11,17],
[16,22,22,0,13,20,16,23],
[11,18,18,18,0,20,18,23],
[12,20,23,11,11,0,15,18],
[14,15,20,15,13,16,0,19],
[8,5,14,8,8,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,14,19,13,19,8],
[17,0,16,21,20,17,16,10],
[19,15,0,18,21,17,22,17],
[17,10,13,0,20,15,17,11],
[12,11,10,11,0,10,14,7],
[18,14,14,16,21,0,16,13],
[12,15,9,14,17,15,0,13],
[23,21,14,20,24,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,21,18,15,17,20],
[13,0,17,19,20,15,14,16],
[18,14,0,16,17,17,24,16],
[10,12,15,0,16,18,12,16],
[13,11,14,15,0,14,14,13],
[16,16,14,13,17,0,19,12],
[14,17,7,19,17,12,0,15],
[11,15,15,15,18,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,12,10,16,17,21],
[14,0,15,13,11,11,18,19],
[19,16,0,17,11,11,20,19],
[19,18,14,0,16,15,21,20],
[21,20,20,15,0,18,21,17],
[15,20,20,16,13,0,22,19],
[14,13,11,10,10,9,0,19],
[10,12,12,11,14,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,13,13,16,20,13],
[14,0,10,14,13,13,10,14],
[14,21,0,11,8,15,15,14],
[18,17,20,0,17,15,14,21],
[18,18,23,14,0,17,11,18],
[15,18,16,16,14,0,17,18],
[11,21,16,17,20,14,0,21],
[18,17,17,10,13,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,14,17,17,20,18],
[11,0,11,13,16,12,14,18],
[12,20,0,17,14,14,14,16],
[17,18,14,0,14,15,18,19],
[14,15,17,17,0,15,20,14],
[14,19,17,16,16,0,18,21],
[11,17,17,13,11,13,0,13],
[13,13,15,12,17,10,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,15,13,17,17,16],
[11,0,18,18,16,16,14,19],
[12,13,0,11,13,13,12,14],
[16,13,20,0,18,17,21,18],
[18,15,18,13,0,18,18,20],
[14,15,18,14,13,0,19,19],
[14,17,19,10,13,12,0,14],
[15,12,17,13,11,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,18,23,19,14,15,19],
[7,0,10,12,14,14,16,15],
[13,21,0,17,16,15,17,14],
[8,19,14,0,13,19,11,12],
[12,17,15,18,0,11,20,20],
[17,17,16,12,20,0,22,14],
[16,15,14,20,11,9,0,15],
[12,16,17,19,11,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,11,14,18,12,15,12],
[14,0,15,18,16,13,13,14],
[20,16,0,16,22,13,16,18],
[17,13,15,0,23,16,17,17],
[13,15,9,8,0,10,14,15],
[19,18,18,15,21,0,14,15],
[16,18,15,14,17,17,0,14],
[19,17,13,14,16,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,21,9,21,21,31,12],
[19,0,31,19,19,19,31,10],
[10,0,0,19,0,19,31,10],
[22,12,12,0,12,31,31,22],
[10,12,31,19,0,31,31,22],
[10,12,12,0,0,0,22,22],
[0,0,0,0,0,9,0,0],
[19,21,21,9,9,9,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,13,11,15,18,13],
[14,0,4,16,2,13,12,12],
[14,27,0,24,10,16,12,16],
[18,15,7,0,8,20,18,15],
[20,29,21,23,0,23,11,22],
[16,18,15,11,8,0,18,15],
[13,19,19,13,20,13,0,19],
[18,19,15,16,9,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,23,16,17,13,14],
[8,0,27,17,14,10,13,17],
[5,4,0,14,10,4,0,18],
[8,14,17,0,14,4,0,14],
[15,17,21,17,0,7,17,18],
[14,21,27,27,24,0,23,24],
[18,18,31,31,14,8,0,31],
[17,14,13,17,13,7,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,13,6,19,16,13],
[13,0,16,12,7,20,13,13],
[16,15,0,11,11,18,19,13],
[18,19,20,0,12,20,16,18],
[25,24,20,19,0,24,19,14],
[12,11,13,11,7,0,16,10],
[15,18,12,15,12,15,0,10],
[18,18,18,13,17,21,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,25,20,15,14,17,15],
[11,0,18,19,18,19,19,14],
[6,13,0,15,10,14,19,16],
[11,12,16,0,12,7,17,7],
[16,13,21,19,0,15,24,12],
[17,12,17,24,16,0,20,18],
[14,12,12,14,7,11,0,15],
[16,17,15,24,19,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,15,15,16,21,15],
[12,0,16,12,12,13,18,16],
[13,15,0,14,13,9,15,17],
[16,19,17,0,17,13,22,15],
[16,19,18,14,0,13,15,16],
[15,18,22,18,18,0,20,18],
[10,13,16,9,16,11,0,8],
[16,15,14,16,15,13,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,15,18,23,25,12,19],
[9,0,12,9,7,14,9,13],
[16,19,0,17,14,25,15,20],
[13,22,14,0,22,27,9,17],
[8,24,17,9,0,28,8,12],
[6,17,6,4,3,0,4,7],
[19,22,16,22,23,27,0,12],
[12,18,11,14,19,24,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,19,20,24,25,22],
[16,0,14,25,18,25,23,26],
[14,17,0,17,17,24,17,20],
[12,6,14,0,15,22,21,26],
[11,13,14,16,0,21,17,16],
[7,6,7,9,10,0,11,12],
[6,8,14,10,14,20,0,13],
[9,5,11,5,15,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,11,16,16,16,16,13],
[11,0,13,13,11,14,18,11],
[20,18,0,17,14,17,19,15],
[15,18,14,0,17,21,19,16],
[15,20,17,14,0,18,17,16],
[15,17,14,10,13,0,17,13],
[15,13,12,12,14,14,0,14],
[18,20,16,15,15,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,18,24,22,16,20,13],
[9,0,16,17,17,14,12,17],
[13,15,0,18,16,11,17,16],
[7,14,13,0,12,10,13,14],
[9,14,15,19,0,11,16,13],
[15,17,20,21,20,0,22,16],
[11,19,14,18,15,9,0,13],
[18,14,15,17,18,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,16,11,15,10,10],
[20,0,21,18,14,17,17,15],
[15,10,0,13,10,13,12,12],
[15,13,18,0,13,18,13,17],
[20,17,21,18,0,19,17,14],
[16,14,18,13,12,0,9,11],
[21,14,19,18,14,22,0,13],
[21,16,19,14,17,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,17,20,25,19,12],
[19,0,17,15,15,19,17,12],
[14,14,0,11,9,19,10,12],
[14,16,20,0,15,24,17,15],
[11,16,22,16,0,19,20,17],
[6,12,12,7,12,0,7,8],
[12,14,21,14,11,24,0,9],
[19,19,19,16,14,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,19,16,16,20,14,15],
[9,0,15,16,6,15,8,16],
[12,16,0,9,8,20,8,19],
[15,15,22,0,13,18,13,18],
[15,25,23,18,0,24,19,21],
[11,16,11,13,7,0,8,10],
[17,23,23,18,12,23,0,19],
[16,15,12,13,10,21,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,13,18,24,24,19,20],
[11,0,14,10,24,16,20,20],
[18,17,0,16,21,17,15,17],
[13,21,15,0,24,22,15,20],
[7,7,10,7,0,18,20,13],
[7,15,14,9,13,0,14,9],
[12,11,16,16,11,17,0,17],
[11,11,14,11,18,22,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,20,18,10,15,17,18],
[21,0,20,16,20,15,14,15],
[11,11,0,9,10,10,15,9],
[13,15,22,0,19,18,19,8],
[21,11,21,12,0,11,16,14],
[16,16,21,13,20,0,19,11],
[14,17,16,12,15,12,0,12],
[13,16,22,23,17,20,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,22,22,14,22,27],
[9,0,16,21,16,23,16,21],
[7,15,0,24,16,16,24,14],
[9,10,7,0,7,11,24,9],
[9,15,15,24,0,11,24,17],
[17,8,15,20,20,0,22,22],
[9,15,7,7,7,9,0,7],
[4,10,17,22,14,9,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,11,19,20,15,18,14],
[9,0,9,14,9,21,12,12],
[20,22,0,15,14,16,13,12],
[12,17,16,0,14,18,6,5],
[11,22,17,17,0,26,5,11],
[16,10,15,13,5,0,9,16],
[13,19,18,25,26,22,0,18],
[17,19,19,26,20,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,14,14,17,14,19],
[17,0,18,17,13,16,18,13],
[15,13,0,14,12,14,16,15],
[17,14,17,0,13,13,18,16],
[17,18,19,18,0,18,13,16],
[14,15,17,18,13,0,16,14],
[17,13,15,13,18,15,0,16],
[12,18,16,15,15,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,9,13,11,10,9],
[18,0,22,15,18,21,14,19],
[17,9,0,14,18,19,18,17],
[22,16,17,0,15,21,9,21],
[18,13,13,16,0,17,15,15],
[20,10,12,10,14,0,9,13],
[21,17,13,22,16,22,0,23],
[22,12,14,10,16,18,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,21,19,19,14,20,10],
[16,0,13,14,18,15,22,19],
[10,18,0,18,18,17,21,16],
[12,17,13,0,13,16,19,12],
[12,13,13,18,0,17,22,12],
[17,16,14,15,14,0,21,14],
[11,9,10,12,9,10,0,10],
[21,12,15,19,19,17,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,21,14,17,15,20],
[17,0,12,16,14,15,21,20],
[16,19,0,24,12,16,23,23],
[10,15,7,0,13,11,19,14],
[17,17,19,18,0,9,21,19],
[14,16,15,20,22,0,18,25],
[16,10,8,12,10,13,0,18],
[11,11,8,17,12,6,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,15,11,18,16,22,20],
[11,0,11,12,13,12,9,12],
[16,20,0,17,14,19,15,21],
[20,19,14,0,15,16,19,18],
[13,18,17,16,0,16,17,16],
[15,19,12,15,15,0,14,15],
[9,22,16,12,14,17,0,18],
[11,19,10,13,15,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,15,20,20,17,20,14],
[9,0,14,9,12,7,9,8],
[16,17,0,15,21,17,15,17],
[11,22,16,0,14,20,17,13],
[11,19,10,17,0,16,18,7],
[14,24,14,11,15,0,18,11],
[11,22,16,14,13,13,0,11],
[17,23,14,18,24,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,16,18,21,14,21],
[15,0,22,17,16,17,18,15],
[13,9,0,17,17,5,13,15],
[15,14,14,0,12,13,14,11],
[13,15,14,19,0,13,12,11],
[10,14,26,18,18,0,20,20],
[17,13,18,17,19,11,0,25],
[10,16,16,20,20,11,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,17,19,19,12,20],
[14,0,25,22,15,15,22,23],
[14,6,0,12,6,12,10,17],
[14,9,19,0,9,11,14,12],
[12,16,25,22,0,19,17,15],
[12,16,19,20,12,0,11,20],
[19,9,21,17,14,20,0,24],
[11,8,14,19,16,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,18,15,16,13,18],
[16,0,10,10,18,14,10,17],
[20,21,0,13,17,16,18,18],
[13,21,18,0,14,17,15,19],
[16,13,14,17,0,13,10,15],
[15,17,15,14,18,0,15,18],
[18,21,13,16,21,16,0,19],
[13,14,13,12,16,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,14,15,15,16,19],
[19,0,19,16,19,18,15,18],
[16,12,0,14,14,17,15,16],
[17,15,17,0,20,20,16,17],
[16,12,17,11,0,17,17,13],
[16,13,14,11,14,0,14,14],
[15,16,16,15,14,17,0,14],
[12,13,15,14,18,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,21,10,16,15,17,19],
[16,0,14,8,8,11,11,16],
[10,17,0,16,9,11,9,16],
[21,23,15,0,14,13,15,15],
[15,23,22,17,0,17,14,19],
[16,20,20,18,14,0,12,20],
[14,20,22,16,17,19,0,16],
[12,15,15,16,12,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,21,19,22,16,15],
[14,0,15,19,15,20,17,17],
[15,16,0,21,19,24,14,18],
[10,12,10,0,15,16,11,13],
[12,16,12,16,0,17,11,16],
[9,11,7,15,14,0,12,12],
[15,14,17,20,20,19,0,15],
[16,14,13,18,15,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,23,23,17,15,18],
[15,0,18,21,23,19,16,17],
[16,13,0,22,20,13,9,13],
[8,10,9,0,21,9,12,19],
[8,8,11,10,0,7,3,15],
[14,12,18,22,24,0,20,20],
[16,15,22,19,28,11,0,21],
[13,14,18,12,16,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,21,17,20,17,11],
[16,0,15,18,16,22,18,20],
[13,16,0,22,19,19,18,15],
[10,13,9,0,15,16,12,10],
[14,15,12,16,0,21,16,19],
[11,9,12,15,10,0,15,10],
[14,13,13,19,15,16,0,12],
[20,11,16,21,12,21,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,23,17,17,17,9,0],
[22,0,14,8,22,22,22,22],
[8,17,0,8,8,17,17,8],
[14,23,23,0,23,23,23,14],
[14,9,23,8,0,9,9,0],
[14,9,14,8,22,0,9,0],
[22,9,14,8,22,22,0,8],
[31,9,23,17,31,31,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,11,15,13,14,13],
[15,0,12,14,15,11,16,15],
[18,19,0,18,18,13,15,17],
[20,17,13,0,16,12,17,15],
[16,16,13,15,0,11,14,12],
[18,20,18,19,20,0,20,15],
[17,15,16,14,17,11,0,14],
[18,16,14,16,19,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,7,10,14,16,19,12],
[17,0,13,20,12,20,17,10],
[24,18,0,19,18,15,21,14],
[21,11,12,0,15,18,21,15],
[17,19,13,16,0,19,22,17],
[15,11,16,13,12,0,19,12],
[12,14,10,10,9,12,0,4],
[19,21,17,16,14,19,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,20,15,21,25,20],
[15,0,8,22,16,17,23,21],
[14,23,0,22,17,17,21,23],
[11,9,9,0,12,16,17,20],
[16,15,14,19,0,22,20,21],
[10,14,14,15,9,0,23,16],
[6,8,10,14,11,8,0,16],
[11,10,8,11,10,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,18,17,11,17,10],
[20,0,15,26,18,20,16,15],
[18,16,0,20,14,19,21,16],
[13,5,11,0,12,12,14,8],
[14,13,17,19,0,16,16,13],
[20,11,12,19,15,0,14,10],
[14,15,10,17,15,17,0,15],
[21,16,15,23,18,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,19,18,17,15,15],
[18,0,20,24,22,14,21,21],
[21,11,0,20,15,10,15,12],
[12,7,11,0,15,9,14,11],
[13,9,16,16,0,14,11,10],
[14,17,21,22,17,0,18,16],
[16,10,16,17,20,13,0,12],
[16,10,19,20,21,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,17,18,13,23,19],
[13,0,14,17,22,12,18,17],
[18,17,0,16,17,13,22,19],
[14,14,15,0,16,9,19,15],
[13,9,14,15,0,9,17,11],
[18,19,18,22,22,0,24,15],
[8,13,9,12,14,7,0,14],
[12,14,12,16,20,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,24,15,20,20,15,19],
[17,0,21,10,20,15,20,25],
[7,10,0,13,14,12,5,13],
[16,21,18,0,13,16,11,15],
[11,11,17,18,0,11,8,10],
[11,16,19,15,20,0,10,19],
[16,11,26,20,23,21,0,23],
[12,6,18,16,21,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,27,27,28,14,15,15],
[17,0,13,13,28,14,14,1],
[4,18,0,14,15,15,4,4],
[4,18,17,0,15,14,18,18],
[3,3,16,16,0,17,4,3],
[17,17,16,17,14,0,17,4],
[16,17,27,13,27,14,0,3],
[16,30,27,13,28,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,23,24,11,15,20],
[7,0,19,19,19,3,7,16],
[7,12,0,15,28,15,11,12],
[8,12,16,0,28,15,16,16],
[7,12,3,3,0,7,11,0],
[20,28,16,16,24,0,12,16],
[16,24,20,15,20,19,0,12],
[11,15,19,15,31,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,8,19,8,19,19,8],
[12,0,12,12,12,8,19,20],
[23,19,0,23,12,19,19,31],
[12,19,8,0,20,8,19,8],
[23,19,19,11,0,19,19,19],
[12,23,12,23,12,0,23,12],
[12,12,12,12,12,8,0,12],
[23,11,0,23,12,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,9,18,13,13,13,13],
[26,0,17,20,17,17,22,14],
[22,14,0,15,16,15,12,12],
[13,11,16,0,13,10,12,16],
[18,14,15,18,0,15,18,16],
[18,14,16,21,16,0,17,11],
[18,9,19,19,13,14,0,12],
[18,17,19,15,15,20,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,19,21,29,12,25,25],
[10,0,18,13,18,11,14,21],
[12,13,0,12,29,1,12,20],
[10,18,19,0,19,20,18,24],
[2,13,2,12,0,3,6,20],
[19,20,30,11,28,0,26,19],
[6,17,19,13,25,5,0,18],
[6,10,11,7,11,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,13,17,17,17,18],
[14,0,11,17,14,15,16,18],
[12,20,0,19,15,16,17,19],
[18,14,12,0,16,20,18,14],
[14,17,16,15,0,21,21,22],
[14,16,15,11,10,0,18,17],
[14,15,14,13,10,13,0,11],
[13,13,12,17,9,14,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,9,13,14,16,12,16],
[15,0,11,14,17,17,17,18],
[22,20,0,18,14,18,15,18],
[18,17,13,0,13,17,15,19],
[17,14,17,18,0,17,12,17],
[15,14,13,14,14,0,16,17],
[19,14,16,16,19,15,0,18],
[15,13,13,12,14,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,14,31,17,31,31,14],
[6,0,6,17,17,31,17,17],
[17,25,0,31,14,28,31,31],
[0,14,0,0,3,17,17,11],
[14,14,17,28,0,17,20,28],
[0,0,3,14,14,0,6,14],
[0,14,0,14,11,25,0,14],
[17,14,0,20,3,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,18,16,14,12,13],
[16,0,20,23,22,17,16,12],
[12,11,0,15,15,12,10,10],
[13,8,16,0,19,15,14,11],
[15,9,16,12,0,8,10,8],
[17,14,19,16,23,0,10,14],
[19,15,21,17,21,21,0,17],
[18,19,21,20,23,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,13,14,8,11,14],
[17,0,20,13,16,10,18,20],
[14,11,0,11,11,11,16,18],
[18,18,20,0,20,13,18,17],
[17,15,20,11,0,11,15,17],
[23,21,20,18,20,0,14,20],
[20,13,15,13,16,17,0,17],
[17,11,13,14,14,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,15,12,11,8,13],
[18,0,12,19,12,8,11,10],
[15,19,0,19,15,9,12,17],
[16,12,12,0,17,11,16,11],
[19,19,16,14,0,18,13,18],
[20,23,22,20,13,0,14,18],
[23,20,19,15,18,17,0,17],
[18,21,14,20,13,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,21,22,14,16,16],
[17,0,18,14,20,15,15,15],
[15,13,0,16,22,7,10,13],
[10,17,15,0,18,11,9,12],
[9,11,9,13,0,9,11,13],
[17,16,24,20,22,0,14,15],
[15,16,21,22,20,17,0,12],
[15,16,18,19,18,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,1,9,11,17,1,10,3],
[30,0,16,12,22,15,23,16],
[22,15,0,21,12,14,13,17],
[20,19,10,0,16,16,14,19],
[14,9,19,15,0,7,18,8],
[30,16,17,15,24,0,18,16],
[21,8,18,17,13,13,0,11],
[28,15,14,12,23,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,18,15,17,18,16],
[16,0,19,16,15,20,19,20],
[19,12,0,19,16,18,23,16],
[13,15,12,0,16,12,17,17],
[16,16,15,15,0,16,20,19],
[14,11,13,19,15,0,14,17],
[13,12,8,14,11,17,0,12],
[15,11,15,14,12,14,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,15,15,17,18,16],
[14,0,17,17,12,15,17,17],
[15,14,0,11,14,13,16,18],
[16,14,20,0,19,14,20,22],
[16,19,17,12,0,15,17,19],
[14,16,18,17,16,0,21,17],
[13,14,15,11,14,10,0,15],
[15,14,13,9,12,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,23,18,17,17,14,19],
[15,0,18,13,15,19,11,16],
[8,13,0,14,15,16,11,12],
[13,18,17,0,17,16,11,14],
[14,16,16,14,0,14,14,16],
[14,12,15,15,17,0,8,13],
[17,20,20,20,17,23,0,13],
[12,15,19,17,15,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,14,6,14,10,12],
[20,0,15,17,17,21,20,16],
[19,16,0,18,16,15,11,17],
[17,14,13,0,9,22,13,15],
[25,14,15,22,0,25,20,21],
[17,10,16,9,6,0,17,20],
[21,11,20,18,11,14,0,13],
[19,15,14,16,10,11,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,20,19,21,20,15],
[13,0,6,10,16,10,12,10],
[14,25,0,19,24,17,19,18],
[11,21,12,0,13,16,18,19],
[12,15,7,18,0,14,19,15],
[10,21,14,15,17,0,16,16],
[11,19,12,13,12,15,0,14],
[16,21,13,12,16,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,22,31,22,31,21],
[22,0,12,22,22,22,22,12],
[19,19,0,10,19,19,19,9],
[9,9,21,0,9,9,9,9],
[0,9,12,22,0,22,31,12],
[9,9,12,22,9,0,9,21],
[0,9,12,22,0,22,0,12],
[10,19,22,22,19,10,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,13,19,11,17,20],
[15,0,9,13,22,10,9,9],
[20,22,0,16,23,14,16,21],
[18,18,15,0,18,13,17,13],
[12,9,8,13,0,8,15,5],
[20,21,17,18,23,0,20,14],
[14,22,15,14,16,11,0,11],
[11,22,10,18,26,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,13,16,13,18,19],
[20,0,19,11,18,15,19,22],
[15,12,0,16,16,15,18,16],
[18,20,15,0,18,16,18,23],
[15,13,15,13,0,14,19,18],
[18,16,16,15,17,0,17,20],
[13,12,13,13,12,14,0,16],
[12,9,15,8,13,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,24,12,18,10,16,18],
[10,0,22,14,14,10,18,18],
[7,9,0,11,11,11,9,19],
[19,17,20,0,18,23,17,14],
[13,17,20,13,0,15,21,18],
[21,21,20,8,16,0,17,12],
[15,13,22,14,10,14,0,22],
[13,13,12,17,13,19,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,19,13,15,11,18],
[16,0,15,14,11,14,13,20],
[19,16,0,17,16,13,18,16],
[12,17,14,0,15,15,15,20],
[18,20,15,16,0,15,14,22],
[16,17,18,16,16,0,11,17],
[20,18,13,16,17,20,0,18],
[13,11,15,11,9,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,20,3,9,19,20,27],
[9,0,14,2,10,21,14,27],
[11,17,0,11,18,21,15,21],
[28,29,20,0,10,27,21,27],
[22,21,13,21,0,18,21,21],
[12,10,10,4,13,0,16,21],
[11,17,16,10,10,15,0,24],
[4,4,10,4,10,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,16,15,14,14,19,13],
[12,0,12,11,11,11,20,15],
[15,19,0,12,15,14,21,16],
[16,20,19,0,15,21,20,20],
[17,20,16,16,0,18,21,13],
[17,20,17,10,13,0,14,12],
[12,11,10,11,10,17,0,12],
[18,16,15,11,18,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,12,12,9,12,8],
[21,0,16,10,19,15,15,17],
[16,15,0,13,18,15,14,14],
[19,21,18,0,15,20,18,18],
[19,12,13,16,0,12,12,13],
[22,16,16,11,19,0,21,17],
[19,16,17,13,19,10,0,16],
[23,14,17,13,18,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,17,16,15,21,19],
[13,0,12,9,18,17,16,13],
[16,19,0,17,18,15,16,18],
[14,22,14,0,15,18,20,15],
[15,13,13,16,0,14,13,15],
[16,14,16,13,17,0,18,17],
[10,15,15,11,18,13,0,14],
[12,18,13,16,16,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,16,14,19,18,17],
[15,0,19,15,14,15,15,14],
[14,12,0,14,16,13,15,15],
[15,16,17,0,18,17,19,17],
[17,17,15,13,0,15,17,15],
[12,16,18,14,16,0,16,14],
[13,16,16,12,14,15,0,15],
[14,17,16,14,16,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,10,14,14,22,20],
[21,0,2,11,23,12,31,12],
[21,29,0,11,23,12,31,21],
[21,20,20,0,14,12,20,20],
[17,8,8,17,0,20,20,20],
[17,19,19,19,11,0,31,29],
[9,0,0,11,11,0,0,12],
[11,19,10,11,11,2,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,26,21,23,14,21,13],
[15,0,26,21,18,17,27,13],
[5,5,0,5,9,9,11,9],
[10,10,26,0,17,5,18,17],
[8,13,22,14,0,16,21,9],
[17,14,22,26,15,0,28,13],
[10,4,20,13,10,3,0,11],
[18,18,22,14,22,18,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,14,18,12,17,20],
[19,0,15,16,17,12,14,23],
[20,16,0,19,20,14,13,23],
[17,15,12,0,14,18,13,18],
[13,14,11,17,0,14,10,24],
[19,19,17,13,17,0,13,17],
[14,17,18,18,21,18,0,24],
[11,8,8,13,7,14,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,10,14,16,16,14],
[17,0,21,14,14,9,15,12],
[15,10,0,8,9,11,14,12],
[21,17,23,0,16,16,20,13],
[17,17,22,15,0,14,20,13],
[15,22,20,15,17,0,21,13],
[15,16,17,11,11,10,0,17],
[17,19,19,18,18,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,21,19,15,24,20],
[10,0,20,14,17,12,23,20],
[8,11,0,15,10,15,15,14],
[10,17,16,0,13,13,18,17],
[12,14,21,18,0,20,18,20],
[16,19,16,18,11,0,16,28],
[7,8,16,13,13,15,0,17],
[11,11,17,14,11,3,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,17,18,15,17,14],
[17,0,19,16,19,15,16,14],
[11,12,0,14,14,16,15,16],
[14,15,17,0,17,13,20,17],
[13,12,17,14,0,18,18,15],
[16,16,15,18,13,0,19,14],
[14,15,16,11,13,12,0,12],
[17,17,15,14,16,17,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,18,17,14,17,15],
[17,0,17,18,17,14,16,17],
[14,14,0,13,12,15,15,15],
[13,13,18,0,14,14,17,14],
[14,14,19,17,0,16,17,16],
[17,17,16,17,15,0,16,16],
[14,15,16,14,14,15,0,12],
[16,14,16,17,15,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,12,12,11,10,15],
[15,0,15,15,15,9,9,15],
[18,16,0,14,15,10,12,21],
[19,16,17,0,16,13,16,16],
[19,16,16,15,0,9,11,17],
[20,22,21,18,22,0,15,21],
[21,22,19,15,20,16,0,19],
[16,16,10,15,14,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,13,7,12,11,13],
[22,0,18,19,15,20,14,17],
[21,13,0,20,12,12,15,16],
[18,12,11,0,11,11,12,12],
[24,16,19,20,0,19,12,15],
[19,11,19,20,12,0,13,12],
[20,17,16,19,19,18,0,15],
[18,14,15,19,16,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,16,12,12,15,16],
[18,0,19,20,14,12,16,16],
[14,12,0,14,14,14,14,14],
[15,11,17,0,13,14,14,13],
[19,17,17,18,0,16,16,15],
[19,19,17,17,15,0,18,17],
[16,15,17,17,15,13,0,13],
[15,15,17,18,16,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,7,16,10,14,8],
[18,0,11,14,22,16,18,15],
[19,20,0,20,20,12,17,17],
[24,17,11,0,22,11,25,21],
[15,9,11,9,0,10,9,14],
[21,15,19,20,21,0,19,19],
[17,13,14,6,22,12,0,13],
[23,16,14,10,17,12,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,13,14,13,13,19],
[16,0,19,18,15,10,16,16],
[13,12,0,13,12,11,11,14],
[18,13,18,0,15,14,15,15],
[17,16,19,16,0,15,16,18],
[18,21,20,17,16,0,14,19],
[18,15,20,16,15,17,0,16],
[12,15,17,16,13,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,10,14,12,17,17,17],
[9,0,10,8,6,5,12,8],
[21,21,0,14,17,19,18,12],
[17,23,17,0,18,12,13,7],
[19,25,14,13,0,24,22,11],
[14,26,12,19,7,0,20,5],
[14,19,13,18,9,11,0,14],
[14,23,19,24,20,26,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,20,20,26,23,15],
[16,0,12,20,18,22,19,17],
[19,19,0,25,19,19,14,19],
[11,11,6,0,11,6,6,17],
[11,13,12,20,0,20,19,12],
[5,9,12,25,11,0,8,17],
[8,12,17,25,12,23,0,20],
[16,14,12,14,19,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,11,10,10,10,25,19],
[25,0,16,16,10,10,25,19],
[20,15,0,24,18,11,25,19],
[21,15,7,0,14,1,15,15],
[21,21,13,17,0,18,26,21],
[21,21,20,30,13,0,31,15],
[6,6,6,16,5,0,0,14],
[12,12,12,16,10,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,9,6,10,15,13],
[22,0,18,26,18,12,27,23],
[19,13,0,18,10,15,20,19],
[22,5,13,0,3,16,23,17],
[25,13,21,28,0,19,26,23],
[21,19,16,15,12,0,26,16],
[16,4,11,8,5,5,0,16],
[18,8,12,14,8,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,15,23,15,21,13,19],
[12,0,18,7,13,15,11,7],
[16,13,0,11,18,19,7,7],
[8,24,20,0,18,16,10,11],
[16,18,13,13,0,18,14,10],
[10,16,12,15,13,0,10,9],
[18,20,24,21,17,21,0,11],
[12,24,24,20,21,22,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,4,22,10,18,18,12],
[21,0,14,12,14,14,16,14],
[27,17,0,20,23,22,24,10],
[9,19,11,0,17,17,10,9],
[21,17,8,14,0,16,12,10],
[13,17,9,14,15,0,17,16],
[13,15,7,21,19,14,0,17],
[19,17,21,22,21,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,22,16,15,13,15],
[17,0,16,22,15,21,16,20],
[16,15,0,20,16,17,12,18],
[9,9,11,0,10,15,5,10],
[15,16,15,21,0,16,12,11],
[16,10,14,16,15,0,13,14],
[18,15,19,26,19,18,0,26],
[16,11,13,21,20,17,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,20,17,12,15,14,16],
[16,0,15,15,12,12,17,13],
[11,16,0,14,10,9,12,9],
[14,16,17,0,14,15,14,8],
[19,19,21,17,0,18,19,12],
[16,19,22,16,13,0,18,18],
[17,14,19,17,12,13,0,13],
[15,18,22,23,19,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,17,16,16,14,16],
[15,0,14,17,14,14,18,15],
[20,17,0,21,16,17,14,16],
[14,14,10,0,17,17,16,12],
[15,17,15,14,0,16,16,15],
[15,17,14,14,15,0,15,13],
[17,13,17,15,15,16,0,15],
[15,16,15,19,16,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,7,7,15,5,15,5],
[26,0,2,2,12,16,19,4],
[24,29,0,19,24,19,29,14],
[24,29,12,0,10,29,17,12],
[16,19,7,21,0,21,21,16],
[26,15,12,2,10,0,19,4],
[16,12,2,14,10,12,0,4],
[26,27,17,19,15,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,11,12,13,9,13,11],
[26,0,18,17,23,15,15,24],
[20,13,0,13,13,8,10,13],
[19,14,18,0,19,11,19,14],
[18,8,18,12,0,16,12,13],
[22,16,23,20,15,0,17,22],
[18,16,21,12,19,14,0,12],
[20,7,18,17,18,9,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,21,12,24,20,19,19],
[8,0,16,11,10,12,13,17],
[10,15,0,13,14,11,10,16],
[19,20,18,0,20,15,18,17],
[7,21,17,11,0,14,14,15],
[11,19,20,16,17,0,18,16],
[12,18,21,13,17,13,0,16],
[12,14,15,14,16,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,15,15,16,17,12],
[19,0,19,17,19,14,17,19],
[14,12,0,12,16,10,12,15],
[16,14,19,0,19,15,17,13],
[16,12,15,12,0,10,17,14],
[15,17,21,16,21,0,18,17],
[14,14,19,14,14,13,0,12],
[19,12,16,18,17,14,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,15,16,21,19,18],
[13,0,14,14,11,16,11,14],
[16,17,0,16,15,22,19,18],
[16,17,15,0,14,16,18,17],
[15,20,16,17,0,19,19,17],
[10,15,9,15,12,0,19,18],
[12,20,12,13,12,12,0,10],
[13,17,13,14,14,13,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,16,15,17,16,17],
[12,0,13,15,17,13,12,11],
[13,18,0,17,16,17,15,12],
[15,16,14,0,14,17,14,13],
[16,14,15,17,0,15,10,14],
[14,18,14,14,16,0,12,13],
[15,19,16,17,21,19,0,15],
[14,20,19,18,17,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,18,15,16,18,18,14],
[11,0,12,11,10,14,12,13],
[13,19,0,18,17,17,17,15],
[16,20,13,0,18,22,15,16],
[15,21,14,13,0,20,18,16],
[13,17,14,9,11,0,16,12],
[13,19,14,16,13,15,0,13],
[17,18,16,15,15,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,16,16,12,19,14],
[14,0,14,18,9,15,20,15],
[15,17,0,16,8,14,16,14],
[15,13,15,0,13,15,15,17],
[15,22,23,18,0,17,19,15],
[19,16,17,16,14,0,18,17],
[12,11,15,16,12,13,0,18],
[17,16,17,14,16,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,15,18,16,21,16,16],
[8,0,14,15,15,19,14,16],
[16,17,0,15,17,19,16,15],
[13,16,16,0,13,19,13,16],
[15,16,14,18,0,18,20,18],
[10,12,12,12,13,0,11,13],
[15,17,15,18,11,20,0,16],
[15,15,16,15,13,18,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,7,11,12,18,19],
[17,0,18,9,18,13,20,22],
[20,13,0,17,14,13,24,24],
[24,22,14,0,19,13,23,24],
[20,13,17,12,0,18,20,21],
[19,18,18,18,13,0,14,27],
[13,11,7,8,11,17,0,18],
[12,9,7,7,10,4,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,12,22,18,8,20],
[16,0,18,7,18,19,16,19],
[17,13,0,11,22,19,13,16],
[19,24,20,0,29,25,15,23],
[9,13,9,2,0,15,9,12],
[13,12,12,6,16,0,9,14],
[23,15,18,16,22,22,0,20],
[11,12,15,8,19,17,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,18,20,16,17,13],
[15,0,13,10,19,15,17,14],
[14,18,0,13,16,12,13,11],
[13,21,18,0,19,20,20,17],
[11,12,15,12,0,17,13,11],
[15,16,19,11,14,0,15,13],
[14,14,18,11,18,16,0,13],
[18,17,20,14,20,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,21,18,17,11,19,7],
[18,0,15,17,23,14,19,15],
[10,16,0,11,14,10,18,5],
[13,14,20,0,21,9,14,20],
[14,8,17,10,0,10,11,10],
[20,17,21,22,21,0,18,11],
[12,12,13,17,20,13,0,9],
[24,16,26,11,21,20,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,22,16,15,16,16],
[17,0,17,22,24,10,31,16],
[17,14,0,22,22,10,14,16],
[9,9,9,0,18,17,23,18],
[15,7,9,13,0,10,12,23],
[16,21,21,14,21,0,21,21],
[15,0,17,8,19,10,0,11],
[15,15,15,13,8,10,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,16,20,17,18,19],
[14,0,13,14,20,14,18,15],
[17,18,0,16,19,15,20,17],
[15,17,15,0,19,21,17,17],
[11,11,12,12,0,13,12,15],
[14,17,16,10,18,0,17,19],
[13,13,11,14,19,14,0,13],
[12,16,14,14,16,12,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,13,22,22,22,18,21],
[7,0,17,14,20,12,13,15],
[18,14,0,20,19,15,15,19],
[9,17,11,0,17,17,15,15],
[9,11,12,14,0,14,8,15],
[9,19,16,14,17,0,12,17],
[13,18,16,16,23,19,0,19],
[10,16,12,16,16,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,15,23,25,20,18],
[11,0,13,16,16,13,21,16],
[15,18,0,17,19,20,18,20],
[16,15,14,0,23,18,21,16],
[8,15,12,8,0,13,13,13],
[6,18,11,13,18,0,12,10],
[11,10,13,10,18,19,0,8],
[13,15,11,15,18,21,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,18,16,14,17,16],
[15,0,18,13,14,13,12,11],
[13,13,0,13,14,13,12,12],
[13,18,18,0,14,15,13,15],
[15,17,17,17,0,16,19,15],
[17,18,18,16,15,0,17,15],
[14,19,19,18,12,14,0,14],
[15,20,19,16,16,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,5,14,22,11,16,13],
[10,0,3,9,18,12,7,9],
[26,28,0,13,21,16,22,22],
[17,22,18,0,18,20,16,15],
[9,13,10,13,0,16,13,13],
[20,19,15,11,15,0,19,15],
[15,24,9,15,18,12,0,17],
[18,22,9,16,18,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,19,14,16,11,15],
[21,0,15,18,15,19,15,15],
[16,16,0,16,16,18,15,16],
[12,13,15,0,14,14,11,13],
[17,16,15,17,0,21,16,18],
[15,12,13,17,10,0,13,12],
[20,16,16,20,15,18,0,16],
[16,16,15,18,13,19,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,12,10,13,11,14],
[20,0,17,18,13,16,13,19],
[18,14,0,15,15,16,15,18],
[19,13,16,0,17,15,17,19],
[21,18,16,14,0,14,18,18],
[18,15,15,16,17,0,16,20],
[20,18,16,14,13,15,0,21],
[17,12,13,12,13,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,12,20,17,23,14,21],
[12,0,10,23,20,11,16,15],
[19,21,0,24,23,24,15,22],
[11,8,7,0,16,11,7,14],
[14,11,8,15,0,18,14,18],
[8,20,7,20,13,0,13,12],
[17,15,16,24,17,18,0,22],
[10,16,9,17,13,19,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,15,14,10,18,17,14],
[22,0,19,18,16,18,21,13],
[16,12,0,17,14,20,23,12],
[17,13,14,0,18,22,23,21],
[21,15,17,13,0,19,18,12],
[13,13,11,9,12,0,16,10],
[14,10,8,8,13,15,0,14],
[17,18,19,10,19,21,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,20,12,15,22,13],
[15,0,18,17,14,21,22,17],
[15,13,0,16,18,13,21,14],
[11,14,15,0,13,17,18,12],
[19,17,13,18,0,18,19,13],
[16,10,18,14,13,0,21,17],
[9,9,10,13,12,10,0,18],
[18,14,17,19,18,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,21,18,21,17,22,15],
[16,0,14,16,21,15,18,13],
[10,17,0,14,20,17,16,15],
[13,15,17,0,21,13,14,12],
[10,10,11,10,0,13,16,13],
[14,16,14,18,18,0,20,16],
[9,13,15,17,15,11,0,13],
[16,18,16,19,18,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,10,10,16,17,11],
[15,0,16,15,15,16,17,10],
[10,15,0,9,7,15,12,9],
[21,16,22,0,13,18,21,17],
[21,16,24,18,0,22,22,15],
[15,15,16,13,9,0,15,14],
[14,14,19,10,9,16,0,11],
[20,21,22,14,16,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,7,17,12,18,16],
[15,0,14,12,13,15,22,14],
[16,17,0,14,20,10,25,22],
[24,19,17,0,16,17,14,20],
[14,18,11,15,0,15,15,17],
[19,16,21,14,16,0,26,19],
[13,9,6,17,16,5,0,18],
[15,17,9,11,14,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,12,3,12,12,18,12],
[8,0,2,5,8,11,11,17],
[19,29,0,3,11,11,20,18],
[28,26,28,0,17,20,20,15],
[19,23,20,14,0,14,31,23],
[19,20,20,11,17,0,29,20],
[13,20,11,11,0,2,0,9],
[19,14,13,16,8,11,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,17,18,18,16,16],
[15,0,15,15,18,17,18,13],
[18,16,0,18,18,15,21,13],
[14,16,13,0,15,18,14,14],
[13,13,13,16,0,17,17,16],
[13,14,16,13,14,0,16,10],
[15,13,10,17,14,15,0,12],
[15,18,18,17,15,21,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,9,17,15,11,11,10],
[9,0,7,16,16,7,13,9],
[22,24,0,16,17,9,17,17],
[14,15,15,0,13,18,15,23],
[16,15,14,18,0,13,17,16],
[20,24,22,13,18,0,21,24],
[20,18,14,16,14,10,0,19],
[21,22,14,8,15,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,14,15,13,17,14],
[12,0,15,14,14,13,14,11],
[17,16,0,18,14,13,23,16],
[17,17,13,0,14,14,19,17],
[16,17,17,17,0,13,20,15],
[18,18,18,17,18,0,21,13],
[14,17,8,12,11,10,0,11],
[17,20,15,14,16,18,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,13,20,14,14,18],
[15,0,20,14,20,17,16,20],
[11,11,0,13,14,13,14,18],
[18,17,18,0,18,14,14,18],
[11,11,17,13,0,12,9,11],
[17,14,18,17,19,0,10,14],
[17,15,17,17,22,21,0,15],
[13,11,13,13,20,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,8,11,21,10,12],
[23,0,15,11,14,20,14,13],
[19,16,0,15,15,20,18,16],
[23,20,16,0,16,16,14,12],
[20,17,16,15,0,19,16,13],
[10,11,11,15,12,0,13,12],
[21,17,13,17,15,18,0,15],
[19,18,15,19,18,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,20,17,18,18,15,20],
[9,0,13,13,16,15,18,8],
[11,18,0,12,15,18,17,14],
[14,18,19,0,18,18,17,17],
[13,15,16,13,0,17,19,17],
[13,16,13,13,14,0,17,15],
[16,13,14,14,12,14,0,14],
[11,23,17,14,14,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,16,16,15,17,23],
[13,0,13,13,13,14,10,19],
[14,18,0,14,11,12,15,19],
[15,18,17,0,16,15,18,18],
[15,18,20,15,0,14,18,23],
[16,17,19,16,17,0,11,23],
[14,21,16,13,13,20,0,18],
[8,12,12,13,8,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,21,18,11,13,14,16],
[24,0,22,24,21,20,15,18],
[10,9,0,21,9,6,6,9],
[13,7,10,0,13,9,6,7],
[20,10,22,18,0,12,12,13],
[18,11,25,22,19,0,18,20],
[17,16,25,25,19,13,0,24],
[15,13,22,24,18,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,19,21,14,17,12],
[16,0,17,11,16,16,19,13],
[16,14,0,10,17,12,19,16],
[12,20,21,0,23,14,20,12],
[10,15,14,8,0,12,13,5],
[17,15,19,17,19,0,22,13],
[14,12,12,11,18,9,0,9],
[19,18,15,19,26,18,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,14,16,22,15,16],
[14,0,17,13,15,15,12,16],
[13,14,0,15,19,18,16,17],
[17,18,16,0,20,21,12,18],
[15,16,12,11,0,17,14,18],
[9,16,13,10,14,0,13,14],
[16,19,15,19,17,18,0,19],
[15,15,14,13,13,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,13,21,17,19,15],
[19,0,14,14,19,15,18,14],
[17,17,0,15,19,14,17,18],
[18,17,16,0,15,21,19,17],
[10,12,12,16,0,13,16,12],
[14,16,17,10,18,0,19,17],
[12,13,14,12,15,12,0,9],
[16,17,13,14,19,14,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,19,10,5,17,14],
[19,0,16,18,12,17,21,21],
[19,15,0,18,14,7,20,17],
[12,13,13,0,9,10,18,18],
[21,19,17,22,0,15,24,15],
[26,14,24,21,16,0,20,22],
[14,10,11,13,7,11,0,16],
[17,10,14,13,16,9,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,17,18,16,15,13,18],
[10,0,17,10,12,12,15,13],
[14,14,0,14,13,11,15,15],
[13,21,17,0,20,13,19,16],
[15,19,18,11,0,12,18,13],
[16,19,20,18,19,0,15,17],
[18,16,16,12,13,16,0,13],
[13,18,16,15,18,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,12,19,16,20,16],
[16,0,13,10,18,20,16,16],
[15,18,0,17,19,19,21,18],
[19,21,14,0,20,22,18,21],
[12,13,12,11,0,14,18,15],
[15,11,12,9,17,0,14,14],
[11,15,10,13,13,17,0,13],
[15,15,13,10,16,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,14,17,12,13,11],
[18,0,13,16,15,15,13,13],
[17,18,0,14,17,16,17,14],
[17,15,17,0,18,17,16,15],
[14,16,14,13,0,15,14,16],
[19,16,15,14,16,0,15,14],
[18,18,14,15,17,16,0,14],
[20,18,17,16,15,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,13,17,16,11,20,13],
[11,0,13,13,14,16,19,14],
[18,18,0,14,17,13,19,17],
[14,18,17,0,21,17,23,17],
[15,17,14,10,0,10,10,11],
[20,15,18,14,21,0,19,18],
[11,12,12,8,21,12,0,16],
[18,17,14,14,20,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,17,17,17,12,17],
[14,0,19,5,12,19,14,19],
[19,12,0,12,19,12,12,19],
[14,26,19,0,19,26,21,21],
[14,19,12,12,0,12,7,19],
[14,12,19,5,19,0,14,21],
[19,17,19,10,24,17,0,31],
[14,12,12,10,12,10,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,20,13,16,12,18,12],
[20,0,20,11,27,17,19,22],
[11,11,0,17,22,12,17,14],
[18,20,14,0,22,19,18,17],
[15,4,9,9,0,11,10,12],
[19,14,19,12,20,0,17,11],
[13,12,14,13,21,14,0,17],
[19,9,17,14,19,20,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,6,11,5,10,8,9],
[28,0,27,18,19,16,14,16],
[25,4,0,15,8,15,13,14],
[20,13,16,0,10,20,17,21],
[26,12,23,21,0,23,16,23],
[21,15,16,11,8,0,18,9],
[23,17,18,14,15,13,0,15],
[22,15,17,10,8,22,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,13,18,20,17,16],
[13,0,12,15,17,23,14,15],
[13,19,0,18,18,20,14,18],
[18,16,13,0,16,21,14,17],
[13,14,13,15,0,15,10,12],
[11,8,11,10,16,0,14,12],
[14,17,17,17,21,17,0,19],
[15,16,13,14,19,19,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,16,16,11,17,13],
[17,0,19,17,19,16,20,15],
[11,12,0,17,15,14,18,12],
[15,14,14,0,16,10,16,16],
[15,12,16,15,0,13,14,12],
[20,15,17,21,18,0,18,18],
[14,11,13,15,17,13,0,9],
[18,16,19,15,19,13,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,16,18,17,18,15],
[12,0,16,13,17,16,16,12],
[13,15,0,14,17,13,18,12],
[15,18,17,0,18,17,16,17],
[13,14,14,13,0,14,15,11],
[14,15,18,14,17,0,17,12],
[13,15,13,15,16,14,0,11],
[16,19,19,14,20,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,12,13,16,17,15],
[17,0,14,14,13,13,20,14],
[13,17,0,14,16,17,14,10],
[19,17,17,0,15,16,18,14],
[18,18,15,16,0,17,17,16],
[15,18,14,15,14,0,16,15],
[14,11,17,13,14,15,0,10],
[16,17,21,17,15,16,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,18,20,13,18,18,20],
[21,0,17,18,14,17,16,19],
[13,14,0,17,14,18,17,20],
[11,13,14,0,17,16,14,18],
[18,17,17,14,0,17,22,23],
[13,14,13,15,14,0,14,17],
[13,15,14,17,9,17,0,20],
[11,12,11,13,8,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,22,16,17,10,14],
[20,0,13,21,13,22,9,19],
[17,18,0,21,21,22,10,18],
[9,10,10,0,10,10,10,14],
[15,18,10,21,0,26,14,19],
[14,9,9,21,5,0,14,5],
[21,22,21,21,17,17,0,15],
[17,12,13,17,12,26,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,10,7,15,8,11,12],
[22,0,11,13,19,14,20,17],
[21,20,0,17,20,12,17,20],
[24,18,14,0,20,18,19,18],
[16,12,11,11,0,11,15,15],
[23,17,19,13,20,0,23,19],
[20,11,14,12,16,8,0,18],
[19,14,11,13,16,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,16,26,27,22,20],
[13,0,12,20,20,24,23,19],
[19,19,0,20,16,23,19,15],
[15,11,11,0,17,17,17,16],
[5,11,15,14,0,18,14,9],
[4,7,8,14,13,0,11,11],
[9,8,12,14,17,20,0,10],
[11,12,16,15,22,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,11,19,13,5,14],
[20,0,13,14,14,7,18,14],
[24,18,0,19,20,21,18,14],
[20,17,12,0,25,19,18,19],
[12,17,11,6,0,18,5,11],
[18,24,10,12,13,0,12,23],
[26,13,13,13,26,19,0,20],
[17,17,17,12,20,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,14,18,14,14,17,18],
[10,0,11,15,9,10,12,18],
[17,20,0,17,17,16,13,21],
[13,16,14,0,12,14,15,17],
[17,22,14,19,0,16,21,21],
[17,21,15,17,15,0,18,18],
[14,19,18,16,10,13,0,18],
[13,13,10,14,10,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,16,16,16,13,13],
[15,0,18,17,21,12,18,15],
[17,13,0,17,18,13,15,17],
[15,14,14,0,15,10,14,11],
[15,10,13,16,0,12,14,19],
[15,19,18,21,19,0,18,17],
[18,13,16,17,17,13,0,16],
[18,16,14,20,12,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,17,18,17,19,10,21],
[9,0,10,16,13,13,8,17],
[14,21,0,24,19,17,14,27],
[13,15,7,0,11,17,8,20],
[14,18,12,20,0,17,18,22],
[12,18,14,14,14,0,13,23],
[21,23,17,23,13,18,0,28],
[10,14,4,11,9,8,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,13,17,14,11,12],
[17,0,18,16,18,17,14,16],
[21,13,0,17,14,13,20,16],
[18,15,14,0,18,16,15,14],
[14,13,17,13,0,16,14,12],
[17,14,18,15,15,0,16,13],
[20,17,11,16,17,15,0,15],
[19,15,15,17,19,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,14,16,16,18,12],
[16,0,8,9,13,14,17,9],
[14,23,0,16,15,17,19,19],
[17,22,15,0,17,17,20,14],
[15,18,16,14,0,14,17,10],
[15,17,14,14,17,0,17,13],
[13,14,12,11,14,14,0,14],
[19,22,12,17,21,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,17,17,12,19,16],
[11,0,8,9,19,12,19,13],
[12,23,0,15,23,11,20,13],
[14,22,16,0,21,14,24,18],
[14,12,8,10,0,10,12,7],
[19,19,20,17,21,0,18,14],
[12,12,11,7,19,13,0,10],
[15,18,18,13,24,17,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,14,20,15,13,13],
[16,0,20,19,19,16,19,13],
[13,11,0,17,17,8,12,14],
[17,12,14,0,22,17,17,16],
[11,12,14,9,0,10,14,12],
[16,15,23,14,21,0,20,17],
[18,12,19,14,17,11,0,15],
[18,18,17,15,19,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,14,19,16,12,14],
[15,0,22,16,18,20,17,17],
[17,9,0,12,9,16,15,14],
[17,15,19,0,13,20,12,14],
[12,13,22,18,0,17,14,14],
[15,11,15,11,14,0,7,10],
[19,14,16,19,17,24,0,16],
[17,14,17,17,17,21,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,17,16,13,21,16,17],
[11,0,14,13,13,18,12,13],
[14,17,0,17,12,18,14,19],
[15,18,14,0,9,16,12,16],
[18,18,19,22,0,17,13,20],
[10,13,13,15,14,0,9,16],
[15,19,17,19,18,22,0,18],
[14,18,12,15,11,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,17,17,16,18,11],
[13,0,11,12,13,13,12,11],
[11,20,0,14,18,15,9,10],
[14,19,17,0,20,15,13,17],
[14,18,13,11,0,14,12,11],
[15,18,16,16,17,0,14,15],
[13,19,22,18,19,17,0,14],
[20,20,21,14,20,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,15,15,16,18,18],
[14,0,14,15,14,14,14,11],
[15,17,0,15,14,11,17,10],
[16,16,16,0,16,18,19,14],
[16,17,17,15,0,17,17,13],
[15,17,20,13,14,0,14,10],
[13,17,14,12,14,17,0,16],
[13,20,21,17,18,21,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,5,9,10,13,8,12],
[14,0,2,6,10,18,13,10],
[26,29,0,15,23,26,25,21],
[22,25,16,0,16,20,11,12],
[21,21,8,15,0,17,12,13],
[18,13,5,11,14,0,9,15],
[23,18,6,20,19,22,0,21],
[19,21,10,19,18,16,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,19,14,11,11,13],
[19,0,15,20,20,17,15,18],
[22,16,0,20,21,14,18,18],
[12,11,11,0,13,13,12,12],
[17,11,10,18,0,15,17,12],
[20,14,17,18,16,0,11,16],
[20,16,13,19,14,20,0,21],
[18,13,13,19,19,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,10,19,10,11,19],
[16,0,15,17,20,19,17,17],
[12,16,0,13,22,15,14,17],
[21,14,18,0,25,12,18,15],
[12,11,9,6,0,13,8,13],
[21,12,16,19,18,0,13,23],
[20,14,17,13,23,18,0,18],
[12,14,14,16,18,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,17,17,10,14,12],
[20,0,14,19,21,16,14,17],
[22,17,0,15,18,14,14,10],
[14,12,16,0,15,16,16,14],
[14,10,13,16,0,9,13,15],
[21,15,17,15,22,0,17,21],
[17,17,17,15,18,14,0,15],
[19,14,21,17,16,10,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,22,15,14,14,13,18],
[15,0,18,12,12,15,16,18],
[9,13,0,9,11,11,9,14],
[16,19,22,0,17,15,14,21],
[17,19,20,14,0,13,13,23],
[17,16,20,16,18,0,15,22],
[18,15,22,17,18,16,0,18],
[13,13,17,10,8,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,16,18,20,15,19],
[17,0,19,14,17,20,18,18],
[14,12,0,13,15,17,8,14],
[15,17,18,0,15,18,14,18],
[13,14,16,16,0,16,14,16],
[11,11,14,13,15,0,12,17],
[16,13,23,17,17,19,0,19],
[12,13,17,13,15,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,17,18,16,23,14],
[13,0,8,12,15,16,21,12],
[18,23,0,21,20,16,22,14],
[14,19,10,0,19,15,19,11],
[13,16,11,12,0,12,26,16],
[15,15,15,16,19,0,19,11],
[8,10,9,12,5,12,0,11],
[17,19,17,20,15,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,29,20,27,17,24],
[17,0,15,18,18,30,9,18],
[11,16,0,27,16,27,12,15],
[2,13,4,0,8,21,4,6],
[11,13,15,23,0,25,17,15],
[4,1,4,10,6,0,4,5],
[14,22,19,27,14,27,0,14],
[7,13,16,25,16,26,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,17,23,18,15,14],
[15,0,15,13,18,17,15,16],
[18,16,0,12,17,18,18,16],
[14,18,19,0,18,15,17,19],
[8,13,14,13,0,12,12,15],
[13,14,13,16,19,0,12,17],
[16,16,13,14,19,19,0,17],
[17,15,15,12,16,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,15,15,17,14,13],
[17,0,13,15,13,16,18,15],
[17,18,0,18,14,19,19,19],
[16,16,13,0,15,17,17,14],
[16,18,17,16,0,18,15,17],
[14,15,12,14,13,0,16,15],
[17,13,12,14,16,15,0,13],
[18,16,12,17,14,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,17,20,21,19,14,17],
[10,0,10,11,15,15,11,13],
[14,21,0,14,16,14,17,17],
[11,20,17,0,19,16,15,21],
[10,16,15,12,0,15,13,13],
[12,16,17,15,16,0,14,17],
[17,20,14,16,18,17,0,17],
[14,18,14,10,18,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,14,16,13,16,15],
[21,0,12,13,20,13,18,18],
[17,19,0,17,22,16,19,14],
[17,18,14,0,24,10,18,17],
[15,11,9,7,0,12,11,12],
[18,18,15,21,19,0,20,19],
[15,13,12,13,20,11,0,15],
[16,13,17,14,19,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,19,15,20,26,22,22],
[9,0,16,17,19,18,15,14],
[12,15,0,17,18,15,16,10],
[16,14,14,0,23,16,17,17],
[11,12,13,8,0,11,15,11],
[5,13,16,15,20,0,18,13],
[9,16,15,14,16,13,0,21],
[9,17,21,14,20,18,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,12,16,14,13,15],
[20,0,15,18,19,18,17,17],
[18,16,0,17,15,14,15,18],
[19,13,14,0,13,21,17,17],
[15,12,16,18,0,15,16,17],
[17,13,17,10,16,0,16,16],
[18,14,16,14,15,15,0,16],
[16,14,13,14,14,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,8,11,9,12,14,14],
[15,0,7,11,7,23,10,18],
[23,24,0,16,17,28,14,26],
[20,20,15,0,18,20,18,17],
[22,24,14,13,0,23,14,17],
[19,8,3,11,8,0,9,22],
[17,21,17,13,17,22,0,22],
[17,13,5,14,14,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,5,5,12,9,10,7],
[19,0,15,15,15,15,17,13],
[26,16,0,9,18,9,16,6],
[26,16,22,0,17,9,15,16],
[19,16,13,14,0,13,18,9],
[22,16,22,22,18,0,17,12],
[21,14,15,16,13,14,0,11],
[24,18,25,15,22,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,14,17,12,14,17],
[18,0,16,13,18,10,17,14],
[15,15,0,14,18,13,11,19],
[17,18,17,0,18,10,12,16],
[14,13,13,13,0,13,10,12],
[19,21,18,21,18,0,14,17],
[17,14,20,19,21,17,0,18],
[14,17,12,15,19,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,18,20,14,17,16,21],
[11,0,14,14,10,7,14,11],
[13,17,0,18,17,10,17,17],
[11,17,13,0,14,13,13,18],
[17,21,14,17,0,11,18,17],
[14,24,21,18,20,0,21,22],
[15,17,14,18,13,10,0,19],
[10,20,14,13,14,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,12,10,10,16,6,15],
[6,0,4,9,4,12,1,15],
[19,27,0,14,21,21,18,20],
[21,22,17,0,14,14,10,16],
[21,27,10,17,0,21,8,23],
[15,19,10,17,10,0,9,10],
[25,30,13,21,23,22,0,27],
[16,16,11,15,8,21,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,13,14,12,19,13,30],
[3,0,0,5,3,11,11,8],
[18,31,0,16,4,19,23,31],
[17,26,15,0,19,19,18,30],
[19,28,27,12,0,23,27,27],
[12,20,12,12,8,0,20,15],
[18,20,8,13,4,11,0,23],
[1,23,0,1,4,16,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,20,18,22,23,18,15],
[16,0,18,15,17,15,17,13],
[11,13,0,15,15,18,17,15],
[13,16,16,0,19,19,16,16],
[9,14,16,12,0,13,14,14],
[8,16,13,12,18,0,21,12],
[13,14,14,15,17,10,0,15],
[16,18,16,15,17,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,17,17,20,15,14,17],
[20,0,17,16,25,14,19,18],
[14,14,0,14,17,16,17,21],
[14,15,17,0,18,15,20,19],
[11,6,14,13,0,14,14,15],
[16,17,15,16,17,0,17,22],
[17,12,14,11,17,14,0,19],
[14,13,10,12,16,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,31,14,16,27,19,17],
[4,0,7,7,9,7,4,4],
[0,24,0,11,5,16,11,0],
[17,24,20,0,13,21,18,9],
[15,22,26,18,0,22,14,9],
[4,24,15,10,9,0,16,4],
[12,27,20,13,17,15,0,4],
[14,27,31,22,22,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,16,20,19,19,15],
[18,0,16,13,19,18,12,14],
[15,15,0,17,17,17,10,15],
[15,18,14,0,16,19,17,16],
[11,12,14,15,0,16,13,12],
[12,13,14,12,15,0,13,8],
[12,19,21,14,18,18,0,19],
[16,17,16,15,19,23,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,15,9,14,13,12],
[15,0,20,16,15,20,10,15],
[16,11,0,17,16,19,11,12],
[16,15,14,0,10,15,16,13],
[22,16,15,21,0,18,17,13],
[17,11,12,16,13,0,9,10],
[18,21,20,15,14,22,0,18],
[19,16,19,18,18,21,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,13,16,16,14,19,16],
[12,0,16,11,13,10,14,9],
[18,15,0,13,13,16,19,15],
[15,20,18,0,20,19,21,18],
[15,18,18,11,0,15,15,16],
[17,21,15,12,16,0,17,15],
[12,17,12,10,16,14,0,15],
[15,22,16,13,15,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,13,18,24,22,18,18],
[9,0,10,9,21,12,15,17],
[18,21,0,14,22,18,13,14],
[13,22,17,0,24,19,19,20],
[7,10,9,7,0,11,13,18],
[9,19,13,12,20,0,20,22],
[13,16,18,12,18,11,0,20],
[13,14,17,11,13,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,18,18,14,14,14,14],
[10,0,12,11,17,16,11,14],
[13,19,0,15,15,19,12,18],
[13,20,16,0,14,19,16,16],
[17,14,16,17,0,18,13,15],
[17,15,12,12,13,0,13,15],
[17,20,19,15,18,18,0,17],
[17,17,13,15,16,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,8,20,20,8,16,14],
[8,0,4,10,12,10,3,3],
[23,27,0,20,25,16,12,20],
[11,21,11,0,25,14,10,17],
[11,19,6,6,0,9,13,13],
[23,21,15,17,22,0,14,20],
[15,28,19,21,18,17,0,15],
[17,28,11,14,18,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,15,12,13,14,14],
[16,0,19,18,14,19,15,15],
[15,12,0,14,17,15,16,14],
[16,13,17,0,14,17,15,12],
[19,17,14,17,0,21,15,18],
[18,12,16,14,10,0,18,9],
[17,16,15,16,16,13,0,15],
[17,16,17,19,13,22,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,17,31,17,23,14],
[15,0,18,16,28,14,18,18],
[14,13,0,11,21,14,14,10],
[14,15,20,0,26,14,22,21],
[0,3,10,5,0,5,16,5],
[14,17,17,17,26,0,22,14],
[8,13,17,9,15,9,0,14],
[17,13,21,10,26,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,20,17,15,16,12],
[13,0,15,19,13,15,12,18],
[19,16,0,18,14,15,18,12],
[11,12,13,0,12,11,13,10],
[14,18,17,19,0,16,14,15],
[16,16,16,20,15,0,15,12],
[15,19,13,18,17,16,0,15],
[19,13,19,21,16,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,7,5,3,7,9],
[20,0,13,8,15,5,16,8],
[17,18,0,13,13,19,16,7],
[24,23,18,0,19,20,19,14],
[26,16,18,12,0,11,19,10],
[28,26,12,11,20,0,18,16],
[24,15,15,12,12,13,0,13],
[22,23,24,17,21,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,18,21,18,19,10],
[15,0,18,24,22,22,18,23],
[11,13,0,12,13,10,13,11],
[13,7,19,0,16,18,17,13],
[10,9,18,15,0,11,15,10],
[13,9,21,13,20,0,14,14],
[12,13,18,14,16,17,0,14],
[21,8,20,18,21,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,12,12,13,12,16],
[14,0,14,12,14,12,14,20],
[14,17,0,15,19,14,18,20],
[19,19,16,0,15,19,17,14],
[19,17,12,16,0,11,18,18],
[18,19,17,12,20,0,15,16],
[19,17,13,14,13,16,0,18],
[15,11,11,17,13,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,19,13,15,14,11],
[19,0,14,16,13,17,15,13],
[14,17,0,15,11,17,12,6],
[12,15,16,0,9,17,12,9],
[18,18,20,22,0,18,16,15],
[16,14,14,14,13,0,18,14],
[17,16,19,19,15,13,0,17],
[20,18,25,22,16,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,12,19,23,22,27],
[18,0,13,17,14,14,17,18],
[14,18,0,14,16,25,19,21],
[19,14,17,0,22,14,22,22],
[12,17,15,9,0,15,18,20],
[8,17,6,17,16,0,19,14],
[9,14,12,9,13,12,0,19],
[4,13,10,9,11,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,18,14,15,17,21],
[19,0,15,15,18,16,19,21],
[16,16,0,17,14,14,16,19],
[13,16,14,0,15,12,18,18],
[17,13,17,16,0,18,17,20],
[16,15,17,19,13,0,20,18],
[14,12,15,13,14,11,0,16],
[10,10,12,13,11,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,11,19,13,9,12],
[12,0,22,13,19,5,7,11],
[13,9,0,9,13,10,7,12],
[20,18,22,0,19,16,13,19],
[12,12,18,12,0,7,8,18],
[18,26,21,15,24,0,21,25],
[22,24,24,18,23,10,0,25],
[19,20,19,12,13,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,14,15,17,18,16],
[15,0,18,18,18,19,16,18],
[14,13,0,14,17,17,15,18],
[17,13,17,0,14,16,18,18],
[16,13,14,17,0,18,15,19],
[14,12,14,15,13,0,14,19],
[13,15,16,13,16,17,0,14],
[15,13,13,13,12,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,11,17,14,15,11],
[19,0,17,20,20,14,16,15],
[17,14,0,14,19,13,17,16],
[20,11,17,0,16,14,15,13],
[14,11,12,15,0,13,10,11],
[17,17,18,17,18,0,13,11],
[16,15,14,16,21,18,0,12],
[20,16,15,18,20,20,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,13,13,16,16,12,20],
[12,0,15,12,15,14,11,15],
[18,16,0,16,16,14,13,14],
[18,19,15,0,15,14,11,17],
[15,16,15,16,0,16,12,16],
[15,17,17,17,15,0,17,14],
[19,20,18,20,19,14,0,15],
[11,16,17,14,15,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,14,13,12,18,17],
[12,0,19,17,14,14,17,8],
[13,12,0,13,14,15,18,8],
[17,14,18,0,14,15,15,7],
[18,17,17,17,0,12,19,16],
[19,17,16,16,19,0,25,14],
[13,14,13,16,12,6,0,11],
[14,23,23,24,15,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,19,19,11,16,16,18],
[18,0,21,22,6,19,12,19],
[12,10,0,22,6,10,12,12],
[12,9,9,0,14,14,14,15],
[20,25,25,17,0,23,14,26],
[15,12,21,17,8,0,15,20],
[15,19,19,17,17,16,0,26],
[13,12,19,16,5,11,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,16,16,23,13,16],
[17,0,18,15,21,20,18,13],
[18,13,0,17,19,22,16,16],
[15,16,14,0,19,17,15,12],
[15,10,12,12,0,17,13,8],
[8,11,9,14,14,0,7,15],
[18,13,15,16,18,24,0,17],
[15,18,15,19,23,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,16,22,17,16,16,12],
[9,0,12,16,13,8,13,6],
[15,19,0,16,20,16,18,13],
[9,15,15,0,14,9,10,8],
[14,18,11,17,0,14,12,11],
[15,23,15,22,17,0,12,16],
[15,18,13,21,19,19,0,12],
[19,25,18,23,20,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,11,12,15,15,12],
[18,0,17,18,14,19,17,20],
[18,14,0,17,14,16,15,13],
[20,13,14,0,17,16,14,15],
[19,17,17,14,0,19,16,16],
[16,12,15,15,12,0,17,12],
[16,14,16,17,15,14,0,15],
[19,11,18,16,15,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,11,16,16,11,11,11],
[26,0,26,11,23,26,23,23],
[20,5,0,16,5,23,28,23],
[15,20,15,0,17,15,23,12],
[15,8,26,14,0,26,23,23],
[20,5,8,16,5,0,28,17],
[20,8,3,8,8,3,0,3],
[20,8,8,19,8,14,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,16,13,15,14,11],
[20,0,16,15,21,18,18,19],
[20,15,0,13,17,20,17,16],
[15,16,18,0,19,20,20,14],
[18,10,14,12,0,14,15,16],
[16,13,11,11,17,0,15,15],
[17,13,14,11,16,16,0,14],
[20,12,15,17,15,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,13,8,14,10,15],
[22,0,21,13,14,20,17,15],
[22,10,0,14,13,15,15,18],
[18,18,17,0,11,18,15,17],
[23,17,18,20,0,21,15,14],
[17,11,16,13,10,0,9,9],
[21,14,16,16,16,22,0,16],
[16,16,13,14,17,22,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,14,15,15,15,17],
[15,0,17,16,16,18,16,17],
[15,14,0,12,10,17,17,20],
[17,15,19,0,14,20,18,21],
[16,15,21,17,0,18,19,22],
[16,13,14,11,13,0,13,15],
[16,15,14,13,12,18,0,17],
[14,14,11,10,9,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,17,25,24,15,24,24],
[10,0,11,24,18,14,23,19],
[14,20,0,25,18,21,22,26],
[6,7,6,0,9,14,16,10],
[7,13,13,22,0,18,20,16],
[16,17,10,17,13,0,16,20],
[7,8,9,15,11,15,0,16],
[7,12,5,21,15,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,13,19,11,11,19],
[20,0,12,18,13,13,11,15],
[15,19,0,16,15,11,9,19],
[18,13,15,0,14,16,16,21],
[12,18,16,17,0,10,11,19],
[20,18,20,15,21,0,22,25],
[20,20,22,15,20,9,0,25],
[12,16,12,10,12,6,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,17,15,20,14,16,22],
[11,0,13,12,16,12,13,18],
[14,18,0,11,19,9,16,18],
[16,19,20,0,20,14,21,19],
[11,15,12,11,0,11,13,15],
[17,19,22,17,20,0,13,17],
[15,18,15,10,18,18,0,15],
[9,13,13,12,16,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,12,16,14,21,18,16],
[9,0,13,13,14,15,15,12],
[19,18,0,15,19,20,18,17],
[15,18,16,0,19,20,19,16],
[17,17,12,12,0,18,18,17],
[10,16,11,11,13,0,13,11],
[13,16,13,12,13,18,0,14],
[15,19,14,15,14,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,21,28,22,22,28,23],
[17,0,17,26,11,16,23,23],
[10,14,0,23,15,15,23,23],
[3,5,8,0,10,15,7,11],
[9,20,16,21,0,20,21,20],
[9,15,16,16,11,0,16,15],
[3,8,8,24,10,15,0,17],
[8,8,8,20,11,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,19,19,19,13,30,30],
[1,0,0,6,6,0,17,18],
[12,31,0,31,31,25,31,31],
[12,25,0,0,13,13,24,25],
[12,25,0,18,0,25,17,18],
[18,31,6,18,6,0,17,18],
[1,14,0,7,14,14,0,18],
[1,13,0,6,13,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,16,17,16,12,20],
[16,0,15,16,16,11,11,18],
[14,16,0,16,14,13,11,19],
[15,15,15,0,13,12,15,17],
[14,15,17,18,0,15,18,18],
[15,20,18,19,16,0,16,19],
[19,20,20,16,13,15,0,21],
[11,13,12,14,13,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,19,18,18,18,15,18],
[13,0,14,16,18,17,13,16],
[12,17,0,12,18,19,14,18],
[13,15,19,0,18,19,20,15],
[13,13,13,13,0,14,12,14],
[13,14,12,12,17,0,12,15],
[16,18,17,11,19,19,0,16],
[13,15,13,16,17,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,9,11,22,16,15],
[15,0,13,10,10,22,19,17],
[19,18,0,18,15,18,22,18],
[22,21,13,0,18,15,17,22],
[20,21,16,13,0,22,23,15],
[9,9,13,16,9,0,16,11],
[15,12,9,14,8,15,0,11],
[16,14,13,9,16,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,21,31,21,10,21],
[10,0,21,17,21,17,6,6],
[10,10,0,27,10,0,16,10],
[10,14,4,0,10,0,0,0],
[0,10,21,21,0,0,10,10],
[10,14,31,31,31,0,20,16],
[21,25,15,31,21,11,0,21],
[10,25,21,31,21,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,14,7,21,7,7],
[17,0,24,16,17,24,9,9],
[17,7,0,9,17,17,9,14],
[17,15,22,0,8,17,22,22],
[24,14,14,23,0,24,14,21],
[10,7,14,14,7,0,7,7],
[24,22,22,9,17,24,0,22],
[24,22,17,9,10,24,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,16,16,19,17,24],
[13,0,11,15,17,17,14,19],
[18,20,0,15,17,18,21,19],
[15,16,16,0,16,17,16,21],
[15,14,14,15,0,17,14,15],
[12,14,13,14,14,0,17,19],
[14,17,10,15,17,14,0,16],
[7,12,12,10,16,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,14,16,20,13,15],
[11,0,16,17,17,15,11,9],
[12,15,0,13,10,15,14,15],
[17,14,18,0,10,19,12,14],
[15,14,21,21,0,29,11,18],
[11,16,16,12,2,0,9,11],
[18,20,17,19,20,22,0,15],
[16,22,16,17,13,20,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,6,9,16,7,14],
[17,0,19,18,17,20,14,14],
[15,12,0,11,11,11,14,10],
[25,13,20,0,14,22,13,18],
[22,14,20,17,0,20,16,19],
[15,11,20,9,11,0,14,12],
[24,17,17,18,15,17,0,20],
[17,17,21,13,12,19,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,6,18,11,22,17,11],
[20,0,14,25,23,31,14,14],
[25,17,0,20,20,28,14,21],
[13,6,11,0,11,22,6,11],
[20,8,11,20,0,27,9,11],
[9,0,3,9,4,0,9,3],
[14,17,17,25,22,22,0,20],
[20,17,10,20,20,28,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,11,7,11,18,28,24],
[8,0,10,6,12,7,19,7],
[20,21,0,15,12,21,27,24],
[24,25,16,0,12,17,22,20],
[20,19,19,19,0,15,21,19],
[13,24,10,14,16,0,19,18],
[3,12,4,9,10,12,0,12],
[7,24,7,11,12,13,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,14,26,24,24,21],
[15,0,7,2,29,17,17,9],
[15,24,0,12,22,10,22,7],
[17,29,19,0,31,15,17,9],
[5,2,9,0,0,10,2,9],
[7,14,21,16,21,0,21,21],
[7,14,9,14,29,10,0,7],
[10,22,24,22,22,10,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,9,10,20,9,9],
[20,0,9,15,16,21,10,15],
[16,22,0,17,18,17,11,12],
[22,16,14,0,19,15,19,14],
[21,15,13,12,0,12,16,18],
[11,10,14,16,19,0,18,14],
[22,21,20,12,15,13,0,19],
[22,16,19,17,13,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,20,17,17,11,16],
[13,0,10,15,11,15,11,13],
[17,21,0,20,14,18,16,12],
[11,16,11,0,10,15,13,10],
[14,20,17,21,0,20,15,15],
[14,16,13,16,11,0,10,14],
[20,20,15,18,16,21,0,16],
[15,18,19,21,16,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,14,20,14,19,19],
[10,0,14,13,19,13,18,17],
[11,17,0,14,15,13,16,13],
[17,18,17,0,20,17,15,19],
[11,12,16,11,0,12,14,13],
[17,18,18,14,19,0,17,15],
[12,13,15,16,17,14,0,17],
[12,14,18,12,18,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,22,10,14,15,14],
[14,0,11,12,14,11,14,14],
[12,20,0,29,12,16,16,19],
[9,19,2,0,10,10,6,12],
[21,17,19,21,0,15,19,16],
[17,20,15,21,16,0,16,18],
[16,17,15,25,12,15,0,18],
[17,17,12,19,15,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,15,19,18,16,13],
[17,0,18,16,19,20,15,17],
[14,13,0,14,17,16,15,10],
[16,15,17,0,18,15,17,10],
[12,12,14,13,0,16,16,11],
[13,11,15,16,15,0,12,10],
[15,16,16,14,15,19,0,11],
[18,14,21,21,20,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,12,17,21,10,16,21],
[11,0,6,7,11,4,12,11],
[19,25,0,15,21,23,17,25],
[14,24,16,0,25,14,14,23],
[10,20,10,6,0,8,10,10],
[21,27,8,17,23,0,23,27],
[15,19,14,17,21,8,0,19],
[10,20,6,8,21,4,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,14,14,13,16,14],
[14,0,14,17,14,13,15,16],
[17,17,0,18,14,15,17,16],
[17,14,13,0,13,13,15,14],
[17,17,17,18,0,12,14,13],
[18,18,16,18,19,0,15,17],
[15,16,14,16,17,16,0,19],
[17,15,15,17,18,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,14,14,23,16,18],
[17,0,20,18,17,24,19,13],
[11,11,0,13,16,19,17,12],
[17,13,18,0,15,22,16,17],
[17,14,15,16,0,25,13,16],
[8,7,12,9,6,0,11,10],
[15,12,14,15,18,20,0,16],
[13,18,19,14,15,21,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,18,16,9,7,13],
[18,0,15,16,17,17,17,18],
[16,16,0,14,11,15,15,19],
[13,15,17,0,13,14,11,20],
[15,14,20,18,0,13,17,12],
[22,14,16,17,18,0,16,19],
[24,14,16,20,14,15,0,18],
[18,13,12,11,19,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,15,23,24,16,18],
[11,0,17,17,22,18,17,18],
[12,14,0,19,19,20,16,17],
[16,14,12,0,19,22,10,19],
[8,9,12,12,0,18,11,11],
[7,13,11,9,13,0,10,14],
[15,14,15,21,20,21,0,21],
[13,13,14,12,20,17,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,12,11,18,19,15],
[17,0,19,18,16,18,23,15],
[11,12,0,9,11,14,14,20],
[19,13,22,0,18,20,21,19],
[20,15,20,13,0,13,20,15],
[13,13,17,11,18,0,16,12],
[12,8,17,10,11,15,0,13],
[16,16,11,12,16,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,18,18,15,19,18],
[12,0,18,19,17,17,17,18],
[10,13,0,11,14,14,13,14],
[13,12,20,0,13,11,16,14],
[13,14,17,18,0,13,14,17],
[16,14,17,20,18,0,18,19],
[12,14,18,15,17,13,0,17],
[13,13,17,17,14,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,13,18,21,17,15,23],
[12,0,15,14,15,14,11,21],
[18,16,0,10,19,16,15,19],
[13,17,21,0,21,23,23,23],
[10,16,12,10,0,17,14,13],
[14,17,15,8,14,0,10,22],
[16,20,16,8,17,21,0,19],
[8,10,12,8,18,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,10,11,17,13,10,16],
[14,0,10,15,15,14,8,14],
[21,21,0,17,15,26,19,24],
[20,16,14,0,10,17,8,15],
[14,16,16,21,0,22,22,23],
[18,17,5,14,9,0,9,17],
[21,23,12,23,9,22,0,23],
[15,17,7,16,8,14,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,19,22,12,16,19,16],
[17,0,16,17,13,16,17,17],
[12,15,0,20,14,15,16,14],
[9,14,11,0,13,10,10,13],
[19,18,17,18,0,12,23,21],
[15,15,16,21,19,0,19,21],
[12,14,15,21,8,12,0,12],
[15,14,17,18,10,10,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,16,13,27,19,20,16],
[9,0,11,14,19,23,12,10],
[15,20,0,10,20,24,18,18],
[18,17,21,0,24,18,14,19],
[4,12,11,7,0,11,13,13],
[12,8,7,13,20,0,13,11],
[11,19,13,17,18,18,0,12],
[15,21,13,12,18,20,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,17,14,13,20,18],
[18,0,13,14,15,13,20,16],
[18,18,0,20,16,17,20,15],
[14,17,11,0,16,16,17,15],
[17,16,15,15,0,19,16,17],
[18,18,14,15,12,0,15,14],
[11,11,11,14,15,16,0,11],
[13,15,16,16,14,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,23,11,11,17,14,18],
[20,0,26,5,20,13,25,12],
[8,5,0,5,7,9,12,12],
[20,26,26,0,20,13,27,20],
[20,11,24,11,0,18,18,11],
[14,18,22,18,13,0,25,18],
[17,6,19,4,13,6,0,13],
[13,19,19,11,20,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,9,12,15,9,12],
[20,0,14,17,17,21,17,16],
[18,17,0,16,12,18,18,17],
[22,14,15,0,16,21,20,17],
[19,14,19,15,0,16,15,18],
[16,10,13,10,15,0,14,15],
[22,14,13,11,16,17,0,15],
[19,15,14,14,13,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,20,16,13,12,17],
[15,0,18,20,17,14,16,20],
[19,13,0,23,14,14,18,20],
[11,11,8,0,8,10,8,13],
[15,14,17,23,0,14,15,18],
[18,17,17,21,17,0,15,20],
[19,15,13,23,16,16,0,20],
[14,11,11,18,13,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,20,10,20,15,20,20],
[18,0,19,18,27,18,13,16],
[11,12,0,15,15,10,10,13],
[21,13,16,0,16,16,16,20],
[11,4,16,15,0,13,17,16],
[16,13,21,15,18,0,20,13],
[11,18,21,15,14,11,0,13],
[11,15,18,11,15,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,11,15,15,15,15,18],
[14,0,11,14,13,16,12,18],
[20,20,0,16,16,20,15,17],
[16,17,15,0,16,15,15,16],
[16,18,15,15,0,18,14,18],
[16,15,11,16,13,0,16,14],
[16,19,16,16,17,15,0,16],
[13,13,14,15,13,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,30,10,17,21,16],
[17,0,21,21,10,21,21,16],
[14,10,0,13,14,13,5,19],
[1,10,18,0,6,12,13,13],
[21,21,17,25,0,12,12,17],
[14,10,18,19,19,0,10,17],
[10,10,26,18,19,21,0,25],
[15,15,12,18,14,14,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,14,17,16,19,11],
[14,0,13,17,20,16,14,11],
[17,18,0,16,17,20,15,12],
[17,14,15,0,16,14,11,14],
[14,11,14,15,0,15,12,12],
[15,15,11,17,16,0,17,16],
[12,17,16,20,19,14,0,11],
[20,20,19,17,19,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,18,20,17,20,17],
[13,0,14,18,14,14,18,12],
[16,17,0,15,16,13,13,15],
[13,13,16,0,14,13,13,11],
[11,17,15,17,0,16,19,15],
[14,17,18,18,15,0,16,13],
[11,13,18,18,12,15,0,12],
[14,19,16,20,16,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,14,15,15,17,16],
[11,0,15,12,15,13,15,15],
[15,16,0,16,21,15,17,19],
[17,19,15,0,18,20,18,21],
[16,16,10,13,0,12,13,16],
[16,18,16,11,19,0,20,22],
[14,16,14,13,18,11,0,17],
[15,16,12,10,15,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,14,16,12,11,14],
[23,0,12,23,20,14,13,16],
[18,19,0,19,23,19,13,20],
[17,8,12,0,12,12,10,11],
[15,11,8,19,0,10,11,13],
[19,17,12,19,21,0,21,17],
[20,18,18,21,20,10,0,16],
[17,15,11,20,18,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,14,19,16,15,16],
[17,0,20,11,15,14,17,18],
[15,11,0,14,13,14,10,17],
[17,20,17,0,16,15,17,19],
[12,16,18,15,0,16,14,14],
[15,17,17,16,15,0,15,17],
[16,14,21,14,17,16,0,14],
[15,13,14,12,17,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,19,14,21,16,16,17],
[17,0,13,12,19,13,12,23],
[12,18,0,13,16,10,16,19],
[17,19,18,0,15,17,17,18],
[10,12,15,16,0,10,15,13],
[15,18,21,14,21,0,17,19],
[15,19,15,14,16,14,0,14],
[14,8,12,13,18,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,5,16,14,14,15,11],
[18,0,16,16,10,16,19,12],
[26,15,0,21,19,21,20,14],
[15,15,10,0,9,13,20,12],
[17,21,12,22,0,17,22,17],
[17,15,10,18,14,0,16,12],
[16,12,11,11,9,15,0,10],
[20,19,17,19,14,19,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,9,9,5,7,5],
[21,0,14,11,9,11,12,11],
[23,17,0,14,15,15,11,17],
[22,20,17,0,17,17,16,11],
[22,22,16,14,0,13,11,11],
[26,20,16,14,18,0,15,16],
[24,19,20,15,20,16,0,13],
[26,20,14,20,20,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,18,16,14,15,17],
[15,0,16,18,16,17,15,17],
[19,15,0,19,18,14,13,19],
[13,13,12,0,14,8,15,12],
[15,15,13,17,0,11,16,15],
[17,14,17,23,20,0,17,17],
[16,16,18,16,15,14,0,16],
[14,14,12,19,16,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,18,12,6,11,8,8],
[20,0,18,14,20,22,22,14],
[13,13,0,15,12,10,14,9],
[19,17,16,0,12,10,14,23],
[25,11,19,19,0,16,20,21],
[20,9,21,21,15,0,15,19],
[23,9,17,17,11,16,0,21],
[23,17,22,8,10,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,16,13,14,21,14],
[17,0,17,23,19,15,20,16],
[17,14,0,23,24,20,19,16],
[15,8,8,0,16,14,16,10],
[18,12,7,15,0,15,20,12],
[17,16,11,17,16,0,19,13],
[10,11,12,15,11,12,0,18],
[17,15,15,21,19,18,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,19,18,18,19,23],
[17,0,16,21,18,15,21,17],
[16,15,0,23,18,21,22,18],
[12,10,8,0,13,10,14,13],
[13,13,13,18,0,14,14,17],
[13,16,10,21,17,0,17,12],
[12,10,9,17,17,14,0,11],
[8,14,13,18,14,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,21,18,21,15,15,17],
[14,0,18,14,18,15,16,10],
[10,13,0,14,17,10,10,10],
[13,17,17,0,18,12,13,12],
[10,13,14,13,0,7,11,9],
[16,16,21,19,24,0,19,15],
[16,15,21,18,20,12,0,13],
[14,21,21,19,22,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,8,12,10,17,9],
[17,0,19,11,16,9,14,16],
[16,12,0,12,9,13,11,13],
[23,20,19,0,14,19,19,13],
[19,15,22,17,0,15,14,12],
[21,22,18,12,16,0,18,10],
[14,17,20,12,17,13,0,12],
[22,15,18,18,19,21,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,14,14,19,15,15,17],
[23,0,20,24,20,14,15,18],
[17,11,0,18,25,19,12,9],
[17,7,13,0,10,16,14,13],
[12,11,6,21,0,17,13,10],
[16,17,12,15,14,0,11,13],
[16,16,19,17,18,20,0,13],
[14,13,22,18,21,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,10,16,14,14,14,14],
[11,0,13,14,13,13,11,10],
[21,18,0,17,14,17,19,18],
[15,17,14,0,13,20,17,14],
[17,18,17,18,0,16,13,17],
[17,18,14,11,15,0,15,14],
[17,20,12,14,18,16,0,13],
[17,21,13,17,14,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,5,29,7,17,13,17],
[10,0,15,22,15,12,10,13],
[26,16,0,24,14,14,22,17],
[2,9,7,0,7,4,5,5],
[24,16,17,24,0,14,12,17],
[14,19,17,27,17,0,25,17],
[18,21,9,26,19,6,0,17],
[14,18,14,26,14,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,15,18,18,17,16],
[11,0,17,12,13,11,10,15],
[12,14,0,10,16,11,15,12],
[16,19,21,0,17,14,13,19],
[13,18,15,14,0,12,13,12],
[13,20,20,17,19,0,15,18],
[14,21,16,18,18,16,0,18],
[15,16,19,12,19,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,22,19,17,16,16,14],
[14,0,16,13,15,15,15,15],
[9,15,0,14,18,12,14,15],
[12,18,17,0,15,14,16,15],
[14,16,13,16,0,17,13,18],
[15,16,19,17,14,0,15,14],
[15,16,17,15,18,16,0,16],
[17,16,16,16,13,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,15,13,16,13,14],
[18,0,13,14,13,14,17,13],
[15,18,0,20,16,16,20,15],
[16,17,11,0,14,11,13,10],
[18,18,15,17,0,16,15,15],
[15,17,15,20,15,0,14,16],
[18,14,11,18,16,17,0,15],
[17,18,16,21,16,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,17,15,11,8,19,11],
[23,0,14,15,22,20,28,16],
[14,17,0,16,20,12,22,14],
[16,16,15,0,19,18,18,15],
[20,9,11,12,0,12,14,8],
[23,11,19,13,19,0,21,14],
[12,3,9,13,17,10,0,8],
[20,15,17,16,23,17,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,15,12,16,13,19,10],
[7,0,13,4,6,13,11,11],
[16,18,0,14,21,23,14,17],
[19,27,17,0,15,16,22,13],
[15,25,10,16,0,12,17,12],
[18,18,8,15,19,0,17,8],
[12,20,17,9,14,14,0,15],
[21,20,14,18,19,23,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,20,23,13,24,11,19],
[3,0,13,18,2,13,9,21],
[11,18,0,17,8,23,18,19],
[8,13,14,0,12,12,8,19],
[18,29,23,19,0,28,11,19],
[7,18,8,19,3,0,13,16],
[20,22,13,23,20,18,0,14],
[12,10,12,12,12,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,10,9,12,16,6,12],
[25,0,18,22,19,18,11,15],
[21,13,0,14,25,21,14,17],
[22,9,17,0,17,15,10,10],
[19,12,6,14,0,15,12,11],
[15,13,10,16,16,0,13,7],
[25,20,17,21,19,18,0,14],
[19,16,14,21,20,24,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,15,19,18,18,19],
[13,0,19,16,16,19,14,20],
[11,12,0,12,12,13,14,17],
[16,15,19,0,17,17,18,16],
[12,15,19,14,0,19,14,17],
[13,12,18,14,12,0,14,17],
[13,17,17,13,17,17,0,15],
[12,11,14,15,14,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,15,14,13,14,18],
[19,0,14,19,16,15,13,19],
[15,17,0,18,16,12,12,18],
[16,12,13,0,16,16,15,17],
[17,15,15,15,0,14,17,20],
[18,16,19,15,17,0,18,14],
[17,18,19,16,14,13,0,18],
[13,12,13,14,11,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,12,15,30,13,15,18],
[12,0,8,15,19,5,4,15],
[19,23,0,22,21,13,24,13],
[16,16,9,0,16,11,10,14],
[1,12,10,15,0,11,13,6],
[18,26,18,20,20,0,21,11],
[16,27,7,21,18,10,0,14],
[13,16,18,17,25,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,18,11,19,18,13,17],
[23,0,23,15,24,23,17,16],
[13,8,0,9,13,18,13,17],
[20,16,22,0,20,21,15,19],
[12,7,18,11,0,16,16,14],
[13,8,13,10,15,0,13,12],
[18,14,18,16,15,18,0,17],
[14,15,14,12,17,19,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,13,13,9,12,10],
[20,0,19,16,19,15,22,16],
[23,12,0,17,15,16,19,14],
[18,15,14,0,13,13,16,15],
[18,12,16,18,0,13,18,13],
[22,16,15,18,18,0,22,19],
[19,9,12,15,13,9,0,10],
[21,15,17,16,18,12,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,8,15,12,21,13,17],
[13,0,16,16,16,19,14,17],
[23,15,0,15,15,19,16,21],
[16,15,16,0,14,20,19,15],
[19,15,16,17,0,22,22,20],
[10,12,12,11,9,0,13,15],
[18,17,15,12,9,18,0,14],
[14,14,10,16,11,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,17,17,16,14,16],
[13,0,19,16,10,18,14,15],
[14,12,0,13,13,14,14,13],
[14,15,18,0,16,20,16,13],
[14,21,18,15,0,19,16,17],
[15,13,17,11,12,0,14,13],
[17,17,17,15,15,17,0,12],
[15,16,18,18,14,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,17,9,10,15,10],
[17,0,21,19,13,10,13,18],
[21,10,0,15,14,10,16,16],
[14,12,16,0,12,9,15,12],
[22,18,17,19,0,19,15,18],
[21,21,21,22,12,0,18,13],
[16,18,15,16,16,13,0,13],
[21,13,15,19,13,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,16,26,20,24,15],
[16,0,16,15,26,15,21,20],
[13,15,0,15,25,10,20,18],
[15,16,16,0,26,14,21,21],
[5,5,6,5,0,10,12,15],
[11,16,21,17,21,0,16,13],
[7,10,11,10,19,15,0,11],
[16,11,13,10,16,18,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,25,21,22,10,16],
[9,0,17,5,20,23,5,13],
[8,14,0,13,17,16,7,12],
[6,26,18,0,20,22,8,14],
[10,11,14,11,0,16,9,8],
[9,8,15,9,15,0,5,8],
[21,26,24,23,22,26,0,12],
[15,18,19,17,23,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,11,15,14,13,11],
[17,0,16,17,15,18,19,11],
[17,15,0,18,19,19,17,15],
[20,14,13,0,15,19,15,14],
[16,16,12,16,0,19,17,16],
[17,13,12,12,12,0,14,8],
[18,12,14,16,14,17,0,11],
[20,20,16,17,15,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,21,20,17,17,12],
[15,0,15,16,18,16,19,15],
[10,16,0,20,18,16,19,16],
[10,15,11,0,13,12,13,8],
[11,13,13,18,0,14,17,15],
[14,15,15,19,17,0,21,14],
[14,12,12,18,14,10,0,13],
[19,16,15,23,16,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,17,17,15,13,18],
[16,0,17,16,14,15,13,15],
[13,14,0,22,20,13,17,22],
[14,15,9,0,14,17,22,14],
[14,17,11,17,0,15,17,16],
[16,16,18,14,16,0,20,17],
[18,18,14,9,14,11,0,16],
[13,16,9,17,15,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,15,16,20,19,21,21],
[12,0,14,13,18,20,16,17],
[16,17,0,18,12,18,22,18],
[15,18,13,0,17,17,15,18],
[11,13,19,14,0,16,17,17],
[12,11,13,14,15,0,17,16],
[10,15,9,16,14,14,0,18],
[10,14,13,13,14,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,6,6,10,8,15,3],
[24,0,19,15,21,22,19,12],
[25,12,0,16,24,18,22,18],
[25,16,15,0,17,21,12,16],
[21,10,7,14,0,9,11,7],
[23,9,13,10,22,0,13,9],
[16,12,9,19,20,18,0,8],
[28,19,13,15,24,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,17,18,22,17,12],
[20,0,12,16,18,14,20,16],
[19,19,0,27,30,13,25,21],
[14,15,4,0,18,6,16,8],
[13,13,1,13,0,13,13,13],
[9,17,18,25,18,0,25,13],
[14,11,6,15,18,6,0,8],
[19,15,10,23,18,18,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,22,18,23,25,21],
[16,0,13,15,17,12,22,15],
[13,18,0,9,17,12,20,13],
[9,16,22,0,22,19,19,17],
[13,14,14,9,0,12,24,11],
[8,19,19,12,19,0,19,18],
[6,9,11,12,7,12,0,9],
[10,16,18,14,20,13,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,4,7,8,11,9],
[20,0,15,16,16,15,10,12],
[20,16,0,15,12,15,16,15],
[27,15,16,0,18,23,14,18],
[24,15,19,13,0,21,14,14],
[23,16,16,8,10,0,15,10],
[20,21,15,17,17,16,0,11],
[22,19,16,13,17,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,15,19,16,13,17],
[14,0,12,10,15,16,7,9],
[18,19,0,18,13,18,17,14],
[16,21,13,0,19,11,14,14],
[12,16,18,12,0,14,15,17],
[15,15,13,20,17,0,13,9],
[18,24,14,17,16,18,0,13],
[14,22,17,17,14,22,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,15,12,10,13,16],
[17,0,12,9,12,16,18,11],
[17,19,0,18,7,21,10,18],
[16,22,13,0,16,21,13,10],
[19,19,24,15,0,20,17,16],
[21,15,10,10,11,0,11,9],
[18,13,21,18,14,20,0,17],
[15,20,13,21,15,22,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,21,20,19,19,12,15],
[14,0,19,13,14,16,13,14],
[10,12,0,13,6,20,10,11],
[11,18,18,0,12,14,13,18],
[12,17,25,19,0,25,18,18],
[12,15,11,17,6,0,13,15],
[19,18,21,18,13,18,0,24],
[16,17,20,13,13,16,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,14,15,17,11,14],
[14,0,7,14,13,13,11,6],
[16,24,0,14,22,24,18,17],
[17,17,17,0,16,17,13,11],
[16,18,9,15,0,21,15,12],
[14,18,7,14,10,0,13,13],
[20,20,13,18,16,18,0,14],
[17,25,14,20,19,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,14,24,16,17,15,14],
[9,0,19,18,10,13,12,8],
[17,12,0,20,19,13,8,14],
[7,13,11,0,15,17,8,13],
[15,21,12,16,0,11,13,16],
[14,18,18,14,20,0,13,9],
[16,19,23,23,18,18,0,12],
[17,23,17,18,15,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,16,13,15,16,12],
[17,0,17,15,18,20,20,20],
[18,14,0,16,19,18,19,23],
[15,16,15,0,19,13,21,21],
[18,13,12,12,0,13,15,13],
[16,11,13,18,18,0,23,18],
[15,11,12,10,16,8,0,17],
[19,11,8,10,18,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,21,10,14,12,8],
[15,0,23,15,17,16,19,17],
[17,8,0,15,10,8,13,15],
[10,16,16,0,12,18,14,6],
[21,14,21,19,0,16,21,11],
[17,15,23,13,15,0,19,19],
[19,12,18,17,10,12,0,17],
[23,14,16,25,20,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,13,18,13,14,16],
[17,0,16,19,19,14,19,17],
[17,15,0,11,19,18,14,18],
[18,12,20,0,16,14,20,13],
[13,12,12,15,0,12,17,12],
[18,17,13,17,19,0,19,12],
[17,12,17,11,14,12,0,13],
[15,14,13,18,19,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,17,15,16,14,17],
[17,0,16,15,14,15,15,16],
[15,15,0,15,14,11,18,13],
[14,16,16,0,16,16,19,17],
[16,17,17,15,0,12,16,14],
[15,16,20,15,19,0,18,18],
[17,16,13,12,15,13,0,13],
[14,15,18,14,17,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,17,15,14,14,14],
[18,0,17,16,15,16,12,14],
[15,14,0,20,15,12,15,13],
[14,15,11,0,12,10,9,12],
[16,16,16,19,0,12,12,13],
[17,15,19,21,19,0,13,16],
[17,19,16,22,19,18,0,15],
[17,17,18,19,18,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,16,15,18,12,22],
[14,0,17,13,11,17,11,20],
[17,14,0,14,10,18,10,15],
[15,18,17,0,8,20,16,13],
[16,20,21,23,0,21,14,24],
[13,14,13,11,10,0,12,18],
[19,20,21,15,17,19,0,23],
[9,11,16,18,7,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,28,14,21,17,27,21],
[13,0,25,10,16,14,20,18],
[3,6,0,7,11,6,12,5],
[17,21,24,0,14,15,24,18],
[10,15,20,17,0,17,17,17],
[14,17,25,16,14,0,16,13],
[4,11,19,7,14,15,0,7],
[10,13,26,13,14,18,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,12,12,21,10,10,16],
[2,0,12,13,14,5,10,10],
[19,19,0,14,24,14,14,14],
[19,18,17,0,24,11,20,11],
[10,17,7,7,0,5,6,1],
[21,26,17,20,26,0,10,16],
[21,21,17,11,25,21,0,12],
[15,21,17,20,30,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,14,16,12,23,19,15],
[11,0,11,15,15,10,12,12],
[17,20,0,13,14,14,14,14],
[15,16,18,0,16,13,13,14],
[19,16,17,15,0,16,17,16],
[8,21,17,18,15,0,11,13],
[12,19,17,18,14,20,0,14],
[16,19,17,17,15,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,17,16,13,15,12],
[19,0,13,14,13,16,17,17],
[18,18,0,18,17,15,16,17],
[14,17,13,0,14,14,16,13],
[15,18,14,17,0,12,14,14],
[18,15,16,17,19,0,15,14],
[16,14,15,15,17,16,0,13],
[19,14,14,18,17,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,18,18,17,16,22],
[18,0,14,19,18,17,17,22],
[21,17,0,13,20,13,14,21],
[13,12,18,0,16,12,10,16],
[13,13,11,15,0,15,11,17],
[14,14,18,19,16,0,16,18],
[15,14,17,21,20,15,0,18],
[9,9,10,15,14,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,13,15,19,18,19],
[15,0,13,18,15,18,20,17],
[17,18,0,15,18,17,22,21],
[18,13,16,0,20,20,18,21],
[16,16,13,11,0,17,16,17],
[12,13,14,11,14,0,12,17],
[13,11,9,13,15,19,0,18],
[12,14,10,10,14,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,18,9,10,14,10,12],
[9,0,17,9,6,11,13,11],
[13,14,0,13,9,13,16,7],
[22,22,18,0,14,15,11,18],
[21,25,22,17,0,12,17,14],
[17,20,18,16,19,0,17,15],
[21,18,15,20,14,14,0,9],
[19,20,24,13,17,16,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,7,5,11,16,11,8],
[23,0,7,9,15,20,12,22],
[24,24,0,15,16,21,16,19],
[26,22,16,0,12,20,16,22],
[20,16,15,19,0,19,18,15],
[15,11,10,11,12,0,13,20],
[20,19,15,15,13,18,0,15],
[23,9,12,9,16,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,26,0,9,0,15],
[20,0,20,18,20,22,15,20],
[18,11,0,13,5,5,2,10],
[5,13,18,0,5,7,5,5],
[31,11,26,26,0,18,18,23],
[22,9,26,24,13,0,6,8],
[31,16,29,26,13,25,0,25],
[16,11,21,26,8,23,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,13,16,11,13,13],
[19,0,11,17,13,12,11,19],
[20,20,0,16,18,14,17,18],
[18,14,15,0,18,13,13,16],
[15,18,13,13,0,12,13,14],
[20,19,17,18,19,0,15,17],
[18,20,14,18,18,16,0,17],
[18,12,13,15,17,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,18,22,19,14,14],
[14,0,10,11,12,12,9,15],
[14,21,0,15,15,12,20,15],
[13,20,16,0,12,19,20,15],
[9,19,16,19,0,15,16,14],
[12,19,19,12,16,0,20,16],
[17,22,11,11,15,11,0,10],
[17,16,16,16,17,15,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,14,10,17,12,17],
[18,0,15,19,15,11,13,17],
[15,16,0,20,16,17,14,17],
[17,12,11,0,8,13,10,10],
[21,16,15,23,0,14,15,11],
[14,20,14,18,17,0,18,18],
[19,18,17,21,16,13,0,17],
[14,14,14,21,20,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,16,13,17,17,18,21],
[12,0,15,12,15,13,14,15],
[15,16,0,15,18,13,17,16],
[18,19,16,0,16,15,16,18],
[14,16,13,15,0,15,15,16],
[14,18,18,16,16,0,18,19],
[13,17,14,15,16,13,0,14],
[10,16,15,13,15,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,14,10,13,11,17],
[19,0,15,12,17,16,17,22],
[17,16,0,19,12,19,18,18],
[17,19,12,0,14,20,16,17],
[21,14,19,17,0,21,21,24],
[18,15,12,11,10,0,16,20],
[20,14,13,15,10,15,0,17],
[14,9,13,14,7,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,17,15,15,16,12],
[8,0,12,14,9,10,12,14],
[14,19,0,18,16,17,15,13],
[14,17,13,0,12,17,14,18],
[16,22,15,19,0,19,18,16],
[16,21,14,14,12,0,12,15],
[15,19,16,17,13,19,0,13],
[19,17,18,13,15,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,13,11,12,10,16],
[19,0,18,17,16,17,15,19],
[20,13,0,18,13,16,15,18],
[18,14,13,0,10,11,13,11],
[20,15,18,21,0,18,17,18],
[19,14,15,20,13,0,14,18],
[21,16,16,18,14,17,0,14],
[15,12,13,20,13,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,12,12,17,8,23],
[15,0,19,13,11,16,12,20],
[14,12,0,17,16,21,16,22],
[19,18,14,0,17,18,18,26],
[19,20,15,14,0,13,10,26],
[14,15,10,13,18,0,9,22],
[23,19,15,13,21,22,0,28],
[8,11,9,5,5,9,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,17,9,8,15,19],
[17,0,12,15,12,16,15,15],
[15,19,0,16,11,14,20,15],
[14,16,15,0,9,12,17,16],
[22,19,20,22,0,15,15,21],
[23,15,17,19,16,0,20,16],
[16,16,11,14,16,11,0,15],
[12,16,16,15,10,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,22,18,16,15,18],
[14,0,17,21,17,17,12,17],
[15,14,0,21,20,13,13,20],
[9,10,10,0,13,9,7,11],
[13,14,11,18,0,12,9,14],
[15,14,18,22,19,0,19,17],
[16,19,18,24,22,12,0,19],
[13,14,11,20,17,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,13,21,18,17,20,23],
[12,0,17,19,8,15,12,21],
[18,14,0,19,16,17,18,16],
[10,12,12,0,14,10,15,15],
[13,23,15,17,0,18,17,20],
[14,16,14,21,13,0,19,18],
[11,19,13,16,14,12,0,16],
[8,10,15,16,11,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,13,11,14,12,13],
[17,0,13,13,17,16,13,16],
[20,18,0,14,17,18,12,17],
[18,18,17,0,16,15,16,21],
[20,14,14,15,0,17,17,13],
[17,15,13,16,14,0,15,15],
[19,18,19,15,14,16,0,14],
[18,15,14,10,18,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,20,19,18,21,16],
[15,0,17,21,18,19,17,18],
[16,14,0,15,17,15,20,12],
[11,10,16,0,14,11,14,17],
[12,13,14,17,0,13,16,15],
[13,12,16,20,18,0,16,17],
[10,14,11,17,15,15,0,13],
[15,13,19,14,16,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,6,10,7,16,15],
[17,0,15,10,1,7,12,9],
[20,16,0,4,13,16,11,16],
[25,21,27,0,13,16,18,24],
[21,30,18,18,0,15,13,25],
[24,24,15,15,16,0,14,22],
[15,19,20,13,18,17,0,17],
[16,22,15,7,6,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,18,15,16,15,17],
[14,0,13,16,17,16,10,16],
[15,18,0,18,14,17,17,17],
[13,15,13,0,14,16,13,15],
[16,14,17,17,0,17,16,14],
[15,15,14,15,14,0,14,17],
[16,21,14,18,15,17,0,18],
[14,15,14,16,17,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,9,18,9,12,8],
[22,0,20,18,24,13,19,19],
[20,11,0,17,20,14,13,20],
[22,13,14,0,24,23,15,15],
[13,7,11,7,0,11,10,10],
[22,18,17,8,20,0,18,15],
[19,12,18,16,21,13,0,15],
[23,12,11,16,21,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,7,7,9,12,6,5],
[14,0,10,10,9,17,11,10],
[24,21,0,19,21,19,15,17],
[24,21,12,0,25,22,20,16],
[22,22,10,6,0,21,13,14],
[19,14,12,9,10,0,11,8],
[25,20,16,11,18,20,0,7],
[26,21,14,15,17,23,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,13,21,16,13,15],
[13,0,13,6,14,17,15,12],
[14,18,0,20,19,17,13,17],
[18,25,11,0,23,18,19,19],
[10,17,12,8,0,14,5,13],
[15,14,14,13,17,0,12,17],
[18,16,18,12,26,19,0,15],
[16,19,14,12,18,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,20,14,15,13,13],
[17,0,15,18,15,18,14,15],
[15,16,0,17,16,14,12,16],
[11,13,14,0,9,15,10,11],
[17,16,15,22,0,19,13,18],
[16,13,17,16,12,0,11,13],
[18,17,19,21,18,20,0,14],
[18,16,15,20,13,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,21,11,17,23,23],
[18,0,16,19,15,19,23,24],
[13,15,0,18,15,17,17,22],
[10,12,13,0,14,17,16,17],
[20,16,16,17,0,15,15,20],
[14,12,14,14,16,0,15,15],
[8,8,14,15,16,16,0,15],
[8,7,9,14,11,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,29,19,19,29,12,21],
[0,0,19,7,7,19,12,7],
[2,12,0,0,19,31,12,9],
[12,24,31,0,19,31,24,21],
[12,24,12,12,0,29,12,21],
[2,12,0,0,2,0,0,9],
[19,19,19,7,19,31,0,9],
[10,24,22,10,10,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,16,12,17,16,7],
[18,0,16,14,20,22,19,17],
[15,15,0,17,11,18,16,14],
[15,17,14,0,15,21,22,8],
[19,11,20,16,0,17,16,14],
[14,9,13,10,14,0,16,11],
[15,12,15,9,15,15,0,11],
[24,14,17,23,17,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,19,18,14,19,14],
[11,0,12,16,12,15,11,13],
[15,19,0,18,16,17,11,16],
[12,15,13,0,17,18,10,15],
[13,19,15,14,0,20,10,17],
[17,16,14,13,11,0,7,11],
[12,20,20,21,21,24,0,22],
[17,18,15,16,14,20,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,15,10,16,19,17],
[16,0,16,18,17,13,21,20],
[9,15,0,11,11,15,17,17],
[16,13,20,0,17,18,16,21],
[21,14,20,14,0,12,21,21],
[15,18,16,13,19,0,18,24],
[12,10,14,15,10,13,0,16],
[14,11,14,10,10,7,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,11,23,19,17,21,17],
[9,0,9,13,18,11,19,16],
[20,22,0,18,20,15,24,18],
[8,18,13,0,20,16,16,16],
[12,13,11,11,0,12,15,12],
[14,20,16,15,19,0,16,13],
[10,12,7,15,16,15,0,13],
[14,15,13,15,19,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,22,21,15,17,17],
[16,0,15,21,20,17,19,17],
[15,16,0,21,16,17,16,16],
[9,10,10,0,15,13,15,14],
[10,11,15,16,0,17,13,16],
[16,14,14,18,14,0,18,14],
[14,12,15,16,18,13,0,14],
[14,14,15,17,15,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,16,17,21,21,17],
[14,0,17,13,16,17,16,14],
[16,14,0,12,20,16,17,18],
[15,18,19,0,22,24,17,18],
[14,15,11,9,0,16,15,16],
[10,14,15,7,15,0,12,8],
[10,15,14,14,16,19,0,12],
[14,17,13,13,15,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,26,17,19,18,15,9],
[17,0,13,15,17,16,16,11],
[5,18,0,4,5,9,9,5],
[14,16,27,0,18,20,21,10],
[12,14,26,13,0,13,15,5],
[13,15,22,11,18,0,11,16],
[16,15,22,10,16,20,0,15],
[22,20,26,21,26,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,16,21,16,17,15],
[19,0,16,11,18,13,20,19],
[17,15,0,19,20,17,17,17],
[15,20,12,0,21,20,24,16],
[10,13,11,10,0,15,18,15],
[15,18,14,11,16,0,22,18],
[14,11,14,7,13,9,0,12],
[16,12,14,15,16,13,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,13,3,11,20,8,3],
[25,0,24,15,10,22,20,11],
[18,7,0,12,12,13,11,14],
[28,16,19,0,17,24,15,14],
[20,21,19,14,0,23,20,16],
[11,9,18,7,8,0,6,7],
[23,11,20,16,11,25,0,17],
[28,20,17,17,15,24,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,24,24,17,24,17,17],
[20,0,20,20,13,31,27,27],
[7,11,0,13,13,17,13,17],
[7,11,18,0,14,31,20,17],
[14,18,18,17,0,31,20,24],
[7,0,14,0,0,0,7,0],
[14,4,18,11,11,24,0,11],
[14,4,14,14,7,31,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,16,6,10,16,16],
[21,0,6,6,6,16,6,26],
[15,25,0,15,15,25,15,31],
[15,25,16,0,5,10,10,31],
[25,25,16,26,0,10,20,26],
[21,15,6,21,21,0,16,31],
[15,25,16,21,11,15,0,31],
[15,5,0,0,5,0,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,16,16,15,16,18],
[15,0,16,16,15,19,15,11],
[20,15,0,13,19,22,17,19],
[15,15,18,0,19,19,19,14],
[15,16,12,12,0,15,15,18],
[16,12,9,12,16,0,12,13],
[15,16,14,12,16,19,0,19],
[13,20,12,17,13,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,9,8,15,7,11],
[21,0,14,10,11,14,15,8],
[18,17,0,17,19,19,14,17],
[22,21,14,0,17,19,19,13],
[23,20,12,14,0,13,16,9],
[16,17,12,12,18,0,16,15],
[24,16,17,12,15,15,0,9],
[20,23,14,18,22,16,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,11,6,14,13,10],
[20,0,13,13,12,14,19,14],
[21,18,0,11,18,22,24,18],
[20,18,20,0,14,20,17,16],
[25,19,13,17,0,23,21,21],
[17,17,9,11,8,0,15,16],
[18,12,7,14,10,16,0,14],
[21,17,13,15,10,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,19,22,10,15,12],
[15,0,11,14,13,17,13,11],
[18,20,0,14,18,16,16,15],
[12,17,17,0,15,13,18,16],
[9,18,13,16,0,12,14,13],
[21,14,15,18,19,0,16,14],
[16,18,15,13,17,15,0,19],
[19,20,16,15,18,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,10,17,19,8,17,12],
[14,0,20,15,11,15,11,8],
[21,11,0,15,13,16,12,9],
[14,16,16,0,7,9,14,3],
[12,20,18,24,0,11,19,11],
[23,16,15,22,20,0,17,17],
[14,20,19,17,12,14,0,12],
[19,23,22,28,20,14,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,18,9,18,18,9,13],
[10,0,12,10,19,19,10,7],
[13,19,0,16,28,22,19,13],
[22,21,15,0,22,15,28,22],
[13,12,3,9,0,15,16,7],
[13,12,9,16,16,0,16,13],
[22,21,12,3,15,15,0,22],
[18,24,18,9,24,18,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,14,17,14,15,18],
[15,0,18,16,13,16,14,18],
[13,13,0,17,15,14,10,17],
[17,15,14,0,13,14,11,15],
[14,18,16,18,0,19,18,17],
[17,15,17,17,12,0,14,18],
[16,17,21,20,13,17,0,19],
[13,13,14,16,14,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,13,15,14,13,11],
[16,0,17,19,18,14,14,12],
[14,14,0,14,14,17,10,12],
[18,12,17,0,15,17,15,10],
[16,13,17,16,0,16,18,9],
[17,17,14,14,15,0,15,13],
[18,17,21,16,13,16,0,17],
[20,19,19,21,22,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,17,23,17,17,23],
[22,0,17,17,20,14,19,24],
[20,14,0,21,20,22,18,27],
[14,14,10,0,19,16,23,23],
[8,11,11,12,0,6,17,18],
[14,17,9,15,25,0,18,30],
[14,12,13,8,14,13,0,14],
[8,7,4,8,13,1,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,16,10,13,12,13],
[18,0,15,20,11,18,16,16],
[21,16,0,19,17,15,17,13],
[15,11,12,0,13,15,15,9],
[21,20,14,18,0,16,17,17],
[18,13,16,16,15,0,16,13],
[19,15,14,16,14,15,0,13],
[18,15,18,22,14,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,22,13,17,9,19,17],
[18,0,23,18,18,14,24,18],
[9,8,0,7,8,11,14,18],
[18,13,24,0,13,15,21,22],
[14,13,23,18,0,17,12,20],
[22,17,20,16,14,0,22,18],
[12,7,17,10,19,9,0,15],
[14,13,13,9,11,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,10,12,9,11,13],
[19,0,18,18,18,12,17,16],
[19,13,0,11,14,14,18,17],
[21,13,20,0,17,18,21,17],
[19,13,17,14,0,11,12,15],
[22,19,17,13,20,0,19,14],
[20,14,13,10,19,12,0,12],
[18,15,14,14,16,17,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,14,13,19,14,10],
[17,0,16,15,21,23,22,14],
[16,15,0,17,20,18,18,16],
[17,16,14,0,19,19,14,18],
[18,10,11,12,0,18,14,12],
[12,8,13,12,13,0,14,7],
[17,9,13,17,17,17,0,15],
[21,17,15,13,19,24,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,21,16,24,10,20],
[16,0,18,12,12,15,10,14],
[12,13,0,12,12,15,11,13],
[10,19,19,0,16,16,13,21],
[15,19,19,15,0,17,15,16],
[7,16,16,15,14,0,16,18],
[21,21,20,18,16,15,0,17],
[11,17,18,10,15,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,19,14,16,16,14],
[16,0,19,14,13,12,9,16],
[12,12,0,11,12,15,5,5],
[12,17,20,0,16,16,6,9],
[17,18,19,15,0,19,19,16],
[15,19,16,15,12,0,11,16],
[15,22,26,25,12,20,0,22],
[17,15,26,22,15,15,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,9,2,17,14,19],
[23,0,21,14,18,25,18,25],
[18,10,0,8,16,21,16,16],
[22,17,23,0,17,22,15,22],
[29,13,15,14,0,20,22,22],
[14,6,10,9,11,0,15,9],
[17,13,15,16,9,16,0,19],
[12,6,15,9,9,22,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,19,18,19,18,12,15],
[15,0,15,15,18,20,17,19],
[12,16,0,17,19,20,14,18],
[13,16,14,0,17,15,16,17],
[12,13,12,14,0,18,18,15],
[13,11,11,16,13,0,14,10],
[19,14,17,15,13,17,0,18],
[16,12,13,14,16,21,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,21,14,21,17,14],
[13,0,16,23,17,25,18,18],
[13,15,0,16,15,15,17,16],
[10,8,15,0,13,17,19,10],
[17,14,16,18,0,14,21,15],
[10,6,16,14,17,0,13,11],
[14,13,14,12,10,18,0,13],
[17,13,15,21,16,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,18,18,22,18,16,14],
[9,0,12,12,16,11,14,14],
[13,19,0,17,16,19,16,18],
[13,19,14,0,15,18,21,17],
[9,15,15,16,0,14,17,16],
[13,20,12,13,17,0,17,13],
[15,17,15,10,14,14,0,12],
[17,17,13,14,15,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,30,3,9,14,20,3],
[11,0,13,8,12,15,16,8],
[1,18,0,1,9,12,11,3],
[28,23,30,0,21,15,27,20],
[22,19,22,10,0,19,27,10],
[17,16,19,16,12,0,19,17],
[11,15,20,4,4,12,0,9],
[28,23,28,11,21,14,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,17,18,13,14,13],
[16,0,15,11,14,11,16,17],
[19,16,0,14,15,13,14,16],
[14,20,17,0,18,18,17,18],
[13,17,16,13,0,15,10,11],
[18,20,18,13,16,0,20,18],
[17,15,17,14,21,11,0,16],
[18,14,15,13,20,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,20,16,22,14,18,17],
[8,0,12,10,17,12,10,13],
[11,19,0,14,22,14,17,15],
[15,21,17,0,20,17,18,14],
[9,14,9,11,0,9,9,9],
[17,19,17,14,22,0,17,18],
[13,21,14,13,22,14,0,13],
[14,18,16,17,22,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,18,13,19,15,16],
[18,0,19,18,18,22,15,20],
[21,12,0,18,17,19,17,18],
[13,13,13,0,19,23,16,13],
[18,13,14,12,0,21,12,13],
[12,9,12,8,10,0,13,8],
[16,16,14,15,19,18,0,12],
[15,11,13,18,18,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,23,18,16,12,19],
[9,0,14,18,6,17,13,13],
[7,17,0,23,9,10,9,19],
[8,13,8,0,16,15,14,12],
[13,25,22,15,0,21,18,23],
[15,14,21,16,10,0,20,11],
[19,18,22,17,13,11,0,19],
[12,18,12,19,8,20,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,16,17,16,16,16],
[16,0,14,15,16,16,16,16],
[17,17,0,17,16,22,18,13],
[15,16,14,0,20,15,21,17],
[14,15,15,11,0,14,13,15],
[15,15,9,16,17,0,14,13],
[15,15,13,10,18,17,0,16],
[15,15,18,14,16,18,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,20,21,20,7,14,8],
[14,0,7,20,16,13,11,8],
[11,24,0,20,19,13,15,14],
[10,11,11,0,17,13,6,14],
[11,15,12,14,0,16,10,17],
[24,18,18,18,15,0,17,16],
[17,20,16,25,21,14,0,15],
[23,23,17,17,14,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,16,12,18,22,19,21],
[12,0,18,16,15,28,25,17],
[15,13,0,15,17,18,16,19],
[19,15,16,0,18,17,26,18],
[13,16,14,13,0,16,16,18],
[9,3,13,14,15,0,18,18],
[12,6,15,5,15,13,0,15],
[10,14,12,13,13,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,13,21,17,15,18],
[15,0,25,20,15,17,20,23],
[20,6,0,15,11,15,14,15],
[18,11,16,0,17,21,24,25],
[10,16,20,14,0,21,20,15],
[14,14,16,10,10,0,14,9],
[16,11,17,7,11,17,0,12],
[13,8,16,6,16,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,7,10,7,14,11],
[17,0,20,19,10,15,10,17],
[19,11,0,7,10,7,7,13],
[24,12,24,0,16,17,18,13],
[21,21,21,15,0,21,14,11],
[24,16,24,14,10,0,13,14],
[17,21,24,13,17,18,0,13],
[20,14,18,18,20,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,22,13,21,20,21,16],
[18,0,22,16,21,15,17,16],
[9,9,0,6,16,11,9,10],
[18,15,25,0,20,18,24,16],
[10,10,15,11,0,5,14,11],
[11,16,20,13,26,0,20,18],
[10,14,22,7,17,11,0,11],
[15,15,21,15,20,13,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,18,15,23,18,18,16],
[11,0,15,11,19,18,17,14],
[13,16,0,16,18,20,14,14],
[16,20,15,0,20,22,20,18],
[8,12,13,11,0,19,12,12],
[13,13,11,9,12,0,11,8],
[13,14,17,11,19,20,0,18],
[15,17,17,13,19,23,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,15,12,13,16,12],
[16,0,16,13,16,16,20,22],
[18,15,0,15,19,15,18,12],
[16,18,16,0,15,23,20,22],
[19,15,12,16,0,19,16,18],
[18,15,16,8,12,0,18,19],
[15,11,13,11,15,13,0,15],
[19,9,19,9,13,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,16,15,8,13,10],
[15,0,14,13,13,13,13,9],
[20,17,0,12,17,15,18,13],
[15,18,19,0,12,14,16,11],
[16,18,14,19,0,12,17,19],
[23,18,16,17,19,0,21,15],
[18,18,13,15,14,10,0,12],
[21,22,18,20,12,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,12,12,16,17,18,14],
[12,0,13,13,16,14,19,14],
[19,18,0,11,18,17,20,14],
[19,18,20,0,18,17,23,15],
[15,15,13,13,0,14,17,13],
[14,17,14,14,17,0,20,17],
[13,12,11,8,14,11,0,10],
[17,17,17,16,18,14,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,18,13,18,15,16],
[14,0,16,16,15,20,18,14],
[17,15,0,13,17,21,17,10],
[13,15,18,0,18,16,14,15],
[18,16,14,13,0,19,14,13],
[13,11,10,15,12,0,11,11],
[16,13,14,17,17,20,0,14],
[15,17,21,16,18,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,14,16,20,14,15],
[17,0,22,25,18,19,12,23],
[17,9,0,9,12,13,4,7],
[17,6,22,0,16,13,4,12],
[15,13,19,15,0,22,13,14],
[11,12,18,18,9,0,18,18],
[17,19,27,27,18,13,0,27],
[16,8,24,19,17,13,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,18,21,16,20,23,14],
[8,0,16,16,10,12,21,13],
[13,15,0,17,12,22,26,19],
[10,15,14,0,17,20,22,15],
[15,21,19,14,0,24,19,20],
[11,19,9,11,7,0,21,8],
[8,10,5,9,12,10,0,8],
[17,18,12,16,11,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,13,11,12,11,10],
[17,0,7,10,15,13,16,12],
[22,24,0,12,12,17,13,11],
[18,21,19,0,22,15,22,23],
[20,16,19,9,0,17,16,15],
[19,18,14,16,14,0,22,16],
[20,15,18,9,15,9,0,7],
[21,19,20,8,16,15,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,7,14,22,8,16],
[18,0,11,10,21,20,13,18],
[16,20,0,15,18,22,17,24],
[24,21,16,0,22,23,14,19],
[17,10,13,9,0,15,10,15],
[9,11,9,8,16,0,12,15],
[23,18,14,17,21,19,0,18],
[15,13,7,12,16,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,17,14,15,17,11],
[18,0,15,23,19,15,22,16],
[16,16,0,17,18,13,19,16],
[14,8,14,0,17,11,18,8],
[17,12,13,14,0,14,21,9],
[16,16,18,20,17,0,22,14],
[14,9,12,13,10,9,0,8],
[20,15,15,23,22,17,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,13,13,12,10,11],
[16,0,14,14,11,12,11,11],
[16,17,0,20,15,14,11,12],
[18,17,11,0,8,15,13,8],
[18,20,16,23,0,18,14,16],
[19,19,17,16,13,0,15,11],
[21,20,20,18,17,16,0,13],
[20,20,19,23,15,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,25,13,14,10,19],
[12,0,14,15,10,10,11,12],
[14,17,0,18,14,17,15,12],
[6,16,13,0,8,9,7,7],
[18,21,17,23,0,18,9,18],
[17,21,14,22,13,0,16,12],
[21,20,16,24,22,15,0,17],
[12,19,19,24,13,19,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,19,17,14,16,15,13],
[15,0,17,12,16,16,17,20],
[12,14,0,12,14,14,15,14],
[14,19,19,0,16,15,18,17],
[17,15,17,15,0,15,14,19],
[15,15,17,16,16,0,17,16],
[16,14,16,13,17,14,0,15],
[18,11,17,14,12,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,9,12,12,15,19,9],
[14,0,15,16,20,20,17,15],
[22,16,0,15,23,22,21,21],
[19,15,16,0,21,18,16,20],
[19,11,8,10,0,13,15,21],
[16,11,9,13,18,0,14,16],
[12,14,10,15,16,17,0,20],
[22,16,10,11,10,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,13,20,12,19,13],
[20,0,21,25,10,18,17,24],
[16,10,0,26,12,10,16,26],
[18,6,5,0,8,12,6,8],
[11,21,19,23,0,22,29,23],
[19,13,21,19,9,0,19,23],
[12,14,15,25,2,12,0,24],
[18,7,5,23,8,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,20,13,24,12,30],
[11,0,18,31,20,27,16,22],
[7,13,0,22,11,22,18,22],
[11,0,9,0,15,21,5,11],
[18,11,20,16,0,26,12,27],
[7,4,9,10,5,0,7,7],
[19,15,13,26,19,24,0,19],
[1,9,9,20,4,24,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,14,8,8,9,11,9],
[24,0,16,7,13,11,14,14],
[17,15,0,18,18,15,18,18],
[23,24,13,0,15,16,11,11],
[23,18,13,16,0,16,11,15],
[22,20,16,15,15,0,15,9],
[20,17,13,20,20,16,0,16],
[22,17,13,20,16,22,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,11,13,8,12,16],
[20,0,17,15,15,16,17,17],
[19,14,0,15,11,14,12,15],
[20,16,16,0,15,17,15,16],
[18,16,20,16,0,14,18,17],
[23,15,17,14,17,0,19,15],
[19,14,19,16,13,12,0,16],
[15,14,16,15,14,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,14,22,18,9,18],
[19,0,15,21,23,22,17,22],
[15,16,0,10,20,16,11,18],
[17,10,21,0,24,19,15,19],
[9,8,11,7,0,14,10,15],
[13,9,15,12,17,0,13,16],
[22,14,20,16,21,18,0,21],
[13,9,13,12,16,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,15,17,18,15,23],
[15,0,19,15,10,17,18,21],
[18,12,0,14,11,17,16,17],
[16,16,17,0,13,17,11,15],
[14,21,20,18,0,22,20,22],
[13,14,14,14,9,0,11,20],
[16,13,15,20,11,20,0,18],
[8,10,14,16,9,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,18,11,14,21,11,18],
[10,0,7,0,10,10,3,18],
[13,24,0,21,24,24,17,18],
[20,31,10,0,24,24,17,25],
[17,21,7,7,0,10,7,18],
[10,21,7,7,21,0,18,18],
[20,28,14,14,24,13,0,25],
[13,13,13,6,13,13,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,21,22,19,22,13],
[13,0,18,20,22,20,18,23],
[15,13,0,21,22,13,20,17],
[10,11,10,0,14,10,9,14],
[9,9,9,17,0,9,11,13],
[12,11,18,21,22,0,20,18],
[9,13,11,22,20,11,0,15],
[18,8,14,17,18,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,13,22,15,22,22],
[14,0,16,14,7,16,14,14],
[16,15,0,16,7,11,14,16],
[18,17,15,0,22,17,22,29],
[9,24,24,9,0,24,16,25],
[16,15,20,14,7,0,14,14],
[9,17,17,9,15,17,0,22],
[9,17,15,2,6,17,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,15,13,15,14,14],
[15,0,16,15,17,16,18,16],
[18,15,0,22,21,19,15,19],
[16,16,9,0,15,11,14,15],
[18,14,10,16,0,11,17,14],
[16,15,12,20,20,0,20,19],
[17,13,16,17,14,11,0,15],
[17,15,12,16,17,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,9,12,13,18,18],
[18,0,23,12,17,19,27,25],
[15,8,0,5,7,12,11,18],
[22,19,26,0,15,18,24,22],
[19,14,24,16,0,18,20,24],
[18,12,19,13,13,0,19,17],
[13,4,20,7,11,12,0,18],
[13,6,13,9,7,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,10,20,10,14,13],
[14,0,13,7,13,12,15,0],
[15,18,0,11,19,9,15,10],
[21,24,20,0,17,26,15,16],
[11,18,12,14,0,9,18,7],
[21,19,22,5,22,0,16,11],
[17,16,16,16,13,15,0,13],
[18,31,21,15,24,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,22,16,19,20,15],
[18,0,20,21,13,20,17,21],
[14,11,0,16,16,18,15,10],
[9,10,15,0,13,12,8,11],
[15,18,15,18,0,17,20,19],
[12,11,13,19,14,0,13,16],
[11,14,16,23,11,18,0,13],
[16,10,21,20,12,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,18,14,18,17,13],
[14,0,16,12,13,16,14,11],
[14,15,0,11,13,16,14,14],
[13,19,20,0,19,19,13,16],
[17,18,18,12,0,19,16,14],
[13,15,15,12,12,0,17,13],
[14,17,17,18,15,14,0,14],
[18,20,17,15,17,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,21,13,20,8,21,6],
[22,0,21,19,19,14,21,16],
[10,10,0,9,16,8,16,8],
[18,12,22,0,21,17,23,16],
[11,12,15,10,0,8,21,12],
[23,17,23,14,23,0,27,12],
[10,10,15,8,10,4,0,11],
[25,15,23,15,19,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,21,14,15,16,21,11],
[19,0,19,15,14,12,17,12],
[10,12,0,14,14,11,17,9],
[17,16,17,0,13,13,17,13],
[16,17,17,18,0,14,19,18],
[15,19,20,18,17,0,21,16],
[10,14,14,14,12,10,0,10],
[20,19,22,18,13,15,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,15,14,20,14,19],
[13,0,12,13,7,14,12,12],
[13,19,0,15,7,14,14,13],
[16,18,16,0,9,10,9,13],
[17,24,24,22,0,15,18,18],
[11,17,17,21,16,0,19,16],
[17,19,17,22,13,12,0,16],
[12,19,18,18,13,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,11,13,13,2,11],
[20,0,16,20,11,22,22,25],
[20,15,0,15,17,17,6,11],
[20,11,16,0,13,31,20,27],
[18,20,14,18,0,22,20,14],
[18,9,14,0,9,0,18,23],
[29,9,25,11,11,13,0,11],
[20,6,20,4,17,8,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,19,17,14,18,20,19],
[18,0,14,10,4,15,13,13],
[12,17,0,10,20,17,23,19],
[14,21,21,0,15,18,23,20],
[17,27,11,16,0,21,25,16],
[13,16,14,13,10,0,26,14],
[11,18,8,8,6,5,0,8],
[12,18,12,11,15,17,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,20,13,15,16,18,17],
[14,0,19,15,14,16,17,19],
[11,12,0,14,13,11,14,15],
[18,16,17,0,12,16,19,18],
[16,17,18,19,0,15,17,20],
[15,15,20,15,16,0,17,16],
[13,14,17,12,14,14,0,14],
[14,12,16,13,11,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,24,13,13,16,16,19],
[13,0,16,17,10,14,14,15],
[7,15,0,8,6,11,13,14],
[18,14,23,0,11,16,18,18],
[18,21,25,20,0,21,15,23],
[15,17,20,15,10,0,15,25],
[15,17,18,13,16,16,0,22],
[12,16,17,13,8,6,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,20,14,16,18,17,17],
[9,0,17,6,11,11,9,10],
[11,14,0,9,11,11,15,13],
[17,25,22,0,16,18,21,13],
[15,20,20,15,0,21,20,17],
[13,20,20,13,10,0,16,13],
[14,22,16,10,11,15,0,9],
[14,21,18,18,14,18,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,18,11,11,10,18],
[15,0,14,16,15,14,10,15],
[21,17,0,22,14,14,16,19],
[13,15,9,0,10,14,13,15],
[20,16,17,21,0,14,17,18],
[20,17,17,17,17,0,11,19],
[21,21,15,18,14,20,0,21],
[13,16,12,16,13,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,20,16,15,21,20,22],
[18,0,20,15,15,17,16,16],
[11,11,0,17,13,17,18,15],
[15,16,14,0,16,15,15,15],
[16,16,18,15,0,16,21,16],
[10,14,14,16,15,0,21,12],
[11,15,13,16,10,10,0,13],
[9,15,16,16,15,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,6,13,20,19,8,19],
[14,0,16,16,24,19,7,15],
[25,15,0,17,24,16,12,20],
[18,15,14,0,21,18,18,19],
[11,7,7,10,0,14,7,7],
[12,12,15,13,17,0,11,11],
[23,24,19,13,24,20,0,23],
[12,16,11,12,24,20,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,17,13,19,17,17],
[20,0,11,16,15,15,15,17],
[15,20,0,14,17,19,18,18],
[14,15,17,0,18,15,18,17],
[18,16,14,13,0,19,18,15],
[12,16,12,16,12,0,14,12],
[14,16,13,13,13,17,0,15],
[14,14,13,14,16,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,18,16,12,21,20],
[12,0,21,17,12,13,21,22],
[9,10,0,11,16,14,12,7],
[13,14,20,0,14,19,15,8],
[15,19,15,17,0,14,18,13],
[19,18,17,12,17,0,21,16],
[10,10,19,16,13,10,0,3],
[11,9,24,23,18,15,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,8,8,4,21,25],
[23,0,31,14,12,4,29,21],
[19,0,0,12,12,4,13,19],
[23,17,19,0,10,21,21,19],
[23,19,19,21,0,11,21,29],
[27,27,27,10,20,0,27,25],
[10,2,18,10,10,4,0,10],
[6,10,12,12,2,6,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,21,13,16,15,21],
[16,0,15,16,15,15,14,17],
[12,16,0,20,16,17,15,18],
[10,15,11,0,13,13,12,14],
[18,16,15,18,0,13,16,13],
[15,16,14,18,18,0,12,19],
[16,17,16,19,15,19,0,20],
[10,14,13,17,18,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,3,17,14,8,17,17],
[14,0,14,14,23,8,19,14],
[28,17,0,17,14,8,22,17],
[14,17,14,0,14,17,14,3],
[17,8,17,17,0,8,8,3],
[23,23,23,14,23,0,14,14],
[14,12,9,17,23,17,0,3],
[14,17,14,28,28,17,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,14,16,16,14,17],
[15,0,13,10,17,12,11,13],
[16,18,0,14,16,13,14,16],
[17,21,17,0,18,15,13,18],
[15,14,15,13,0,18,14,16],
[15,19,18,16,13,0,17,19],
[17,20,17,18,17,14,0,21],
[14,18,15,13,15,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,17,14,13,13,18],
[18,0,18,17,16,13,11,16],
[17,13,0,17,10,11,12,11],
[14,14,14,0,17,15,13,14],
[17,15,21,14,0,17,15,13],
[18,18,20,16,14,0,16,15],
[18,20,19,18,16,15,0,18],
[13,15,20,17,18,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,18,19,15,20,19],
[16,0,15,16,10,17,13,14],
[12,16,0,15,14,12,14,13],
[13,15,16,0,15,12,16,14],
[12,21,17,16,0,13,14,20],
[16,14,19,19,18,0,18,17],
[11,18,17,15,17,13,0,17],
[12,17,18,17,11,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,16,17,17,22,15],
[16,0,11,16,26,21,16,10],
[20,20,0,26,15,16,25,18],
[15,15,5,0,10,11,22,11],
[14,5,16,21,0,18,16,15],
[14,10,15,20,13,0,15,14],
[9,15,6,9,15,16,0,19],
[16,21,13,20,16,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,19,8,16,13,11,9],
[23,0,14,19,19,15,18,16],
[12,17,0,13,14,17,15,12],
[23,12,18,0,20,17,12,10],
[15,12,17,11,0,19,17,11],
[18,16,14,14,12,0,12,13],
[20,13,16,19,14,19,0,13],
[22,15,19,21,20,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,15,3,3,18,31,3],
[28,0,15,3,31,15,28,3],
[16,16,0,16,16,16,16,3],
[28,28,15,0,31,15,28,18],
[28,0,15,0,0,15,28,3],
[13,16,15,16,16,0,31,3],
[0,3,15,3,3,0,0,3],
[28,28,28,13,28,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,14,25,19,16,20,18],
[8,0,14,19,16,14,21,20],
[17,17,0,22,18,15,19,13],
[6,12,9,0,11,11,19,17],
[12,15,13,20,0,9,21,18],
[15,17,16,20,22,0,22,18],
[11,10,12,12,10,9,0,6],
[13,11,18,14,13,13,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,19,9,18,12,14],
[21,0,18,21,12,19,17,19],
[17,13,0,19,17,17,18,18],
[12,10,12,0,15,16,11,15],
[22,19,14,16,0,18,19,17],
[13,12,14,15,13,0,13,14],
[19,14,13,20,12,18,0,16],
[17,12,13,16,14,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,21,17,17,22,17],
[17,0,17,21,17,13,24,21],
[17,14,0,22,17,13,17,13],
[10,10,9,0,18,9,15,14],
[14,14,14,13,0,16,17,14],
[14,18,18,22,15,0,21,20],
[9,7,14,16,14,10,0,17],
[14,10,18,17,17,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,18,17,15,20,12],
[16,0,20,14,11,15,20,18],
[12,11,0,13,11,12,14,12],
[13,17,18,0,10,16,19,16],
[14,20,20,21,0,18,21,16],
[16,16,19,15,13,0,17,19],
[11,11,17,12,10,14,0,12],
[19,13,19,15,15,12,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,13,19,17,17,16],
[12,0,12,13,19,17,20,15],
[17,19,0,17,21,22,23,15],
[18,18,14,0,22,21,21,18],
[12,12,10,9,0,11,17,10],
[14,14,9,10,20,0,16,11],
[14,11,8,10,14,15,0,14],
[15,16,16,13,21,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,13,14,18,15,17],
[15,0,14,18,14,19,17,17],
[15,17,0,16,15,15,19,15],
[18,13,15,0,14,16,19,14],
[17,17,16,17,0,13,17,17],
[13,12,16,15,18,0,19,16],
[16,14,12,12,14,12,0,12],
[14,14,16,17,14,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,15,15,16,13,17],
[14,0,11,14,12,17,11,13],
[16,20,0,17,14,17,11,14],
[16,17,14,0,13,13,12,14],
[16,19,17,18,0,16,12,17],
[15,14,14,18,15,0,16,15],
[18,20,20,19,19,15,0,19],
[14,18,17,17,14,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,12,12,19,18,9],
[19,0,9,9,3,10,9,9],
[19,22,0,22,15,22,21,19],
[19,22,9,0,12,25,18,16],
[19,28,16,19,0,13,16,16],
[12,21,9,6,18,0,18,9],
[13,22,10,13,15,13,0,10],
[22,22,12,15,15,22,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,13,3,11,9,17],
[19,0,5,17,15,15,15,19],
[23,26,0,20,15,23,21,23],
[18,14,11,0,12,21,14,21],
[28,16,16,19,0,16,15,22],
[20,16,8,10,15,0,11,21],
[22,16,10,17,16,20,0,25],
[14,12,8,10,9,10,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,12,12,16,15,11],
[17,0,11,14,12,14,12,11],
[17,20,0,16,19,15,15,13],
[19,17,15,0,14,13,11,14],
[19,19,12,17,0,14,15,16],
[15,17,16,18,17,0,14,16],
[16,19,16,20,16,17,0,15],
[20,20,18,17,15,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,17,16,17,13,14],
[11,0,19,17,13,15,11,9],
[11,12,0,12,17,14,16,10],
[14,14,19,0,13,19,12,11],
[15,18,14,18,0,16,17,16],
[14,16,17,12,15,0,13,6],
[18,20,15,19,14,18,0,14],
[17,22,21,20,15,25,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,20,16,16,21,14],
[19,0,22,22,20,15,16,16],
[19,9,0,19,18,11,16,17],
[11,9,12,0,14,9,10,11],
[15,11,13,17,0,18,18,17],
[15,16,20,22,13,0,16,14],
[10,15,15,21,13,15,0,14],
[17,15,14,20,14,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,13,10,14,7,13],
[20,0,19,15,21,16,13,17],
[21,12,0,16,18,8,18,22],
[18,16,15,0,20,12,19,23],
[21,10,13,11,0,14,14,17],
[17,15,23,19,17,0,17,23],
[24,18,13,12,17,14,0,19],
[18,14,9,8,14,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,13,23,13,19,15],
[18,0,14,12,20,6,12,20],
[22,17,0,14,24,13,23,12],
[18,19,17,0,20,9,15,19],
[8,11,7,11,0,7,13,15],
[18,25,18,22,24,0,15,20],
[12,19,8,16,18,16,0,12],
[16,11,19,12,16,11,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,24,25,18,14,22],
[17,0,14,23,19,19,9,23],
[11,17,0,29,23,19,21,27],
[7,8,2,0,17,11,8,22],
[6,12,8,14,0,10,12,18],
[13,12,12,20,21,0,12,26],
[17,22,10,23,19,19,0,27],
[9,8,4,9,13,5,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,21,6,13,28,20,21],
[17,0,12,19,12,26,12,30],
[10,19,0,8,14,21,21,25],
[25,12,23,0,22,30,22,30],
[18,19,17,9,0,21,22,19],
[3,5,10,1,10,0,10,18],
[11,19,10,9,9,21,0,19],
[10,1,6,1,12,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,18,18,15,3,16],
[22,0,21,28,28,20,14,19],
[23,10,0,25,25,11,11,11],
[13,3,6,0,16,15,9,16],
[13,3,6,15,0,9,4,10],
[16,11,20,16,22,0,16,18],
[28,17,20,22,27,15,0,17],
[15,12,20,15,21,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,15,24,20,21,17,17],
[6,0,16,16,18,18,11,14],
[16,15,0,18,20,12,12,16],
[7,15,13,0,13,12,7,10],
[11,13,11,18,0,12,15,14],
[10,13,19,19,19,0,13,17],
[14,20,19,24,16,18,0,20],
[14,17,15,21,17,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,22,14,16,17,21,12],
[11,0,18,10,14,13,20,13],
[9,13,0,6,11,15,16,13],
[17,21,25,0,18,22,24,15],
[15,17,20,13,0,13,19,16],
[14,18,16,9,18,0,20,14],
[10,11,15,7,12,11,0,8],
[19,18,18,16,15,17,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,12,16,17,15,20],
[16,0,12,15,16,22,11,15],
[15,19,0,17,17,21,20,20],
[19,16,14,0,20,20,20,19],
[15,15,14,11,0,17,16,11],
[14,9,10,11,14,0,12,18],
[16,20,11,11,15,19,0,21],
[11,16,11,12,20,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,21,13,12,15,14],
[14,0,8,22,14,16,8,14],
[18,23,0,17,24,21,19,14],
[10,9,14,0,14,16,16,18],
[18,17,7,17,0,15,9,9],
[19,15,10,15,16,0,13,12],
[16,23,12,15,22,18,0,14],
[17,17,17,13,22,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,12,7,16,16,15],
[19,0,15,19,15,14,20,15],
[16,16,0,18,14,15,25,20],
[19,12,13,0,4,21,22,17],
[24,16,17,27,0,24,29,15],
[15,17,16,10,7,0,14,11],
[15,11,6,9,2,17,0,11],
[16,16,11,14,16,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,14,14,12,12,13],
[21,0,15,14,16,18,18,15],
[15,16,0,16,12,16,15,16],
[17,17,15,0,16,19,15,19],
[17,15,19,15,0,17,12,16],
[19,13,15,12,14,0,16,16],
[19,13,16,16,19,15,0,16],
[18,16,15,12,15,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,20,17,17,17,21,14],
[7,0,6,13,11,8,14,4],
[11,25,0,22,22,17,23,17],
[14,18,9,0,18,19,19,13],
[14,20,9,13,0,15,23,17],
[14,23,14,12,16,0,19,16],
[10,17,8,12,8,12,0,6],
[17,27,14,18,14,15,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,6,10,12,16,10,9],
[21,0,13,25,19,26,20,21],
[25,18,0,18,24,28,28,11],
[21,6,13,0,19,26,16,13],
[19,12,7,12,0,13,12,18],
[15,5,3,5,18,0,12,11],
[21,11,3,15,19,19,0,11],
[22,10,20,18,13,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,17,10,10,10,10,17],
[21,0,17,10,20,20,10,17],
[14,14,0,24,14,24,14,14],
[21,21,7,0,21,31,21,21],
[21,11,17,10,0,21,11,11],
[21,11,7,0,10,0,7,7],
[21,21,17,10,20,24,0,21],
[14,14,17,10,20,24,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,15,22,16,16,19],
[12,0,14,11,17,14,15,13],
[14,17,0,19,19,13,14,13],
[16,20,12,0,20,17,17,17],
[9,14,12,11,0,8,6,10],
[15,17,18,14,23,0,15,18],
[15,16,17,14,25,16,0,21],
[12,18,18,14,21,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,11,16,17,25,18],
[14,0,22,22,21,16,9,16],
[13,9,0,18,13,8,9,16],
[20,9,13,0,21,7,16,17],
[15,10,18,10,0,16,11,18],
[14,15,23,24,15,0,9,19],
[6,22,22,15,20,22,0,21],
[13,15,15,14,13,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,12,21,18,19,18],
[11,0,15,14,20,16,12,15],
[11,16,0,14,24,11,17,15],
[19,17,17,0,21,13,15,18],
[10,11,7,10,0,12,15,13],
[13,15,20,18,19,0,16,22],
[12,19,14,16,16,15,0,17],
[13,16,16,13,18,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,16,17,22,15,18],
[17,0,12,18,15,19,17,13],
[15,19,0,18,16,23,17,15],
[15,13,13,0,17,19,14,20],
[14,16,15,14,0,19,17,14],
[9,12,8,12,12,0,11,16],
[16,14,14,17,14,20,0,17],
[13,18,16,11,17,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,20,17,17,18,17,14],
[14,0,18,13,17,13,15,13],
[11,13,0,13,14,9,16,10],
[14,18,18,0,19,16,20,15],
[14,14,17,12,0,11,15,12],
[13,18,22,15,20,0,20,18],
[14,16,15,11,16,11,0,14],
[17,18,21,16,19,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,11,16,21,11,17],
[15,0,12,17,16,16,13,17],
[14,19,0,14,17,21,10,18],
[20,14,17,0,13,21,20,20],
[15,15,14,18,0,16,11,13],
[10,15,10,10,15,0,12,16],
[20,18,21,11,20,19,0,25],
[14,14,13,11,18,15,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,15,19,13,16,16],
[15,0,17,14,23,15,19,17],
[15,14,0,16,13,18,18,17],
[16,17,15,0,16,19,16,20],
[12,8,18,15,0,13,13,14],
[18,16,13,12,18,0,15,15],
[15,12,13,15,18,16,0,16],
[15,14,14,11,17,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,11,12,21,17,15,20],
[14,0,20,20,25,20,18,24],
[20,11,0,18,21,12,23,24],
[19,11,13,0,26,17,18,23],
[10,6,10,5,0,20,4,20],
[14,11,19,14,11,0,13,19],
[16,13,8,13,27,18,0,17],
[11,7,7,8,11,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,13,18,18,19,18],
[18,0,17,17,17,11,16,19],
[16,14,0,15,19,11,15,19],
[18,14,16,0,16,17,10,19],
[13,14,12,15,0,17,12,14],
[13,20,20,14,14,0,20,19],
[12,15,16,21,19,11,0,19],
[13,12,12,12,17,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,13,19,15,14,11],
[19,0,19,14,24,16,15,14],
[15,12,0,14,14,17,11,14],
[18,17,17,0,18,20,18,15],
[12,7,17,13,0,18,14,11],
[16,15,14,11,13,0,13,15],
[17,16,20,13,17,18,0,16],
[20,17,17,16,20,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,16,16,10,18,7,21],
[6,0,8,7,9,13,3,17],
[15,23,0,11,7,16,4,15],
[15,24,20,0,17,16,12,19],
[21,22,24,14,0,26,23,17],
[13,18,15,15,5,0,8,22],
[24,28,27,19,8,23,0,21],
[10,14,16,12,14,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,13,19,17,19,17],
[11,0,14,15,7,18,20,12],
[15,17,0,13,13,15,13,16],
[18,16,18,0,13,16,18,24],
[12,24,18,18,0,19,23,19],
[14,13,16,15,12,0,14,21],
[12,11,18,13,8,17,0,13],
[14,19,15,7,12,10,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,18,16,14,13,16],
[13,0,12,15,12,14,12,18],
[14,19,0,17,16,12,16,19],
[13,16,14,0,12,13,14,18],
[15,19,15,19,0,17,20,16],
[17,17,19,18,14,0,15,20],
[18,19,15,17,11,16,0,21],
[15,13,12,13,15,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,21,20,11,14,19],
[19,0,18,19,20,13,16,18],
[14,13,0,15,15,13,13,16],
[10,12,16,0,17,11,7,13],
[11,11,16,14,0,14,15,16],
[20,18,18,20,17,0,13,16],
[17,15,18,24,16,18,0,21],
[12,13,15,18,15,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,14,15,13,12,20],
[18,0,15,17,18,21,17,16],
[13,16,0,14,17,15,11,19],
[17,14,17,0,16,18,15,20],
[16,13,14,15,0,15,15,22],
[18,10,16,13,16,0,15,15],
[19,14,20,16,16,16,0,23],
[11,15,12,11,9,16,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,18,16,15,17,16],
[16,0,14,18,20,16,16,16],
[16,17,0,15,12,13,14,14],
[13,13,16,0,17,11,15,13],
[15,11,19,14,0,11,12,12],
[16,15,18,20,20,0,19,17],
[14,15,17,16,19,12,0,14],
[15,15,17,18,19,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,17,11,16,15,19,17],
[11,0,11,4,11,13,16,11],
[14,20,0,15,10,15,19,19],
[20,27,16,0,12,26,20,16],
[15,20,21,19,0,20,19,16],
[16,18,16,5,11,0,17,16],
[12,15,12,11,12,14,0,16],
[14,20,12,15,15,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,16,19,16,16,16],
[13,0,18,20,16,12,17,10],
[18,13,0,19,18,12,24,13],
[15,11,12,0,18,13,12,12],
[12,15,13,13,0,8,13,9],
[15,19,19,18,23,0,19,17],
[15,14,7,19,18,12,0,9],
[15,21,18,19,22,14,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,21,10,17,12,19,19],
[14,0,14,10,10,13,19,14],
[10,17,0,11,18,17,17,12],
[21,21,20,0,23,28,21,13],
[14,21,13,8,0,13,18,14],
[19,18,14,3,18,0,21,15],
[12,12,14,10,13,10,0,16],
[12,17,19,18,17,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,9,8,22,18,12],
[18,0,23,19,13,19,19,14],
[14,8,0,11,16,19,7,17],
[22,12,20,0,20,23,9,18],
[23,18,15,11,0,16,18,12],
[9,12,12,8,15,0,10,9],
[13,12,24,22,13,21,0,12],
[19,17,14,13,19,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,19,19,14,15,19],
[11,0,16,15,16,17,12,21],
[11,15,0,16,18,15,12,19],
[12,16,15,0,19,14,12,16],
[12,15,13,12,0,15,12,16],
[17,14,16,17,16,0,16,19],
[16,19,19,19,19,15,0,20],
[12,10,12,15,15,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,7,11,6,18,9,13],
[8,0,3,7,1,13,8,9],
[24,28,0,10,17,17,20,22],
[20,24,21,0,14,12,20,12],
[25,30,14,17,0,22,19,28],
[13,18,14,19,9,0,13,15],
[22,23,11,11,12,18,0,17],
[18,22,9,19,3,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,14,12,15,19,21],
[16,0,16,16,15,17,14,16],
[13,15,0,11,14,14,15,15],
[17,15,20,0,19,14,21,18],
[19,16,17,12,0,16,15,15],
[16,14,17,17,15,0,19,15],
[12,17,16,10,16,12,0,16],
[10,15,16,13,16,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,8,11,10,10,15,11],
[16,0,11,15,14,12,17,15],
[23,20,0,15,12,15,17,19],
[20,16,16,0,19,15,14,13],
[21,17,19,12,0,18,22,20],
[21,19,16,16,13,0,19,17],
[16,14,14,17,9,12,0,11],
[20,16,12,18,11,14,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,18,10,10,9,12],
[18,0,19,21,18,17,12,16],
[14,12,0,13,10,10,6,13],
[13,10,18,0,11,12,8,13],
[21,13,21,20,0,16,14,14],
[21,14,21,19,15,0,12,14],
[22,19,25,23,17,19,0,14],
[19,15,18,18,17,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,22,20,15,16,18,19],
[14,0,19,15,12,11,18,13],
[9,12,0,14,11,13,13,13],
[11,16,17,0,13,14,17,16],
[16,19,20,18,0,13,17,17],
[15,20,18,17,18,0,21,17],
[13,13,18,14,14,10,0,12],
[12,18,18,15,14,14,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,2,14,4,13,9,8],
[21,0,8,16,4,17,11,4],
[29,23,0,16,14,23,21,22],
[17,15,15,0,14,15,15,13],
[27,27,17,17,0,15,15,13],
[18,14,8,16,16,0,6,4],
[22,20,10,16,16,25,0,8],
[23,27,9,18,18,27,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,14,15,15,13,18],
[15,0,17,11,15,13,16,17],
[19,14,0,16,13,13,18,14],
[17,20,15,0,17,18,12,19],
[16,16,18,14,0,14,17,20],
[16,18,18,13,17,0,13,19],
[18,15,13,19,14,18,0,18],
[13,14,17,12,11,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,15,17,14,11,15],
[19,0,14,19,16,13,18,15],
[19,17,0,21,21,13,17,18],
[16,12,10,0,16,12,17,15],
[14,15,10,15,0,9,11,13],
[17,18,18,19,22,0,15,16],
[20,13,14,14,20,16,0,14],
[16,16,13,16,18,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,15,15,17,13,17,13],
[7,0,20,7,7,20,22,18],
[16,11,0,5,2,7,9,5],
[16,24,26,0,4,24,22,22],
[14,24,29,27,0,27,31,27],
[18,11,24,7,4,0,22,14],
[14,9,22,9,0,9,0,9],
[18,13,26,9,4,17,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,19,14,13,16,13],
[16,0,17,18,17,15,19,17],
[15,14,0,19,14,15,19,17],
[12,13,12,0,13,16,15,17],
[17,14,17,18,0,12,16,19],
[18,16,16,15,19,0,23,14],
[15,12,12,16,15,8,0,14],
[18,14,14,14,12,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,21,14,20,17,16],
[16,0,16,19,19,17,15,19],
[15,15,0,19,18,12,15,17],
[10,12,12,0,12,12,11,13],
[17,12,13,19,0,18,14,17],
[11,14,19,19,13,0,19,16],
[14,16,16,20,17,12,0,17],
[15,12,14,18,14,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,18,18,9,14,17],
[22,0,17,19,19,15,15,20],
[19,14,0,19,17,10,13,18],
[13,12,12,0,15,15,9,14],
[13,12,14,16,0,16,17,17],
[22,16,21,16,15,0,15,17],
[17,16,18,22,14,16,0,15],
[14,11,13,17,14,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,9,13,15,12,17,14],
[16,0,12,19,20,19,17,19],
[22,19,0,14,17,14,20,22],
[18,12,17,0,11,11,11,17],
[16,11,14,20,0,16,15,19],
[19,12,17,20,15,0,17,22],
[14,14,11,20,16,14,0,22],
[17,12,9,14,12,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,17,13,17,14,15],
[15,0,16,18,16,14,16,13],
[14,15,0,14,15,13,13,14],
[14,13,17,0,16,13,12,14],
[18,15,16,15,0,16,14,15],
[14,17,18,18,15,0,16,15],
[17,15,18,19,17,15,0,16],
[16,18,17,17,16,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,18,15,21,17,18],
[21,0,13,14,15,18,12,14],
[18,18,0,14,16,23,19,14],
[13,17,17,0,17,17,14,16],
[16,16,15,14,0,17,14,18],
[10,13,8,14,14,0,16,12],
[14,19,12,17,17,15,0,16],
[13,17,17,15,13,19,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,11,13,8,17,13,9],
[10,0,15,9,11,15,16,10],
[20,16,0,15,13,10,11,17],
[18,22,16,0,17,13,16,14],
[23,20,18,14,0,16,17,18],
[14,16,21,18,15,0,19,14],
[18,15,20,15,14,12,0,14],
[22,21,14,17,13,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,13,14,14,15,11],
[17,0,14,15,15,18,16,14],
[16,17,0,14,15,14,15,12],
[18,16,17,0,20,17,15,17],
[17,16,16,11,0,12,17,14],
[17,13,17,14,19,0,17,17],
[16,15,16,16,14,14,0,14],
[20,17,19,14,17,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,20,20,11,26,25],
[10,0,12,17,14,5,27,12],
[10,19,0,14,14,7,24,9],
[11,14,17,0,11,7,23,18],
[11,17,17,20,0,17,21,10],
[20,26,24,24,14,0,25,19],
[5,4,7,8,10,6,0,7],
[6,19,22,13,21,12,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,17,13,14,23,21],
[19,0,15,15,17,17,20,19],
[21,16,0,18,16,14,24,17],
[14,16,13,0,15,12,19,15],
[18,14,15,16,0,19,21,14],
[17,14,17,19,12,0,21,19],
[8,11,7,12,10,10,0,13],
[10,12,14,16,17,12,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,21,21,22,16,20,24],
[16,0,20,21,13,15,12,19],
[10,11,0,21,7,13,11,14],
[10,10,10,0,16,14,19,12],
[9,18,24,15,0,13,28,14],
[15,16,18,17,18,0,22,15],
[11,19,20,12,3,9,0,15],
[7,12,17,19,17,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,13,14,9,17,20,18],
[11,0,14,17,6,21,21,12],
[18,17,0,14,17,15,13,17],
[17,14,17,0,6,5,20,14],
[22,25,14,25,0,25,24,26],
[14,10,16,26,6,0,22,17],
[11,10,18,11,7,9,0,10],
[13,19,14,17,5,14,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,18,14,18,16,16],
[14,0,17,18,13,17,19,14],
[15,14,0,17,12,15,15,13],
[13,13,14,0,14,17,18,16],
[17,18,19,17,0,15,20,21],
[13,14,16,14,16,0,13,13],
[15,12,16,13,11,18,0,11],
[15,17,18,15,10,18,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,23,14,20,18,19,17],
[13,0,19,13,16,12,15,11],
[8,12,0,14,12,12,17,11],
[17,18,17,0,16,13,19,21],
[11,15,19,15,0,15,18,16],
[13,19,19,18,16,0,19,18],
[12,16,14,12,13,12,0,13],
[14,20,20,10,15,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,19,16,16,17,16],
[16,0,12,24,17,18,8,20],
[21,19,0,18,19,20,17,14],
[12,7,13,0,16,10,13,13],
[15,14,12,15,0,20,13,13],
[15,13,11,21,11,0,12,16],
[14,23,14,18,18,19,0,17],
[15,11,17,18,18,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,21,15,17,14,24,18],
[13,0,15,15,18,13,18,16],
[10,16,0,17,11,13,17,14],
[16,16,14,0,14,9,22,14],
[14,13,20,17,0,15,15,16],
[17,18,18,22,16,0,21,13],
[7,13,14,9,16,10,0,14],
[13,15,17,17,15,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,18,12,12,12,12,12],
[19,0,10,17,12,25,4,17],
[13,21,0,13,21,21,13,13],
[19,14,18,0,12,25,10,17],
[19,19,10,19,0,25,19,23],
[19,6,10,6,6,0,6,10],
[19,27,18,21,12,25,0,25],
[19,14,18,14,8,21,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,17,20,20,15,12],
[15,0,19,18,17,20,16,19],
[14,12,0,18,16,16,12,12],
[14,13,13,0,15,16,16,10],
[11,14,15,16,0,16,15,16],
[11,11,15,15,15,0,15,12],
[16,15,19,15,16,16,0,13],
[19,12,19,21,15,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,17,14,19,17,16,15],
[9,0,16,12,15,13,11,7],
[14,15,0,14,17,17,16,12],
[17,19,17,0,16,16,12,18],
[12,16,14,15,0,13,13,15],
[14,18,14,15,18,0,19,15],
[15,20,15,19,18,12,0,18],
[16,24,19,13,16,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,17,13,18,13,13],
[16,0,12,20,17,13,17,21],
[19,19,0,24,14,15,17,21],
[14,11,7,0,11,14,9,12],
[18,14,17,20,0,16,14,20],
[13,18,16,17,15,0,8,18],
[18,14,14,22,17,23,0,19],
[18,10,10,19,11,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,22,15,19,23,23,15],
[7,0,11,5,8,13,15,11],
[9,20,0,6,11,10,20,12],
[16,26,25,0,23,21,26,15],
[12,23,20,8,0,15,24,16],
[8,18,21,10,16,0,22,11],
[8,16,11,5,7,9,0,13],
[16,20,19,16,15,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,13,22,18,18,12],
[17,0,19,7,18,16,19,16],
[14,12,0,9,16,16,19,15],
[18,24,22,0,21,20,18,14],
[9,13,15,10,0,11,14,13],
[13,15,15,11,20,0,17,18],
[13,12,12,13,17,14,0,13],
[19,15,16,17,18,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,19,22,11,2,0,0],
[19,0,19,29,17,8,6,7],
[12,12,0,22,10,0,0,0],
[9,2,9,0,1,2,2,7],
[20,14,21,30,0,20,20,6],
[29,23,31,29,11,0,16,17],
[31,25,31,29,11,15,0,7],
[31,24,31,24,25,14,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,12,18,15,11,16],
[19,0,13,13,16,17,13,18],
[21,18,0,17,17,15,16,16],
[19,18,14,0,16,19,16,15],
[13,15,14,15,0,14,15,15],
[16,14,16,12,17,0,17,15],
[20,18,15,15,16,14,0,16],
[15,13,15,16,16,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,16,7,11,9,17],
[18,0,19,17,15,10,14,16],
[23,12,0,19,10,16,12,17],
[15,14,12,0,11,7,16,18],
[24,16,21,20,0,15,16,24],
[20,21,15,24,16,0,22,25],
[22,17,19,15,15,9,0,16],
[14,15,14,13,7,6,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,21,23,23,15,20,20],
[14,0,13,17,19,16,13,18],
[10,18,0,18,17,11,11,14],
[8,14,13,0,13,9,12,13],
[8,12,14,18,0,16,14,13],
[16,15,20,22,15,0,18,17],
[11,18,20,19,17,13,0,15],
[11,13,17,18,18,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,14,16,18,15,17],
[19,0,15,16,15,20,19,12],
[18,16,0,15,13,16,16,16],
[17,15,16,0,18,21,16,16],
[15,16,18,13,0,13,14,12],
[13,11,15,10,18,0,17,12],
[16,12,15,15,17,14,0,16],
[14,19,15,15,19,19,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,17,14,18,15,16],
[18,0,10,21,16,25,20,21],
[13,21,0,17,19,22,23,19],
[14,10,14,0,12,15,18,17],
[17,15,12,19,0,16,21,25],
[13,6,9,16,15,0,19,19],
[16,11,8,13,10,12,0,17],
[15,10,12,14,6,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,20,19,15,20,19],
[15,0,14,15,15,13,16,15],
[13,17,0,9,11,11,13,12],
[11,16,22,0,13,17,15,15],
[12,16,20,18,0,13,18,15],
[16,18,20,14,18,0,20,18],
[11,15,18,16,13,11,0,16],
[12,16,19,16,16,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,14,20,23,14,23],
[18,0,3,22,10,18,14,18],
[15,28,0,22,20,17,13,28],
[17,9,9,0,9,17,20,9],
[11,21,11,22,0,11,22,11],
[8,13,14,14,20,0,14,20],
[17,17,18,11,9,17,0,17],
[8,13,3,22,20,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,19,25,24,14,16],
[12,0,22,18,20,25,12,21],
[13,9,0,17,17,16,16,10],
[12,13,14,0,22,21,8,9],
[6,11,14,9,0,17,2,12],
[7,6,15,10,14,0,0,13],
[17,19,15,23,29,31,0,16],
[15,10,21,22,19,18,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,27,25,24,18,23,28],
[16,0,22,22,16,9,18,19],
[4,9,0,13,13,11,17,14],
[6,9,18,0,14,8,16,20],
[7,15,18,17,0,7,16,17],
[13,22,20,23,24,0,23,27],
[8,13,14,15,15,8,0,12],
[3,12,17,11,14,4,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,16,15,12,11,14],
[15,0,18,23,19,17,17,15],
[15,13,0,16,17,19,16,15],
[15,8,15,0,14,11,12,11],
[16,12,14,17,0,12,14,13],
[19,14,12,20,19,0,15,20],
[20,14,15,19,17,16,0,17],
[17,16,16,20,18,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,15,17,20,13,16],
[17,0,11,19,19,20,20,16],
[21,20,0,20,20,24,15,18],
[16,12,11,0,16,20,13,11],
[14,12,11,15,0,16,14,16],
[11,11,7,11,15,0,12,12],
[18,11,16,18,17,19,0,13],
[15,15,13,20,15,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,15,1,12,5,9,8],
[22,0,17,9,7,10,10,15],
[16,14,0,11,5,6,10,6],
[30,22,20,0,14,15,11,17],
[19,24,26,17,0,18,22,15],
[26,21,25,16,13,0,8,18],
[22,21,21,20,9,23,0,14],
[23,16,25,14,16,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,24,14,23,17,23,21],
[17,0,20,13,19,12,15,17],
[7,11,0,9,17,13,14,19],
[17,18,22,0,22,14,20,22],
[8,12,14,9,0,16,11,16],
[14,19,18,17,15,0,22,17],
[8,16,17,11,20,9,0,16],
[10,14,12,9,15,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,16,14,19,17,17],
[12,0,15,11,12,15,15,13],
[12,16,0,14,10,15,12,14],
[15,20,17,0,13,20,16,21],
[17,19,21,18,0,16,15,20],
[12,16,16,11,15,0,17,17],
[14,16,19,15,16,14,0,17],
[14,18,17,10,11,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,12,16,7,13,13],
[14,0,11,0,22,7,19,4],
[19,20,0,20,20,11,19,20],
[19,31,11,0,27,18,19,27],
[15,9,11,4,0,7,16,8],
[24,24,20,13,24,0,24,17],
[18,12,12,12,15,7,0,16],
[18,27,11,4,23,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,15,14,19,21,18],
[15,0,13,11,17,17,16,15],
[15,18,0,17,18,22,19,21],
[16,20,14,0,16,14,22,13],
[17,14,13,15,0,15,16,18],
[12,14,9,17,16,0,14,17],
[10,15,12,9,15,17,0,14],
[13,16,10,18,13,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,19,17,16,19,21,13],
[13,0,19,20,18,20,14,18],
[12,12,0,13,8,11,12,12],
[14,11,18,0,15,18,17,5],
[15,13,23,16,0,21,21,16],
[12,11,20,13,10,0,15,6],
[10,17,19,14,10,16,0,13],
[18,13,19,26,15,25,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,11,10,12,11,10],
[24,0,14,12,17,17,14,17],
[21,17,0,14,18,16,15,15],
[20,19,17,0,18,18,19,14],
[21,14,13,13,0,18,16,18],
[19,14,15,13,13,0,16,10],
[20,17,16,12,15,15,0,15],
[21,14,16,17,13,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,1,11,2,11,12,12,11],
[30,0,22,16,18,12,30,29],
[20,9,0,10,18,10,22,30],
[29,15,21,0,17,16,29,27],
[20,13,13,14,0,10,20,19],
[19,19,21,15,21,0,21,21],
[19,1,9,2,11,10,0,27],
[20,2,1,4,12,10,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,11,14,13,11,12],
[22,0,17,12,19,18,18,20],
[20,14,0,13,17,18,15,19],
[20,19,18,0,19,17,15,18],
[17,12,14,12,0,17,14,12],
[18,13,13,14,14,0,14,14],
[20,13,16,16,17,17,0,17],
[19,11,12,13,19,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,18,20,24,28,17],
[20,0,20,16,15,27,25,17],
[15,11,0,18,18,25,20,20],
[13,15,13,0,17,18,20,8],
[11,16,13,14,0,19,25,12],
[7,4,6,13,12,0,13,9],
[3,6,11,11,6,18,0,9],
[14,14,11,23,19,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,10,11,14,15,14],
[16,0,15,18,14,14,17,14],
[13,16,0,12,14,12,10,14],
[21,13,19,0,14,17,18,13],
[20,17,17,17,0,17,20,15],
[17,17,19,14,14,0,17,18],
[16,14,21,13,11,14,0,16],
[17,17,17,18,16,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,12,16,16,19,15],
[20,0,16,15,15,21,15,26],
[18,15,0,13,15,19,19,23],
[19,16,18,0,15,23,18,21],
[15,16,16,16,0,18,15,21],
[15,10,12,8,13,0,11,16],
[12,16,12,13,16,20,0,21],
[16,5,8,10,10,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,13,23,19,18,16],
[15,0,14,15,17,18,18,15],
[18,17,0,14,16,20,15,15],
[18,16,17,0,19,13,17,16],
[8,14,15,12,0,11,16,11],
[12,13,11,18,20,0,12,12],
[13,13,16,14,15,19,0,11],
[15,16,16,15,20,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,10,17,13,13,18],
[12,0,14,13,16,12,13,11],
[10,17,0,14,13,14,9,8],
[21,18,17,0,16,14,17,19],
[14,15,18,15,0,14,8,14],
[18,19,17,17,17,0,12,12],
[18,18,22,14,23,19,0,17],
[13,20,23,12,17,19,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,19,19,19,21,19,14],
[6,0,12,19,7,19,13,12],
[12,19,0,23,15,19,11,14],
[12,12,8,0,10,17,15,8],
[12,24,16,21,0,23,23,16],
[10,12,12,14,8,0,4,16],
[12,18,20,16,8,27,0,20],
[17,19,17,23,15,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,15,17,12,12,14],
[18,0,16,17,17,12,18,7],
[18,15,0,17,17,14,18,12],
[16,14,14,0,16,13,14,19],
[14,14,14,15,0,8,16,11],
[19,19,17,18,23,0,18,14],
[19,13,13,17,15,13,0,9],
[17,24,19,12,20,17,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,21,14,20,16,16,20],
[13,0,16,10,11,16,12,21],
[10,15,0,9,11,13,13,14],
[17,21,22,0,14,18,16,22],
[11,20,20,17,0,16,13,21],
[15,15,18,13,15,0,15,18],
[15,19,18,15,18,16,0,22],
[11,10,17,9,10,13,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,23,16,16,20,15,14],
[17,0,18,15,16,17,16,15],
[8,13,0,16,12,16,13,12],
[15,16,15,0,14,15,16,14],
[15,15,19,17,0,18,17,18],
[11,14,15,16,13,0,17,17],
[16,15,18,15,14,14,0,13],
[17,16,19,17,13,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,3,11,20,19,7,15],
[16,0,7,9,17,12,0,8],
[28,24,0,20,24,23,7,16],
[20,22,11,0,16,16,7,14],
[11,14,7,15,0,11,11,13],
[12,19,8,15,20,0,6,9],
[24,31,24,24,20,25,0,13],
[16,23,15,17,18,22,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,12,20,15,8,16],
[14,0,17,13,16,19,12,18],
[16,14,0,24,12,17,16,17],
[19,18,7,0,14,14,14,16],
[11,15,19,17,0,17,16,18],
[16,12,14,17,14,0,16,16],
[23,19,15,17,15,15,0,14],
[15,13,14,15,13,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,21,19,15,12,14,13],
[13,0,9,13,15,12,16,11],
[10,22,0,19,22,16,19,9],
[12,18,12,0,21,12,18,16],
[16,16,9,10,0,9,16,7],
[19,19,15,19,22,0,19,16],
[17,15,12,13,15,12,0,8],
[18,20,22,15,24,15,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,16,14,17,19,20],
[20,0,18,17,14,15,19,20],
[19,13,0,15,16,13,15,22],
[15,14,16,0,17,19,18,20],
[17,17,15,14,0,10,19,26],
[14,16,18,12,21,0,16,20],
[12,12,16,13,12,15,0,23],
[11,11,9,11,5,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,18,11,17,15,17],
[14,0,11,14,9,13,11,12],
[17,20,0,21,13,16,15,15],
[13,17,10,0,10,11,11,9],
[20,22,18,21,0,17,13,13],
[14,18,15,20,14,0,15,15],
[16,20,16,20,18,16,0,12],
[14,19,16,22,18,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,15,13,12,16,11],
[15,0,17,14,13,18,20,18],
[18,14,0,12,15,13,14,13],
[16,17,19,0,25,19,14,13],
[18,18,16,6,0,13,11,16],
[19,13,18,12,18,0,18,20],
[15,11,17,17,20,13,0,16],
[20,13,18,18,15,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,20,14,24,17,21,17],
[7,0,16,10,12,11,17,8],
[11,15,0,16,18,17,20,10],
[17,21,15,0,22,15,23,12],
[7,19,13,9,0,12,12,11],
[14,20,14,16,19,0,17,15],
[10,14,11,8,19,14,0,10],
[14,23,21,19,20,16,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,16,13,12,18,10],
[14,0,19,22,14,12,14,19],
[17,12,0,13,17,17,16,15],
[15,9,18,0,12,15,12,17],
[18,17,14,19,0,16,19,19],
[19,19,14,16,15,0,17,16],
[13,17,15,19,12,14,0,14],
[21,12,16,14,12,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,11,18,18,12,22],
[20,0,14,14,19,21,13,17],
[19,17,0,16,22,20,14,13],
[20,17,15,0,23,17,12,20],
[13,12,9,8,0,16,9,12],
[13,10,11,14,15,0,17,16],
[19,18,17,19,22,14,0,17],
[9,14,18,11,19,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,17,13,9,12,13,17],
[9,0,6,6,9,10,14,10],
[14,25,0,11,7,11,11,21],
[18,25,20,0,13,13,16,26],
[22,22,24,18,0,19,15,23],
[19,21,20,18,12,0,21,29],
[18,17,20,15,16,10,0,19],
[14,21,10,5,8,2,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,13,12,12,5,18],
[23,0,22,23,23,14,17,16],
[18,9,0,18,18,17,7,15],
[18,8,13,0,11,16,12,17],
[19,8,13,20,0,18,11,14],
[19,17,14,15,13,0,13,18],
[26,14,24,19,20,18,0,16],
[13,15,16,14,17,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,14,14,15,18,13],
[15,0,16,15,18,18,22,14],
[19,15,0,15,18,14,22,17],
[17,16,16,0,17,15,21,16],
[17,13,13,14,0,13,16,14],
[16,13,17,16,18,0,20,15],
[13,9,9,10,15,11,0,11],
[18,17,14,15,17,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,12,17,20,19,10],
[16,0,18,18,18,22,19,14],
[21,13,0,20,15,18,20,19],
[19,13,11,0,15,17,23,17],
[14,13,16,16,0,21,21,15],
[11,9,13,14,10,0,14,9],
[12,12,11,8,10,17,0,9],
[21,17,12,14,16,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,19,22,20,19,17,21],
[17,0,17,22,19,15,18,21],
[12,14,0,12,19,17,17,13],
[9,9,19,0,17,16,17,17],
[11,12,12,14,0,14,17,12],
[12,16,14,15,17,0,15,15],
[14,13,14,14,14,16,0,17],
[10,10,18,14,19,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,12,11,13,9,9],
[19,0,19,15,16,16,16,16],
[16,12,0,12,12,12,13,14],
[19,16,19,0,11,15,13,10],
[20,15,19,20,0,15,18,17],
[18,15,19,16,16,0,11,14],
[22,15,18,18,13,20,0,16],
[22,15,17,21,14,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,17,15,15,17,15],
[17,0,16,17,14,15,15,15],
[18,15,0,18,18,15,17,18],
[14,14,13,0,14,12,18,11],
[16,17,13,17,0,14,19,16],
[16,16,16,19,17,0,18,15],
[14,16,14,13,12,13,0,14],
[16,16,13,20,15,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,12,16,19,16,14],
[13,0,11,12,11,18,13,14],
[18,20,0,14,12,28,22,28],
[19,19,17,0,13,21,21,20],
[15,20,19,18,0,21,22,18],
[12,13,3,10,10,0,15,13],
[15,18,9,10,9,16,0,14],
[17,17,3,11,13,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,7,16,19,14,8],
[14,0,7,9,13,13,16,13],
[16,24,0,11,13,18,18,17],
[24,22,20,0,18,18,14,19],
[15,18,18,13,0,16,16,14],
[12,18,13,13,15,0,15,16],
[17,15,13,17,15,16,0,15],
[23,18,14,12,17,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,16,19,19,15,24,17],
[10,0,9,16,14,12,17,12],
[15,22,0,21,20,16,22,19],
[12,15,10,0,16,11,17,15],
[12,17,11,15,0,12,17,13],
[16,19,15,20,19,0,23,17],
[7,14,9,14,14,8,0,7],
[14,19,12,16,18,14,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,22,20,14,18,16,18],
[13,0,20,16,17,19,16,17],
[9,11,0,14,13,15,16,10],
[11,15,17,0,13,16,14,15],
[17,14,18,18,0,15,20,11],
[13,12,16,15,16,0,14,15],
[15,15,15,17,11,17,0,13],
[13,14,21,16,20,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,19,15,15,16,17],
[14,0,17,22,15,14,17,17],
[18,14,0,18,15,11,16,21],
[12,9,13,0,11,8,14,12],
[16,16,16,20,0,17,12,18],
[16,17,20,23,14,0,18,18],
[15,14,15,17,19,13,0,14],
[14,14,10,19,13,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,22,17,22,14,22,24],
[13,0,9,14,14,15,9,16],
[9,22,0,15,16,15,16,17],
[14,17,16,0,16,23,18,22],
[9,17,15,15,0,13,10,17],
[17,16,16,8,18,0,13,18],
[9,22,15,13,21,18,0,17],
[7,15,14,9,14,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,13,16,16,16,17],
[17,0,15,17,18,20,19,19],
[17,16,0,17,14,18,14,17],
[18,14,14,0,18,18,14,17],
[15,13,17,13,0,16,13,15],
[15,11,13,13,15,0,14,15],
[15,12,17,17,18,17,0,17],
[14,12,14,14,16,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,14,8,13,11,11],
[21,0,19,21,20,17,14,16],
[20,12,0,20,19,21,15,16],
[17,10,11,0,14,19,15,11],
[23,11,12,17,0,13,15,13],
[18,14,10,12,18,0,21,12],
[20,17,16,16,16,10,0,9],
[20,15,15,20,18,19,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,23,23,11,17,18,14],
[11,0,20,13,5,9,11,8],
[8,11,0,13,10,11,13,11],
[8,18,18,0,10,14,16,13],
[20,26,21,21,0,19,26,8],
[14,22,20,17,12,0,15,16],
[13,20,18,15,5,16,0,11],
[17,23,20,18,23,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,18,17,17,21,16],
[15,0,14,16,19,17,17,12],
[16,17,0,19,13,14,20,12],
[13,15,12,0,17,15,11,12],
[14,12,18,14,0,17,17,14],
[14,14,17,16,14,0,15,12],
[10,14,11,20,14,16,0,10],
[15,19,19,19,17,19,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,13,10,14,27,7],
[17,0,17,16,13,12,23,12],
[19,14,0,16,14,16,25,11],
[18,15,15,0,20,14,21,16],
[21,18,17,11,0,14,23,8],
[17,19,15,17,17,0,25,13],
[4,8,6,10,8,6,0,4],
[24,19,20,15,23,18,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,16,14,14,14,14],
[16,0,14,17,18,15,16,11],
[17,17,0,16,15,16,21,13],
[15,14,15,0,13,14,15,14],
[17,13,16,18,0,18,16,16],
[17,16,15,17,13,0,18,17],
[17,15,10,16,15,13,0,14],
[17,20,18,17,15,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,15,8,10,8,13],
[20,0,16,18,16,15,16,14],
[21,15,0,12,11,10,15,9],
[16,13,19,0,9,11,15,14],
[23,15,20,22,0,18,10,15],
[21,16,21,20,13,0,14,14],
[23,15,16,16,21,17,0,16],
[18,17,22,17,16,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,17,21,23,23,18],
[15,0,15,20,21,17,21,21],
[16,16,0,17,17,21,23,14],
[14,11,14,0,10,16,21,4],
[10,10,14,21,0,14,16,8],
[8,14,10,15,17,0,19,6],
[8,10,8,10,15,12,0,11],
[13,10,17,27,23,25,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,15,15,10,14,21,19],
[6,0,14,8,9,5,9,10],
[16,17,0,16,12,12,19,22],
[16,23,15,0,12,17,21,18],
[21,22,19,19,0,15,19,17],
[17,26,19,14,16,0,18,22],
[10,22,12,10,12,13,0,18],
[12,21,9,13,14,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,21,9,16,17,16],
[19,0,15,21,16,18,17,18],
[14,16,0,20,14,13,12,11],
[10,10,11,0,10,13,11,15],
[22,15,17,21,0,20,19,16],
[15,13,18,18,11,0,15,14],
[14,14,19,20,12,16,0,14],
[15,13,20,16,15,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,27,18,15,27,18],
[15,0,11,15,11,16,19,20],
[16,20,0,13,8,13,13,22],
[4,16,18,0,18,11,18,18],
[13,20,23,13,0,13,21,23],
[16,15,18,20,18,0,21,17],
[4,12,18,13,10,10,0,14],
[13,11,9,13,8,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,14,25,14,22,13],
[21,0,19,13,27,21,22,21],
[15,12,0,9,18,7,20,12],
[17,18,22,0,21,13,21,19],
[6,4,13,10,0,11,16,11],
[17,10,24,18,20,0,20,22],
[9,9,11,10,15,11,0,10],
[18,10,19,12,20,9,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,16,19,18,12,12],
[15,0,18,10,18,16,13,9],
[10,13,0,9,19,12,16,9],
[15,21,22,0,27,12,20,12],
[12,13,12,4,0,12,14,6],
[13,15,19,19,19,0,12,18],
[19,18,15,11,17,19,0,9],
[19,22,22,19,25,13,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,21,15,19,5,21],
[24,0,20,30,15,29,29,31],
[24,11,0,14,11,29,25,25],
[10,1,17,0,15,19,11,17],
[16,16,20,16,0,20,15,16],
[12,2,2,12,11,0,11,16],
[26,2,6,20,16,20,0,30],
[10,0,6,14,15,15,1,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,19,15,16,24,22,15],
[10,0,17,15,11,21,21,11],
[12,14,0,19,17,25,16,9],
[16,16,12,0,11,15,16,16],
[15,20,14,20,0,21,15,17],
[7,10,6,16,10,0,14,9],
[9,10,15,15,16,17,0,7],
[16,20,22,15,14,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,17,18,20,14,16],
[12,0,19,16,15,20,14,16],
[9,12,0,14,17,13,10,18],
[14,15,17,0,17,16,13,12],
[13,16,14,14,0,18,16,14],
[11,11,18,15,13,0,11,13],
[17,17,21,18,15,20,0,19],
[15,15,13,19,17,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,15,11,15,8,6],
[20,0,18,24,15,15,12,17],
[23,13,0,24,10,14,18,13],
[16,7,7,0,4,14,11,10],
[20,16,21,27,0,13,16,9],
[16,16,17,17,18,0,15,16],
[23,19,13,20,15,16,0,15],
[25,14,18,21,22,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,23,18,19,15,16,16],
[15,0,27,18,18,14,17,15],
[8,4,0,8,11,8,10,9],
[13,13,23,0,16,17,13,12],
[12,13,20,15,0,6,10,11],
[16,17,23,14,25,0,16,17],
[15,14,21,18,21,15,0,15],
[15,16,22,19,20,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,15,17,14,21,16],
[16,0,17,11,14,15,19,8],
[18,14,0,13,19,16,24,14],
[16,20,18,0,16,15,23,11],
[14,17,12,15,0,8,20,11],
[17,16,15,16,23,0,25,16],
[10,12,7,8,11,6,0,9],
[15,23,17,20,20,15,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,15,15,16,13,15,22],
[11,0,14,14,14,16,17,22],
[16,17,0,13,19,19,22,23],
[16,17,18,0,17,22,12,24],
[15,17,12,14,0,11,17,22],
[18,15,12,9,20,0,13,23],
[16,14,9,19,14,18,0,18],
[9,9,8,7,9,8,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,20,17,18,19,15,15],
[16,0,16,12,14,13,15,17],
[11,15,0,17,14,16,14,17],
[14,19,14,0,15,13,18,12],
[13,17,17,16,0,12,16,15],
[12,18,15,18,19,0,17,18],
[16,16,17,13,15,14,0,17],
[16,14,14,19,16,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,11,10,21,10,12],
[13,0,11,15,4,17,10,6],
[17,20,0,14,13,19,6,13],
[20,16,17,0,10,22,8,10],
[21,27,18,21,0,20,16,10],
[10,14,12,9,11,0,8,9],
[21,21,25,23,15,23,0,18],
[19,25,18,21,21,22,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,15,16,17,19,12,19],
[6,0,10,9,9,11,9,10],
[16,21,0,16,17,12,16,15],
[15,22,15,0,15,18,16,17],
[14,22,14,16,0,13,11,15],
[12,20,19,13,18,0,18,18],
[19,22,15,15,20,13,0,19],
[12,21,16,14,16,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,13,14,15,15,13],
[21,0,17,15,11,16,16,12],
[21,14,0,20,18,18,14,14],
[18,16,11,0,15,19,14,13],
[17,20,13,16,0,18,18,17],
[16,15,13,12,13,0,13,13],
[16,15,17,17,13,18,0,16],
[18,19,17,18,14,18,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,18,20,13,19,26],
[16,0,11,11,18,9,15,18],
[13,20,0,7,13,0,6,13],
[13,20,24,0,13,18,13,31],
[11,13,18,18,0,11,17,20],
[18,22,31,13,20,0,8,31],
[12,16,25,18,14,23,0,25],
[5,13,18,0,11,0,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,9,16,22,16,16,18],
[13,0,16,17,18,13,11,10],
[22,15,0,17,23,20,17,17],
[15,14,14,0,22,14,19,16],
[9,13,8,9,0,10,17,18],
[15,18,11,17,21,0,22,12],
[15,20,14,12,14,9,0,12],
[13,21,14,15,13,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,14,21,16,15,17],
[19,0,20,15,24,20,20,17],
[14,11,0,13,16,15,11,12],
[17,16,18,0,19,17,14,12],
[10,7,15,12,0,8,13,12],
[15,11,16,14,23,0,16,14],
[16,11,20,17,18,15,0,13],
[14,14,19,19,19,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,24,19,20,24,19],
[16,0,14,24,20,20,21,18],
[14,17,0,24,20,23,23,20],
[7,7,7,0,11,10,14,10],
[12,11,11,20,0,20,18,16],
[11,11,8,21,11,0,16,13],
[7,10,8,17,13,15,0,10],
[12,13,11,21,15,18,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,17,11,15,11,11],
[18,0,18,15,13,26,12,15],
[17,13,0,14,10,16,9,17],
[14,16,17,0,16,15,10,21],
[20,18,21,15,0,19,18,16],
[16,5,15,16,12,0,14,9],
[20,19,22,21,13,17,0,24],
[20,16,14,10,15,22,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,6,31,19,19,6],
[12,0,13,12,31,31,31,12],
[12,18,0,18,31,31,18,18],
[25,19,13,0,31,19,19,6],
[0,0,0,0,0,19,0,0],
[12,0,0,12,12,0,0,0],
[12,0,13,12,31,31,0,0],
[25,19,13,25,31,31,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,26,22,9,17,12,16],
[14,0,23,19,10,15,15,15],
[5,8,0,18,11,7,6,10],
[9,12,13,0,12,13,9,7],
[22,21,20,19,0,23,14,14],
[14,16,24,18,8,0,18,13],
[19,16,25,22,17,13,0,13],
[15,16,21,24,17,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,29,24,26,28,23],
[16,0,23,24,11,16,23,15],
[9,8,0,14,9,12,28,13],
[2,7,17,0,8,16,20,15],
[7,20,22,23,0,22,21,14],
[5,15,19,15,9,0,22,14],
[3,8,3,11,10,9,0,14],
[8,16,18,16,17,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,27,19,17,24,7],
[14,0,17,22,20,14,18,19],
[13,14,0,25,22,17,23,9],
[4,9,6,0,5,5,9,0],
[12,11,9,26,0,14,22,4],
[14,17,14,26,17,0,21,11],
[7,13,8,22,9,10,0,7],
[24,12,22,31,27,20,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,13,20,16,17,18],
[13,0,21,12,19,11,15,20],
[11,10,0,14,16,12,16,20],
[18,19,17,0,12,11,19,24],
[11,12,15,19,0,11,16,17],
[15,20,19,20,20,0,15,18],
[14,16,15,12,15,16,0,19],
[13,11,11,7,14,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,11,9,11,12,7],
[16,0,12,12,11,16,18,12],
[19,19,0,10,19,13,13,13],
[20,19,21,0,13,16,18,16],
[22,20,12,18,0,18,17,10],
[20,15,18,15,13,0,10,5],
[19,13,18,13,14,21,0,12],
[24,19,18,15,21,26,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,9,14,16,17,13],
[16,0,12,16,15,12,14,14],
[19,19,0,16,14,21,18,17],
[22,15,15,0,16,15,18,15],
[17,16,17,15,0,19,19,16],
[15,19,10,16,12,0,18,14],
[14,17,13,13,12,13,0,11],
[18,17,14,16,15,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,26,17,19,18,13],
[12,0,15,20,11,15,14,19],
[14,16,0,21,15,15,13,16],
[5,11,10,0,13,9,14,10],
[14,20,16,18,0,21,18,16],
[12,16,16,22,10,0,17,16],
[13,17,18,17,13,14,0,15],
[18,12,15,21,15,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,16,19,10,23,16],
[20,0,17,21,9,11,24,16],
[24,14,0,19,22,19,24,22],
[15,10,12,0,13,17,18,18],
[12,22,9,18,0,9,22,27],
[21,20,12,14,22,0,23,20],
[8,7,7,13,9,8,0,7],
[15,15,9,13,4,11,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,31,23,8,21,21,18],
[3,0,21,26,8,8,16,8],
[0,10,0,23,3,0,0,10],
[8,5,8,0,8,8,8,8],
[23,23,28,23,0,13,13,28],
[10,23,31,23,18,0,26,18],
[10,15,31,23,18,5,0,18],
[13,23,21,23,3,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,23,13,28,21,16,21],
[15,0,19,9,27,18,12,9],
[8,12,0,12,23,20,8,9],
[18,22,19,0,26,21,12,15],
[3,4,8,5,0,9,4,8],
[10,13,11,10,22,0,7,18],
[15,19,23,19,27,24,0,15],
[10,22,22,16,23,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,17,14,21,22,21],
[14,0,7,14,8,14,7,14],
[19,24,0,20,17,18,19,15],
[14,17,11,0,13,12,11,13],
[17,23,14,18,0,22,14,24],
[10,17,13,19,9,0,12,17],
[9,24,12,20,17,19,0,13],
[10,17,16,18,7,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,21,19,14,18,17,10],
[17,0,18,19,16,13,19,14],
[10,13,0,11,10,7,13,8],
[12,12,20,0,11,15,16,9],
[17,15,21,20,0,20,18,16],
[13,18,24,16,11,0,17,12],
[14,12,18,15,13,14,0,9],
[21,17,23,22,15,19,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,23,14,21,20,21],
[14,0,11,24,16,17,18,17],
[13,20,0,21,17,19,21,15],
[8,7,10,0,12,13,13,11],
[17,15,14,19,0,22,18,15],
[10,14,12,18,9,0,13,18],
[11,13,10,18,13,18,0,18],
[10,14,16,20,16,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,18,17,15,18,20],
[11,0,17,14,14,17,18,17],
[15,14,0,14,13,12,13,17],
[13,17,17,0,15,16,20,16],
[14,17,18,16,0,16,17,21],
[16,14,19,15,15,0,19,16],
[13,13,18,11,14,12,0,15],
[11,14,14,15,10,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,9,23,17,16,13],
[20,0,13,17,24,21,17,20],
[20,18,0,19,17,20,15,20],
[22,14,12,0,22,14,17,13],
[8,7,14,9,0,11,12,12],
[14,10,11,17,20,0,14,17],
[15,14,16,14,19,17,0,15],
[18,11,11,18,19,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,12,22,13,12,17],
[15,0,12,18,14,19,12,12],
[21,19,0,20,21,17,19,15],
[19,13,11,0,18,12,14,18],
[9,17,10,13,0,17,8,18],
[18,12,14,19,14,0,16,15],
[19,19,12,17,23,15,0,21],
[14,19,16,13,13,16,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,17,12,14,17,17],
[16,0,15,19,18,17,19,14],
[17,16,0,20,15,17,20,19],
[14,12,11,0,11,13,16,14],
[19,13,16,20,0,19,17,17],
[17,14,14,18,12,0,17,16],
[14,12,11,15,14,14,0,16],
[14,17,12,17,14,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,20,21,17,18,18,15],
[9,0,13,15,17,16,17,16],
[11,18,0,10,7,10,19,14],
[10,16,21,0,9,13,20,11],
[14,14,24,22,0,20,22,16],
[13,15,21,18,11,0,21,11],
[13,14,12,11,9,10,0,12],
[16,15,17,20,15,20,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,14,19,22,15,15,12],
[11,0,13,13,14,10,13,15],
[17,18,0,14,15,9,16,16],
[12,18,17,0,19,16,13,12],
[9,17,16,12,0,15,13,12],
[16,21,22,15,16,0,16,15],
[16,18,15,18,18,15,0,13],
[19,16,15,19,19,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,10,15,14,8,14,20],
[10,0,12,7,14,10,8,24],
[21,19,0,18,17,11,17,22],
[16,24,13,0,13,14,7,21],
[17,17,14,18,0,17,9,20],
[23,21,20,17,14,0,12,24],
[17,23,14,24,22,19,0,20],
[11,7,9,10,11,7,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,10,13,16,15,16,14],
[13,0,8,9,10,13,11,12],
[21,23,0,15,13,17,19,18],
[18,22,16,0,15,16,19,18],
[15,21,18,16,0,22,13,17],
[16,18,14,15,9,0,15,16],
[15,20,12,12,18,16,0,16],
[17,19,13,13,14,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,20,19,22,13,17],
[16,0,17,20,14,20,16,19],
[15,14,0,22,14,15,14,16],
[11,11,9,0,11,14,11,14],
[12,17,17,20,0,18,15,15],
[9,11,16,17,13,0,12,14],
[18,15,17,20,16,19,0,18],
[14,12,15,17,16,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,27,14,19,19,12],
[13,0,9,19,13,15,18,5],
[19,22,0,15,12,18,22,5],
[4,12,16,0,14,11,18,12],
[17,18,19,17,0,10,15,5],
[12,16,13,20,21,0,23,17],
[12,13,9,13,16,8,0,10],
[19,26,26,19,26,14,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,11,15,15,14,12],
[16,0,12,9,14,18,13,14],
[19,19,0,17,21,14,17,18],
[20,22,14,0,19,17,20,18],
[16,17,10,12,0,13,12,15],
[16,13,17,14,18,0,14,11],
[17,18,14,11,19,17,0,15],
[19,17,13,13,16,20,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,18,13,22,28,20,21],
[4,0,15,10,12,23,17,11],
[13,16,0,15,25,24,19,24],
[18,21,16,0,23,22,20,15],
[9,19,6,8,0,16,21,15],
[3,8,7,9,15,0,13,14],
[11,14,12,11,10,18,0,11],
[10,20,7,16,16,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,12,16,11,10,24],
[20,0,15,13,19,9,18,17],
[21,16,0,17,21,15,10,26],
[19,18,14,0,22,10,11,23],
[15,12,10,9,0,8,11,15],
[20,22,16,21,23,0,15,22],
[21,13,21,20,20,16,0,25],
[7,14,5,8,16,9,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,16,16,18,15,18],
[10,0,15,13,11,18,16,14],
[10,16,0,16,10,13,14,10],
[15,18,15,0,12,20,14,15],
[15,20,21,19,0,21,14,16],
[13,13,18,11,10,0,10,15],
[16,15,17,17,17,21,0,19],
[13,17,21,16,15,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,20,16,17,12,15,18],
[12,0,17,13,14,12,16,15],
[11,14,0,13,11,9,15,12],
[15,18,18,0,14,16,14,13],
[14,17,20,17,0,12,17,14],
[19,19,22,15,19,0,18,20],
[16,15,16,17,14,13,0,20],
[13,16,19,18,17,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,16,21,13,8,23],
[16,0,20,19,17,11,19,22],
[12,11,0,14,11,7,6,20],
[15,12,17,0,17,10,18,16],
[10,14,20,14,0,12,11,18],
[18,20,24,21,19,0,14,26],
[23,12,25,13,20,17,0,22],
[8,9,11,15,13,5,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,9,8,10,13,6],
[16,0,12,4,10,11,12,9],
[18,19,0,11,11,14,11,11],
[22,27,20,0,18,21,23,14],
[23,21,20,13,0,17,16,16],
[21,20,17,10,14,0,15,14],
[18,19,20,8,15,16,0,12],
[25,22,20,17,15,17,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,14,15,13,12,14],
[18,0,15,16,17,18,16,13],
[18,16,0,17,16,12,15,15],
[17,15,14,0,15,14,13,12],
[16,14,15,16,0,13,12,15],
[18,13,19,17,18,0,17,17],
[19,15,16,18,19,14,0,18],
[17,18,16,19,16,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,20,18,12,17,15,19],
[16,0,15,14,17,19,10,17],
[11,16,0,16,13,21,14,13],
[13,17,15,0,18,14,16,18],
[19,14,18,13,0,19,15,20],
[14,12,10,17,12,0,12,12],
[16,21,17,15,16,19,0,18],
[12,14,18,13,11,19,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,23,13,25,16,13,14],
[13,0,19,20,28,17,23,16],
[8,12,0,12,19,15,12,8],
[18,11,19,0,28,20,19,17],
[6,3,12,3,0,13,16,12],
[15,14,16,11,18,0,6,14],
[18,8,19,12,15,25,0,24],
[17,15,23,14,19,17,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,13,14,18,17,13],
[19,0,15,14,14,19,20,16],
[16,16,0,18,13,18,19,17],
[18,17,13,0,17,18,17,14],
[17,17,18,14,0,19,18,17],
[13,12,13,13,12,0,20,14],
[14,11,12,14,13,11,0,16],
[18,15,14,17,14,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,9,10,10,12,11],
[19,0,15,16,15,16,13,17],
[23,16,0,15,15,14,14,10],
[22,15,16,0,12,16,15,17],
[21,16,16,19,0,15,18,19],
[21,15,17,15,16,0,16,16],
[19,18,17,16,13,15,0,13],
[20,14,21,14,12,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,18,10,15,14,10,19],
[19,0,18,17,20,13,15,21],
[13,13,0,11,15,19,16,16],
[21,14,20,0,20,14,17,18],
[16,11,16,11,0,12,15,16],
[17,18,12,17,19,0,19,18],
[21,16,15,14,16,12,0,18],
[12,10,15,13,15,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,19,19,17,14,12],
[14,0,14,10,21,21,17,13],
[16,17,0,15,17,17,18,18],
[12,21,16,0,25,17,15,18],
[12,10,14,6,0,8,8,12],
[14,10,14,14,23,0,18,15],
[17,14,13,16,23,13,0,15],
[19,18,13,13,19,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,8,11,11,11,24,10],
[7,0,7,7,14,4,29,13],
[23,24,0,17,21,11,30,26],
[20,24,14,0,9,10,27,24],
[20,17,10,22,0,16,20,19],
[20,27,20,21,15,0,31,20],
[7,2,1,4,11,0,0,3],
[21,18,5,7,12,11,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,17,10,21,14,21],
[15,0,17,11,12,15,16,19],
[16,14,0,13,13,19,14,20],
[14,20,18,0,15,21,14,23],
[21,19,18,16,0,20,14,22],
[10,16,12,10,11,0,13,20],
[17,15,17,17,17,18,0,23],
[10,12,11,8,9,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,16,13,13,15,13],
[16,0,15,21,18,13,17,17],
[20,16,0,16,15,22,14,13],
[15,10,15,0,12,18,17,18],
[18,13,16,19,0,16,17,15],
[18,18,9,13,15,0,13,10],
[16,14,17,14,14,18,0,14],
[18,14,18,13,16,21,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,9,9,5,10,7],
[20,0,15,15,19,13,13,11],
[17,16,0,15,16,12,14,17],
[22,16,16,0,15,10,8,9],
[22,12,15,16,0,9,11,10],
[26,18,19,21,22,0,18,13],
[21,18,17,23,20,13,0,10],
[24,20,14,22,21,18,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,19,12,16,11,18,14],
[15,0,14,16,20,17,14,7],
[12,17,0,12,15,14,10,7],
[19,15,19,0,18,17,20,16],
[15,11,16,13,0,10,18,5],
[20,14,17,14,21,0,21,13],
[13,17,21,11,13,10,0,13],
[17,24,24,15,26,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,21,16,18,16,15],
[12,0,10,19,10,9,17,10],
[14,21,0,18,17,15,20,14],
[10,12,13,0,10,9,15,12],
[15,21,14,21,0,10,24,16],
[13,22,16,22,21,0,20,19],
[15,14,11,16,7,11,0,14],
[16,21,17,19,15,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,13,14,11,14,14],
[18,0,17,16,20,10,19,13],
[15,14,0,13,11,12,10,13],
[18,15,18,0,18,13,18,18],
[17,11,20,13,0,13,14,16],
[20,21,19,18,18,0,19,15],
[17,12,21,13,17,12,0,14],
[17,18,18,13,15,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,17,22,17,11,29,23],
[6,0,7,23,14,11,23,16],
[14,24,0,24,19,16,28,28],
[9,8,7,0,12,11,14,13],
[14,17,12,19,0,11,19,16],
[20,20,15,20,20,0,20,24],
[2,8,3,17,12,11,0,13],
[8,15,3,18,15,7,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,16,8,9,9,8,12],
[31,0,17,20,10,12,9,19],
[15,14,0,17,17,10,16,11],
[23,11,14,0,10,15,11,17],
[22,21,14,21,0,14,11,21],
[22,19,21,16,17,0,15,16],
[23,22,15,20,20,16,0,17],
[19,12,20,14,10,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,13,13,15,13,11],
[20,0,16,15,12,19,17,16],
[21,15,0,16,15,16,17,15],
[18,16,15,0,15,18,12,12],
[18,19,16,16,0,20,14,16],
[16,12,15,13,11,0,14,13],
[18,14,14,19,17,17,0,12],
[20,15,16,19,15,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,16,18,26,12,18],
[11,0,13,8,12,14,12,11],
[7,18,0,6,10,19,13,10],
[15,23,25,0,18,22,20,10],
[13,19,21,13,0,26,17,11],
[5,17,12,9,5,0,5,7],
[19,19,18,11,14,26,0,15],
[13,20,21,21,20,24,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,15,14,15,14,17],
[12,0,16,11,8,11,7,12],
[13,15,0,11,14,17,8,13],
[16,20,20,0,15,18,17,17],
[17,23,17,16,0,17,12,16],
[16,20,14,13,14,0,12,17],
[17,24,23,14,19,19,0,20],
[14,19,18,14,15,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,18,13,18,9,17],
[13,0,16,20,16,9,16,20],
[13,15,0,15,14,18,6,17],
[13,11,16,0,9,13,4,15],
[18,15,17,22,0,14,6,22],
[13,22,13,18,17,0,17,17],
[22,15,25,27,25,14,0,25],
[14,11,14,16,9,14,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,17,11,15,16,12],
[16,0,15,12,13,17,11,12],
[12,16,0,14,14,16,17,10],
[14,19,17,0,15,16,15,14],
[20,18,17,16,0,17,14,15],
[16,14,15,15,14,0,13,14],
[15,20,14,16,17,18,0,16],
[19,19,21,17,16,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,17,14,15,17,19],
[11,0,18,13,12,16,12,14],
[11,13,0,15,11,16,14,14],
[14,18,16,0,17,12,16,19],
[17,19,20,14,0,15,18,19],
[16,15,15,19,16,0,14,15],
[14,19,17,15,13,17,0,19],
[12,17,17,12,12,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,11,17,16,13,15],
[19,0,17,15,17,19,15,17],
[18,14,0,14,14,18,16,15],
[20,16,17,0,21,16,15,17],
[14,14,17,10,0,17,12,14],
[15,12,13,15,14,0,14,15],
[18,16,15,16,19,17,0,18],
[16,14,16,14,17,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,22,17,16,15,14],
[13,0,10,17,12,18,8,18],
[16,21,0,20,25,21,15,19],
[9,14,11,0,13,18,8,15],
[14,19,6,18,0,14,18,14],
[15,13,10,13,17,0,12,20],
[16,23,16,23,13,19,0,21],
[17,13,12,16,17,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,12,18,13,12,10],
[19,0,17,15,16,16,18,14],
[18,14,0,14,12,13,13,16],
[19,16,17,0,17,19,19,14],
[13,15,19,14,0,13,15,16],
[18,15,18,12,18,0,17,17],
[19,13,18,12,16,14,0,14],
[21,17,15,17,15,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,22,18,16,15,18],
[13,0,18,20,15,16,14,19],
[13,13,0,22,17,14,14,15],
[9,11,9,0,11,12,13,10],
[13,16,14,20,0,15,16,16],
[15,15,17,19,16,0,14,14],
[16,17,17,18,15,17,0,16],
[13,12,16,21,15,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,16,17,17,18,22],
[15,0,11,14,16,13,16,16],
[16,20,0,17,15,15,18,21],
[15,17,14,0,17,12,20,19],
[14,15,16,14,0,13,15,16],
[14,18,16,19,18,0,20,20],
[13,15,13,11,16,11,0,16],
[9,15,10,12,15,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,16,13,16,13,14],
[14,0,14,12,13,15,11,11],
[14,17,0,15,16,16,12,13],
[15,19,16,0,16,13,11,14],
[18,18,15,15,0,16,14,12],
[15,16,15,18,15,0,8,16],
[18,20,19,20,17,23,0,15],
[17,20,18,17,19,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,19,19,19,19,17,15],
[10,0,14,9,10,10,11,13],
[12,17,0,15,16,15,11,14],
[12,22,16,0,18,18,15,13],
[12,21,15,13,0,14,16,11],
[12,21,16,13,17,0,12,18],
[14,20,20,16,15,19,0,13],
[16,18,17,18,20,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,12,14,15,17,21],
[13,0,15,15,8,17,16,20],
[17,16,0,20,16,18,14,22],
[19,16,11,0,11,26,16,21],
[17,23,15,20,0,21,17,27],
[16,14,13,5,10,0,12,17],
[14,15,17,15,14,19,0,22],
[10,11,9,10,4,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,18,21,17,11,17],
[16,0,14,13,21,15,14,15],
[17,17,0,18,22,13,16,21],
[13,18,13,0,21,18,13,19],
[10,10,9,10,0,15,11,14],
[14,16,18,13,16,0,12,17],
[20,17,15,18,20,19,0,18],
[14,16,10,12,17,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,20,23,10,19,18],
[15,0,16,18,15,18,16,22],
[11,15,0,19,19,17,12,15],
[11,13,12,0,18,9,19,15],
[8,16,12,13,0,11,16,15],
[21,13,14,22,20,0,19,19],
[12,15,19,12,15,12,0,15],
[13,9,16,16,16,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,19,25,15,19,15,21],
[6,0,7,18,0,13,18,0],
[12,24,0,23,7,12,20,9],
[6,13,8,0,1,7,8,1],
[16,31,24,30,0,23,26,8],
[12,18,19,24,8,0,18,14],
[16,13,11,23,5,13,0,10],
[10,31,22,30,23,17,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,16,15,18,21,16],
[10,0,17,16,5,14,15,14],
[8,14,0,8,5,12,10,9],
[15,15,23,0,15,23,15,20],
[16,26,26,16,0,27,19,14],
[13,17,19,8,4,0,12,10],
[10,16,21,16,12,19,0,19],
[15,17,22,11,17,21,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,18,13,17,17,7,11],
[10,0,11,6,12,12,7,6],
[13,20,0,14,11,26,16,20],
[18,25,17,0,11,26,18,20],
[14,19,20,20,0,26,17,16],
[14,19,5,5,5,0,8,11],
[24,24,15,13,14,23,0,14],
[20,25,11,11,15,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,18,19,17,17,16],
[15,0,16,15,18,17,17,12],
[17,15,0,14,17,20,18,15],
[13,16,17,0,18,18,14,14],
[12,13,14,13,0,17,13,13],
[14,14,11,13,14,0,11,9],
[14,14,13,17,18,20,0,13],
[15,19,16,17,18,22,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,22,16,17,17,11,15],
[15,0,24,21,21,20,17,26],
[9,7,0,10,8,14,10,17],
[15,10,21,0,13,14,13,20],
[14,10,23,18,0,15,14,20],
[14,11,17,17,16,0,16,21],
[20,14,21,18,17,15,0,20],
[16,5,14,11,11,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,11,0,3,8,12,0],
[31,0,22,8,22,22,31,23],
[20,9,0,9,15,6,15,15],
[31,23,22,0,14,22,23,15],
[28,9,16,17,0,19,23,9],
[23,9,25,9,12,0,17,9],
[19,0,16,8,8,14,0,0],
[31,8,16,16,22,22,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,19,17,20,18,14],
[11,0,13,19,15,20,16,12],
[15,18,0,20,20,15,20,16],
[12,12,11,0,15,10,17,10],
[14,16,11,16,0,14,18,16],
[11,11,16,21,17,0,18,16],
[13,15,11,14,13,13,0,10],
[17,19,15,21,15,15,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,12,10,21,9,17,20],
[12,0,13,14,11,11,13,24],
[19,18,0,19,10,12,19,22],
[21,17,12,0,15,17,25,25],
[10,20,21,16,0,11,13,20],
[22,20,19,14,20,0,19,20],
[14,18,12,6,18,12,0,17],
[11,7,9,6,11,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,17,18,22,18,18],
[14,0,18,14,17,18,19,13],
[16,13,0,15,11,16,16,11],
[14,17,16,0,18,18,20,19],
[13,14,20,13,0,12,10,13],
[9,13,15,13,19,0,10,14],
[13,12,15,11,21,21,0,11],
[13,18,20,12,18,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,10,14,13,8,16],
[22,0,19,20,18,12,12,17],
[17,12,0,11,11,11,12,14],
[21,11,20,0,12,13,12,17],
[17,13,20,19,0,15,19,18],
[18,19,20,18,16,0,13,16],
[23,19,19,19,12,18,0,18],
[15,14,17,14,13,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,11,21,11,7,11,1],
[27,0,17,22,18,14,24,7],
[20,14,0,22,12,13,23,14],
[10,9,9,0,8,8,8,8],
[20,13,19,23,0,18,18,11],
[24,17,18,23,13,0,23,18],
[20,7,8,23,13,8,0,3],
[30,24,17,23,20,13,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,6,6,8,9,19,12],
[20,0,18,9,16,16,28,15],
[25,13,0,11,19,11,19,15],
[25,22,20,0,24,19,25,15],
[23,15,12,7,0,16,25,18],
[22,15,20,12,15,0,28,26],
[12,3,12,6,6,3,0,15],
[19,16,16,16,13,5,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,15,19,16,18,20],
[16,0,16,18,18,15,16,17],
[15,15,0,20,22,17,18,21],
[16,13,11,0,17,15,17,18],
[12,13,9,14,0,16,10,17],
[15,16,14,16,15,0,16,20],
[13,15,13,14,21,15,0,13],
[11,14,10,13,14,11,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,18,21,19,18,15,19],
[9,0,21,16,17,17,16,12],
[13,10,0,15,17,15,16,10],
[10,15,16,0,20,15,15,16],
[12,14,14,11,0,16,13,8],
[13,14,16,16,15,0,17,15],
[16,15,15,16,18,14,0,11],
[12,19,21,15,23,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,31,21,21,21,21,21],
[20,0,31,10,21,20,10,31],
[0,0,0,10,21,3,10,18],
[10,21,21,0,31,10,17,21],
[10,10,10,0,0,10,17,10],
[10,11,28,21,21,0,7,28],
[10,21,21,14,14,24,0,21],
[10,0,13,10,21,3,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,10,16,16,16,16,10],
[25,0,16,16,15,16,21,16],
[21,15,0,21,15,21,21,21],
[15,15,10,0,17,16,27,8],
[15,16,16,14,0,16,21,14],
[15,15,10,15,15,0,21,9],
[15,10,10,4,10,10,0,4],
[21,15,10,23,17,22,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,11,11,13,13,11],
[20,0,17,15,12,13,14,17],
[19,14,0,12,9,13,18,15],
[20,16,19,0,10,18,17,19],
[20,19,22,21,0,14,19,21],
[18,18,18,13,17,0,20,17],
[18,17,13,14,12,11,0,16],
[20,14,16,12,10,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,25,25,25,2,31],
[18,0,12,14,25,23,20,31],
[19,19,0,19,13,13,19,31],
[6,17,12,0,13,11,8,31],
[6,6,18,18,0,29,8,18],
[6,8,18,20,2,0,8,20],
[29,11,12,23,23,23,0,29],
[0,0,0,0,13,11,2,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,19,8,15,9,11,11],
[20,0,24,16,15,24,18,23],
[12,7,0,6,8,9,9,12],
[23,15,25,0,20,21,19,20],
[16,16,23,11,0,20,15,21],
[22,7,22,10,11,0,14,16],
[20,13,22,12,16,17,0,16],
[20,8,19,11,10,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,18,16,16,17,10],
[17,0,14,14,17,13,17,11],
[15,17,0,16,19,18,19,16],
[13,17,15,0,18,16,17,13],
[15,14,12,13,0,17,17,12],
[15,18,13,15,14,0,14,12],
[14,14,12,14,14,17,0,16],
[21,20,15,18,19,19,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,13,13,13,11,12],
[18,0,14,12,16,14,11,13],
[14,17,0,14,15,14,18,10],
[18,19,17,0,22,13,22,17],
[18,15,16,9,0,15,17,12],
[18,17,17,18,16,0,18,15],
[20,20,13,9,14,13,0,13],
[19,18,21,14,19,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,19,12,8,14,12],
[15,0,26,21,21,16,23,21],
[13,5,0,14,12,6,17,11],
[12,10,17,0,10,8,15,11],
[19,10,19,21,0,15,16,17],
[23,15,25,23,16,0,18,20],
[17,8,14,16,15,13,0,15],
[19,10,20,20,14,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,23,21,18,13,17,13],
[19,0,20,20,15,19,16,13],
[8,11,0,18,12,10,13,9],
[10,11,13,0,12,14,13,14],
[13,16,19,19,0,13,19,13],
[18,12,21,17,18,0,16,16],
[14,15,18,18,12,15,0,15],
[18,18,22,17,18,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,17,11,24,20,21,31],
[20,0,20,7,13,20,14,20],
[14,11,0,14,14,24,14,14],
[20,24,17,0,13,20,27,31],
[7,18,17,18,0,20,21,25],
[11,11,7,11,11,0,21,18],
[10,17,17,4,10,10,0,10],
[0,11,17,0,6,13,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,23,23,19,23,16,12],
[15,0,31,27,19,27,23,18],
[8,0,0,12,12,9,12,3],
[8,4,19,0,10,17,7,8],
[12,12,19,21,0,21,24,8],
[8,4,22,14,10,0,7,11],
[15,8,19,24,7,24,0,15],
[19,13,28,23,23,20,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,18,21,15,16,18],
[16,0,18,17,17,16,13,18],
[15,13,0,19,18,17,12,18],
[13,14,12,0,16,11,8,14],
[10,14,13,15,0,16,7,14],
[16,15,14,20,15,0,12,17],
[15,18,19,23,24,19,0,21],
[13,13,13,17,17,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,11,17,12,15,17],
[19,0,17,20,20,16,15,18],
[18,14,0,21,18,13,17,18],
[20,11,10,0,16,14,13,14],
[14,11,13,15,0,11,14,10],
[19,15,18,17,20,0,15,15],
[16,16,14,18,17,16,0,18],
[14,13,13,17,21,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,0,12,19,19,12,24],
[19,0,19,7,7,7,12,19],
[31,12,0,19,19,19,24,24],
[19,24,12,0,31,31,24,24],
[12,24,12,0,0,0,24,12],
[12,24,12,0,31,0,24,24],
[19,19,7,7,7,7,0,19],
[7,12,7,7,19,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,16,20,19,15,19],
[16,0,11,19,16,17,18,15],
[15,20,0,18,21,20,18,19],
[15,12,13,0,12,14,12,13],
[11,15,10,19,0,20,12,19],
[12,14,11,17,11,0,11,15],
[16,13,13,19,19,20,0,21],
[12,16,12,18,12,16,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,14,17,20,17,23],
[12,0,19,15,18,23,16,15],
[13,12,0,12,14,9,11,11],
[17,16,19,0,22,17,13,21],
[14,13,17,9,0,18,13,15],
[11,8,22,14,13,0,11,9],
[14,15,20,18,18,20,0,18],
[8,16,20,10,16,22,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,11,12,16,12,16],
[18,0,14,7,14,15,13,20],
[15,17,0,14,15,16,9,17],
[20,24,17,0,17,19,15,19],
[19,17,16,14,0,17,13,19],
[15,16,15,12,14,0,17,18],
[19,18,22,16,18,14,0,19],
[15,11,14,12,12,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,17,15,15,18,19],
[13,0,15,17,13,13,12,16],
[14,16,0,17,14,16,15,17],
[14,14,14,0,9,12,14,14],
[16,18,17,22,0,15,18,17],
[16,18,15,19,16,0,18,18],
[13,19,16,17,13,13,0,14],
[12,15,14,17,14,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,0,15,15,10,18,2],
[23,0,10,15,23,10,18,2],
[31,21,0,15,25,18,20,2],
[16,16,16,0,29,10,18,18],
[16,8,6,2,0,10,18,2],
[21,21,13,21,21,0,10,8],
[13,13,11,13,13,21,0,8],
[29,29,29,13,29,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,16,11,12,15,15],
[21,0,16,19,15,17,17,17],
[18,15,0,15,14,17,17,19],
[15,12,16,0,14,17,14,18],
[20,16,17,17,0,15,15,18],
[19,14,14,14,16,0,15,18],
[16,14,14,17,16,16,0,19],
[16,14,12,13,13,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,19,20,12,19,15],
[17,0,16,19,19,17,12,17],
[13,15,0,15,14,14,12,17],
[12,12,16,0,18,10,11,14],
[11,12,17,13,0,9,10,12],
[19,14,17,21,22,0,17,17],
[12,19,19,20,21,14,0,17],
[16,14,14,17,19,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,12,11,15,16,15],
[19,0,15,16,17,16,16,16],
[19,16,0,13,17,18,17,17],
[19,15,18,0,15,17,17,16],
[20,14,14,16,0,17,18,16],
[16,15,13,14,14,0,16,14],
[15,15,14,14,13,15,0,15],
[16,15,14,15,15,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,14,12,11,11,14],
[14,0,15,7,9,7,8,9],
[12,16,0,10,11,4,7,13],
[17,24,21,0,17,11,14,22],
[19,22,20,14,0,11,18,19],
[20,24,27,20,20,0,13,21],
[20,23,24,17,13,18,0,17],
[17,22,18,9,12,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,5,15,13,5,13,4],
[24,0,15,24,23,15,28,14],
[26,16,0,23,18,17,21,12],
[16,7,8,0,16,8,16,10],
[18,8,13,15,0,6,21,10],
[26,16,14,23,25,0,28,23],
[18,3,10,15,10,3,0,3],
[27,17,19,21,21,8,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,10,9,14,17,14,14],
[14,0,13,17,18,16,17,14],
[21,18,0,15,19,18,20,15],
[22,14,16,0,15,21,13,20],
[17,13,12,16,0,24,20,12],
[14,15,13,10,7,0,10,18],
[17,14,11,18,11,21,0,15],
[17,17,16,11,19,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,17,14,19,11,12],
[14,0,14,21,14,17,12,16],
[17,17,0,13,13,16,16,12],
[14,10,18,0,12,14,10,11],
[17,17,18,19,0,19,14,17],
[12,14,15,17,12,0,11,14],
[20,19,15,21,17,20,0,16],
[19,15,19,20,14,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,11,18,11,10,21],
[21,0,4,13,15,10,5,21],
[18,27,0,14,17,11,15,20],
[20,18,17,0,18,14,20,25],
[13,16,14,13,0,12,7,24],
[20,21,20,17,19,0,14,25],
[21,26,16,11,24,17,0,26],
[10,10,11,6,7,6,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,12,18,16,18,11],
[13,0,14,14,16,16,18,4],
[19,17,0,19,19,15,20,11],
[19,17,12,0,18,13,14,15],
[13,15,12,13,0,13,17,7],
[15,15,16,18,18,0,20,16],
[13,13,11,17,14,11,0,9],
[20,27,20,16,24,15,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,24,23,24,19,20,13],
[14,0,21,25,21,17,19,19],
[7,10,0,14,20,17,9,14],
[8,6,17,0,17,15,10,10],
[7,10,11,14,0,15,15,10],
[12,14,14,16,16,0,14,10],
[11,12,22,21,16,17,0,15],
[18,12,17,21,21,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,18,15,14,15,16,14],
[20,0,15,18,19,16,20,20],
[13,16,0,11,13,12,15,14],
[16,13,20,0,17,15,22,16],
[17,12,18,14,0,10,17,13],
[16,15,19,16,21,0,23,20],
[15,11,16,9,14,8,0,11],
[17,11,17,15,18,11,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,12,16,10,15,16],
[16,0,16,16,14,15,16,17],
[13,15,0,10,11,10,12,11],
[19,15,21,0,20,12,18,15],
[15,17,20,11,0,13,14,13],
[21,16,21,19,18,0,14,15],
[16,15,19,13,17,17,0,16],
[15,14,20,16,18,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,13,21,15,9,24,17],
[10,0,12,17,13,12,18,15],
[18,19,0,23,12,18,19,12],
[10,14,8,0,5,9,10,12],
[16,18,19,26,0,13,22,20],
[22,19,13,22,18,0,24,24],
[7,13,12,21,9,7,0,15],
[14,16,19,19,11,7,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,14,14,11,14,18],
[13,0,8,12,17,12,20,19],
[15,23,0,15,19,22,18,23],
[17,19,16,0,8,19,18,20],
[17,14,12,23,0,15,19,14],
[20,19,9,12,16,0,22,20],
[17,11,13,13,12,9,0,15],
[13,12,8,11,17,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,7,12,16,14,11],
[19,0,17,14,19,15,20,13],
[20,14,0,15,17,15,18,16],
[24,17,16,0,12,17,18,15],
[19,12,14,19,0,16,21,18],
[15,16,16,14,15,0,17,14],
[17,11,13,13,10,14,0,11],
[20,18,15,16,13,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,19,14,18,16,21],
[9,0,13,13,11,7,7,16],
[9,18,0,20,9,12,7,17],
[12,18,11,0,8,11,10,16],
[17,20,22,23,0,15,8,23],
[13,24,19,20,16,0,20,20],
[15,24,24,21,23,11,0,20],
[10,15,14,15,8,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,10,14,16,16,11,0],
[20,0,13,18,15,9,15,4],
[21,18,0,18,16,20,11,0],
[17,13,13,0,13,6,13,7],
[15,16,15,18,0,14,9,8],
[15,22,11,25,17,0,17,11],
[20,16,20,18,22,14,0,16],
[31,27,31,24,23,20,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,19,18,11,15,14,15],
[13,0,10,18,10,14,13,9],
[12,21,0,21,9,20,14,16],
[13,13,10,0,8,16,11,11],
[20,21,22,23,0,19,18,15],
[16,17,11,15,12,0,12,15],
[17,18,17,20,13,19,0,13],
[16,22,15,20,16,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,19,13,17,16,19],
[15,0,15,17,18,15,18,21],
[15,16,0,23,12,14,17,20],
[12,14,8,0,11,13,12,12],
[18,13,19,20,0,16,15,20],
[14,16,17,18,15,0,19,18],
[15,13,14,19,16,12,0,14],
[12,10,11,19,11,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,18,19,19,19,20],
[18,0,14,19,19,19,21,15],
[15,17,0,14,25,18,19,20],
[13,12,17,0,16,19,16,16],
[12,12,6,15,0,16,11,16],
[12,12,13,12,15,0,12,12],
[12,10,12,15,20,19,0,19],
[11,16,11,15,15,19,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,22,20,16,19,15],
[16,0,19,27,18,14,19,19],
[12,12,0,21,19,13,15,14],
[9,4,10,0,9,10,11,9],
[11,13,12,22,0,10,14,13],
[15,17,18,21,21,0,18,16],
[12,12,16,20,17,13,0,16],
[16,12,17,22,18,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,14,17,13,15,13],
[13,0,14,17,12,15,13,10],
[14,17,0,17,12,18,17,17],
[17,14,14,0,14,11,12,13],
[14,19,19,17,0,16,18,17],
[18,16,13,20,15,0,14,13],
[16,18,14,19,13,17,0,15],
[18,21,14,18,14,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,18,15,25,23,21,25],
[11,0,11,13,22,22,14,24],
[13,20,0,20,23,20,18,23],
[16,18,11,0,22,20,18,21],
[6,9,8,9,0,11,9,10],
[8,9,11,11,20,0,14,20],
[10,17,13,13,22,17,0,21],
[6,7,8,10,21,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,9,12,11,11,13,20],
[15,0,13,12,13,11,13,12],
[22,18,0,17,13,14,13,20],
[19,19,14,0,23,19,21,19],
[20,18,18,8,0,21,25,21],
[20,20,17,12,10,0,19,22],
[18,18,18,10,6,12,0,20],
[11,19,11,12,10,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,17,16,20,18,17],
[16,0,13,12,13,15,12,15],
[15,18,0,14,14,18,12,17],
[14,19,17,0,16,18,16,15],
[15,18,17,15,0,18,15,16],
[11,16,13,13,13,0,11,15],
[13,19,19,15,16,20,0,17],
[14,16,14,16,15,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,16,17,19,20,12],
[12,0,17,13,19,16,16,13],
[14,14,0,10,14,19,14,8],
[15,18,21,0,12,17,16,13],
[14,12,17,19,0,25,20,21],
[12,15,12,14,6,0,11,8],
[11,15,17,15,11,20,0,10],
[19,18,23,18,10,23,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,27,22,19,16,20,23],
[16,0,23,31,21,3,24,19],
[4,8,0,13,9,6,13,18],
[9,0,18,0,10,1,13,9],
[12,10,22,21,0,5,16,21],
[15,28,25,30,26,0,25,25],
[11,7,18,18,15,6,0,20],
[8,12,13,22,10,6,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,15,16,20,21,16],
[14,0,14,17,14,17,17,23],
[13,17,0,16,13,18,16,17],
[16,14,15,0,17,17,16,17],
[15,17,18,14,0,24,19,20],
[11,14,13,14,7,0,13,19],
[10,14,15,15,12,18,0,20],
[15,8,14,14,11,12,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,16,12,11,8,15],
[20,0,12,10,17,21,13,15],
[23,19,0,24,16,19,7,15],
[15,21,7,0,12,11,3,14],
[19,14,15,19,0,15,9,16],
[20,10,12,20,16,0,17,10],
[23,18,24,28,22,14,0,19],
[16,16,16,17,15,21,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,24,17,12,23,18,9],
[17,0,22,29,5,24,14,17],
[7,9,0,17,14,12,2,9],
[14,2,14,0,5,16,11,11],
[19,26,17,26,0,24,14,26],
[8,7,19,15,7,0,7,10],
[13,17,29,20,17,24,0,20],
[22,14,22,20,5,21,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,15,17,14,14,12],
[18,0,14,12,16,18,13,13],
[17,17,0,15,17,14,19,16],
[16,19,16,0,18,13,19,16],
[14,15,14,13,0,18,14,13],
[17,13,17,18,13,0,14,13],
[17,18,12,12,17,17,0,16],
[19,18,15,15,18,18,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,13,14,16,14,17],
[13,0,11,15,14,15,14,10],
[16,20,0,12,15,18,17,15],
[18,16,19,0,16,17,15,16],
[17,17,16,15,0,17,15,18],
[15,16,13,14,14,0,15,18],
[17,17,14,16,16,16,0,17],
[14,21,16,15,13,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,19,7,7,7,19,7],
[24,0,31,12,19,12,19,19],
[12,0,0,0,0,0,12,0],
[24,19,31,0,19,19,19,7],
[24,12,31,12,0,12,19,7],
[24,19,31,12,19,0,19,19],
[12,12,19,12,12,12,0,19],
[24,12,31,24,24,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,22,16,12,20,28],
[3,0,15,15,9,15,9,20],
[5,16,0,15,16,15,12,18],
[9,16,16,0,11,21,18,16],
[15,22,15,20,0,12,9,22],
[19,16,16,10,19,0,23,16],
[11,22,19,13,22,8,0,24],
[3,11,13,15,9,15,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,11,16,14,16,15],
[17,0,12,15,9,13,15,19],
[20,19,0,12,12,20,16,18],
[20,16,19,0,15,18,15,15],
[15,22,19,16,0,14,16,21],
[17,18,11,13,17,0,19,17],
[15,16,15,16,15,12,0,18],
[16,12,13,16,10,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,15,17,10,15,12,12],
[11,0,17,14,10,10,8,10],
[16,14,0,16,17,17,13,13],
[14,17,15,0,13,15,13,11],
[21,21,14,18,0,16,17,15],
[16,21,14,16,15,0,12,14],
[19,23,18,18,14,19,0,17],
[19,21,18,20,16,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,21,18,15,18,18],
[16,0,9,9,9,16,24,9],
[13,22,0,21,24,28,24,16],
[10,22,10,0,3,7,18,10],
[13,22,7,28,0,13,28,16],
[16,15,3,24,18,0,18,9],
[13,7,7,13,3,13,0,16],
[13,22,15,21,15,22,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,10,13,21,9,12],
[17,0,20,15,19,26,15,15],
[17,11,0,17,25,29,13,17],
[21,16,14,0,23,25,13,9],
[18,12,6,8,0,25,12,11],
[10,5,2,6,6,0,7,8],
[22,16,18,18,19,24,0,10],
[19,16,14,22,20,23,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,22,23,10,23,20,20],
[8,0,12,23,10,13,1,10],
[9,19,0,20,1,11,11,1],
[8,8,11,0,0,9,1,0],
[21,21,30,31,0,31,14,20],
[8,18,20,22,0,0,11,9],
[11,30,20,30,17,20,0,17],
[11,21,30,31,11,22,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,16,13,14,12,9],
[21,0,20,18,13,19,16,16],
[16,11,0,16,12,15,14,14],
[15,13,15,0,14,17,13,13],
[18,18,19,17,0,17,14,19],
[17,12,16,14,14,0,18,17],
[19,15,17,18,17,13,0,18],
[22,15,17,18,12,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,16,11,18,17,23],
[15,0,13,8,10,12,17,20],
[14,18,0,8,7,16,14,16],
[15,23,23,0,16,20,26,22],
[20,21,24,15,0,17,22,24],
[13,19,15,11,14,0,21,20],
[14,14,17,5,9,10,0,11],
[8,11,15,9,7,11,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,15,17,19,22,16],
[15,0,12,9,14,10,22,11],
[15,19,0,17,16,18,23,16],
[16,22,14,0,21,20,23,16],
[14,17,15,10,0,14,18,13],
[12,21,13,11,17,0,21,12],
[9,9,8,8,13,10,0,11],
[15,20,15,15,18,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,0,10,5,4,15,5],
[28,0,15,17,17,28,20,25],
[31,16,0,13,13,28,28,28],
[21,14,18,0,15,15,15,15],
[26,14,18,16,0,21,15,20],
[27,3,3,16,10,0,11,16],
[16,11,3,16,16,20,0,13],
[26,6,3,16,11,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,13,10,12,8,6],
[19,0,14,18,13,20,12,15],
[18,17,0,21,10,17,15,22],
[18,13,10,0,9,19,17,13],
[21,18,21,22,0,17,15,22],
[19,11,14,12,14,0,16,12],
[23,19,16,14,16,15,0,18],
[25,16,9,18,9,19,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,20,18,16,11,18],
[15,0,12,17,18,16,12,15],
[17,19,0,18,21,14,15,15],
[11,14,13,0,19,14,18,13],
[13,13,10,12,0,12,11,12],
[15,15,17,17,19,0,14,15],
[20,19,16,13,20,17,0,16],
[13,16,16,18,19,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,17,13,16,10,20],
[17,0,24,17,15,18,20,20],
[11,7,0,14,3,11,11,17],
[14,14,17,0,8,10,14,17],
[18,16,28,23,0,17,14,22],
[15,13,20,21,14,0,11,16],
[21,11,20,17,17,20,0,20],
[11,11,14,14,9,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,16,10,10,11,9],
[19,0,11,19,10,16,15,9],
[19,20,0,17,14,13,19,17],
[15,12,14,0,13,13,13,11],
[21,21,17,18,0,17,16,15],
[21,15,18,18,14,0,17,16],
[20,16,12,18,15,14,0,14],
[22,22,14,20,16,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,17,13,16,14,17,19],
[21,0,16,17,19,19,15,23],
[14,15,0,16,13,18,14,19],
[18,14,15,0,17,18,16,24],
[15,12,18,14,0,20,14,21],
[17,12,13,13,11,0,13,16],
[14,16,17,15,17,18,0,22],
[12,8,12,7,10,15,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,22,19,19,18,15],
[10,0,13,16,16,15,16,16],
[10,18,0,21,18,20,20,18],
[9,15,10,0,13,14,16,14],
[12,15,13,18,0,20,13,10],
[12,16,11,17,11,0,11,10],
[13,15,11,15,18,20,0,11],
[16,15,13,17,21,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,16,9,11,12,11],
[17,0,14,20,13,17,19,22],
[16,17,0,20,13,14,21,15],
[15,11,11,0,12,11,15,10],
[22,18,18,19,0,14,18,14],
[20,14,17,20,17,0,24,18],
[19,12,10,16,13,7,0,10],
[20,9,16,21,17,13,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,17,12,18,13,17,20],
[20,0,16,16,21,20,11,16],
[14,15,0,12,24,14,13,14],
[19,15,19,0,23,20,13,21],
[13,10,7,8,0,14,13,9],
[18,11,17,11,17,0,16,20],
[14,20,18,18,18,15,0,24],
[11,15,17,10,22,11,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,13,16,17,17,23],
[15,0,10,11,10,16,14,13],
[10,21,0,14,19,11,13,17],
[18,20,17,0,17,14,23,21],
[15,21,12,14,0,16,14,15],
[14,15,20,17,15,0,13,15],
[14,17,18,8,17,18,0,20],
[8,18,14,10,16,16,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,17,15,13,15,17],
[13,0,13,14,15,12,14,14],
[15,18,0,15,24,12,13,16],
[14,17,16,0,22,15,13,11],
[16,16,7,9,0,9,11,11],
[18,19,19,16,22,0,14,12],
[16,17,18,18,20,17,0,14],
[14,17,15,20,20,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,14,11,23,17,19],
[15,0,23,18,18,20,16,13],
[11,8,0,12,11,16,20,17],
[17,13,19,0,9,17,10,12],
[20,13,20,22,0,19,17,18],
[8,11,15,14,12,0,12,8],
[14,15,11,21,14,19,0,15],
[12,18,14,19,13,23,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,16,18,15,11,11],
[19,0,19,19,15,19,14,16],
[18,12,0,17,18,21,16,17],
[15,12,14,0,14,17,10,10],
[13,16,13,17,0,16,12,17],
[16,12,10,14,15,0,13,12],
[20,17,15,21,19,18,0,19],
[20,15,14,21,14,19,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,17,18,16,15,14,21],
[21,0,16,16,15,23,22,15],
[14,15,0,15,13,18,18,17],
[13,15,16,0,13,12,16,13],
[15,16,18,18,0,19,18,18],
[16,8,13,19,12,0,13,18],
[17,9,13,15,13,18,0,17],
[10,16,14,18,13,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,23,15,13,17,15],
[13,0,18,20,12,20,14,16],
[18,13,0,20,11,17,14,18],
[8,11,11,0,11,11,17,16],
[16,19,20,20,0,21,15,12],
[18,11,14,20,10,0,17,11],
[14,17,17,14,16,14,0,17],
[16,15,13,15,19,20,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,15,18,13,7,8],
[14,0,17,19,19,13,16,11],
[15,14,0,16,16,17,9,8],
[16,12,15,0,14,13,12,9],
[13,12,15,17,0,10,12,7],
[18,18,14,18,21,0,15,19],
[24,15,22,19,19,16,0,16],
[23,20,23,22,24,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,26,17,20,17,15],
[18,0,17,26,20,19,20,15],
[13,14,0,23,15,23,18,13],
[5,5,8,0,10,15,10,6],
[14,11,16,21,0,19,19,17],
[11,12,8,16,12,0,17,13],
[14,11,13,21,12,14,0,12],
[16,16,18,25,14,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,15,14,19,15,17],
[13,0,22,10,19,12,10,18],
[11,9,0,7,14,16,16,16],
[16,21,24,0,20,12,20,20],
[17,12,17,11,0,19,12,12],
[12,19,15,19,12,0,13,14],
[16,21,15,11,19,18,0,14],
[14,13,15,11,19,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,5,6,7,8,12,7],
[16,0,15,10,18,11,16,12],
[26,16,0,19,21,17,20,11],
[25,21,12,0,21,18,15,17],
[24,13,10,10,0,16,10,9],
[23,20,14,13,15,0,14,10],
[19,15,11,16,21,17,0,13],
[24,19,20,14,22,21,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,8,18,14,11,18,15],
[14,0,11,17,13,15,20,17],
[23,20,0,17,13,15,19,15],
[13,14,14,0,10,17,13,16],
[17,18,18,21,0,17,14,20],
[20,16,16,14,14,0,20,17],
[13,11,12,18,17,11,0,20],
[16,14,16,15,11,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,21,16,15,15,15,16],
[14,0,15,11,11,16,16,12],
[10,16,0,15,15,16,15,17],
[15,20,16,0,17,15,15,15],
[16,20,16,14,0,16,11,18],
[16,15,15,16,15,0,15,17],
[16,15,16,16,20,16,0,17],
[15,19,14,16,13,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,18,15,16,10,19],
[21,0,14,21,21,20,16,19],
[16,17,0,17,16,20,13,18],
[13,10,14,0,8,16,10,16],
[16,10,15,23,0,16,11,17],
[15,11,11,15,15,0,13,14],
[21,15,18,21,20,18,0,18],
[12,12,13,15,14,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,20,16,15,16,17],
[14,0,13,15,13,10,16,12],
[18,18,0,19,15,18,18,17],
[11,16,12,0,9,13,11,13],
[15,18,16,22,0,21,21,18],
[16,21,13,18,10,0,15,17],
[15,15,13,20,10,16,0,14],
[14,19,14,18,13,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,13,17,16,17,16],
[13,0,12,17,14,13,16,14],
[18,19,0,15,19,18,17,19],
[18,14,16,0,19,16,15,18],
[14,17,12,12,0,17,16,9],
[15,18,13,15,14,0,17,14],
[14,15,14,16,15,14,0,13],
[15,17,12,13,22,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,20,18,10,19,14,20],
[19,0,24,18,15,23,26,23],
[11,7,0,12,10,15,9,13],
[13,13,19,0,14,19,19,17],
[21,16,21,17,0,21,15,21],
[12,8,16,12,10,0,13,13],
[17,5,22,12,16,18,0,19],
[11,8,18,14,10,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,16,13,12,16,14],
[13,0,15,13,16,9,14,13],
[19,16,0,15,17,13,15,14],
[15,18,16,0,19,17,14,16],
[18,15,14,12,0,13,13,15],
[19,22,18,14,18,0,20,20],
[15,17,16,17,18,11,0,15],
[17,18,17,15,16,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,17,20,18,16,18],
[12,0,12,15,16,16,8,18],
[17,19,0,22,20,14,12,17],
[14,16,9,0,17,13,12,14],
[11,15,11,14,0,15,10,13],
[13,15,17,18,16,0,13,15],
[15,23,19,19,21,18,0,19],
[13,13,14,17,18,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,26,15,16,16,25,16],
[16,0,11,7,1,6,17,10],
[5,20,0,15,7,9,25,14],
[16,24,16,0,6,21,22,25],
[15,30,24,25,0,19,25,19],
[15,25,22,10,12,0,25,24],
[6,14,6,9,6,6,0,15],
[15,21,17,6,12,7,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,3,12,21,1,5,10],
[13,0,9,12,16,14,18,17],
[28,22,0,12,22,15,19,17],
[19,19,19,0,15,19,12,8],
[10,15,9,16,0,10,12,10],
[30,17,16,12,21,0,11,10],
[26,13,12,19,19,20,0,5],
[21,14,14,23,21,21,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,2,7,25,13,23,14,16],
[29,0,16,23,13,23,14,16],
[24,15,0,29,11,18,20,20],
[6,8,2,0,8,9,0,8],
[18,18,20,23,0,18,9,11],
[8,8,13,22,13,0,11,13],
[17,17,11,31,22,20,0,8],
[15,15,11,23,20,18,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,11,16,20,9,21],
[12,0,14,10,11,16,11,14],
[17,17,0,12,17,17,15,16],
[20,21,19,0,22,18,14,20],
[15,20,14,9,0,12,16,16],
[11,15,14,13,19,0,13,18],
[22,20,16,17,15,18,0,21],
[10,17,15,11,15,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,11,17,18,21,20],
[12,0,16,11,16,16,13,16],
[14,15,0,11,12,13,14,16],
[20,20,20,0,14,19,22,21],
[14,15,19,17,0,16,22,17],
[13,15,18,12,15,0,17,16],
[10,18,17,9,9,14,0,11],
[11,15,15,10,14,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,19,14,13,13,18],
[14,0,19,24,15,18,14,14],
[17,12,0,21,12,8,7,9],
[12,7,10,0,18,14,10,10],
[17,16,19,13,0,10,11,12],
[18,13,23,17,21,0,18,10],
[18,17,24,21,20,13,0,18],
[13,17,22,21,19,21,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,9,7,4,11,9,8],
[12,0,1,12,5,12,5,8],
[22,30,0,21,15,21,14,22],
[24,19,10,0,15,24,23,27],
[27,26,16,16,0,16,9,17],
[20,19,10,7,15,0,9,27],
[22,26,17,8,22,22,0,18],
[23,23,9,4,14,4,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,22,17,11,17,13,20],
[21,0,24,17,16,18,10,19],
[9,7,0,7,10,14,12,15],
[14,14,24,0,17,25,18,21],
[20,15,21,14,0,25,24,24],
[14,13,17,6,6,0,8,11],
[18,21,19,13,7,23,0,26],
[11,12,16,10,7,20,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,15,13,18,13,15,13],
[12,0,10,13,13,11,14,11],
[16,21,0,17,20,18,15,20],
[18,18,14,0,17,19,18,20],
[13,18,11,14,0,13,13,13],
[18,20,13,12,18,0,14,15],
[16,17,16,13,18,17,0,15],
[18,20,11,11,18,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,14,15,21,19,14,25],
[9,0,10,15,17,9,8,19],
[17,21,0,17,14,15,16,22],
[16,16,14,0,15,13,13,21],
[10,14,17,16,0,17,13,26],
[12,22,16,18,14,0,12,26],
[17,23,15,18,18,19,0,24],
[6,12,9,10,5,5,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,9,15,17,8,9,9],
[9,0,9,8,17,15,9,9],
[22,22,0,15,17,22,17,24],
[16,23,16,0,23,14,9,16],
[14,14,14,8,0,22,9,16],
[23,16,9,17,9,0,9,16],
[22,22,14,22,22,22,0,24],
[22,22,7,15,15,15,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,15,20,12,17,17],
[15,0,15,16,17,12,20,17],
[20,16,0,11,19,13,18,18],
[16,15,20,0,23,12,17,17],
[11,14,12,8,0,11,22,16],
[19,19,18,19,20,0,19,14],
[14,11,13,14,9,12,0,9],
[14,14,13,14,15,17,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,14,9,17,21,6,15],
[0,0,6,9,17,13,6,15],
[17,25,0,17,17,25,9,18],
[22,22,14,0,17,13,23,23],
[14,14,14,14,0,14,14,14],
[10,18,6,18,17,0,15,15],
[25,25,22,8,17,16,0,23],
[16,16,13,8,17,16,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,11,14,17,18,17],
[13,0,20,12,15,13,22,12],
[15,11,0,15,12,13,16,10],
[20,19,16,0,18,12,20,16],
[17,16,19,13,0,19,20,12],
[14,18,18,19,12,0,20,15],
[13,9,15,11,11,11,0,16],
[14,19,21,15,19,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,8,16,15,19,17,23],
[0,0,4,11,11,0,5,11],
[23,27,0,11,11,14,28,23],
[15,20,20,0,26,3,17,23],
[16,20,20,5,0,7,17,16],
[12,31,17,28,24,0,17,23],
[14,26,3,14,14,14,0,11],
[8,20,8,8,15,8,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,23,19,17,23,24,16],
[22,0,21,15,17,23,18,21],
[8,10,0,19,10,11,15,7],
[12,16,12,0,4,14,10,6],
[14,14,21,27,0,18,19,20],
[8,8,20,17,13,0,16,13],
[7,13,16,21,12,15,0,17],
[15,10,24,25,11,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,19,21,21,20,24],
[13,0,10,13,9,15,14,17],
[17,21,0,19,12,23,20,24],
[12,18,12,0,13,14,20,18],
[10,22,19,18,0,21,22,22],
[10,16,8,17,10,0,16,21],
[11,17,11,11,9,15,0,19],
[7,14,7,13,9,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,18,23,20,17,14,18],
[11,0,17,23,16,19,15,15],
[13,14,0,21,12,16,13,14],
[8,8,10,0,11,11,5,12],
[11,15,19,20,0,14,10,14],
[14,12,15,20,17,0,16,13],
[17,16,18,26,21,15,0,17],
[13,16,17,19,17,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,15,24,17,23,17],
[14,0,11,12,20,14,19,14],
[12,20,0,18,16,15,19,15],
[16,19,13,0,22,12,22,15],
[7,11,15,9,0,10,16,12],
[14,17,16,19,21,0,22,15],
[8,12,12,9,15,9,0,11],
[14,17,16,16,19,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,13,12,17,14,11],
[14,0,17,15,14,17,16,12],
[15,14,0,10,12,18,15,16],
[18,16,21,0,20,18,15,17],
[19,17,19,11,0,20,19,18],
[14,14,13,13,11,0,9,12],
[17,15,16,16,12,22,0,13],
[20,19,15,14,13,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,16,16,14,12,20],
[14,0,17,16,17,20,21,23],
[16,14,0,15,14,19,19,25],
[15,15,16,0,16,18,14,19],
[15,14,17,15,0,14,14,23],
[17,11,12,13,17,0,13,19],
[19,10,12,17,17,18,0,19],
[11,8,6,12,8,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,19,10,14,12,13,15],
[19,0,13,12,8,17,15,14],
[12,18,0,18,15,17,19,19],
[21,19,13,0,16,20,17,20],
[17,23,16,15,0,22,18,19],
[19,14,14,11,9,0,11,15],
[18,16,12,14,13,20,0,17],
[16,17,12,11,12,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,13,15,16,15,15],
[18,0,15,17,17,20,19,17],
[18,16,0,16,15,17,16,12],
[18,14,15,0,20,16,15,17],
[16,14,16,11,0,15,15,13],
[15,11,14,15,16,0,16,13],
[16,12,15,16,16,15,0,13],
[16,14,19,14,18,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,15,16,17,14,13],
[16,0,13,15,17,13,17,12],
[15,18,0,12,12,12,14,9],
[16,16,19,0,15,14,14,17],
[15,14,19,16,0,14,15,15],
[14,18,19,17,17,0,18,12],
[17,14,17,17,16,13,0,16],
[18,19,22,14,16,19,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,18,14,13,13,16,21],
[20,0,14,19,15,12,15,18],
[13,17,0,16,14,14,16,18],
[17,12,15,0,13,13,15,20],
[18,16,17,18,0,11,12,21],
[18,19,17,18,20,0,15,18],
[15,16,15,16,19,16,0,18],
[10,13,13,11,10,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,18,11,21,14,18,17],
[9,0,18,8,16,16,13,11],
[13,13,0,7,15,17,11,13],
[20,23,24,0,21,22,15,18],
[10,15,16,10,0,10,11,11],
[17,15,14,9,21,0,12,13],
[13,18,20,16,20,19,0,14],
[14,20,18,13,20,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,15,23,14,14,19],
[19,0,19,16,18,19,13,22],
[17,12,0,21,18,16,14,22],
[16,15,10,0,14,17,15,24],
[8,13,13,17,0,17,11,22],
[17,12,15,14,14,0,21,22],
[17,18,17,16,20,10,0,22],
[12,9,9,7,9,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,14,17,12,12,17],
[17,0,17,13,22,19,18,21],
[16,14,0,15,18,12,16,18],
[17,18,16,0,17,14,15,18],
[14,9,13,14,0,12,14,19],
[19,12,19,17,19,0,15,24],
[19,13,15,16,17,16,0,21],
[14,10,13,13,12,7,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,11,16,10,15,15],
[19,0,15,12,14,13,20,19],
[20,16,0,17,19,15,17,21],
[20,19,14,0,21,17,18,24],
[15,17,12,10,0,9,16,17],
[21,18,16,14,22,0,18,21],
[16,11,14,13,15,13,0,17],
[16,12,10,7,14,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,20,10,11,18,14],
[12,0,13,9,18,9,13,9],
[17,18,0,18,17,9,16,14],
[11,22,13,0,17,7,9,13],
[21,13,14,14,0,13,8,10],
[20,22,22,24,18,0,14,22],
[13,18,15,22,23,17,0,14],
[17,22,17,18,21,9,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,17,11,11,7,12,12],
[20,0,18,14,22,15,15,16],
[14,13,0,9,18,15,12,11],
[20,17,22,0,19,19,17,14],
[20,9,13,12,0,17,18,13],
[24,16,16,12,14,0,16,14],
[19,16,19,14,13,15,0,14],
[19,15,20,17,18,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,7,18,11,12,17,6],
[10,0,11,22,12,9,23,10],
[24,20,0,25,12,21,22,16],
[13,9,6,0,9,7,13,7],
[20,19,19,22,0,16,19,15],
[19,22,10,24,15,0,21,18],
[14,8,9,18,12,10,0,13],
[25,21,15,24,16,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,27,12,13,10,17,22],
[20,0,22,14,17,16,23,20],
[4,9,0,10,10,5,13,15],
[19,17,21,0,14,18,20,16],
[18,14,21,17,0,15,18,21],
[21,15,26,13,16,0,18,23],
[14,8,18,11,13,13,0,13],
[9,11,16,15,10,8,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,18,15,17,15,13],
[14,0,18,16,12,18,18,16],
[12,13,0,15,14,17,17,16],
[13,15,16,0,14,16,18,17],
[16,19,17,17,0,20,17,14],
[14,13,14,15,11,0,15,15],
[16,13,14,13,14,16,0,14],
[18,15,15,14,17,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,22,13,15,15,13,17],
[18,0,21,18,17,16,15,20],
[9,10,0,8,17,14,14,14],
[18,13,23,0,15,20,16,15],
[16,14,14,16,0,12,13,15],
[16,15,17,11,19,0,11,12],
[18,16,17,15,18,20,0,17],
[14,11,17,16,16,19,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,24,21,19,17,24,15],
[16,0,23,14,17,14,18,14],
[7,8,0,17,19,9,16,17],
[10,17,14,0,16,11,20,11],
[12,14,12,15,0,13,19,14],
[14,17,22,20,18,0,18,16],
[7,13,15,11,12,13,0,14],
[16,17,14,20,17,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,22,17,17,16,19,15],
[13,0,15,15,17,13,15,15],
[9,16,0,12,18,13,11,15],
[14,16,19,0,15,13,16,16],
[14,14,13,16,0,16,14,11],
[15,18,18,18,15,0,12,16],
[12,16,20,15,17,19,0,14],
[16,16,16,15,20,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,21,11,11,18,12],
[18,0,21,14,23,18,23,20],
[21,10,0,17,17,19,16,18],
[10,17,14,0,15,16,21,17],
[20,8,14,16,0,15,17,16],
[20,13,12,15,16,0,23,17],
[13,8,15,10,14,8,0,5],
[19,11,13,14,15,14,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,13,7,14,20,13,13],
[31,0,18,20,14,20,18,19],
[18,13,0,13,13,7,6,13],
[24,11,18,0,12,13,18,11],
[17,17,18,19,0,20,11,17],
[11,11,24,18,11,0,11,11],
[18,13,25,13,20,20,0,13],
[18,12,18,20,14,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,13,10,26,15,10],
[17,0,11,13,12,18,15,12],
[16,20,0,16,14,20,21,13],
[18,18,15,0,23,25,19,17],
[21,19,17,8,0,19,9,10],
[5,13,11,6,12,0,8,6],
[16,16,10,12,22,23,0,18],
[21,19,18,14,21,25,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,22,9,14,22,22,16],
[8,0,18,8,12,25,22,12],
[9,13,0,5,9,17,17,16],
[22,23,26,0,13,21,28,17],
[17,19,22,18,0,24,19,13],
[9,6,14,10,7,0,11,12],
[9,9,14,3,12,20,0,12],
[15,19,15,14,18,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,7,22,16,23,23,16],
[8,0,15,8,9,0,17,9],
[24,16,0,15,16,16,24,16],
[9,23,16,0,16,16,16,9],
[15,22,15,15,0,15,15,8],
[8,31,15,15,16,0,24,9],
[8,14,7,15,16,7,0,9],
[15,22,15,22,23,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,14,12,16,23,23],
[19,0,13,18,19,11,24,26],
[18,18,0,15,15,14,28,23],
[17,13,16,0,18,17,28,22],
[19,12,16,13,0,11,25,20],
[15,20,17,14,20,0,22,20],
[8,7,3,3,6,9,0,12],
[8,5,8,9,11,11,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,19,15,17,13,20,19],
[17,0,17,13,19,20,18,19],
[12,14,0,14,15,13,11,22],
[16,18,17,0,17,15,18,20],
[14,12,16,14,0,14,18,18],
[18,11,18,16,17,0,20,21],
[11,13,20,13,13,11,0,19],
[12,12,9,11,13,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,28,14,24,20,27,22],
[10,0,24,12,20,11,15,16],
[3,7,0,9,12,13,3,8],
[17,19,22,0,17,13,17,16],
[7,11,19,14,0,11,15,13],
[11,20,18,18,20,0,13,7],
[4,16,28,14,16,18,0,15],
[9,15,23,15,18,24,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,15,18,18,13,20],
[16,0,18,17,17,19,10,21],
[19,13,0,21,18,21,15,21],
[16,14,10,0,17,13,16,17],
[13,14,13,14,0,20,11,20],
[13,12,10,18,11,0,12,15],
[18,21,16,15,20,19,0,20],
[11,10,10,14,11,16,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,13,12,13,15,10],
[12,0,12,10,13,12,9,10],
[17,19,0,10,11,13,11,9],
[18,21,21,0,15,19,18,14],
[19,18,20,16,0,19,14,16],
[18,19,18,12,12,0,14,10],
[16,22,20,13,17,17,0,15],
[21,21,22,17,15,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,19,14,17,16,18],
[17,0,16,19,13,15,17,15],
[13,15,0,18,12,17,15,17],
[12,12,13,0,13,14,12,10],
[17,18,19,18,0,17,15,14],
[14,16,14,17,14,0,15,14],
[15,14,16,19,16,16,0,16],
[13,16,14,21,17,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,23,16,20,13,20],
[15,0,19,20,24,20,18,23],
[14,12,0,14,17,17,12,14],
[8,11,17,0,14,13,14,12],
[15,7,14,17,0,20,8,17],
[11,11,14,18,11,0,14,16],
[18,13,19,17,23,17,0,17],
[11,8,17,19,14,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,22,15,15,26,19,19],
[13,0,24,19,24,21,23,28],
[9,7,0,14,19,17,9,14],
[16,12,17,0,23,26,16,21],
[16,7,12,8,0,16,8,13],
[5,10,14,5,15,0,14,14],
[12,8,22,15,23,17,0,31],
[12,3,17,10,18,17,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,12,17,19,24,14],
[17,0,18,20,20,14,17,14],
[15,13,0,20,27,17,24,17],
[19,11,11,0,20,17,24,7],
[14,11,4,11,0,19,14,9],
[12,17,14,14,12,0,12,14],
[7,14,7,7,17,19,0,14],
[17,17,14,24,22,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,16,15,14,16,14],
[11,0,16,12,10,11,14,12],
[10,15,0,13,12,12,15,13],
[15,19,18,0,16,12,12,11],
[16,21,19,15,0,19,17,17],
[17,20,19,19,12,0,15,15],
[15,17,16,19,14,16,0,17],
[17,19,18,20,14,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,9,9,9,9,9],
[22,0,16,14,16,7,31,7],
[22,15,0,15,8,15,22,15],
[22,17,16,0,16,15,24,7],
[22,15,23,15,0,22,22,22],
[22,24,16,16,9,0,31,16],
[22,0,9,7,9,0,0,7],
[22,24,16,24,9,15,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,31,7,19,7,19,19],
[12,0,24,0,31,7,24,12],
[0,7,0,7,7,7,7,7],
[24,31,24,0,31,7,24,19],
[12,0,24,0,0,0,12,12],
[24,24,24,24,31,0,24,12],
[12,7,24,7,19,7,0,19],
[12,19,24,12,19,19,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,15,16,18,18,17,11],
[9,0,16,8,8,13,14,8],
[16,15,0,15,12,17,14,10],
[15,23,16,0,23,23,19,15],
[13,23,19,8,0,17,14,12],
[13,18,14,8,14,0,17,7],
[14,17,17,12,17,14,0,17],
[20,23,21,16,19,24,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,7,19,7,8,9,8],
[17,0,19,22,13,16,15,18],
[24,12,0,23,13,14,12,12],
[12,9,8,0,10,13,10,7],
[24,18,18,21,0,20,19,14],
[23,15,17,18,11,0,15,15],
[22,16,19,21,12,16,0,10],
[23,13,19,24,17,16,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,17,12,13,20,11,11],
[21,0,23,16,17,24,20,11],
[14,8,0,8,9,13,12,11],
[19,15,23,0,20,22,13,18],
[18,14,22,11,0,15,16,17],
[11,7,18,9,16,0,9,14],
[20,11,19,18,15,22,0,16],
[20,20,20,13,14,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,21,17,17,25,18],
[19,0,11,24,16,9,16,14],
[15,20,0,20,12,9,20,19],
[10,7,11,0,14,4,8,14],
[14,15,19,17,0,13,25,14],
[14,22,22,27,18,0,22,14],
[6,15,11,23,6,9,0,14],
[13,17,12,17,17,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,9,14,9,13,10],
[21,0,19,18,16,19,15,11],
[18,12,0,16,16,15,11,8],
[22,13,15,0,8,11,16,17],
[17,15,15,23,0,15,11,9],
[22,12,16,20,16,0,12,13],
[18,16,20,15,20,19,0,15],
[21,20,23,14,22,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,11,10,10,11,5],
[20,0,17,17,12,21,17,16],
[24,14,0,15,17,20,13,15],
[20,14,16,0,17,15,17,10],
[21,19,14,14,0,13,12,13],
[21,10,11,16,18,0,15,10],
[20,14,18,14,19,16,0,11],
[26,15,16,21,18,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,8,7,0,16,16,0],
[16,0,8,0,0,16,16,0],
[23,23,0,15,23,23,24,23],
[24,31,16,0,8,24,16,8],
[31,31,8,23,0,31,24,23],
[15,15,8,7,0,0,16,0],
[15,15,7,15,7,15,0,7],
[31,31,8,23,8,31,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,10,0,0,0,0,20],
[31,0,21,0,0,11,11,20],
[21,10,0,0,0,11,21,10],
[31,31,31,0,10,21,31,20],
[31,31,31,21,0,11,31,20],
[31,20,20,10,20,0,20,20],
[31,20,10,0,0,11,0,20],
[11,11,21,11,11,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,8,8,0,20,0],
[20,0,12,8,8,0,20,20],
[19,19,0,8,8,8,20,8],
[23,23,23,0,11,11,31,23],
[23,23,23,20,0,23,31,12],
[31,31,23,20,8,0,20,20],
[11,11,11,0,0,11,0,0],
[31,11,23,8,19,11,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,16,23,17,16,15],
[15,0,13,18,21,14,12,12],
[14,18,0,16,22,14,16,17],
[15,13,15,0,18,18,19,14],
[8,10,9,13,0,14,10,12],
[14,17,17,13,17,0,11,18],
[15,19,15,12,21,20,0,17],
[16,19,14,17,19,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,15,20,24,16,15],
[15,0,19,15,18,22,15,18],
[20,12,0,10,12,23,11,15],
[16,16,21,0,16,23,8,16],
[11,13,19,15,0,24,11,15],
[7,9,8,8,7,0,0,8],
[15,16,20,23,20,31,0,23],
[16,13,16,15,16,23,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,8,15,8,18,22,9],
[9,0,12,14,10,14,19,9],
[23,19,0,15,5,16,17,12],
[16,17,16,0,16,14,20,18],
[23,21,26,15,0,16,26,16],
[13,17,15,17,15,0,26,13],
[9,12,14,11,5,5,0,8],
[22,22,19,13,15,18,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,18,13,19,18,16],
[14,0,13,11,13,14,13,9],
[13,18,0,13,18,15,17,17],
[13,20,18,0,16,20,23,18],
[18,18,13,15,0,17,15,16],
[12,17,16,11,14,0,17,17],
[13,18,14,8,16,14,0,16],
[15,22,14,13,15,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,15,16,16,16,17,21],
[11,0,14,20,21,20,18,19],
[16,17,0,13,19,16,14,19],
[15,11,18,0,15,14,18,15],
[15,10,12,16,0,15,17,17],
[15,11,15,17,16,0,19,18],
[14,13,17,13,14,12,0,16],
[10,12,12,16,14,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,13,25,22,19,18],
[14,0,11,11,21,15,11,9],
[13,20,0,17,22,18,15,17],
[18,20,14,0,23,18,18,22],
[6,10,9,8,0,16,13,10],
[9,16,13,13,15,0,14,15],
[12,20,16,13,18,17,0,14],
[13,22,14,9,21,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,19,14,17,18,21,17],
[10,0,10,12,14,15,18,14],
[12,21,0,16,19,15,20,17],
[17,19,15,0,21,15,20,15],
[14,17,12,10,0,12,19,13],
[13,16,16,16,19,0,22,16],
[10,13,11,11,12,9,0,11],
[14,17,14,16,18,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,19,20,20,0,13],
[18,0,13,6,20,13,0,13],
[18,18,0,19,19,13,7,13],
[12,25,12,0,19,12,12,18],
[11,11,12,12,0,18,5,6],
[11,18,18,19,13,0,5,13],
[31,31,24,19,26,26,0,13],
[18,18,18,13,25,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,11,12,16,15,11],
[19,0,22,17,17,21,15,14],
[18,9,0,14,7,19,14,13],
[20,14,17,0,16,21,13,16],
[19,14,24,15,0,23,15,15],
[15,10,12,10,8,0,8,12],
[16,16,17,18,16,23,0,14],
[20,17,18,15,16,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,12,11,14,14,15],
[22,0,15,16,16,13,16,14],
[22,16,0,8,13,17,15,20],
[19,15,23,0,18,16,16,21],
[20,15,18,13,0,18,17,17],
[17,18,14,15,13,0,12,16],
[17,15,16,15,14,19,0,18],
[16,17,11,10,14,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,14,17,21,20,14],
[14,0,20,16,13,17,14,18],
[15,11,0,14,12,22,15,7],
[17,15,17,0,12,18,16,17],
[14,18,19,19,0,23,13,18],
[10,14,9,13,8,0,12,11],
[11,17,16,15,18,19,0,14],
[17,13,24,14,13,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,20,19,17,19,15,20],
[14,0,19,21,14,15,17,23],
[11,12,0,17,15,12,11,19],
[12,10,14,0,13,13,11,16],
[14,17,16,18,0,18,14,20],
[12,16,19,18,13,0,16,20],
[16,14,20,20,17,15,0,21],
[11,8,12,15,11,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,20,14,20,18,23],
[10,0,12,14,7,18,12,14],
[6,19,0,14,9,19,12,11],
[11,17,17,0,16,17,20,17],
[17,24,22,15,0,25,17,21],
[11,13,12,14,6,0,11,15],
[13,19,19,11,14,20,0,18],
[8,17,20,14,10,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,17,16,16,17,17],
[18,0,14,15,12,14,14,15],
[14,17,0,18,18,15,18,15],
[14,16,13,0,14,16,13,11],
[15,19,13,17,0,15,16,13],
[15,17,16,15,16,0,16,16],
[14,17,13,18,15,15,0,13],
[14,16,16,20,18,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,23,10,8,5,11,10],
[21,0,24,17,14,13,13,24],
[8,7,0,5,8,3,5,5],
[21,14,26,0,14,9,11,18],
[23,17,23,17,0,13,11,15],
[26,18,28,22,18,0,13,18],
[20,18,26,20,20,18,0,15],
[21,7,26,13,16,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,15,14,14,19,14],
[16,0,17,18,14,18,21,18],
[18,14,0,15,14,17,14,16],
[16,13,16,0,16,18,16,21],
[17,17,17,15,0,18,19,22],
[17,13,14,13,13,0,13,19],
[12,10,17,15,12,18,0,16],
[17,13,15,10,9,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,19,17,13,16,15],
[16,0,14,17,18,16,19,16],
[19,17,0,15,14,15,18,15],
[12,14,16,0,14,16,14,14],
[14,13,17,17,0,15,18,18],
[18,15,16,15,16,0,16,19],
[15,12,13,17,13,15,0,15],
[16,15,16,17,13,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,12,15,16,15,20],
[16,0,17,17,19,18,14,19],
[15,14,0,15,21,19,19,22],
[19,14,16,0,16,17,15,16],
[16,12,10,15,0,14,14,16],
[15,13,12,14,17,0,19,20],
[16,17,12,16,17,12,0,22],
[11,12,9,15,15,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,16,14,17,15,16],
[16,0,17,16,16,20,15,21],
[12,14,0,13,13,17,9,19],
[15,15,18,0,11,19,13,14],
[17,15,18,20,0,20,16,18],
[14,11,14,12,11,0,13,17],
[16,16,22,18,15,18,0,19],
[15,10,12,17,13,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,13,19,14,15,16],
[14,0,14,11,14,14,13,12],
[12,17,0,11,12,8,12,9],
[18,20,20,0,19,16,15,17],
[12,17,19,12,0,17,15,12],
[17,17,23,15,14,0,16,15],
[16,18,19,16,16,15,0,14],
[15,19,22,14,19,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,21,19,18,14,24],
[11,0,14,13,14,15,12,11],
[10,17,0,14,15,16,13,15],
[10,18,17,0,22,19,18,18],
[12,17,16,9,0,14,13,14],
[13,16,15,12,17,0,12,14],
[17,19,18,13,18,19,0,16],
[7,20,16,13,17,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,15,15,21,15,12],
[14,0,11,12,12,16,15,15],
[17,20,0,17,16,20,13,16],
[16,19,14,0,18,21,17,16],
[16,19,15,13,0,14,18,21],
[10,15,11,10,17,0,11,14],
[16,16,18,14,13,20,0,14],
[19,16,15,15,10,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,16,12,12,19,7],
[19,0,16,20,13,12,16,23],
[24,15,0,20,24,24,17,27],
[15,11,11,0,11,15,19,15],
[19,18,7,20,0,15,12,23],
[19,19,7,16,16,0,12,11],
[12,15,14,12,19,19,0,15],
[24,8,4,16,8,20,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,17,14,12,11,15],
[18,0,18,19,15,19,18,18],
[14,13,0,22,16,16,15,15],
[14,12,9,0,11,11,12,11],
[17,16,15,20,0,12,16,16],
[19,12,15,20,19,0,16,15],
[20,13,16,19,15,15,0,15],
[16,13,16,20,15,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,11,16,13,9,10],
[20,0,13,13,16,17,16,16],
[19,18,0,19,19,17,16,15],
[20,18,12,0,18,17,14,14],
[15,15,12,13,0,12,10,11],
[18,14,14,14,19,0,12,10],
[22,15,15,17,21,19,0,15],
[21,15,16,17,20,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,9,14,12,12,13],
[18,0,10,17,13,12,16,12],
[19,21,0,15,16,10,19,13],
[22,14,16,0,14,15,18,17],
[17,18,15,17,0,14,17,11],
[19,19,21,16,17,0,23,14],
[19,15,12,13,14,8,0,13],
[18,19,18,14,20,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,10,21,31,31,20,10],
[11,0,10,21,31,21,0,21],
[21,21,0,21,31,21,21,11],
[10,10,10,0,20,31,10,10],
[0,0,0,11,0,11,0,0],
[0,10,10,0,20,0,10,0],
[11,31,10,21,31,21,0,21],
[21,10,20,21,31,31,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,10,11,5,18,22],
[17,0,19,10,13,7,16,22],
[15,12,0,13,14,9,15,19],
[21,21,18,0,18,14,19,21],
[20,18,17,13,0,18,22,23],
[26,24,22,17,13,0,18,25],
[13,15,16,12,9,13,0,20],
[9,9,12,10,8,6,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,22,13,15,18,17,18],
[14,0,17,19,19,19,20,14],
[9,14,0,8,9,12,15,10],
[18,12,23,0,21,16,19,14],
[16,12,22,10,0,18,14,16],
[13,12,19,15,13,0,17,15],
[14,11,16,12,17,14,0,9],
[13,17,21,17,15,16,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,13,16,18,18,21],
[9,0,19,12,17,10,13,14],
[7,12,0,10,12,13,17,18],
[18,19,21,0,15,18,18,17],
[15,14,19,16,0,15,17,16],
[13,21,18,13,16,0,13,22],
[13,18,14,13,14,18,0,16],
[10,17,13,14,15,9,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,12,21,17,9,18,14],
[10,0,15,17,16,6,15,11],
[19,16,0,23,19,11,12,14],
[10,14,8,0,11,8,6,8],
[14,15,12,20,0,12,18,14],
[22,25,20,23,19,0,17,15],
[13,16,19,25,13,14,0,17],
[17,20,17,23,17,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,19,22,18,15,16],
[19,0,20,23,21,22,13,14],
[17,11,0,20,19,15,13,11],
[12,8,11,0,15,14,10,7],
[9,10,12,16,0,14,10,7],
[13,9,16,17,17,0,11,10],
[16,18,18,21,21,20,0,15],
[15,17,20,24,24,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,15,16,17,17,17],
[14,0,16,17,14,18,13,14],
[18,15,0,15,18,17,15,17],
[16,14,16,0,14,15,14,18],
[15,17,13,17,0,18,15,15],
[14,13,14,16,13,0,14,14],
[14,18,16,17,16,17,0,15],
[14,17,14,13,16,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,16,17,8,11,12],
[17,0,22,12,15,19,19,14],
[18,9,0,16,12,16,10,17],
[15,19,15,0,14,11,18,14],
[14,16,19,17,0,12,17,15],
[23,12,15,20,19,0,15,14],
[20,12,21,13,14,16,0,15],
[19,17,14,17,16,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,16,15,15,17,20],
[19,0,18,15,18,22,18,23],
[15,13,0,17,17,18,20,20],
[15,16,14,0,14,16,16,13],
[16,13,14,17,0,16,20,20],
[16,9,13,15,15,0,18,18],
[14,13,11,15,11,13,0,12],
[11,8,11,18,11,13,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,21,24,18,17,21,21],
[16,0,8,18,11,19,14,14],
[10,23,0,16,17,17,17,17],
[7,13,15,0,16,8,18,16],
[13,20,14,15,0,11,16,23],
[14,12,14,23,20,0,23,18],
[10,17,14,13,15,8,0,23],
[10,17,14,15,8,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,12,14,17,23,12,22],
[9,0,14,21,17,20,17,17],
[19,17,0,18,17,18,15,26],
[17,10,13,0,15,22,19,17],
[14,14,14,16,0,18,16,17],
[8,11,13,9,13,0,13,12],
[19,14,16,12,15,18,0,20],
[9,14,5,14,14,19,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,16,10,14,12,12],
[21,0,22,15,18,16,21,18],
[15,9,0,12,10,18,15,14],
[15,16,19,0,15,16,19,18],
[21,13,21,16,0,17,19,19],
[17,15,13,15,14,0,18,16],
[19,10,16,12,12,13,0,14],
[19,13,17,13,12,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,14,14,13,14,19],
[16,0,18,13,18,19,21,17],
[12,13,0,15,13,13,16,18],
[17,18,16,0,14,15,18,16],
[17,13,18,17,0,17,17,18],
[18,12,18,16,14,0,14,17],
[17,10,15,13,14,17,0,15],
[12,14,13,15,13,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,25,19,22,17,13,17],
[16,0,18,23,19,10,8,14],
[6,13,0,15,11,11,11,14],
[12,8,16,0,17,10,9,11],
[9,12,20,14,0,9,10,12],
[14,21,20,21,22,0,8,18],
[18,23,20,22,21,23,0,10],
[14,17,17,20,19,13,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,16,18,16,17,14,16],
[10,0,10,10,8,11,13,13],
[15,21,0,19,16,14,17,21],
[13,21,12,0,16,19,12,20],
[15,23,15,15,0,16,18,16],
[14,20,17,12,15,0,21,20],
[17,18,14,19,13,10,0,20],
[15,18,10,11,15,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,21,21,18,19,19],
[16,0,22,19,16,14,20,21],
[9,9,0,20,12,12,15,13],
[10,12,11,0,16,13,14,12],
[10,15,19,15,0,12,13,16],
[13,17,19,18,19,0,20,23],
[12,11,16,17,18,11,0,14],
[12,10,18,19,15,8,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,18,22,15,16,23],
[16,0,13,19,20,12,16,17],
[16,18,0,16,26,16,15,19],
[13,12,15,0,17,15,16,17],
[9,11,5,14,0,9,9,17],
[16,19,15,16,22,0,14,19],
[15,15,16,15,22,17,0,13],
[8,14,12,14,14,12,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,17,19,10,16,12,16],
[20,0,15,21,17,14,19,18],
[14,16,0,18,17,16,18,16],
[12,10,13,0,10,12,14,15],
[21,14,14,21,0,13,13,21],
[15,17,15,19,18,0,13,16],
[19,12,13,17,18,18,0,17],
[15,13,15,16,10,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,18,20,21,15,17],
[14,0,10,12,15,9,13,14],
[12,21,0,16,15,14,18,14],
[13,19,15,0,23,18,19,18],
[11,16,16,8,0,16,16,17],
[10,22,17,13,15,0,19,18],
[16,18,13,12,15,12,0,13],
[14,17,17,13,14,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,27,12,16,17,17,23],
[20,0,20,18,16,12,12,18],
[4,11,0,10,8,9,8,19],
[19,13,21,0,13,12,13,20],
[15,15,23,18,0,20,14,24],
[14,19,22,19,11,0,14,24],
[14,19,23,18,17,17,0,23],
[8,13,12,11,7,7,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,18,7,27,15,24,19],
[20,0,15,17,23,19,24,20],
[13,16,0,16,24,15,20,20],
[24,14,15,0,27,19,24,20],
[4,8,7,4,0,7,20,7],
[16,12,16,12,24,0,20,23],
[7,7,11,7,11,11,0,15],
[12,11,11,11,24,8,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,21,12,12,12,22],
[21,0,22,21,12,12,12,12],
[21,9,0,21,21,21,12,21],
[10,10,10,0,0,0,12,10],
[19,19,10,31,0,12,22,31],
[19,19,10,31,19,0,22,19],
[19,19,19,19,9,9,0,19],
[9,19,10,21,0,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,12,16,13,17,14,18],
[10,0,10,9,10,18,11,11],
[19,21,0,11,13,17,11,19],
[15,22,20,0,18,20,17,19],
[18,21,18,13,0,20,22,19],
[14,13,14,11,11,0,11,14],
[17,20,20,14,9,20,0,18],
[13,20,12,12,12,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,17,13,17,15,15],
[14,0,16,13,13,9,13,13],
[14,15,0,17,13,13,12,13],
[14,18,14,0,12,8,10,11],
[18,18,18,19,0,15,14,16],
[14,22,18,23,16,0,16,19],
[16,18,19,21,17,15,0,18],
[16,18,18,20,15,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,15,18,17,21,13],
[20,0,14,20,17,19,18,16],
[20,17,0,22,19,15,21,14],
[16,11,9,0,19,15,18,13],
[13,14,12,12,0,14,16,16],
[14,12,16,16,17,0,15,11],
[10,13,10,13,15,16,0,14],
[18,15,17,18,15,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,22,20,21,14,18,25],
[19,0,20,29,26,21,12,25],
[9,11,0,24,19,14,21,25],
[11,2,7,0,9,10,6,18],
[10,5,12,22,0,15,10,12],
[17,10,17,21,16,0,12,21],
[13,19,10,25,21,19,0,24],
[6,6,6,13,19,10,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,14,15,16,15,18],
[14,0,14,9,14,19,14,16],
[15,17,0,16,11,20,15,18],
[17,22,15,0,18,23,17,18],
[16,17,20,13,0,25,14,18],
[15,12,11,8,6,0,11,17],
[16,17,16,14,17,20,0,21],
[13,15,13,13,13,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,15,15,11,16,11],
[13,0,17,16,13,16,16,12],
[15,14,0,15,11,16,18,15],
[16,15,16,0,12,12,13,14],
[16,18,20,19,0,19,17,14],
[20,15,15,19,12,0,13,17],
[15,15,13,18,14,18,0,13],
[20,19,16,17,17,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,20,20,20,31,31,31],
[21,0,10,20,20,21,21,21],
[11,21,0,31,31,21,21,21],
[11,11,0,0,21,11,11,11],
[11,11,0,10,0,11,11,11],
[0,10,10,20,20,0,0,0],
[0,10,10,20,20,31,0,10],
[0,10,10,20,20,31,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,14,16,15,10,21],
[16,0,11,15,22,12,11,22],
[15,20,0,14,20,15,0,11],
[17,16,17,0,22,17,11,11],
[15,9,11,9,0,15,11,5],
[16,19,16,14,16,0,5,10],
[21,20,31,20,20,26,0,11],
[10,9,20,20,26,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,23,21,15,16,15],
[9,0,24,20,20,16,20,14],
[8,7,0,11,21,10,10,10],
[8,11,20,0,17,15,11,8],
[10,11,10,14,0,19,15,14],
[16,15,21,16,12,0,19,16],
[15,11,21,20,16,12,0,14],
[16,17,21,23,17,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,16,19,22,29,10,17],
[7,0,11,14,10,15,6,15],
[15,20,0,11,18,24,16,15],
[12,17,20,0,13,21,13,19],
[9,21,13,18,0,22,12,21],
[2,16,7,10,9,0,5,12],
[21,25,15,18,19,26,0,23],
[14,16,16,12,10,19,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,12,11,13,14,12],
[19,0,15,12,15,17,12,9],
[21,16,0,17,21,18,15,15],
[19,19,14,0,18,19,18,14],
[20,16,10,13,0,12,16,10],
[18,14,13,12,19,0,14,14],
[17,19,16,13,15,17,0,17],
[19,22,16,17,21,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,15,18,19,18,22,18],
[12,0,22,17,18,17,25,15],
[16,9,0,15,21,16,22,12],
[13,14,16,0,18,12,19,12],
[12,13,10,13,0,12,17,10],
[13,14,15,19,19,0,22,17],
[9,6,9,12,14,9,0,8],
[13,16,19,19,21,14,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,18,19,16,16,23],
[14,0,15,14,15,17,15,19],
[16,16,0,18,17,15,15,20],
[13,17,13,0,19,13,14,18],
[12,16,14,12,0,15,12,18],
[15,14,16,18,16,0,16,21],
[15,16,16,17,19,15,0,19],
[8,12,11,13,13,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,12,12,13,11,16],
[11,0,18,18,15,7,16,11],
[7,13,0,13,8,7,8,4],
[19,13,18,0,8,15,17,16],
[19,16,23,23,0,12,19,18],
[18,24,24,16,19,0,21,14],
[20,15,23,14,12,10,0,16],
[15,20,27,15,13,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,11,13,11,7,4,9],
[28,0,14,17,15,14,14,19],
[20,17,0,13,16,14,8,13],
[18,14,18,0,12,14,15,20],
[20,16,15,19,0,15,15,24],
[24,17,17,17,16,0,12,13],
[27,17,23,16,16,19,0,9],
[22,12,18,11,7,18,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,9,11,16,9,9],
[23,0,22,20,12,21,18,18],
[23,9,0,16,14,15,14,13],
[22,11,15,0,11,15,11,9],
[20,19,17,20,0,16,16,14],
[15,10,16,16,15,0,14,12],
[22,13,17,20,15,17,0,13],
[22,13,18,22,17,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,17,20,13,16,19,20],
[11,0,13,17,13,13,9,7],
[14,18,0,18,12,13,17,10],
[11,14,13,0,18,16,15,14],
[18,18,19,13,0,14,16,17],
[15,18,18,15,17,0,13,14],
[12,22,14,16,15,18,0,11],
[11,24,21,17,14,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,18,19,17,17,14],
[16,0,16,18,17,15,14,12],
[13,15,0,14,15,10,10,11],
[13,13,17,0,14,12,11,11],
[12,14,16,17,0,15,17,15],
[14,16,21,19,16,0,15,16],
[14,17,21,20,14,16,0,17],
[17,19,20,20,16,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,12,15,13,18,21],
[15,0,17,14,14,13,14,17],
[11,14,0,15,18,17,14,16],
[19,17,16,0,9,15,19,14],
[16,17,13,22,0,16,15,20],
[18,18,14,16,15,0,18,21],
[13,17,17,12,16,13,0,16],
[10,14,15,17,11,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,8,9,18,18,17],
[22,0,15,16,16,24,20,13],
[20,16,0,13,13,24,25,7],
[23,15,18,0,12,21,18,15],
[22,15,18,19,0,22,18,19],
[13,7,7,10,9,0,16,6],
[13,11,6,13,13,15,0,8],
[14,18,24,16,12,25,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,20,18,16,14,20,14],
[16,0,17,18,18,20,13,17],
[11,14,0,13,15,9,15,11],
[13,13,18,0,16,15,17,15],
[15,13,16,15,0,12,17,13],
[17,11,22,16,19,0,15,12],
[11,18,16,14,14,16,0,12],
[17,14,20,16,18,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,26,24,23,17,12],
[12,0,13,10,14,15,10,11],
[9,18,0,12,13,14,12,11],
[5,21,19,0,14,14,7,13],
[7,17,18,17,0,11,6,15],
[8,16,17,17,20,0,12,15],
[14,21,19,24,25,19,0,21],
[19,20,20,18,16,16,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,18,16,17,15,19,21],
[11,0,6,8,15,10,9,8],
[13,25,0,18,12,18,16,16],
[15,23,13,0,17,15,13,18],
[14,16,19,14,0,16,19,19],
[16,21,13,16,15,0,8,13],
[12,22,15,18,12,23,0,16],
[10,23,15,13,12,18,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,15,15,20,20,16],
[14,0,17,14,10,18,20,12],
[15,14,0,16,13,15,20,11],
[16,17,15,0,18,12,17,17],
[16,21,18,13,0,15,17,11],
[11,13,16,19,16,0,16,16],
[11,11,11,14,14,15,0,13],
[15,19,20,14,20,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,12,13,11,16,11],
[13,0,17,11,14,11,8,12],
[19,14,0,11,17,18,13,15],
[19,20,20,0,19,20,15,17],
[18,17,14,12,0,16,10,14],
[20,20,13,11,15,0,13,10],
[15,23,18,16,21,18,0,20],
[20,19,16,14,17,21,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,19,11,19,16,19],
[15,0,15,27,17,22,16,21],
[17,16,0,29,15,15,14,21],
[12,4,2,0,6,2,6,10],
[20,14,16,25,0,21,7,17],
[12,9,16,29,10,0,11,16],
[15,15,17,25,24,20,0,15],
[12,10,10,21,14,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,22,15,24,20,21,17],
[8,0,20,9,10,16,17,13],
[9,11,0,11,9,6,16,11],
[16,22,20,0,14,17,21,17],
[7,21,22,17,0,11,20,15],
[11,15,25,14,20,0,22,12],
[10,14,15,10,11,9,0,13],
[14,18,20,14,16,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,16,19,24,13,14],
[9,0,16,18,12,26,17,16],
[9,15,0,15,13,23,13,16],
[15,13,16,0,15,16,15,17],
[12,19,18,16,0,22,14,10],
[7,5,8,15,9,0,12,10],
[18,14,18,16,17,19,0,21],
[17,15,15,14,21,21,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,16,24,20,15,28,20],
[4,0,12,16,20,12,12,4],
[15,19,0,19,15,19,19,15],
[7,15,12,0,16,11,23,0],
[11,11,16,15,0,15,15,7],
[16,19,12,20,16,0,24,16],
[3,19,12,8,16,7,0,0],
[11,27,16,31,24,15,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,16,17,15,19,17],
[18,0,14,18,14,15,17,11],
[14,17,0,17,21,15,22,13],
[15,13,14,0,17,19,16,16],
[14,17,10,14,0,20,15,11],
[16,16,16,12,11,0,16,8],
[12,14,9,15,16,15,0,12],
[14,20,18,15,20,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,18,19,17,16,20],
[14,0,14,17,17,19,11,16],
[17,17,0,17,17,12,16,15],
[13,14,14,0,12,12,14,15],
[12,14,14,19,0,16,12,13],
[14,12,19,19,15,0,17,17],
[15,20,15,17,19,14,0,22],
[11,15,16,16,18,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,16,19,14,19,13,16],
[8,0,12,14,17,15,14,1],
[15,19,0,17,13,25,15,15],
[12,17,14,0,13,17,18,11],
[17,14,18,18,0,16,23,12],
[12,16,6,14,15,0,14,10],
[18,17,16,13,8,17,0,10],
[15,30,16,20,19,21,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,9,16,21,21,20,15],
[12,0,12,16,11,18,22,17],
[22,19,0,22,17,17,16,11],
[15,15,9,0,17,11,16,11],
[10,20,14,14,0,16,20,10],
[10,13,14,20,15,0,20,15],
[11,9,15,15,11,11,0,11],
[16,14,20,20,21,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,20,18,16,15,15,15],
[12,0,16,12,12,14,12,13],
[11,15,0,13,11,16,14,12],
[13,19,18,0,12,17,16,15],
[15,19,20,19,0,17,15,16],
[16,17,15,14,14,0,15,13],
[16,19,17,15,16,16,0,17],
[16,18,19,16,15,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,13,22,19,17,23,13],
[8,0,8,18,13,12,18,7],
[18,23,0,20,15,19,28,16],
[9,13,11,0,15,12,20,12],
[12,18,16,16,0,21,24,16],
[14,19,12,19,10,0,21,13],
[8,13,3,11,7,10,0,10],
[18,24,15,19,15,18,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,9,9,8,7,8,13],
[28,0,11,10,10,15,11,14],
[22,20,0,26,21,25,17,15],
[22,21,5,0,17,12,8,16],
[23,21,10,14,0,18,15,21],
[24,16,6,19,13,0,19,17],
[23,20,14,23,16,12,0,21],
[18,17,16,15,10,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,12,8,9,8,4,13],
[23,0,15,14,17,6,15,21],
[19,16,0,16,13,22,12,21],
[23,17,15,0,17,23,17,17],
[22,14,18,14,0,14,18,8],
[23,25,9,8,17,0,17,21],
[27,16,19,14,13,14,0,21],
[18,10,10,14,23,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,14,10,9,19,13],
[17,0,18,18,17,15,26,21],
[18,13,0,17,15,15,15,18],
[17,13,14,0,14,18,13,15],
[21,14,16,17,0,16,22,22],
[22,16,16,13,15,0,18,21],
[12,5,16,18,9,13,0,13],
[18,10,13,16,9,10,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,10,15,21,4,15],
[17,0,17,13,18,17,7,18],
[17,14,0,22,20,21,12,20],
[21,18,9,0,19,21,9,15],
[16,13,11,12,0,21,16,11],
[10,14,10,10,10,0,10,10],
[27,24,19,22,15,21,0,15],
[16,13,11,16,20,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,13,21,12,11,13],
[15,0,18,16,19,12,14,15],
[15,13,0,14,21,16,6,13],
[18,15,17,0,24,14,8,12],
[10,12,10,7,0,13,7,11],
[19,19,15,17,18,0,10,21],
[20,17,25,23,24,21,0,15],
[18,16,18,19,20,10,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,7,13,11,13,10,7],
[18,0,11,14,17,17,16,19],
[24,20,0,16,15,22,19,17],
[18,17,15,0,13,21,17,11],
[20,14,16,18,0,26,12,12],
[18,14,9,10,5,0,14,12],
[21,15,12,14,19,17,0,22],
[24,12,14,20,19,19,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,16,13,14,19,14],
[13,0,17,10,14,15,17,9],
[16,14,0,10,12,17,18,11],
[15,21,21,0,22,20,19,16],
[18,17,19,9,0,18,15,9],
[17,16,14,11,13,0,16,8],
[12,14,13,12,16,15,0,9],
[17,22,20,15,22,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,5,15,10,16,5,15],
[21,0,21,26,20,11,21,26],
[26,10,0,26,20,16,20,20],
[16,5,5,0,0,11,15,25],
[21,11,11,31,0,11,21,31],
[15,20,15,20,20,0,15,25],
[26,10,11,16,10,16,0,15],
[16,5,11,6,0,6,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,17,19,19,15,19],
[11,0,11,9,14,15,18,11],
[15,20,0,14,20,17,13,17],
[14,22,17,0,22,19,21,17],
[12,17,11,9,0,13,16,14],
[12,16,14,12,18,0,13,17],
[16,13,18,10,15,18,0,16],
[12,20,14,14,17,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,25,15,19,16,21,15],
[17,0,20,17,19,14,19,12],
[6,11,0,9,13,7,18,11],
[16,14,22,0,21,18,27,15],
[12,12,18,10,0,6,22,5],
[15,17,24,13,25,0,25,18],
[10,12,13,4,9,6,0,7],
[16,19,20,16,26,13,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,19,16,16,20,15],
[13,0,17,14,14,17,17,16],
[15,14,0,17,15,20,19,17],
[12,17,14,0,15,19,15,15],
[15,17,16,16,0,16,19,15],
[15,14,11,12,15,0,20,13],
[11,14,12,16,12,11,0,10],
[16,15,14,16,16,18,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,18,14,18,19,15],
[14,0,17,15,14,19,18,18],
[16,14,0,12,13,13,14,15],
[13,16,19,0,13,15,17,14],
[17,17,18,18,0,15,19,17],
[13,12,18,16,16,0,16,12],
[12,13,17,14,12,15,0,14],
[16,13,16,17,14,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,21,21,21,21,21,21],
[20,0,10,31,10,21,10,20],
[10,21,0,21,21,31,21,21],
[10,0,10,0,10,21,0,10],
[10,21,10,21,0,21,0,21],
[10,10,0,10,10,0,0,10],
[10,21,10,31,31,31,0,31],
[10,11,10,21,10,21,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,14,20,15,13,18],
[16,0,19,21,20,16,12,19],
[14,12,0,17,16,11,14,19],
[17,10,14,0,16,14,17,15],
[11,11,15,15,0,13,15,15],
[16,15,20,17,18,0,14,22],
[18,19,17,14,16,17,0,20],
[13,12,12,16,16,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,14,12,15,13,16],
[17,0,19,17,12,18,18,20],
[14,12,0,13,13,17,14,17],
[17,14,18,0,15,17,16,12],
[19,19,18,16,0,17,14,17],
[16,13,14,14,14,0,11,15],
[18,13,17,15,17,20,0,14],
[15,11,14,19,14,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,13,13,20,17,23],
[14,0,20,19,14,17,16,17],
[17,11,0,10,17,15,17,16],
[18,12,21,0,13,18,15,16],
[18,17,14,18,0,16,16,19],
[11,14,16,13,15,0,10,20],
[14,15,14,16,15,21,0,16],
[8,14,15,15,12,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,16,19,14,13,19],
[22,0,22,15,14,22,15,22],
[19,9,0,20,19,14,17,23],
[15,16,11,0,3,7,15,7],
[12,17,12,28,0,18,12,22],
[17,9,17,24,13,0,21,28],
[18,16,14,16,19,10,0,18],
[12,9,8,24,9,3,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,18,15,15,16,17],
[18,0,9,16,13,15,17,16],
[17,22,0,20,14,15,15,14],
[13,15,11,0,8,15,10,10],
[16,18,17,23,0,20,14,14],
[16,16,16,16,11,0,13,10],
[15,14,16,21,17,18,0,10],
[14,15,17,21,17,21,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,12,12,15,15,14],
[20,0,16,13,17,20,16,19],
[20,15,0,13,15,16,17,13],
[19,18,18,0,13,16,19,17],
[19,14,16,18,0,19,19,15],
[16,11,15,15,12,0,13,14],
[16,15,14,12,12,18,0,15],
[17,12,18,14,16,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,26,13,8,6,6,12],
[11,0,31,13,8,11,11,17],
[5,0,0,5,8,5,5,11],
[18,18,26,0,20,18,12,12],
[23,23,23,11,0,17,17,17],
[25,20,26,13,14,0,11,6],
[25,20,26,19,14,20,0,12],
[19,14,20,19,14,25,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,13,19,15,15,17],
[19,0,16,13,22,18,20,15],
[14,15,0,10,16,21,14,19],
[18,18,21,0,20,18,17,15],
[12,9,15,11,0,14,9,13],
[16,13,10,13,17,0,14,17],
[16,11,17,14,22,17,0,15],
[14,16,12,16,18,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,9,17,25,17,23,15],
[16,0,8,15,18,16,10,13],
[22,23,0,21,17,22,16,14],
[14,16,10,0,20,14,20,17],
[6,13,14,11,0,14,8,15],
[14,15,9,17,17,0,15,14],
[8,21,15,11,23,16,0,9],
[16,18,17,14,16,17,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,12,16,12,13,18],
[18,0,19,14,17,13,13,15],
[18,12,0,11,14,12,13,15],
[19,17,20,0,17,19,15,20],
[15,14,17,14,0,11,11,15],
[19,18,19,12,20,0,16,18],
[18,18,18,16,20,15,0,19],
[13,16,16,11,16,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,27,16,12,20,16,22],
[10,0,16,11,22,20,22,15],
[4,15,0,20,16,14,15,11],
[15,20,11,0,22,15,16,15],
[19,9,15,9,0,19,8,19],
[11,11,17,16,12,0,11,11],
[15,9,16,15,23,20,0,15],
[9,16,20,16,12,20,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,23,14,19,12,19],
[11,0,18,13,22,22,15,12],
[12,13,0,20,11,13,7,9],
[8,18,11,0,15,15,12,11],
[17,9,20,16,0,18,7,8],
[12,9,18,16,13,0,4,8],
[19,16,24,19,24,27,0,15],
[12,19,22,20,23,23,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,25,14,20,8,19,14],
[20,0,19,20,20,20,19,14],
[6,12,0,14,20,14,12,14],
[17,11,17,0,31,25,17,17],
[11,11,11,0,0,13,11,0],
[23,11,17,6,18,0,17,12],
[12,12,19,14,20,14,0,14],
[17,17,17,14,31,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,15,12,8,13,13,17],
[22,0,15,19,19,19,23,23],
[16,16,0,11,12,17,15,19],
[19,12,20,0,13,18,18,17],
[23,12,19,18,0,11,20,24],
[18,12,14,13,20,0,16,19],
[18,8,16,13,11,15,0,18],
[14,8,12,14,7,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,11,12,13,6,6],
[19,0,19,21,20,19,14,14],
[18,12,0,10,8,19,6,8],
[20,10,21,0,13,17,6,4],
[19,11,23,18,0,20,17,17],
[18,12,12,14,11,0,9,10],
[25,17,25,25,14,22,0,16],
[25,17,23,27,14,21,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,19,14,11,15,11,17],
[15,0,13,12,13,15,12,13],
[12,18,0,11,12,18,19,14],
[17,19,20,0,16,10,13,15],
[20,18,19,15,0,17,18,23],
[16,16,13,21,14,0,17,18],
[20,19,12,18,13,14,0,25],
[14,18,17,16,8,13,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,22,24,24,20,15,19],
[7,0,20,19,24,19,15,15],
[9,11,0,21,18,18,11,11],
[7,12,10,0,22,21,7,11],
[7,7,13,9,0,10,8,13],
[11,12,13,10,21,0,10,11],
[16,16,20,24,23,21,0,14],
[12,16,20,20,18,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,15,15,23,15,15],
[8,0,9,10,10,15,14,8],
[14,22,0,22,16,19,21,18],
[16,21,9,0,7,14,14,12],
[16,21,15,24,0,14,19,14],
[8,16,12,17,17,0,17,12],
[16,17,10,17,12,14,0,7],
[16,23,13,19,17,19,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,10,8,10,12,10],
[20,0,11,17,11,17,16,9],
[19,20,0,17,16,13,17,9],
[21,14,14,0,13,11,20,16],
[23,20,15,18,0,17,17,12],
[21,14,18,20,14,0,16,16],
[19,15,14,11,14,15,0,13],
[21,22,22,15,19,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,16,21,15,23,18,26],
[8,0,8,10,13,14,14,19],
[15,23,0,19,21,24,17,24],
[10,21,12,0,16,16,15,22],
[16,18,10,15,0,17,16,22],
[8,17,7,15,14,0,15,21],
[13,17,14,16,15,16,0,22],
[5,12,7,9,9,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,16,14,16,13,17],
[18,0,11,18,17,15,13,17],
[16,20,0,22,20,14,19,17],
[15,13,9,0,15,9,13,16],
[17,14,11,16,0,11,12,13],
[15,16,17,22,20,0,18,14],
[18,18,12,18,19,13,0,16],
[14,14,14,15,18,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,5,17,11,11,5,11],
[17,0,6,23,12,17,6,6],
[26,25,0,17,17,22,17,11],
[14,8,14,0,5,5,11,8],
[20,19,14,26,0,11,14,13],
[20,14,9,26,20,0,14,8],
[26,25,14,20,17,17,0,19],
[20,25,20,23,18,23,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,16,16,14,13,17],
[16,0,20,15,15,13,12,11],
[15,11,0,18,12,15,18,16],
[15,16,13,0,22,17,20,18],
[15,16,19,9,0,17,19,13],
[17,18,16,14,14,0,18,18],
[18,19,13,11,12,13,0,11],
[14,20,15,13,18,13,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,10,9,13,14,9,10],
[23,0,19,18,23,19,12,15],
[21,12,0,10,13,18,17,15],
[22,13,21,0,19,19,18,19],
[18,8,18,12,0,13,12,17],
[17,12,13,12,18,0,17,17],
[22,19,14,13,19,14,0,20],
[21,16,16,12,14,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,7,22,15,15,22,22],
[9,0,9,24,17,16,24,15],
[24,22,0,22,24,15,22,22],
[9,7,9,0,24,7,7,8],
[16,14,7,7,0,14,14,7],
[16,15,16,24,17,0,15,15],
[9,7,9,24,17,16,0,8],
[9,16,9,23,24,16,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,16,8,12,19,17],
[13,0,5,8,5,6,17,15],
[17,26,0,15,12,18,20,23],
[15,23,16,0,18,14,19,21],
[23,26,19,13,0,21,17,17],
[19,25,13,17,10,0,21,15],
[12,14,11,12,14,10,0,14],
[14,16,8,10,14,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,23,16,16,16,18,16],
[19,0,17,10,18,18,20,20],
[8,14,0,17,12,20,13,16],
[15,21,14,0,14,20,18,21],
[15,13,19,17,0,21,22,19],
[15,13,11,11,10,0,11,20],
[13,11,18,13,9,20,0,19],
[15,11,15,10,12,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,14,11,14,11,24,13],
[26,0,14,25,20,25,31,20],
[17,17,0,11,20,11,17,13],
[20,6,20,0,20,6,19,13],
[17,11,11,11,0,17,17,12],
[20,6,20,25,14,0,20,20],
[7,0,14,12,14,11,0,13],
[18,11,18,18,19,11,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,17,14,16,19,18],
[13,0,17,13,21,18,14,20],
[19,14,0,13,13,19,16,17],
[14,18,18,0,21,12,17,17],
[17,10,18,10,0,13,20,18],
[15,13,12,19,18,0,19,19],
[12,17,15,14,11,12,0,19],
[13,11,14,14,13,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,19,28,16,20,19,19],
[23,0,19,25,24,15,22,24],
[12,12,0,16,14,15,20,15],
[3,6,15,0,15,10,10,13],
[15,7,17,16,0,15,19,19],
[11,16,16,21,16,0,15,15],
[12,9,11,21,12,16,0,17],
[12,7,16,18,12,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,14,13,18,16,8],
[13,0,19,15,19,18,15,16],
[15,12,0,19,18,20,9,15],
[17,16,12,0,12,19,12,9],
[18,12,13,19,0,19,12,19],
[13,13,11,12,12,0,8,3],
[15,16,22,19,19,23,0,16],
[23,15,16,22,12,28,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,19,13,26,13,26,19],
[18,0,17,19,20,11,24,19],
[12,14,0,7,14,7,12,7],
[18,12,24,0,20,18,25,13],
[5,11,17,11,0,11,17,17],
[18,20,24,13,20,0,31,19],
[5,7,19,6,14,0,0,13],
[12,12,24,18,14,12,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,11,20,18,18,15,21],
[10,0,8,14,11,11,11,11],
[20,23,0,17,18,20,14,18],
[11,17,14,0,11,5,16,16],
[13,20,13,20,0,16,11,16],
[13,20,11,26,15,0,15,18],
[16,20,17,15,20,16,0,21],
[10,20,13,15,15,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,19,26,18,14,19,18],
[4,0,16,15,18,15,14,10],
[12,15,0,19,12,10,15,11],
[5,16,12,0,8,8,14,6],
[13,13,19,23,0,16,17,17],
[17,16,21,23,15,0,16,16],
[12,17,16,17,14,15,0,13],
[13,21,20,25,14,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,19,19,18,13,26],
[11,0,11,23,15,19,14,16],
[12,20,0,22,20,21,16,22],
[12,8,9,0,8,8,5,11],
[12,16,11,23,0,21,9,18],
[13,12,10,23,10,0,5,13],
[18,17,15,26,22,26,0,24],
[5,15,9,20,13,18,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,17,19,17,16,16],
[16,0,15,13,19,7,13,15],
[15,16,0,15,19,11,13,16],
[14,18,16,0,24,9,15,18],
[12,12,12,7,0,8,14,18],
[14,24,20,22,23,0,14,20],
[15,18,18,16,17,17,0,16],
[15,16,15,13,13,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,17,16,21,14,21],
[10,0,17,15,12,18,11,16],
[11,14,0,14,12,18,16,14],
[14,16,17,0,14,13,14,16],
[15,19,19,17,0,17,19,18],
[10,13,13,18,14,0,15,14],
[17,20,15,17,12,16,0,17],
[10,15,17,15,13,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,15,13,16,13,12],
[14,0,22,9,16,13,10,14],
[16,9,0,13,15,17,10,8],
[16,22,18,0,23,18,12,16],
[18,15,16,8,0,20,11,16],
[15,18,14,13,11,0,15,14],
[18,21,21,19,20,16,0,13],
[19,17,23,15,15,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,17,13,17,16,17],
[17,0,20,15,14,21,15,18],
[11,11,0,14,14,17,15,13],
[14,16,17,0,10,14,14,15],
[18,17,17,21,0,17,15,19],
[14,10,14,17,14,0,13,17],
[15,16,16,17,16,18,0,15],
[14,13,18,16,12,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,15,14,17,21,17],
[17,0,16,17,17,15,15,14],
[11,15,0,13,14,13,14,15],
[16,14,18,0,16,16,21,17],
[17,14,17,15,0,10,19,14],
[14,16,18,15,21,0,20,18],
[10,16,17,10,12,11,0,12],
[14,17,16,14,17,13,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,14,22,16,18,13,18],
[8,0,8,11,12,15,7,15],
[17,23,0,22,14,19,14,17],
[9,20,9,0,5,14,10,22],
[15,19,17,26,0,20,20,29],
[13,16,12,17,11,0,13,17],
[18,24,17,21,11,18,0,22],
[13,16,14,9,2,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,22,13,13,10,21,16],
[22,0,27,17,17,10,21,21],
[9,4,0,0,0,4,14,9],
[18,14,31,0,10,19,26,25],
[18,14,31,21,0,19,26,25],
[21,21,27,12,12,0,21,21],
[10,10,17,5,5,10,0,10],
[15,10,22,6,6,10,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,11,11,15,18,11],
[18,0,19,19,18,19,22,15],
[19,12,0,20,16,19,22,19],
[20,12,11,0,10,14,18,10],
[20,13,15,21,0,21,20,21],
[16,12,12,17,10,0,21,15],
[13,9,9,13,11,10,0,13],
[20,16,12,21,10,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,22,13,21,18,17,19],
[15,0,16,18,18,17,16,14],
[9,15,0,12,15,17,14,10],
[18,13,19,0,19,16,15,14],
[10,13,16,12,0,14,13,11],
[13,14,14,15,17,0,17,13],
[14,15,17,16,18,14,0,13],
[12,17,21,17,20,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,8,11,10,9,14,22],
[13,0,11,11,15,10,16,21],
[23,20,0,21,15,16,18,20],
[20,20,10,0,14,18,16,22],
[21,16,16,17,0,15,25,17],
[22,21,15,13,16,0,17,24],
[17,15,13,15,6,14,0,19],
[9,10,11,9,14,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,12,22,16,16,21,18],
[12,0,16,10,10,16,18,16],
[19,15,0,15,13,17,20,21],
[9,21,16,0,19,18,16,21],
[15,21,18,12,0,17,19,19],
[15,15,14,13,14,0,17,19],
[10,13,11,15,12,14,0,22],
[13,15,10,10,12,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,12,10,14,8,10],
[21,0,15,18,13,17,13,15],
[20,16,0,16,15,17,14,13],
[19,13,15,0,14,14,17,14],
[21,18,16,17,0,17,15,16],
[17,14,14,17,14,0,16,14],
[23,18,17,14,16,15,0,15],
[21,16,18,17,15,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,13,21,13,16,19],
[11,0,12,15,13,20,16,12],
[10,19,0,14,13,20,19,18],
[18,16,17,0,20,25,19,15],
[10,18,18,11,0,18,23,16],
[18,11,11,6,13,0,15,9],
[15,15,12,12,8,16,0,6],
[12,19,13,16,15,22,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,22,16,16,17,20,13],
[14,0,15,12,10,18,19,21],
[9,16,0,9,15,14,12,9],
[15,19,22,0,13,16,16,16],
[15,21,16,18,0,22,22,16],
[14,13,17,15,9,0,11,17],
[11,12,19,15,9,20,0,17],
[18,10,22,15,15,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,13,18,21,15,25,21],
[10,0,8,21,7,16,16,18],
[18,23,0,23,12,27,18,21],
[13,10,8,0,10,16,16,21],
[10,24,19,21,0,18,20,15],
[16,15,4,15,13,0,16,22],
[6,15,13,15,11,15,0,21],
[10,13,10,10,16,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,13,14,19,16,19],
[12,0,20,16,9,16,16,14],
[14,11,0,13,11,17,15,16],
[18,15,18,0,15,16,18,19],
[17,22,20,16,0,15,16,20],
[12,15,14,15,16,0,14,13],
[15,15,16,13,15,17,0,18],
[12,17,15,12,11,18,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,16,20,15,14,15],
[17,0,14,15,20,12,14,14],
[15,17,0,16,17,19,15,14],
[15,16,15,0,19,16,14,15],
[11,11,14,12,0,12,13,10],
[16,19,12,15,19,0,16,15],
[17,17,16,17,18,15,0,16],
[16,17,17,16,21,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,12,18,16,17,20,18],
[11,0,7,5,9,15,13,11],
[19,24,0,21,15,20,20,18],
[13,26,10,0,9,21,21,17],
[15,22,16,22,0,24,21,15],
[14,16,11,10,7,0,7,13],
[11,18,11,10,10,24,0,13],
[13,20,13,14,16,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,10,15,20,13,8],
[17,0,16,14,13,22,13,14],
[21,15,0,16,13,18,16,17],
[21,17,15,0,16,20,10,13],
[16,18,18,15,0,18,11,15],
[11,9,13,11,13,0,7,14],
[18,18,15,21,20,24,0,18],
[23,17,14,18,16,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,17,13,12,14,10],
[14,0,13,9,8,15,10,15],
[14,18,0,20,15,16,16,15],
[14,22,11,0,12,12,14,17],
[18,23,16,19,0,15,15,17],
[19,16,15,19,16,0,25,17],
[17,21,15,17,16,6,0,14],
[21,16,16,14,14,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,13,16,16,13,11],
[15,0,21,19,17,17,10,18],
[17,10,0,14,10,12,12,15],
[18,12,17,0,10,13,14,9],
[15,14,21,21,0,21,23,15],
[15,14,19,18,10,0,13,14],
[18,21,19,17,8,18,0,13],
[20,13,16,22,16,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,14,20,13,18,25],
[19,0,19,19,13,19,17,24],
[24,12,0,20,18,17,24,24],
[17,12,11,0,18,17,17,17],
[11,18,13,13,0,19,24,24],
[18,12,14,14,12,0,24,12],
[13,14,7,14,7,7,0,7],
[6,7,7,14,7,19,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,20,10,31,20,20,20],
[21,0,31,10,31,20,20,31],
[11,0,0,10,11,0,0,11],
[21,21,21,0,21,10,10,21],
[0,0,20,10,0,0,10,20],
[11,11,31,21,31,0,10,31],
[11,11,31,21,21,21,0,31],
[11,0,20,10,11,0,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,15,8,19,15,16],
[16,0,12,13,13,8,17,21],
[15,19,0,12,9,11,16,13],
[16,18,19,0,8,12,17,17],
[23,18,22,23,0,15,20,23],
[12,23,20,19,16,0,20,20],
[16,14,15,14,11,11,0,15],
[15,10,18,14,8,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,14,15,13,13,18],
[17,0,16,15,18,12,18,16],
[17,15,0,18,17,17,19,18],
[17,16,13,0,16,15,19,18],
[16,13,14,15,0,16,17,21],
[18,19,14,16,15,0,16,23],
[18,13,12,12,14,15,0,15],
[13,15,13,13,10,8,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,12,21,13,17,13],
[14,0,14,16,17,16,20,15],
[16,17,0,10,20,15,15,13],
[19,15,21,0,18,16,14,15],
[10,14,11,13,0,12,12,10],
[18,15,16,15,19,0,14,11],
[14,11,16,17,19,17,0,16],
[18,16,18,16,21,20,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,15,13,16,14,10],
[12,0,14,14,15,13,16,8],
[12,17,0,15,16,11,8,11],
[16,17,16,0,19,16,14,12],
[18,16,15,12,0,19,9,15],
[15,18,20,15,12,0,14,9],
[17,15,23,17,22,17,0,16],
[21,23,20,19,16,22,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,17,21,15,19,12,16],
[10,0,11,13,12,13,13,12],
[14,20,0,18,13,18,15,14],
[10,18,13,0,13,16,12,12],
[16,19,18,18,0,19,18,14],
[12,18,13,15,12,0,14,14],
[19,18,16,19,13,17,0,14],
[15,19,17,19,17,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,18,22,18,15,13],
[14,0,13,19,17,20,20,19],
[15,18,0,20,20,18,11,15],
[13,12,11,0,16,17,15,7],
[9,14,11,15,0,15,12,8],
[13,11,13,14,16,0,20,12],
[16,11,20,16,19,11,0,16],
[18,12,16,24,23,19,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,5,18,11,11,5,11],
[13,0,0,13,6,6,6,6],
[26,31,0,13,31,26,24,26],
[13,18,18,0,18,24,18,18],
[20,25,0,13,0,6,5,6],
[20,25,5,7,25,0,11,18],
[26,25,7,13,26,20,0,26],
[20,25,5,13,25,13,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,13,10,16,17,9],
[15,0,16,13,13,18,19,15],
[16,15,0,15,11,16,21,16],
[18,18,16,0,15,17,20,11],
[21,18,20,16,0,16,18,13],
[15,13,15,14,15,0,16,18],
[14,12,10,11,13,15,0,12],
[22,16,15,20,18,13,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,18,17,17,20,14],
[17,0,18,20,16,15,22,16],
[13,13,0,17,9,11,17,12],
[13,11,14,0,18,16,17,15],
[14,15,22,13,0,15,20,16],
[14,16,20,15,16,0,18,16],
[11,9,14,14,11,13,0,13],
[17,15,19,16,15,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,19,21,17,16,16,17],
[17,0,18,15,15,20,15,16],
[12,13,0,10,14,15,15,13],
[10,16,21,0,16,21,21,18],
[14,16,17,15,0,15,15,11],
[15,11,16,10,16,0,10,18],
[15,16,16,10,16,21,0,23],
[14,15,18,13,20,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,15,17,21,12,14],
[21,0,15,20,20,21,16,17],
[21,16,0,15,18,18,15,14],
[16,11,16,0,14,16,16,11],
[14,11,13,17,0,17,16,16],
[10,10,13,15,14,0,11,8],
[19,15,16,15,15,20,0,16],
[17,14,17,20,15,23,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,8,3,3,12,17,11],
[17,0,7,6,4,9,14,10],
[23,24,0,16,18,13,17,16],
[28,25,15,0,19,21,15,15],
[28,27,13,12,0,19,17,17],
[19,22,18,10,12,0,19,18],
[14,17,14,16,14,12,0,17],
[20,21,15,16,14,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,12,14,8,11,23],
[24,0,19,23,15,11,14,23],
[21,12,0,20,15,11,14,24],
[19,8,11,0,12,9,5,16],
[17,16,16,19,0,12,17,20],
[23,20,20,22,19,0,15,23],
[20,17,17,26,14,16,0,20],
[8,8,7,15,11,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,18,20,15,10,20,12],
[19,0,19,23,14,18,17,13],
[13,12,0,22,14,16,15,14],
[11,8,9,0,11,12,14,10],
[16,17,17,20,0,14,16,9],
[21,13,15,19,17,0,17,18],
[11,14,16,17,15,14,0,14],
[19,18,17,21,22,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,14,11,17,13,15],
[17,0,13,21,22,19,15,18],
[20,18,0,17,18,18,15,17],
[17,10,14,0,14,21,13,15],
[20,9,13,17,0,20,16,19],
[14,12,13,10,11,0,14,15],
[18,16,16,18,15,17,0,19],
[16,13,14,16,12,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,27,18,14,15,25,15],
[12,0,15,22,18,12,17,8],
[4,16,0,12,11,7,18,11],
[13,9,19,0,17,14,16,8],
[17,13,20,14,0,16,22,10],
[16,19,24,17,15,0,26,16],
[6,14,13,15,9,5,0,5],
[16,23,20,23,21,15,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,20,19,14,14,17],
[17,0,16,15,18,19,18,16],
[16,15,0,16,18,16,20,19],
[11,16,15,0,19,17,18,12],
[12,13,13,12,0,16,11,13],
[17,12,15,14,15,0,12,15],
[17,13,11,13,20,19,0,14],
[14,15,12,19,18,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,12,18,14,19,13],
[18,0,15,15,22,15,22,16],
[18,16,0,11,27,12,21,15],
[19,16,20,0,24,14,18,13],
[13,9,4,7,0,8,11,10],
[17,16,19,17,23,0,15,14],
[12,9,10,13,20,16,0,9],
[18,15,16,18,21,17,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,17,11,11,16,19],
[18,0,16,17,16,12,14,19],
[16,15,0,11,11,9,19,13],
[14,14,20,0,10,15,20,14],
[20,15,20,21,0,19,22,23],
[20,19,22,16,12,0,14,19],
[15,17,12,11,9,17,0,19],
[12,12,18,17,8,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,9,13,18,6,13,17],
[14,0,15,16,19,14,19,19],
[22,16,0,23,18,13,23,17],
[18,15,8,0,16,17,16,19],
[13,12,13,15,0,13,19,18],
[25,17,18,14,18,0,24,19],
[18,12,8,15,12,7,0,12],
[14,12,14,12,13,12,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,17,18,13,8,20],
[17,0,15,18,22,21,21,12],
[20,16,0,15,17,20,15,21],
[14,13,16,0,8,7,7,11],
[13,9,14,23,0,12,10,19],
[18,10,11,24,19,0,15,18],
[23,10,16,24,21,16,0,18],
[11,19,10,20,12,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,19,17,21,20,17],
[15,0,20,22,20,20,21,23],
[18,11,0,19,20,25,19,16],
[12,9,12,0,11,17,12,9],
[14,11,11,20,0,18,17,16],
[10,11,6,14,13,0,13,14],
[11,10,12,19,14,18,0,12],
[14,8,15,22,15,17,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,22,14,18,22,10],
[14,0,19,21,12,16,27,12],
[14,12,0,21,17,21,24,21],
[9,10,10,0,12,16,27,7],
[17,19,14,19,0,26,19,11],
[13,15,10,15,5,0,20,3],
[9,4,7,4,12,11,0,3],
[21,19,10,24,20,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,15,15,18,18,15],
[21,0,22,14,22,22,22,17],
[16,9,0,14,17,18,22,17],
[16,17,17,0,22,22,22,12],
[16,9,14,9,0,12,18,4],
[13,9,13,9,19,0,19,13],
[13,9,9,9,13,12,0,4],
[16,14,14,19,27,18,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,17,15,16,25,17],
[12,0,14,11,10,12,15,8],
[10,17,0,11,10,14,16,12],
[14,20,20,0,16,19,19,21],
[16,21,21,15,0,16,20,16],
[15,19,17,12,15,0,18,13],
[6,16,15,12,11,13,0,14],
[14,23,19,10,15,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,11,14,11,11,9],
[22,0,17,18,17,15,17,19],
[22,14,0,15,15,14,19,18],
[20,13,16,0,18,18,14,16],
[17,14,16,13,0,13,11,15],
[20,16,17,13,18,0,17,19],
[20,14,12,17,20,14,0,14],
[22,12,13,15,16,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,19,15,10,20,16],
[12,0,17,20,18,13,19,19],
[13,14,0,16,15,15,17,17],
[12,11,15,0,11,6,13,14],
[16,13,16,20,0,17,18,15],
[21,18,16,25,14,0,19,18],
[11,12,14,18,13,12,0,18],
[15,12,14,17,16,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,10,5,12,3,13],
[18,0,11,11,16,14,14,17],
[20,20,0,9,16,18,13,19],
[21,20,22,0,12,20,12,21],
[26,15,15,19,0,21,17,19],
[19,17,13,11,10,0,13,20],
[28,17,18,19,14,18,0,21],
[18,14,12,10,12,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,14,13,17,17,17,17],
[9,0,15,14,13,11,16,16],
[17,16,0,11,12,13,17,13],
[18,17,20,0,21,16,21,15],
[14,18,19,10,0,14,15,17],
[14,20,18,15,17,0,19,16],
[14,15,14,10,16,12,0,17],
[14,15,18,16,14,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,16,20,23,13,19],
[15,0,21,14,18,22,18,12],
[11,10,0,8,12,17,12,7],
[15,17,23,0,17,26,14,17],
[11,13,19,14,0,20,15,13],
[8,9,14,5,11,0,5,8],
[18,13,19,17,16,26,0,19],
[12,19,24,14,18,23,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,11,15,9,21,21,21],
[12,0,17,17,17,21,18,12],
[20,14,0,20,20,20,22,16],
[16,14,11,0,19,21,10,16],
[22,14,11,12,0,21,18,22],
[10,10,11,10,10,0,12,18],
[10,13,9,21,13,19,0,19],
[10,19,15,15,9,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,22,12,5,12,22,17],
[17,0,26,17,14,12,12,17],
[9,5,0,14,14,12,14,19],
[19,14,17,0,9,12,17,17],
[26,17,17,22,0,16,17,12],
[19,19,19,19,15,0,19,24],
[9,19,17,14,14,12,0,19],
[14,14,12,14,19,7,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,20,31,10,31,31,31],
[0,0,10,10,0,10,10,10],
[11,21,0,21,21,31,31,31],
[0,21,10,0,0,31,21,21],
[21,31,10,31,0,31,31,31],
[0,21,0,0,0,0,10,21],
[0,21,0,10,0,21,0,21],
[0,21,0,10,0,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,15,17,17,15,21],
[14,0,14,14,15,15,17,20],
[14,17,0,12,14,14,14,15],
[16,17,19,0,14,17,17,16],
[14,16,17,17,0,18,17,15],
[14,16,17,14,13,0,14,14],
[16,14,17,14,14,17,0,14],
[10,11,16,15,16,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,16,15,23,13,15],
[15,0,19,18,14,22,15,14],
[17,12,0,19,8,19,10,11],
[15,13,12,0,13,22,10,10],
[16,17,23,18,0,19,14,17],
[8,9,12,9,12,0,9,10],
[18,16,21,21,17,22,0,13],
[16,17,20,21,14,21,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,24,11,31,28,24],
[11,0,18,18,18,23,23,23],
[11,13,0,11,11,26,16,19],
[7,13,20,0,11,19,12,19],
[20,13,20,20,0,27,17,27],
[0,8,5,12,4,0,10,12],
[3,8,15,19,14,21,0,10],
[7,8,12,12,4,19,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,11,14,13,14,16],
[16,0,18,19,14,20,20,18],
[17,13,0,12,7,15,18,11],
[20,12,19,0,13,11,13,15],
[17,17,24,18,0,16,17,11],
[18,11,16,20,15,0,19,17],
[17,11,13,18,14,12,0,13],
[15,13,20,16,20,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,19,17,12,17,13,18],
[22,0,15,18,19,21,18,18],
[12,16,0,16,16,17,12,25],
[14,13,15,0,18,22,14,19],
[19,12,15,13,0,13,15,18],
[14,10,14,9,18,0,14,19],
[18,13,19,17,16,17,0,28],
[13,13,6,12,13,12,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,21,18,13,15,18,10],
[19,0,19,20,18,17,19,14],
[10,12,0,12,15,16,12,13],
[13,11,19,0,17,19,18,13],
[18,13,16,14,0,16,15,16],
[16,14,15,12,15,0,14,13],
[13,12,19,13,16,17,0,14],
[21,17,18,18,15,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,18,13,16,16,19],
[13,0,11,19,12,12,14,21],
[14,20,0,18,13,13,15,15],
[13,12,13,0,9,12,10,15],
[18,19,18,22,0,17,15,21],
[15,19,18,19,14,0,13,20],
[15,17,16,21,16,18,0,22],
[12,10,16,16,10,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,31,20,20,10,31],
[11,0,11,31,10,0,0,11],
[10,20,0,20,10,20,20,20],
[0,0,11,0,10,0,0,0],
[11,21,21,21,0,21,21,21],
[11,31,11,31,10,0,11,11],
[21,31,11,31,10,20,0,21],
[0,20,11,31,10,20,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,13,27,22,16,10],
[8,0,16,21,17,11,16,13],
[14,15,0,17,21,21,21,20],
[18,10,14,0,27,16,14,18],
[4,14,10,4,0,8,9,10],
[9,20,10,15,23,0,13,10],
[15,15,10,17,22,18,0,20],
[21,18,11,13,21,21,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,14,11,13,14,15],
[19,0,13,19,14,16,17,21],
[15,18,0,18,16,17,16,19],
[17,12,13,0,11,13,14,17],
[20,17,15,20,0,17,19,23],
[18,15,14,18,14,0,14,23],
[17,14,15,17,12,17,0,21],
[16,10,12,14,8,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,11,18,11,15,25],
[15,0,18,9,18,11,9,18],
[13,13,0,11,11,11,14,17],
[20,22,20,0,20,10,17,25],
[13,13,20,11,0,14,11,23],
[20,20,20,21,17,0,15,20],
[16,22,17,14,20,16,0,28],
[6,13,14,6,8,11,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,18,17,18,20,16],
[16,0,16,17,17,17,17,12],
[9,15,0,15,17,14,11,12],
[13,14,16,0,12,14,11,13],
[14,14,14,19,0,17,19,14],
[13,14,17,17,14,0,18,15],
[11,14,20,20,12,13,0,14],
[15,19,19,18,17,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,17,18,20,18,15],
[14,0,14,14,13,17,15,15],
[15,17,0,17,18,22,17,16],
[14,17,14,0,12,21,13,15],
[13,18,13,19,0,19,18,15],
[11,14,9,10,12,0,10,13],
[13,16,14,18,13,21,0,15],
[16,16,15,16,16,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,17,18,11,13,11],
[17,0,10,23,23,17,15,15],
[21,21,0,23,23,14,17,21],
[14,8,8,0,18,7,10,12],
[13,8,8,13,0,13,15,11],
[20,14,17,24,18,0,20,16],
[18,16,14,21,16,11,0,17],
[20,16,10,19,20,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,11,9,9,11,9],
[19,0,13,18,14,12,15,18],
[22,18,0,13,16,16,18,14],
[20,13,18,0,15,18,20,15],
[22,17,15,16,0,13,14,13],
[22,19,15,13,18,0,15,14],
[20,16,13,11,17,16,0,20],
[22,13,17,16,18,17,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,21,24,20,22,21,9],
[20,0,24,20,17,14,20,16],
[10,7,0,23,9,18,17,7],
[7,11,8,0,9,7,7,7],
[11,14,22,22,0,25,22,11],
[9,17,13,24,6,0,18,10],
[10,11,14,24,9,13,0,7],
[22,15,24,24,20,21,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,25,16,12,15,18,23],
[18,0,20,15,14,18,16,16],
[6,11,0,9,6,11,9,11],
[15,16,22,0,18,16,19,14],
[19,17,25,13,0,21,14,17],
[16,13,20,15,10,0,14,16],
[13,15,22,12,17,17,0,11],
[8,15,20,17,14,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,14,19,12,16,9,13],
[9,0,14,20,9,17,9,10],
[17,17,0,19,12,16,8,15],
[12,11,12,0,12,14,8,9],
[19,22,19,19,0,23,16,15],
[15,14,15,17,8,0,9,9],
[22,22,23,23,15,22,0,18],
[18,21,16,22,16,22,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,11,14,10,11,23],
[15,0,16,11,9,11,14,21],
[15,15,0,14,15,13,16,20],
[20,20,17,0,18,15,20,23],
[17,22,16,13,0,16,11,23],
[21,20,18,16,15,0,17,19],
[20,17,15,11,20,14,0,17],
[8,10,11,8,8,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,12,15,13,13,12],
[17,0,16,16,13,15,13,16],
[22,15,0,18,16,14,16,15],
[19,15,13,0,14,9,15,12],
[16,18,15,17,0,20,19,20],
[18,16,17,22,11,0,13,20],
[18,18,15,16,12,18,0,15],
[19,15,16,19,11,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,8,14,14,8,13],
[21,0,22,16,15,18,18,20],
[17,9,0,12,11,16,9,13],
[23,15,19,0,19,16,11,21],
[17,16,20,12,0,15,11,20],
[17,13,15,15,16,0,16,15],
[23,13,22,20,20,15,0,18],
[18,11,18,10,11,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,26,9,22,17,14],
[19,0,17,23,16,21,16,13],
[21,14,0,26,6,24,16,17],
[5,8,5,0,6,17,13,7],
[22,15,25,25,0,20,20,22],
[9,10,7,14,11,0,13,9],
[14,15,15,18,11,18,0,12],
[17,18,14,24,9,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,12,14,17,15,13],
[15,0,17,14,16,20,15,16],
[16,14,0,12,10,16,12,12],
[19,17,19,0,13,18,14,14],
[17,15,21,18,0,16,16,17],
[14,11,15,13,15,0,15,12],
[16,16,19,17,15,16,0,13],
[18,15,19,17,14,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,9,15,18,13,10],
[16,0,15,14,15,18,19,13],
[14,16,0,6,16,16,10,17],
[22,17,25,0,23,24,13,16],
[16,16,15,8,0,16,9,11],
[13,13,15,7,15,0,14,12],
[18,12,21,18,22,17,0,14],
[21,18,14,15,20,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,13,15,16,11,10],
[13,0,13,14,15,13,11,9],
[17,18,0,13,16,18,16,17],
[18,17,18,0,14,17,13,16],
[16,16,15,17,0,16,14,12],
[15,18,13,14,15,0,13,10],
[20,20,15,18,17,18,0,11],
[21,22,14,15,19,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,11,10,8,15,13],
[21,0,15,5,13,11,15,14],
[20,16,0,13,16,19,22,16],
[20,26,18,0,16,17,20,11],
[21,18,15,15,0,13,18,18],
[23,20,12,14,18,0,21,20],
[16,16,9,11,13,10,0,8],
[18,17,15,20,13,11,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,20,15,23,14,20],
[10,0,16,7,16,18,11,18],
[10,15,0,13,14,20,13,17],
[11,24,18,0,19,22,22,20],
[16,15,17,12,0,16,17,15],
[8,13,11,9,15,0,14,13],
[17,20,18,9,14,17,0,17],
[11,13,14,11,16,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,20,11,21,26,26],
[20,0,21,16,16,21,20,15],
[20,10,0,19,22,18,24,19],
[11,15,12,0,12,14,16,11],
[20,15,9,19,0,18,24,19],
[10,10,13,17,13,0,10,10],
[5,11,7,15,7,21,0,21],
[5,16,12,20,12,21,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,10,21,4,21,24],
[19,0,7,16,21,10,21,24],
[15,24,0,16,24,19,24,20],
[21,15,15,0,24,25,31,27],
[10,10,7,7,0,10,22,21],
[27,21,12,6,21,0,17,27],
[10,10,7,0,9,14,0,21],
[7,7,11,4,10,4,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,13,18,17,15,19],
[13,0,9,18,19,15,12,17],
[16,22,0,13,20,18,14,16],
[18,13,18,0,20,19,16,16],
[13,12,11,11,0,16,12,15],
[14,16,13,12,15,0,16,16],
[16,19,17,15,19,15,0,21],
[12,14,15,15,16,15,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,19,21,21,22,14,14],
[17,0,19,22,21,21,15,19],
[12,12,0,17,17,20,12,13],
[10,9,14,0,20,18,12,11],
[10,10,14,11,0,21,13,13],
[9,10,11,13,10,0,11,8],
[17,16,19,19,18,20,0,15],
[17,12,18,20,18,23,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,8,18,23,10,18,20],
[11,0,13,16,17,12,18,12],
[23,18,0,14,23,13,15,18],
[13,15,17,0,21,16,15,17],
[8,14,8,10,0,8,10,13],
[21,19,18,15,23,0,19,16],
[13,13,16,16,21,12,0,17],
[11,19,13,14,18,15,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,16,15,14,9,13],
[20,0,18,15,19,20,14,16],
[20,13,0,17,18,16,14,17],
[15,16,14,0,20,14,19,19],
[16,12,13,11,0,11,10,14],
[17,11,15,17,20,0,12,15],
[22,17,17,12,21,19,0,19],
[18,15,14,12,17,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,29,17,24,14,20,20],
[9,0,26,13,19,12,14,14],
[2,5,0,14,16,9,15,14],
[14,18,17,0,12,17,14,15],
[7,12,15,19,0,14,18,12],
[17,19,22,14,17,0,15,21],
[11,17,16,17,13,16,0,23],
[11,17,17,16,19,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,16,12,22,21,16],
[18,0,24,18,14,26,12,13],
[13,7,0,13,12,22,12,6],
[15,13,18,0,14,19,14,12],
[19,17,19,17,0,21,13,19],
[9,5,9,12,10,0,7,9],
[10,19,19,17,18,24,0,16],
[15,18,25,19,12,22,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,7,7,8,22,15,8],
[9,0,0,9,17,8,9,17],
[24,31,0,16,17,15,24,17],
[24,22,15,0,15,15,8,8],
[23,14,14,16,0,14,7,7],
[9,23,16,16,17,0,16,9],
[16,22,7,23,24,15,0,17],
[23,14,14,23,24,22,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,13,15,18,19,19,16],
[10,0,13,11,12,13,17,14],
[18,18,0,17,15,16,19,15],
[16,20,14,0,15,19,19,18],
[13,19,16,16,0,19,20,18],
[12,18,15,12,12,0,17,14],
[12,14,12,12,11,14,0,15],
[15,17,16,13,13,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,15,17,20,17,14],
[10,0,16,10,14,14,9,7],
[10,15,0,14,14,14,11,10],
[16,21,17,0,16,17,18,15],
[14,17,17,15,0,24,18,17],
[11,17,17,14,7,0,7,10],
[14,22,20,13,13,24,0,9],
[17,24,21,16,14,21,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,12,18,18,15,11],
[14,0,8,14,15,18,10,14],
[18,23,0,15,19,20,12,13],
[19,17,16,0,16,18,16,13],
[13,16,12,15,0,15,8,10],
[13,13,11,13,16,0,13,16],
[16,21,19,15,23,18,0,16],
[20,17,18,18,21,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,14,12,17,17,16],
[15,0,11,15,18,16,13,14],
[20,20,0,16,19,16,11,19],
[17,16,15,0,15,15,19,17],
[19,13,12,16,0,18,14,13],
[14,15,15,16,13,0,16,11],
[14,18,20,12,17,15,0,16],
[15,17,12,14,18,20,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,14,9,14,12,5],
[23,0,19,17,22,20,17,15],
[20,12,0,18,14,14,21,19],
[17,14,13,0,12,16,12,18],
[22,9,17,19,0,17,20,15],
[17,11,17,15,14,0,16,15],
[19,14,10,19,11,15,0,16],
[26,16,12,13,16,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,17,12,17,17,16],
[12,0,17,15,14,12,18,14],
[10,14,0,12,9,9,13,10],
[14,16,19,0,12,18,16,15],
[19,17,22,19,0,18,23,14],
[14,19,22,13,13,0,18,18],
[14,13,18,15,8,13,0,7],
[15,17,21,16,17,13,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,15,16,25,19,17,18],
[9,0,13,15,19,17,14,16],
[16,18,0,13,20,14,15,19],
[15,16,18,0,18,19,19,17],
[6,12,11,13,0,14,14,12],
[12,14,17,12,17,0,10,17],
[14,17,16,12,17,21,0,14],
[13,15,12,14,19,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,14,18,17,14,19,18],
[7,0,12,11,9,9,13,5],
[17,19,0,23,17,21,20,11],
[13,20,8,0,8,9,14,13],
[14,22,14,23,0,15,16,14],
[17,22,10,22,16,0,19,10],
[12,18,11,17,15,12,0,17],
[13,26,20,18,17,21,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,25,10,14,20,19],
[16,0,18,17,19,17,20,10],
[16,13,0,20,17,13,21,12],
[6,14,11,0,12,13,17,12],
[21,12,14,19,0,18,18,13],
[17,14,18,18,13,0,19,16],
[11,11,10,14,13,12,0,9],
[12,21,19,19,18,15,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,15,18,18,16,17],
[13,0,11,14,15,12,15,21],
[15,20,0,14,15,15,18,22],
[16,17,17,0,16,14,13,22],
[13,16,16,15,0,17,18,22],
[13,19,16,17,14,0,15,21],
[15,16,13,18,13,16,0,22],
[14,10,9,9,9,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,13,21,20,22,23,15],
[8,0,9,15,10,13,11,7],
[18,22,0,14,21,20,22,16],
[10,16,17,0,19,17,18,10],
[11,21,10,12,0,19,19,14],
[9,18,11,14,12,0,20,9],
[8,20,9,13,12,11,0,11],
[16,24,15,21,17,22,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,18,17,16,19,12],
[13,0,18,22,24,16,20,17],
[16,13,0,13,16,12,18,15],
[13,9,18,0,15,15,16,14],
[14,7,15,16,0,13,16,14],
[15,15,19,16,18,0,17,13],
[12,11,13,15,15,14,0,11],
[19,14,16,17,17,18,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,18,14,22,10,14],
[16,0,13,23,19,24,12,18],
[17,18,0,18,14,20,15,16],
[13,8,13,0,15,15,9,12],
[17,12,17,16,0,14,15,17],
[9,7,11,16,17,0,7,13],
[21,19,16,22,16,24,0,14],
[17,13,15,19,14,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,20,15,15,17,12,15],
[9,0,20,11,11,11,11,13],
[11,11,0,16,12,11,10,11],
[16,20,15,0,17,9,10,12],
[16,20,19,14,0,17,11,16],
[14,20,20,22,14,0,19,18],
[19,20,21,21,20,12,0,15],
[16,18,20,19,15,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,27,23,19,11,15],
[8,0,15,15,19,12,16,19],
[8,16,0,19,15,12,12,15],
[4,16,12,0,12,12,12,12],
[8,12,16,19,0,16,0,8],
[12,19,19,19,15,0,12,15],
[20,15,19,19,31,19,0,15],
[16,12,16,19,23,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,19,17,18,13,16],
[18,0,16,17,13,15,14,15],
[14,15,0,19,18,18,13,19],
[12,14,12,0,13,16,12,15],
[14,18,13,18,0,18,17,15],
[13,16,13,15,13,0,10,13],
[18,17,18,19,14,21,0,20],
[15,16,12,16,16,18,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,13,13,9,18,16],
[17,0,17,14,14,15,21,20],
[18,14,0,17,18,18,20,19],
[18,17,14,0,16,17,23,20],
[18,17,13,15,0,14,21,17],
[22,16,13,14,17,0,22,22],
[13,10,11,8,10,9,0,14],
[15,11,12,11,14,9,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,25,25,13,18,18],
[13,0,12,25,25,13,13,12],
[13,19,0,19,31,19,12,12],
[6,6,12,0,18,7,19,12],
[6,6,0,13,0,13,6,0],
[18,18,12,24,18,0,24,18],
[13,18,19,12,25,7,0,19],
[13,19,19,19,31,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,11,16,8,10,8,11],
[26,0,19,18,16,21,12,23],
[20,12,0,23,8,10,12,15],
[15,13,8,0,10,10,8,11],
[23,15,23,21,0,16,17,23],
[21,10,21,21,15,0,15,26],
[23,19,19,23,14,16,0,19],
[20,8,16,20,8,5,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,22,20,21,18,21,14],
[14,0,20,15,14,17,20,16],
[9,11,0,13,12,14,13,5],
[11,16,18,0,12,16,12,8],
[10,17,19,19,0,14,14,13],
[13,14,17,15,17,0,12,11],
[10,11,18,19,17,19,0,13],
[17,15,26,23,18,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,20,11,21,31,11,21],
[20,0,20,10,10,31,10,20],
[11,11,0,11,21,31,11,21],
[20,21,20,0,10,31,0,10],
[10,21,10,21,0,21,21,21],
[0,0,0,0,10,0,0,10],
[20,21,20,31,10,31,0,21],
[10,11,10,21,10,21,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,19,11,16,19,18],
[16,0,14,16,11,10,21,16],
[15,17,0,19,13,13,22,16],
[12,15,12,0,10,9,13,16],
[20,20,18,21,0,15,20,21],
[15,21,18,22,16,0,20,15],
[12,10,9,18,11,11,0,10],
[13,15,15,15,10,16,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,4,10,16,20,10],
[21,0,11,5,17,17,21,16],
[20,20,0,10,10,22,20,26],
[27,26,21,0,12,12,20,22],
[21,14,21,19,0,16,26,22],
[15,14,9,19,15,0,14,10],
[11,10,11,11,5,17,0,6],
[21,15,5,9,9,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,23,13,18,18,19],
[14,0,15,16,11,7,18,18],
[12,16,0,11,8,8,16,12],
[8,15,20,0,12,9,18,16],
[18,20,23,19,0,19,15,15],
[13,24,23,22,12,0,24,18],
[13,13,15,13,16,7,0,13],
[12,13,19,15,16,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,20,9,11,9,11,20],
[20,0,20,9,20,9,20,20],
[11,11,0,11,22,20,11,11],
[22,22,20,0,22,20,11,11],
[20,11,9,9,0,9,9,9],
[22,22,11,11,22,0,11,11],
[20,11,20,20,22,20,0,20],
[11,11,20,20,22,20,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,14,14,14,17,16],
[9,0,16,12,14,9,12,17],
[9,15,0,12,10,11,10,10],
[17,19,19,0,17,12,15,15],
[17,17,21,14,0,16,11,19],
[17,22,20,19,15,0,15,14],
[14,19,21,16,20,16,0,19],
[15,14,21,16,12,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,20,25,14,21,13,21],
[9,0,12,15,11,15,8,16],
[11,19,0,16,8,15,16,16],
[6,16,15,0,11,11,8,12],
[17,20,23,20,0,20,15,17],
[10,16,16,20,11,0,9,15],
[18,23,15,23,16,22,0,19],
[10,15,15,19,14,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,20,14,23,20,16],
[11,0,11,12,7,14,5,11],
[10,20,0,15,9,20,16,11],
[11,19,16,0,13,23,17,15],
[17,24,22,18,0,15,20,14],
[8,17,11,8,16,0,16,19],
[11,26,15,14,11,15,0,15],
[15,20,20,16,17,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,14,17,13,13,16,16],
[9,0,18,19,12,14,15,11],
[17,13,0,13,12,14,13,9],
[14,12,18,0,14,16,10,15],
[18,19,19,17,0,15,16,14],
[18,17,17,15,16,0,14,16],
[15,16,18,21,15,17,0,12],
[15,20,22,16,17,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,13,15,8,16,15,16],
[10,0,10,5,13,13,10,12],
[18,21,0,19,15,16,13,16],
[16,26,12,0,18,17,19,16],
[23,18,16,13,0,17,17,16],
[15,18,15,14,14,0,15,11],
[16,21,18,12,14,16,0,11],
[15,19,15,15,15,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,17,16,19,15,19,18],
[10,0,20,19,21,16,21,17],
[14,11,0,18,17,17,16,13],
[15,12,13,0,15,14,16,19],
[12,10,14,16,0,13,15,16],
[16,15,14,17,18,0,12,13],
[12,10,15,15,16,19,0,17],
[13,14,18,12,15,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,16,17,21,10,10],
[16,0,18,16,14,21,16,13],
[18,13,0,16,9,16,13,9],
[15,15,15,0,7,21,11,13],
[14,17,22,24,0,24,17,17],
[10,10,15,10,7,0,10,13],
[21,15,18,20,14,21,0,14],
[21,18,22,18,14,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,25,12,18,18,12,12],
[19,0,19,12,18,18,6,12],
[6,12,0,18,18,18,12,6],
[19,19,13,0,24,12,19,19],
[13,13,13,7,0,13,7,13],
[13,13,13,19,18,0,13,13],
[19,25,19,12,24,18,0,18],
[19,19,25,12,18,18,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,14,15,17,18,20],
[14,0,18,12,15,17,16,16],
[15,13,0,9,16,17,12,19],
[17,19,22,0,15,15,12,20],
[16,16,15,16,0,13,11,19],
[14,14,14,16,18,0,14,16],
[13,15,19,19,20,17,0,19],
[11,15,12,11,12,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,31,31,10,31,21,20],
[11,0,31,21,21,31,21,31],
[0,0,0,10,10,31,21,20],
[0,10,21,0,10,31,11,20],
[21,10,21,21,0,21,21,10],
[0,0,0,0,10,0,11,10],
[10,10,10,20,10,20,0,20],
[11,0,11,11,21,21,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,15,17,19,15,16],
[12,0,11,16,18,19,15,13],
[12,20,0,20,19,21,20,17],
[16,15,11,0,15,19,17,15],
[14,13,12,16,0,16,14,12],
[12,12,10,12,15,0,13,11],
[16,16,11,14,17,18,0,19],
[15,18,14,16,19,20,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,15,18,10,18,18],
[11,0,25,15,11,11,15,7],
[7,6,0,15,14,14,11,7],
[16,16,16,0,12,14,8,14],
[13,20,17,19,0,11,11,11],
[21,20,17,17,20,0,10,19],
[13,16,20,23,20,21,0,14],
[13,24,24,17,20,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,20,13,14,13,20],
[18,0,25,18,18,25,11,19],
[17,6,0,6,19,0,6,6],
[11,13,25,0,13,25,12,25],
[18,13,12,18,0,12,18,12],
[17,6,31,6,19,0,11,25],
[18,20,25,19,13,20,0,20],
[11,12,25,6,19,6,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,19,20,16,17,17],
[12,0,14,18,13,15,12,13],
[17,17,0,20,16,12,17,16],
[12,13,11,0,10,17,13,11],
[11,18,15,21,0,13,19,16],
[15,16,19,14,18,0,18,16],
[14,19,14,18,12,13,0,16],
[14,18,15,20,15,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,16,13,10,12,12],
[19,0,16,18,17,11,16,15],
[16,15,0,17,17,16,15,9],
[15,13,14,0,17,13,15,12],
[18,14,14,14,0,14,17,14],
[21,20,15,18,17,0,17,14],
[19,15,16,16,14,14,0,16],
[19,16,22,19,17,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,17,13,13,9,9,8],
[23,0,27,20,20,12,23,22],
[14,4,0,20,13,0,0,7],
[18,11,11,0,12,4,11,11],
[18,11,18,19,0,14,18,11],
[22,19,31,27,17,0,16,15],
[22,8,31,20,13,15,0,15],
[23,9,24,20,20,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,8,17,22,16,15],
[16,0,16,20,15,20,20,23],
[17,15,0,15,17,17,8,25],
[23,11,16,0,21,17,14,21],
[14,16,14,10,0,18,12,23],
[9,11,14,14,13,0,8,15],
[15,11,23,17,19,23,0,23],
[16,8,6,10,8,16,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,21,16,15,14,19,18],
[17,0,20,14,20,11,17,14],
[10,11,0,12,9,10,14,12],
[15,17,19,0,16,15,17,20],
[16,11,22,15,0,8,15,16],
[17,20,21,16,23,0,17,14],
[12,14,17,14,16,14,0,13],
[13,17,19,11,15,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,18,21,19,19,26],
[16,0,15,13,17,19,14,16],
[15,16,0,18,23,20,21,22],
[13,18,13,0,26,20,19,17],
[10,14,8,5,0,11,14,15],
[12,12,11,11,20,0,13,15],
[12,17,10,12,17,18,0,18],
[5,15,9,14,16,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,19,12,19,6,22,16],
[22,0,22,21,22,12,22,22],
[12,9,0,15,15,9,18,12],
[19,10,16,0,22,22,19,16],
[12,9,16,9,0,9,19,6],
[25,19,22,9,22,0,25,16],
[9,9,13,12,12,6,0,6],
[15,9,19,15,25,15,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,12,10,14,14,10],
[18,0,15,20,14,17,21,12],
[22,16,0,17,17,14,19,17],
[19,11,14,0,14,14,17,17],
[21,17,14,17,0,16,16,20],
[17,14,17,17,15,0,19,14],
[17,10,12,14,15,12,0,11],
[21,19,14,14,11,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,15,16,18,16,15,31],
[12,0,7,9,11,16,11,23],
[16,24,0,13,11,9,16,27],
[15,22,18,0,15,22,15,31],
[13,20,20,16,0,20,16,20],
[15,15,22,9,11,0,11,23],
[16,20,15,16,15,20,0,28],
[0,8,4,0,11,8,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,17,14,18,18,16],
[15,0,11,17,16,17,13,18],
[16,20,0,17,19,18,14,19],
[14,14,14,0,16,13,13,15],
[17,15,12,15,0,13,16,21],
[13,14,13,18,18,0,17,16],
[13,18,17,18,15,14,0,20],
[15,13,12,16,10,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,6,16,15,9,15],
[17,0,20,16,19,11,17,17],
[13,11,0,7,14,7,10,16],
[25,15,24,0,20,18,12,17],
[15,12,17,11,0,15,13,14],
[16,20,24,13,16,0,16,20],
[22,14,21,19,18,15,0,20],
[16,14,15,14,17,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,21,20,15,18,10,19],
[13,0,19,17,18,18,13,16],
[10,12,0,18,9,16,9,14],
[11,14,13,0,10,14,16,14],
[16,13,22,21,0,21,13,23],
[13,13,15,17,10,0,8,14],
[21,18,22,15,18,23,0,19],
[12,15,17,17,8,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,14,15,19,14,13],
[17,0,16,16,20,15,15,21],
[21,15,0,18,18,22,16,17],
[17,15,13,0,19,19,10,18],
[16,11,13,12,0,14,11,17],
[12,16,9,12,17,0,12,12],
[17,16,15,21,20,19,0,18],
[18,10,14,13,14,19,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,13,22,22,17,25],
[13,0,18,12,15,17,13,17],
[11,13,0,10,15,10,15,17],
[18,19,21,0,18,18,15,22],
[9,16,16,13,0,15,13,10],
[9,14,21,13,16,0,12,13],
[14,18,16,16,18,19,0,18],
[6,14,14,9,21,18,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,15,20,18,23,16,15],
[12,0,15,16,16,19,18,15],
[16,16,0,14,19,21,17,14],
[11,15,17,0,16,20,16,17],
[13,15,12,15,0,19,12,15],
[8,12,10,11,12,0,11,9],
[15,13,14,15,19,20,0,14],
[16,16,17,14,16,22,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,15,20,16,17,18,15],
[24,0,16,21,23,26,28,15],
[16,15,0,22,24,26,26,18],
[11,10,9,0,16,16,15,9],
[15,8,7,15,0,16,14,8],
[14,5,5,15,15,0,16,9],
[13,3,5,16,17,15,0,6],
[16,16,13,22,23,22,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,17,15,16,18,15],
[13,0,16,15,16,17,14,14],
[16,15,0,16,16,15,14,13],
[14,16,15,0,14,18,16,15],
[16,15,15,17,0,17,14,12],
[15,14,16,13,14,0,13,16],
[13,17,17,15,17,18,0,16],
[16,17,18,16,19,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,10,18,9,10,5],
[22,0,16,8,19,17,13,15],
[19,15,0,13,14,17,13,12],
[21,23,18,0,17,19,15,17],
[13,12,17,14,0,12,10,9],
[22,14,14,12,19,0,13,10],
[21,18,18,16,21,18,0,14],
[26,16,19,14,22,21,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,28,21,13,26,26],
[18,0,26,23,13,15,28,23],
[15,5,0,20,10,20,20,25],
[3,8,11,0,6,8,16,13],
[10,18,21,25,0,18,26,25],
[18,16,11,23,13,0,26,18],
[5,3,11,15,5,5,0,10],
[5,8,6,18,6,13,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,6,11,16,17,14,9],
[22,0,23,18,15,18,19,19],
[25,8,0,16,11,20,14,19],
[20,13,15,0,16,18,16,14],
[15,16,20,15,0,19,14,11],
[14,13,11,13,12,0,12,13],
[17,12,17,15,17,19,0,18],
[22,12,12,17,20,18,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,11,10,12,15,11],
[17,0,16,16,12,13,15,12],
[18,15,0,18,10,14,18,18],
[20,15,13,0,12,15,15,10],
[21,19,21,19,0,16,23,15],
[19,18,17,16,15,0,22,16],
[16,16,13,16,8,9,0,12],
[20,19,13,21,16,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,14,13,17,18,12],
[19,0,20,19,17,19,19,11],
[17,11,0,16,16,16,16,13],
[17,12,15,0,17,18,17,14],
[18,14,15,14,0,19,17,18],
[14,12,15,13,12,0,13,15],
[13,12,15,14,14,18,0,12],
[19,20,18,17,13,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,20,15,20,26,26],
[5,0,10,9,9,4,15,9],
[5,21,0,10,10,16,16,15],
[11,22,21,0,26,15,21,11],
[16,22,21,5,0,11,15,11],
[11,27,15,16,20,0,31,21],
[5,16,15,10,16,0,0,15],
[5,22,16,20,20,10,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,12,11,12,9,7],
[18,0,13,18,16,16,14,12],
[19,18,0,14,12,17,16,15],
[19,13,17,0,13,18,16,17],
[20,15,19,18,0,23,17,16],
[19,15,14,13,8,0,11,13],
[22,17,15,15,14,20,0,14],
[24,19,16,14,15,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,12,8,14,22,11],
[20,0,18,19,19,17,22,15],
[16,13,0,7,16,13,20,12],
[19,12,24,0,23,16,21,16],
[23,12,15,8,0,17,21,13],
[17,14,18,15,14,0,19,12],
[9,9,11,10,10,12,0,13],
[20,16,19,15,18,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,13,12,18,6,12,14],
[12,0,15,14,12,8,14,11],
[18,16,0,13,18,8,10,14],
[19,17,18,0,18,11,10,17],
[13,19,13,13,0,11,13,17],
[25,23,23,20,20,0,17,14],
[19,17,21,21,18,14,0,15],
[17,20,17,14,14,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,14,18,20,18,19],
[16,0,12,11,10,14,12,17],
[16,19,0,17,22,19,18,15],
[17,20,14,0,15,23,20,20],
[13,21,9,16,0,21,21,20],
[11,17,12,8,10,0,11,20],
[13,19,13,11,10,20,0,17],
[12,14,16,11,11,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,24,17,14,18,19,16],
[16,0,15,18,14,16,15,5],
[7,16,0,14,8,16,14,9],
[14,13,17,0,11,22,19,10],
[17,17,23,20,0,24,21,13],
[13,15,15,9,7,0,12,12],
[12,16,17,12,10,19,0,14],
[15,26,22,21,18,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,20,20,19,14,18],
[16,0,15,17,19,16,15,16],
[19,16,0,17,19,22,19,13],
[11,14,14,0,14,16,14,14],
[11,12,12,17,0,11,14,16],
[12,15,9,15,20,0,11,19],
[17,16,12,17,17,20,0,19],
[13,15,18,17,15,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,19,15,15,16,17],
[15,0,17,14,16,18,13,14],
[13,14,0,12,12,16,15,14],
[12,17,19,0,16,19,17,18],
[16,15,19,15,0,15,17,18],
[16,13,15,12,16,0,14,14],
[15,18,16,14,14,17,0,14],
[14,17,17,13,13,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,21,15,21,17,21,21],
[13,0,17,16,22,21,18,18],
[10,14,0,13,17,14,17,19],
[16,15,18,0,21,19,20,18],
[10,9,14,10,0,8,12,14],
[14,10,17,12,23,0,16,20],
[10,13,14,11,19,15,0,16],
[10,13,12,13,17,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,12,15,14,12,15],
[17,0,15,13,17,14,16,17],
[17,16,0,15,15,16,16,18],
[19,18,16,0,17,21,15,18],
[16,14,16,14,0,14,11,19],
[17,17,15,10,17,0,14,16],
[19,15,15,16,20,17,0,19],
[16,14,13,13,12,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,3,9,12,10,11],
[21,0,14,15,12,17,17,21],
[19,17,0,14,16,15,21,16],
[28,16,17,0,15,18,21,21],
[22,19,15,16,0,18,22,17],
[19,14,16,13,13,0,18,15],
[21,14,10,10,9,13,0,12],
[20,10,15,10,14,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,15,16,14,12,19],
[15,0,16,19,13,18,17,16],
[18,15,0,17,16,10,20,18],
[16,12,14,0,15,14,12,15],
[15,18,15,16,0,14,19,19],
[17,13,21,17,17,0,17,17],
[19,14,11,19,12,14,0,17],
[12,15,13,16,12,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,17,17,12,24,22],
[10,0,20,13,11,16,13,17],
[11,11,0,14,14,14,13,13],
[14,18,17,0,13,12,15,21],
[14,20,17,18,0,21,12,26],
[19,15,17,19,10,0,14,21],
[7,18,18,16,19,17,0,19],
[9,14,18,10,5,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,20,21,19,22,19,15],
[2,0,9,9,10,13,13,8],
[11,22,0,17,21,24,23,18],
[10,22,14,0,22,21,17,14],
[12,21,10,9,0,22,15,16],
[9,18,7,10,9,0,11,13],
[12,18,8,14,16,20,0,10],
[16,23,13,17,15,18,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,31,23,23,15,31,16],
[8,0,23,23,23,23,24,8],
[0,8,0,15,7,15,24,0],
[8,8,16,0,23,16,16,8],
[8,8,24,8,0,16,24,16],
[16,8,16,15,15,0,16,8],
[0,7,7,15,7,15,0,0],
[15,23,31,23,15,23,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,10,22,18,11,7],
[18,0,19,14,12,11,11,11],
[15,12,0,9,16,14,14,12],
[21,17,22,0,22,15,11,13],
[9,19,15,9,0,11,11,3],
[13,20,17,16,20,0,17,16],
[20,20,17,20,20,14,0,20],
[24,20,19,18,28,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,5,5,11,0,16,5],
[26,0,16,17,11,11,17,6],
[26,15,0,6,21,11,26,21],
[26,14,25,0,15,11,20,15],
[20,20,10,16,0,10,20,15],
[31,20,20,20,21,0,26,15],
[15,14,5,11,11,5,0,5],
[26,25,10,16,16,16,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,25,22,18,24,15],
[10,0,15,16,20,10,26,13],
[11,16,0,15,20,16,22,18],
[6,15,16,0,19,13,20,16],
[9,11,11,12,0,18,16,10],
[13,21,15,18,13,0,21,16],
[7,5,9,11,15,10,0,7],
[16,18,13,15,21,15,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,20,14,17,15,18],
[15,0,17,16,19,17,18,23],
[16,14,0,18,18,16,21,21],
[11,15,13,0,12,16,20,19],
[17,12,13,19,0,16,13,15],
[14,14,15,15,15,0,18,22],
[16,13,10,11,18,13,0,22],
[13,8,10,12,16,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,21,14,17,16,22,21],
[16,0,14,17,16,19,22,16],
[10,17,0,15,15,17,20,16],
[17,14,16,0,16,15,16,15],
[14,15,16,15,0,12,19,14],
[15,12,14,16,19,0,20,17],
[9,9,11,15,12,11,0,9],
[10,15,15,16,17,14,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,7,18,10,13,17],
[21,0,18,10,21,13,14,17],
[15,13,0,12,22,14,16,18],
[24,21,19,0,23,22,15,23],
[13,10,9,8,0,13,11,17],
[21,18,17,9,18,0,13,18],
[18,17,15,16,20,18,0,19],
[14,14,13,8,14,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,15,20,16,19,17,18],
[8,0,12,19,11,17,15,15],
[16,19,0,24,11,21,15,18],
[11,12,7,0,8,13,10,12],
[15,20,20,23,0,18,15,20],
[12,14,10,18,13,0,13,18],
[14,16,16,21,16,18,0,23],
[13,16,13,19,11,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,22,14,15,15,16],
[14,0,13,19,12,16,13,12],
[15,18,0,22,17,16,17,17],
[9,12,9,0,10,11,7,7],
[17,19,14,21,0,17,16,17],
[16,15,15,20,14,0,14,13],
[16,18,14,24,15,17,0,12],
[15,19,14,24,14,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,16,14,22,17,17],
[13,0,16,12,18,15,13,16],
[15,15,0,15,17,19,15,15],
[15,19,16,0,14,17,16,17],
[17,13,14,17,0,16,14,16],
[9,16,12,14,15,0,15,16],
[14,18,16,15,17,16,0,18],
[14,15,16,14,15,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,22,14,20,17,16],
[15,0,9,19,17,25,24,19],
[13,22,0,24,14,22,24,18],
[9,12,7,0,9,11,11,9],
[17,14,17,22,0,19,17,17],
[11,6,9,20,12,0,17,12],
[14,7,7,20,14,14,0,18],
[15,12,13,22,14,19,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,5,9,27,21,16,10],
[21,0,21,15,17,21,15,5],
[26,10,0,20,27,21,21,15],
[22,16,11,0,27,21,21,21],
[4,14,4,4,0,21,20,14],
[10,10,10,10,10,0,15,15],
[15,16,10,10,11,16,0,5],
[21,26,16,10,17,16,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,16,11,15,13,13],
[11,0,11,12,17,15,12,12],
[12,20,0,12,14,18,11,14],
[15,19,19,0,15,13,14,16],
[20,14,17,16,0,14,15,12],
[16,16,13,18,17,0,10,17],
[18,19,20,17,16,21,0,15],
[18,19,17,15,19,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,18,16,16,17,23],
[13,0,22,28,22,26,21,17],
[19,9,0,12,12,12,10,16],
[13,3,19,0,15,16,16,16],
[15,9,19,16,0,19,13,16],
[15,5,19,15,12,0,17,14],
[14,10,21,15,18,14,0,12],
[8,14,15,15,15,17,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,11,13,13,13,16],
[18,0,17,13,17,17,17,18],
[16,14,0,13,18,14,15,19],
[20,18,18,0,15,18,18,22],
[18,14,13,16,0,16,19,13],
[18,14,17,13,15,0,15,15],
[18,14,16,13,12,16,0,19],
[15,13,12,9,18,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,10,15,21,15,16],
[21,0,21,21,23,16,20,13],
[21,10,0,10,15,11,15,16],
[21,10,21,0,15,14,20,6],
[16,8,16,16,0,14,10,13],
[10,15,20,17,17,0,22,12],
[16,11,16,11,21,9,0,6],
[15,18,15,25,18,19,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,15,16,14,14,12],
[17,0,18,21,13,16,16,18],
[15,13,0,12,11,15,16,18],
[16,10,19,0,9,13,14,14],
[15,18,20,22,0,15,17,14],
[17,15,16,18,16,0,18,18],
[17,15,15,17,14,13,0,15],
[19,13,13,17,17,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,22,21,21,17,20,16],
[17,0,18,13,12,15,20,15],
[9,13,0,12,19,13,20,9],
[10,18,19,0,20,22,29,16],
[10,19,12,11,0,9,16,11],
[14,16,18,9,22,0,23,14],
[11,11,11,2,15,8,0,10],
[15,16,22,15,20,17,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,12,13,14,13,17],
[19,0,14,15,19,17,15,17],
[17,17,0,18,14,18,18,15],
[19,16,13,0,12,12,11,11],
[18,12,17,19,0,18,12,14],
[17,14,13,19,13,0,13,15],
[18,16,13,20,19,18,0,17],
[14,14,16,20,17,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,16,10,4,12,9],
[21,0,21,18,19,16,18,12],
[19,10,0,18,12,11,12,12],
[15,13,13,0,22,7,15,9],
[21,12,19,9,0,16,18,11],
[27,15,20,24,15,0,22,20],
[19,13,19,16,13,9,0,8],
[22,19,19,22,20,11,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,15,11,14,15,15,10],
[6,0,6,12,15,15,12,11],
[16,25,0,11,14,20,27,10],
[20,19,20,0,15,25,26,20],
[17,16,17,16,0,22,22,15],
[16,16,11,6,9,0,17,10],
[16,19,4,5,9,14,0,10],
[21,20,21,11,16,21,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,24,15,21,24,22],
[12,0,13,14,13,16,14,17],
[14,18,0,13,12,16,19,19],
[7,17,18,0,16,14,15,21],
[16,18,19,15,0,18,21,25],
[10,15,15,17,13,0,16,22],
[7,17,12,16,10,15,0,20],
[9,14,12,10,6,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,14,9,13,15,8],
[17,0,18,19,17,15,20,13],
[19,13,0,16,14,13,13,15],
[17,12,15,0,14,14,17,17],
[22,14,17,17,0,16,19,19],
[18,16,18,17,15,0,24,15],
[16,11,18,14,12,7,0,11],
[23,18,16,14,12,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,9,9,14,16,13],
[11,0,13,9,16,9,6,14],
[15,18,0,14,11,12,11,5],
[22,22,17,0,11,18,19,15],
[22,15,20,20,0,10,17,14],
[17,22,19,13,21,0,14,15],
[15,25,20,12,14,17,0,18],
[18,17,26,16,17,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,14,17,13,23,18],
[8,0,14,9,13,13,9,11],
[14,17,0,17,13,16,17,15],
[17,22,14,0,21,13,20,23],
[14,18,18,10,0,12,18,14],
[18,18,15,18,19,0,19,20],
[8,22,14,11,13,12,0,13],
[13,20,16,8,17,11,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,12,17,17,14,19],
[15,0,15,13,13,12,17,18],
[14,16,0,16,16,13,13,15],
[19,18,15,0,12,12,16,12],
[14,18,15,19,0,15,19,18],
[14,19,18,19,16,0,16,21],
[17,14,18,15,12,15,0,16],
[12,13,16,19,13,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,13,16,27,15,13],
[13,0,14,10,12,18,10,13],
[14,17,0,17,14,22,15,16],
[18,21,14,0,15,25,13,10],
[15,19,17,16,0,17,12,17],
[4,13,9,6,14,0,7,9],
[16,21,16,18,19,24,0,15],
[18,18,15,21,14,22,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,21,11,11,18,18,15],
[17,0,16,9,17,17,12,16],
[10,15,0,12,11,16,12,10],
[20,22,19,0,19,24,18,10],
[20,14,20,12,0,17,18,13],
[13,14,15,7,14,0,11,11],
[13,19,19,13,13,20,0,14],
[16,15,21,21,18,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,13,17,17,18,14,20],
[12,0,15,11,13,15,12,15],
[18,16,0,12,16,16,14,21],
[14,20,19,0,18,24,17,19],
[14,18,15,13,0,15,16,18],
[13,16,15,7,16,0,15,14],
[17,19,17,14,15,16,0,19],
[11,16,10,12,13,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,12,14,15,14,11],
[16,0,12,14,16,18,12,15],
[16,19,0,17,20,17,14,17],
[19,17,14,0,14,16,12,9],
[17,15,11,17,0,18,16,20],
[16,13,14,15,13,0,13,13],
[17,19,17,19,15,18,0,16],
[20,16,14,22,11,18,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,20,17,18,17,21],
[19,0,14,18,18,15,15,19],
[15,17,0,16,15,17,23,18],
[11,13,15,0,21,13,18,19],
[14,13,16,10,0,12,13,23],
[13,16,14,18,19,0,15,18],
[14,16,8,13,18,16,0,17],
[10,12,13,12,8,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,15,20,12,18,16],
[11,0,13,10,16,16,17,17],
[11,18,0,10,15,14,19,14],
[16,21,21,0,21,13,19,17],
[11,15,16,10,0,14,17,14],
[19,15,17,18,17,0,19,19],
[13,14,12,12,14,12,0,16],
[15,14,17,14,17,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,12,12,7,14,12],
[20,0,22,18,19,14,19,15],
[17,9,0,19,8,13,16,10],
[19,13,12,0,10,17,14,13],
[19,12,23,21,0,15,20,17],
[24,17,18,14,16,0,14,15],
[17,12,15,17,11,17,0,13],
[19,16,21,18,14,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,18,18,21,15,15,21],
[10,0,12,18,22,9,18,9],
[13,19,0,12,19,12,13,16],
[13,13,19,0,22,16,25,16],
[10,9,12,9,0,12,15,12],
[16,22,19,15,19,0,19,19],
[16,13,18,6,16,12,0,12],
[10,22,15,15,19,12,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,17,20,15,16,14,14],
[11,0,12,13,8,10,12,15],
[14,19,0,10,18,16,16,16],
[11,18,21,0,17,12,13,11],
[16,23,13,14,0,19,17,16],
[15,21,15,19,12,0,13,14],
[17,19,15,18,14,18,0,14],
[17,16,15,20,15,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,13,10,13,12,11],
[17,0,20,18,10,16,15,14],
[15,11,0,12,11,13,14,13],
[18,13,19,0,12,16,19,14],
[21,21,20,19,0,15,19,16],
[18,15,18,15,16,0,15,12],
[19,16,17,12,12,16,0,11],
[20,17,18,17,15,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,15,17,14,17,20,15],
[11,0,13,15,13,17,16,16],
[16,18,0,13,13,19,16,12],
[14,16,18,0,17,16,14,13],
[17,18,18,14,0,17,16,15],
[14,14,12,15,14,0,10,16],
[11,15,15,17,15,21,0,15],
[16,15,19,18,16,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,16,14,15,8,14],
[18,0,18,16,18,13,8,21],
[14,13,0,17,16,16,16,14],
[15,15,14,0,12,10,16,15],
[17,13,15,19,0,13,16,16],
[16,18,15,21,18,0,16,18],
[23,23,15,15,15,15,0,21],
[17,10,17,16,15,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,22,14,17,16,16],
[15,0,16,15,13,13,15,12],
[17,15,0,18,17,18,13,15],
[9,16,13,0,12,12,14,13],
[17,18,14,19,0,15,15,16],
[14,18,13,19,16,0,13,15],
[15,16,18,17,16,18,0,15],
[15,19,16,18,15,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,11,12,13,14,12,12],
[18,0,15,17,21,17,19,13],
[20,16,0,13,20,14,19,15],
[19,14,18,0,17,18,17,17],
[18,10,11,14,0,15,14,14],
[17,14,17,13,16,0,19,13],
[19,12,12,14,17,12,0,14],
[19,18,16,14,17,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,15,11,16,12,17],
[15,0,11,15,10,16,9,18],
[18,20,0,13,14,15,18,20],
[16,16,18,0,14,13,12,16],
[20,21,17,17,0,17,13,20],
[15,15,16,18,14,0,15,17],
[19,22,13,19,18,16,0,23],
[14,13,11,15,11,14,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,16,13,16,14,24],
[19,0,9,15,16,17,12,23],
[14,22,0,17,15,13,11,20],
[15,16,14,0,15,11,12,21],
[18,15,16,16,0,18,20,19],
[15,14,18,20,13,0,5,14],
[17,19,20,19,11,26,0,19],
[7,8,11,10,12,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,13,15,20,17,19,18],
[9,0,15,17,15,16,18,18],
[18,16,0,19,17,17,14,23],
[16,14,12,0,16,19,18,19],
[11,16,14,15,0,16,20,17],
[14,15,14,12,15,0,14,21],
[12,13,17,13,11,17,0,18],
[13,13,8,12,14,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,22,17,15,18,18,17],
[10,0,18,12,14,19,13,19],
[9,13,0,13,13,15,16,12],
[14,19,18,0,14,21,16,15],
[16,17,18,17,0,15,16,18],
[13,12,16,10,16,0,15,15],
[13,18,15,15,15,16,0,18],
[14,12,19,16,13,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,13,16,8,13,11],
[21,0,20,15,19,19,20,17],
[17,11,0,13,14,12,16,13],
[18,16,18,0,19,18,17,12],
[15,12,17,12,0,14,17,14],
[23,12,19,13,17,0,21,17],
[18,11,15,14,14,10,0,10],
[20,14,18,19,17,14,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,24,24,20,14,20],
[13,0,7,18,14,17,16,9],
[18,24,0,24,17,16,15,14],
[7,13,7,0,10,21,7,7],
[7,17,14,21,0,22,7,12],
[11,14,15,10,9,0,11,11],
[17,15,16,24,24,20,0,17],
[11,22,17,24,19,20,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,9,14,14,4,17],
[21,0,8,13,23,23,4,17],
[23,23,0,13,27,19,17,21],
[22,18,18,0,18,10,14,16],
[17,8,4,13,0,10,0,13],
[17,8,12,21,21,0,8,17],
[27,27,14,17,31,23,0,21],
[14,14,10,15,18,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,23,27,13,21,17,17],
[11,0,12,18,12,16,7,12],
[8,19,0,14,16,12,9,9],
[4,13,17,0,12,12,8,12],
[18,19,15,19,0,13,9,9],
[10,15,19,19,18,0,19,14],
[14,24,22,23,22,12,0,9],
[14,19,22,19,22,17,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,16,17,15,16,19],
[17,0,15,18,12,16,22,16],
[16,16,0,12,13,11,16,16],
[15,13,19,0,12,16,19,17],
[14,19,18,19,0,17,20,18],
[16,15,20,15,14,0,20,19],
[15,9,15,12,11,11,0,18],
[12,15,15,14,13,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,11,15,14,7,7],
[15,0,16,9,13,15,8,10],
[18,15,0,16,23,24,15,15],
[20,22,15,0,16,25,11,17],
[16,18,8,15,0,21,21,17],
[17,16,7,6,10,0,9,8],
[24,23,16,20,10,22,0,12],
[24,21,16,14,14,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,24,9,15,15,18,10],
[19,0,22,19,13,13,19,17],
[7,9,0,10,9,9,14,10],
[22,12,21,0,17,18,20,11],
[16,18,22,14,0,20,19,14],
[16,18,22,13,11,0,18,12],
[13,12,17,11,12,13,0,16],
[21,14,21,20,17,19,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,19,16,18,17,15],
[14,0,10,19,13,14,13,19],
[15,21,0,26,22,19,23,26],
[12,12,5,0,6,10,17,18],
[15,18,9,25,0,17,20,23],
[13,17,12,21,14,0,22,18],
[14,18,8,14,11,9,0,12],
[16,12,5,13,8,13,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,19,19,17,23,15,21],
[17,0,15,16,22,20,17,19],
[12,16,0,10,14,17,14,18],
[12,15,21,0,15,16,15,15],
[14,9,17,16,0,14,18,18],
[8,11,14,15,17,0,13,13],
[16,14,17,16,13,18,0,19],
[10,12,13,16,13,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,17,19,21,21,20],
[15,0,14,17,17,19,22,20],
[16,17,0,13,19,17,20,15],
[14,14,18,0,18,21,20,16],
[12,14,12,13,0,20,17,15],
[10,12,14,10,11,0,14,14],
[10,9,11,11,14,17,0,13],
[11,11,16,15,16,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,18,16,12,11,17],
[21,0,12,18,17,13,13,15],
[17,19,0,18,21,14,20,15],
[13,13,13,0,13,12,12,12],
[15,14,10,18,0,12,16,11],
[19,18,17,19,19,0,15,20],
[20,18,11,19,15,16,0,14],
[14,16,16,19,20,11,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,19,17,15,19,23],
[16,0,14,21,21,17,16,19],
[9,17,0,21,19,18,18,23],
[12,10,10,0,16,15,14,18],
[14,10,12,15,0,19,12,17],
[16,14,13,16,12,0,17,21],
[12,15,13,17,19,14,0,16],
[8,12,8,13,14,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,7,0,0,0,7,10],
[24,0,17,10,17,17,10,10],
[24,14,0,0,7,7,7,10],
[31,21,31,0,21,21,14,24],
[31,14,24,10,0,21,7,17],
[31,14,24,10,10,0,17,17],
[24,21,24,17,24,14,0,17],
[21,21,21,7,14,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,15,21,18,11,22,17],
[9,0,4,10,9,11,15,6],
[16,27,0,22,18,11,23,22],
[10,21,9,0,5,11,20,0],
[13,22,13,26,0,11,19,22],
[20,20,20,20,20,0,20,11],
[9,16,8,11,12,11,0,11],
[14,25,9,31,9,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,20,11,20,20,11],
[20,0,20,20,0,9,20,0],
[20,11,0,20,0,9,20,0],
[11,11,11,0,11,11,11,11],
[20,31,31,20,0,9,20,31],
[11,22,22,20,22,0,20,22],
[11,11,11,20,11,11,0,11],
[20,31,31,20,0,9,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,14,8,21,15,20,22],
[10,0,9,7,8,9,14,15],
[17,22,0,13,15,16,22,17],
[23,24,18,0,19,15,25,21],
[10,23,16,12,0,16,19,17],
[16,22,15,16,15,0,24,25],
[11,17,9,6,12,7,0,19],
[9,16,14,10,14,6,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,0,0,0,0,0,0],
[31,0,20,9,20,9,9,9],
[31,11,0,0,11,20,11,0],
[31,22,31,0,11,20,20,20],
[31,11,20,20,0,20,9,20],
[31,22,11,11,11,0,0,0],
[31,22,20,11,22,31,0,20],
[31,22,31,11,11,31,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,9,12,16,12,11],
[15,0,21,17,16,17,17,17],
[16,10,0,10,15,12,11,9],
[22,14,21,0,15,23,16,15],
[19,15,16,16,0,20,13,15],
[15,14,19,8,11,0,14,15],
[19,14,20,15,18,17,0,19],
[20,14,22,16,16,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,24,20,23,18,15],
[21,0,14,26,25,24,22,26],
[19,17,0,19,13,19,16,14],
[7,5,12,0,18,18,17,10],
[11,6,18,13,0,21,16,11],
[8,7,12,13,10,0,12,11],
[13,9,15,14,15,19,0,9],
[16,5,17,21,20,20,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,10,20,21,21,21,21],
[10,0,20,10,10,10,10,20],
[21,11,0,21,21,21,11,21],
[11,21,10,0,21,11,21,21],
[10,21,10,10,0,21,21,10],
[10,21,10,20,10,0,10,10],
[10,21,20,10,10,21,0,20],
[10,11,10,10,21,21,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,11,18,21,17,15,17],
[11,0,15,15,18,14,11,16],
[20,16,0,18,18,19,15,16],
[13,16,13,0,18,16,14,12],
[10,13,13,13,0,10,12,10],
[14,17,12,15,21,0,17,13],
[16,20,16,17,19,14,0,19],
[14,15,15,19,21,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,15,14,12,18,14],
[15,0,16,14,11,14,19,14],
[16,15,0,18,17,17,21,16],
[16,17,13,0,13,16,15,16],
[17,20,14,18,0,19,21,16],
[19,17,14,15,12,0,19,14],
[13,12,10,16,10,12,0,10],
[17,17,15,15,15,17,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,13,17,17,17,17],
[14,0,13,11,14,16,15,18],
[19,18,0,13,13,17,16,16],
[18,20,18,0,15,19,15,17],
[14,17,18,16,0,17,15,18],
[14,15,14,12,14,0,13,18],
[14,16,15,16,16,18,0,16],
[14,13,15,14,13,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,9,15,17,19,17,12],
[21,0,17,17,15,19,20,13],
[22,14,0,20,22,20,22,20],
[16,14,11,0,14,15,20,14],
[14,16,9,17,0,14,18,18],
[12,12,11,16,17,0,14,12],
[14,11,9,11,13,17,0,11],
[19,18,11,17,13,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,14,21,8,17,17],
[20,0,17,13,25,19,22,19],
[15,14,0,9,23,15,21,15],
[17,18,22,0,24,18,21,13],
[10,6,8,7,0,7,7,6],
[23,12,16,13,24,0,17,15],
[14,9,10,10,24,14,0,12],
[14,12,16,18,25,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,14,21,22,14,15],
[19,0,11,13,19,20,15,18],
[17,20,0,15,16,25,17,21],
[17,18,16,0,16,22,15,15],
[10,12,15,15,0,17,11,13],
[9,11,6,9,14,0,11,10],
[17,16,14,16,20,20,0,17],
[16,13,10,16,18,21,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,11,14,13,15,16],
[20,0,19,14,12,19,21,18],
[15,12,0,13,16,21,17,17],
[20,17,18,0,19,14,16,20],
[17,19,15,12,0,16,15,20],
[18,12,10,17,15,0,15,17],
[16,10,14,15,16,16,0,17],
[15,13,14,11,11,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,14,16,15,14,12],
[15,0,16,16,14,14,12,17],
[20,15,0,19,18,16,18,18],
[17,15,12,0,11,13,12,12],
[15,17,13,20,0,15,14,17],
[16,17,15,18,16,0,12,18],
[17,19,13,19,17,19,0,20],
[19,14,13,19,14,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,8,13,13,10,16],
[19,0,7,12,12,16,15,8],
[22,24,0,15,16,19,22,19],
[23,19,16,0,20,19,10,13],
[18,19,15,11,0,15,11,12],
[18,15,12,12,16,0,18,19],
[21,16,9,21,20,13,0,16],
[15,23,12,18,19,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,20,24,18,14,18,14],
[25,0,14,18,12,20,12,15],
[11,17,0,10,8,14,19,11],
[7,13,21,0,15,17,25,21],
[13,19,23,16,0,23,31,19],
[17,11,17,14,8,0,15,11],
[13,19,12,6,0,16,0,7],
[17,16,20,10,12,20,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,23,18,18,22,17,17],
[17,0,9,13,11,17,14,17],
[8,22,0,15,11,14,10,14],
[13,18,16,0,18,18,10,15],
[13,20,20,13,0,25,17,20],
[9,14,17,13,6,0,10,14],
[14,17,21,21,14,21,0,18],
[14,14,17,16,11,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,9,10,14,19,10],
[15,0,11,11,11,6,16,9],
[17,20,0,10,13,14,17,11],
[22,20,21,0,14,17,20,15],
[21,20,18,17,0,21,25,12],
[17,25,17,14,10,0,22,18],
[12,15,14,11,6,9,0,14],
[21,22,20,16,19,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,11,17,14,25,16,19],
[12,0,13,21,16,25,16,19],
[20,18,0,18,10,18,12,19],
[14,10,13,0,16,21,16,15],
[17,15,21,15,0,23,17,17],
[6,6,13,10,8,0,12,13],
[15,15,19,15,14,19,0,19],
[12,12,12,16,14,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,11,12,11,3,10],
[14,0,17,14,9,8,9,7],
[17,14,0,9,6,3,11,9],
[20,17,22,0,17,5,8,15],
[19,22,25,14,0,19,19,15],
[20,23,28,26,12,0,17,16],
[28,22,20,23,12,14,0,13],
[21,24,22,16,16,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,20,19,16,20,15],
[13,0,17,18,16,13,18,14],
[15,14,0,15,13,15,15,15],
[11,13,16,0,15,12,16,13],
[12,15,18,16,0,19,18,17],
[15,18,16,19,12,0,19,19],
[11,13,16,15,13,12,0,16],
[16,17,16,18,14,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,11,20,20,31,20],
[11,0,31,22,20,20,20,31],
[11,0,0,11,0,0,11,20],
[20,9,20,0,20,20,20,9],
[11,11,31,11,0,11,20,20],
[11,11,31,11,20,0,20,20],
[0,11,20,11,11,11,0,20],
[11,0,11,22,11,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,19,18,19,20,15,11],
[9,0,28,15,19,17,15,15],
[12,3,0,14,7,12,7,18],
[13,16,17,0,12,20,17,15],
[12,12,24,19,0,16,16,14],
[11,14,19,11,15,0,19,15],
[16,16,24,14,15,12,0,14],
[20,16,13,16,17,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,8,16,22,12,18],
[18,0,16,16,12,22,19,15],
[19,15,0,18,18,24,18,14],
[23,15,13,0,23,26,21,21],
[15,19,13,8,0,20,13,18],
[9,9,7,5,11,0,12,7],
[19,12,13,10,18,19,0,17],
[13,16,17,10,13,24,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,14,21,18,18,18,24],
[9,0,15,14,16,17,12,20],
[17,16,0,20,14,17,15,19],
[10,17,11,0,16,17,14,23],
[13,15,17,15,0,18,12,22],
[13,14,14,14,13,0,12,18],
[13,19,16,17,19,19,0,21],
[7,11,12,8,9,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,11,17,19,14,11],
[17,0,14,18,16,18,16,17],
[15,17,0,18,19,17,18,13],
[20,13,13,0,12,15,14,10],
[14,15,12,19,0,13,16,13],
[12,13,14,16,18,0,14,11],
[17,15,13,17,15,17,0,16],
[20,14,18,21,18,20,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,19,14,26,18,24,12],
[7,0,12,7,13,11,6,12],
[12,19,0,19,25,19,25,18],
[17,24,12,0,24,24,24,17],
[5,18,6,7,0,12,18,11],
[13,20,12,7,19,0,26,19],
[7,25,6,7,13,5,0,13],
[19,19,13,14,20,12,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,22,12,13,11,15],
[14,0,14,22,11,17,14,17],
[17,17,0,18,18,12,17,17],
[9,9,13,0,8,13,10,13],
[19,20,13,23,0,15,14,19],
[18,14,19,18,16,0,15,17],
[20,17,14,21,17,16,0,20],
[16,14,14,18,12,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,22,9,19,18,22],
[15,0,15,20,16,24,18,26],
[21,16,0,27,10,20,17,27],
[9,11,4,0,10,18,12,26],
[22,15,21,21,0,21,18,21],
[12,7,11,13,10,0,12,13],
[13,13,14,19,13,19,0,26],
[9,5,4,5,10,18,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,17,9,12,13,7,17],
[23,0,23,16,9,15,14,19],
[14,8,0,15,11,12,4,11],
[22,15,16,0,18,13,14,18],
[19,22,20,13,0,15,16,19],
[18,16,19,18,16,0,9,23],
[24,17,27,17,15,22,0,26],
[14,12,20,13,12,8,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,11,14,10,15,14],
[15,0,20,16,17,14,15,16],
[15,11,0,15,17,15,17,15],
[20,15,16,0,15,12,16,14],
[17,14,14,16,0,17,12,14],
[21,17,16,19,14,0,15,16],
[16,16,14,15,19,16,0,14],
[17,15,16,17,17,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,13,8,15,10,13],
[17,0,14,19,15,16,8,16],
[20,17,0,18,16,13,12,16],
[18,12,13,0,16,22,18,18],
[23,16,15,15,0,20,11,20],
[16,15,18,9,11,0,12,15],
[21,23,19,13,20,19,0,19],
[18,15,15,13,11,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,9,16,13,16,15],
[19,0,14,11,19,20,20,23],
[19,17,0,19,17,22,15,18],
[22,20,12,0,17,16,17,19],
[15,12,14,14,0,16,15,16],
[18,11,9,15,15,0,16,18],
[15,11,16,14,16,15,0,17],
[16,8,13,12,15,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,13,16,17,21,19],
[15,0,20,13,20,19,20,21],
[16,11,0,14,12,16,14,12],
[18,18,17,0,15,16,19,18],
[15,11,19,16,0,17,14,22],
[14,12,15,15,14,0,13,14],
[10,11,17,12,17,18,0,21],
[12,10,19,13,9,17,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,16,16,16,14,16,16],
[12,0,9,14,12,12,7,12],
[15,22,0,13,16,17,15,21],
[15,17,18,0,18,13,14,18],
[15,19,15,13,0,20,12,18],
[17,19,14,18,11,0,15,16],
[15,24,16,17,19,16,0,20],
[15,19,10,13,13,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,23,14,17,16,22,17],
[17,0,20,20,16,15,21,16],
[8,11,0,14,13,12,17,14],
[17,11,17,0,15,13,23,13],
[14,15,18,16,0,11,20,11],
[15,16,19,18,20,0,23,17],
[9,10,14,8,11,8,0,14],
[14,15,17,18,20,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,15,19,14,10,9],
[15,0,15,12,20,16,12,16],
[17,16,0,13,16,10,15,11],
[16,19,18,0,21,15,10,14],
[12,11,15,10,0,12,5,11],
[17,15,21,16,19,0,17,18],
[21,19,16,21,26,14,0,20],
[22,15,20,17,20,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,3,8,23,9,17,17],
[28,0,18,15,25,21,25,21],
[28,13,0,17,23,23,26,21],
[23,16,14,0,21,17,21,22],
[8,6,8,10,0,11,16,16],
[22,10,8,14,20,0,22,14],
[14,6,5,10,15,9,0,11],
[14,10,10,9,15,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,12,16,12,11,16],
[17,0,19,14,10,9,11,19],
[15,12,0,10,14,8,8,14],
[19,17,21,0,18,14,12,17],
[15,21,17,13,0,16,16,18],
[19,22,23,17,15,0,16,20],
[20,20,23,19,15,15,0,22],
[15,12,17,14,13,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,14,18,17,10,19,14],
[11,0,12,14,16,9,17,11],
[17,19,0,16,18,16,18,14],
[13,17,15,0,21,14,20,16],
[14,15,13,10,0,13,13,14],
[21,22,15,17,18,0,21,15],
[12,14,13,11,18,10,0,11],
[17,20,17,15,17,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,16,11,14,12,13],
[19,0,17,14,16,17,18,16],
[18,14,0,17,12,17,17,17],
[15,17,14,0,13,15,16,16],
[20,15,19,18,0,15,14,15],
[17,14,14,16,16,0,11,17],
[19,13,14,15,17,20,0,14],
[18,15,14,15,16,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,10,14,12,11,12],
[18,0,12,15,13,19,15,16],
[19,19,0,15,15,16,14,16],
[21,16,16,0,16,19,17,15],
[17,18,16,15,0,16,19,15],
[19,12,15,12,15,0,12,17],
[20,16,17,14,12,19,0,15],
[19,15,15,16,16,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,12,9,14,11,18],
[17,0,13,21,9,18,14,14],
[15,18,0,17,17,18,17,14],
[19,10,14,0,9,17,10,16],
[22,22,14,22,0,19,24,21],
[17,13,13,14,12,0,12,17],
[20,17,14,21,7,19,0,18],
[13,17,17,15,10,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,16,16,16,16,14],
[18,0,12,11,12,12,15,11],
[15,19,0,15,21,15,18,16],
[15,20,16,0,22,20,16,20],
[15,19,10,9,0,14,14,15],
[15,19,16,11,17,0,16,15],
[15,16,13,15,17,15,0,16],
[17,20,15,11,16,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,23,24,14,15,24],
[13,0,15,20,11,11,8,13],
[15,16,0,21,16,17,13,17],
[8,11,10,0,7,10,3,13],
[7,20,15,24,0,8,12,16],
[17,20,14,21,23,0,16,19],
[16,23,18,28,19,15,0,22],
[7,18,14,18,15,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,16,13,14,10,16],
[13,0,13,12,7,6,9,9],
[17,18,0,16,15,16,9,15],
[15,19,15,0,15,13,11,19],
[18,24,16,16,0,13,18,18],
[17,25,15,18,18,0,13,21],
[21,22,22,20,13,18,0,19],
[15,22,16,12,13,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,18,16,20,20,17,15],
[11,0,15,18,16,18,14,15],
[13,16,0,18,18,16,21,12],
[15,13,13,0,12,16,14,13],
[11,15,13,19,0,17,14,10],
[11,13,15,15,14,0,17,16],
[14,17,10,17,17,14,0,10],
[16,16,19,18,21,15,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,17,13,14,17,15],
[19,0,17,20,13,17,20,15],
[16,14,0,17,13,13,13,14],
[14,11,14,0,11,14,13,12],
[18,18,18,20,0,17,15,19],
[17,14,18,17,14,0,14,14],
[14,11,18,18,16,17,0,15],
[16,16,17,19,12,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,20,18,18,21,19],
[16,0,18,19,15,19,18,25],
[16,13,0,19,12,20,19,23],
[11,12,12,0,11,12,9,16],
[13,16,19,20,0,19,17,20],
[13,12,11,19,12,0,10,18],
[10,13,12,22,14,21,0,20],
[12,6,8,15,11,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,10,21,19,13,11,17],
[17,0,13,17,11,12,16,13],
[21,18,0,16,18,16,11,18],
[10,14,15,0,13,18,8,12],
[12,20,13,18,0,16,12,19],
[18,19,15,13,15,0,10,16],
[20,15,20,23,19,21,0,16],
[14,18,13,19,12,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,15,16,16,11,16],
[18,0,16,16,22,15,16,18],
[19,15,0,14,17,17,15,20],
[16,15,17,0,16,19,14,21],
[15,9,14,15,0,15,14,17],
[15,16,14,12,16,0,12,18],
[20,15,16,17,17,19,0,20],
[15,13,11,10,14,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,19,22,23,18,15],
[8,0,9,13,14,15,12,15],
[14,22,0,19,20,20,13,19],
[12,18,12,0,13,16,12,13],
[9,17,11,18,0,14,11,12],
[8,16,11,15,17,0,15,18],
[13,19,18,19,20,16,0,19],
[16,16,12,18,19,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,23,16,15,18,20,19],
[20,0,23,20,15,18,15,20],
[8,8,0,0,6,6,3,8],
[15,11,31,0,15,16,12,12],
[16,16,25,16,0,11,16,13],
[13,13,25,15,20,0,19,18],
[11,16,28,19,15,12,0,18],
[12,11,23,19,18,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,14,11,11,11,10],
[15,0,22,7,10,16,12,9],
[15,9,0,5,13,5,13,9],
[17,24,26,0,25,11,18,21],
[20,21,18,6,0,17,11,18],
[20,15,26,20,14,0,21,12],
[20,19,18,13,20,10,0,17],
[21,22,22,10,13,19,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,26,18,19,21,20],
[13,0,17,20,13,8,17,19],
[18,14,0,23,16,15,19,19],
[5,11,8,0,10,8,10,9],
[13,18,15,21,0,14,17,18],
[12,23,16,23,17,0,18,23],
[10,14,12,21,14,13,0,19],
[11,12,12,22,13,8,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,12,17,21,15,18,20],
[17,0,8,12,15,14,14,20],
[19,23,0,14,21,10,18,21],
[14,19,17,0,18,18,18,20],
[10,16,10,13,0,12,14,21],
[16,17,21,13,19,0,21,25],
[13,17,13,13,17,10,0,18],
[11,11,10,11,10,6,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,19,16,19,17,13,19],
[15,0,14,13,17,16,15,12],
[12,17,0,19,17,17,16,15],
[15,18,12,0,17,17,15,19],
[12,14,14,14,0,14,15,14],
[14,15,14,14,17,0,15,13],
[18,16,15,16,16,16,0,17],
[12,19,16,12,17,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,15,15,17,15,15],
[15,0,16,14,13,18,14,15],
[17,15,0,16,20,16,16,18],
[16,17,15,0,17,16,18,12],
[16,18,11,14,0,15,13,15],
[14,13,15,15,16,0,17,14],
[16,17,15,13,18,14,0,14],
[16,16,13,19,16,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,21,20,20,15,17,19],
[17,0,19,17,16,16,12,13],
[10,12,0,16,15,15,15,15],
[11,14,15,0,10,13,10,11],
[11,15,16,21,0,13,16,10],
[16,15,16,18,18,0,15,16],
[14,19,16,21,15,16,0,14],
[12,18,16,20,21,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,12,14,16,13,19],
[19,0,12,17,13,15,16,18],
[17,19,0,15,17,19,14,14],
[19,14,16,0,11,17,10,11],
[17,18,14,20,0,22,12,17],
[15,16,12,14,9,0,7,11],
[18,15,17,21,19,24,0,17],
[12,13,17,20,14,20,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,9,11,20,14,14,5],
[14,0,13,15,17,18,18,15],
[22,18,0,17,20,11,24,12],
[20,16,14,0,20,13,20,17],
[11,14,11,11,0,7,16,9],
[17,13,20,18,24,0,24,13],
[17,13,7,11,15,7,0,5],
[26,16,19,14,22,18,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,16,15,14,16,16,15],
[12,0,11,18,14,15,16,15],
[15,20,0,13,14,4,16,9],
[16,13,18,0,8,13,21,18],
[17,17,17,23,0,12,23,17],
[15,16,27,18,19,0,21,20],
[15,15,15,10,8,10,0,7],
[16,16,22,13,14,11,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,26,16,15,7,12,13],
[15,0,14,21,14,19,10,14],
[5,17,0,18,7,12,12,10],
[15,10,13,0,3,10,10,13],
[16,17,24,28,0,20,21,14],
[24,12,19,21,11,0,12,22],
[19,21,19,21,10,19,0,17],
[18,17,21,18,17,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,21,21,11,21,21],
[10,0,21,10,21,10,10,10],
[10,10,0,0,31,10,10,20],
[10,21,31,0,31,21,20,31],
[10,10,0,0,0,10,0,0],
[20,21,21,10,21,0,10,21],
[10,21,21,11,31,21,0,31],
[10,21,11,0,31,10,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,5,9,14,12,8,10],
[19,0,10,23,16,23,16,17],
[26,21,0,20,14,23,20,21],
[22,8,11,0,14,14,14,9],
[17,15,17,17,0,14,15,18],
[19,8,8,17,17,0,8,20],
[23,15,11,17,16,23,0,15],
[21,14,10,22,13,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,24,22,15,15,18,15],
[15,0,19,20,16,18,20,12],
[7,12,0,18,9,5,15,9],
[9,11,13,0,8,13,16,8],
[16,15,22,23,0,16,16,16],
[16,13,26,18,15,0,17,12],
[13,11,16,15,15,14,0,11],
[16,19,22,23,15,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,15,11,13,11,15,17],
[12,0,18,15,13,13,17,17],
[16,13,0,13,17,16,17,15],
[20,16,18,0,15,15,18,21],
[18,18,14,16,0,17,19,20],
[20,18,15,16,14,0,16,13],
[16,14,14,13,12,15,0,8],
[14,14,16,10,11,18,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,9,10,11,8,12,11],
[15,0,13,13,13,9,10,9],
[22,18,0,17,17,14,13,16],
[21,18,14,0,14,12,17,17],
[20,18,14,17,0,17,20,21],
[23,22,17,19,14,0,16,20],
[19,21,18,14,11,15,0,16],
[20,22,15,14,10,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,12,12,17,18,18],
[18,0,12,5,12,18,18,5],
[19,19,0,10,13,18,19,11],
[19,26,21,0,21,24,21,14],
[19,19,18,10,0,18,18,11],
[14,13,13,7,13,0,13,6],
[13,13,12,10,13,18,0,5],
[13,26,20,17,20,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,16,19,19,13,12,21],
[10,0,12,18,15,12,10,18],
[15,19,0,21,26,16,15,20],
[12,13,10,0,14,13,11,18],
[12,16,5,17,0,12,9,16],
[18,19,15,18,19,0,16,19],
[19,21,16,20,22,15,0,19],
[10,13,11,13,15,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,19,14,13,17,17,18],
[10,0,15,11,13,19,15,21],
[12,16,0,10,8,18,13,15],
[17,20,21,0,19,21,14,25],
[18,18,23,12,0,24,19,21],
[14,12,13,10,7,0,14,14],
[14,16,18,17,12,17,0,17],
[13,10,16,6,10,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,16,7,18,17,12],
[19,0,24,14,13,19,16,17],
[14,7,0,12,12,15,9,10],
[15,17,19,0,17,23,19,21],
[24,18,19,14,0,18,17,19],
[13,12,16,8,13,0,16,21],
[14,15,22,12,14,15,0,19],
[19,14,21,10,12,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,0,13,0,7,13],
[18,0,13,7,18,12,14,25],
[18,18,0,12,18,12,19,12],
[31,24,19,0,25,25,14,18],
[18,13,13,6,0,5,7,18],
[31,19,19,6,26,0,20,18],
[24,17,12,17,24,11,0,17],
[18,6,19,13,13,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,13,10,12,13,10],
[19,0,17,17,12,14,16,12],
[18,14,0,17,10,13,14,11],
[18,14,14,0,11,12,14,13],
[21,19,21,20,0,17,19,15],
[19,17,18,19,14,0,20,17],
[18,15,17,17,12,11,0,13],
[21,19,20,18,16,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,14,12,24,18,15,17],
[11,0,18,17,22,16,14,14],
[17,13,0,15,20,19,14,17],
[19,14,16,0,22,19,17,21],
[7,9,11,9,0,9,9,11],
[13,15,12,12,22,0,12,17],
[16,17,17,14,22,19,0,21],
[14,17,14,10,20,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,15,25,25,20,21],
[5,0,18,13,18,18,13,14],
[6,13,0,14,10,11,6,21],
[16,18,17,0,10,23,5,26],
[6,13,21,21,0,26,21,21],
[6,13,20,8,5,0,0,21],
[11,18,25,26,10,31,0,26],
[10,17,10,5,10,10,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,16,18,21,15,15],
[16,0,19,12,16,23,19,17],
[15,12,0,13,17,18,18,17],
[15,19,18,0,20,21,19,17],
[13,15,14,11,0,18,16,16],
[10,8,13,10,13,0,12,11],
[16,12,13,12,15,19,0,17],
[16,14,14,14,15,20,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,20,21,14,18,16],
[12,0,13,14,14,14,15,8],
[10,18,0,10,13,12,19,11],
[11,17,21,0,15,14,18,12],
[10,17,18,16,0,15,13,14],
[17,17,19,17,16,0,12,17],
[13,16,12,13,18,19,0,16],
[15,23,20,19,17,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,21,17,17,18,25],
[17,0,19,20,14,19,17,16],
[13,12,0,20,20,17,14,18],
[10,11,11,0,12,9,10,13],
[14,17,11,19,0,15,16,14],
[14,12,14,22,16,0,14,15],
[13,14,17,21,15,17,0,15],
[6,15,13,18,17,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,10,10,17,13,25,15],
[5,0,12,10,21,8,13,10],
[21,19,0,14,25,10,22,16],
[21,21,17,0,23,16,23,14],
[14,10,6,8,0,6,15,12],
[18,23,21,15,25,0,21,19],
[6,18,9,8,16,10,0,10],
[16,21,15,17,19,12,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,14,13,10,11,11],
[19,0,18,17,21,12,21,15],
[17,13,0,14,16,20,17,17],
[17,14,17,0,20,14,21,16],
[18,10,15,11,0,7,10,13],
[21,19,11,17,24,0,22,13],
[20,10,14,10,21,9,0,12],
[20,16,14,15,18,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,22,13,15,9,15],
[17,0,15,16,16,15,15,14],
[15,16,0,20,16,20,18,21],
[9,15,11,0,10,9,6,16],
[18,15,15,21,0,15,8,14],
[16,16,11,22,16,0,7,13],
[22,16,13,25,23,24,0,23],
[16,17,10,15,17,18,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,18,19,15,17,22,19],
[10,0,9,12,13,12,23,12],
[13,22,0,22,15,14,24,14],
[12,19,9,0,18,14,23,15],
[16,18,16,13,0,14,19,16],
[14,19,17,17,17,0,22,14],
[9,8,7,8,12,9,0,9],
[12,19,17,16,15,17,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,16,15,12,19,17],
[19,0,17,14,15,11,17,15],
[14,14,0,13,12,10,17,8],
[15,17,18,0,15,13,16,15],
[16,16,19,16,0,12,17,12],
[19,20,21,18,19,0,21,15],
[12,14,14,15,14,10,0,14],
[14,16,23,16,19,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,15,14,14,19,20],
[14,0,13,14,16,11,19,19],
[12,18,0,16,18,17,15,16],
[16,17,15,0,13,13,16,16],
[17,15,13,18,0,17,17,21],
[17,20,14,18,14,0,19,15],
[12,12,16,15,14,12,0,16],
[11,12,15,15,10,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,13,10,21,15,12],
[13,0,14,19,17,19,9,14],
[17,17,0,17,20,21,12,18],
[18,12,14,0,7,23,14,19],
[21,14,11,24,0,25,20,19],
[10,12,10,8,6,0,8,11],
[16,22,19,17,11,23,0,19],
[19,17,13,12,12,20,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,19,11,16,10,17],
[19,0,13,17,17,19,15,18],
[19,18,0,16,15,18,15,21],
[12,14,15,0,15,15,14,19],
[20,14,16,16,0,16,17,17],
[15,12,13,16,15,0,13,15],
[21,16,16,17,14,18,0,25],
[14,13,10,12,14,16,6,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,15,16,17,17,16],
[15,0,18,21,18,17,20,14],
[10,13,0,15,17,18,17,10],
[16,10,16,0,14,14,17,13],
[15,13,14,17,0,12,15,12],
[14,14,13,17,19,0,18,8],
[14,11,14,14,16,13,0,12],
[15,17,21,18,19,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,16,20,16,19,16],
[20,0,11,14,17,14,18,17],
[20,20,0,14,21,18,20,18],
[15,17,17,0,23,22,20,14],
[11,14,10,8,0,16,14,11],
[15,17,13,9,15,0,18,13],
[12,13,11,11,17,13,0,13],
[15,14,13,17,20,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,19,22,19,23,15,15],
[9,0,20,15,17,13,17,9],
[12,11,0,12,12,14,11,9],
[9,16,19,0,12,17,5,13],
[12,14,19,19,0,16,14,6],
[8,18,17,14,15,0,16,12],
[16,14,20,26,17,15,0,18],
[16,22,22,18,25,19,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,13,12,19,13,16],
[13,0,14,16,15,15,13,19],
[17,17,0,20,18,13,14,15],
[18,15,11,0,16,14,11,19],
[19,16,13,15,0,15,10,14],
[12,16,18,17,16,0,16,17],
[18,18,17,20,21,15,0,22],
[15,12,16,12,17,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,10,15,3,11,3],
[20,0,16,9,18,3,0,11],
[24,15,0,15,11,11,4,11],
[21,22,16,0,21,11,17,18],
[16,13,20,10,0,9,13,10],
[28,28,20,20,22,0,14,22],
[20,31,27,14,18,17,0,11],
[28,20,20,13,21,9,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,16,14,16,14,16],
[16,0,15,15,15,16,14,13],
[17,16,0,14,17,16,15,13],
[15,16,17,0,16,18,15,11],
[17,16,14,15,0,13,15,11],
[15,15,15,13,18,0,15,13],
[17,17,16,16,16,16,0,14],
[15,18,18,20,20,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,17,16,13,17,18],
[17,0,15,20,15,19,17,21],
[17,16,0,19,15,14,17,17],
[14,11,12,0,14,15,14,16],
[15,16,16,17,0,20,19,16],
[18,12,17,16,11,0,15,19],
[14,14,14,17,12,16,0,15],
[13,10,14,15,15,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,15,11,6,9,11],
[19,0,23,13,14,18,22,15],
[18,8,0,14,11,6,13,15],
[16,18,17,0,15,15,15,20],
[20,17,20,16,0,15,18,14],
[25,13,25,16,16,0,18,16],
[22,9,18,16,13,13,0,16],
[20,16,16,11,17,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,21,15,18,19,18],
[14,0,15,23,19,16,11,13],
[14,16,0,20,16,22,15,13],
[10,8,11,0,10,14,12,10],
[16,12,15,21,0,16,12,16],
[13,15,9,17,15,0,10,14],
[12,20,16,19,19,21,0,17],
[13,18,18,21,15,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,18,14,15,11,14],
[17,0,14,17,14,16,14,18],
[18,17,0,16,15,18,17,18],
[13,14,15,0,12,14,13,16],
[17,17,16,19,0,15,13,16],
[16,15,13,17,16,0,11,17],
[20,17,14,18,18,20,0,16],
[17,13,13,15,15,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,18,16,18,18,15],
[15,0,14,19,11,13,18,17],
[14,17,0,18,13,14,14,16],
[13,12,13,0,11,11,13,14],
[15,20,18,20,0,17,20,20],
[13,18,17,20,14,0,18,16],
[13,13,17,18,11,13,0,14],
[16,14,15,17,11,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,11,11,0,10,0,0],
[31,0,11,21,10,21,10,21],
[20,20,0,10,20,20,20,20],
[20,10,21,0,20,10,20,20],
[31,21,11,11,0,21,10,11],
[21,10,11,21,10,0,10,21],
[31,21,11,11,21,21,0,11],
[31,10,11,11,20,10,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,16,16,13,18,14,7],
[23,0,15,21,15,22,20,14],
[15,16,0,14,18,17,17,16],
[15,10,17,0,15,14,13,11],
[18,16,13,16,0,20,16,13],
[13,9,14,17,11,0,15,8],
[17,11,14,18,15,16,0,11],
[24,17,15,20,18,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,13,14,14,7,9],
[15,0,14,18,13,9,14,15],
[21,17,0,14,16,15,16,12],
[18,13,17,0,12,12,10,14],
[17,18,15,19,0,10,18,14],
[17,22,16,19,21,0,16,13],
[24,17,15,21,13,15,0,17],
[22,16,19,17,17,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,16,16,9,16,0],
[15,0,14,7,16,0,16,7],
[17,17,0,17,17,17,17,8],
[15,24,14,0,16,17,24,8],
[15,15,14,15,0,8,22,15],
[22,31,14,14,23,0,31,22],
[15,15,14,7,9,0,0,15],
[31,24,23,23,16,9,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,16,16,12,17,22],
[15,0,24,21,31,27,27,20],
[10,7,0,12,16,12,12,17],
[15,10,19,0,19,15,20,20],
[15,0,15,12,0,5,15,10],
[19,4,19,16,26,0,22,10],
[14,4,19,11,16,9,0,14],
[9,11,14,11,21,21,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,9,13,17,13,15],
[18,0,16,18,17,22,9,20],
[15,15,0,13,11,16,18,15],
[22,13,18,0,18,16,11,22],
[18,14,20,13,0,15,8,19],
[14,9,15,15,16,0,11,21],
[18,22,13,20,23,20,0,21],
[16,11,16,9,12,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,20,17,19,14,19],
[13,0,13,16,17,15,16,12],
[17,18,0,16,15,21,18,16],
[11,15,15,0,18,19,18,18],
[14,14,16,13,0,15,14,16],
[12,16,10,12,16,0,14,17],
[17,15,13,13,17,17,0,15],
[12,19,15,13,15,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,19,15,20,20,20],
[15,0,16,15,18,15,18,20],
[14,15,0,17,15,19,21,19],
[12,16,14,0,17,15,21,23],
[16,13,16,14,0,18,18,15],
[11,16,12,16,13,0,19,19],
[11,13,10,10,13,12,0,19],
[11,11,12,8,16,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,17,17,19,10,19],
[15,0,19,16,20,20,16,17],
[11,12,0,16,19,14,15,17],
[14,15,15,0,12,13,15,15],
[14,11,12,19,0,15,15,15],
[12,11,17,18,16,0,13,15],
[21,15,16,16,16,18,0,18],
[12,14,14,16,16,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,16,19,15,16,17],
[17,0,19,14,16,14,15,15],
[13,12,0,14,15,12,14,15],
[15,17,17,0,19,15,17,18],
[12,15,16,12,0,12,19,15],
[16,17,19,16,19,0,15,16],
[15,16,17,14,12,16,0,14],
[14,16,16,13,16,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,16,10,15,13,11],
[17,0,14,11,11,17,17,13],
[17,17,0,14,16,18,15,10],
[15,20,17,0,16,16,19,15],
[21,20,15,15,0,21,22,17],
[16,14,13,15,10,0,18,16],
[18,14,16,12,9,13,0,14],
[20,18,21,16,14,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,13,20,17,18,10],
[14,0,14,11,16,17,16,12],
[19,17,0,15,19,20,14,18],
[18,20,16,0,19,21,17,11],
[11,15,12,12,0,17,13,12],
[14,14,11,10,14,0,13,11],
[13,15,17,14,18,18,0,10],
[21,19,13,20,19,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,11,9,16,14,15],
[17,0,17,16,16,16,18,14],
[11,14,0,10,11,15,16,15],
[20,15,21,0,16,17,17,17],
[22,15,20,15,0,21,19,14],
[15,15,16,14,10,0,17,15],
[17,13,15,14,12,14,0,11],
[16,17,16,14,17,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,6,6,7,13,6,12],
[25,0,19,13,7,13,19,25],
[25,12,0,25,13,19,12,13],
[25,18,6,0,13,25,6,12],
[24,24,18,18,0,31,12,18],
[18,18,12,6,0,0,12,18],
[25,12,19,25,19,19,0,19],
[19,6,18,19,13,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,19,15,9,12,11,17],
[21,0,22,15,16,16,13,16],
[12,9,0,9,13,10,5,16],
[16,16,22,0,15,21,14,22],
[22,15,18,16,0,17,16,21],
[19,15,21,10,14,0,10,22],
[20,18,26,17,15,21,0,21],
[14,15,15,9,10,9,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,15,15,17,11,18,16],
[9,0,11,13,16,11,18,13],
[16,20,0,12,16,13,20,18],
[16,18,19,0,15,20,18,15],
[14,15,15,16,0,11,17,17],
[20,20,18,11,20,0,17,19],
[13,13,11,13,14,14,0,15],
[15,18,13,16,14,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,14,12,16,14,17],
[13,0,15,16,12,20,14,16],
[11,16,0,16,16,23,14,10],
[17,15,15,0,13,18,14,10],
[19,19,15,18,0,26,14,15],
[15,11,8,13,5,0,10,10],
[17,17,17,17,17,21,0,11],
[14,15,21,21,16,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,24,17,17,17,21,13],
[13,0,20,23,14,20,23,15],
[7,11,0,13,13,10,14,8],
[14,8,18,0,14,19,17,11],
[14,17,18,17,0,21,23,14],
[14,11,21,12,10,0,18,16],
[10,8,17,14,8,13,0,11],
[18,16,23,20,17,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,12,13,14,21,13],
[18,0,16,14,14,10,16,16],
[14,15,0,14,13,13,17,15],
[19,17,17,0,16,17,19,13],
[18,17,18,15,0,14,18,13],
[17,21,18,14,17,0,19,15],
[10,15,14,12,13,12,0,8],
[18,15,16,18,18,16,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,11,14,20,13,11],
[17,0,16,17,21,19,15,17],
[13,15,0,10,13,12,9,10],
[20,14,21,0,18,22,18,15],
[17,10,18,13,0,21,12,12],
[11,12,19,9,10,0,9,7],
[18,16,22,13,19,22,0,18],
[20,14,21,16,19,24,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,18,17,23,18,18],
[21,0,15,17,11,26,13,13],
[15,16,0,14,21,20,14,23],
[13,14,17,0,18,9,14,12],
[14,20,10,13,0,19,10,13],
[8,5,11,22,12,0,18,18],
[13,18,17,17,21,13,0,12],
[13,18,8,19,18,13,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,12,17,18,16,19],
[15,0,17,20,18,21,12,17],
[18,14,0,22,17,23,17,19],
[19,11,9,0,14,18,19,19],
[14,13,14,17,0,18,15,14],
[13,10,8,13,13,0,15,11],
[15,19,14,12,16,16,0,14],
[12,14,12,12,17,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,9,0,14,5,6],
[21,0,12,21,16,22,13,14],
[21,19,0,17,13,14,13,19],
[22,10,14,0,14,14,10,6],
[31,15,18,17,0,26,13,19],
[17,9,17,17,5,0,9,5],
[26,18,18,21,18,22,0,10],
[25,17,12,25,12,26,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,14,19,21,23,20],
[13,0,22,13,19,20,14,17],
[11,9,0,10,16,15,14,16],
[17,18,21,0,19,17,15,15],
[12,12,15,12,0,19,18,19],
[10,11,16,14,12,0,12,10],
[8,17,17,16,13,19,0,17],
[11,14,15,16,12,21,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,17,16,18,14,16],
[15,0,14,14,14,17,15,19],
[19,17,0,15,15,20,16,20],
[14,17,16,0,18,18,13,17],
[15,17,16,13,0,15,14,16],
[13,14,11,13,16,0,15,17],
[17,16,15,18,17,16,0,17],
[15,12,11,14,15,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,8,17,10,9,13,14],
[14,0,9,17,14,9,7,14],
[23,22,0,17,12,13,16,13],
[14,14,14,0,7,10,7,6],
[21,17,19,24,0,17,10,13],
[22,22,18,21,14,0,21,22],
[18,24,15,24,21,10,0,11],
[17,17,18,25,18,9,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,12,17,14,14,12],
[16,0,14,14,18,17,15,15],
[14,17,0,16,15,17,17,13],
[19,17,15,0,17,18,19,18],
[14,13,16,14,0,15,15,15],
[17,14,14,13,16,0,18,16],
[17,16,14,12,16,13,0,18],
[19,16,18,13,16,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,18,18,24,9,20],
[9,0,28,15,21,18,14,19],
[7,3,0,11,13,17,9,18],
[13,16,20,0,15,18,13,16],
[13,10,18,16,0,17,8,22],
[7,13,14,13,14,0,7,9],
[22,17,22,18,23,24,0,15],
[11,12,13,15,9,22,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,16,14,15,17,13],
[15,0,18,13,15,10,18,13],
[14,13,0,11,13,12,15,11],
[15,18,20,0,17,16,19,18],
[17,16,18,14,0,16,25,16],
[16,21,19,15,15,0,20,19],
[14,13,16,12,6,11,0,14],
[18,18,20,13,15,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,18,12,15,11,13],
[20,0,16,19,16,17,16,14],
[19,15,0,21,10,17,16,17],
[13,12,10,0,9,13,8,15],
[19,15,21,22,0,21,18,20],
[16,14,14,18,10,0,13,13],
[20,15,15,23,13,18,0,17],
[18,17,14,16,11,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,17,17,14,11,16],
[19,0,15,17,16,15,18,15],
[19,16,0,17,16,14,14,15],
[14,14,14,0,13,17,14,15],
[14,15,15,18,0,16,16,13],
[17,16,17,14,15,0,16,14],
[20,13,17,17,15,15,0,17],
[15,16,16,16,18,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,17,17,17,16,15],
[16,0,16,18,20,13,17,15],
[12,15,0,14,15,17,13,17],
[14,13,17,0,20,15,15,15],
[14,11,16,11,0,13,16,14],
[14,18,14,16,18,0,16,16],
[15,14,18,16,15,15,0,15],
[16,16,14,16,17,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,10,11,20,14,16],
[16,0,13,12,11,18,14,14],
[19,18,0,15,13,13,15,13],
[21,19,16,0,11,18,16,18],
[20,20,18,20,0,15,19,15],
[11,13,18,13,16,0,12,17],
[17,17,16,15,12,19,0,18],
[15,17,18,13,16,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,16,16,13,15,17],
[16,0,13,15,7,14,20,19],
[21,18,0,19,14,16,20,21],
[15,16,12,0,13,15,18,18],
[15,24,17,18,0,20,24,25],
[18,17,15,16,11,0,22,18],
[16,11,11,13,7,9,0,21],
[14,12,10,13,6,13,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,17,14,17,17,18],
[15,0,9,16,18,12,17,20],
[19,22,0,17,16,19,15,22],
[14,15,14,0,12,13,15,17],
[17,13,15,19,0,13,18,18],
[14,19,12,18,18,0,17,22],
[14,14,16,16,13,14,0,18],
[13,11,9,14,13,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,11,12,6,21,14,16],
[14,0,10,16,6,19,13,18],
[20,21,0,12,18,19,18,25],
[19,15,19,0,16,24,10,21],
[25,25,13,15,0,23,16,19],
[10,12,12,7,8,0,6,15],
[17,18,13,21,15,25,0,19],
[15,13,6,10,12,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,14,15,15,13,17],
[14,0,12,11,13,15,9,16],
[18,19,0,16,16,15,19,15],
[17,20,15,0,16,15,17,17],
[16,18,15,15,0,14,18,19],
[16,16,16,16,17,0,15,18],
[18,22,12,14,13,16,0,19],
[14,15,16,14,12,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,19,14,17,20,13],
[12,0,12,12,11,13,16,14],
[13,19,0,19,12,15,20,15],
[12,19,12,0,12,17,18,19],
[17,20,19,19,0,18,19,15],
[14,18,16,14,13,0,15,16],
[11,15,11,13,12,16,0,14],
[18,17,16,12,16,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,17,15,17,19,11],
[17,0,18,16,12,19,19,13],
[18,13,0,14,14,16,18,16],
[14,15,17,0,13,18,21,13],
[16,19,17,18,0,17,20,14],
[14,12,15,13,14,0,18,10],
[12,12,13,10,11,13,0,12],
[20,18,15,18,17,21,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,14,20,13,17,20],
[17,0,18,17,17,21,11,22],
[18,13,0,10,16,16,16,18],
[17,14,21,0,17,19,17,22],
[11,14,15,14,0,16,13,16],
[18,10,15,12,15,0,12,21],
[14,20,15,14,18,19,0,20],
[11,9,13,9,15,10,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,23,14,23,23,31],
[8,0,31,9,14,17,25,25],
[8,0,0,0,14,0,0,8],
[8,22,31,0,22,31,22,31],
[17,17,17,9,0,17,17,25],
[8,14,31,0,14,0,22,25],
[8,6,31,9,14,9,0,17],
[0,6,23,0,6,6,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,20,15,17,20,18],
[10,0,19,14,11,16,7,4],
[8,12,0,16,10,12,9,7],
[11,17,15,0,12,14,12,12],
[16,20,21,19,0,18,16,14],
[14,15,19,17,13,0,10,14],
[11,24,22,19,15,21,0,11],
[13,27,24,19,17,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,20,10,13,14,17],
[21,0,11,15,18,11,11,10],
[21,20,0,22,16,17,21,14],
[11,16,9,0,16,7,9,7],
[21,13,15,15,0,13,14,14],
[18,20,14,24,18,0,17,11],
[17,20,10,22,17,14,0,11],
[14,21,17,24,17,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,13,14,9,10,16],
[16,0,15,14,15,14,11,18],
[16,16,0,16,18,13,10,15],
[18,17,15,0,16,15,16,18],
[17,16,13,15,0,13,13,12],
[22,17,18,16,18,0,12,17],
[21,20,21,15,18,19,0,20],
[15,13,16,13,19,14,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,19,17,16,14,18,15],
[13,0,15,14,14,13,15,17],
[12,16,0,15,13,13,10,11],
[14,17,16,0,18,16,18,14],
[15,17,18,13,0,15,16,14],
[17,18,18,15,16,0,20,13],
[13,16,21,13,15,11,0,12],
[16,14,20,17,17,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,15,18,17,19,19,16],
[7,0,10,11,9,15,12,12],
[16,21,0,17,13,16,16,16],
[13,20,14,0,8,17,18,16],
[14,22,18,23,0,17,16,18],
[12,16,15,14,14,0,10,16],
[12,19,15,13,15,21,0,14],
[15,19,15,15,13,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,15,16,16,14,16],
[13,0,18,16,14,15,15,17],
[17,13,0,18,13,15,15,15],
[16,15,13,0,13,14,9,14],
[15,17,18,18,0,14,16,17],
[15,16,16,17,17,0,12,16],
[17,16,16,22,15,19,0,18],
[15,14,16,17,14,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,15,15,15,15,19,13],
[23,0,19,19,19,18,19,12],
[16,12,0,20,18,19,28,16],
[16,12,11,0,12,17,24,16],
[16,12,13,19,0,14,19,13],
[16,13,12,14,17,0,20,5],
[12,12,3,7,12,11,0,9],
[18,19,15,15,18,26,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,17,16,12,19,21],
[17,0,17,17,15,14,17,20],
[14,14,0,15,18,11,16,18],
[14,14,16,0,14,10,13,16],
[15,16,13,17,0,17,22,22],
[19,17,20,21,14,0,19,21],
[12,14,15,18,9,12,0,22],
[10,11,13,15,9,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,9,15,10,14,11],
[22,0,15,13,17,10,13,12],
[20,16,0,15,15,14,19,17],
[22,18,16,0,21,16,17,15],
[16,14,16,10,0,15,14,12],
[21,21,17,15,16,0,15,16],
[17,18,12,14,17,16,0,19],
[20,19,14,16,19,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,22,24,21,21,15],
[11,0,17,18,23,18,23,19],
[10,14,0,18,18,11,18,15],
[9,13,13,0,18,21,21,11],
[7,8,13,13,0,11,10,7],
[10,13,20,10,20,0,20,7],
[10,8,13,10,21,11,0,4],
[16,12,16,20,24,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,21,14,14,18,18],
[17,0,20,17,15,16,15,18],
[14,11,0,15,12,14,11,13],
[10,14,16,0,12,16,15,13],
[17,16,19,19,0,14,16,18],
[17,15,17,15,17,0,15,17],
[13,16,20,16,15,16,0,19],
[13,13,18,18,13,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,31,10,20,9,20,27],
[15,0,25,17,18,15,15,17],
[0,6,0,0,17,6,3,14],
[21,14,31,0,24,21,21,17],
[11,13,14,7,0,11,11,24],
[22,16,25,10,20,0,14,27],
[11,16,28,10,20,17,0,24],
[4,14,17,14,7,4,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,17,18,14,25,16],
[12,0,16,10,19,19,23,18],
[14,15,0,13,13,17,17,18],
[14,21,18,0,15,21,19,20],
[13,12,18,16,0,19,17,17],
[17,12,14,10,12,0,17,19],
[6,8,14,12,14,14,0,8],
[15,13,13,11,14,12,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,19,6,12,13,12,6],
[19,0,18,7,6,13,14,7],
[12,13,0,0,7,0,7,0],
[25,24,31,0,13,25,20,18],
[19,25,24,18,0,12,14,12],
[18,18,31,6,19,0,13,18],
[19,17,24,11,17,18,0,5],
[25,24,31,13,19,13,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,10,15,15,17,11,14],
[12,0,8,13,15,13,9,3],
[21,23,0,15,14,12,9,21],
[16,18,16,0,21,11,18,16],
[16,16,17,10,0,18,16,14],
[14,18,19,20,13,0,15,16],
[20,22,22,13,15,16,0,20],
[17,28,10,15,17,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,7,14,15,7,15],
[21,0,13,8,11,20,12,16],
[24,18,0,18,19,19,15,16],
[24,23,13,0,11,21,16,20],
[17,20,12,20,0,21,17,25],
[16,11,12,10,10,0,11,15],
[24,19,16,15,14,20,0,19],
[16,15,15,11,6,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,12,14,13,16,15],
[15,0,19,13,20,13,16,15],
[14,12,0,8,10,13,14,14],
[19,18,23,0,19,12,20,16],
[17,11,21,12,0,11,12,17],
[18,18,18,19,20,0,20,15],
[15,15,17,11,19,11,0,14],
[16,16,17,15,14,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,21,20,13,11,16,17],
[18,0,17,15,11,14,14,16],
[10,14,0,15,18,18,14,23],
[11,16,16,0,11,15,11,16],
[18,20,13,20,0,14,27,13],
[20,17,13,16,17,0,23,13],
[15,17,17,20,4,8,0,13],
[14,15,8,15,18,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,14,24,21,8,10,10],
[4,0,13,19,13,7,14,9],
[17,18,0,20,23,17,14,17],
[7,12,11,0,21,7,4,12],
[10,18,8,10,0,7,14,0],
[23,24,14,24,24,0,23,14],
[21,17,17,27,17,8,0,13],
[21,22,14,19,31,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,8,11,13,21,13,8],
[18,0,8,17,18,13,14,17],
[23,23,0,21,23,18,14,18],
[20,14,10,0,23,15,15,23],
[18,13,8,8,0,13,5,13],
[10,18,13,16,18,0,19,18],
[18,17,17,16,26,12,0,26],
[23,14,13,8,18,13,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,14,18,16,16,16],
[12,0,18,13,15,11,9,12],
[12,13,0,14,19,10,11,17],
[17,18,17,0,12,12,19,19],
[13,16,12,19,0,13,15,14],
[15,20,21,19,18,0,9,13],
[15,22,20,12,16,22,0,14],
[15,19,14,12,17,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,15,15,12,14,17],
[16,0,14,15,15,17,13,18],
[16,17,0,20,19,15,16,19],
[16,16,11,0,15,14,13,18],
[16,16,12,16,0,11,10,19],
[19,14,16,17,20,0,14,18],
[17,18,15,18,21,17,0,17],
[14,13,12,13,12,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,22,14,16,24,16],
[8,0,22,22,15,12,22,12],
[14,9,0,14,10,5,12,8],
[9,9,17,0,16,8,14,13],
[17,16,21,15,0,13,16,20],
[15,19,26,23,18,0,23,22],
[7,9,19,17,15,8,0,10],
[15,19,23,18,11,9,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,16,13,15,18,14],
[10,0,21,11,12,15,14,11],
[8,10,0,9,12,9,12,11],
[15,20,22,0,17,21,17,14],
[18,19,19,14,0,18,15,19],
[16,16,22,10,13,0,12,13],
[13,17,19,14,16,19,0,14],
[17,20,20,17,12,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,20,15,14,21,14],
[16,0,14,19,14,14,18,18],
[14,17,0,15,11,18,19,13],
[11,12,16,0,10,15,17,9],
[16,17,20,21,0,12,17,15],
[17,17,13,16,19,0,16,16],
[10,13,12,14,14,15,0,15],
[17,13,18,22,16,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,13,10,15,13,18],
[13,0,15,12,14,16,9,17],
[17,16,0,17,15,22,19,22],
[18,19,14,0,16,21,19,19],
[21,17,16,15,0,23,15,17],
[16,15,9,10,8,0,14,13],
[18,22,12,12,16,17,0,17],
[13,14,9,12,14,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,22,26,20,13,17],
[18,0,19,16,18,21,18,14],
[13,12,0,15,16,14,11,15],
[9,15,16,0,20,18,16,7],
[5,13,15,11,0,11,9,11],
[11,10,17,13,20,0,19,15],
[18,13,20,15,22,12,0,8],
[14,17,16,24,20,16,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,18,17,14,20,15,18],
[19,0,19,14,13,20,16,15],
[13,12,0,12,16,11,16,15],
[14,17,19,0,9,13,16,18],
[17,18,15,22,0,14,16,16],
[11,11,20,18,17,0,14,16],
[16,15,15,15,15,17,0,16],
[13,16,16,13,15,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,16,10,19,17,16],
[15,0,15,20,11,18,19,21],
[15,16,0,16,18,15,16,20],
[15,11,15,0,10,15,12,17],
[21,20,13,21,0,19,19,18],
[12,13,16,16,12,0,16,15],
[14,12,15,19,12,15,0,18],
[15,10,11,14,13,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,18,18,24,14,20,23],
[7,0,14,14,20,18,13,22],
[13,17,0,23,21,24,13,27],
[13,17,8,0,14,14,13,16],
[7,11,10,17,0,18,7,18],
[17,13,7,17,13,0,20,20],
[11,18,18,18,24,11,0,22],
[8,9,4,15,13,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,9,9,12,14,11,9],
[17,0,16,6,14,14,12,12],
[22,15,0,16,16,22,20,16],
[22,25,15,0,21,21,11,19],
[19,17,15,10,0,21,9,17],
[17,17,9,10,10,0,10,12],
[20,19,11,20,22,21,0,21],
[22,19,15,12,14,19,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,17,19,22,18,15],
[12,0,12,15,20,21,19,14],
[13,19,0,19,13,26,17,19],
[14,16,12,0,18,23,17,13],
[12,11,18,13,0,20,20,18],
[9,10,5,8,11,0,9,6],
[13,12,14,14,11,22,0,17],
[16,17,12,18,13,25,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,18,15,13,14,13],
[19,0,12,19,15,14,14,21],
[15,19,0,17,15,14,19,18],
[13,12,14,0,15,16,17,14],
[16,16,16,16,0,14,11,16],
[18,17,17,15,17,0,14,14],
[17,17,12,14,20,17,0,21],
[18,10,13,17,15,17,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,7,10,7,13,9,17],
[18,0,6,16,11,12,13,19],
[24,25,0,22,14,21,18,25],
[21,15,9,0,16,18,19,22],
[24,20,17,15,0,21,20,18],
[18,19,10,13,10,0,11,20],
[22,18,13,12,11,20,0,20],
[14,12,6,9,13,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,9,19,18,20,18],
[19,0,14,20,17,14,16,13],
[23,17,0,11,20,21,26,15],
[22,11,20,0,13,15,23,19],
[12,14,11,18,0,8,22,11],
[13,17,10,16,23,0,20,18],
[11,15,5,8,9,11,0,3],
[13,18,16,12,20,13,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,18,9,15,12,10],
[14,0,23,16,16,12,21,15],
[19,8,0,13,9,16,19,10],
[13,15,18,0,11,11,14,20],
[22,15,22,20,0,23,16,13],
[16,19,15,20,8,0,19,13],
[19,10,12,17,15,12,0,13],
[21,16,21,11,18,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,9,13,10,12,15],
[21,0,20,20,14,15,24,16],
[15,11,0,16,16,17,13,14],
[22,11,15,0,15,16,17,17],
[18,17,15,16,0,13,16,12],
[21,16,14,15,18,0,18,19],
[19,7,18,14,15,13,0,17],
[16,15,17,14,19,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,16,20,20,21,14],
[13,0,15,16,25,25,21,14],
[19,16,0,14,31,24,21,20],
[15,15,17,0,22,22,23,15],
[11,6,0,9,0,14,10,14],
[11,6,7,9,17,0,17,14],
[10,10,10,8,21,14,0,19],
[17,17,11,16,17,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,22,17,16,19,9,14],
[13,0,14,12,7,18,13,21],
[9,17,0,9,7,8,10,13],
[14,19,22,0,18,19,17,19],
[15,24,24,13,0,24,15,14],
[12,13,23,12,7,0,18,9],
[22,18,21,14,16,13,0,18],
[17,10,18,12,17,22,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,12,15,21,17,16,15],
[10,0,10,13,19,16,13,8],
[19,21,0,23,22,24,15,19],
[16,18,8,0,19,19,17,13],
[10,12,9,12,0,14,12,9],
[14,15,7,12,17,0,13,11],
[15,18,16,14,19,18,0,13],
[16,23,12,18,22,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,9,15,9,17,5],
[16,0,19,13,19,13,21,13],
[16,12,0,8,22,4,12,4],
[22,18,23,0,22,20,16,4],
[16,12,9,9,0,9,16,13],
[22,18,27,11,22,0,22,15],
[14,10,19,15,15,9,0,19],
[26,18,27,27,18,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,18,15,15,13,10,11],
[22,0,23,16,16,19,20,10],
[13,8,0,14,11,13,13,11],
[16,15,17,0,22,17,13,18],
[16,15,20,9,0,16,10,8],
[18,12,18,14,15,0,11,12],
[21,11,18,18,21,20,0,14],
[20,21,20,13,23,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,15,13,16,17,14],
[20,0,17,18,18,21,15,19],
[19,14,0,16,16,22,20,17],
[16,13,15,0,18,21,14,16],
[18,13,15,13,0,18,14,11],
[15,10,9,10,13,0,16,11],
[14,16,11,17,17,15,0,16],
[17,12,14,15,20,20,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,31,20,20,20,31,20],
[20,0,20,20,20,20,20,9],
[0,11,0,0,9,9,0,0],
[11,11,31,0,31,20,20,9],
[11,11,22,0,0,11,11,0],
[11,11,22,11,20,0,11,11],
[0,11,31,11,20,20,0,0],
[11,22,31,22,31,20,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,25,18,18,19,26],
[18,0,14,22,18,17,14,23],
[18,17,0,22,19,15,16,18],
[6,9,9,0,6,10,12,19],
[13,13,12,25,0,10,17,21],
[13,14,16,21,21,0,13,21],
[12,17,15,19,14,18,0,17],
[5,8,13,12,10,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,14,25,16,19,16],
[10,0,17,9,18,8,13,11],
[6,14,0,7,21,9,11,9],
[17,22,24,0,19,19,24,14],
[6,13,10,12,0,7,17,8],
[15,23,22,12,24,0,21,16],
[12,18,20,7,14,10,0,9],
[15,20,22,17,23,15,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,18,22,12,17,19],
[17,0,18,16,19,15,22,19],
[14,13,0,15,17,13,16,17],
[13,15,16,0,16,11,14,15],
[9,12,14,15,0,18,15,15],
[19,16,18,20,13,0,23,17],
[14,9,15,17,16,8,0,10],
[12,12,14,16,16,14,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,12,17,14,13,16],
[15,0,16,13,16,14,17,10],
[15,15,0,19,15,16,19,19],
[19,18,12,0,16,13,16,16],
[14,15,16,15,0,15,17,15],
[17,17,15,18,16,0,18,17],
[18,14,12,15,14,13,0,13],
[15,21,12,15,16,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,15,18,18,16,19],
[15,0,13,16,20,18,18,19],
[18,18,0,13,17,22,13,19],
[16,15,18,0,20,18,13,18],
[13,11,14,11,0,17,9,15],
[13,13,9,13,14,0,14,13],
[15,13,18,18,22,17,0,21],
[12,12,12,13,16,18,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,13,15,17,13,9],
[17,0,20,14,18,17,16,14],
[16,11,0,13,16,15,15,9],
[18,17,18,0,17,14,21,18],
[16,13,15,14,0,14,14,12],
[14,14,16,17,17,0,13,9],
[18,15,16,10,17,18,0,16],
[22,17,22,13,19,22,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,15,19,22,23,25,22],
[9,0,16,16,27,19,23,20],
[16,15,0,18,22,18,18,19],
[12,15,13,0,21,24,21,20],
[9,4,9,10,0,16,10,18],
[8,12,13,7,15,0,16,17],
[6,8,13,10,21,15,0,22],
[9,11,12,11,13,14,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,9,15,16,15,19],
[16,0,21,13,19,16,18,22],
[9,10,0,10,11,15,13,17],
[22,18,21,0,18,15,15,20],
[16,12,20,13,0,16,15,19],
[15,15,16,16,15,0,15,20],
[16,13,18,16,16,16,0,21],
[12,9,14,11,12,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,15,15,12,19,18],
[17,0,18,15,15,15,14,17],
[18,13,0,16,16,14,16,19],
[16,16,15,0,16,17,19,20],
[16,16,15,15,0,15,17,17],
[19,16,17,14,16,0,20,18],
[12,17,15,12,14,11,0,11],
[13,14,12,11,14,13,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,18,18,17,18,15],
[15,0,16,15,18,17,16,17],
[16,15,0,9,15,13,12,13],
[13,16,22,0,15,16,18,16],
[13,13,16,16,0,14,16,14],
[14,14,18,15,17,0,18,18],
[13,15,19,13,15,13,0,17],
[16,14,18,15,17,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,6,12,18,14,17],
[16,0,18,13,14,16,21,9],
[12,13,0,12,10,11,17,8],
[25,18,19,0,17,19,19,15],
[19,17,21,14,0,20,21,14],
[13,15,20,12,11,0,20,9],
[17,10,14,12,10,11,0,11],
[14,22,23,16,17,22,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,22,20,20,22,12],
[14,0,12,19,16,9,16,9],
[18,19,0,21,18,18,23,12],
[9,12,10,0,14,9,14,8],
[11,15,13,17,0,12,19,12],
[11,22,13,22,19,0,23,18],
[9,15,8,17,12,8,0,13],
[19,22,19,23,19,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,15,15,16,15,12],
[12,0,23,20,19,17,22,17],
[9,8,0,3,16,7,7,7],
[16,11,28,0,19,18,11,12],
[16,12,15,12,0,14,8,15],
[15,14,24,13,17,0,17,18],
[16,9,24,20,23,14,0,20],
[19,14,24,19,16,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,17,16,20,17,20,15],
[21,0,19,16,19,16,15,17],
[14,12,0,7,16,12,12,9],
[15,15,24,0,16,17,15,16],
[11,12,15,15,0,12,13,15],
[14,15,19,14,19,0,16,19],
[11,16,19,16,18,15,0,18],
[16,14,22,15,16,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,22,15,18,16,17],
[10,0,15,19,12,18,11,10],
[10,16,0,11,16,16,12,15],
[9,12,20,0,12,18,12,15],
[16,19,15,19,0,16,9,14],
[13,13,15,13,15,0,12,14],
[15,20,19,19,22,19,0,17],
[14,21,16,16,17,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,16,20,17,16,18],
[17,0,14,14,19,18,16,14],
[16,17,0,18,17,15,16,12],
[15,17,13,0,14,19,14,13],
[11,12,14,17,0,15,13,13],
[14,13,16,12,16,0,16,13],
[15,15,15,17,18,15,0,15],
[13,17,19,18,18,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,25,13,11,18,19,11],
[20,0,25,14,7,25,13,20],
[6,6,0,13,6,18,6,0],
[18,17,18,0,11,18,13,11],
[20,24,25,20,0,31,13,25],
[13,6,13,13,0,0,13,6],
[12,18,25,18,18,18,0,18],
[20,11,31,20,6,25,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,18,10,14,12,16,12],
[19,0,18,15,14,17,16,15],
[13,13,0,10,12,6,16,12],
[21,16,21,0,17,13,15,14],
[17,17,19,14,0,16,14,16],
[19,14,25,18,15,0,19,19],
[15,15,15,16,17,12,0,10],
[19,16,19,17,15,12,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,19,16,14,14,17,19],
[10,0,15,12,8,8,8,16],
[12,16,0,15,13,12,18,14],
[15,19,16,0,9,8,14,20],
[17,23,18,22,0,8,17,11],
[17,23,19,23,23,0,15,17],
[14,23,13,17,14,16,0,14],
[12,15,17,11,20,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,12,16,14,15,14,13],
[21,0,17,23,17,17,14,17],
[19,14,0,19,15,13,11,13],
[15,8,12,0,11,9,8,7],
[17,14,16,20,0,18,16,18],
[16,14,18,22,13,0,14,12],
[17,17,20,23,15,17,0,19],
[18,14,18,24,13,19,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,10,16,18,7,14],
[17,0,11,15,18,23,19,24],
[20,20,0,16,11,23,17,24],
[21,16,15,0,15,25,21,18],
[15,13,20,16,0,17,15,21],
[13,8,8,6,14,0,8,8],
[24,12,14,10,16,23,0,24],
[17,7,7,13,10,23,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,12,15,18,19,16,16],
[12,0,16,16,13,16,13,14],
[19,15,0,15,18,20,17,14],
[16,15,16,0,12,17,17,16],
[13,18,13,19,0,17,19,11],
[12,15,11,14,14,0,18,11],
[15,18,14,14,12,13,0,13],
[15,17,17,15,20,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,17,12,17,16,15],
[17,0,19,16,15,19,19,17],
[13,12,0,17,12,15,15,15],
[14,15,14,0,16,16,17,16],
[19,16,19,15,0,18,20,16],
[14,12,16,15,13,0,11,14],
[15,12,16,14,11,20,0,11],
[16,14,16,15,15,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,19,16,19,17,17,21],
[18,0,19,15,18,14,19,23],
[12,12,0,12,17,14,16,22],
[15,16,19,0,21,14,19,24],
[12,13,14,10,0,12,13,20],
[14,17,17,17,19,0,20,22],
[14,12,15,12,18,11,0,17],
[10,8,9,7,11,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,11,20,20,20,9],
[13,0,18,16,16,12,12,20],
[19,13,0,16,27,17,18,15],
[20,15,15,0,15,20,17,12],
[11,15,4,16,0,12,11,10],
[11,19,14,11,19,0,17,16],
[11,19,13,14,20,14,0,15],
[22,11,16,19,21,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,22,16,7,16,13,10],
[18,0,31,25,16,25,18,15],
[9,0,0,22,16,18,15,15],
[15,6,9,0,5,14,10,10],
[24,15,15,26,0,15,19,16],
[15,6,13,17,16,0,16,10],
[18,13,16,21,12,15,0,16],
[21,16,16,21,15,21,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,11,14,19,14,11],
[15,0,12,7,13,12,13,11],
[19,19,0,13,16,18,17,17],
[20,24,18,0,13,19,18,14],
[17,18,15,18,0,20,18,12],
[12,19,13,12,11,0,16,10],
[17,18,14,13,13,15,0,12],
[20,20,14,17,19,21,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,12,15,16,23,20],
[20,0,22,8,17,20,19,20],
[16,9,0,13,12,16,20,12],
[19,23,18,0,19,20,15,19],
[16,14,19,12,0,16,16,20],
[15,11,15,11,15,0,19,11],
[8,12,11,16,15,12,0,8],
[11,11,19,12,11,20,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,7,10,10,10,10,12],
[21,0,11,9,13,7,9,10],
[24,20,0,16,12,12,17,17],
[21,22,15,0,14,19,10,19],
[21,18,19,17,0,7,7,20],
[21,24,19,12,24,0,17,22],
[21,22,14,21,24,14,0,19],
[19,21,14,12,11,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,18,17,13,19,23,21],
[20,0,14,23,17,18,24,21],
[13,17,0,16,14,18,18,17],
[14,8,15,0,9,9,14,12],
[18,14,17,22,0,17,26,23],
[12,13,13,22,14,0,18,20],
[8,7,13,17,5,13,0,16],
[10,10,14,19,8,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,25,9,25,0,17,9],
[23,0,17,17,23,8,23,9],
[6,14,0,6,22,6,6,15],
[22,14,25,0,31,16,22,17],
[6,8,9,0,0,0,0,9],
[31,23,25,15,31,0,31,15],
[14,8,25,9,31,0,0,9],
[22,22,16,14,22,16,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,18,20,19,24,18],
[17,0,13,19,25,21,25,19],
[18,18,0,13,22,13,17,16],
[13,12,18,0,16,17,19,11],
[11,6,9,15,0,12,19,15],
[12,10,18,14,19,0,20,15],
[7,6,14,12,12,11,0,11],
[13,12,15,20,16,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,14,14,15,5,12],
[21,0,18,22,18,14,17,21],
[16,13,0,16,15,20,11,19],
[17,9,15,0,18,17,11,17],
[17,13,16,13,0,14,5,18],
[16,17,11,14,17,0,15,14],
[26,14,20,20,26,16,0,23],
[19,10,12,14,13,17,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,11,14,13,12,14],
[17,0,11,13,12,18,14,17],
[16,20,0,16,15,20,16,19],
[20,18,15,0,15,22,15,18],
[17,19,16,16,0,15,17,15],
[18,13,11,9,16,0,12,14],
[19,17,15,16,14,19,0,14],
[17,14,12,13,16,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,15,21,18,18,16],
[6,0,11,13,15,14,6,10],
[10,20,0,16,9,15,13,7],
[16,18,15,0,13,8,11,16],
[10,16,22,18,0,12,15,11],
[13,17,16,23,19,0,14,14],
[13,25,18,20,16,17,0,13],
[15,21,24,15,20,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,13,12,11,12,13],
[20,0,25,17,13,13,13,16],
[17,6,0,14,8,7,12,14],
[18,14,17,0,9,14,13,16],
[19,18,23,22,0,16,14,21],
[20,18,24,17,15,0,20,23],
[19,18,19,18,17,11,0,21],
[18,15,17,15,10,8,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,16,16,13,18,20],
[14,0,16,15,14,15,10,25],
[14,15,0,19,11,20,15,15],
[15,16,12,0,14,16,10,15],
[15,17,20,17,0,18,18,24],
[18,16,11,15,13,0,17,17],
[13,21,16,21,13,14,0,19],
[11,6,16,16,7,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,18,10,16,14,15],
[16,0,13,15,12,17,17,16],
[21,18,0,15,16,20,17,13],
[13,16,16,0,15,15,19,18],
[21,19,15,16,0,16,19,17],
[15,14,11,16,15,0,17,13],
[17,14,14,12,12,14,0,19],
[16,15,18,13,14,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,19,13,15,12,12],
[18,0,12,18,15,18,21,15],
[15,19,0,19,17,18,16,11],
[12,13,12,0,16,19,11,10],
[18,16,14,15,0,18,17,11],
[16,13,13,12,13,0,12,6],
[19,10,15,20,14,19,0,17],
[19,16,20,21,20,25,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,13,15,15,13,14],
[17,0,8,9,13,10,20,12],
[15,23,0,17,23,20,23,23],
[18,22,14,0,21,22,18,19],
[16,18,8,10,0,15,19,13],
[16,21,11,9,16,0,18,16],
[18,11,8,13,12,13,0,10],
[17,19,8,12,18,15,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,13,13,20,10,9,12],
[26,0,18,20,21,14,16,14],
[18,13,0,20,21,11,16,10],
[18,11,11,0,21,11,12,15],
[11,10,10,10,0,10,16,12],
[21,17,20,20,21,0,15,16],
[22,15,15,19,15,16,0,11],
[19,17,21,16,19,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,13,12,8,10,2,18],
[21,0,14,18,17,18,16,16],
[18,17,0,19,21,13,13,21],
[19,13,12,0,20,13,14,22],
[23,14,10,11,0,11,10,22],
[21,13,18,18,20,0,11,19],
[29,15,18,17,21,20,0,23],
[13,15,10,9,9,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,17,19,20,14,15],
[18,0,14,12,18,19,14,13],
[13,17,0,13,15,19,17,18],
[14,19,18,0,20,19,17,19],
[12,13,16,11,0,19,16,17],
[11,12,12,12,12,0,14,14],
[17,17,14,14,15,17,0,14],
[16,18,13,12,14,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,22,14,13,17,15],
[17,0,17,20,18,17,14,17],
[17,14,0,16,15,16,16,13],
[9,11,15,0,14,11,15,15],
[17,13,16,17,0,14,10,13],
[18,14,15,20,17,0,12,19],
[14,17,15,16,21,19,0,16],
[16,14,18,16,18,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,17,12,18,11,14],
[18,0,22,20,15,18,15,18],
[15,9,0,12,14,18,8,10],
[14,11,19,0,14,16,10,12],
[19,16,17,17,0,18,18,13],
[13,13,13,15,13,0,11,17],
[20,16,23,21,13,20,0,16],
[17,13,21,19,18,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,18,15,21,16,15,14],
[19,0,16,24,18,21,19,14],
[13,15,0,13,16,17,13,15],
[16,7,18,0,13,17,16,13],
[10,13,15,18,0,16,11,12],
[15,10,14,14,15,0,11,12],
[16,12,18,15,20,20,0,19],
[17,17,16,18,19,19,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,16,21,19,14,22],
[12,0,16,17,14,13,12,21],
[12,15,0,19,18,16,17,20],
[15,14,12,0,14,17,14,24],
[10,17,13,17,0,13,12,17],
[12,18,15,14,18,0,13,17],
[17,19,14,17,19,18,0,21],
[9,10,11,7,14,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,16,23,14,16,16],
[14,0,21,7,24,13,14,17],
[16,10,0,13,22,17,10,12],
[15,24,18,0,22,21,18,19],
[8,7,9,9,0,15,10,12],
[17,18,14,10,16,0,14,17],
[15,17,21,13,21,17,0,16],
[15,14,19,12,19,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,21,15,23,14,21,17],
[14,0,18,16,16,14,23,19],
[10,13,0,15,15,16,14,14],
[16,15,16,0,16,16,16,13],
[8,15,16,15,0,15,21,15],
[17,17,15,15,16,0,19,16],
[10,8,17,15,10,12,0,14],
[14,12,17,18,16,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,20,16,19,20,14,24],
[18,0,19,13,16,16,14,22],
[11,12,0,7,11,6,5,18],
[15,18,24,0,12,18,17,28],
[12,15,20,19,0,21,15,24],
[11,15,25,13,10,0,13,21],
[17,17,26,14,16,18,0,14],
[7,9,13,3,7,10,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,13,16,22,16,21],
[21,0,14,13,17,12,15,18],
[15,17,0,8,10,11,11,20],
[18,18,23,0,22,19,14,27],
[15,14,21,9,0,14,12,16],
[9,19,20,12,17,0,13,19],
[15,16,20,17,19,18,0,22],
[10,13,11,4,15,12,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,27,19,12,21,19],
[19,0,13,19,19,19,19,23],
[15,18,0,22,18,22,15,18],
[4,12,9,0,11,12,13,19],
[12,12,13,20,0,15,20,23],
[19,12,9,19,16,0,16,20],
[10,12,16,18,11,15,0,19],
[12,8,13,12,8,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,11,5,17,10,5,7],
[22,0,21,12,23,13,17,17],
[20,10,0,9,21,9,13,10],
[26,19,22,0,24,15,20,19],
[14,8,10,7,0,14,10,5],
[21,18,22,16,17,0,16,15],
[26,14,18,11,21,15,0,16],
[24,14,21,12,26,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,14,17,17,18,21],
[11,0,12,10,13,6,9,13],
[10,19,0,17,18,12,16,11],
[17,21,14,0,17,16,14,12],
[14,18,13,14,0,13,15,15],
[14,25,19,15,18,0,18,14],
[13,22,15,17,16,13,0,20],
[10,18,20,19,16,17,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,19,17,13,19,6,20],
[21,0,9,14,17,16,15,17],
[12,22,0,19,13,14,18,19],
[14,17,12,0,13,12,13,16],
[18,14,18,18,0,13,17,17],
[12,15,17,19,18,0,15,11],
[25,16,13,18,14,16,0,17],
[11,14,12,15,14,20,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,17,18,18,17,15],
[14,0,15,16,15,14,16,16],
[13,16,0,18,17,16,16,13],
[14,15,13,0,17,18,18,17],
[13,16,14,14,0,15,13,13],
[13,17,15,13,16,0,14,16],
[14,15,15,13,18,17,0,16],
[16,15,18,14,18,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,14,12,18,20,18],
[14,0,20,12,10,17,17,16],
[12,11,0,12,12,14,19,15],
[17,19,19,0,14,15,19,16],
[19,21,19,17,0,18,15,18],
[13,14,17,16,13,0,15,17],
[11,14,12,12,16,16,0,13],
[13,15,16,15,13,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,16,14,14,14,19,21],
[20,0,17,11,13,5,16,20],
[15,14,0,16,14,4,14,13],
[17,20,15,0,20,8,20,20],
[17,18,17,11,0,16,26,25],
[17,26,27,23,15,0,26,20],
[12,15,17,11,5,5,0,8],
[10,11,18,11,6,11,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,18,11,17,11,8,7],
[21,0,22,13,27,14,18,17],
[13,9,0,16,21,13,10,6],
[20,18,15,0,17,12,14,18],
[14,4,10,14,0,14,10,4],
[20,17,18,19,17,0,14,18],
[23,13,21,17,21,17,0,10],
[24,14,25,13,27,13,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,12,14,19,17,15],
[15,0,10,11,14,16,16,13],
[16,21,0,15,17,19,20,19],
[19,20,16,0,21,15,17,19],
[17,17,14,10,0,14,14,14],
[12,15,12,16,17,0,13,10],
[14,15,11,14,17,18,0,17],
[16,18,12,12,17,21,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,20,8,12,8,20],
[11,0,11,8,19,11,19,23],
[12,20,0,20,20,12,20,12],
[11,23,11,0,11,23,19,23],
[23,12,11,20,0,23,31,23],
[19,20,19,8,8,0,8,31],
[23,12,11,12,0,23,0,23],
[11,8,19,8,8,0,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,27,23,19,13,27,27],
[10,0,10,19,19,19,23,19],
[4,21,0,19,19,17,23,23],
[8,12,12,0,6,4,19,14],
[12,12,12,25,0,8,17,8],
[18,12,14,27,23,0,23,19],
[4,8,8,12,14,8,0,18],
[4,12,8,17,23,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,16,16,15,20,17],
[13,0,10,9,10,15,12,16],
[17,21,0,15,23,20,21,15],
[15,22,16,0,18,15,19,19],
[15,21,8,13,0,18,16,15],
[16,16,11,16,13,0,14,11],
[11,19,10,12,15,17,0,16],
[14,15,16,12,16,20,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,16,14,11,12,16],
[18,0,16,18,15,12,13,19],
[21,15,0,18,17,16,16,20],
[15,13,13,0,14,12,12,14],
[17,16,14,17,0,13,12,20],
[20,19,15,19,18,0,19,18],
[19,18,15,19,19,12,0,23],
[15,12,11,17,11,13,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,12,16,14,21,16],
[15,0,16,17,16,15,17,16],
[10,15,0,11,18,17,21,16],
[19,14,20,0,14,22,20,11],
[15,15,13,17,0,15,15,10],
[17,16,14,9,16,0,18,15],
[10,14,10,11,16,13,0,12],
[15,15,15,20,21,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,14,19,19,12,16],
[17,0,20,20,20,16,14,18],
[20,11,0,21,22,21,15,20],
[17,11,10,0,18,15,16,16],
[12,11,9,13,0,10,9,12],
[12,15,10,16,21,0,8,15],
[19,17,16,15,22,23,0,20],
[15,13,11,15,19,16,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,20,8,11,15,16],
[11,0,22,19,12,15,21,22],
[10,9,0,9,12,6,11,13],
[11,12,22,0,6,10,11,13],
[23,19,19,25,0,17,14,22],
[20,16,25,21,14,0,16,25],
[16,10,20,20,17,15,0,16],
[15,9,18,18,9,6,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,21,22,14,22,18],
[11,0,16,21,13,14,18,9],
[15,15,0,21,17,19,17,21],
[10,10,10,0,15,10,20,16],
[9,18,14,16,0,6,23,24],
[17,17,12,21,25,0,22,21],
[9,13,14,11,8,9,0,15],
[13,22,10,15,7,10,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,20,15,15,13,16,22],
[22,0,24,21,15,4,21,17],
[11,7,0,11,17,9,21,17],
[16,10,20,0,16,14,24,22],
[16,16,14,15,0,18,26,22],
[18,27,22,17,13,0,26,22],
[15,10,10,7,5,5,0,22],
[9,14,14,9,9,9,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,11,13,5,9,15,14],
[21,0,12,16,16,19,16,15],
[20,19,0,18,17,15,17,21],
[18,15,13,0,13,15,9,8],
[26,15,14,18,0,11,16,17],
[22,12,16,16,20,0,17,13],
[16,15,14,22,15,14,0,20],
[17,16,10,23,14,18,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,18,21,26,24,15],
[6,0,14,15,12,16,9,11],
[8,17,0,12,13,21,10,9],
[13,16,19,0,17,19,13,12],
[10,19,18,14,0,17,11,14],
[5,15,10,12,14,0,8,9],
[7,22,21,18,20,23,0,17],
[16,20,22,19,17,22,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,6,13,16,10,11,4],
[21,0,16,16,17,14,19,15],
[25,15,0,20,18,17,17,18],
[18,15,11,0,13,14,18,14],
[15,14,13,18,0,11,13,9],
[21,17,14,17,20,0,19,16],
[20,12,14,13,18,12,0,10],
[27,16,13,17,22,15,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,16,16,17,15,18],
[11,0,15,13,11,14,16,18],
[15,16,0,13,14,16,17,18],
[15,18,18,0,13,18,17,16],
[15,20,17,18,0,14,18,20],
[14,17,15,13,17,0,17,19],
[16,15,14,14,13,14,0,19],
[13,13,13,15,11,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,12,31,12,23,20,31],
[12,0,12,23,12,12,20,31],
[19,19,0,19,19,11,8,19],
[0,8,12,0,0,12,8,31],
[19,19,12,31,0,23,8,31],
[8,19,20,19,8,0,8,19],
[11,11,23,23,23,23,0,23],
[0,0,12,0,0,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,22,17,13,10,18,17],
[15,0,19,16,14,17,16,16],
[9,12,0,16,9,9,16,14],
[14,15,15,0,10,14,15,13],
[18,17,22,21,0,16,15,16],
[21,14,22,17,15,0,18,11],
[13,15,15,16,16,13,0,14],
[14,15,17,18,15,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,19,23,23,18,15,16],
[8,0,9,18,13,16,12,17],
[12,22,0,18,17,18,17,20],
[8,13,13,0,11,21,10,18],
[8,18,14,20,0,18,16,15],
[13,15,13,10,13,0,10,12],
[16,19,14,21,15,21,0,17],
[15,14,11,13,16,19,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,13,8,14,17,15],
[18,0,22,20,18,16,20,14],
[13,9,0,14,13,11,16,11],
[18,11,17,0,9,12,14,11],
[23,13,18,22,0,17,18,19],
[17,15,20,19,14,0,18,16],
[14,11,15,17,13,13,0,11],
[16,17,20,20,12,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,4,17,13,20,17,6],
[18,0,15,28,13,10,17,0],
[27,16,0,13,16,16,19,16],
[14,3,18,0,9,3,6,3],
[18,18,15,22,0,15,17,5],
[11,21,15,28,16,0,17,11],
[14,14,12,25,14,14,0,14],
[25,31,15,28,26,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,17,16,21,19,17],
[17,0,16,16,14,23,17,16],
[15,15,0,16,12,20,16,14],
[14,15,15,0,13,14,16,16],
[15,17,19,18,0,23,17,17],
[10,8,11,17,8,0,16,12],
[12,14,15,15,14,15,0,12],
[14,15,17,15,14,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,8,11,13,11,9,18],
[23,0,14,18,19,14,14,20],
[23,17,0,22,15,9,7,20],
[20,13,9,0,19,10,9,18],
[18,12,16,12,0,15,18,16],
[20,17,22,21,16,0,9,22],
[22,17,24,22,13,22,0,18],
[13,11,11,13,15,9,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,16,16,15,23,23],
[18,0,18,15,18,19,23,19],
[15,13,0,15,12,15,20,24],
[15,16,16,0,13,18,15,16],
[15,13,19,18,0,16,26,22],
[16,12,16,13,15,0,19,20],
[8,8,11,16,5,12,0,15],
[8,12,7,15,9,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,17,12,15,15,15],
[12,0,16,15,12,11,12,14],
[17,15,0,17,14,15,10,15],
[14,16,14,0,13,14,16,19],
[19,19,17,18,0,18,14,16],
[16,20,16,17,13,0,13,15],
[16,19,21,15,17,18,0,19],
[16,17,16,12,15,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,12,18,18,14,15],
[16,0,18,14,17,14,20,23],
[14,13,0,11,16,15,16,19],
[19,17,20,0,14,18,17,21],
[13,14,15,17,0,15,17,16],
[13,17,16,13,16,0,14,16],
[17,11,15,14,14,17,0,18],
[16,8,12,10,15,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,14,11,14,14,19],
[15,0,17,14,8,15,14,14],
[16,14,0,13,8,16,10,15],
[17,17,18,0,6,18,11,10],
[20,23,23,25,0,19,17,14],
[17,16,15,13,12,0,11,14],
[17,17,21,20,14,20,0,19],
[12,17,16,21,17,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,20,14,19,16,22],
[13,0,14,13,17,16,12,17],
[13,17,0,19,11,15,16,14],
[11,18,12,0,10,15,12,13],
[17,14,20,21,0,22,18,18],
[12,15,16,16,9,0,13,14],
[15,19,15,19,13,18,0,20],
[9,14,17,18,13,17,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,14,15,13,13,18],
[17,0,22,17,17,16,15,19],
[14,9,0,14,12,9,16,16],
[17,14,17,0,18,16,19,20],
[16,14,19,13,0,18,18,22],
[18,15,22,15,13,0,18,22],
[18,16,15,12,13,13,0,19],
[13,12,15,11,9,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,6,9,4,13,15,10],
[23,0,18,8,14,16,21,6],
[25,13,0,16,17,18,20,13],
[22,23,15,0,8,16,20,17],
[27,17,14,23,0,19,19,14],
[18,15,13,15,12,0,16,14],
[16,10,11,11,12,15,0,7],
[21,25,18,14,17,17,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,18,19,15,18,21],
[10,0,14,16,13,12,14,20],
[11,17,0,18,17,10,18,18],
[13,15,13,0,20,12,18,21],
[12,18,14,11,0,16,17,24],
[16,19,21,19,15,0,14,25],
[13,17,13,13,14,17,0,21],
[10,11,13,10,7,6,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,13,15,15,14,19],
[18,0,14,16,16,18,18,17],
[15,17,0,15,20,17,15,19],
[18,15,16,0,12,16,16,19],
[16,15,11,19,0,12,13,16],
[16,13,14,15,19,0,19,18],
[17,13,16,15,18,12,0,18],
[12,14,12,12,15,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,19,19,12,12,10],
[19,0,17,17,11,9,12,4],
[15,14,0,13,10,12,6,8],
[12,14,18,0,21,13,13,11],
[12,20,21,10,0,12,13,15],
[19,22,19,18,19,0,21,15],
[19,19,25,18,18,10,0,22],
[21,27,23,20,16,16,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,13,12,14,16,18],
[15,0,12,12,15,11,17,14],
[17,19,0,19,17,17,14,21],
[18,19,12,0,15,15,16,14],
[19,16,14,16,0,14,16,16],
[17,20,14,16,17,0,21,17],
[15,14,17,15,15,10,0,16],
[13,17,10,17,15,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,12,6,14,17,14],
[16,0,19,10,17,15,19,13],
[16,12,0,13,8,17,16,13],
[19,21,18,0,16,14,16,20],
[25,14,23,15,0,12,18,16],
[17,16,14,17,19,0,15,15],
[14,12,15,15,13,16,0,11],
[17,18,18,11,15,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,17,10,15,15,15],
[14,0,12,15,14,9,12,14],
[16,19,0,15,15,17,14,18],
[14,16,16,0,16,14,15,15],
[21,17,16,15,0,18,17,18],
[16,22,14,17,13,0,16,18],
[16,19,17,16,14,15,0,16],
[16,17,13,16,13,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,17,19,12,16,15],
[13,0,17,16,17,13,12,17],
[17,14,0,14,17,13,19,18],
[14,15,17,0,19,16,16,16],
[12,14,14,12,0,16,18,18],
[19,18,18,15,15,0,15,17],
[15,19,12,15,13,16,0,15],
[16,14,13,15,13,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,9,14,13,15,14],
[17,0,12,11,13,14,14,15],
[17,19,0,18,20,15,15,17],
[22,20,13,0,23,18,17,20],
[17,18,11,8,0,15,18,19],
[18,17,16,13,16,0,18,20],
[16,17,16,14,13,13,0,14],
[17,16,14,11,12,11,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,14,14,23,0,6],
[17,0,8,23,17,31,17,17],
[17,23,0,15,17,23,9,15],
[17,8,16,0,17,23,17,0],
[17,14,14,14,0,31,8,14],
[8,0,8,8,0,0,0,0],
[31,14,22,14,23,31,0,14],
[25,14,16,31,17,31,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,25,21,21,11,17],
[10,0,16,13,21,19,18,21],
[10,15,0,20,21,19,6,12],
[6,18,11,0,21,18,14,17],
[10,10,10,10,0,14,12,15],
[10,12,12,13,17,0,14,12],
[20,13,25,17,19,17,0,13],
[14,10,19,14,16,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,19,15,13,13,17],
[17,0,14,16,13,13,13,12],
[13,17,0,19,13,9,11,13],
[12,15,12,0,15,9,13,15],
[16,18,18,16,0,16,15,16],
[18,18,22,22,15,0,16,20],
[18,18,20,18,16,15,0,19],
[14,19,18,16,15,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,22,14,15,18,9],
[18,0,12,23,13,18,17,17],
[13,19,0,21,15,16,17,14],
[9,8,10,0,9,10,10,9],
[17,18,16,22,0,20,21,13],
[16,13,15,21,11,0,15,13],
[13,14,14,21,10,16,0,13],
[22,14,17,22,18,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,13,19,25,25,25,22],
[12,0,20,23,20,23,20,20],
[18,11,0,11,31,28,18,14],
[12,8,20,0,20,26,12,12],
[6,11,0,11,0,20,6,9],
[6,8,3,5,11,0,6,6],
[6,11,13,19,25,25,0,19],
[9,11,17,19,22,25,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,6,8,31,14,17,0],
[23,0,23,14,23,14,23,23],
[25,8,0,16,25,22,25,16],
[23,17,15,0,23,14,17,17],
[0,8,6,8,0,14,8,0],
[17,17,9,17,17,0,25,17],
[14,8,6,14,23,6,0,6],
[31,8,15,14,31,14,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,19,19,15,20,21,13],
[4,0,10,15,19,16,10,4],
[12,21,0,19,22,21,21,15],
[12,16,12,0,22,16,12,16],
[16,12,9,9,0,21,17,9],
[11,15,10,15,10,0,14,8],
[10,21,10,19,14,17,0,8],
[18,27,16,15,22,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,21,20,11,15,11],
[15,0,8,17,19,18,14,12],
[16,23,0,13,24,19,14,17],
[10,14,18,0,19,14,14,10],
[11,12,7,12,0,7,6,3],
[20,13,12,17,24,0,19,13],
[16,17,17,17,25,12,0,17],
[20,19,14,21,28,18,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,21,18,16,18,18,15],
[14,0,15,19,17,18,13,21],
[10,16,0,15,13,13,13,19],
[13,12,16,0,15,14,12,18],
[15,14,18,16,0,18,16,15],
[13,13,18,17,13,0,16,15],
[13,18,18,19,15,15,0,19],
[16,10,12,13,16,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,18,18,15,13,24],
[18,0,16,17,19,13,16,18],
[22,15,0,23,21,21,14,23],
[13,14,8,0,16,14,14,24],
[13,12,10,15,0,11,9,16],
[16,18,10,17,20,0,10,17],
[18,15,17,17,22,21,0,23],
[7,13,8,7,15,14,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,17,18,15,17,15,16],
[9,0,13,10,14,16,14,14],
[14,18,0,11,11,15,16,10],
[13,21,20,0,17,20,25,21],
[16,17,20,14,0,20,19,21],
[14,15,16,11,11,0,18,13],
[16,17,15,6,12,13,0,16],
[15,17,21,10,10,18,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,10,12,16,11,15],
[19,0,12,13,11,17,14,20],
[18,19,0,14,18,20,17,19],
[21,18,17,0,12,18,16,21],
[19,20,13,19,0,21,19,23],
[15,14,11,13,10,0,12,14],
[20,17,14,15,12,19,0,20],
[16,11,12,10,8,17,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,10,15,18,15,11,11],
[24,0,27,19,22,15,19,21],
[21,4,0,13,12,12,16,9],
[16,12,18,0,15,12,15,12],
[13,9,19,16,0,17,13,9],
[16,16,19,19,14,0,19,12],
[20,12,15,16,18,12,0,12],
[20,10,22,19,22,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,10,21,20,16,12,17],
[13,0,9,17,18,18,21,13],
[21,22,0,23,28,20,15,19],
[10,14,8,0,14,14,12,14],
[11,13,3,17,0,8,11,8],
[15,13,11,17,23,0,9,12],
[19,10,16,19,20,22,0,16],
[14,18,12,17,23,19,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,15,20,15,15,15],
[16,0,7,2,12,9,2,2],
[16,24,0,21,19,14,17,21],
[16,29,10,0,15,14,17,22],
[11,19,12,16,0,19,12,16],
[16,22,17,17,12,0,17,17],
[16,29,14,14,19,14,0,16],
[16,29,10,9,15,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,16,18,19,18,15,11],
[21,0,14,23,21,20,21,16],
[15,17,0,20,17,16,17,11],
[13,8,11,0,19,17,16,12],
[12,10,14,12,0,14,16,11],
[13,11,15,14,17,0,14,11],
[16,10,14,15,15,17,0,13],
[20,15,20,19,20,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,20,7,15,12,24,14],
[23,0,20,19,14,12,26,21],
[11,11,0,4,6,9,11,12],
[24,12,27,0,15,19,22,21],
[16,17,25,16,0,14,24,15],
[19,19,22,12,17,0,23,13],
[7,5,20,9,7,8,0,11],
[17,10,19,10,16,18,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,14,17,11,21,20],
[15,0,16,16,21,13,24,22],
[16,15,0,14,19,11,15,25],
[17,15,17,0,17,17,26,20],
[14,10,12,14,0,7,21,16],
[20,18,20,14,24,0,23,25],
[10,7,16,5,10,8,0,17],
[11,9,6,11,15,6,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,17,23,18,15,16,19],
[10,0,21,21,13,14,14,13],
[14,10,0,18,13,12,15,16],
[8,10,13,0,12,10,10,7],
[13,18,18,19,0,15,16,15],
[16,17,19,21,16,0,13,14],
[15,17,16,21,15,18,0,15],
[12,18,15,24,16,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,7,10,14,6,12,17],
[15,0,10,11,24,18,18,12],
[24,21,0,13,20,18,23,20],
[21,20,18,0,25,16,15,13],
[17,7,11,6,0,6,6,14],
[25,13,13,15,25,0,14,17],
[19,13,8,16,25,17,0,17],
[14,19,11,18,17,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,25,17,20,16,18,15],
[11,0,20,15,21,15,17,17],
[6,11,0,15,9,11,9,16],
[14,16,16,0,8,17,8,19],
[11,10,22,23,0,14,20,18],
[15,16,20,14,17,0,15,25],
[13,14,22,23,11,16,0,21],
[16,14,15,12,13,6,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,13,13,17,16,14],
[14,0,18,11,17,12,14,16],
[18,13,0,16,15,21,13,18],
[18,20,15,0,17,16,15,21],
[18,14,16,14,0,17,14,17],
[14,19,10,15,14,0,9,17],
[15,17,18,16,17,22,0,19],
[17,15,13,10,14,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,15,12,13,12,16],
[16,0,14,15,8,12,9,14],
[18,17,0,17,12,15,13,13],
[16,16,14,0,16,16,14,17],
[19,23,19,15,0,22,19,18],
[18,19,16,15,9,0,12,16],
[19,22,18,17,12,19,0,22],
[15,17,18,14,13,15,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,14,15,24,18,18],
[13,0,16,18,16,24,19,20],
[15,15,0,13,13,19,17,15],
[17,13,18,0,18,18,19,15],
[16,15,18,13,0,21,21,20],
[7,7,12,13,10,0,13,12],
[13,12,14,12,10,18,0,14],
[13,11,16,16,11,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,15,13,14,17,14],
[14,0,17,15,16,14,17,13],
[19,14,0,14,11,19,15,19],
[16,16,17,0,15,15,15,18],
[18,15,20,16,0,19,18,16],
[17,17,12,16,12,0,14,17],
[14,14,16,16,13,17,0,14],
[17,18,12,13,15,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,9,16,19,16,18,18],
[12,0,12,13,15,12,15,16],
[22,19,0,18,14,15,23,24],
[15,18,13,0,15,18,18,19],
[12,16,17,16,0,16,18,16],
[15,19,16,13,15,0,16,16],
[13,16,8,13,13,15,0,19],
[13,15,7,12,15,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,15,14,17,19,12],
[15,0,19,14,12,15,13,18],
[17,12,0,17,13,19,15,19],
[16,17,14,0,11,19,15,13],
[17,19,18,20,0,17,22,13],
[14,16,12,12,14,0,15,10],
[12,18,16,16,9,16,0,12],
[19,13,12,18,18,21,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,17,20,12,12,14],
[18,0,16,21,16,18,12,19],
[14,15,0,14,16,12,14,15],
[14,10,17,0,15,11,15,13],
[11,15,15,16,0,13,14,15],
[19,13,19,20,18,0,19,18],
[19,19,17,16,17,12,0,14],
[17,12,16,18,16,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,14,15,8,9,15],
[18,0,15,15,13,16,7,18],
[16,16,0,12,14,11,9,18],
[17,16,19,0,21,14,13,17],
[16,18,17,10,0,15,18,16],
[23,15,20,17,16,0,10,17],
[22,24,22,18,13,21,0,18],
[16,13,13,14,15,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,18,19,19,18,18],
[16,0,15,16,16,18,15,13],
[13,16,0,13,19,17,19,16],
[13,15,18,0,16,19,16,16],
[12,15,12,15,0,18,17,16],
[12,13,14,12,13,0,11,17],
[13,16,12,15,14,20,0,17],
[13,18,15,15,15,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,16,17,12,15,7,12],
[23,0,16,13,14,21,11,13],
[15,15,0,14,16,21,13,15],
[14,18,17,0,22,21,20,18],
[19,17,15,9,0,20,8,13],
[16,10,10,10,11,0,8,14],
[24,20,18,11,23,23,0,14],
[19,18,16,13,18,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,19,22,15,25,9],
[19,0,12,22,19,22,16,13],
[16,19,0,19,19,13,19,13],
[12,9,12,0,10,21,22,12],
[9,12,12,21,0,18,21,12],
[16,9,18,10,13,0,16,16],
[6,15,12,9,10,15,0,6],
[22,18,18,19,19,15,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,15,10,9,11,15],
[19,0,17,15,15,16,14,17],
[19,14,0,19,15,13,10,13],
[16,16,12,0,14,14,15,17],
[21,16,16,17,0,13,14,17],
[22,15,18,17,18,0,16,17],
[20,17,21,16,17,15,0,15],
[16,14,18,14,14,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,8,11,12,12,12,9],
[15,0,4,15,8,11,5,10],
[23,27,0,23,21,16,13,23],
[20,16,8,0,16,12,12,16],
[19,23,10,15,0,9,11,8],
[19,20,15,19,22,0,17,17],
[19,26,18,19,20,14,0,28],
[22,21,8,15,23,14,3,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,16,18,12,10,20,16],
[12,0,15,18,13,16,18,9],
[15,16,0,18,8,9,16,13],
[13,13,13,0,13,11,14,8],
[19,18,23,18,0,11,16,14],
[21,15,22,20,20,0,18,15],
[11,13,15,17,15,13,0,17],
[15,22,18,23,17,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,14,11,17,8,15,12],
[10,0,10,8,8,10,12,8],
[17,21,0,14,19,9,13,12],
[20,23,17,0,19,15,15,15],
[14,23,12,12,0,10,13,13],
[23,21,22,16,21,0,12,19],
[16,19,18,16,18,19,0,14],
[19,23,19,16,18,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,15,18,14,17,20],
[8,0,5,12,13,9,6,6],
[14,26,0,16,16,17,18,16],
[16,19,15,0,12,13,16,17],
[13,18,15,19,0,15,11,20],
[17,22,14,18,16,0,20,21],
[14,25,13,15,20,11,0,17],
[11,25,15,14,11,10,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,15,16,17,20,18,21],
[6,0,10,10,12,14,10,11],
[16,21,0,17,18,13,16,17],
[15,21,14,0,12,16,16,17],
[14,19,13,19,0,16,11,18],
[11,17,18,15,15,0,11,14],
[13,21,15,15,20,20,0,24],
[10,20,14,14,13,17,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,19,16,17,16,20],
[16,0,17,16,15,14,21,19],
[16,14,0,19,13,13,20,21],
[12,15,12,0,11,11,15,15],
[15,16,18,20,0,17,13,17],
[14,17,18,20,14,0,13,17],
[15,10,11,16,18,18,0,19],
[11,12,10,16,14,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,17,11,12,10,11,9],
[22,0,23,16,20,15,14,18],
[14,8,0,14,12,10,11,11],
[20,15,17,0,16,14,15,14],
[19,11,19,15,0,16,15,18],
[21,16,21,17,15,0,18,20],
[20,17,20,16,16,13,0,19],
[22,13,20,17,13,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,11,14,12,14,9],
[18,0,14,17,19,18,14,16],
[19,17,0,14,17,10,18,12],
[20,14,17,0,17,15,15,15],
[17,12,14,14,0,12,12,11],
[19,13,21,16,19,0,18,11],
[17,17,13,16,19,13,0,10],
[22,15,19,16,20,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,10,12,12,6,10,9],
[16,0,11,10,10,5,10,8],
[21,20,0,12,12,15,17,14],
[19,21,19,0,12,16,16,16],
[19,21,19,19,0,18,18,14],
[25,26,16,15,13,0,23,24],
[21,21,14,15,13,8,0,8],
[22,23,17,15,17,7,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,8,13,0,9,18,9],
[22,0,8,19,10,13,13,15],
[23,23,0,24,15,20,31,24],
[18,12,7,0,14,7,12,13],
[31,21,16,17,0,13,25,20],
[22,18,11,24,18,0,31,22],
[13,18,0,19,6,0,0,15],
[22,16,7,18,11,9,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,8,7,11,14,9,10],
[20,0,11,11,10,15,10,14],
[23,20,0,17,14,13,16,19],
[24,20,14,0,20,19,13,22],
[20,21,17,11,0,13,16,18],
[17,16,18,12,18,0,11,19],
[22,21,15,18,15,20,0,26],
[21,17,12,9,13,12,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,15,12,14,12,13],
[13,0,10,15,10,14,13,10],
[19,21,0,16,15,20,14,15],
[16,16,15,0,17,18,15,18],
[19,21,16,14,0,17,17,18],
[17,17,11,13,14,0,13,13],
[19,18,17,16,14,18,0,16],
[18,21,16,13,13,18,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,19,16,19,17,18],
[14,0,11,16,13,19,17,11],
[16,20,0,16,16,18,20,15],
[12,15,15,0,13,19,15,17],
[15,18,15,18,0,22,18,17],
[12,12,13,12,9,0,12,16],
[14,14,11,16,13,19,0,13],
[13,20,16,14,14,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,19,23,15,23,16],
[10,0,18,12,18,12,27,10],
[11,13,0,17,16,13,13,13],
[12,19,14,0,14,22,15,14],
[8,13,15,17,0,8,15,15],
[16,19,18,9,23,0,18,11],
[8,4,18,16,16,13,0,4],
[15,21,18,17,16,20,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,19,17,19,14,17],
[17,0,17,13,20,14,14,16],
[14,14,0,12,14,14,16,15],
[12,18,19,0,18,15,13,15],
[14,11,17,13,0,12,13,12],
[12,17,17,16,19,0,13,14],
[17,17,15,18,18,18,0,17],
[14,15,16,16,19,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,8,15,20,16,18,14],
[8,0,8,9,11,2,11,7],
[23,23,0,19,20,20,22,14],
[16,22,12,0,15,20,26,13],
[11,20,11,16,0,5,16,7],
[15,29,11,11,26,0,24,16],
[13,20,9,5,15,7,0,16],
[17,24,17,18,24,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,26,7,19,18,26,24],
[11,0,25,5,17,11,17,24],
[5,6,0,0,12,5,6,18],
[24,26,31,0,12,11,19,24],
[12,14,19,19,0,5,13,12],
[13,20,26,20,26,0,26,31],
[5,14,25,12,18,5,0,18],
[7,7,13,7,19,0,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,20,11,11,8,18,14],
[20,0,15,13,11,11,21,15],
[11,16,0,6,14,9,22,9],
[20,18,25,0,18,14,23,15],
[20,20,17,13,0,18,25,17],
[23,20,22,17,13,0,24,18],
[13,10,9,8,6,7,0,7],
[17,16,22,16,14,13,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,15,9,22,4,14],
[19,0,12,15,15,23,15,18],
[18,19,0,17,15,24,20,13],
[16,16,14,0,15,21,17,14],
[22,16,16,16,0,24,21,11],
[9,8,7,10,7,0,7,7],
[27,16,11,14,10,24,0,15],
[17,13,18,17,20,24,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,17,14,17,19,18],
[18,0,14,23,22,16,23,23],
[17,17,0,21,21,11,22,20],
[14,8,10,0,15,13,12,13],
[17,9,10,16,0,10,12,16],
[14,15,20,18,21,0,20,18],
[12,8,9,19,19,11,0,16],
[13,8,11,18,15,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,13,17,20,16,17],
[15,0,15,11,15,15,12,14],
[13,16,0,13,17,13,12,16],
[18,20,18,0,16,16,16,15],
[14,16,14,15,0,17,18,13],
[11,16,18,15,14,0,13,14],
[15,19,19,15,13,18,0,18],
[14,17,15,16,18,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,11,12,16,17,12],
[15,0,20,11,16,21,20,15],
[18,11,0,11,13,16,15,15],
[20,20,20,0,13,21,19,16],
[19,15,18,18,0,23,21,21],
[15,10,15,10,8,0,14,11],
[14,11,16,12,10,17,0,12],
[19,16,16,15,10,20,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,16,13,17,15,16],
[14,0,15,11,10,16,16,13],
[19,16,0,19,12,18,20,18],
[15,20,12,0,18,20,15,19],
[18,21,19,13,0,20,16,23],
[14,15,13,11,11,0,16,12],
[16,15,11,16,15,15,0,12],
[15,18,13,12,8,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,19,14,20,13,16,14],
[6,0,12,11,17,9,14,14],
[12,19,0,16,17,10,13,15],
[17,20,15,0,20,15,14,16],
[11,14,14,11,0,13,13,10],
[18,22,21,16,18,0,15,15],
[15,17,18,17,18,16,0,16],
[17,17,16,15,21,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,18,21,8,17,26],
[19,0,14,19,23,19,27,23],
[14,17,0,23,22,9,22,13],
[13,12,8,0,21,17,17,21],
[10,8,9,10,0,0,14,18],
[23,12,22,14,31,0,22,31],
[14,4,9,14,17,9,0,22],
[5,8,18,10,13,0,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,13,21,16,15,15],
[11,0,23,18,14,15,22,18],
[11,8,0,10,10,15,21,13],
[18,13,21,0,12,17,21,15],
[10,17,21,19,0,18,19,18],
[15,16,16,14,13,0,22,15],
[16,9,10,10,12,9,0,15],
[16,13,18,16,13,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,15,14,14,14,11],
[19,0,17,18,21,14,18,16],
[19,14,0,16,22,14,19,14],
[16,13,15,0,18,14,12,11],
[17,10,9,13,0,12,13,9],
[17,17,17,17,19,0,18,15],
[17,13,12,19,18,13,0,15],
[20,15,17,20,22,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,16,12,15,12,12],
[13,0,26,26,7,13,13,18],
[18,5,0,12,3,6,3,14],
[15,5,19,0,3,6,6,14],
[19,24,28,28,0,10,10,15],
[16,18,25,25,21,0,17,12],
[19,18,28,25,21,14,0,18],
[19,13,17,17,16,19,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,16,9,19,18,13],
[9,0,19,16,9,15,16,11],
[10,12,0,17,13,10,6,2],
[15,15,14,0,16,11,11,11],
[22,22,18,15,0,13,22,13],
[12,16,21,20,18,0,18,18],
[13,15,25,20,9,13,0,14],
[18,20,29,20,18,13,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,23,10,5,26,13],
[13,0,13,26,10,13,26,21],
[18,18,0,23,10,23,26,18],
[8,5,8,0,5,0,26,8],
[21,21,21,26,0,13,21,21],
[26,18,8,31,18,0,26,26],
[5,5,5,5,10,5,0,5],
[18,10,13,23,10,5,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,21,10,10,10,10,21],
[21,0,31,21,31,21,31,11],
[10,0,0,0,20,10,10,11],
[21,10,31,0,20,31,10,21],
[21,0,11,11,0,11,10,11],
[21,10,21,0,20,0,10,11],
[21,0,21,21,21,21,0,11],
[10,20,20,10,20,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,9,11,11,4,10,4],
[16,0,16,16,18,16,17,11],
[22,15,0,16,22,15,22,15],
[20,15,15,0,11,20,10,11],
[20,13,9,20,0,9,11,13],
[27,15,16,11,22,0,17,22],
[21,14,9,21,20,14,0,14],
[27,20,16,20,18,9,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,16,19,20,15,13],
[15,0,9,13,16,19,12,11],
[19,22,0,14,23,19,19,14],
[15,18,17,0,20,17,16,14],
[12,15,8,11,0,12,11,14],
[11,12,12,14,19,0,11,11],
[16,19,12,15,20,20,0,18],
[18,20,17,17,17,20,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,13,20,17,23,16],
[10,0,16,11,15,14,17,10],
[11,15,0,18,16,12,19,15],
[18,20,13,0,17,13,20,15],
[11,16,15,14,0,15,18,11],
[14,17,19,18,16,0,16,20],
[8,14,12,11,13,15,0,11],
[15,21,16,16,20,11,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,15,11,17,10,11],
[20,0,14,18,13,22,15,12],
[22,17,0,22,16,21,19,15],
[16,13,9,0,11,17,12,13],
[20,18,15,20,0,20,19,18],
[14,9,10,14,11,0,10,12],
[21,16,12,19,12,21,0,16],
[20,19,16,18,13,19,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,19,15,18,20,14],
[12,0,19,14,14,17,15,10],
[13,12,0,12,12,17,14,15],
[12,17,19,0,13,21,18,16],
[16,17,19,18,0,17,21,9],
[13,14,14,10,14,0,13,8],
[11,16,17,13,10,18,0,12],
[17,21,16,15,22,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,18,11,16,11,14,18],
[11,0,11,7,9,7,4,11],
[13,20,0,10,6,10,13,15],
[20,24,21,0,22,13,14,21],
[15,22,25,9,0,13,18,16],
[20,24,21,18,18,0,14,16],
[17,27,18,17,13,17,0,13],
[13,20,16,10,15,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,14,17,15,14,14],
[17,0,18,20,11,16,17,17],
[18,13,0,19,13,16,15,13],
[17,11,12,0,14,16,17,11],
[14,20,18,17,0,18,16,16],
[16,15,15,15,13,0,19,11],
[17,14,16,14,15,12,0,7],
[17,14,18,20,15,20,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,19,16,14,16,15],
[16,0,15,13,14,15,17,10],
[15,16,0,14,13,14,19,14],
[12,18,17,0,14,15,15,10],
[15,17,18,17,0,13,17,16],
[17,16,17,16,18,0,17,15],
[15,14,12,16,14,14,0,7],
[16,21,17,21,15,16,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,21,10,8,14,14,13],
[17,0,20,11,12,17,15,13],
[10,11,0,11,11,14,14,12],
[21,20,20,0,18,19,15,16],
[23,19,20,13,0,19,16,13],
[17,14,17,12,12,0,16,16],
[17,16,17,16,15,15,0,16],
[18,18,19,15,18,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,23,21,21,17,26],
[12,0,19,27,22,21,21,22],
[17,12,0,23,20,23,17,24],
[8,4,8,0,12,21,12,17],
[10,9,11,19,0,25,17,19],
[10,10,8,10,6,0,11,14],
[14,10,14,19,14,20,0,19],
[5,9,7,14,12,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,13,12,13,17,16,10],
[14,0,13,15,17,17,16,12],
[18,18,0,21,13,16,24,20],
[19,16,10,0,13,13,20,16],
[18,14,18,18,0,14,19,16],
[14,14,15,18,17,0,18,15],
[15,15,7,11,12,13,0,12],
[21,19,11,15,15,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,21,13,15,11,15,8],
[19,0,23,13,18,16,17,18],
[10,8,0,13,10,12,13,7],
[18,18,18,0,20,18,21,13],
[16,13,21,11,0,14,16,8],
[20,15,19,13,17,0,21,15],
[16,14,18,10,15,10,0,7],
[23,13,24,18,23,16,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,16,16,8,8,8,15],
[23,0,23,23,15,23,23,23],
[15,8,0,23,8,16,8,15],
[15,8,8,0,8,0,0,23],
[23,16,23,23,0,8,8,23],
[23,8,15,31,23,0,0,23],
[23,8,23,31,23,31,0,23],
[16,8,16,8,8,8,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,15,16,17,17,16],
[18,0,12,20,14,17,15,16],
[14,19,0,18,12,12,19,15],
[16,11,13,0,13,12,18,15],
[15,17,19,18,0,15,16,15],
[14,14,19,19,16,0,20,17],
[14,16,12,13,15,11,0,12],
[15,15,16,16,16,14,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,15,13,15,17,17,14],
[12,0,19,18,17,15,19,19],
[16,12,0,15,14,13,15,19],
[18,13,16,0,15,17,16,17],
[16,14,17,16,0,17,20,16],
[14,16,18,14,14,0,22,18],
[14,12,16,15,11,9,0,16],
[17,12,12,14,15,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,9,6,10,10,24,15],
[20,0,17,16,18,17,25,15],
[22,14,0,19,16,13,23,22],
[25,15,12,0,17,12,24,18],
[21,13,15,14,0,17,27,19],
[21,14,18,19,14,0,20,21],
[7,6,8,7,4,11,0,10],
[16,16,9,13,12,10,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,16,16,14,17,15],
[19,0,13,18,20,17,24,23],
[17,18,0,17,17,15,22,16],
[15,13,14,0,18,18,21,14],
[15,11,14,13,0,10,17,14],
[17,14,16,13,21,0,19,18],
[14,7,9,10,14,12,0,9],
[16,8,15,17,17,13,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,20,19,19,22,20,13],
[12,0,17,8,12,17,24,9],
[11,14,0,11,13,7,18,16],
[12,23,20,0,16,15,19,12],
[12,19,18,15,0,13,20,9],
[9,14,24,16,18,0,16,16],
[11,7,13,12,11,15,0,9],
[18,22,15,19,22,15,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,13,15,16,14,15],
[16,0,16,12,10,15,12,13],
[13,15,0,16,16,17,17,15],
[18,19,15,0,17,16,18,16],
[16,21,15,14,0,16,18,15],
[15,16,14,15,15,0,18,16],
[17,19,14,13,13,13,0,14],
[16,18,16,15,16,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,11,16,11,14,12,18],
[10,0,18,21,11,19,13,14],
[20,13,0,15,12,15,16,19],
[15,10,16,0,16,14,13,14],
[20,20,19,15,0,15,18,17],
[17,12,16,17,16,0,13,16],
[19,18,15,18,13,18,0,18],
[13,17,12,17,14,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,11,22,22,17,19],
[13,0,10,10,16,18,18,7],
[17,21,0,20,23,21,22,12],
[20,21,11,0,23,22,17,19],
[9,15,8,8,0,17,13,12],
[9,13,10,9,14,0,11,9],
[14,13,9,14,18,20,0,9],
[12,24,19,12,19,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,19,12,14,14,15],
[19,0,15,19,17,18,12,22],
[20,16,0,22,13,22,16,25],
[12,12,9,0,13,13,8,14],
[19,14,18,18,0,16,13,21],
[17,13,9,18,15,0,11,14],
[17,19,15,23,18,20,0,19],
[16,9,6,17,10,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,22,15,21,19,12,19],
[15,0,21,10,19,12,10,13],
[9,10,0,12,16,10,18,16],
[16,21,19,0,23,11,16,21],
[10,12,15,8,0,14,14,12],
[12,19,21,20,17,0,8,13],
[19,21,13,15,17,23,0,21],
[12,18,15,10,19,18,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,22,15,13,8,19,16],
[21,0,25,14,19,14,19,13],
[9,6,0,12,16,11,11,15],
[16,17,19,0,14,14,21,22],
[18,12,15,17,0,7,14,15],
[23,17,20,17,24,0,25,12],
[12,12,20,10,17,6,0,14],
[15,18,16,9,16,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,8,9,5,11,10,9],
[21,0,13,12,17,17,17,12],
[23,18,0,16,18,21,18,11],
[22,19,15,0,18,17,21,14],
[26,14,13,13,0,18,19,16],
[20,14,10,14,13,0,12,13],
[21,14,13,10,12,19,0,10],
[22,19,20,17,15,18,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,15,18,11,16,18],
[12,0,19,12,18,12,16,16],
[12,12,0,15,21,12,13,18],
[16,19,16,0,17,13,17,13],
[13,13,10,14,0,12,9,16],
[20,19,19,18,19,0,15,19],
[15,15,18,14,22,16,0,14],
[13,15,13,18,15,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,11,11,31,13,17,12],
[19,0,11,18,25,12,12,12],
[20,20,0,20,20,13,20,25],
[20,13,11,0,25,13,25,19],
[0,6,11,6,0,6,0,5],
[18,19,18,18,25,0,18,12],
[14,19,11,6,31,13,0,19],
[19,19,6,12,26,19,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,11,14,17,13,15],
[17,0,18,14,13,21,15,18],
[17,13,0,16,15,13,14,18],
[20,17,15,0,23,19,19,18],
[17,18,16,8,0,18,16,12],
[14,10,18,12,13,0,13,17],
[18,16,17,12,15,18,0,17],
[16,13,13,13,19,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,17,19,19,20,12],
[14,0,23,21,12,16,20,18],
[16,8,0,8,13,10,10,11],
[14,10,23,0,13,17,13,17],
[12,19,18,18,0,17,21,16],
[12,15,21,14,14,0,13,14],
[11,11,21,18,10,18,0,18],
[19,13,20,14,15,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,11,12,12,11,9,12],
[14,0,12,14,14,12,8,10],
[20,19,0,15,11,14,9,15],
[19,17,16,0,18,18,15,19],
[19,17,20,13,0,14,16,19],
[20,19,17,13,17,0,12,18],
[22,23,22,16,15,19,0,18],
[19,21,16,12,12,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,10,17,16,7,10],
[21,0,14,26,22,20,17,17],
[21,17,0,22,26,17,10,19],
[21,5,9,0,24,19,8,8],
[14,9,5,7,0,9,5,8],
[15,11,14,12,22,0,11,10],
[24,14,21,23,26,20,0,16],
[21,14,12,23,23,21,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,20,17,14,19,16],
[17,0,14,20,19,16,19,20],
[15,17,0,17,16,20,21,14],
[11,11,14,0,15,10,17,15],
[14,12,15,16,0,13,20,16],
[17,15,11,21,18,0,19,14],
[12,12,10,14,11,12,0,15],
[15,11,17,16,15,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,14,13,9,8,8,7],
[25,0,18,18,15,11,11,13],
[17,13,0,12,12,11,9,13],
[18,13,19,0,16,13,13,10],
[22,16,19,15,0,17,17,17],
[23,20,20,18,14,0,16,13],
[23,20,22,18,14,15,0,15],
[24,18,18,21,14,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,21,10,10,11,15,11],
[21,0,21,21,25,16,20,11],
[10,10,0,10,4,0,9,5],
[21,10,21,0,21,17,21,12],
[21,6,27,10,0,22,26,17],
[20,15,31,14,9,0,20,20],
[16,11,22,10,5,11,0,5],
[20,20,26,19,14,11,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,23,16,19,19,19,19],
[20,0,22,14,26,24,27,19],
[8,9,0,11,12,14,11,11],
[15,17,20,0,27,22,21,11],
[12,5,19,4,0,14,11,13],
[12,7,17,9,17,0,17,20],
[12,4,20,10,20,14,0,14],
[12,12,20,20,18,11,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,16,13,20,17,19],
[15,0,17,17,19,19,18,22],
[19,14,0,15,20,20,15,22],
[15,14,16,0,20,14,19,21],
[18,12,11,11,0,14,13,15],
[11,12,11,17,17,0,13,22],
[14,13,16,12,18,18,0,20],
[12,9,9,10,16,9,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,14,17,4,10,15],
[19,0,22,16,19,13,15,23],
[14,9,0,11,11,7,13,12],
[17,15,20,0,19,10,17,14],
[14,12,20,12,0,1,13,16],
[27,18,24,21,30,0,18,15],
[21,16,18,14,18,13,0,18],
[16,8,19,17,15,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,25,25,20,12,12,20],
[16,0,23,17,12,17,23,20],
[6,8,0,10,13,5,11,13],
[6,14,21,0,21,13,13,20],
[11,19,18,10,0,16,16,13],
[19,14,26,18,15,0,6,13],
[19,8,20,18,15,25,0,20],
[11,11,18,11,18,18,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,14,13,13,15,16],
[20,0,17,16,16,14,14,16],
[18,14,0,18,14,16,16,17],
[17,15,13,0,14,16,17,13],
[18,15,17,17,0,17,14,16],
[18,17,15,15,14,0,13,12],
[16,17,15,14,17,18,0,14],
[15,15,14,18,15,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,13,12,12,16,16],
[17,0,13,14,15,12,9,13],
[16,18,0,21,15,13,15,16],
[18,17,10,0,17,18,14,20],
[19,16,16,14,0,14,13,15],
[19,19,18,13,17,0,15,17],
[15,22,16,17,18,16,0,18],
[15,18,15,11,16,14,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,15,13,15,17,14],
[13,0,12,10,13,10,11,12],
[15,19,0,17,23,17,14,19],
[16,21,14,0,16,17,18,18],
[18,18,8,15,0,17,17,18],
[16,21,14,14,14,0,11,14],
[14,20,17,13,14,20,0,18],
[17,19,12,13,13,17,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,25,17,25,17,31,17],
[22,0,16,16,16,8,22,16],
[6,15,0,0,8,8,14,6],
[14,15,31,0,16,8,14,14],
[6,15,23,15,0,8,23,14],
[14,23,23,23,23,0,31,14],
[0,9,17,17,8,0,0,0],
[14,15,25,17,17,17,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,19,15,18,16,21,17],
[15,0,17,16,21,18,17,17],
[12,14,0,20,19,18,18,14],
[16,15,11,0,15,15,18,13],
[13,10,12,16,0,11,17,14],
[15,13,13,16,20,0,17,18],
[10,14,13,13,14,14,0,13],
[14,14,17,18,17,13,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,10,12,15,17,14,23],
[14,0,16,14,20,12,16,20],
[21,15,0,18,15,16,16,17],
[19,17,13,0,14,17,19,21],
[16,11,16,17,0,13,18,17],
[14,19,15,14,18,0,15,19],
[17,15,15,12,13,16,0,19],
[8,11,14,10,14,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,15,16,17,24,20],
[13,0,16,13,11,15,19,22],
[19,15,0,21,12,15,21,17],
[16,18,10,0,9,14,16,20],
[15,20,19,22,0,18,26,24],
[14,16,16,17,13,0,21,21],
[7,12,10,15,5,10,0,22],
[11,9,14,11,7,10,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,18,22,12,18,18,13],
[20,0,16,13,18,16,15,19],
[13,15,0,16,9,15,13,17],
[9,18,15,0,11,11,12,14],
[19,13,22,20,0,18,18,13],
[13,15,16,20,13,0,10,13],
[13,16,18,19,13,21,0,19],
[18,12,14,17,18,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,14,17,18,13,12],
[16,0,20,13,16,17,11,14],
[12,11,0,13,10,12,6,15],
[17,18,18,0,14,16,17,18],
[14,15,21,17,0,14,20,15],
[13,14,19,15,17,0,12,15],
[18,20,25,14,11,19,0,16],
[19,17,16,13,16,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,14,20,14,17,17],
[14,0,18,19,22,16,19,18],
[13,13,0,14,17,13,16,14],
[17,12,17,0,21,12,15,18],
[11,9,14,10,0,9,11,9],
[17,15,18,19,22,0,23,21],
[14,12,15,16,20,8,0,14],
[14,13,17,13,22,10,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,11,14,15,8,9],
[13,0,10,13,12,12,12,6],
[19,21,0,27,19,16,16,15],
[20,18,4,0,13,10,9,13],
[17,19,12,18,0,13,14,16],
[16,19,15,21,18,0,13,16],
[23,19,15,22,17,18,0,15],
[22,25,16,18,15,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,16,14,18,16,14],
[14,0,13,14,14,17,13,12],
[14,18,0,16,15,16,13,16],
[15,17,15,0,12,16,14,15],
[17,17,16,19,0,17,15,17],
[13,14,15,15,14,0,13,13],
[15,18,18,17,16,18,0,15],
[17,19,15,16,14,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,17,8,13,21,12],
[19,0,21,13,13,13,21,14],
[15,10,0,15,4,15,21,10],
[14,18,16,0,12,23,17,18],
[23,18,27,19,0,19,31,14],
[18,18,16,8,12,0,20,14],
[10,10,10,14,0,11,0,10],
[19,17,21,13,17,17,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,16,14,15,14,12],
[20,0,15,19,13,16,15,11],
[16,16,0,17,13,16,17,18],
[15,12,14,0,15,16,11,15],
[17,18,18,16,0,15,15,17],
[16,15,15,15,16,0,18,15],
[17,16,14,20,16,13,0,14],
[19,20,13,16,14,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,22,16,20,21,17],
[15,0,15,12,19,20,18,15],
[16,16,0,20,14,15,19,13],
[9,19,11,0,18,17,18,17],
[15,12,17,13,0,15,20,11],
[11,11,16,14,16,0,17,11],
[10,13,12,13,11,14,0,10],
[14,16,18,14,20,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,9,13,8,15,13],
[17,0,25,11,20,15,26,15],
[17,6,0,13,4,21,13,11],
[22,20,18,0,13,26,26,25],
[18,11,27,18,0,21,22,20],
[23,16,10,5,10,0,11,5],
[16,5,18,5,9,20,0,20],
[18,16,20,6,11,26,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,17,15,15,11,20,31],
[9,0,10,20,20,15,15,20],
[14,21,0,19,25,10,19,26],
[16,11,12,0,15,12,14,26],
[16,11,6,16,0,6,20,20],
[20,16,21,19,25,0,14,26],
[11,16,12,17,11,17,0,26],
[0,11,5,5,11,5,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,14,19,16,17,18,19],
[11,0,16,13,14,13,4,9],
[17,15,0,13,14,16,11,16],
[12,18,18,0,18,19,13,17],
[15,17,17,13,0,22,11,20],
[14,18,15,12,9,0,16,12],
[13,27,20,18,20,15,0,15],
[12,22,15,14,11,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,14,20,18,7,31,7],
[11,0,20,13,18,18,18,18],
[17,11,0,12,18,11,24,18],
[11,18,19,0,12,12,25,18],
[13,13,13,19,0,0,19,6],
[24,13,20,19,31,0,31,20],
[0,13,7,6,12,0,0,7],
[24,13,13,13,25,11,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,15,17,13,12,12],
[10,0,14,11,14,12,11,12],
[10,17,0,14,15,7,12,7],
[16,20,17,0,17,15,13,11],
[14,17,16,14,0,12,14,14],
[18,19,24,16,19,0,14,16],
[19,20,19,18,17,17,0,14],
[19,19,24,20,17,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,14,20,18,19,17],
[18,0,17,17,15,19,16,18],
[16,14,0,13,16,16,19,17],
[17,14,18,0,18,16,21,17],
[11,16,15,13,0,17,18,14],
[13,12,15,15,14,0,17,15],
[12,15,12,10,13,14,0,16],
[14,13,14,14,17,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,16,6,17,11,13,8],
[22,0,21,10,24,12,12,22],
[15,10,0,8,16,8,14,15],
[25,21,23,0,23,21,14,19],
[14,7,15,8,0,8,14,12],
[20,19,23,10,23,0,17,18],
[18,19,17,17,17,14,0,19],
[23,9,16,12,19,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,16,15,17,12,20,18],
[9,0,10,12,9,8,11,5],
[15,21,0,15,16,11,18,16],
[16,19,16,0,17,13,20,14],
[14,22,15,14,0,15,19,11],
[19,23,20,18,16,0,20,15],
[11,20,13,11,12,11,0,8],
[13,26,15,17,20,16,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,15,16,15,14,15],
[16,0,12,16,12,15,13,15],
[16,19,0,12,14,19,15,12],
[16,15,19,0,15,20,18,18],
[15,19,17,16,0,16,19,16],
[16,16,12,11,15,0,17,15],
[17,18,16,13,12,14,0,14],
[16,16,19,13,15,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,16,15,17,14,19],
[13,0,14,16,15,18,17,16],
[13,17,0,16,16,20,20,16],
[15,15,15,0,11,19,18,13],
[16,16,15,20,0,20,18,18],
[14,13,11,12,11,0,15,13],
[17,14,11,13,13,16,0,12],
[12,15,15,18,13,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,17,15,12,13,20],
[16,0,16,10,10,14,9,15],
[16,15,0,15,16,17,14,17],
[14,21,16,0,19,16,11,20],
[16,21,15,12,0,15,16,17],
[19,17,14,15,16,0,12,13],
[18,22,17,20,15,19,0,18],
[11,16,14,11,14,18,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,12,12,16,9,9,9],
[26,0,25,26,26,20,24,14],
[19,6,0,16,23,6,22,8],
[19,5,15,0,12,8,10,5],
[15,5,8,19,0,8,14,3],
[22,11,25,23,23,0,22,8],
[22,7,9,21,17,9,0,17],
[22,17,23,26,28,23,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,13,16,15,15,21],
[15,0,14,14,14,16,16,14],
[14,17,0,17,19,23,18,12],
[18,17,14,0,15,19,17,20],
[15,17,12,16,0,22,20,14],
[16,15,8,12,9,0,17,16],
[16,15,13,14,11,14,0,18],
[10,17,19,11,17,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,14,15,12,10,15],
[17,0,13,16,13,14,15,12],
[18,18,0,19,18,15,19,18],
[17,15,12,0,14,17,18,16],
[16,18,13,17,0,18,11,17],
[19,17,16,14,13,0,12,15],
[21,16,12,13,20,19,0,18],
[16,19,13,15,14,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,11,13,21,18,18],
[15,0,18,19,19,25,20,22],
[14,13,0,12,8,20,18,15],
[20,12,19,0,16,23,19,22],
[18,12,23,15,0,17,15,18],
[10,6,11,8,14,0,10,16],
[13,11,13,12,16,21,0,20],
[13,9,16,9,13,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,18,15,18,15,17],
[10,0,17,10,18,13,15,14],
[11,14,0,15,16,17,17,15],
[13,21,16,0,13,14,12,12],
[16,13,15,18,0,14,15,12],
[13,18,14,17,17,0,13,14],
[16,16,14,19,16,18,0,14],
[14,17,16,19,19,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,20,18,21,20,13],
[14,0,15,13,9,21,14,11],
[15,16,0,11,11,18,12,12],
[11,18,20,0,16,16,15,16],
[13,22,20,15,0,21,18,18],
[10,10,13,15,10,0,12,9],
[11,17,19,16,13,19,0,16],
[18,20,19,15,13,22,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,16,14,13,7,19,17],
[19,0,19,15,23,16,22,22],
[15,12,0,11,19,9,14,14],
[17,16,20,0,20,5,16,16],
[18,8,12,11,0,4,12,16],
[24,15,22,26,27,0,25,25],
[12,9,17,15,19,6,0,15],
[14,9,17,15,15,6,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,15,16,12,10,18,10],
[23,0,15,18,18,18,18,17],
[16,16,0,12,16,16,12,6],
[15,13,19,0,10,10,12,15],
[19,13,15,21,0,8,16,15],
[21,13,15,21,23,0,23,21],
[13,13,19,19,15,8,0,13],
[21,14,25,16,16,10,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,18,16,15,16,15],
[15,0,15,16,16,12,10,11],
[17,16,0,15,15,17,17,16],
[13,15,16,0,15,13,13,13],
[15,15,16,16,0,16,16,14],
[16,19,14,18,15,0,14,14],
[15,21,14,18,15,17,0,12],
[16,20,15,18,17,17,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,13,11,14,10,14,12],
[19,0,20,17,20,14,15,19],
[18,11,0,15,17,13,13,17],
[20,14,16,0,19,14,16,21],
[17,11,14,12,0,11,10,17],
[21,17,18,17,20,0,14,18],
[17,16,18,15,21,17,0,18],
[19,12,14,10,14,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,15,15,7,15,22],
[16,0,14,7,8,0,0,7],
[9,17,0,24,17,9,17,16],
[16,24,7,0,24,16,16,16],
[16,23,14,7,0,14,23,7],
[24,31,22,15,17,0,17,15],
[16,31,14,15,8,14,0,7],
[9,24,15,15,24,16,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,14,11,19,11,14,19],
[10,0,15,8,17,5,15,13],
[17,16,0,10,13,10,13,18],
[20,23,21,0,20,9,12,23],
[12,14,18,11,0,9,12,18],
[20,26,21,22,22,0,14,21],
[17,16,18,19,19,17,0,14],
[12,18,13,8,13,10,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,14,13,14,12,18],
[20,0,19,21,16,19,22,15],
[18,12,0,18,14,19,18,20],
[17,10,13,0,14,19,18,16],
[18,15,17,17,0,17,18,18],
[17,12,12,12,14,0,15,15],
[19,9,13,13,13,16,0,14],
[13,16,11,15,13,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,7,17,11,9,13,7],
[22,0,12,21,19,14,18,15],
[24,19,0,23,16,20,14,18],
[14,10,8,0,18,13,12,6],
[20,12,15,13,0,8,17,11],
[22,17,11,18,23,0,15,10],
[18,13,17,19,14,16,0,15],
[24,16,13,25,20,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,13,13,18,12,14],
[16,0,14,8,12,17,9,16],
[18,17,0,12,14,20,16,18],
[18,23,19,0,17,23,15,20],
[18,19,17,14,0,19,13,17],
[13,14,11,8,12,0,9,11],
[19,22,15,16,18,22,0,23],
[17,15,13,11,14,20,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,21,5,16,15,5],
[15,0,10,16,10,16,20,10],
[21,21,0,21,16,21,15,21],
[10,15,10,0,10,10,20,10],
[26,21,15,21,0,21,15,16],
[15,15,10,21,10,0,15,20],
[16,11,16,11,16,16,0,11],
[26,21,10,21,15,11,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,16,14,13,24,18],
[13,0,18,14,17,13,17,13],
[11,13,0,17,10,16,13,16],
[15,17,14,0,13,12,17,13],
[17,14,21,18,0,15,20,14],
[18,18,15,19,16,0,23,13],
[7,14,18,14,11,8,0,11],
[13,18,15,18,17,18,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,15,14,9,11,18],
[18,0,12,15,15,16,16,19],
[19,19,0,12,16,12,13,18],
[16,16,19,0,12,13,17,16],
[17,16,15,19,0,8,18,19],
[22,15,19,18,23,0,18,23],
[20,15,18,14,13,13,0,17],
[13,12,13,15,12,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,22,20,13,15,17],
[15,0,15,19,18,13,17,15],
[11,16,0,13,17,14,12,10],
[9,12,18,0,17,12,8,13],
[11,13,14,14,0,12,9,8],
[18,18,17,19,19,0,15,18],
[16,14,19,23,22,16,0,15],
[14,16,21,18,23,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,16,17,18,15,17],
[11,0,15,17,12,14,12,11],
[15,16,0,17,17,18,16,15],
[15,14,14,0,18,18,16,14],
[14,19,14,13,0,20,17,16],
[13,17,13,13,11,0,14,13],
[16,19,15,15,14,17,0,15],
[14,20,16,17,15,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,14,10,12,13,9],
[19,0,14,13,11,13,12,7],
[17,17,0,15,12,11,12,9],
[17,18,16,0,12,13,13,14],
[21,20,19,19,0,16,17,15],
[19,18,20,18,15,0,15,19],
[18,19,19,18,14,16,0,16],
[22,24,22,17,16,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,17,12,14,17,12,15],
[11,0,19,14,11,8,10,6],
[14,12,0,9,15,13,8,8],
[19,17,22,0,18,16,12,16],
[17,20,16,13,0,17,15,16],
[14,23,18,15,14,0,12,8],
[19,21,23,19,16,19,0,14],
[16,25,23,15,15,23,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,19,14,19,16,12,18],
[10,0,11,15,17,11,12,13],
[12,20,0,17,25,20,16,16],
[17,16,14,0,17,17,12,18],
[12,14,6,14,0,5,7,11],
[15,20,11,14,26,0,15,15],
[19,19,15,19,24,16,0,14],
[13,18,15,13,20,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,16,16,16,18,18,20],
[23,0,18,21,21,13,16,18],
[15,13,0,19,14,7,16,14],
[15,10,12,0,13,10,23,17],
[15,10,17,18,0,12,13,18],
[13,18,24,21,19,0,13,19],
[13,15,15,8,18,18,0,18],
[11,13,17,14,13,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,22,19,15,20,22,18],
[17,0,16,20,15,15,17,18],
[9,15,0,20,12,19,18,17],
[12,11,11,0,14,16,15,17],
[16,16,19,17,0,15,23,17],
[11,16,12,15,16,0,16,15],
[9,14,13,16,8,15,0,12],
[13,13,14,14,14,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,0,9,0,12,10,19],
[22,0,22,10,22,22,10,22],
[31,9,0,19,0,12,10,31],
[22,21,12,0,12,12,22,31],
[31,9,31,19,0,31,19,31],
[19,9,19,19,0,0,19,19],
[21,21,21,9,12,12,0,21],
[12,9,0,0,0,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,8,12,12,14,11,6],
[13,0,9,11,7,12,10,12],
[23,22,0,16,16,16,18,15],
[19,20,15,0,12,20,16,15],
[19,24,15,19,0,18,22,18],
[17,19,15,11,13,0,22,12],
[20,21,13,15,9,9,0,13],
[25,19,16,16,13,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,20,14,20,16,13],
[15,0,11,21,18,13,14,18],
[14,20,0,27,13,20,12,17],
[11,10,4,0,10,11,7,15],
[17,13,18,21,0,17,14,21],
[11,18,11,20,14,0,7,20],
[15,17,19,24,17,24,0,22],
[18,13,14,16,10,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,12,18,17,18,15],
[12,0,18,13,17,12,15,16],
[17,13,0,12,14,14,18,14],
[19,18,19,0,16,12,16,14],
[13,14,17,15,0,15,14,15],
[14,19,17,19,16,0,16,17],
[13,16,13,15,17,15,0,15],
[16,15,17,17,16,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,18,13,16,12,13,12],
[21,0,23,20,14,18,15,11],
[13,8,0,8,9,6,4,6],
[18,11,23,0,14,18,15,15],
[15,17,22,17,0,19,16,12],
[19,13,25,13,12,0,11,14],
[18,16,27,16,15,20,0,17],
[19,20,25,16,19,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,18,22,17,13,15],
[16,0,15,18,21,16,14,14],
[17,16,0,21,17,14,23,15],
[13,13,10,0,15,12,15,15],
[9,10,14,16,0,15,12,12],
[14,15,17,19,16,0,14,16],
[18,17,8,16,19,17,0,16],
[16,17,16,16,19,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,12,17,17,16,17,16],
[12,0,17,13,18,18,14,19],
[19,14,0,12,20,16,17,18],
[14,18,19,0,16,17,15,15],
[14,13,11,15,0,12,17,18],
[15,13,15,14,19,0,15,18],
[14,17,14,16,14,16,0,20],
[15,12,13,16,13,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,16,17,15,15,14],
[15,0,12,14,13,16,12,17],
[13,19,0,19,16,14,14,19],
[15,17,12,0,12,19,10,14],
[14,18,15,19,0,22,16,15],
[16,15,17,12,9,0,9,12],
[16,19,17,21,15,22,0,15],
[17,14,12,17,16,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,14,15,17,14,12],
[15,0,18,17,17,17,21,12],
[16,13,0,17,13,22,23,14],
[17,14,14,0,15,16,20,16],
[16,14,18,16,0,21,21,21],
[14,14,9,15,10,0,16,11],
[17,10,8,11,10,15,0,14],
[19,19,17,15,10,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,16,16,14,14,14,17],
[13,0,12,15,14,10,11,18],
[15,19,0,14,11,16,13,18],
[15,16,17,0,16,15,15,19],
[17,17,20,15,0,17,18,17],
[17,21,15,16,14,0,14,17],
[17,20,18,16,13,17,0,17],
[14,13,13,12,14,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,18,14,19,10,19,19],
[8,0,0,9,5,0,5,9],
[13,31,0,22,24,19,24,23],
[17,22,9,0,22,10,22,14],
[12,26,7,9,0,9,20,13],
[21,31,12,21,22,0,22,16],
[12,26,7,9,11,9,0,7],
[12,22,8,17,18,15,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,16,15,14,15,16],
[17,0,16,16,17,15,14,17],
[14,15,0,15,15,16,18,16],
[15,15,16,0,12,15,16,15],
[16,14,16,19,0,13,16,17],
[17,16,15,16,18,0,17,14],
[16,17,13,15,15,14,0,16],
[15,14,15,16,14,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,13,18,16,12,18,16],
[11,0,11,14,12,9,12,14],
[18,20,0,17,8,8,13,13],
[13,17,14,0,15,12,14,14],
[15,19,23,16,0,19,17,14],
[19,22,23,19,12,0,19,18],
[13,19,18,17,14,12,0,15],
[15,17,18,17,17,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,14,13,15,21,14],
[13,0,15,11,14,12,17,15],
[13,16,0,16,16,11,18,15],
[17,20,15,0,12,11,15,14],
[18,17,15,19,0,16,16,15],
[16,19,20,20,15,0,17,18],
[10,14,13,16,15,14,0,8],
[17,16,16,17,16,13,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,24,24,16,18,14],
[15,0,16,21,18,19,15,17],
[15,15,0,20,14,20,14,15],
[7,10,11,0,12,13,10,12],
[7,13,17,19,0,18,14,12],
[15,12,11,18,13,0,10,13],
[13,16,17,21,17,21,0,13],
[17,14,16,19,19,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,16,18,16,14,14],
[15,0,16,17,15,20,17,18],
[17,15,0,19,14,15,15,15],
[15,14,12,0,7,18,12,18],
[13,16,17,24,0,16,18,19],
[15,11,16,13,15,0,15,17],
[17,14,16,19,13,16,0,19],
[17,13,16,13,12,14,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,17,22,14,21,16,24],
[11,0,13,24,15,17,12,17],
[14,18,0,22,16,12,7,13],
[9,7,9,0,11,11,4,13],
[17,16,15,20,0,15,10,18],
[10,14,19,20,16,0,18,26],
[15,19,24,27,21,13,0,19],
[7,14,18,18,13,5,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,17,15,10,11,15],
[19,0,16,15,15,14,15,16],
[16,15,0,18,17,16,13,17],
[14,16,13,0,13,12,11,10],
[16,16,14,18,0,13,17,14],
[21,17,15,19,18,0,13,17],
[20,16,18,20,14,18,0,16],
[16,15,14,21,17,14,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,14,15,13,19,15],
[20,0,20,21,14,17,17,16],
[20,11,0,20,13,15,14,17],
[17,10,11,0,11,13,16,12],
[16,17,18,20,0,16,18,14],
[18,14,16,18,15,0,20,12],
[12,14,17,15,13,11,0,10],
[16,15,14,19,17,19,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,10,16,15,15,13,15],
[18,0,16,18,14,19,16,17],
[21,15,0,17,12,20,15,19],
[15,13,14,0,16,18,13,13],
[16,17,19,15,0,16,17,15],
[16,12,11,13,15,0,14,15],
[18,15,16,18,14,17,0,15],
[16,14,12,18,16,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,20,16,14,20,20,9],
[14,0,16,16,21,13,22,18],
[11,15,0,5,21,11,10,12],
[15,15,26,0,21,14,24,16],
[17,10,10,10,0,10,10,20],
[11,18,20,17,21,0,18,18],
[11,9,21,7,21,13,0,16],
[22,13,19,15,11,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,15,22,15,12,10],
[20,0,16,17,21,23,21,12],
[20,15,0,21,25,17,20,16],
[16,14,10,0,17,14,15,9],
[9,10,6,14,0,8,16,5],
[16,8,14,17,23,0,22,13],
[19,10,11,16,15,9,0,10],
[21,19,15,22,26,18,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,22,15,13,14,17],
[15,0,20,16,19,17,20,20],
[16,11,0,14,8,12,17,10],
[9,15,17,0,10,11,17,20],
[16,12,23,21,0,16,16,15],
[18,14,19,20,15,0,15,22],
[17,11,14,14,15,16,0,17],
[14,11,21,11,16,9,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,6,10,18,9,6],
[18,0,16,12,17,24,19,12],
[22,15,0,6,12,21,14,18],
[25,19,25,0,14,24,18,17],
[21,14,19,17,0,24,18,15],
[13,7,10,7,7,0,13,6],
[22,12,17,13,13,18,0,11],
[25,19,13,14,16,25,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,16,8,7,8,8,8],
[31,0,24,8,31,23,24,16],
[15,7,0,8,7,15,0,0],
[23,23,23,0,23,31,16,8],
[24,0,24,8,0,8,16,8],
[23,8,16,0,23,0,16,8],
[23,7,31,15,15,15,0,8],
[23,15,31,23,23,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,9,5,13,13,8,9],
[22,0,16,13,14,13,14,13],
[22,15,0,14,22,20,22,19],
[26,18,17,0,20,13,15,17],
[18,17,9,11,0,12,20,16],
[18,18,11,18,19,0,18,19],
[23,17,9,16,11,13,0,23],
[22,18,12,14,15,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,16,16,16,18,14],
[12,0,20,18,18,15,14,16],
[13,11,0,12,15,14,12,16],
[15,13,19,0,18,13,15,12],
[15,13,16,13,0,16,16,13],
[15,16,17,18,15,0,15,15],
[13,17,19,16,15,16,0,12],
[17,15,15,19,18,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,16,16,16,9,16],
[15,0,8,22,22,22,15,22],
[15,23,0,31,14,31,24,31],
[15,9,0,0,14,16,17,14],
[15,9,17,17,0,17,17,31],
[15,9,0,15,14,0,17,22],
[22,16,7,14,14,14,0,14],
[15,9,0,17,0,9,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,16,17,13,13,16],
[16,0,12,17,18,17,16,15],
[14,19,0,22,14,13,18,17],
[15,14,9,0,17,13,13,14],
[14,13,17,14,0,14,8,12],
[18,14,18,18,17,0,16,15],
[18,15,13,18,23,15,0,17],
[15,16,14,17,19,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,20,17,9,13,15,21],
[20,0,13,20,16,16,14,16],
[11,18,0,14,20,11,18,18],
[14,11,17,0,16,20,15,14],
[22,15,11,15,0,18,15,18],
[18,15,20,11,13,0,15,15],
[16,17,13,16,16,16,0,20],
[10,15,13,17,13,16,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,17,18,19,15,17,15],
[10,0,8,10,16,12,9,10],
[14,23,0,17,16,18,16,22],
[13,21,14,0,14,15,13,15],
[12,15,15,17,0,12,14,18],
[16,19,13,16,19,0,14,19],
[14,22,15,18,17,17,0,18],
[16,21,9,16,13,12,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,13,11,14,9,15,12],
[23,0,16,18,18,17,20,15],
[18,15,0,17,15,18,19,18],
[20,13,14,0,17,17,18,15],
[17,13,16,14,0,14,17,15],
[22,14,13,14,17,0,19,18],
[16,11,12,13,14,12,0,16],
[19,16,13,16,16,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,19,14,13,15,19],
[19,0,22,20,16,15,17,20],
[16,9,0,17,15,16,12,13],
[12,11,14,0,16,14,14,14],
[17,15,16,15,0,16,12,18],
[18,16,15,17,15,0,18,18],
[16,14,19,17,19,13,0,20],
[12,11,18,17,13,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,20,17,16,15,19],
[15,0,14,16,12,10,10,21],
[13,17,0,12,17,16,13,18],
[11,15,19,0,11,12,10,19],
[14,19,14,20,0,11,12,17],
[15,21,15,19,20,0,16,20],
[16,21,18,21,19,15,0,23],
[12,10,13,12,14,11,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,17,15,14,17,14],
[16,0,16,19,13,16,15,12],
[15,15,0,20,11,17,16,13],
[14,12,11,0,10,18,11,12],
[16,18,20,21,0,18,15,16],
[17,15,14,13,13,0,16,15],
[14,16,15,20,16,15,0,12],
[17,19,18,19,15,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,17,19,19,15,20],
[15,0,15,19,23,18,17,15],
[14,16,0,22,20,15,19,16],
[14,12,9,0,19,12,12,12],
[12,8,11,12,0,14,14,13],
[12,13,16,19,17,0,13,11],
[16,14,12,19,17,18,0,15],
[11,16,15,19,18,20,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,15,14,16,20,17],
[18,0,19,16,18,15,22,17],
[16,12,0,14,12,10,15,13],
[16,15,17,0,14,12,17,16],
[17,13,19,17,0,13,17,13],
[15,16,21,19,18,0,17,14],
[11,9,16,14,14,14,0,9],
[14,14,18,15,18,17,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,17,19,12,13,23],
[11,0,23,15,17,16,15,20],
[12,8,0,14,11,7,11,17],
[14,16,17,0,15,9,9,18],
[12,14,20,16,0,12,13,19],
[19,15,24,22,19,0,17,23],
[18,16,20,22,18,14,0,24],
[8,11,14,13,12,8,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,23,7,15,18,18,18],
[24,0,28,17,20,20,15,19],
[8,3,0,7,8,9,18,13],
[24,14,24,0,24,18,19,19],
[16,11,23,7,0,15,23,23],
[13,11,22,13,16,0,17,12],
[13,16,13,12,8,14,0,12],
[13,12,18,12,8,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,7,10,12,9,15,10],
[11,0,13,14,11,15,14,11],
[24,18,0,16,18,17,13,20],
[21,17,15,0,14,16,13,14],
[19,20,13,17,0,12,15,18],
[22,16,14,15,19,0,14,16],
[16,17,18,18,16,17,0,15],
[21,20,11,17,13,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,6,12,5,14,5,14],
[28,0,15,26,16,21,19,17],
[25,16,0,19,15,14,10,15],
[19,5,12,0,5,11,14,17],
[26,15,16,26,0,18,12,18],
[17,10,17,20,13,0,14,15],
[26,12,21,17,19,17,0,21],
[17,14,16,14,13,16,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,13,14,11,10,13],
[18,0,16,14,17,14,16,15],
[18,15,0,11,16,12,13,14],
[18,17,20,0,16,12,15,16],
[17,14,15,15,0,11,16,16],
[20,17,19,19,20,0,14,23],
[21,15,18,16,15,17,0,17],
[18,16,17,15,15,8,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,2,11,5,10,8,9],
[23,0,2,4,4,14,5,5],
[29,29,0,10,15,14,20,14],
[20,27,21,0,15,18,15,16],
[26,27,16,16,0,23,22,14],
[21,17,17,13,8,0,17,21],
[23,26,11,16,9,14,0,14],
[22,26,17,15,17,10,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,26,26,16,13,22],
[14,0,15,18,18,18,8,15],
[13,16,0,27,27,17,16,17],
[5,13,4,0,13,12,9,13],
[5,13,4,18,0,7,5,13],
[15,13,14,19,24,0,9,13],
[18,23,15,22,26,22,0,19],
[9,16,14,18,18,18,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,0,22,12,22,10,10],
[19,0,19,31,31,31,10,19],
[31,12,0,31,31,31,22,19],
[9,0,0,0,12,22,0,0],
[19,0,0,19,0,19,10,10],
[9,0,0,9,12,0,0,0],
[21,21,9,31,21,31,0,9],
[21,12,12,31,21,31,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,24,26,13,19,18],
[9,0,13,16,20,8,18,18],
[7,18,0,9,10,8,10,10],
[7,15,22,0,12,16,17,16],
[5,11,21,19,0,11,8,11],
[18,23,23,15,20,0,13,23],
[12,13,21,14,23,18,0,20],
[13,13,21,15,20,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,13,15,19,17,14],
[12,0,16,13,11,19,17,17],
[9,15,0,20,20,19,19,15],
[18,18,11,0,12,22,20,13],
[16,20,11,19,0,25,22,13],
[12,12,12,9,6,0,13,9],
[14,14,12,11,9,18,0,8],
[17,14,16,18,18,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,14,7,16,16,18],
[16,0,11,17,11,8,14,18],
[14,20,0,21,16,12,14,14],
[17,14,10,0,9,13,22,10],
[24,20,15,22,0,15,14,16],
[15,23,19,18,16,0,18,16],
[15,17,17,9,17,13,0,13],
[13,13,17,21,15,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,17,10,18,18,12,14],
[22,0,14,11,22,23,13,16],
[14,17,0,15,24,20,18,16],
[21,20,16,0,20,19,15,17],
[13,9,7,11,0,9,6,15],
[13,8,11,12,22,0,11,12],
[19,18,13,16,25,20,0,17],
[17,15,15,14,16,19,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,20,12,16,16,15,14],
[14,0,16,13,16,16,16,13],
[11,15,0,14,16,14,10,12],
[19,18,17,0,19,14,16,15],
[15,15,15,12,0,12,16,11],
[15,15,17,17,19,0,15,17],
[16,15,21,15,15,16,0,13],
[17,18,19,16,20,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,19,16,17,18,17],
[13,0,12,13,15,17,15,15],
[18,19,0,21,17,17,12,19],
[12,18,10,0,16,18,11,14],
[15,16,14,15,0,15,13,18],
[14,14,14,13,16,0,12,16],
[13,16,19,20,18,19,0,19],
[14,16,12,17,13,15,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,11,11,11,11,18],
[20,0,20,18,18,18,12,31],
[18,11,0,16,16,16,18,23],
[20,13,15,0,18,12,12,26],
[20,13,15,13,0,17,7,26],
[20,13,15,19,14,0,7,26],
[20,19,13,19,24,24,0,26],
[13,0,8,5,5,5,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,18,12,15,10,13],
[17,0,22,20,16,15,15,19],
[11,9,0,12,13,16,12,14],
[13,11,19,0,16,17,12,11],
[19,15,18,15,0,16,16,20],
[16,16,15,14,15,0,19,17],
[21,16,19,19,15,12,0,14],
[18,12,17,20,11,14,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,21,13,13,17,14,14],
[20,0,22,15,6,16,18,15],
[10,9,0,13,3,11,12,10],
[18,16,18,0,11,17,17,20],
[18,25,28,20,0,15,24,19],
[14,15,20,14,16,0,16,17],
[17,13,19,14,7,15,0,10],
[17,16,21,11,12,14,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,13,10,14,18,7],
[15,0,14,11,12,14,19,12],
[20,17,0,16,15,18,21,11],
[18,20,15,0,14,22,25,16],
[21,19,16,17,0,14,18,20],
[17,17,13,9,17,0,16,15],
[13,12,10,6,13,15,0,11],
[24,19,20,15,11,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,15,15,19,23,20],
[15,0,16,18,20,24,23,19],
[11,15,0,14,9,19,16,24],
[16,13,17,0,16,20,20,20],
[16,11,22,15,0,15,18,19],
[12,7,12,11,16,0,19,16],
[8,8,15,11,13,12,0,18],
[11,12,7,11,12,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,17,19,15,18,10],
[12,0,14,16,16,16,12,13],
[10,17,0,19,17,14,16,12],
[14,15,12,0,20,11,16,13],
[12,15,14,11,0,9,9,6],
[16,15,17,20,22,0,19,18],
[13,19,15,15,22,12,0,17],
[21,18,19,18,25,13,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,20,21,15,18,21],
[14,0,20,20,25,24,22,18],
[15,11,0,19,21,22,19,21],
[11,11,12,0,20,14,14,13],
[10,6,10,11,0,15,10,11],
[16,7,9,17,16,0,16,15],
[13,9,12,17,21,15,0,12],
[10,13,10,18,20,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,15,11,10,16,13,11],
[21,0,17,19,11,12,19,18],
[16,14,0,14,17,20,11,11],
[20,12,17,0,9,12,14,8],
[21,20,14,22,0,16,25,15],
[15,19,11,19,15,0,19,18],
[18,12,20,17,6,12,0,6],
[20,13,20,23,16,13,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,16,10,15,13,20],
[17,0,12,8,6,8,11,11],
[17,19,0,15,12,15,18,19],
[15,23,16,0,17,18,12,12],
[21,25,19,14,0,24,17,19],
[16,23,16,13,7,0,10,21],
[18,20,13,19,14,21,0,21],
[11,20,12,19,12,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,12,17,14,24,12],
[15,0,13,14,19,18,21,18],
[21,18,0,11,23,15,22,11],
[19,17,20,0,22,12,16,18],
[14,12,8,9,0,12,14,9],
[17,13,16,19,19,0,20,14],
[7,10,9,15,17,11,0,8],
[19,13,20,13,22,17,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,15,18,14,19,19,15],
[12,0,9,17,11,20,10,10],
[16,22,0,16,15,18,23,16],
[13,14,15,0,14,21,12,13],
[17,20,16,17,0,24,14,15],
[12,11,13,10,7,0,12,8],
[12,21,8,19,17,19,0,11],
[16,21,15,18,16,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,23,15,16,12,15,11],
[22,0,22,15,14,12,17,18],
[8,9,0,15,11,10,17,13],
[16,16,16,0,14,15,15,16],
[15,17,20,17,0,16,19,15],
[19,19,21,16,15,0,20,17],
[16,14,14,16,12,11,0,17],
[20,13,18,15,16,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,14,8,13,11,13,13],
[25,0,20,16,24,19,20,12],
[17,11,0,11,14,17,17,16],
[23,15,20,0,18,17,16,17],
[18,7,17,13,0,18,17,14],
[20,12,14,14,13,0,15,12],
[18,11,14,15,14,16,0,15],
[18,19,15,14,17,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,15,17,19,15,17],
[15,0,12,12,19,15,13,10],
[19,19,0,17,21,16,16,15],
[16,19,14,0,15,20,13,16],
[14,12,10,16,0,15,12,10],
[12,16,15,11,16,0,18,13],
[16,18,15,18,19,13,0,15],
[14,21,16,15,21,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,14,17,17,15,15],
[15,0,15,13,17,16,16,14],
[19,16,0,14,21,16,19,17],
[17,18,17,0,20,19,19,15],
[14,14,10,11,0,15,13,12],
[14,15,15,12,16,0,14,14],
[16,15,12,12,18,17,0,13],
[16,17,14,16,19,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,13,13,14,11,11,14],
[13,0,10,10,19,10,7,10],
[18,21,0,5,15,14,17,12],
[18,21,26,0,19,12,17,19],
[17,12,16,12,0,7,13,10],
[20,21,17,19,24,0,14,12],
[20,24,14,14,18,17,0,21],
[17,21,19,12,21,19,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,22,22,15,22,22,22],
[7,0,13,16,7,7,16,7],
[9,18,0,18,18,18,9,16],
[9,15,13,0,9,0,16,16],
[16,24,13,22,0,16,16,16],
[9,24,13,31,15,0,22,16],
[9,15,22,15,15,9,0,16],
[9,24,15,15,15,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,15,12,15,14,21],
[16,0,13,10,14,15,14,18],
[20,18,0,15,17,19,17,24],
[16,21,16,0,17,18,15,23],
[19,17,14,14,0,17,16,23],
[16,16,12,13,14,0,13,16],
[17,17,14,16,15,18,0,20],
[10,13,7,8,8,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,20,10,9,12,17],
[17,0,15,24,13,12,17,14],
[13,16,0,20,14,14,15,15],
[11,7,11,0,3,5,9,7],
[21,18,17,28,0,16,15,19],
[22,19,17,26,15,0,18,20],
[19,14,16,22,16,13,0,19],
[14,17,16,24,12,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,20,16,22,12,16,16],
[12,0,16,20,18,18,13,10],
[11,15,0,17,16,14,11,13],
[15,11,14,0,18,16,15,12],
[9,13,15,13,0,14,11,9],
[19,13,17,15,17,0,12,15],
[15,18,20,16,20,19,0,13],
[15,21,18,19,22,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,11,15,14,14,11,12],
[16,0,13,18,20,16,17,14],
[20,18,0,15,22,18,16,21],
[16,13,16,0,17,16,12,22],
[17,11,9,14,0,16,10,15],
[17,15,13,15,15,0,11,18],
[20,14,15,19,21,20,0,16],
[19,17,10,9,16,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,16,15,17,19,18,14],
[15,0,17,16,25,17,18,18],
[15,14,0,20,23,19,21,13],
[16,15,11,0,23,20,19,17],
[14,6,8,8,0,13,8,12],
[12,14,12,11,18,0,13,11],
[13,13,10,12,23,18,0,8],
[17,13,18,14,19,20,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,17,16,14,19,16],
[19,0,13,15,15,16,15,8],
[16,18,0,15,17,16,16,16],
[14,16,16,0,14,16,13,12],
[15,16,14,17,0,17,17,14],
[17,15,15,15,14,0,18,14],
[12,16,15,18,14,13,0,12],
[15,23,15,19,17,17,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,16,23,18,19,15,15],
[12,0,14,18,19,11,10,16],
[15,17,0,17,20,18,12,16],
[8,13,14,0,12,10,13,14],
[13,12,11,19,0,14,9,13],
[12,20,13,21,17,0,12,13],
[16,21,19,18,22,19,0,15],
[16,15,15,17,18,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,15,11,11,17,20,17],
[19,0,15,20,17,21,17,15],
[16,16,0,19,14,18,13,14],
[20,11,12,0,12,17,20,17],
[20,14,17,19,0,24,21,18],
[14,10,13,14,7,0,17,16],
[11,14,18,11,10,14,0,16],
[14,16,17,14,13,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,14,18,22,15,19],
[10,0,19,17,17,17,13,18],
[10,12,0,8,12,14,9,13],
[17,14,23,0,15,21,17,15],
[13,14,19,16,0,17,16,14],
[9,14,17,10,14,0,10,13],
[16,18,22,14,15,21,0,18],
[12,13,18,16,17,18,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,13,15,12,12,16,15],
[20,0,14,16,20,17,16,17],
[18,17,0,14,17,15,19,17],
[16,15,17,0,17,16,16,14],
[19,11,14,14,0,17,19,14],
[19,14,16,15,14,0,20,16],
[15,15,12,15,12,11,0,14],
[16,14,14,17,17,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,21,18,18,18,19],
[16,0,21,20,23,14,26,25],
[15,10,0,16,16,14,13,20],
[10,11,15,0,16,14,16,13],
[13,8,15,15,0,14,19,17],
[13,17,17,17,17,0,18,20],
[13,5,18,15,12,13,0,19],
[12,6,11,18,14,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,15,19,25,12,19,19],
[13,0,14,15,26,12,15,13],
[16,17,0,14,25,17,18,16],
[12,16,17,0,24,17,18,23],
[6,5,6,7,0,9,13,6],
[19,19,14,14,22,0,23,14],
[12,16,13,13,18,8,0,10],
[12,18,15,8,25,17,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,14,19,18,18,17],
[14,0,17,14,22,11,15,14],
[17,14,0,15,17,19,19,17],
[17,17,16,0,18,15,18,19],
[12,9,14,13,0,11,13,7],
[13,20,12,16,20,0,17,13],
[13,16,12,13,18,14,0,14],
[14,17,14,12,24,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,13,15,15,14,16,21],
[9,0,12,14,13,14,11,18],
[18,19,0,18,15,20,12,20],
[16,17,13,0,16,14,16,16],
[16,18,16,15,0,16,16,20],
[17,17,11,17,15,0,16,20],
[15,20,19,15,15,15,0,20],
[10,13,11,15,11,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,14,11,16,14,22,20],
[11,0,11,10,9,12,12,12],
[17,20,0,12,17,19,16,16],
[20,21,19,0,20,19,19,15],
[15,22,14,11,0,21,23,14],
[17,19,12,12,10,0,14,11],
[9,19,15,12,8,17,0,10],
[11,19,15,16,17,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,13,19,19,22,14,16],
[9,0,19,18,21,19,12,19],
[18,12,0,19,16,14,17,16],
[12,13,12,0,19,13,13,19],
[12,10,15,12,0,10,13,20],
[9,12,17,18,21,0,10,19],
[17,19,14,18,18,21,0,19],
[15,12,15,12,11,12,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,24,21,12,19,19],
[5,0,5,5,7,5,7,5],
[5,26,0,12,14,12,7,5],
[7,26,19,0,21,7,19,19],
[10,24,17,10,0,17,19,10],
[19,26,19,24,14,0,19,24],
[12,24,24,12,12,12,0,5],
[12,26,26,12,21,7,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,0,22,20,20,11],
[20,0,20,20,31,20,9,20],
[20,11,0,0,22,9,9,20],
[31,11,31,0,22,31,20,31],
[9,0,9,9,0,9,9,20],
[11,11,22,0,22,0,0,11],
[11,22,22,11,22,31,0,11],
[20,11,11,0,11,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,12,4,18,18,13,13],
[27,0,23,8,18,18,19,18],
[19,8,0,3,17,18,15,14],
[27,23,28,0,17,18,15,24],
[13,13,14,14,0,18,15,19],
[13,13,13,13,13,0,13,17],
[18,12,16,16,16,18,0,17],
[18,13,17,7,12,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,20,23,17,29,15,20],
[18,0,13,19,17,21,14,24],
[11,18,0,13,18,22,13,16],
[8,12,18,0,17,18,13,23],
[14,14,13,14,0,20,19,22],
[2,10,9,13,11,0,8,15],
[16,17,18,18,12,23,0,18],
[11,7,15,8,9,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,19,17,16,16,16],
[13,0,21,21,15,18,21,16],
[17,10,0,14,18,13,15,17],
[12,10,17,0,20,13,12,14],
[14,16,13,11,0,9,11,13],
[15,13,18,18,22,0,18,15],
[15,10,16,19,20,13,0,17],
[15,15,14,17,18,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,18,18,17,13,19,26],
[10,0,14,18,18,12,17,21],
[13,17,0,17,20,15,16,18],
[13,13,14,0,16,16,15,22],
[14,13,11,15,0,10,16,20],
[18,19,16,15,21,0,18,26],
[12,14,15,16,15,13,0,15],
[5,10,13,9,11,5,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,16,11,10,9,9,12],
[27,0,23,18,20,15,17,21],
[15,8,0,16,13,15,16,11],
[20,13,15,0,17,17,17,15],
[21,11,18,14,0,8,9,16],
[22,16,16,14,23,0,22,19],
[22,14,15,14,22,9,0,17],
[19,10,20,16,15,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,22,20,19,18,16],
[12,0,14,13,13,14,6,9],
[17,17,0,22,17,14,11,9],
[9,18,9,0,17,12,13,9],
[11,18,14,14,0,16,11,11],
[12,17,17,19,15,0,12,12],
[13,25,20,18,20,19,0,17],
[15,22,22,22,20,19,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,21,14,19,16,15],
[14,0,17,15,13,17,16,18],
[13,14,0,15,19,10,14,16],
[10,16,16,0,13,12,15,16],
[17,18,12,18,0,13,13,12],
[12,14,21,19,18,0,13,19],
[15,15,17,16,18,18,0,17],
[16,13,15,15,19,12,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,14,10,20,22,22,25],
[21,0,20,20,15,17,17,15],
[17,11,0,17,11,17,17,17],
[21,11,14,0,15,17,17,21],
[11,16,20,16,0,11,17,22],
[9,14,14,14,20,0,20,20],
[9,14,14,14,14,11,0,14],
[6,16,14,10,9,11,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,11,10,11,15,13],
[19,0,12,8,16,12,13,12],
[22,19,0,10,14,9,16,13],
[20,23,21,0,17,15,18,19],
[21,15,17,14,0,18,17,15],
[20,19,22,16,13,0,18,14],
[16,18,15,13,14,13,0,12],
[18,19,18,12,16,17,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,14,22,13,19,18,21],
[10,0,14,16,9,16,15,15],
[17,17,0,18,18,12,22,21],
[9,15,13,0,9,11,11,20],
[18,22,13,22,0,13,18,16],
[12,15,19,20,18,0,19,20],
[13,16,9,20,13,12,0,22],
[10,16,10,11,15,11,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,12,8,16,14,15],
[14,0,11,9,16,19,17,15],
[15,20,0,18,16,19,20,19],
[19,22,13,0,16,18,18,16],
[23,15,15,15,0,16,20,20],
[15,12,12,13,15,0,18,15],
[17,14,11,13,11,13,0,17],
[16,16,12,15,11,16,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,15,15,19,18,16],
[18,0,14,16,13,18,16,14],
[18,17,0,12,17,17,19,14],
[16,15,19,0,17,16,17,19],
[16,18,14,14,0,18,18,14],
[12,13,14,15,13,0,14,15],
[13,15,12,14,13,17,0,14],
[15,17,17,12,17,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,23,14,16,16,15,15],
[16,0,20,18,13,13,18,13],
[8,11,0,14,8,10,12,11],
[17,13,17,0,13,15,14,16],
[15,18,23,18,0,19,20,16],
[15,18,21,16,12,0,16,15],
[16,13,19,17,11,15,0,16],
[16,18,20,15,15,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,17,12,9,12,16],
[14,0,16,13,10,7,11,13],
[17,15,0,21,14,8,19,14],
[14,18,10,0,15,10,14,13],
[19,21,17,16,0,19,22,15],
[22,24,23,21,12,0,18,14],
[19,20,12,17,9,13,0,14],
[15,18,17,18,16,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,16,17,11,19,19],
[17,0,12,21,16,8,16,17],
[20,19,0,19,13,18,17,21],
[15,10,12,0,11,7,13,13],
[14,15,18,20,0,15,16,19],
[20,23,13,24,16,0,21,29],
[12,15,14,18,15,10,0,18],
[12,14,10,18,12,2,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,21,15,19,20,19,18],
[14,0,17,12,9,14,17,12],
[10,14,0,14,13,10,15,15],
[16,19,17,0,17,13,18,13],
[12,22,18,14,0,9,14,11],
[11,17,21,18,22,0,19,19],
[12,14,16,13,17,12,0,10],
[13,19,16,18,20,12,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,13,17,17,17,15],
[11,0,12,10,12,11,13,12],
[11,19,0,10,14,11,10,15],
[18,21,21,0,12,14,16,16],
[14,19,17,19,0,14,14,14],
[14,20,20,17,17,0,16,20],
[14,18,21,15,17,15,0,14],
[16,19,16,15,17,11,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,14,15,15,18,17,19],
[14,0,17,15,17,17,15,20],
[17,14,0,15,15,18,18,18],
[16,16,16,0,13,18,17,20],
[16,14,16,18,0,20,18,21],
[13,14,13,13,11,0,14,16],
[14,16,13,14,13,17,0,14],
[12,11,13,11,10,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,9,14,14,12,12,11],
[18,0,9,16,14,11,16,12],
[22,22,0,24,13,16,24,22],
[17,15,7,0,13,17,20,13],
[17,17,18,18,0,14,19,18],
[19,20,15,14,17,0,21,18],
[19,15,7,11,12,10,0,12],
[20,19,9,18,13,13,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,19,14,17,18,17],
[14,0,16,21,13,15,18,13],
[13,15,0,14,16,13,15,15],
[12,10,17,0,15,13,17,15],
[17,18,15,16,0,16,15,22],
[14,16,18,18,15,0,16,19],
[13,13,16,14,16,15,0,15],
[14,18,16,16,9,12,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,17,17,19,17,16,13],
[18,0,19,16,20,17,15,16],
[14,12,0,15,15,16,18,10],
[14,15,16,0,19,17,19,16],
[12,11,16,12,0,12,16,13],
[14,14,15,14,19,0,19,14],
[15,16,13,12,15,12,0,14],
[18,15,21,15,18,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,26,17,18,17,22],
[14,0,9,21,14,14,19,19],
[19,22,0,17,14,22,22,17],
[5,10,14,0,10,15,15,15],
[14,17,17,21,0,13,17,8],
[13,17,9,16,18,0,18,17],
[14,12,9,16,14,13,0,13],
[9,12,14,16,23,14,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,22,23,19,21,19,15],
[15,0,15,16,12,18,14,6],
[9,16,0,16,17,15,16,16],
[8,15,15,0,7,14,7,8],
[12,19,14,24,0,21,20,10],
[10,13,16,17,10,0,9,9],
[12,17,15,24,11,22,0,8],
[16,25,15,23,21,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,22,17,11,17,11],
[15,0,11,20,17,17,15,17],
[20,20,0,21,26,11,20,11],
[9,11,10,0,22,11,20,11],
[14,14,5,9,0,11,14,11],
[20,14,20,20,20,0,20,14],
[14,16,11,11,17,11,0,11],
[20,14,20,20,20,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,7,16,7,12,4],
[10,0,10,12,15,5,9,5],
[8,21,0,12,16,8,17,12],
[24,19,19,0,19,19,24,14],
[15,16,15,12,0,5,12,9],
[24,26,23,12,26,0,22,19],
[19,22,14,7,19,9,0,14],
[27,26,19,17,22,12,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,15,14,18,22,18],
[9,0,16,17,16,16,16,16],
[9,15,0,13,5,9,5,9],
[16,14,18,0,18,18,18,18],
[17,15,26,13,0,31,31,31],
[13,15,22,13,0,0,15,19],
[9,15,26,13,0,16,0,16],
[13,15,22,13,0,12,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,13,20,16,16,20,15],
[22,0,20,19,20,15,22,18],
[18,11,0,19,16,14,19,15],
[11,12,12,0,14,17,16,15],
[15,11,15,17,0,20,20,18],
[15,16,17,14,11,0,21,20],
[11,9,12,15,11,10,0,21],
[16,13,16,16,13,11,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,16,21,18,22,16,13],
[10,0,13,13,6,15,8,11],
[15,18,0,22,13,17,15,13],
[10,18,9,0,10,17,14,13],
[13,25,18,21,0,17,15,11],
[9,16,14,14,14,0,16,11],
[15,23,16,17,16,15,0,16],
[18,20,18,18,20,20,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,19,17,18,12,15,12],
[18,0,16,16,18,16,16,15],
[12,15,0,17,15,14,12,14],
[14,15,14,0,14,13,12,15],
[13,13,16,17,0,14,14,10],
[19,15,17,18,17,0,17,14],
[16,15,19,19,17,14,0,16],
[19,16,17,16,21,17,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,15,20,13,13,15,12],
[14,0,14,15,11,16,19,13],
[16,17,0,17,17,12,18,17],
[11,16,14,0,9,18,13,13],
[18,20,14,22,0,13,16,14],
[18,15,19,13,18,0,17,14],
[16,12,13,18,15,14,0,14],
[19,18,14,18,17,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,18,20,14,23,16],
[16,0,11,18,17,17,22,14],
[18,20,0,23,15,17,23,16],
[13,13,8,0,12,13,19,9],
[11,14,16,19,0,13,19,18],
[17,14,14,18,18,0,18,15],
[8,9,8,12,12,13,0,13],
[15,17,15,22,13,16,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,14,19,19,14,19],
[13,0,10,11,13,6,13,14],
[14,21,0,16,23,18,14,17],
[17,20,15,0,16,15,10,13],
[12,18,8,15,0,8,17,14],
[12,25,13,16,23,0,15,22],
[17,18,17,21,14,16,0,19],
[12,17,14,18,17,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,14,10,14,11,9],
[18,0,15,12,20,15,20,14],
[18,16,0,17,16,18,14,16],
[17,19,14,0,15,22,19,11],
[21,11,15,16,0,15,20,12],
[17,16,13,9,16,0,18,10],
[20,11,17,12,11,13,0,12],
[22,17,15,20,19,21,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,15,15,13,17,14],
[19,0,17,16,17,16,19,14],
[14,14,0,13,13,17,16,16],
[16,15,18,0,12,14,20,15],
[16,14,18,19,0,13,17,14],
[18,15,14,17,18,0,18,14],
[14,12,15,11,14,13,0,14],
[17,17,15,16,17,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,11,17,18,14,13,10],
[23,0,17,24,17,17,13,17],
[20,14,0,17,20,16,13,13],
[14,7,14,0,21,14,6,11],
[13,14,11,10,0,13,13,17],
[17,14,15,17,18,0,16,14],
[18,18,18,25,18,15,0,11],
[21,14,18,20,14,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,13,22,10,16,16],
[19,0,17,13,19,13,20,19],
[21,14,0,19,28,15,19,25],
[18,18,12,0,16,14,21,14],
[9,12,3,15,0,11,12,14],
[21,18,16,17,20,0,23,13],
[15,11,12,10,19,8,0,12],
[15,12,6,17,17,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,15,12,17,16,11],
[17,0,18,17,14,18,15,18],
[11,13,0,16,14,9,10,9],
[16,14,15,0,9,9,15,8],
[19,17,17,22,0,18,17,14],
[14,13,22,22,13,0,14,15],
[15,16,21,16,14,17,0,14],
[20,13,22,23,17,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,15,14,17,21,17,15],
[12,0,15,18,15,20,12,16],
[16,16,0,13,14,17,14,17],
[17,13,18,0,11,23,15,16],
[14,16,17,20,0,26,23,22],
[10,11,14,8,5,0,18,17],
[14,19,17,16,8,13,0,21],
[16,15,14,15,9,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,22,13,14,16,15,16],
[14,0,18,17,12,12,15,8],
[9,13,0,8,10,12,12,9],
[18,14,23,0,17,14,16,15],
[17,19,21,14,0,14,12,15],
[15,19,19,17,17,0,16,10],
[16,16,19,15,19,15,0,16],
[15,23,22,16,16,21,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,14,13,12,16,12],
[16,0,16,19,22,15,20,13],
[16,15,0,18,15,16,18,16],
[17,12,13,0,11,14,17,14],
[18,9,16,20,0,16,17,13],
[19,16,15,17,15,0,18,19],
[15,11,13,14,14,13,0,11],
[19,18,15,17,18,12,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,13,17,20,26,16,23],
[9,0,10,13,16,19,8,14],
[18,21,0,16,19,20,12,25],
[14,18,15,0,17,16,16,22],
[11,15,12,14,0,16,13,12],
[5,12,11,15,15,0,8,15],
[15,23,19,15,18,23,0,21],
[8,17,6,9,19,16,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,22,25,21,18,25],
[13,0,18,19,22,18,9,18],
[19,13,0,28,22,21,18,22],
[9,12,3,0,7,7,8,7],
[6,9,9,24,0,3,4,9],
[10,13,10,24,28,0,13,28],
[13,22,13,23,27,18,0,27],
[6,13,9,24,22,3,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,11,22,11,14,15,11],
[20,0,16,27,12,12,19,19],
[20,15,0,27,7,11,23,14],
[9,4,4,0,0,3,9,0],
[20,19,24,31,0,18,16,15],
[17,19,20,28,13,0,24,20],
[16,12,8,22,15,7,0,15],
[20,12,17,31,16,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,10,19,22,18,11,18],
[15,0,8,18,12,18,6,24],
[21,23,0,24,22,15,23,20],
[12,13,7,0,15,17,5,19],
[9,19,9,16,0,17,17,20],
[13,13,16,14,14,0,13,26],
[20,25,8,26,14,18,0,20],
[13,7,11,12,11,5,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,23,14,17,23,18,19],
[16,0,20,15,18,18,25,21],
[8,11,0,11,10,9,18,13],
[17,16,20,0,15,14,18,18],
[14,13,21,16,0,16,21,14],
[8,13,22,17,15,0,21,15],
[13,6,13,13,10,10,0,11],
[12,10,18,13,17,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,15,16,16,15,14,12],
[17,0,11,15,10,14,11,10],
[16,20,0,18,12,19,17,13],
[15,16,13,0,13,17,13,8],
[15,21,19,18,0,16,20,18],
[16,17,12,14,15,0,16,13],
[17,20,14,18,11,15,0,13],
[19,21,18,23,13,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,16,19,18,18,18],
[16,0,15,14,18,16,12,16],
[17,16,0,15,17,16,14,21],
[15,17,16,0,19,19,16,16],
[12,13,14,12,0,20,12,13],
[13,15,15,12,11,0,13,14],
[13,19,17,15,19,18,0,19],
[13,15,10,15,18,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,16,17,13,16,13,13],
[16,0,10,13,9,11,15,12],
[15,21,0,18,15,16,15,16],
[14,18,13,0,17,12,15,14],
[18,22,16,14,0,15,18,13],
[15,20,15,19,16,0,18,15],
[18,16,16,16,13,13,0,12],
[18,19,15,17,18,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,11,15,16,21,25,11],
[25,0,9,21,19,25,25,15],
[20,22,0,31,14,20,31,26],
[16,10,0,0,10,16,21,16],
[15,12,17,21,0,15,21,17],
[10,6,11,15,16,0,15,11],
[6,6,0,10,10,16,0,5],
[20,16,5,15,14,20,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,15,18,12,15,18],
[13,0,15,12,5,3,13,16],
[11,16,0,17,16,10,11,14],
[16,19,14,0,16,17,16,15],
[13,26,15,15,0,15,15,15],
[19,28,21,14,16,0,18,19],
[16,18,20,15,16,13,0,13],
[13,15,17,16,16,12,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,12,18,21,12,15,15],
[9,0,16,8,18,11,16,9],
[19,15,0,13,18,11,11,20],
[13,23,18,0,24,19,15,21],
[10,13,13,7,0,17,13,10],
[19,20,20,12,14,0,18,16],
[16,15,20,16,18,13,0,18],
[16,22,11,10,21,15,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,18,16,16,21,15,24],
[10,0,15,11,13,13,17,14],
[13,16,0,10,14,16,14,13],
[15,20,21,0,21,19,21,18],
[15,18,17,10,0,17,13,16],
[10,18,15,12,14,0,14,13],
[16,14,17,10,18,17,0,21],
[7,17,18,13,15,18,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,12,14,10,10,11],
[18,0,17,17,17,16,13,15],
[16,14,0,11,16,11,10,14],
[19,14,20,0,16,13,17,17],
[17,14,15,15,0,16,12,15],
[21,15,20,18,15,0,19,19],
[21,18,21,14,19,12,0,21],
[20,16,17,14,16,12,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,15,5,19,16,18,18],
[15,0,21,13,18,20,21,25],
[16,10,0,17,22,12,14,16],
[26,18,14,0,23,17,20,17],
[12,13,9,8,0,13,15,14],
[15,11,19,14,18,0,17,16],
[13,10,17,11,16,14,0,20],
[13,6,15,14,17,15,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,16,17,14,19,21,15],
[12,0,13,15,17,11,16,13],
[15,18,0,17,20,18,20,21],
[14,16,14,0,16,16,21,15],
[17,14,11,15,0,12,18,12],
[12,20,13,15,19,0,19,19],
[10,15,11,10,13,12,0,4],
[16,18,10,16,19,12,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,11,16,11,13,15,12],
[12,0,5,11,12,12,12,11],
[20,26,0,20,15,20,20,17],
[15,20,11,0,17,13,12,13],
[20,19,16,14,0,15,18,16],
[18,19,11,18,16,0,17,13],
[16,19,11,19,13,14,0,15],
[19,20,14,18,15,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,15,22,16,11,8,12],
[16,0,15,16,13,12,9,14],
[16,16,0,15,15,9,12,14],
[9,15,16,0,17,9,11,9],
[15,18,16,14,0,9,11,12],
[20,19,22,22,22,0,14,17],
[23,22,19,20,20,17,0,15],
[19,17,17,22,19,14,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,16,17,23,16,16],
[15,0,13,15,14,21,16,21],
[17,18,0,15,17,23,16,19],
[15,16,16,0,15,21,16,17],
[14,17,14,16,0,19,15,16],
[8,10,8,10,12,0,13,12],
[15,15,15,15,16,18,0,14],
[15,10,12,14,15,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,20,21,20,15,14,21],
[14,0,15,19,13,14,14,17],
[11,16,0,16,13,13,18,17],
[10,12,15,0,14,14,12,16],
[11,18,18,17,0,15,16,19],
[16,17,18,17,16,0,15,18],
[17,17,13,19,15,16,0,19],
[10,14,14,15,12,13,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,7,14,13,19,10,11],
[20,0,11,18,14,20,14,19],
[24,20,0,23,14,28,15,16],
[17,13,8,0,15,15,8,12],
[18,17,17,16,0,28,13,20],
[12,11,3,16,3,0,8,11],
[21,17,16,23,18,23,0,15],
[20,12,15,19,11,20,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,8,11,10,4,9,9],
[28,0,25,18,25,14,24,18],
[23,6,0,10,20,10,15,9],
[20,13,21,0,17,14,16,13],
[21,6,11,14,0,11,12,12],
[27,17,21,17,20,0,20,10],
[22,7,16,15,19,11,0,11],
[22,13,22,18,19,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,24,17,17,16,17],
[18,0,15,15,15,17,15,15],
[19,16,0,16,9,17,23,20],
[7,16,15,0,16,24,20,20],
[14,16,22,15,0,17,23,24],
[14,14,14,7,14,0,23,18],
[15,16,8,11,8,8,0,12],
[14,16,11,11,7,13,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,11,17,18,12,21,17],
[26,0,15,25,22,18,21,18],
[20,16,0,20,17,13,20,19],
[14,6,11,0,12,11,12,14],
[13,9,14,19,0,14,14,15],
[19,13,18,20,17,0,21,17],
[10,10,11,19,17,10,0,10],
[14,13,12,17,16,14,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,19,15,16,13,15],
[20,0,14,15,17,15,14,20],
[17,17,0,17,13,18,16,18],
[12,16,14,0,14,13,14,14],
[16,14,18,17,0,15,15,18],
[15,16,13,18,16,0,13,16],
[18,17,15,17,16,18,0,16],
[16,11,13,17,13,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,18,12,12,13,15],
[17,0,22,22,17,19,14,15],
[14,9,0,15,7,8,10,9],
[13,9,16,0,10,8,11,10],
[19,14,24,21,0,13,17,16],
[19,12,23,23,18,0,16,15],
[18,17,21,20,14,15,0,10],
[16,16,22,21,15,16,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,0,20,20,20,0,10],
[21,0,11,21,21,21,11,11],
[31,20,0,20,31,20,11,21],
[11,10,11,0,21,20,11,21],
[11,10,0,10,0,10,0,10],
[11,10,11,11,21,0,11,21],
[31,20,20,20,31,20,0,10],
[21,20,10,10,21,10,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,20,16,18,22,13],
[15,0,15,22,11,16,20,19],
[11,16,0,10,14,15,14,13],
[11,9,21,0,11,16,17,15],
[15,20,17,20,0,15,19,15],
[13,15,16,15,16,0,20,16],
[9,11,17,14,12,11,0,13],
[18,12,18,16,16,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,9,10,15,14,16,15],
[19,0,16,15,17,13,18,19],
[22,15,0,12,16,12,16,20],
[21,16,19,0,16,15,21,17],
[16,14,15,15,0,15,19,17],
[17,18,19,16,16,0,15,20],
[15,13,15,10,12,16,0,18],
[16,12,11,14,14,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,15,15,15,12,19,18],
[11,0,19,13,13,17,21,17],
[16,12,0,15,16,16,17,16],
[16,18,16,0,13,16,20,15],
[16,18,15,18,0,16,19,16],
[19,14,15,15,15,0,15,20],
[12,10,14,11,12,16,0,16],
[13,14,15,16,15,11,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,12,9,18,22,21,17],
[16,0,15,13,15,14,14,12],
[19,16,0,16,17,18,15,15],
[22,18,15,0,23,25,22,18],
[13,16,14,8,0,18,19,12],
[9,17,13,6,13,0,18,11],
[10,17,16,9,12,13,0,15],
[14,19,16,13,19,20,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,11,18,23,20,20,12],
[13,0,19,19,23,24,12,12],
[20,12,0,23,24,27,14,17],
[13,12,8,0,21,22,11,10],
[8,8,7,10,0,16,12,10],
[11,7,4,9,15,0,7,11],
[11,19,17,20,19,24,0,14],
[19,19,14,21,21,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,16,14,18,18,15,17],
[17,0,15,19,17,17,17,18],
[15,16,0,19,16,16,16,13],
[17,12,12,0,12,16,13,15],
[13,14,15,19,0,14,15,14],
[13,14,15,15,17,0,14,20],
[16,14,15,18,16,17,0,13],
[14,13,18,16,17,11,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,12,21,21,19,26,22],
[6,0,10,7,12,15,28,16],
[19,21,0,18,14,16,24,22],
[10,24,13,0,17,13,26,22],
[10,19,17,14,0,11,23,21],
[12,16,15,18,20,0,19,25],
[5,3,7,5,8,12,0,16],
[9,15,9,9,10,6,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,22,12,10,9,11,10],
[20,0,23,14,10,14,17,19],
[9,8,0,5,4,10,4,8],
[19,17,26,0,7,12,12,18],
[21,21,27,24,0,9,14,19],
[22,17,21,19,22,0,15,21],
[20,14,27,19,17,16,0,23],
[21,12,23,13,12,10,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,12,18,20,18,14,15],
[14,0,17,13,13,12,11,9],
[19,14,0,21,17,20,16,15],
[13,18,10,0,13,17,14,17],
[11,18,14,18,0,18,12,13],
[13,19,11,14,13,0,15,12],
[17,20,15,17,19,16,0,13],
[16,22,16,14,18,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,22,14,31,22,14,31],
[17,0,22,22,17,31,8,31],
[9,9,0,14,9,23,0,23],
[17,9,17,0,17,25,17,31],
[0,14,22,14,0,14,6,14],
[9,0,8,6,17,0,0,31],
[17,23,31,14,25,31,0,31],
[0,0,8,0,17,0,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,20,22,18,21,14,17],
[14,0,15,19,14,18,13,15],
[11,16,0,24,18,21,14,18],
[9,12,7,0,15,14,10,16],
[13,17,13,16,0,16,15,15],
[10,13,10,17,15,0,6,12],
[17,18,17,21,16,25,0,14],
[14,16,13,15,16,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,14,17,17,17,16,19],
[17,0,17,12,15,17,20,22],
[17,14,0,14,16,20,16,19],
[14,19,17,0,15,18,15,19],
[14,16,15,16,0,17,17,22],
[14,14,11,13,14,0,15,17],
[15,11,15,16,14,16,0,17],
[12,9,12,12,9,14,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,16,22,23,19,18,13],
[9,0,13,18,15,17,13,11],
[15,18,0,20,24,17,14,15],
[9,13,11,0,15,13,12,13],
[8,16,7,16,0,8,12,11],
[12,14,14,18,23,0,16,16],
[13,18,17,19,19,15,0,14],
[18,20,16,18,20,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,31,11,21,31,31,21],
[10,0,10,10,10,10,10,0],
[0,21,0,11,21,20,31,21],
[20,21,20,0,10,20,20,21],
[10,21,10,21,0,20,31,21],
[0,21,11,11,11,0,31,11],
[0,21,0,11,0,0,0,11],
[10,31,10,10,10,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,25,14,20,13,20,14],
[24,0,25,18,19,13,19,13],
[6,6,0,13,13,13,13,13],
[17,13,18,0,12,6,6,6],
[11,12,18,19,0,13,20,25],
[18,18,18,25,18,0,13,18],
[11,12,18,25,11,18,0,12],
[17,18,18,25,6,13,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,9,12,8,11,12,12],
[23,0,17,16,18,18,15,21],
[22,14,0,13,14,19,16,18],
[19,15,18,0,16,17,17,17],
[23,13,17,15,0,16,15,17],
[20,13,12,14,15,0,14,12],
[19,16,15,14,16,17,0,15],
[19,10,13,14,14,19,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,10,15,8,12,12,8],
[19,0,13,14,15,12,16,9],
[21,18,0,16,17,13,18,15],
[16,17,15,0,20,11,16,16],
[23,16,14,11,0,13,20,21],
[19,19,18,20,18,0,13,18],
[19,15,13,15,11,18,0,15],
[23,22,16,15,10,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,8,14,15,14,21,14],
[19,0,21,16,26,14,19,9],
[23,10,0,16,15,16,13,14],
[17,15,15,0,15,13,7,14],
[16,5,16,16,0,14,13,9],
[17,17,15,18,17,0,7,16],
[10,12,18,24,18,24,0,16],
[17,22,17,17,22,15,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,15,14,16,16,15],
[16,0,14,15,9,16,13,16],
[14,17,0,17,10,15,13,13],
[16,16,14,0,11,16,14,14],
[17,22,21,20,0,21,18,15],
[15,15,16,15,10,0,13,16],
[15,18,18,17,13,18,0,14],
[16,15,18,17,16,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 31, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_8_31.csv", index=False, header=False)