
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,28,22,34,22,31,29,28,23],
[22,0,27,26,27,28,29,27,28],
[28,23,0,31,22,24,19,27,28],
[16,24,19,0,19,23,25,22,20],
[28,23,28,31,0,28,24,30,29],
[19,22,26,27,22,0,21,27,23],
[21,21,31,25,26,29,0,32,30],
[22,23,23,28,20,23,18,0,23],
[27,22,22,30,21,27,20,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,21,26,19,27,29,30],
[25,0,20,23,26,21,25,34,25],
[22,30,0,21,23,22,23,34,20],
[29,27,29,0,26,25,24,34,24],
[24,24,27,24,0,28,30,28,20],
[31,29,28,25,22,0,29,33,18],
[23,25,27,26,20,21,0,32,23],
[21,16,16,16,22,17,18,0,14],
[20,25,30,26,30,32,27,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,24,25,29,25,29,22,28],
[24,0,23,33,31,27,25,23,23],
[26,27,0,32,25,29,24,24,28],
[25,17,18,0,27,27,32,25,24],
[21,19,25,23,0,22,29,19,27],
[25,23,21,23,28,0,24,21,28],
[21,25,26,18,21,26,0,23,27],
[28,27,26,25,31,29,27,0,24],
[22,27,22,26,23,22,23,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,27,31,26,30,19,17,31],
[20,0,19,25,24,16,16,15,25],
[23,31,0,21,19,32,29,29,30],
[19,25,29,0,29,18,29,26,34],
[24,26,31,21,0,20,26,31,35],
[20,34,18,32,30,0,26,19,32],
[31,34,21,21,24,24,0,23,28],
[33,35,21,24,19,31,27,0,26],
[19,25,20,16,15,18,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,32,31,25,29,31,34],
[25,0,17,27,32,27,30,28,33],
[24,33,0,32,20,24,24,28,32],
[18,23,18,0,27,27,26,25,36],
[19,18,30,23,0,24,26,37,32],
[25,23,26,23,26,0,24,23,32],
[21,20,26,24,24,26,0,22,27],
[19,22,22,25,13,27,28,0,33],
[16,17,18,14,18,18,23,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,21,36,27,27,34,25,29],
[17,0,20,19,24,24,27,21,22],
[29,30,0,32,32,23,39,31,24],
[14,31,18,0,27,26,27,27,32],
[23,26,18,23,0,22,31,20,31],
[23,26,27,24,28,0,35,31,21],
[16,23,11,23,19,15,0,25,18],
[25,29,19,23,30,19,25,0,24],
[21,28,26,18,19,29,32,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,30,29,32,26,31,32,29],
[33,0,36,35,33,33,30,24,31],
[20,14,0,32,30,9,19,9,26],
[21,15,18,0,26,18,28,18,24],
[18,17,20,24,0,4,23,26,11],
[24,17,41,32,46,0,38,30,45],
[19,20,31,22,27,12,0,18,20],
[18,26,41,32,24,20,32,0,26],
[21,19,24,26,39,5,30,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,23,29,26,26,28,26,27],
[20,0,18,25,23,26,21,19,22],
[27,32,0,30,28,25,26,31,27],
[21,25,20,0,20,26,22,17,18],
[24,27,22,30,0,29,23,26,20],
[24,24,25,24,21,0,22,24,31],
[22,29,24,28,27,28,0,26,22],
[24,31,19,33,24,26,24,0,23],
[23,28,23,32,30,19,28,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,21,14,15,21,6,0,29],
[50,0,29,25,44,50,35,36,40],
[29,21,0,35,29,44,35,21,35],
[36,25,15,0,36,36,42,25,34],
[35,6,21,14,0,39,24,0,14],
[29,0,6,14,11,0,14,0,14],
[44,15,15,8,26,36,0,15,23],
[50,14,29,25,50,50,35,0,40],
[21,10,15,16,36,36,27,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,25,28,26,31,22,26],
[24,0,19,24,24,25,26,21,22],
[25,31,0,24,29,23,30,26,24],
[25,26,26,0,30,27,26,26,27],
[22,26,21,20,0,24,24,24,25],
[24,25,27,23,26,0,23,27,28],
[19,24,20,24,26,27,0,19,25],
[28,29,24,24,26,23,31,0,18],
[24,28,26,23,25,22,25,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,28,26,34,24,27,35,19],
[20,0,31,31,29,30,22,33,22],
[22,19,0,29,23,22,23,23,21],
[24,19,21,0,27,20,21,32,25],
[16,21,27,23,0,25,22,31,16],
[26,20,28,30,25,0,25,26,20],
[23,28,27,29,28,25,0,29,31],
[15,17,27,18,19,24,21,0,14],
[31,28,29,25,34,30,19,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,24,29,25,24,22,27,24],
[27,0,24,25,22,22,25,25,22],
[26,26,0,22,19,24,22,26,24],
[21,25,28,0,22,28,22,20,22],
[25,28,31,28,0,25,28,27,21],
[26,28,26,22,25,0,24,28,24],
[28,25,28,28,22,26,0,24,25],
[23,25,24,30,23,22,26,0,22],
[26,28,26,28,29,26,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,24,25,26,23,26,26,19],
[35,0,29,30,28,25,31,27,26],
[26,21,0,32,25,27,30,25,25],
[25,20,18,0,25,23,30,24,23],
[24,22,25,25,0,28,26,28,32],
[27,25,23,27,22,0,29,29,23],
[24,19,20,20,24,21,0,26,22],
[24,23,25,26,22,21,24,0,27],
[31,24,25,27,18,27,28,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,26,33,32,32,32,27,25],
[18,0,34,30,30,32,32,25,34],
[24,16,0,23,22,22,25,7,27],
[17,20,27,0,25,21,29,15,28],
[18,20,28,25,0,37,25,31,21],
[18,18,28,29,13,0,30,20,23],
[18,18,25,21,25,20,0,17,12],
[23,25,43,35,19,30,33,0,30],
[25,16,23,22,29,27,38,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,45,33,32,28,28,28,32],
[35,0,36,46,22,35,19,41,35],
[5,14,0,27,18,23,19,27,28],
[17,4,23,0,23,23,15,20,32],
[18,28,32,27,0,18,15,23,31],
[22,15,27,27,32,0,6,31,23],
[22,31,31,35,35,44,0,31,34],
[22,9,23,30,27,19,19,0,18],
[18,15,22,18,19,27,16,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,33,32,26,29,18,17,18],
[26,0,30,33,29,31,24,23,26],
[17,20,0,27,25,24,19,16,19],
[18,17,23,0,23,22,19,14,14],
[24,21,25,27,0,25,21,17,26],
[21,19,26,28,25,0,23,15,14],
[32,26,31,31,29,27,0,24,26],
[33,27,34,36,33,35,26,0,20],
[32,24,31,36,24,36,24,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,35,28,31,28,28,23,25],
[23,0,23,26,24,27,30,21,25],
[15,27,0,21,22,20,26,21,20],
[22,24,29,0,24,23,28,24,21],
[19,26,28,26,0,23,26,20,22],
[22,23,30,27,27,0,27,23,25],
[22,20,24,22,24,23,0,20,16],
[27,29,29,26,30,27,30,0,23],
[25,25,30,29,28,25,34,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,16,27,22,24,24,36,20],
[6,0,12,12,10,19,19,20,15],
[34,38,0,38,29,35,20,40,31],
[23,38,12,0,18,28,24,32,19],
[28,40,21,32,0,28,20,36,17],
[26,31,15,22,22,0,24,36,12],
[26,31,30,26,30,26,0,31,11],
[14,30,10,18,14,14,19,0,23],
[30,35,19,31,33,38,39,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,24,21,36,43,28,37,25],
[11,0,17,12,28,25,35,26,22],
[26,33,0,29,36,38,31,29,25],
[29,38,21,0,27,28,36,23,20],
[14,22,14,23,0,36,28,24,22],
[7,25,12,22,14,0,27,18,9],
[22,15,19,14,22,23,0,25,13],
[13,24,21,27,26,32,25,0,26],
[25,28,25,30,28,41,37,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,25,24,21,25,23,19],
[31,0,29,29,29,22,28,25,22],
[28,21,0,28,25,25,22,27,21],
[25,21,22,0,24,20,29,25,17],
[26,21,25,26,0,23,26,22,19],
[29,28,25,30,27,0,31,27,27],
[25,22,28,21,24,19,0,23,19],
[27,25,23,25,28,23,27,0,20],
[31,28,29,33,31,23,31,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,10,17,24,17,38,24],
[18,0,14,18,17,12,18,21,17],
[18,36,0,24,25,25,16,32,21],
[40,32,26,0,23,27,27,42,26],
[33,33,25,27,0,39,17,37,38],
[26,38,25,23,11,0,26,38,27],
[33,32,34,23,33,24,0,33,37],
[12,29,18,8,13,12,17,0,9],
[26,33,29,24,12,23,13,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,26,23,22,26,32,26],
[35,0,25,32,23,29,28,34,26],
[28,25,0,29,26,26,23,30,25],
[24,18,21,0,25,25,19,24,17],
[27,27,24,25,0,25,26,29,24],
[28,21,24,25,25,0,24,29,28],
[24,22,27,31,24,26,0,29,24],
[18,16,20,26,21,21,21,0,23],
[24,24,25,33,26,22,26,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,14,29,20,27,26,26,32],
[17,0,8,18,4,15,17,14,26],
[36,42,0,30,31,22,39,21,33],
[21,32,20,0,19,32,20,18,37],
[30,46,19,31,0,26,31,19,40],
[23,35,28,18,24,0,28,20,35],
[24,33,11,30,19,22,0,15,22],
[24,36,29,32,31,30,35,0,35],
[18,24,17,13,10,15,28,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,17,11,18,20,15,13],
[31,0,14,14,24,26,24,18,21],
[32,36,0,26,26,30,37,25,30],
[33,36,24,0,23,28,30,28,23],
[39,26,24,27,0,26,25,13,24],
[32,24,20,22,24,0,27,20,23],
[30,26,13,20,25,23,0,15,12],
[35,32,25,22,37,30,35,0,30],
[37,29,20,27,26,27,38,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,27,25,32,26,33,32,27],
[19,0,22,27,27,24,26,23,22],
[23,28,0,24,31,28,30,34,29],
[25,23,26,0,32,27,29,28,28],
[18,23,19,18,0,17,23,24,20],
[24,26,22,23,33,0,30,32,26],
[17,24,20,21,27,20,0,26,26],
[18,27,16,22,26,18,24,0,23],
[23,28,21,22,30,24,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,20,23,24,22,14,26,33],
[18,0,26,9,13,16,11,12,29],
[30,24,0,18,24,35,21,11,32],
[27,41,32,0,18,29,31,21,37],
[26,37,26,32,0,32,22,19,29],
[28,34,15,21,18,0,21,21,31],
[36,39,29,19,28,29,0,24,32],
[24,38,39,29,31,29,26,0,32],
[17,21,18,13,21,19,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,19,30,21,39,23,36],
[12,0,27,8,6,20,21,12,12],
[12,23,0,23,18,13,24,23,12],
[31,42,27,0,43,20,43,31,38],
[20,44,32,7,0,21,21,22,12],
[29,30,37,30,29,0,45,22,35],
[11,29,26,7,29,5,0,22,24],
[27,38,27,19,28,28,28,0,24],
[14,38,38,12,38,15,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,10,18,13,18,21,17,18],
[31,0,15,30,26,21,29,29,24],
[40,35,0,33,29,26,34,22,35],
[32,20,17,0,20,19,22,19,17],
[37,24,21,30,0,25,33,25,22],
[32,29,24,31,25,0,28,28,25],
[29,21,16,28,17,22,0,16,29],
[33,21,28,31,25,22,34,0,26],
[32,26,15,33,28,25,21,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,36,28,28,30,32,22,32],
[11,0,23,19,26,13,28,12,28],
[14,27,0,14,29,14,37,15,22],
[22,31,36,0,41,24,38,27,38],
[22,24,21,9,0,15,19,17,31],
[20,37,36,26,35,0,39,26,32],
[18,22,13,12,31,11,0,18,22],
[28,38,35,23,33,24,32,0,29],
[18,22,28,12,19,18,28,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,29,22,22,36,30,26],
[16,0,15,24,28,15,33,24,25],
[16,35,0,27,28,24,36,28,25],
[21,26,23,0,25,28,33,22,18],
[28,22,22,25,0,26,37,21,29],
[28,35,26,22,24,0,36,27,30],
[14,17,14,17,13,14,0,17,19],
[20,26,22,28,29,23,33,0,27],
[24,25,25,32,21,20,31,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,31,37,44,24,39,27,27],
[26,0,8,19,37,21,28,9,22],
[19,42,0,25,38,38,33,17,26],
[13,31,25,0,32,29,24,26,22],
[6,13,12,18,0,7,20,7,22],
[26,29,12,21,43,0,36,21,26],
[11,22,17,26,30,14,0,24,26],
[23,41,33,24,43,29,26,0,27],
[23,28,24,28,28,24,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,28,26,31,20,28,30,29],
[23,0,28,24,23,26,20,26,30],
[22,22,0,19,24,21,27,27,33],
[24,26,31,0,26,22,30,34,23],
[19,27,26,24,0,17,19,31,20],
[30,24,29,28,33,0,28,34,31],
[22,30,23,20,31,22,0,33,21],
[20,24,23,16,19,16,17,0,21],
[21,20,17,27,30,19,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,23,20,20,22,21,17],
[28,0,29,22,21,25,23,25,21],
[28,21,0,20,21,20,15,24,19],
[27,28,30,0,28,23,20,26,22],
[30,29,29,22,0,23,27,24,21],
[30,25,30,27,27,0,23,30,24],
[28,27,35,30,23,27,0,28,27],
[29,25,26,24,26,20,22,0,24],
[33,29,31,28,29,26,23,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,23,22,25,24,25,30],
[23,0,21,22,19,18,24,21,24],
[23,29,0,20,17,24,29,22,29],
[27,28,30,0,24,24,26,24,26],
[28,31,33,26,0,30,27,24,31],
[25,32,26,26,20,0,24,25,30],
[26,26,21,24,23,26,0,23,28],
[25,29,28,26,26,25,27,0,29],
[20,26,21,24,19,20,22,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,29,28,28,36,28,26,34],
[30,0,25,32,23,31,27,31,32],
[21,25,0,24,24,28,21,25,31],
[22,18,26,0,19,32,25,21,29],
[22,27,26,31,0,37,31,21,28],
[14,19,22,18,13,0,16,13,24],
[22,23,29,25,19,34,0,23,33],
[24,19,25,29,29,37,27,0,30],
[16,18,19,21,22,26,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,7,10,15,24,13,20,9],
[38,0,32,19,20,38,32,28,40],
[43,18,0,23,32,31,31,37,34],
[40,31,27,0,24,36,37,35,38],
[35,30,18,26,0,26,37,25,39],
[26,12,19,14,24,0,18,14,25],
[37,18,19,13,13,32,0,16,27],
[30,22,13,15,25,36,34,0,25],
[41,10,16,12,11,25,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,22,28,27,29,25,28],
[25,0,25,30,30,35,33,28,32],
[26,25,0,28,27,29,31,29,33],
[28,20,22,0,26,30,29,26,28],
[22,20,23,24,0,29,27,29,29],
[23,15,21,20,21,0,23,22,28],
[21,17,19,21,23,27,0,24,31],
[25,22,21,24,21,28,26,0,31],
[22,18,17,22,21,22,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,22,25,25,24,21,25,26],
[25,0,16,21,27,15,16,14,18],
[28,34,0,29,27,23,24,25,24],
[25,29,21,0,24,21,22,20,24],
[25,23,23,26,0,24,18,22,23],
[26,35,27,29,26,0,22,27,26],
[29,34,26,28,32,28,0,23,25],
[25,36,25,30,28,23,27,0,22],
[24,32,26,26,27,24,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,20,31,30,21,27,33,26],
[24,0,26,25,23,21,26,19,23],
[30,24,0,30,30,26,28,32,26],
[19,25,20,0,21,19,16,17,16],
[20,27,20,29,0,18,21,25,20],
[29,29,24,31,32,0,23,30,27],
[23,24,22,34,29,27,0,28,30],
[17,31,18,33,25,20,22,0,29],
[24,27,24,34,30,23,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,30,12,9,16,17,25,18],
[34,0,42,33,30,21,33,41,24],
[20,8,0,20,12,24,20,28,5],
[38,17,30,0,25,19,23,34,20],
[41,20,38,25,0,21,29,33,36],
[34,29,26,31,29,0,29,34,21],
[33,17,30,27,21,21,0,27,19],
[25,9,22,16,17,16,23,0,25],
[32,26,45,30,14,29,31,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,29,22,28,29,25,28,25],
[22,0,28,18,24,21,20,20,22],
[21,22,0,18,21,25,21,24,22],
[28,32,32,0,30,22,25,30,27],
[22,26,29,20,0,26,23,24,23],
[21,29,25,28,24,0,22,31,25],
[25,30,29,25,27,28,0,30,26],
[22,30,26,20,26,19,20,0,27],
[25,28,28,23,27,25,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,22,21,15,6,32,19,12],
[45,0,31,39,24,20,42,27,26],
[28,19,0,40,31,27,32,20,19],
[29,11,10,0,9,17,31,4,9],
[35,26,19,41,0,33,32,11,26],
[44,30,23,33,17,0,34,19,28],
[18,8,18,19,18,16,0,2,8],
[31,23,30,46,39,31,48,0,31],
[38,24,31,41,24,22,42,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,16,33,26,32,33,26,39],
[17,0,33,23,26,32,32,43,39],
[34,17,0,27,37,36,37,33,33],
[17,27,23,0,27,33,43,33,39],
[24,24,13,23,0,23,33,33,29],
[18,18,14,17,27,0,27,33,19],
[17,18,13,7,17,23,0,27,23],
[24,7,17,17,17,17,23,0,23],
[11,11,17,11,21,31,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,30,25,27,27,31,24,26],
[23,0,20,25,23,24,28,19,22],
[20,30,0,25,32,26,29,27,29],
[25,25,25,0,33,28,30,22,28],
[23,27,18,17,0,23,26,21,26],
[23,26,24,22,27,0,24,21,23],
[19,22,21,20,24,26,0,18,23],
[26,31,23,28,29,29,32,0,28],
[24,28,21,22,24,27,27,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,30,29,21,30,32,28,22],
[19,0,28,21,26,24,31,33,33],
[20,22,0,25,18,26,26,24,29],
[21,29,25,0,19,25,28,28,18],
[29,24,32,31,0,35,33,39,30],
[20,26,24,25,15,0,24,25,26],
[18,19,24,22,17,26,0,28,21],
[22,17,26,22,11,25,22,0,21],
[28,17,21,32,20,24,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,25,28,31,29,28,29],
[24,0,27,23,25,25,23,29,22],
[22,23,0,16,29,32,26,30,24],
[25,27,34,0,24,31,28,30,19],
[22,25,21,26,0,26,26,25,20],
[19,25,18,19,24,0,20,23,18],
[21,27,24,22,24,30,0,30,22],
[22,21,20,20,25,27,20,0,19],
[21,28,26,31,30,32,28,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,21,4,18,11,14,15],
[27,0,18,35,14,35,23,27,17],
[33,32,0,39,19,22,23,31,24],
[29,15,11,0,3,17,12,19,19],
[46,36,31,47,0,26,25,33,25],
[32,15,28,33,24,0,19,32,24],
[39,27,27,38,25,31,0,36,30],
[36,23,19,31,17,18,14,0,26],
[35,33,26,31,25,26,20,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,23,21,24,23,21,20],
[26,0,28,31,26,27,26,27,25],
[27,22,0,27,20,25,21,25,23],
[27,19,23,0,24,23,19,21,19],
[29,24,30,26,0,20,26,25,22],
[26,23,25,27,30,0,23,22,22],
[27,24,29,31,24,27,0,24,24],
[29,23,25,29,25,28,26,0,27],
[30,25,27,31,28,28,26,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,34,16,0,16,16,16,16],
[34,0,24,24,34,40,40,24,40],
[16,26,0,32,16,22,22,32,32],
[34,26,18,0,10,22,22,34,32],
[50,16,34,40,0,40,22,40,40],
[34,10,28,28,10,0,6,34,26],
[34,10,28,28,28,44,0,28,44],
[34,26,18,16,10,16,22,0,16],
[34,10,18,18,10,24,6,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,24,25,23,24,29,21,30],
[27,0,26,28,29,28,30,25,29],
[26,24,0,29,24,25,26,18,25],
[25,22,21,0,23,24,20,19,23],
[27,21,26,27,0,23,28,22,24],
[26,22,25,26,27,0,22,22,25],
[21,20,24,30,22,28,0,24,22],
[29,25,32,31,28,28,26,0,26],
[20,21,25,27,26,25,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,37,36,31,23,18,31,37],
[14,0,45,50,31,31,26,45,45],
[13,5,0,36,23,31,26,36,29],
[14,0,14,0,18,26,26,24,24],
[19,19,27,32,0,31,8,45,32],
[27,19,19,24,19,0,13,37,37],
[32,24,24,24,42,37,0,42,42],
[19,5,14,26,5,13,8,0,32],
[13,5,21,26,18,13,8,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,22,21,26,27,24,27,20],
[30,0,22,26,31,28,31,27,24],
[28,28,0,25,32,26,32,31,23],
[29,24,25,0,30,30,32,30,29],
[24,19,18,20,0,26,27,23,17],
[23,22,24,20,24,0,27,26,20],
[26,19,18,18,23,23,0,25,20],
[23,23,19,20,27,24,25,0,19],
[30,26,27,21,33,30,30,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,27,21,26,30,32,29,26],
[19,0,21,17,20,22,22,24,17],
[23,29,0,19,15,22,25,23,17],
[29,33,31,0,29,31,36,35,18],
[24,30,35,21,0,25,28,32,20],
[20,28,28,19,25,0,29,24,22],
[18,28,25,14,22,21,0,25,17],
[21,26,27,15,18,26,25,0,15],
[24,33,33,32,30,28,33,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,25,27,20,15,26,14],
[34,0,27,29,25,30,24,22,25],
[29,23,0,36,30,32,25,31,23],
[25,21,14,0,22,19,27,19,11],
[23,25,20,28,0,23,23,23,15],
[30,20,18,31,27,0,25,33,18],
[35,26,25,23,27,25,0,30,20],
[24,28,19,31,27,17,20,0,5],
[36,25,27,39,35,32,30,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,22,27,25,25,20,12,19],
[37,0,31,26,35,38,25,31,32],
[28,19,0,21,24,31,23,20,18],
[23,24,29,0,29,28,23,14,29],
[25,15,26,21,0,32,25,20,22],
[25,12,19,22,18,0,15,11,13],
[30,25,27,27,25,35,0,14,22],
[38,19,30,36,30,39,36,0,35],
[31,18,32,21,28,37,28,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,35,37,35,21,28,36,31],
[23,0,30,25,30,25,32,35,28],
[15,20,0,29,30,19,23,30,32],
[13,25,21,0,27,16,29,30,22],
[15,20,20,23,0,21,26,25,21],
[29,25,31,34,29,0,26,27,25],
[22,18,27,21,24,24,0,30,25],
[14,15,20,20,25,23,20,0,17],
[19,22,18,28,29,25,25,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,27,28,33,26,35,27,25],
[17,0,23,28,20,23,22,19,20],
[23,27,0,31,29,29,24,27,27],
[22,22,19,0,31,24,24,23,19],
[17,30,21,19,0,23,18,14,20],
[24,27,21,26,27,0,24,28,26],
[15,28,26,26,32,26,0,21,20],
[23,31,23,27,36,22,29,0,26],
[25,30,23,31,30,24,30,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,27,25,24,27,21,21],
[26,0,20,33,31,16,29,18,24],
[25,30,0,33,27,23,20,21,24],
[23,17,17,0,26,20,23,18,15],
[25,19,23,24,0,22,26,20,14],
[26,34,27,30,28,0,25,19,26],
[23,21,30,27,24,25,0,18,18],
[29,32,29,32,30,31,32,0,22],
[29,26,26,35,36,24,32,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,25,21,27,23,23,23,17],
[27,0,29,27,28,27,27,26,20],
[25,21,0,22,20,21,23,18,19],
[29,23,28,0,27,27,24,24,22],
[23,22,30,23,0,23,20,21,20],
[27,23,29,23,27,0,27,23,16],
[27,23,27,26,30,23,0,24,24],
[27,24,32,26,29,27,26,0,26],
[33,30,31,28,30,34,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,31,26,30,27,23,28,29],
[20,0,29,20,25,25,25,26,21],
[19,21,0,21,21,26,20,30,25],
[24,30,29,0,28,26,29,26,23],
[20,25,29,22,0,24,21,23,21],
[23,25,24,24,26,0,22,31,23],
[27,25,30,21,29,28,0,27,21],
[22,24,20,24,27,19,23,0,23],
[21,29,25,27,29,27,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,21,29,23,25,28,27,30],
[23,0,23,27,24,22,24,25,22],
[29,27,0,31,28,24,31,26,26],
[21,23,19,0,23,19,25,22,22],
[27,26,22,27,0,24,26,28,24],
[25,28,26,31,26,0,29,25,24],
[22,26,19,25,24,21,0,24,23],
[23,25,24,28,22,25,26,0,22],
[20,28,24,28,26,26,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,19,24,21,23,21,26,26],
[25,0,25,24,23,20,23,30,27],
[31,25,0,28,29,27,25,31,28],
[26,26,22,0,27,23,28,33,27],
[29,27,21,23,0,24,22,33,23],
[27,30,23,27,26,0,25,33,27],
[29,27,25,22,28,25,0,29,21],
[24,20,19,17,17,17,21,0,27],
[24,23,22,23,27,23,29,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,29,29,26,24,17,22,33],
[30,0,29,38,29,20,24,25,32],
[21,21,0,27,26,26,23,19,26],
[21,12,23,0,14,18,23,16,20],
[24,21,24,36,0,24,24,16,31],
[26,30,24,32,26,0,27,22,25],
[33,26,27,27,26,23,0,20,33],
[28,25,31,34,34,28,30,0,39],
[17,18,24,30,19,25,17,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,20,29,29,20,18,32,19],
[18,0,24,24,24,26,26,31,21],
[30,26,0,34,40,23,23,26,28],
[21,26,16,0,26,25,15,31,20],
[21,26,10,24,0,23,13,24,24],
[30,24,27,25,27,0,20,28,19],
[32,24,27,35,37,30,0,25,26],
[18,19,24,19,26,22,25,0,13],
[31,29,22,30,26,31,24,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,31,26,28,26,23,30,28],
[22,0,21,29,26,27,26,24,21],
[19,29,0,22,23,29,22,23,18],
[24,21,28,0,28,31,22,30,20],
[22,24,27,22,0,30,23,23,19],
[24,23,21,19,20,0,23,21,18],
[27,24,28,28,27,27,0,27,28],
[20,26,27,20,27,29,23,0,23],
[22,29,32,30,31,32,22,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,24,25,25,26,24,33,24],
[29,0,26,24,27,29,22,31,24],
[26,24,0,24,27,27,21,28,23],
[25,26,26,0,26,28,20,24,29],
[25,23,23,24,0,23,27,25,22],
[24,21,23,22,27,0,20,27,24],
[26,28,29,30,23,30,0,30,27],
[17,19,22,26,25,23,20,0,19],
[26,26,27,21,28,26,23,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,28,30,23,21,27,28],
[24,0,21,20,23,21,18,20,21],
[22,29,0,27,26,27,22,30,21],
[22,30,23,0,26,24,20,24,25],
[20,27,24,24,0,24,20,28,24],
[27,29,23,26,26,0,25,27,26],
[29,32,28,30,30,25,0,27,25],
[23,30,20,26,22,23,23,0,19],
[22,29,29,25,26,24,25,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,32,34,33,31,37,35,32],
[26,0,33,32,25,23,33,25,29],
[18,17,0,17,21,13,22,27,21],
[16,18,33,0,21,19,22,20,15],
[17,25,29,29,0,22,28,23,27],
[19,27,37,31,28,0,27,30,28],
[13,17,28,28,22,23,0,25,25],
[15,25,23,30,27,20,25,0,28],
[18,21,29,35,23,22,25,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,30,27,27,29,22,30],
[25,0,27,28,22,33,26,26,28],
[22,23,0,26,21,32,25,15,29],
[20,22,24,0,23,24,27,17,30],
[23,28,29,27,0,30,27,16,31],
[23,17,18,26,20,0,21,18,27],
[21,24,25,23,23,29,0,17,29],
[28,24,35,33,34,32,33,0,35],
[20,22,21,20,19,23,21,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,23,28,27,22,33,27,29],
[23,0,21,19,17,18,27,19,24],
[27,29,0,27,23,27,33,22,26],
[22,31,23,0,24,19,30,24,26],
[23,33,27,26,0,23,32,28,34],
[28,32,23,31,27,0,34,24,29],
[17,23,17,20,18,16,0,24,23],
[23,31,28,26,22,26,26,0,27],
[21,26,24,24,16,21,27,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,25,37,31,23,28,34,16],
[27,0,15,28,24,25,17,28,26],
[25,35,0,36,32,28,35,32,27],
[13,22,14,0,19,18,23,19,14],
[19,26,18,31,0,27,31,25,19],
[27,25,22,32,23,0,22,28,20],
[22,33,15,27,19,28,0,29,25],
[16,22,18,31,25,22,21,0,17],
[34,24,23,36,31,30,25,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,29,27,24,26,33,26],
[25,0,23,28,21,25,29,28,26],
[25,27,0,25,22,19,29,27,24],
[21,22,25,0,20,19,25,31,18],
[23,29,28,30,0,22,28,30,26],
[26,25,31,31,28,0,24,34,32],
[24,21,21,25,22,26,0,37,26],
[17,22,23,19,20,16,13,0,17],
[24,24,26,32,24,18,24,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,34,28,21,17,29,19],
[31,0,30,19,27,14,27,20,30],
[28,20,0,35,27,29,25,24,39],
[16,31,15,0,24,21,17,11,19],
[22,23,23,26,0,20,10,22,28],
[29,36,21,29,30,0,22,19,24],
[33,23,25,33,40,28,0,30,34],
[21,30,26,39,28,31,20,0,21],
[31,20,11,31,22,26,16,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,26,29,25,28,21,25],
[24,0,29,22,23,22,26,20,20],
[24,21,0,17,24,22,26,17,25],
[24,28,33,0,26,26,26,23,22],
[21,27,26,24,0,26,26,22,24],
[25,28,28,24,24,0,25,18,21],
[22,24,24,24,24,25,0,18,22],
[29,30,33,27,28,32,32,0,25],
[25,30,25,28,26,29,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,24,28,24,25,28,21,25],
[27,0,26,26,26,26,28,24,29],
[26,24,0,28,29,25,31,30,28],
[22,24,22,0,22,27,28,23,19],
[26,24,21,28,0,26,26,27,23],
[25,24,25,23,24,0,28,23,26],
[22,22,19,22,24,22,0,23,23],
[29,26,20,27,23,27,27,0,25],
[25,21,22,31,27,24,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,26,25,23,24,23,22,25],
[28,0,18,28,20,27,23,23,22],
[24,32,0,29,31,30,25,26,28],
[25,22,21,0,22,24,25,24,22],
[27,30,19,28,0,23,23,20,24],
[26,23,20,26,27,0,26,21,25],
[27,27,25,25,27,24,0,27,27],
[28,27,24,26,30,29,23,0,24],
[25,28,22,28,26,25,23,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,22,26,25,24,29,24,31],
[20,0,14,23,31,16,20,16,26],
[28,36,0,23,28,21,33,28,32],
[24,27,27,0,29,25,28,28,33],
[25,19,22,21,0,15,25,20,26],
[26,34,29,25,35,0,22,27,34],
[21,30,17,22,25,28,0,21,29],
[26,34,22,22,30,23,29,0,37],
[19,24,18,17,24,16,21,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,23,28,25,32,21,20,26],
[20,0,25,24,24,24,22,22,18],
[27,25,0,24,23,26,29,22,23],
[22,26,26,0,23,27,24,19,23],
[25,26,27,27,0,27,29,25,21],
[18,26,24,23,23,0,21,24,21],
[29,28,21,26,21,29,0,21,26],
[30,28,28,31,25,26,29,0,22],
[24,32,27,27,29,29,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,21,19,26,26,22,20],
[27,0,21,23,27,31,32,27,24],
[33,29,0,26,24,32,33,31,28],
[29,27,24,0,23,27,30,26,28],
[31,23,26,27,0,25,35,23,26],
[24,19,18,23,25,0,31,25,22],
[24,18,17,20,15,19,0,20,18],
[28,23,19,24,27,25,30,0,27],
[30,26,22,22,24,28,32,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,31,16,31,22,22,16,25],
[14,0,30,26,15,14,20,18,14],
[19,20,0,17,20,11,11,11,16],
[34,24,33,0,24,31,33,26,33],
[19,35,30,26,0,26,32,35,26],
[28,36,39,19,24,0,38,32,44],
[28,30,39,17,18,12,0,23,32],
[34,32,39,24,15,18,27,0,33],
[25,36,34,17,24,6,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,37,41,21,40,36,33,27],
[28,0,28,34,25,35,32,21,22],
[13,22,0,27,19,27,25,12,18],
[9,16,23,0,16,17,12,12,12],
[29,25,31,34,0,33,37,28,24],
[10,15,23,33,17,0,20,11,17],
[14,18,25,38,13,30,0,20,20],
[17,29,38,38,22,39,30,0,22],
[23,28,32,38,26,33,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,15,14,21,19,4,11,19],
[39,0,23,24,30,26,17,28,26],
[35,27,0,29,29,24,27,14,23],
[36,26,21,0,35,26,15,23,32],
[29,20,21,15,0,25,14,27,14],
[31,24,26,24,25,0,19,21,26],
[46,33,23,35,36,31,0,24,33],
[39,22,36,27,23,29,26,0,23],
[31,24,27,18,36,24,17,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,21,25,21,22,24,15],
[28,0,26,26,30,24,23,24,19],
[28,24,0,22,30,23,21,27,19],
[29,24,28,0,32,27,21,29,17],
[25,20,20,18,0,23,13,22,11],
[29,26,27,23,27,0,21,27,24],
[28,27,29,29,37,29,0,33,25],
[26,26,23,21,28,23,17,0,14],
[35,31,31,33,39,26,25,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,32,27,23,27,23,29],
[25,0,23,29,34,25,27,28,20],
[25,27,0,28,31,21,29,26,24],
[18,21,22,0,24,17,20,21,18],
[23,16,19,26,0,18,25,24,21],
[27,25,29,33,32,0,36,27,26],
[23,23,21,30,25,14,0,23,24],
[27,22,24,29,26,23,27,0,22],
[21,30,26,32,29,24,26,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,32,20,25,28,31,18,17],
[24,0,24,24,32,27,25,27,25],
[18,26,0,30,21,33,25,22,22],
[30,26,20,0,23,31,28,20,20],
[25,18,29,27,0,25,27,18,15],
[22,23,17,19,25,0,28,20,18],
[19,25,25,22,23,22,0,14,15],
[32,23,28,30,32,30,36,0,21],
[33,25,28,30,35,32,35,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,24,11,24,20,17,21,21],
[7,0,7,11,20,7,17,11,21],
[26,43,0,21,20,20,17,21,21],
[39,39,29,0,13,20,17,21,14],
[26,30,30,37,0,23,33,37,37],
[30,43,30,30,27,0,21,14,14],
[33,33,33,33,17,29,0,33,17],
[29,39,29,29,13,36,17,0,23],
[29,29,29,36,13,36,33,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,29,31,33,32,17,35,27],
[27,0,22,32,22,22,25,37,26],
[21,28,0,28,24,32,19,35,23],
[19,18,22,0,24,14,27,30,13],
[17,28,26,26,0,19,21,31,19],
[18,28,18,36,31,0,21,32,20],
[33,25,31,23,29,29,0,36,24],
[15,13,15,20,19,18,14,0,21],
[23,24,27,37,31,30,26,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,22,24,21,27,28,23],
[26,0,24,22,24,25,25,28,27],
[26,26,0,24,25,28,23,29,27],
[28,28,26,0,25,32,28,28,29],
[26,26,25,25,0,26,29,25,27],
[29,25,22,18,24,0,25,26,28],
[23,25,27,22,21,25,0,25,29],
[22,22,21,22,25,24,25,0,28],
[27,23,23,21,23,22,21,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,27,22,22,24,20,26],
[24,0,25,27,22,27,25,25,27],
[22,25,0,25,18,19,24,22,27],
[23,23,25,0,21,22,22,22,23],
[28,28,32,29,0,25,27,26,26],
[28,23,31,28,25,0,30,21,28],
[26,25,26,28,23,20,0,21,23],
[30,25,28,28,24,29,29,0,27],
[24,23,23,27,24,22,27,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,22,26,17,16,17,22,11],
[37,0,30,35,27,28,27,35,24],
[28,20,0,26,22,26,22,24,17],
[24,15,24,0,21,22,20,29,16],
[33,23,28,29,0,26,28,35,22],
[34,22,24,28,24,0,23,31,17],
[33,23,28,30,22,27,0,34,25],
[28,15,26,21,15,19,16,0,13],
[39,26,33,34,28,33,25,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,19,22,18,20,32,26,27],
[28,0,24,22,22,19,32,23,25],
[31,26,0,26,26,24,29,23,25],
[28,28,24,0,22,22,34,24,28],
[32,28,24,28,0,24,33,28,26],
[30,31,26,28,26,0,34,24,27],
[18,18,21,16,17,16,0,19,20],
[24,27,27,26,22,26,31,0,28],
[23,25,25,22,24,23,30,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,23,22,21,20,20,20],
[29,0,12,27,20,18,22,23,22],
[29,38,0,31,32,27,25,31,29],
[27,23,19,0,22,12,18,20,21],
[28,30,18,28,0,15,22,25,24],
[29,32,23,38,35,0,25,28,29],
[30,28,25,32,28,25,0,24,26],
[30,27,19,30,25,22,26,0,30],
[30,28,21,29,26,21,24,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,24,26,34,23,28,18,29],
[23,0,27,31,28,27,28,22,28],
[26,23,0,27,31,27,30,25,26],
[24,19,23,0,29,23,21,22,27],
[16,22,19,21,0,22,20,15,22],
[27,23,23,27,28,0,25,22,24],
[22,22,20,29,30,25,0,25,28],
[32,28,25,28,35,28,25,0,33],
[21,22,24,23,28,26,22,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,23,25,28,25,28,32],
[27,0,29,24,20,31,30,33,32],
[24,21,0,22,17,27,25,27,24],
[27,26,28,0,17,28,32,31,35],
[25,30,33,33,0,29,28,29,29],
[22,19,23,22,21,0,24,18,31],
[25,20,25,18,22,26,0,25,24],
[22,17,23,19,21,32,25,0,23],
[18,18,26,15,21,19,26,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,21,21,21,20,20,18],
[31,0,24,32,29,28,27,24,23],
[32,26,0,32,28,17,26,22,18],
[29,18,18,0,31,27,18,29,19],
[29,21,22,19,0,27,28,21,15],
[29,22,33,23,23,0,26,26,18],
[30,23,24,32,22,24,0,33,25],
[30,26,28,21,29,24,17,0,24],
[32,27,32,31,35,32,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,18,20,23,27,26,12,7],
[22,0,17,23,35,22,26,23,23],
[32,33,0,20,40,40,24,29,24],
[30,27,30,0,26,26,31,32,19],
[27,15,10,24,0,10,18,17,10],
[23,28,10,24,40,0,19,24,24],
[24,24,26,19,32,31,0,24,25],
[38,27,21,18,33,26,26,0,19],
[43,27,26,31,40,26,25,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,27,25,32,29,25,28],
[24,0,24,27,30,38,20,30,24],
[22,26,0,23,21,30,25,22,30],
[23,23,27,0,26,33,30,28,24],
[25,20,29,24,0,32,29,33,30],
[18,12,20,17,18,0,17,25,20],
[21,30,25,20,21,33,0,27,23],
[25,20,28,22,17,25,23,0,29],
[22,26,20,26,20,30,27,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,25,28,31,27,32,28,34],
[18,0,17,21,23,19,22,23,28],
[25,33,0,32,28,30,25,30,35],
[22,29,18,0,21,28,23,22,30],
[19,27,22,29,0,25,22,27,22],
[23,31,20,22,25,0,23,25,27],
[18,28,25,27,28,27,0,29,27],
[22,27,20,28,23,25,21,0,28],
[16,22,15,20,28,23,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,18,29,25,31,35,33,27],
[24,0,19,19,15,27,21,31,18],
[32,31,0,21,22,29,27,32,30],
[21,31,29,0,19,32,25,24,24],
[25,35,28,31,0,35,25,27,27],
[19,23,21,18,15,0,15,27,12],
[15,29,23,25,25,35,0,27,21],
[17,19,18,26,23,23,23,0,18],
[23,32,20,26,23,38,29,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,29,30,29,33,21,27],
[22,0,21,29,27,26,31,28,23],
[24,29,0,22,19,17,26,24,26],
[21,21,28,0,31,30,29,27,24],
[20,23,31,19,0,22,28,15,24],
[21,24,33,20,28,0,21,26,22],
[17,19,24,21,22,29,0,20,24],
[29,22,26,23,35,24,30,0,24],
[23,27,24,26,26,28,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,30,25,31,32,27,22,25],
[19,0,24,23,22,28,22,21,26],
[20,26,0,22,27,30,27,25,25],
[25,27,28,0,25,31,28,26,26],
[19,28,23,25,0,28,29,21,22],
[18,22,20,19,22,0,23,18,18],
[23,28,23,22,21,27,0,22,25],
[28,29,25,24,29,32,28,0,27],
[25,24,25,24,28,32,25,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,25,29,27,25,25,32,28],
[17,0,23,21,20,19,23,24,17],
[25,27,0,27,24,29,26,25,28],
[21,29,23,0,28,25,23,27,28],
[23,30,26,22,0,20,23,30,28],
[25,31,21,25,30,0,24,28,26],
[25,27,24,27,27,26,0,29,29],
[18,26,25,23,20,22,21,0,25],
[22,33,22,22,22,24,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,28,26,31,28,36,25,26],
[28,0,29,25,34,30,37,25,37],
[22,21,0,31,26,22,32,23,23],
[24,25,19,0,20,26,30,20,23],
[19,16,24,30,0,16,33,19,24],
[22,20,28,24,34,0,32,24,27],
[14,13,18,20,17,18,0,14,19],
[25,25,27,30,31,26,36,0,24],
[24,13,27,27,26,23,31,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,23,25,23,25,22,25,26],
[31,0,26,29,26,22,29,23,24],
[27,24,0,27,25,19,25,25,18],
[25,21,23,0,25,22,21,19,20],
[27,24,25,25,0,30,25,23,25],
[25,28,31,28,20,0,24,24,19],
[28,21,25,29,25,26,0,25,25],
[25,27,25,31,27,26,25,0,19],
[24,26,32,30,25,31,25,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,21,24,30,24,26,24],
[26,0,30,25,26,28,28,29,26],
[24,20,0,25,23,25,22,26,22],
[29,25,25,0,27,28,26,31,29],
[26,24,27,23,0,29,23,28,29],
[20,22,25,22,21,0,23,27,23],
[26,22,28,24,27,27,0,29,24],
[24,21,24,19,22,23,21,0,26],
[26,24,28,21,21,27,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,29,12,24,20,18,13,12],
[31,0,30,23,27,22,23,20,20],
[21,20,0,10,19,16,23,17,15],
[38,27,40,0,29,34,33,27,22],
[26,23,31,21,0,23,22,16,16],
[30,28,34,16,27,0,23,19,15],
[32,27,27,17,28,27,0,25,19],
[37,30,33,23,34,31,25,0,26],
[38,30,35,28,34,35,31,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,30,28,28,25,28,27,30],
[28,0,25,31,29,30,24,31,30],
[20,25,0,27,22,20,24,25,25],
[22,19,23,0,25,24,22,24,27],
[22,21,28,25,0,23,24,22,28],
[25,20,30,26,27,0,26,25,30],
[22,26,26,28,26,24,0,29,32],
[23,19,25,26,28,25,21,0,27],
[20,20,25,23,22,20,18,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,23,27,21,24,21,27],
[27,0,26,24,31,25,23,23,30],
[27,24,0,26,31,25,25,23,27],
[27,26,24,0,27,24,27,23,28],
[23,19,19,23,0,20,17,18,24],
[29,25,25,26,30,0,28,26,28],
[26,27,25,23,33,22,0,24,28],
[29,27,27,27,32,24,26,0,28],
[23,20,23,22,26,22,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,33,25,28,23,23,33,29],
[25,0,30,26,33,34,23,32,28],
[17,20,0,33,30,23,31,30,20],
[25,24,17,0,33,27,29,28,23],
[22,17,20,17,0,19,23,25,20],
[27,16,27,23,31,0,26,32,22],
[27,27,19,21,27,24,0,29,25],
[17,18,20,22,25,18,21,0,16],
[21,22,30,27,30,28,25,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,35,26,25,27,33,29],
[21,0,24,29,20,26,23,28,28],
[25,26,0,30,32,26,22,31,27],
[15,21,20,0,26,19,21,29,21],
[24,30,18,24,0,25,26,25,26],
[25,24,24,31,25,0,23,31,21],
[23,27,28,29,24,27,0,30,25],
[17,22,19,21,25,19,20,0,20],
[21,22,23,29,24,29,25,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,28,30,8,26,14,24,26],
[36,0,48,43,29,37,28,24,38],
[22,2,0,28,17,37,22,19,27],
[20,7,22,0,1,26,7,18,26],
[42,21,33,49,0,37,28,31,46],
[24,13,13,24,13,0,13,12,32],
[36,22,28,43,22,37,0,26,39],
[26,26,31,32,19,38,24,0,32],
[24,12,23,24,4,18,11,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,26,35,28,19,26,17],
[23,0,17,16,9,19,24,43,24],
[23,33,0,25,23,33,16,35,23],
[24,34,25,0,26,19,18,35,18],
[15,41,27,24,0,25,25,35,31],
[22,31,17,31,25,0,23,26,14],
[31,26,34,32,25,27,0,34,34],
[24,7,15,15,15,24,16,0,15],
[33,26,27,32,19,36,16,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,24,25,28,26,29,30,29],
[19,0,17,26,22,22,15,28,22],
[26,33,0,28,29,26,21,32,26],
[25,24,22,0,28,26,25,29,21],
[22,28,21,22,0,28,21,24,25],
[24,28,24,24,22,0,23,27,26],
[21,35,29,25,29,27,0,30,28],
[20,22,18,21,26,23,20,0,21],
[21,28,24,29,25,24,22,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,21,24,24,30,24,23,19],
[24,0,25,17,25,20,32,24,22],
[29,25,0,22,27,27,25,28,21],
[26,33,28,0,35,32,35,34,25],
[26,25,23,15,0,22,25,27,19],
[20,30,23,18,28,0,29,20,19],
[26,18,25,15,25,21,0,18,11],
[27,26,22,16,23,30,32,0,19],
[31,28,29,25,31,31,39,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,12,21,16,16,18,19,27],
[34,0,24,23,33,33,28,25,31],
[38,26,0,31,37,32,23,30,38],
[29,27,19,0,25,25,28,21,30],
[34,17,13,25,0,18,22,21,34],
[34,17,18,25,32,0,12,22,19],
[32,22,27,22,28,38,0,27,30],
[31,25,20,29,29,28,23,0,29],
[23,19,12,20,16,31,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,22,24,20,21,21,22],
[25,0,20,26,30,26,28,25,31],
[24,30,0,25,27,25,24,26,27],
[28,24,25,0,23,26,22,18,26],
[26,20,23,27,0,28,31,22,29],
[30,24,25,24,22,0,29,24,31],
[29,22,26,28,19,21,0,23,19],
[29,25,24,32,28,26,27,0,28],
[28,19,23,24,21,19,31,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,26,26,20,22,21,26],
[25,0,30,28,24,24,24,22,28],
[24,20,0,25,22,23,23,20,22],
[24,22,25,0,25,22,23,16,26],
[24,26,28,25,0,24,25,22,29],
[30,26,27,28,26,0,25,25,27],
[28,26,27,27,25,25,0,17,26],
[29,28,30,34,28,25,33,0,35],
[24,22,28,24,21,23,24,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,24,30,27,26,27,30,31],
[23,0,30,20,22,21,35,30,14],
[26,20,0,29,27,26,38,34,22],
[20,30,21,0,21,16,23,14,23],
[23,28,23,29,0,23,25,33,26],
[24,29,24,34,27,0,36,30,27],
[23,15,12,27,25,14,0,24,14],
[20,20,16,36,17,20,26,0,17],
[19,36,28,27,24,23,36,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,23,32,28,20,22,25,28],
[32,0,18,38,29,32,29,35,32],
[27,32,0,31,24,21,35,29,26],
[18,12,19,0,11,14,21,23,19],
[22,21,26,39,0,18,32,27,32],
[30,18,29,36,32,0,29,29,23],
[28,21,15,29,18,21,0,26,25],
[25,15,21,27,23,21,24,0,22],
[22,18,24,31,18,27,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,19,22,24,22,28,28],
[27,0,24,26,32,20,28,32,29],
[27,26,0,30,23,29,30,29,33],
[31,24,20,0,23,27,28,30,34],
[28,18,27,27,0,26,28,31,32],
[26,30,21,23,24,0,32,28,33],
[28,22,20,22,22,18,0,24,30],
[22,18,21,20,19,22,26,0,30],
[22,21,17,16,18,17,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,28,34,29,30,22,29,36],
[22,0,22,33,25,22,20,28,25],
[22,28,0,34,26,28,25,31,26],
[16,17,16,0,14,24,14,23,21],
[21,25,24,36,0,31,12,31,30],
[20,28,22,26,19,0,16,30,26],
[28,30,25,36,38,34,0,36,28],
[21,22,19,27,19,20,14,0,25],
[14,25,24,29,20,24,22,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,33,24,27,22,31,19,20],
[19,0,22,14,28,26,25,23,23],
[17,28,0,13,18,26,26,20,15],
[26,36,37,0,30,29,32,25,16],
[23,22,32,20,0,15,24,18,17],
[28,24,24,21,35,0,28,15,12],
[19,25,24,18,26,22,0,16,20],
[31,27,30,25,32,35,34,0,27],
[30,27,35,34,33,38,30,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,39,21,19,20,21,21,31],
[26,0,30,23,21,23,25,23,29],
[11,20,0,20,16,15,20,20,20],
[29,27,30,0,22,23,24,30,22],
[31,29,34,28,0,21,22,29,27],
[30,27,35,27,29,0,28,25,26],
[29,25,30,26,28,22,0,23,22],
[29,27,30,20,21,25,27,0,30],
[19,21,30,28,23,24,28,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,24,16,17,18,21,13,30],
[37,0,29,27,31,28,32,23,34],
[26,21,0,28,15,23,27,27,28],
[34,23,22,0,27,29,29,33,31],
[33,19,35,23,0,31,34,24,32],
[32,22,27,21,19,0,29,22,28],
[29,18,23,21,16,21,0,20,27],
[37,27,23,17,26,28,30,0,28],
[20,16,22,19,18,22,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,24,23,20,22,26,27],
[28,0,20,24,23,27,25,26,19],
[26,30,0,22,25,28,27,32,25],
[26,26,28,0,25,22,22,25,27],
[27,27,25,25,0,28,21,28,25],
[30,23,22,28,22,0,23,30,25],
[28,25,23,28,29,27,0,25,21],
[24,24,18,25,22,20,25,0,24],
[23,31,25,23,25,25,29,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,25,37,24,28,29,17],
[25,0,32,16,25,20,17,21,12],
[29,18,0,23,37,21,30,18,25],
[25,34,27,0,34,32,22,32,23],
[13,25,13,16,0,19,18,24,28],
[26,30,29,18,31,0,28,28,24],
[22,33,20,28,32,22,0,33,33],
[21,29,32,18,26,22,17,0,18],
[33,38,25,27,22,26,17,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,20,17,25,20,18,22],
[28,0,27,26,20,25,26,25,25],
[27,23,0,24,19,23,26,23,24],
[30,24,26,0,21,27,26,22,25],
[33,30,31,29,0,27,27,23,27],
[25,25,27,23,23,0,25,23,23],
[30,24,24,24,23,25,0,23,25],
[32,25,27,28,27,27,27,0,27],
[28,25,26,25,23,27,25,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,29,27,25,27,25,25,27],
[28,0,30,25,27,30,30,27,19],
[21,20,0,24,22,24,21,20,19],
[23,25,26,0,25,26,19,26,27],
[25,23,28,25,0,28,23,28,24],
[23,20,26,24,22,0,22,23,21],
[25,20,29,31,27,28,0,23,21],
[25,23,30,24,22,27,27,0,21],
[23,31,31,23,26,29,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,25,26,27,33,27,27,25],
[22,0,25,23,27,25,28,22,22],
[25,25,0,24,25,31,27,28,20],
[24,27,26,0,29,29,24,24,25],
[23,23,25,21,0,23,17,27,19],
[17,25,19,21,27,0,21,26,16],
[23,22,23,26,33,29,0,26,25],
[23,28,22,26,23,24,24,0,20],
[25,28,30,25,31,34,25,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,30,25,28,22,25,35,28],
[24,0,14,14,22,14,16,26,26],
[20,36,0,19,24,18,18,35,24],
[25,36,31,0,30,27,30,35,26],
[22,28,26,20,0,17,11,31,24],
[28,36,32,23,33,0,17,29,27],
[25,34,32,20,39,33,0,31,39],
[15,24,15,15,19,21,19,0,22],
[22,24,26,24,26,23,11,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,20,27,24,32,25,23],
[26,0,21,26,23,20,29,20,20],
[27,29,0,28,23,26,31,28,25],
[30,24,22,0,24,29,31,25,27],
[23,27,27,26,0,29,31,22,25],
[26,30,24,21,21,0,33,22,23],
[18,21,19,19,19,17,0,18,22],
[25,30,22,25,28,28,32,0,30],
[27,30,25,23,25,27,28,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,20,13,18,24,26,16,30],
[22,0,15,18,17,22,20,17,25],
[30,35,0,25,29,25,29,27,30],
[37,32,25,0,25,30,28,36,37],
[32,33,21,25,0,24,28,28,33],
[26,28,25,20,26,0,23,24,27],
[24,30,21,22,22,27,0,23,32],
[34,33,23,14,22,26,27,0,33],
[20,25,20,13,17,23,18,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,28,21,23,34,18,27,23],
[27,0,24,29,23,36,25,28,27],
[22,26,0,18,23,28,23,29,21],
[29,21,32,0,29,30,21,28,30],
[27,27,27,21,0,29,27,27,24],
[16,14,22,20,21,0,19,19,18],
[32,25,27,29,23,31,0,29,20],
[23,22,21,22,23,31,21,0,25],
[27,23,29,20,26,32,30,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,20,25,29,28,25,23,24],
[26,0,26,30,28,24,25,25,27],
[30,24,0,32,30,25,25,32,29],
[25,20,18,0,26,20,24,24,23],
[21,22,20,24,0,18,23,23,21],
[22,26,25,30,32,0,29,26,27],
[25,25,25,26,27,21,0,24,30],
[27,25,18,26,27,24,26,0,30],
[26,23,21,27,29,23,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,20,15,35,16,32,25,30],
[26,0,30,28,32,25,26,29,35],
[30,20,0,19,32,18,23,28,36],
[35,22,31,0,33,25,23,22,30],
[15,18,18,17,0,24,22,21,32],
[34,25,32,25,26,0,23,19,27],
[18,24,27,27,28,27,0,25,31],
[25,21,22,28,29,31,25,0,31],
[20,15,14,20,18,23,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,31,24,20,22,25,30,24],
[27,0,28,29,21,28,20,31,25],
[19,22,0,21,23,26,18,24,24],
[26,21,29,0,26,25,24,27,24],
[30,29,27,24,0,33,28,33,20],
[28,22,24,25,17,0,24,33,17],
[25,30,32,26,22,26,0,29,27],
[20,19,26,23,17,17,21,0,19],
[26,25,26,26,30,33,23,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,23,22,22,25,19,22,23],
[32,0,24,32,25,29,26,28,27],
[27,26,0,25,22,25,28,20,24],
[28,18,25,0,27,29,25,26,28],
[28,25,28,23,0,34,24,28,26],
[25,21,25,21,16,0,19,19,21],
[31,24,22,25,26,31,0,27,22],
[28,22,30,24,22,31,23,0,24],
[27,23,26,22,24,29,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,29,24,21,24,27,25],
[25,0,30,33,24,30,30,30,26],
[29,20,0,26,26,24,24,28,24],
[21,17,24,0,18,25,17,23,22],
[26,26,24,32,0,32,22,31,31],
[29,20,26,25,18,0,24,30,23],
[26,20,26,33,28,26,0,30,27],
[23,20,22,27,19,20,20,0,18],
[25,24,26,28,19,27,23,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,23,23,22,27,24,20],
[28,0,24,29,28,27,30,26,27],
[25,26,0,21,28,25,26,29,26],
[27,21,29,0,25,24,29,28,31],
[27,22,22,25,0,25,26,23,23],
[28,23,25,26,25,0,25,25,31],
[23,20,24,21,24,25,0,22,27],
[26,24,21,22,27,25,28,0,25],
[30,23,24,19,27,19,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,31,25,27,34,27,22,28],
[16,0,28,19,25,29,17,26,21],
[19,22,0,18,18,20,21,32,17],
[25,31,32,0,27,28,20,37,27],
[23,25,32,23,0,33,18,22,32],
[16,21,30,22,17,0,17,20,23],
[23,33,29,30,32,33,0,31,31],
[28,24,18,13,28,30,19,0,25],
[22,29,33,23,18,27,19,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,36,16,20,16,17,17,20],
[31,0,27,28,31,28,25,19,31],
[14,23,0,12,20,18,20,15,26],
[34,22,38,0,28,36,32,21,41],
[30,19,30,22,0,24,27,27,24],
[34,22,32,14,26,0,20,31,32],
[33,25,30,18,23,30,0,23,27],
[33,31,35,29,23,19,27,0,30],
[30,19,24,9,26,18,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,33,33,24,33,41,26,33],
[21,0,27,17,15,15,28,22,18],
[17,23,0,19,17,21,22,14,18],
[17,33,31,0,11,25,29,18,18],
[26,35,33,39,0,35,36,25,24],
[17,35,29,25,15,0,31,25,19],
[9,22,28,21,14,19,0,15,15],
[24,28,36,32,25,25,35,0,27],
[17,32,32,32,26,31,35,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,14,9,18,19,18,18,18],
[30,0,14,27,18,4,9,18,27],
[36,36,0,35,41,25,35,29,33],
[41,23,15,0,28,19,15,22,18],
[32,32,9,22,0,19,15,22,29],
[31,46,25,31,31,0,31,25,31],
[32,41,15,35,35,19,0,31,35],
[32,32,21,28,28,25,19,0,26],
[32,23,17,32,21,19,15,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,17,19,22,29,19,22],
[34,0,23,21,26,25,28,32,33],
[33,27,0,27,28,25,31,32,33],
[33,29,23,0,29,27,33,25,30],
[31,24,22,21,0,25,24,25,29],
[28,25,25,23,25,0,33,24,27],
[21,22,19,17,26,17,0,26,28],
[31,18,18,25,25,26,24,0,26],
[28,17,17,20,21,23,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,18,18,24,24,14,19,18],
[29,0,25,23,27,25,26,29,23],
[32,25,0,25,26,28,23,25,22],
[32,27,25,0,29,32,28,32,29],
[26,23,24,21,0,22,22,27,26],
[26,25,22,18,28,0,22,25,22],
[36,24,27,22,28,28,0,29,23],
[31,21,25,18,23,25,21,0,22],
[32,27,28,21,24,28,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,38,46,40,38,34,34,26],
[34,0,38,46,36,36,22,48,24],
[12,12,0,32,24,26,22,22,24],
[4,4,18,0,40,18,2,12,16],
[10,14,26,10,0,26,12,22,12],
[12,14,24,32,24,0,12,22,26],
[16,28,28,48,38,38,0,48,24],
[16,2,28,38,28,28,2,0,24],
[24,26,26,34,38,24,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,10,34,29,20,25,22,15],
[19,0,20,20,25,20,32,18,14],
[40,30,0,30,30,20,34,20,24],
[16,30,20,0,35,15,14,15,20],
[21,25,20,15,0,11,25,22,15],
[30,30,30,35,39,0,14,13,30],
[25,18,16,36,25,36,0,34,22],
[28,32,30,35,28,37,16,0,32],
[35,36,26,30,35,20,28,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,21,17,23,22,22,20,21],
[26,0,21,21,22,29,23,22,25],
[29,29,0,27,31,25,26,29,24],
[33,29,23,0,25,25,30,29,30],
[27,28,19,25,0,27,21,20,27],
[28,21,25,25,23,0,28,18,25],
[28,27,24,20,29,22,0,23,23],
[30,28,21,21,30,32,27,0,26],
[29,25,26,20,23,25,27,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,26,25,20,29,26,30,25],
[20,0,17,23,23,25,18,20,23],
[24,33,0,28,23,31,21,29,26],
[25,27,22,0,26,30,22,28,24],
[30,27,27,24,0,32,29,31,29],
[21,25,19,20,18,0,20,20,23],
[24,32,29,28,21,30,0,28,26],
[20,30,21,22,19,30,22,0,22],
[25,27,24,26,21,27,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,23,21,27,25,32,22,17],
[19,0,32,26,25,27,30,26,17],
[27,18,0,31,24,29,27,23,26],
[29,24,19,0,29,27,32,29,20],
[23,25,26,21,0,26,27,26,16],
[25,23,21,23,24,0,27,20,21],
[18,20,23,18,23,23,0,24,16],
[28,24,27,21,24,30,26,0,19],
[33,33,24,30,34,29,34,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,30,28,23,28,23,21,23],
[17,0,16,18,19,16,23,13,17],
[20,34,0,22,22,24,30,18,27],
[22,32,28,0,28,19,35,23,20],
[27,31,28,22,0,20,27,25,19],
[22,34,26,31,30,0,24,28,24],
[27,27,20,15,23,26,0,17,21],
[29,37,32,27,25,22,33,0,21],
[27,33,23,30,31,26,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,25,23,25,29,26,23,28],
[19,0,15,21,31,34,18,28,22],
[25,35,0,24,31,35,24,29,26],
[27,29,26,0,33,33,21,29,29],
[25,19,19,17,0,20,23,24,22],
[21,16,15,17,30,0,24,23,21],
[24,32,26,29,27,26,0,31,30],
[27,22,21,21,26,27,19,0,25],
[22,28,24,21,28,29,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,21,23,30,29,27,32,29],
[23,0,27,25,27,30,32,31,27],
[29,23,0,26,24,28,26,33,32],
[27,25,24,0,24,28,26,25,27],
[20,23,26,26,0,22,25,27,27],
[21,20,22,22,28,0,28,26,26],
[23,18,24,24,25,22,0,25,26],
[18,19,17,25,23,24,25,0,23],
[21,23,18,23,23,24,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,20,24,26,24,23,24,23],
[26,0,24,28,23,22,28,26,24],
[30,26,0,25,30,27,25,29,28],
[26,22,25,0,32,29,26,25,26],
[24,27,20,18,0,22,27,22,25],
[26,28,23,21,28,0,27,31,20],
[27,22,25,24,23,23,0,28,27],
[26,24,21,25,28,19,22,0,25],
[27,26,22,24,25,30,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,18,24,19,24,31,20],
[24,0,20,19,25,25,20,22,20],
[25,30,0,21,27,23,21,22,24],
[32,31,29,0,29,26,24,27,26],
[26,25,23,21,0,16,24,27,24],
[31,25,27,24,34,0,24,28,28],
[26,30,29,26,26,26,0,23,23],
[19,28,28,23,23,22,27,0,27],
[30,30,26,24,26,22,27,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,27,28,27,24,23,32,21],
[20,0,18,24,18,27,20,22,21],
[23,32,0,23,25,32,26,33,24],
[22,26,27,0,23,20,15,26,13],
[23,32,25,27,0,23,23,25,23],
[26,23,18,30,27,0,28,24,21],
[27,30,24,35,27,22,0,34,26],
[18,28,17,24,25,26,16,0,20],
[29,29,26,37,27,29,24,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,25,27,21,26,23,27,21],
[19,0,24,23,23,14,17,21,23],
[25,26,0,25,19,19,26,15,21],
[23,27,25,0,17,22,21,17,20],
[29,27,31,33,0,28,23,23,24],
[24,36,31,28,22,0,21,25,22],
[27,33,24,29,27,29,0,29,28],
[23,29,35,33,27,25,21,0,26],
[29,27,29,30,26,28,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,24,28,27,23,34,25],
[28,0,26,25,20,26,20,22,10],
[25,24,0,24,22,23,23,29,13],
[26,25,26,0,23,26,18,31,11],
[22,30,28,27,0,33,20,30,18],
[23,24,27,24,17,0,13,21,17],
[27,30,27,32,30,37,0,31,23],
[16,28,21,19,20,29,19,0,19],
[25,40,37,39,32,33,27,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,29,29,29,27,28,21,32],
[23,0,21,21,34,24,17,23,26],
[21,29,0,23,26,29,15,21,25],
[21,29,27,0,30,28,24,28,28],
[21,16,24,20,0,20,15,16,21],
[23,26,21,22,30,0,26,25,18],
[22,33,35,26,35,24,0,27,29],
[29,27,29,22,34,25,23,0,28],
[18,24,25,22,29,32,21,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,27,36,21,9,28,26,24],
[34,0,32,36,29,16,28,27,30],
[23,18,0,25,23,18,26,21,21],
[14,14,25,0,5,8,22,20,11],
[29,21,27,45,0,25,29,39,28],
[41,34,32,42,25,0,29,36,28],
[22,22,24,28,21,21,0,34,8],
[24,23,29,30,11,14,16,0,13],
[26,20,29,39,22,22,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,29,26,24,28,27,26],
[24,0,18,25,24,24,22,26,24],
[27,32,0,30,27,22,26,28,26],
[21,25,20,0,21,18,24,25,26],
[24,26,23,29,0,23,23,27,27],
[26,26,28,32,27,0,29,29,23],
[22,28,24,26,27,21,0,26,25],
[23,24,22,25,23,21,24,0,20],
[24,26,24,24,23,27,25,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,33,41,22,41,22,36],
[25,0,37,32,34,36,34,35,21],
[20,13,0,13,40,13,14,35,27],
[17,18,37,0,34,36,34,32,17],
[9,16,10,16,0,7,3,9,24],
[28,14,37,14,43,0,37,43,23],
[9,16,36,16,47,13,0,31,30],
[28,15,15,18,41,7,19,0,24],
[14,29,23,33,26,27,20,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,19,28,31,28,34,27,24],
[26,0,26,21,18,22,32,23,22],
[31,24,0,28,21,32,37,31,20],
[22,29,22,0,23,23,29,29,25],
[19,32,29,27,0,25,36,26,26],
[22,28,18,27,25,0,28,29,20],
[16,18,13,21,14,22,0,18,14],
[23,27,19,21,24,21,32,0,18],
[26,28,30,25,24,30,36,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,24,25,31,31,29,23,29],
[20,0,24,22,24,25,26,20,23],
[26,26,0,20,26,29,30,28,25],
[25,28,30,0,31,30,30,35,27],
[19,26,24,19,0,22,26,23,22],
[19,25,21,20,28,0,25,28,19],
[21,24,20,20,24,25,0,24,25],
[27,30,22,15,27,22,26,0,21],
[21,27,25,23,28,31,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,40,20,25,14,27,20,20],
[25,0,36,31,50,39,44,39,39],
[10,14,0,16,35,22,21,24,24],
[30,19,34,0,34,42,21,34,34],
[25,0,15,16,0,22,16,25,22],
[36,11,28,8,28,0,13,23,13],
[23,6,29,29,34,37,0,29,37],
[30,11,26,16,25,27,21,0,19],
[30,11,26,16,28,37,13,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,30,31,23,33,25,30,31],
[22,0,22,28,22,23,23,25,29],
[20,28,0,22,13,20,17,28,26],
[19,22,28,0,22,23,11,31,26],
[27,28,37,28,0,23,18,37,30],
[17,27,30,27,27,0,18,35,28],
[25,27,33,39,32,32,0,37,31],
[20,25,22,19,13,15,13,0,26],
[19,21,24,24,20,22,19,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,28,36,30,30,29,39,17],
[28,0,25,28,29,30,20,30,25],
[22,25,0,22,29,22,15,25,17],
[14,22,28,0,27,28,27,20,22],
[20,21,21,23,0,23,23,28,16],
[20,20,28,22,27,0,21,24,28],
[21,30,35,23,27,29,0,28,31],
[11,20,25,30,22,26,22,0,17],
[33,25,33,28,34,22,19,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,25,27,25,18,21,34],
[25,0,28,24,26,25,21,25,25],
[20,22,0,19,21,20,12,17,32],
[25,26,31,0,28,28,21,25,31],
[23,24,29,22,0,24,22,18,33],
[25,25,30,22,26,0,21,18,30],
[32,29,38,29,28,29,0,20,39],
[29,25,33,25,32,32,30,0,36],
[16,25,18,19,17,20,11,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,25,16,21,27,29,28,31],
[19,0,23,20,21,24,25,16,22],
[25,27,0,23,17,35,26,29,27],
[34,30,27,0,23,32,32,25,33],
[29,29,33,27,0,35,33,20,31],
[23,26,15,18,15,0,20,15,26],
[21,25,24,18,17,30,0,20,29],
[22,34,21,25,30,35,30,0,30],
[19,28,23,17,19,24,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,29,30,32,29,30,38,24],
[21,0,20,27,32,16,25,27,24],
[21,30,0,16,26,29,30,26,22],
[20,23,34,0,30,21,34,30,26],
[18,18,24,20,0,28,24,29,28],
[21,34,21,29,22,0,23,23,22],
[20,25,20,16,26,27,0,28,28],
[12,23,24,20,21,27,22,0,20],
[26,26,28,24,22,28,22,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,29,27,27,26,25,24,30],
[29,0,26,29,25,24,28,22,25],
[21,24,0,24,21,19,22,25,27],
[23,21,26,0,22,21,23,19,28],
[23,25,29,28,0,21,21,18,23],
[24,26,31,29,29,0,19,26,26],
[25,22,28,27,29,31,0,24,27],
[26,28,25,31,32,24,26,0,31],
[20,25,23,22,27,24,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,19,31,24,29,26,23,30],
[25,0,25,30,28,26,27,26,27],
[31,25,0,30,27,27,20,24,28],
[19,20,20,0,20,23,22,23,25],
[26,22,23,30,0,25,22,23,24],
[21,24,23,27,25,0,19,28,23],
[24,23,30,28,28,31,0,28,27],
[27,24,26,27,27,22,22,0,26],
[20,23,22,25,26,27,23,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,25,25,28,21,18,17],
[28,0,28,24,23,25,19,23,26],
[26,22,0,23,23,25,17,24,19],
[25,26,27,0,22,27,22,20,21],
[25,27,27,28,0,29,21,23,26],
[22,25,25,23,21,0,19,20,16],
[29,31,33,28,29,31,0,25,25],
[32,27,26,30,27,30,25,0,25],
[33,24,31,29,24,34,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,16,35,27,41,34,28,23],
[14,0,18,29,20,33,28,23,20],
[34,32,0,29,27,46,39,24,27],
[15,21,21,0,20,29,25,32,21],
[23,30,23,30,0,41,37,26,24],
[9,17,4,21,9,0,36,21,10],
[16,22,11,25,13,14,0,25,16],
[22,27,26,18,24,29,25,0,21],
[27,30,23,29,26,40,34,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,31,26,26,23,22,25,31],
[22,0,28,23,26,26,21,24,32],
[19,22,0,18,19,11,24,22,23],
[24,27,32,0,25,20,22,29,27],
[24,24,31,25,0,19,28,26,31],
[27,24,39,30,31,0,27,31,33],
[28,29,26,28,22,23,0,28,29],
[25,26,28,21,24,19,22,0,28],
[19,18,27,23,19,17,21,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,25,22,25,26,20,27],
[26,0,26,25,25,23,23,21,21],
[26,24,0,25,26,27,25,27,20],
[25,25,25,0,22,24,25,21,23],
[28,25,24,28,0,27,27,27,25],
[25,27,23,26,23,0,26,19,24],
[24,27,25,25,23,24,0,22,18],
[30,29,23,29,23,31,28,0,25],
[23,29,30,27,25,26,32,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,33,23,28,31,22,21,18],
[30,0,33,32,30,37,17,32,25],
[17,17,0,18,25,31,24,19,19],
[27,18,32,0,30,39,27,26,20],
[22,20,25,20,0,26,24,16,9],
[19,13,19,11,24,0,12,9,9],
[28,33,26,23,26,38,0,23,22],
[29,18,31,24,34,41,27,0,21],
[32,25,31,30,41,41,28,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,20,33,27,37,27,42,27],
[23,0,41,17,33,37,26,39,45],
[30,9,0,17,18,36,8,30,19],
[17,33,33,0,30,34,20,42,30],
[23,17,32,20,0,20,13,23,29],
[13,13,14,16,30,0,10,30,10],
[23,24,42,30,37,40,0,40,39],
[8,11,20,8,27,20,10,0,20],
[23,5,31,20,21,40,11,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,29,23,34,27,33,33,32],
[19,0,22,26,18,18,23,24,19],
[21,28,0,27,28,22,28,26,21],
[27,24,23,0,21,20,35,25,18],
[16,32,22,29,0,26,22,24,23],
[23,32,28,30,24,0,33,32,22],
[17,27,22,15,28,17,0,28,20],
[17,26,24,25,26,18,22,0,16],
[18,31,29,32,27,28,30,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,28,24,29,31,26,21],
[24,0,25,28,26,26,30,26,25],
[25,25,0,27,23,31,31,26,24],
[22,22,23,0,24,28,32,26,26],
[26,24,27,26,0,28,33,26,26],
[21,24,19,22,22,0,24,21,18],
[19,20,19,18,17,26,0,18,17],
[24,24,24,24,24,29,32,0,25],
[29,25,26,24,24,32,33,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,26,24,25,25,21,26],
[22,0,23,23,16,21,23,22,21],
[24,27,0,28,21,23,24,24,22],
[24,27,22,0,19,21,22,22,18],
[26,34,29,31,0,29,26,28,24],
[25,29,27,29,21,0,25,22,23],
[25,27,26,28,24,25,0,23,24],
[29,28,26,28,22,28,27,0,24],
[24,29,28,32,26,27,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,13,28,23,18,15,18,24],
[27,0,21,29,25,26,30,19,25],
[37,29,0,29,21,23,19,25,29],
[22,21,21,0,15,13,12,13,24],
[27,25,29,35,0,30,31,33,30],
[32,24,27,37,20,0,29,29,30],
[35,20,31,38,19,21,0,25,28],
[32,31,25,37,17,21,25,0,31],
[26,25,21,26,20,20,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,28,25,29,28,28,32,33],
[19,0,19,19,34,20,16,23,23],
[22,31,0,22,37,35,25,25,28],
[25,31,28,0,37,26,27,27,30],
[21,16,13,13,0,16,20,20,26],
[22,30,15,24,34,0,20,25,24],
[22,34,25,23,30,30,0,24,28],
[18,27,25,23,30,25,26,0,23],
[17,27,22,20,24,26,22,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,23,31,23,25,26,27],
[25,0,21,25,32,22,28,25,28],
[26,29,0,20,33,21,26,26,22],
[27,25,30,0,37,29,25,23,30],
[19,18,17,13,0,22,25,22,20],
[27,28,29,21,28,0,26,24,27],
[25,22,24,25,25,24,0,27,18],
[24,25,24,27,28,26,23,0,24],
[23,22,28,20,30,23,32,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,36,26,0,24,50,0,24],
[14,0,12,26,0,0,26,0,0],
[14,38,0,26,14,0,14,0,24],
[24,24,24,0,24,24,24,0,24],
[50,50,36,26,0,36,50,12,24],
[26,50,50,26,14,0,26,26,38],
[0,24,36,26,0,24,0,0,24],
[50,50,50,50,38,24,50,0,38],
[26,50,26,26,26,12,26,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,29,25,28,25,26,25,29],
[22,0,28,32,29,27,26,25,30],
[21,22,0,25,22,25,28,21,21],
[25,18,25,0,24,23,24,22,25],
[22,21,28,26,0,24,26,23,25],
[25,23,25,27,26,0,23,28,29],
[24,24,22,26,24,27,0,21,26],
[25,25,29,28,27,22,29,0,24],
[21,20,29,25,25,21,24,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,22,19,24,24,17,23],
[31,0,27,25,26,31,31,30,31],
[28,23,0,24,27,29,30,29,36],
[28,25,26,0,26,23,25,27,26],
[31,24,23,24,0,24,33,27,28],
[26,19,21,27,26,0,28,21,23],
[26,19,20,25,17,22,0,25,24],
[33,20,21,23,23,29,25,0,29],
[27,19,14,24,22,27,26,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,27,30,24,29,27,29],
[27,0,20,28,28,26,28,30,31],
[27,30,0,24,24,25,24,28,28],
[23,22,26,0,28,27,28,28,27],
[20,22,26,22,0,26,22,28,24],
[26,24,25,23,24,0,29,25,25],
[21,22,26,22,28,21,0,25,27],
[23,20,22,22,22,25,25,0,27],
[21,19,22,23,26,25,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,30,26,17,30,26,30,30],
[27,0,10,43,27,47,40,10,40],
[20,40,0,43,37,50,43,47,37],
[24,7,7,0,24,37,37,7,24],
[33,23,13,26,0,50,26,30,20],
[20,3,0,13,0,0,26,0,0],
[24,10,7,13,24,24,0,7,24],
[20,40,3,43,20,50,43,0,40],
[20,10,13,26,30,50,26,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,17,15,26,24,23,21],
[30,0,29,23,30,33,28,30,31],
[31,21,0,20,19,26,23,26,23],
[33,27,30,0,23,34,24,32,28],
[35,20,31,27,0,32,32,35,30],
[24,17,24,16,18,0,21,23,26],
[26,22,27,26,18,29,0,28,25],
[27,20,24,18,15,27,22,0,24],
[29,19,27,22,20,24,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,16,19,17,23,28,22,16],
[31,0,9,21,14,16,28,30,20],
[34,41,0,31,27,30,35,31,25],
[31,29,19,0,24,21,22,35,20],
[33,36,23,26,0,26,35,30,27],
[27,34,20,29,24,0,30,26,31],
[22,22,15,28,15,20,0,28,17],
[28,20,19,15,20,24,22,0,21],
[34,30,25,30,23,19,33,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,27,28,31,24,23,28],
[26,0,22,26,24,30,24,26,27],
[24,28,0,25,25,23,23,23,28],
[23,24,25,0,28,23,24,18,30],
[22,26,25,22,0,25,19,20,32],
[19,20,27,27,25,0,25,18,28],
[26,26,27,26,31,25,0,19,30],
[27,24,27,32,30,32,31,0,30],
[22,23,22,20,18,22,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,31,27,31,25,29,21,26],
[25,0,19,19,24,22,26,19,27],
[19,31,0,24,26,22,27,21,20],
[23,31,26,0,25,22,25,25,23],
[19,26,24,25,0,21,23,18,27],
[25,28,28,28,29,0,25,21,21],
[21,24,23,25,27,25,0,20,28],
[29,31,29,25,32,29,30,0,29],
[24,23,30,27,23,29,22,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,29,21,21,23,34,23,26],
[28,0,28,28,30,25,33,27,32],
[21,22,0,22,30,29,36,23,21],
[29,22,28,0,25,26,37,30,17],
[29,20,20,25,0,32,34,28,28],
[27,25,21,24,18,0,38,22,23],
[16,17,14,13,16,12,0,19,19],
[27,23,27,20,22,28,31,0,21],
[24,18,29,33,22,27,31,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,24,27,20,18,22,19,26],
[29,0,25,32,26,31,30,23,24],
[26,25,0,31,27,30,22,24,24],
[23,18,19,0,27,24,21,16,21],
[30,24,23,23,0,23,22,20,23],
[32,19,20,26,27,0,29,26,28],
[28,20,28,29,28,21,0,20,27],
[31,27,26,34,30,24,30,0,30],
[24,26,26,29,27,22,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,25,31,21,32,26,30,25],
[11,0,25,26,16,25,21,22,20],
[25,25,0,24,16,32,20,21,22],
[19,24,26,0,20,29,24,22,23],
[29,34,34,30,0,38,31,25,31],
[18,25,18,21,12,0,17,16,17],
[24,29,30,26,19,33,0,26,26],
[20,28,29,28,25,34,24,0,24],
[25,30,28,27,19,33,24,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,19,15,10,28,11,48,33],
[39,0,35,39,24,36,24,39,35],
[31,15,0,17,16,17,0,31,31],
[35,11,33,0,35,28,25,35,33],
[40,26,34,15,0,28,11,48,48],
[22,14,33,22,22,0,22,22,33],
[39,26,50,25,39,28,0,39,50],
[2,11,19,15,2,28,11,0,25],
[17,15,19,17,2,17,0,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,22,27,20,19,25,31,26],
[26,0,19,31,25,23,22,27,28],
[28,31,0,36,24,31,25,33,26],
[23,19,14,0,23,21,18,21,20],
[30,25,26,27,0,29,24,30,26],
[31,27,19,29,21,0,26,29,24],
[25,28,25,32,26,24,0,35,27],
[19,23,17,29,20,21,15,0,25],
[24,22,24,30,24,26,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,27,22,25,19,26,30,26],
[25,0,23,20,26,19,25,20,23],
[23,27,0,19,23,20,28,21,26],
[28,30,31,0,24,24,31,28,32],
[25,24,27,26,0,25,27,30,27],
[31,31,30,26,25,0,31,28,32],
[24,25,22,19,23,19,0,21,22],
[20,30,29,22,20,22,29,0,25],
[24,27,24,18,23,18,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,19,28,17,29,16,24],
[29,0,25,26,27,22,28,22,27],
[29,25,0,24,26,22,31,23,30],
[31,24,26,0,30,26,33,26,26],
[22,23,24,20,0,21,27,19,24],
[33,28,28,24,29,0,30,29,28],
[21,22,19,17,23,20,0,19,24],
[34,28,27,24,31,21,31,0,24],
[26,23,20,24,26,22,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,26,31,27,29,29,21,29],
[23,0,24,29,20,25,25,21,18],
[24,26,0,24,26,23,21,21,22],
[19,21,26,0,21,24,25,19,22],
[23,30,24,29,0,26,26,20,24],
[21,25,27,26,24,0,24,19,26],
[21,25,29,25,24,26,0,25,22],
[29,29,29,31,30,31,25,0,24],
[21,32,28,28,26,24,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,32,32,37,22,23,23,25],
[16,0,13,22,30,16,16,15,20],
[18,37,0,27,33,25,23,15,30],
[18,28,23,0,37,18,30,25,34],
[13,20,17,13,0,13,27,19,23],
[28,34,25,32,37,0,30,23,34],
[27,34,27,20,23,20,0,27,27],
[27,35,35,25,31,27,23,0,37],
[25,30,20,16,27,16,23,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,29,17,27,25,15,25,21],
[21,0,22,14,20,20,14,25,19],
[21,28,0,17,29,22,27,25,21],
[33,36,33,0,25,29,24,27,26],
[23,30,21,25,0,20,22,22,21],
[25,30,28,21,30,0,20,23,26],
[35,36,23,26,28,30,0,27,25],
[25,25,25,23,28,27,23,0,24],
[29,31,29,24,29,24,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,37,24,19,34,26,19],
[24,0,24,34,23,23,34,21,18],
[22,26,0,28,20,18,27,28,26],
[13,16,22,0,21,23,27,22,20],
[26,27,30,29,0,25,34,24,21],
[31,27,32,27,25,0,28,30,27],
[16,16,23,23,16,22,0,17,19],
[24,29,22,28,26,20,33,0,16],
[31,32,24,30,29,23,31,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,20,26,27,18,24,26,13],
[21,0,21,13,18,19,24,21,9],
[30,29,0,24,27,23,25,23,19],
[24,37,26,0,31,23,26,29,17],
[23,32,23,19,0,20,18,19,18],
[32,31,27,27,30,0,24,30,26],
[26,26,25,24,32,26,0,25,19],
[24,29,27,21,31,20,25,0,15],
[37,41,31,33,32,24,31,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,28,33,26,31,25,32,26],
[22,0,19,27,23,24,20,27,16],
[22,31,0,24,30,25,25,27,16],
[17,23,26,0,19,20,24,23,21],
[24,27,20,31,0,25,25,30,14],
[19,26,25,30,25,0,26,26,16],
[25,30,25,26,25,24,0,30,17],
[18,23,23,27,20,24,20,0,17],
[24,34,34,29,36,34,33,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,22,23,22,21,21,20],
[28,0,29,28,27,22,27,24,27],
[25,21,0,27,26,25,28,26,18],
[28,22,23,0,26,22,30,30,18],
[27,23,24,24,0,25,30,26,15],
[28,28,25,28,25,0,26,20,22],
[29,23,22,20,20,24,0,22,21],
[29,26,24,20,24,30,28,0,20],
[30,23,32,32,35,28,29,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,25,26,31,33,25,26],
[26,0,27,26,20,24,29,22,22],
[22,23,0,22,21,20,20,21,22],
[25,24,28,0,26,27,25,28,18],
[24,30,29,24,0,23,23,23,17],
[19,26,30,23,27,0,29,28,19],
[17,21,30,25,27,21,0,28,19],
[25,28,29,22,27,22,22,0,19],
[24,28,28,32,33,31,31,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,17,27,26,24,20,40,30],
[18,0,24,28,24,28,25,40,22],
[33,26,0,19,29,26,18,38,24],
[23,22,31,0,33,23,19,36,29],
[24,26,21,17,0,24,18,31,30],
[26,22,24,27,26,0,20,38,36],
[30,25,32,31,32,30,0,38,27],
[10,10,12,14,19,12,12,0,5],
[20,28,26,21,20,14,23,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,25,17,21,21,16,25,22],
[33,0,31,19,26,23,26,29,31],
[25,19,0,20,25,27,15,26,31],
[33,31,30,0,39,28,24,33,35],
[29,24,25,11,0,25,14,18,32],
[29,27,23,22,25,0,19,22,25],
[34,24,35,26,36,31,0,33,29],
[25,21,24,17,32,28,17,0,34],
[28,19,19,15,18,25,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,26,24,15,26,28,12,22],
[33,0,22,26,20,24,32,13,19],
[24,28,0,37,25,21,29,18,28],
[26,24,13,0,15,17,25,17,18],
[35,30,25,35,0,26,34,25,37],
[24,26,29,33,24,0,18,18,24],
[22,18,21,25,16,32,0,13,19],
[38,37,32,33,25,32,37,0,23],
[28,31,22,32,13,26,31,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,23,26,25,22,30,28,28],
[19,0,20,23,17,25,22,21,20],
[27,30,0,25,28,26,26,25,29],
[24,27,25,0,23,28,29,26,22],
[25,33,22,27,0,24,23,27,30],
[28,25,24,22,26,0,27,26,26],
[20,28,24,21,27,23,0,26,25],
[22,29,25,24,23,24,24,0,25],
[22,30,21,28,20,24,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,25,22,17,19,21,24,32],
[9,0,9,12,17,10,15,16,21],
[25,41,0,36,35,29,28,22,24],
[28,38,14,0,18,28,9,14,30],
[33,33,15,32,0,30,32,29,33],
[31,40,21,22,20,0,25,29,33],
[29,35,22,41,18,25,0,18,31],
[26,34,28,36,21,21,32,0,22],
[18,29,26,20,17,17,19,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,25,28,31,20,20,23],
[27,0,25,29,29,28,19,30,23],
[24,25,0,30,29,31,25,29,25],
[25,21,20,0,30,25,22,25,22],
[22,21,21,20,0,28,14,25,24],
[19,22,19,25,22,0,18,16,22],
[30,31,25,28,36,32,0,26,23],
[30,20,21,25,25,34,24,0,27],
[27,27,25,28,26,28,27,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,28,33,27,30,23,25,26],
[23,0,30,31,28,31,31,24,25],
[22,20,0,20,21,26,18,21,22],
[17,19,30,0,21,29,22,21,21],
[23,22,29,29,0,27,21,28,22],
[20,19,24,21,23,0,16,18,20],
[27,19,32,28,29,34,0,27,21],
[25,26,29,29,22,32,23,0,23],
[24,25,28,29,28,30,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,27,32,27,16,27,43,35],
[18,0,23,12,15,15,39,36,23],
[23,27,0,19,11,15,35,35,27],
[18,38,31,0,15,31,31,46,30],
[23,35,39,35,0,28,28,43,30],
[34,35,35,19,22,0,38,49,43],
[23,11,15,19,22,12,0,30,27],
[7,14,15,4,7,1,20,0,15],
[15,27,23,20,20,7,23,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,22,26,15,22,24,20,25],
[27,0,25,35,29,26,31,30,31],
[28,25,0,33,22,29,28,26,29],
[24,15,17,0,20,20,24,16,21],
[35,21,28,30,0,22,31,31,33],
[28,24,21,30,28,0,28,28,29],
[26,19,22,26,19,22,0,24,25],
[30,20,24,34,19,22,26,0,28],
[25,19,21,29,17,21,25,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,27,28,23,30,27,22],
[29,0,24,32,31,28,30,28,28],
[27,26,0,31,30,23,27,27,25],
[23,18,19,0,24,21,21,23,20],
[22,19,20,26,0,18,23,23,23],
[27,22,27,29,32,0,28,27,23],
[20,20,23,29,27,22,0,28,18],
[23,22,23,27,27,23,22,0,24],
[28,22,25,30,27,27,32,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,28,25,30,25,18,18],
[37,0,35,38,18,36,32,17,23],
[32,15,0,24,18,26,21,26,14],
[22,12,26,0,15,30,22,20,11],
[25,32,32,35,0,40,26,19,27],
[20,14,24,20,10,0,25,19,13],
[25,18,29,28,24,25,0,21,17],
[32,33,24,30,31,31,29,0,32],
[32,27,36,39,23,37,33,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,0,32,0,0,7,7,23],
[41,0,0,32,20,14,7,18,34],
[50,50,0,50,27,30,25,41,43],
[18,18,0,0,11,7,18,18,34],
[50,30,23,39,0,30,16,23,23],
[50,36,20,43,20,0,27,27,43],
[43,43,25,32,34,23,0,50,50],
[43,32,9,32,27,23,0,0,25],
[27,16,7,16,27,7,0,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,30,31,25,33,26,32,26],
[23,0,24,22,23,29,23,25,25],
[20,26,0,22,24,29,20,20,21],
[19,28,28,0,21,27,21,24,26],
[25,27,26,29,0,31,25,29,24],
[17,21,21,23,19,0,24,20,20],
[24,27,30,29,25,26,0,25,22],
[18,25,30,26,21,30,25,0,19],
[24,25,29,24,26,30,28,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,31,29,25,34,32,31],
[26,0,21,29,21,24,28,35,29],
[27,29,0,28,33,24,30,35,32],
[19,21,22,0,21,16,25,26,18],
[21,29,17,29,0,22,31,25,33],
[25,26,26,34,28,0,35,28,30],
[16,22,20,25,19,15,0,22,28],
[18,15,15,24,25,22,28,0,30],
[19,21,18,32,17,20,22,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,26,24,21,27,28,29,25],
[31,0,30,26,29,31,25,33,26],
[24,20,0,27,20,24,21,26,20],
[26,24,23,0,22,22,22,26,25],
[29,21,30,28,0,25,28,37,30],
[23,19,26,28,25,0,25,25,19],
[22,25,29,28,22,25,0,25,26],
[21,17,24,24,13,25,25,0,18],
[25,24,30,25,20,31,24,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,38,29,39,39,27,29,40],
[32,0,34,35,41,31,23,20,30],
[12,16,0,35,36,21,26,10,24],
[21,15,15,0,19,16,11,8,15],
[11,9,14,31,0,21,24,5,18],
[11,19,29,34,29,0,23,14,24],
[23,27,24,39,26,27,0,19,29],
[21,30,40,42,45,36,31,0,37],
[10,20,26,35,32,26,21,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,28,25,34,27,22,30,30],
[30,0,24,23,32,28,20,36,32],
[22,26,0,35,34,19,17,33,30],
[25,27,15,0,31,24,17,27,20],
[16,18,16,19,0,12,17,21,23],
[23,22,31,26,38,0,27,32,30],
[28,30,33,33,33,23,0,33,27],
[20,14,17,23,29,18,17,0,20],
[20,18,20,30,27,20,23,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,37,28,27,28,29,27],
[25,0,22,35,18,17,20,24,23],
[25,28,0,34,28,20,23,31,22],
[13,15,16,0,15,17,21,22,6],
[22,32,22,35,0,22,36,37,28],
[23,33,30,33,28,0,39,33,27],
[22,30,27,29,14,11,0,31,25],
[21,26,19,28,13,17,19,0,17],
[23,27,28,44,22,23,25,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,28,29,21,20,25,29,28],
[27,0,30,20,22,24,39,29,19],
[22,20,0,24,20,24,27,20,22],
[21,30,26,0,27,25,33,31,23],
[29,28,30,23,0,25,31,30,21],
[30,26,26,25,25,0,31,32,22],
[25,11,23,17,19,19,0,24,18],
[21,21,30,19,20,18,26,0,24],
[22,31,28,27,29,28,32,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,25,19,28,21,25,29,23],
[22,0,23,20,26,21,26,26,24],
[25,27,0,20,24,24,21,22,22],
[31,30,30,0,26,25,24,29,23],
[22,24,26,24,0,24,21,22,26],
[29,29,26,25,26,0,27,27,21],
[25,24,29,26,29,23,0,26,24],
[21,24,28,21,28,23,24,0,25],
[27,26,28,27,24,29,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,23,21,23,26,27,19],
[28,0,23,25,29,27,28,32,24],
[27,27,0,28,28,25,30,26,23],
[27,25,22,0,25,22,28,25,24],
[29,21,22,25,0,22,23,28,23],
[27,23,25,28,28,0,29,30,28],
[24,22,20,22,27,21,0,30,27],
[23,18,24,25,22,20,20,0,21],
[31,26,27,26,27,22,23,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,25,28,30,25,25,36,27],
[15,0,30,27,21,25,28,15,22],
[25,20,0,29,21,25,23,25,24],
[22,23,21,0,16,28,15,26,17],
[20,29,29,34,0,26,25,23,26],
[25,25,25,22,24,0,21,26,15],
[25,22,27,35,25,29,0,18,20],
[14,35,25,24,27,24,32,0,22],
[23,28,26,33,24,35,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,31,30,23,24,27,29,29],
[21,0,35,30,25,27,27,27,29],
[19,15,0,15,17,9,20,18,18],
[20,20,35,0,21,23,26,28,22],
[27,25,33,29,0,24,23,33,28],
[26,23,41,27,26,0,30,29,24],
[23,23,30,24,27,20,0,26,26],
[21,23,32,22,17,21,24,0,25],
[21,21,32,28,22,26,24,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,17,26,20,19,25,25,25],
[23,0,19,28,23,25,21,27,28],
[33,31,0,29,33,24,27,29,34],
[24,22,21,0,26,21,17,26,26],
[30,27,17,24,0,23,21,27,26],
[31,25,26,29,27,0,26,26,28],
[25,29,23,33,29,24,0,28,26],
[25,23,21,24,23,24,22,0,22],
[25,22,16,24,24,22,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,38,25,26,32,30,31,28],
[16,0,28,19,22,30,23,26,19],
[12,22,0,15,17,21,24,23,26],
[25,31,35,0,23,31,25,26,31],
[24,28,33,27,0,28,27,25,29],
[18,20,29,19,22,0,22,25,27],
[20,27,26,25,23,28,0,23,29],
[19,24,27,24,25,25,27,0,24],
[22,31,24,19,21,23,21,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,26,24,25,28,21,19],
[31,0,21,25,23,27,24,24,23],
[33,29,0,23,31,29,33,29,30],
[24,25,27,0,24,27,28,24,24],
[26,27,19,26,0,24,27,25,22],
[25,23,21,23,26,0,27,21,23],
[22,26,17,22,23,23,0,22,17],
[29,26,21,26,25,29,28,0,27],
[31,27,20,26,28,27,33,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,24,24,22,27,28,25],
[24,0,22,24,19,26,29,27,22],
[25,28,0,26,26,28,28,27,29],
[26,26,24,0,20,28,24,29,21],
[26,31,24,30,0,25,26,30,26],
[28,24,22,22,25,0,19,27,19],
[23,21,22,26,24,31,0,26,21],
[22,23,23,21,20,23,24,0,24],
[25,28,21,29,24,31,29,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,33,15,21,29,25,25],
[29,0,23,21,21,29,25,23,29],
[29,27,0,31,33,18,27,14,18],
[17,29,19,0,17,25,17,11,29],
[35,29,17,33,0,35,35,20,35],
[29,21,32,25,15,0,27,14,29],
[21,25,23,33,15,23,0,15,27],
[25,27,36,39,30,36,35,0,40],
[25,21,32,21,15,21,23,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,21,26,29,23,23,24,21],
[27,0,30,30,31,22,35,30,32],
[29,20,0,18,21,32,11,23,14],
[24,20,32,0,32,32,24,42,18],
[21,19,29,18,0,25,15,18,18],
[27,28,18,18,25,0,18,28,19],
[27,15,39,26,35,32,0,41,19],
[26,20,27,8,32,22,9,0,13],
[29,18,36,32,32,31,31,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,29,32,29,35,40,34],
[26,0,31,21,26,38,29,28,28],
[22,19,0,37,31,23,43,34,42],
[21,29,13,0,11,17,19,16,30],
[18,24,19,39,0,27,19,24,42],
[21,12,27,33,23,0,32,38,29],
[15,21,7,31,31,18,0,33,30],
[10,22,16,34,26,12,17,0,28],
[16,22,8,20,8,21,20,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,34,23,21,27,16,27],
[31,0,28,30,29,27,31,25,31],
[32,22,0,31,31,30,29,22,28],
[16,20,19,0,17,20,24,19,22],
[27,21,19,33,0,20,21,18,25],
[29,23,20,30,30,0,25,23,25],
[23,19,21,26,29,25,0,27,23],
[34,25,28,31,32,27,23,0,29],
[23,19,22,28,25,25,27,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,22,15,31,21,24,18,15],
[29,0,14,28,19,24,31,19,17],
[28,36,0,22,29,34,31,25,39],
[35,22,28,0,33,25,38,11,23],
[19,31,21,17,0,30,22,18,24],
[29,26,16,25,20,0,28,19,21],
[26,19,19,12,28,22,0,12,22],
[32,31,25,39,32,31,38,0,32],
[35,33,11,27,26,29,28,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,18,14,26,13,31,27,26],
[24,0,29,19,38,29,29,38,37],
[32,21,0,13,24,17,13,24,45],
[36,31,37,0,34,28,24,39,45],
[24,12,26,16,0,15,26,33,39],
[37,21,33,22,35,0,26,46,34],
[19,21,37,26,24,24,0,39,39],
[23,12,26,11,17,4,11,0,28],
[24,13,5,5,11,16,11,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,29,30,32,26,31,22,25],
[24,0,29,25,25,22,25,22,23],
[21,21,0,32,27,25,22,30,24],
[20,25,18,0,26,20,27,21,18],
[18,25,23,24,0,22,17,22,20],
[24,28,25,30,28,0,29,20,31],
[19,25,28,23,33,21,0,23,25],
[28,28,20,29,28,30,27,0,22],
[25,27,26,32,30,19,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,21,29,22,25,24,28],
[24,0,26,25,24,16,23,25,26],
[24,24,0,26,26,19,22,25,23],
[29,25,24,0,28,22,24,25,23],
[21,26,24,22,0,15,18,19,24],
[28,34,31,28,35,0,31,25,32],
[25,27,28,26,32,19,0,25,26],
[26,25,25,25,31,25,25,0,28],
[22,24,27,27,26,18,24,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,35,35,21,28,26,28,25],
[18,0,31,23,27,26,20,24,30],
[15,19,0,17,22,24,12,24,29],
[15,27,33,0,32,22,27,23,20],
[29,23,28,18,0,24,24,29,18],
[22,24,26,28,26,0,15,21,28],
[24,30,38,23,26,35,0,30,28],
[22,26,26,27,21,29,20,0,34],
[25,20,21,30,32,22,22,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,28,26,30,23,20,21,21],
[27,0,28,26,28,26,26,26,24],
[22,22,0,24,25,18,23,18,22],
[24,24,26,0,27,22,24,23,22],
[20,22,25,23,0,21,21,19,16],
[27,24,32,28,29,0,25,24,25],
[30,24,27,26,29,25,0,24,24],
[29,24,32,27,31,26,26,0,30],
[29,26,28,28,34,25,26,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,23,24,24,33,17,33],
[26,0,30,21,25,25,35,27,28],
[24,20,0,17,19,20,30,27,28],
[27,29,33,0,22,24,31,30,36],
[26,25,31,28,0,31,35,27,35],
[26,25,30,26,19,0,32,26,28],
[17,15,20,19,15,18,0,20,24],
[33,23,23,20,23,24,30,0,30],
[17,22,22,14,15,22,26,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,24,21,25,28,20,19],
[29,0,26,25,21,33,25,27,27],
[25,24,0,24,16,31,21,24,23],
[26,25,26,0,21,34,25,27,25],
[29,29,34,29,0,32,27,29,24],
[25,17,19,16,18,0,25,25,22],
[22,25,29,25,23,25,0,23,22],
[30,23,26,23,21,25,27,0,28],
[31,23,27,25,26,28,28,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,24,27,25,21,20,26],
[26,0,22,21,25,23,15,17,22],
[22,28,0,19,25,21,17,14,22],
[26,29,31,0,25,26,23,25,29],
[23,25,25,25,0,23,18,21,28],
[25,27,29,24,27,0,22,28,31],
[29,35,33,27,32,28,0,24,31],
[30,33,36,25,29,22,26,0,31],
[24,28,28,21,22,19,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,21,27,23,24,19,21],
[28,0,24,26,29,25,24,25,25],
[26,26,0,17,25,25,25,21,21],
[29,24,33,0,27,28,28,23,23],
[23,21,25,23,0,21,27,19,22],
[27,25,25,22,29,0,21,23,21],
[26,26,25,22,23,29,0,11,17],
[31,25,29,27,31,27,39,0,27],
[29,25,29,27,28,29,33,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,28,24,29,30,32,28,30],
[18,0,19,20,22,20,25,20,21],
[22,31,0,26,23,23,27,26,25],
[26,30,24,0,23,25,24,25,21],
[21,28,27,27,0,22,24,25,25],
[20,30,27,25,28,0,26,29,24],
[18,25,23,26,26,24,0,26,30],
[22,30,24,25,25,21,24,0,25],
[20,29,25,29,25,26,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,28,27,24,26,30,21,27],
[21,0,23,31,27,28,28,23,18],
[22,27,0,25,30,23,30,20,19],
[23,19,25,0,26,27,27,24,22],
[26,23,20,24,0,25,22,14,19],
[24,22,27,23,25,0,25,25,18],
[20,22,20,23,28,25,0,19,20],
[29,27,30,26,36,25,31,0,25],
[23,32,31,28,31,32,30,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,46,27,29,20,39,37,47],
[32,0,32,20,32,33,32,20,30],
[4,18,0,21,20,20,33,30,30],
[23,30,29,0,22,33,22,30,30],
[21,18,30,28,0,33,49,37,37],
[30,17,30,17,17,0,39,27,27],
[11,18,17,28,1,11,0,18,18],
[13,30,20,20,13,23,32,0,27],
[3,20,20,20,13,23,32,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,25,27,36,23,37,25,16],
[11,0,11,13,23,11,23,11,2],
[25,39,0,24,36,34,34,47,25],
[23,37,26,0,34,34,23,45,23],
[14,27,14,16,0,11,26,25,16],
[27,39,16,16,39,0,28,27,16],
[13,27,16,27,24,22,0,24,13],
[25,39,3,5,25,23,26,0,14],
[34,48,25,27,34,34,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,12,26,22,22,24,24,19],
[32,0,29,27,20,26,17,29,20],
[38,21,0,36,21,26,26,37,36],
[24,23,14,0,20,29,28,23,35],
[28,30,29,30,0,25,35,35,29],
[28,24,24,21,25,0,24,28,24],
[26,33,24,22,15,26,0,28,24],
[26,21,13,27,15,22,22,0,20],
[31,30,14,15,21,26,26,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,24,30,30,25,21,23,27],
[21,0,30,22,28,26,28,20,30],
[26,20,0,24,28,32,30,22,32],
[20,28,26,0,27,23,21,30,25],
[20,22,22,23,0,23,21,23,29],
[25,24,18,27,27,0,20,21,30],
[29,22,20,29,29,30,0,24,29],
[27,30,28,20,27,29,26,0,29],
[23,20,18,25,21,20,21,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,49,42,27,37,30,36,25],
[14,0,49,36,30,24,25,49,19],
[1,1,0,13,15,9,25,23,12],
[8,14,37,0,17,31,31,29,12],
[23,20,35,33,0,24,30,40,29],
[13,26,41,19,26,0,22,35,24],
[20,25,25,19,20,28,0,36,20],
[14,1,27,21,10,15,14,0,7],
[25,31,38,38,21,26,30,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,22,15,26,26,23,24,31],
[26,0,16,18,21,32,22,19,28],
[28,34,0,25,25,33,24,23,30],
[35,32,25,0,33,30,25,31,32],
[24,29,25,17,0,33,25,22,29],
[24,18,17,20,17,0,22,21,29],
[27,28,26,25,25,28,0,28,28],
[26,31,27,19,28,29,22,0,28],
[19,22,20,18,21,21,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,24,33,24,30,20,22,28],
[22,0,21,34,28,32,27,28,27],
[26,29,0,30,23,33,26,20,32],
[17,16,20,0,25,25,20,19,24],
[26,22,27,25,0,30,25,22,32],
[20,18,17,25,20,0,18,22,24],
[30,23,24,30,25,32,0,25,29],
[28,22,30,31,28,28,25,0,35],
[22,23,18,26,18,26,21,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,25,23,38,25,28,30,30],
[22,0,20,25,30,28,21,23,32],
[25,30,0,30,29,33,37,35,27],
[27,25,20,0,29,31,30,30,29],
[12,20,21,21,0,28,25,23,22],
[25,22,17,19,22,0,25,22,19],
[22,29,13,20,25,25,0,30,27],
[20,27,15,20,27,28,20,0,19],
[20,18,23,21,28,31,23,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,26,26,32,23,27,27,21],
[19,0,27,29,25,18,27,29,23],
[24,23,0,26,24,18,26,26,17],
[24,21,24,0,26,20,28,20,18],
[18,25,26,24,0,19,27,25,20],
[27,32,32,30,31,0,30,28,25],
[23,23,24,22,23,20,0,25,18],
[23,21,24,30,25,22,25,0,20],
[29,27,33,32,30,25,32,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,22,24,28,21,22,20,17],
[22,0,20,24,25,19,23,22,22],
[28,30,0,32,23,25,31,25,24],
[26,26,18,0,20,20,21,26,20],
[22,25,27,30,0,23,23,17,24],
[29,31,25,30,27,0,24,28,24],
[28,27,19,29,27,26,0,26,20],
[30,28,25,24,33,22,24,0,28],
[33,28,26,30,26,26,30,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,28,30,26,29,26,28,26],
[29,0,22,29,21,26,24,30,24],
[22,28,0,20,18,21,16,27,23],
[20,21,30,0,21,25,27,26,24],
[24,29,32,29,0,30,23,25,34],
[21,24,29,25,20,0,23,24,31],
[24,26,34,23,27,27,0,24,29],
[22,20,23,24,25,26,26,0,26],
[24,26,27,26,16,19,21,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,24,31,26,31,30,30,28],
[21,0,20,26,24,27,28,25,22],
[26,30,0,31,25,27,28,24,30],
[19,24,19,0,22,23,25,27,28],
[24,26,25,28,0,27,25,28,31],
[19,23,23,27,23,0,26,24,24],
[20,22,22,25,25,24,0,29,28],
[20,25,26,23,22,26,21,0,28],
[22,28,20,22,19,26,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,31,32,29,38,32,24],
[25,0,22,24,19,31,27,22,22],
[21,28,0,26,29,24,28,22,27],
[19,26,24,0,30,30,34,33,23],
[18,31,21,20,0,23,31,25,23],
[21,19,26,20,27,0,28,25,24],
[12,23,22,16,19,22,0,24,22],
[18,28,28,17,25,25,26,0,26],
[26,28,23,27,27,26,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,22,23,23,30,23,25,28],
[32,0,25,29,28,33,26,22,26],
[28,25,0,27,29,29,28,23,27],
[27,21,23,0,25,33,25,25,31],
[27,22,21,25,0,26,22,19,19],
[20,17,21,17,24,0,22,18,23],
[27,24,22,25,28,28,0,26,31],
[25,28,27,25,31,32,24,0,29],
[22,24,23,19,31,27,19,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,23,16,30,33,26,32,11],
[19,0,23,17,27,28,34,28,17],
[27,27,0,21,30,31,23,37,31],
[34,33,29,0,38,36,40,36,25],
[20,23,20,12,0,24,26,33,20],
[17,22,19,14,26,0,30,39,16],
[24,16,27,10,24,20,0,25,14],
[18,22,13,14,17,11,25,0,8],
[39,33,19,25,30,34,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,24,17,27,11,16,17,18],
[37,0,31,32,29,24,27,18,27],
[26,19,0,30,33,15,19,20,12],
[33,18,20,0,23,17,18,21,13],
[23,21,17,27,0,19,18,9,15],
[39,26,35,33,31,0,36,24,28],
[34,23,31,32,32,14,0,26,25],
[33,32,30,29,41,26,24,0,25],
[32,23,38,37,35,22,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,25,30,30,24,30,35],
[24,0,30,24,27,29,21,28,28],
[25,20,0,23,23,32,20,26,32],
[25,26,27,0,23,33,29,27,23],
[20,23,27,27,0,32,18,25,32],
[20,21,18,17,18,0,17,17,23],
[26,29,30,21,32,33,0,23,33],
[20,22,24,23,25,33,27,0,28],
[15,22,18,27,18,27,17,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,21,17,17,18,26,11],
[31,0,17,18,17,26,19,29,20],
[29,33,0,26,11,27,20,32,21],
[29,32,24,0,25,20,18,31,19],
[33,33,39,25,0,29,25,41,29],
[33,24,23,30,21,0,25,36,25],
[32,31,30,32,25,25,0,37,22],
[24,21,18,19,9,14,13,0,16],
[39,30,29,31,21,25,28,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,16,19,21,21,26,22],
[26,0,26,21,23,24,26,25,20],
[27,24,0,18,21,17,26,22,25],
[34,29,32,0,33,27,32,28,24],
[31,27,29,17,0,19,22,27,23],
[29,26,33,23,31,0,32,26,24],
[29,24,24,18,28,18,0,23,21],
[24,25,28,22,23,24,27,0,14],
[28,30,25,26,27,26,29,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,20,23,21,24,20,23,25],
[27,0,25,22,22,26,24,23,29],
[30,25,0,23,22,19,25,25,24],
[27,28,27,0,30,22,28,27,29],
[29,28,28,20,0,22,23,20,26],
[26,24,31,28,28,0,23,29,27],
[30,26,25,22,27,27,0,27,31],
[27,27,25,23,30,21,23,0,25],
[25,21,26,21,24,23,19,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,34,23,30,31,30,30,34],
[23,0,17,28,25,21,23,23,29],
[16,33,0,30,25,29,31,26,31],
[27,22,20,0,23,16,20,20,26],
[20,25,25,27,0,22,29,20,28],
[19,29,21,34,28,0,30,24,30],
[20,27,19,30,21,20,0,16,27],
[20,27,24,30,30,26,34,0,26],
[16,21,19,24,22,20,23,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,29,29,32,27,27,23,29],
[22,0,21,24,24,19,23,20,25],
[21,29,0,27,29,22,27,26,26],
[21,26,23,0,31,21,27,21,29],
[18,26,21,19,0,23,24,17,23],
[23,31,28,29,27,0,25,21,31],
[23,27,23,23,26,25,0,21,28],
[27,30,24,29,33,29,29,0,34],
[21,25,24,21,27,19,22,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,13,40,29,38,26,27],
[27,0,28,24,33,29,34,23,26],
[33,22,0,32,33,26,28,27,25],
[37,26,18,0,33,39,28,34,25],
[10,17,17,17,0,25,22,14,20],
[21,21,24,11,25,0,29,28,18],
[12,16,22,22,28,21,0,14,18],
[24,27,23,16,36,22,36,0,21],
[23,24,25,25,30,32,32,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,25,33,24,21,27,27],
[26,0,27,23,22,24,31,28,23],
[22,23,0,14,31,22,27,22,21],
[25,27,36,0,29,30,27,35,28],
[17,28,19,21,0,25,30,22,24],
[26,26,28,20,25,0,28,25,22],
[29,19,23,23,20,22,0,32,24],
[23,22,28,15,28,25,18,0,19],
[23,27,29,22,26,28,26,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,21,24,33,28,26,34,34],
[20,0,15,17,30,13,27,19,27],
[29,35,0,34,28,25,29,26,33],
[26,33,16,0,29,22,39,27,27],
[17,20,22,21,0,18,25,18,28],
[22,37,25,28,32,0,33,31,22],
[24,23,21,11,25,17,0,28,27],
[16,31,24,23,32,19,22,0,23],
[16,23,17,23,22,28,23,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,25,26,30,25,22,25],
[25,0,26,26,26,24,25,29,29],
[26,24,0,27,22,24,17,24,15],
[25,24,23,0,27,25,25,22,17],
[24,24,28,23,0,24,21,22,22],
[20,26,26,25,26,0,20,25,22],
[25,25,33,25,29,30,0,26,18],
[28,21,26,28,28,25,24,0,21],
[25,21,35,33,28,28,32,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,18,26,29,48,33,31,17],
[39,0,32,30,28,42,40,23,30],
[32,18,0,31,39,39,26,34,18],
[24,20,19,0,15,27,20,25,18],
[21,22,11,35,0,42,37,34,22],
[2,8,11,23,8,0,23,18,9],
[17,10,24,30,13,27,0,24,17],
[19,27,16,25,16,32,26,0,19],
[33,20,32,32,28,41,33,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,24,24,28,22,25,27,29],
[24,0,23,23,27,20,23,24,28],
[26,27,0,19,29,18,21,22,20],
[26,27,31,0,28,28,24,20,33],
[22,23,21,22,0,23,25,20,29],
[28,30,32,22,27,0,32,32,30],
[25,27,29,26,25,18,0,23,29],
[23,26,28,30,30,18,27,0,30],
[21,22,30,17,21,20,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,29,29,31,28,24,22],
[23,0,29,26,26,31,28,17,21],
[23,21,0,23,24,25,25,24,17],
[21,24,27,0,20,26,25,22,18],
[21,24,26,30,0,23,23,19,20],
[19,19,25,24,27,0,25,16,22],
[22,22,25,25,27,25,0,17,14],
[26,33,26,28,31,34,33,0,25],
[28,29,33,32,30,28,36,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,20,25,23,29,25,20,28],
[36,0,32,29,25,32,19,25,24],
[30,18,0,23,16,25,28,27,21],
[25,21,27,0,30,30,26,28,20],
[27,25,34,20,0,34,28,16,26],
[21,18,25,20,16,0,23,27,16],
[25,31,22,24,22,27,0,24,21],
[30,25,23,22,34,23,26,0,23],
[22,26,29,30,24,34,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,30,27,27,25,25,28,24],
[24,0,25,28,21,24,22,24,32],
[20,25,0,31,30,21,27,20,19],
[23,22,19,0,26,24,24,22,20],
[23,29,20,24,0,27,25,29,20],
[25,26,29,26,23,0,23,22,33],
[25,28,23,26,25,27,0,22,31],
[22,26,30,28,21,28,28,0,30],
[26,18,31,30,30,17,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,20,20,23,20,21,27],
[31,0,25,35,30,33,33,26,34],
[31,25,0,25,22,27,29,22,27],
[30,15,25,0,21,24,19,18,29],
[30,20,28,29,0,33,21,23,32],
[27,17,23,26,17,0,15,18,21],
[30,17,21,31,29,35,0,27,30],
[29,24,28,32,27,32,23,0,29],
[23,16,23,21,18,29,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,36,39,21,29,23,43,36],
[21,0,33,28,20,26,26,28,28],
[14,17,0,20,13,15,15,21,21],
[11,22,30,0,28,25,16,29,32],
[29,30,37,22,0,29,27,43,25],
[21,24,35,25,21,0,11,35,32],
[27,24,35,34,23,39,0,38,38],
[7,22,29,21,7,15,12,0,18],
[14,22,29,18,25,18,12,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,21,13,18,21,23,16,23],
[33,0,27,22,31,23,27,16,30],
[29,23,0,21,33,26,23,29,29],
[37,28,29,0,32,33,26,20,42],
[32,19,17,18,0,21,20,18,24],
[29,27,24,17,29,0,26,25,25],
[27,23,27,24,30,24,0,20,30],
[34,34,21,30,32,25,30,0,32],
[27,20,21,8,26,25,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,26,17,21,17,17,14,21],
[31,0,28,26,25,26,33,25,17],
[24,22,0,22,22,17,16,19,24],
[33,24,28,0,25,16,26,27,25],
[29,25,28,25,0,16,22,24,21],
[33,24,33,34,34,0,24,27,29],
[33,17,34,24,28,26,0,21,26],
[36,25,31,23,26,23,29,0,30],
[29,33,26,25,29,21,24,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,29,29,47,47,39,32,21],
[3,0,21,11,50,3,21,3,21],
[21,29,0,32,47,21,39,29,39],
[21,39,18,0,39,39,39,21,18],
[3,0,3,11,0,3,21,3,21],
[3,47,29,11,47,0,42,32,21],
[11,29,11,11,29,8,0,32,29],
[18,47,21,29,47,18,18,0,21],
[29,29,11,32,29,29,21,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,30,29,24,24,26,28,24],
[29,0,29,30,28,27,25,30,29],
[20,21,0,25,18,24,19,23,26],
[21,20,25,0,21,23,19,18,23],
[26,22,32,29,0,27,24,22,26],
[26,23,26,27,23,0,23,23,20],
[24,25,31,31,26,27,0,23,28],
[22,20,27,32,28,27,27,0,31],
[26,21,24,27,24,30,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,23,24,24,16,17,22,29],
[35,0,23,37,30,30,30,28,35],
[27,27,0,29,16,16,22,20,27],
[26,13,21,0,28,37,37,19,35],
[26,20,34,22,0,42,15,11,22],
[34,20,34,13,8,0,13,11,22],
[33,20,28,13,35,37,0,11,40],
[28,22,30,31,39,39,39,0,37],
[21,15,23,15,28,28,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,15,21,29,19,5,19,24],
[37,0,25,29,32,27,16,24,31],
[35,25,0,28,32,25,12,20,31],
[29,21,22,0,25,26,11,23,25],
[21,18,18,25,0,22,19,27,22],
[31,23,25,24,28,0,29,19,25],
[45,34,38,39,31,21,0,36,39],
[31,26,30,27,23,31,14,0,33],
[26,19,19,25,28,25,11,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,31,32,28,27,28,23],
[28,0,25,30,33,33,24,24,34],
[28,25,0,29,32,27,29,27,30],
[19,20,21,0,27,22,15,21,25],
[18,17,18,23,0,21,23,17,25],
[22,17,23,28,29,0,27,20,22],
[23,26,21,35,27,23,0,23,24],
[22,26,23,29,33,30,27,0,31],
[27,16,20,25,25,28,26,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,31,22,25,33,34,33],
[32,0,26,30,25,31,32,39,31],
[32,24,0,35,26,29,35,34,38],
[19,20,15,0,23,26,24,24,27],
[28,25,24,27,0,28,27,25,26],
[25,19,21,24,22,0,36,26,27],
[17,18,15,26,23,14,0,20,16],
[16,11,16,26,25,24,30,0,21],
[17,19,12,23,24,23,34,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,23,22,23,23,22,26,20],
[31,0,26,28,30,24,31,30,27],
[27,24,0,37,30,19,31,28,21],
[28,22,13,0,20,15,24,25,15],
[27,20,20,30,0,23,29,26,18],
[27,26,31,35,27,0,30,28,22],
[28,19,19,26,21,20,0,24,18],
[24,20,22,25,24,22,26,0,17],
[30,23,29,35,32,28,32,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,25,19,24,26,25,24,20],
[33,0,31,29,26,33,25,31,31],
[25,19,0,19,22,24,25,26,23],
[31,21,31,0,26,26,26,29,24],
[26,24,28,24,0,24,31,30,24],
[24,17,26,24,26,0,28,27,23],
[25,25,25,24,19,22,0,23,23],
[26,19,24,21,20,23,27,0,23],
[30,19,27,26,26,27,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,23,21,29,22,8,12,23],
[44,0,39,32,44,40,24,29,28],
[27,11,0,22,18,22,8,23,15],
[29,18,28,0,24,27,19,26,29],
[21,6,32,26,0,21,5,15,27],
[28,10,28,23,29,0,9,16,25],
[42,26,42,31,45,41,0,22,38],
[38,21,27,24,35,34,28,0,25],
[27,22,35,21,23,25,12,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,28,29,34,25,33,27,33],
[29,0,19,21,26,19,29,28,24],
[22,31,0,27,29,21,30,20,23],
[21,29,23,0,31,25,30,24,23],
[16,24,21,19,0,21,22,16,20],
[25,31,29,25,29,0,29,23,23],
[17,21,20,20,28,21,0,23,19],
[23,22,30,26,34,27,27,0,25],
[17,26,27,27,30,27,31,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,25,30,27,37,27,31,38],
[17,0,8,25,22,24,28,25,34],
[25,42,0,28,32,36,37,32,37],
[20,25,22,0,27,31,24,30,26],
[23,28,18,23,0,29,26,24,28],
[13,26,14,19,21,0,21,21,29],
[23,22,13,26,24,29,0,21,29],
[19,25,18,20,26,29,29,0,31],
[12,16,13,24,22,21,21,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,24,28,22,22,33,25],
[26,0,24,26,28,21,26,33,27],
[25,26,0,26,28,26,20,30,27],
[26,24,24,0,29,25,23,33,25],
[22,22,22,21,0,26,24,26,26],
[28,29,24,25,24,0,21,34,24],
[28,24,30,27,26,29,0,32,28],
[17,17,20,17,24,16,18,0,20],
[25,23,23,25,24,26,22,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,21,19,22,25,26,25,28],
[24,0,22,26,25,28,25,22,29],
[29,28,0,25,28,28,27,30,27],
[31,24,25,0,31,30,21,29,31],
[28,25,22,19,0,32,21,23,28],
[25,22,22,20,18,0,25,23,24],
[24,25,23,29,29,25,0,24,26],
[25,28,20,21,27,27,26,0,28],
[22,21,23,19,22,26,24,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,25,24,24,27,23,22,26],
[30,0,30,27,31,31,28,29,25],
[25,20,0,25,23,31,29,26,23],
[26,23,25,0,24,25,26,29,23],
[26,19,27,26,0,28,27,27,24],
[23,19,19,25,22,0,23,26,23],
[27,22,21,24,23,27,0,25,23],
[28,21,24,21,23,24,25,0,29],
[24,25,27,27,26,27,27,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,27,20,24,26,27,26,28],
[30,0,30,22,27,31,34,24,30],
[23,20,0,22,21,21,25,20,24],
[30,28,28,0,27,38,30,24,28],
[26,23,29,23,0,27,28,20,31],
[24,19,29,12,23,0,25,22,24],
[23,16,25,20,22,25,0,20,26],
[24,26,30,26,30,28,30,0,28],
[22,20,26,22,19,26,24,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,23,22,24,15,24,27,17],
[31,0,24,24,33,23,27,33,28],
[27,26,0,22,26,17,27,27,21],
[28,26,28,0,23,22,25,30,26],
[26,17,24,27,0,21,26,22,21],
[35,27,33,28,29,0,36,34,24],
[26,23,23,25,24,14,0,24,23],
[23,17,23,20,28,16,26,0,12],
[33,22,29,24,29,26,27,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,23,29,23,32,17,28,27],
[19,0,15,19,15,26,16,18,11],
[27,35,0,24,23,28,29,27,19],
[21,31,26,0,20,36,14,22,24],
[27,35,27,30,0,31,32,25,23],
[18,24,22,14,19,0,24,18,15],
[33,34,21,36,18,26,0,30,26],
[22,32,23,28,25,32,20,0,30],
[23,39,31,26,27,35,24,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,26,25,16,21,25,21],
[28,0,20,30,27,24,21,21,18],
[29,30,0,27,29,13,16,22,21],
[24,20,23,0,26,18,22,26,19],
[25,23,21,24,0,21,18,21,18],
[34,26,37,32,29,0,26,25,27],
[29,29,34,28,32,24,0,24,25],
[25,29,28,24,29,25,26,0,23],
[29,32,29,31,32,23,25,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,20,24,19,19,26,22,21],
[22,0,25,21,21,19,25,22,19],
[30,25,0,29,25,25,31,26,28],
[26,29,21,0,25,28,32,26,18],
[31,29,25,25,0,27,32,25,26],
[31,31,25,22,23,0,30,27,23],
[24,25,19,18,18,20,0,22,24],
[28,28,24,24,25,23,28,0,24],
[29,31,22,32,24,27,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,29,26,33,34,41,24,33],
[26,0,26,25,30,24,41,17,37],
[21,24,0,29,33,26,38,27,37],
[24,25,21,0,30,21,32,11,25],
[17,20,17,20,0,27,35,22,35],
[16,26,24,29,23,0,31,26,24],
[9,9,12,18,15,19,0,7,15],
[26,33,23,39,28,24,43,0,35],
[17,13,13,25,15,26,35,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,25,50,25,49,30,50,49],
[1,0,26,26,26,26,7,50,26],
[25,24,0,25,25,24,24,25,24],
[0,24,25,0,25,0,30,24,43],
[25,24,25,25,0,24,24,25,24],
[1,24,26,50,26,0,31,31,49],
[20,43,26,20,26,19,0,44,19],
[0,0,25,26,25,19,6,0,19],
[1,24,26,7,26,1,31,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,30,30,27,22,26,23],
[24,0,29,33,30,29,27,27,25],
[27,21,0,29,24,23,22,20,15],
[20,17,21,0,21,23,26,20,17],
[20,20,26,29,0,22,23,17,24],
[23,21,27,27,28,0,27,21,21],
[28,23,28,24,27,23,0,22,17],
[24,23,30,30,33,29,28,0,26],
[27,25,35,33,26,29,33,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,29,27,32,27,23,21,23],
[22,0,27,29,30,28,24,19,17],
[21,23,0,32,27,20,20,22,18],
[23,21,18,0,26,19,21,20,15],
[18,20,23,24,0,23,15,17,18],
[23,22,30,31,27,0,24,25,22],
[27,26,30,29,35,26,0,24,21],
[29,31,28,30,33,25,26,0,25],
[27,33,32,35,32,28,29,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,32,31,29,35,25,25,32],
[26,0,34,23,30,33,22,26,27],
[18,16,0,19,23,23,23,17,23],
[19,27,31,0,30,35,35,23,29],
[21,20,27,20,0,27,21,15,29],
[15,17,27,15,23,0,21,14,20],
[25,28,27,15,29,29,0,16,28],
[25,24,33,27,35,36,34,0,28],
[18,23,27,21,21,30,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,28,34,14,29,27,34,34],
[10,0,17,26,16,15,20,18,22],
[22,33,0,18,17,18,31,32,22],
[16,24,32,0,25,25,27,33,15],
[36,34,33,25,0,39,33,42,26],
[21,35,32,25,11,0,34,32,26],
[23,30,19,23,17,16,0,30,25],
[16,32,18,17,8,18,20,0,24],
[16,28,28,35,24,24,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,21,32,27,30,26,32,30],
[16,0,18,25,26,23,19,20,20],
[29,32,0,30,26,30,24,28,23],
[18,25,20,0,21,22,19,25,21],
[23,24,24,29,0,25,23,25,24],
[20,27,20,28,25,0,21,24,25],
[24,31,26,31,27,29,0,31,26],
[18,30,22,25,25,26,19,0,29],
[20,30,27,29,26,25,24,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,13,27,23,18,29,26,18],
[35,0,27,20,27,19,35,40,21],
[37,23,0,25,25,21,28,32,19],
[23,30,25,0,19,18,26,25,19],
[27,23,25,31,0,23,36,27,19],
[32,31,29,32,27,0,42,34,25],
[21,15,22,24,14,8,0,21,16],
[24,10,18,25,23,16,29,0,17],
[32,29,31,31,31,25,34,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,19,10,7,10,27,30,33],
[45,0,49,38,37,17,37,34,46],
[31,1,0,2,19,17,20,28,31],
[40,12,48,0,29,21,29,37,48],
[43,13,31,21,0,29,32,30,30],
[40,33,33,29,21,0,46,44,40],
[23,13,30,21,18,4,0,19,42],
[20,16,22,13,20,6,31,0,31],
[17,4,19,2,20,10,8,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,31,25,24,29,27,30,30],
[23,0,21,22,22,26,26,26,22],
[19,29,0,26,26,26,27,24,25],
[25,28,24,0,28,27,28,30,26],
[26,28,24,22,0,20,29,30,22],
[21,24,24,23,30,0,29,35,24],
[23,24,23,22,21,21,0,26,20],
[20,24,26,20,20,15,24,0,22],
[20,28,25,24,28,26,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,31,21,24,28,28,26,21],
[19,0,23,17,21,24,18,21,18],
[19,27,0,22,23,28,19,21,15],
[29,33,28,0,30,32,26,20,23],
[26,29,27,20,0,27,24,24,26],
[22,26,22,18,23,0,22,14,19],
[22,32,31,24,26,28,0,24,24],
[24,29,29,30,26,36,26,0,23],
[29,32,35,27,24,31,26,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,17,24,25,34,20,24,21],
[24,0,19,20,19,25,19,19,18],
[33,31,0,32,22,36,28,26,34],
[26,30,18,0,22,35,22,23,26],
[25,31,28,28,0,31,19,26,31],
[16,25,14,15,19,0,12,17,18],
[30,31,22,28,31,38,0,29,34],
[26,31,24,27,24,33,21,0,33],
[29,32,16,24,19,32,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,22,32,25,22,30,30,28],
[21,0,23,27,24,27,24,23,26],
[28,27,0,32,25,25,26,33,27],
[18,23,18,0,19,16,22,23,23],
[25,26,25,31,0,25,25,27,30],
[28,23,25,34,25,0,29,24,31],
[20,26,24,28,25,21,0,29,22],
[20,27,17,27,23,26,21,0,25],
[22,24,23,27,20,19,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,14,15,19,13,7,13],
[25,0,33,23,29,28,24,17,19],
[20,17,0,25,21,13,18,16,20],
[36,27,25,0,30,17,25,18,31],
[35,21,29,20,0,25,24,14,14],
[31,22,37,33,25,0,26,23,30],
[37,26,32,25,26,24,0,28,30],
[43,33,34,32,36,27,22,0,32],
[37,31,30,19,36,20,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,17,22,24,23,23,30,15],
[24,0,32,31,24,22,30,28,22],
[33,18,0,25,28,26,32,25,26],
[28,19,25,0,33,27,30,26,20],
[26,26,22,17,0,33,24,12,15],
[27,28,24,23,17,0,31,25,22],
[27,20,18,20,26,19,0,24,4],
[20,22,25,24,38,25,26,0,11],
[35,28,24,30,35,28,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,19,24,14,16,15,17],
[31,0,26,20,22,19,22,24,27],
[29,24,0,21,17,22,17,22,29],
[31,30,29,0,36,23,25,31,29],
[26,28,33,14,0,22,21,22,28],
[36,31,28,27,28,0,22,25,30],
[34,28,33,25,29,28,0,25,32],
[35,26,28,19,28,25,25,0,31],
[33,23,21,21,22,20,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,24,20,34,22,30,23,25],
[29,0,27,25,27,29,34,22,24],
[26,23,0,27,35,18,26,19,31],
[30,25,23,0,28,22,30,23,21],
[16,23,15,22,0,21,29,17,17],
[28,21,32,28,29,0,32,29,29],
[20,16,24,20,21,18,0,21,21],
[27,28,31,27,33,21,29,0,29],
[25,26,19,29,33,21,29,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,9,9,21,9,27,21,15],
[31,0,19,8,22,28,18,20,10],
[41,31,0,14,14,20,20,21,20],
[41,42,36,0,27,26,48,42,20],
[29,28,36,23,0,20,34,28,19],
[41,22,30,24,30,0,28,24,32],
[23,32,30,2,16,22,0,32,4],
[29,30,29,8,22,26,18,0,10],
[35,40,30,30,31,18,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,18,22,21,20,23,23],
[28,0,25,22,22,27,22,21,24],
[28,25,0,23,27,28,29,25,27],
[32,28,27,0,25,30,30,31,28],
[28,28,23,25,0,27,26,25,30],
[29,23,22,20,23,0,24,29,26],
[30,28,21,20,24,26,0,30,29],
[27,29,25,19,25,21,20,0,24],
[27,26,23,22,20,24,21,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,30,25,24,29,28,32],
[28,0,29,30,22,25,24,22,32],
[29,21,0,36,28,30,35,31,33],
[20,20,14,0,17,23,26,24,28],
[25,28,22,33,0,37,30,25,31],
[26,25,20,27,13,0,23,25,30],
[21,26,15,24,20,27,0,21,32],
[22,28,19,26,25,25,29,0,34],
[18,18,17,22,19,20,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,21,21,18,18,25,22,17],
[27,0,25,27,28,26,24,33,25],
[29,25,0,18,24,16,29,26,19],
[29,23,32,0,22,30,30,29,27],
[32,22,26,28,0,25,30,33,21],
[32,24,34,20,25,0,31,38,29],
[25,26,21,20,20,19,0,30,22],
[28,17,24,21,17,12,20,0,17],
[33,25,31,23,29,21,28,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,30,28,29,25,21,33,30],
[15,0,24,25,26,19,18,20,13],
[20,26,0,27,31,24,32,29,20],
[22,25,23,0,31,26,15,23,21],
[21,24,19,19,0,22,23,30,20],
[25,31,26,24,28,0,19,26,21],
[29,32,18,35,27,31,0,23,21],
[17,30,21,27,20,24,27,0,22],
[20,37,30,29,30,29,29,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,30,26,24,24,26,26,28],
[14,0,24,24,16,24,18,18,22],
[20,26,0,27,19,26,28,25,31],
[24,26,23,0,19,24,21,21,26],
[26,34,31,31,0,33,32,25,36],
[26,26,24,26,17,0,26,25,24],
[24,32,22,29,18,24,0,27,25],
[24,32,25,29,25,25,23,0,18],
[22,28,19,24,14,26,25,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,30,23,22,23,16,19],
[26,0,40,41,32,28,34,24,23],
[25,10,0,25,24,20,19,23,19],
[20,9,25,0,23,27,13,16,20],
[27,18,26,27,0,34,20,19,20],
[28,22,30,23,16,0,25,24,26],
[27,16,31,37,30,25,0,34,20],
[34,26,27,34,31,26,16,0,25],
[31,27,31,30,30,24,30,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,14,24,8,31,11,12],
[28,0,20,28,18,18,29,28,26],
[28,30,0,27,28,29,28,24,26],
[36,22,23,0,24,19,31,26,32],
[26,32,22,26,0,22,25,22,25],
[42,32,21,31,28,0,33,25,27],
[19,21,22,19,25,17,0,15,19],
[39,22,26,24,28,25,35,0,29],
[38,24,24,18,25,23,31,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,24,29,23,22,26,27,27],
[22,0,24,20,25,20,22,25,26],
[26,26,0,23,19,22,25,21,26],
[21,30,27,0,20,25,29,24,28],
[27,25,31,30,0,25,26,27,25],
[28,30,28,25,25,0,33,22,27],
[24,28,25,21,24,17,0,23,28],
[23,25,29,26,23,28,27,0,30],
[23,24,24,22,25,23,22,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,20,28,31,27,28,25,22],
[24,0,25,26,30,27,27,25,22],
[30,25,0,33,31,32,28,25,24],
[22,24,17,0,21,30,23,16,24],
[19,20,19,29,0,30,30,27,25],
[23,23,18,20,20,0,27,20,19],
[22,23,22,27,20,23,0,22,23],
[25,25,25,34,23,30,28,0,29],
[28,28,26,26,25,31,27,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,22,19,15,17,24,22],
[38,0,23,34,30,21,28,35,23],
[36,27,0,27,28,27,23,30,31],
[28,16,23,0,22,14,19,30,20],
[31,20,22,28,0,23,24,28,24],
[35,29,23,36,27,0,25,33,30],
[33,22,27,31,26,25,0,29,29],
[26,15,20,20,22,17,21,0,25],
[28,27,19,30,26,20,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,21,25,18,15,25,26,20],
[26,0,26,27,18,24,26,25,22],
[29,24,0,35,24,25,30,28,23],
[25,23,15,0,25,15,24,21,17],
[32,32,26,25,0,29,28,30,24],
[35,26,25,35,21,0,26,28,20],
[25,24,20,26,22,24,0,23,22],
[24,25,22,29,20,22,27,0,30],
[30,28,27,33,26,30,28,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,12,19,17,11,14,15,25],
[39,0,25,29,38,33,33,41,42],
[38,25,0,37,41,22,28,38,38],
[31,21,13,0,26,17,20,28,18],
[33,12,9,24,0,15,18,20,27],
[39,17,28,33,35,0,28,30,34],
[36,17,22,30,32,22,0,26,36],
[35,9,12,22,30,20,24,0,25],
[25,8,12,32,23,16,14,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,26,26,22,26,36,21],
[25,0,25,21,31,16,26,26,21],
[29,25,0,26,18,21,31,31,26],
[24,29,24,0,16,24,25,27,30],
[24,19,32,34,0,15,20,27,22],
[28,34,29,26,35,0,44,18,34],
[24,24,19,25,30,6,0,19,34],
[14,24,19,23,23,32,31,0,31],
[29,29,24,20,28,16,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,28,25,23,25,30,29,34],
[22,0,24,18,20,22,21,27,28],
[22,26,0,33,20,27,29,25,31],
[25,32,17,0,26,26,25,25,31],
[27,30,30,24,0,25,26,34,33],
[25,28,23,24,25,0,29,34,32],
[20,29,21,25,24,21,0,28,27],
[21,23,25,25,16,16,22,0,29],
[16,22,19,19,17,18,23,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,24,21,22,23,26,24,23],
[27,0,27,26,23,22,30,24,25],
[26,23,0,22,22,23,31,17,21],
[29,24,28,0,21,23,29,23,21],
[28,27,28,29,0,25,32,26,30],
[27,28,27,27,25,0,26,21,21],
[24,20,19,21,18,24,0,14,24],
[26,26,33,27,24,29,36,0,26],
[27,25,29,29,20,29,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,25,29,25,28,27,21],
[25,0,27,15,29,31,24,27,18],
[20,23,0,23,20,29,25,26,23],
[25,35,27,0,33,42,34,38,28],
[21,21,30,17,0,29,21,23,14],
[25,19,21,8,21,0,14,18,15],
[22,26,25,16,29,36,0,31,18],
[23,23,24,12,27,32,19,0,19],
[29,32,27,22,36,35,32,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,26,23,35,30,28,16],
[26,0,23,20,19,39,29,27,22],
[22,27,0,33,24,33,45,32,33],
[24,30,17,0,27,24,33,28,23],
[27,31,26,23,0,31,36,19,23],
[15,11,17,26,19,0,29,21,19],
[20,21,5,17,14,21,0,20,24],
[22,23,18,22,31,29,30,0,18],
[34,28,17,27,27,31,26,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,27,24,21,22,26,24,28],
[20,0,17,20,24,22,26,17,23],
[23,33,0,30,22,21,30,26,18],
[26,30,20,0,22,22,29,21,19],
[29,26,28,28,0,23,37,23,29],
[28,28,29,28,27,0,32,23,23],
[24,24,20,21,13,18,0,18,22],
[26,33,24,29,27,27,32,0,24],
[22,27,32,31,21,27,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,21,28,28,33,33,27,27],
[20,0,22,30,26,31,35,29,20],
[29,28,0,35,30,35,36,31,25],
[22,20,15,0,23,23,29,24,17],
[22,24,20,27,0,29,26,31,28],
[17,19,15,27,21,0,30,24,16],
[17,15,14,21,24,20,0,19,21],
[23,21,19,26,19,26,31,0,26],
[23,30,25,33,22,34,29,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,34,24,31,23,31,29,20],
[36,0,27,25,32,21,29,26,21],
[16,23,0,21,19,16,23,25,17],
[26,25,29,0,29,29,29,26,29],
[19,18,31,21,0,21,14,30,21],
[27,29,34,21,29,0,32,31,23],
[19,21,27,21,36,18,0,29,15],
[21,24,25,24,20,19,21,0,20],
[30,29,33,21,29,27,35,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,29,23,30,21,29,28,20],
[24,0,25,24,30,40,28,25,30],
[21,25,0,28,48,28,28,32,30],
[27,26,22,0,30,31,28,30,27],
[20,20,2,20,0,24,18,18,30],
[29,10,22,19,26,0,27,19,16],
[21,22,22,22,32,23,0,23,25],
[22,25,18,20,32,31,27,0,25],
[30,20,20,23,20,34,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,29,30,28,23,30,24,31],
[24,0,29,25,12,16,25,20,17],
[21,21,0,29,16,16,22,24,21],
[20,25,21,0,16,20,26,22,19],
[22,38,34,34,0,28,29,23,33],
[27,34,34,30,22,0,31,29,28],
[20,25,28,24,21,19,0,20,26],
[26,30,26,28,27,21,30,0,29],
[19,33,29,31,17,22,24,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,16,43,15,23,31,28,31],
[22,0,19,34,17,27,22,32,30],
[34,31,0,42,41,28,37,25,41],
[7,16,8,0,14,16,20,21,15],
[35,33,9,36,0,28,32,33,43],
[27,23,22,34,22,0,29,30,41],
[19,28,13,30,18,21,0,28,25],
[22,18,25,29,17,20,22,0,29],
[19,20,9,35,7,9,25,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,22,22,21,20,21,21,25],
[27,0,23,23,24,27,28,23,28],
[28,27,0,25,24,28,25,28,31],
[28,27,25,0,25,24,30,28,26],
[29,26,26,25,0,26,29,27,25],
[30,23,22,26,24,0,22,22,26],
[29,22,25,20,21,28,0,23,26],
[29,27,22,22,23,28,27,0,27],
[25,22,19,24,25,24,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,29,29,41,7,43,26,43],
[7,0,12,24,36,12,41,0,15],
[21,38,0,45,36,26,36,21,38],
[21,26,5,0,41,26,41,26,41],
[9,14,14,9,0,14,7,0,2],
[43,38,24,24,36,0,38,21,38],
[7,9,14,9,43,12,0,7,17],
[24,50,29,24,50,29,43,0,22],
[7,35,12,9,48,12,33,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,15,14,10,16,34,21,14],
[25,0,30,30,19,26,36,31,18],
[35,20,0,24,19,23,26,28,25],
[36,20,26,0,15,27,24,10,23],
[40,31,31,35,0,35,35,22,30],
[34,24,27,23,15,0,28,14,24],
[16,14,24,26,15,22,0,22,12],
[29,19,22,40,28,36,28,0,33],
[36,32,25,27,20,26,38,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,26,26,27,22,33,25,19],
[29,0,23,25,29,22,33,30,16],
[24,27,0,25,28,25,30,27,17],
[24,25,25,0,26,22,34,27,20],
[23,21,22,24,0,19,30,22,20],
[28,28,25,28,31,0,31,30,29],
[17,17,20,16,20,19,0,17,17],
[25,20,23,23,28,20,33,0,20],
[31,34,33,30,30,21,33,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,32,29,26,17,27,24,35],
[17,0,26,29,24,21,25,18,26],
[18,24,0,22,24,20,36,19,13],
[21,21,28,0,34,7,22,24,10],
[24,26,26,16,0,15,31,18,20],
[33,29,30,43,35,0,34,32,23],
[23,25,14,28,19,16,0,16,20],
[26,32,31,26,32,18,34,0,19],
[15,24,37,40,30,27,30,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,20,6,21,23,27,22,23],
[24,0,18,16,24,19,30,20,25],
[30,32,0,25,32,30,29,32,27],
[44,34,25,0,31,33,39,32,30],
[29,26,18,19,0,26,20,21,23],
[27,31,20,17,24,0,31,26,31],
[23,20,21,11,30,19,0,22,23],
[28,30,18,18,29,24,28,0,33],
[27,25,23,20,27,19,27,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,27,24,22,25,23,20,27],
[27,0,25,25,25,28,28,24,31],
[23,25,0,24,19,23,23,25,29],
[26,25,26,0,19,25,20,21,32],
[28,25,31,31,0,26,24,23,34],
[25,22,27,25,24,0,26,21,28],
[27,22,27,30,26,24,0,18,27],
[30,26,25,29,27,29,32,0,32],
[23,19,21,18,16,22,23,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,27,23,28,31,22,24,30],
[21,0,25,22,19,24,22,21,24],
[23,25,0,20,22,30,22,20,21],
[27,28,30,0,27,29,22,27,23],
[22,31,28,23,0,30,29,24,27],
[19,26,20,21,20,0,20,21,21],
[28,28,28,28,21,30,0,21,26],
[26,29,30,23,26,29,29,0,23],
[20,26,29,27,23,29,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,35,25,39,23,24,20,20],
[31,0,31,28,30,27,23,26,25],
[15,19,0,26,27,26,21,18,17],
[25,22,24,0,30,26,21,23,15],
[11,20,23,20,0,14,14,26,16],
[27,23,24,24,36,0,26,27,25],
[26,27,29,29,36,24,0,20,21],
[30,24,32,27,24,23,30,0,25],
[30,25,33,35,34,25,29,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,31,31,31,24,32,24,28],
[27,0,25,30,32,26,37,32,30],
[19,25,0,25,29,24,32,25,21],
[19,20,25,0,29,25,31,26,22],
[19,18,21,21,0,22,27,25,19],
[26,24,26,25,28,0,33,29,25],
[18,13,18,19,23,17,0,22,17],
[26,18,25,24,25,21,28,0,20],
[22,20,29,28,31,25,33,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,22,26,29,21,26,20],
[32,0,26,23,28,32,22,28,25],
[33,24,0,24,33,36,26,28,33],
[28,27,26,0,29,35,25,30,25],
[24,22,17,21,0,23,17,24,24],
[21,18,14,15,27,0,19,23,21],
[29,28,24,25,33,31,0,34,31],
[24,22,22,20,26,27,16,0,27],
[30,25,17,25,26,29,19,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,37,27,22,29,25,22,18],
[25,0,29,32,28,29,35,22,26],
[13,21,0,31,19,25,24,16,17],
[23,18,19,0,13,17,23,15,15],
[28,22,31,37,0,33,32,23,25],
[21,21,25,33,17,0,25,21,20],
[25,15,26,27,18,25,0,20,19],
[28,28,34,35,27,29,30,0,22],
[32,24,33,35,25,30,31,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,27,24,27,25,26,31,32],
[21,0,23,24,21,22,27,18,26],
[23,27,0,26,21,29,23,22,25],
[26,26,24,0,22,23,26,23,26],
[23,29,29,28,0,26,28,32,27],
[25,28,21,27,24,0,26,21,25],
[24,23,27,24,22,24,0,24,23],
[19,32,28,27,18,29,26,0,25],
[18,24,25,24,23,25,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,35,30,29,29,20,29,33],
[35,0,34,32,39,42,23,29,40],
[15,16,0,24,21,19,20,9,31],
[20,18,26,0,22,17,18,22,21],
[21,11,29,28,0,18,27,28,30],
[21,8,31,33,32,0,27,21,41],
[30,27,30,32,23,23,0,24,32],
[21,21,41,28,22,29,26,0,30],
[17,10,19,29,20,9,18,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,28,26,29,32,28,31,22],
[20,0,19,24,24,25,21,26,26],
[22,31,0,22,24,20,15,21,13],
[24,26,28,0,29,25,20,21,29],
[21,26,26,21,0,23,27,30,24],
[18,25,30,25,27,0,24,26,31],
[22,29,35,30,23,26,0,37,27],
[19,24,29,29,20,24,13,0,25],
[28,24,37,21,26,19,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,26,24,26,22,4,22,22],
[28,0,50,28,50,46,4,50,26],
[24,0,0,24,28,24,0,0,0],
[26,22,26,0,26,22,26,22,22],
[24,0,22,24,0,22,0,22,22],
[28,4,26,28,28,0,4,4,26],
[46,46,50,24,50,46,0,46,22],
[28,0,50,28,28,46,4,0,22],
[28,24,50,28,28,24,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,19,20,23,22,17,15,20],
[34,0,28,22,31,33,25,26,28],
[31,22,0,28,35,32,28,23,22],
[30,28,22,0,37,38,24,25,27],
[27,19,15,13,0,21,20,26,13],
[28,17,18,12,29,0,16,19,16],
[33,25,22,26,30,34,0,30,25],
[35,24,27,25,24,31,20,0,19],
[30,22,28,23,37,34,25,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,32,30,22,26,28,38,31],
[26,0,34,27,23,28,28,30,31],
[18,16,0,23,16,20,21,32,17],
[20,23,27,0,23,26,30,33,30],
[28,27,34,27,0,30,24,27,30],
[24,22,30,24,20,0,28,31,28],
[22,22,29,20,26,22,0,25,29],
[12,20,18,17,23,19,25,0,16],
[19,19,33,20,20,22,21,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,20,37,23,31,16,28,28],
[20,0,17,26,18,29,19,14,13],
[30,33,0,27,26,32,28,28,18],
[13,24,23,0,6,16,13,19,13],
[27,32,24,44,0,24,36,40,24],
[19,21,18,34,26,0,19,27,19],
[34,31,22,37,14,31,0,23,15],
[22,36,22,31,10,23,27,0,17],
[22,37,32,37,26,31,35,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,20,22,19,23,8,15],
[35,0,33,18,17,33,33,35,14],
[32,17,0,22,31,22,22,25,17],
[30,32,28,0,34,19,39,20,20],
[28,33,19,16,0,20,40,21,33],
[31,17,28,31,30,0,35,21,30],
[27,17,28,11,10,15,0,21,10],
[42,15,25,30,29,29,29,0,25],
[35,36,33,30,17,20,40,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,22,23,26,28,26,19,25],
[24,0,25,27,29,26,22,19,30],
[28,25,0,25,34,31,26,23,30],
[27,23,25,0,27,26,26,19,26],
[24,21,16,23,0,24,20,15,22],
[22,24,19,24,26,0,24,20,27],
[24,28,24,24,30,26,0,27,24],
[31,31,27,31,35,30,23,0,30],
[25,20,20,24,28,23,26,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,18,18,17,22,15,24,20],
[29,0,30,26,26,27,25,23,26],
[32,20,0,22,24,24,20,23,23],
[32,24,28,0,24,27,20,30,23],
[33,24,26,26,0,28,23,29,23],
[28,23,26,23,22,0,22,27,20],
[35,25,30,30,27,28,0,28,23],
[26,27,27,20,21,23,22,0,23],
[30,24,27,27,27,30,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,19,34,30,26,27,30],
[21,0,22,13,20,21,21,23,21],
[24,28,0,21,30,26,33,34,34],
[31,37,29,0,40,27,34,33,24],
[16,30,20,10,0,24,11,20,10],
[20,29,24,23,26,0,20,27,14],
[24,29,17,16,39,30,0,24,24],
[23,27,16,17,30,23,26,0,27],
[20,29,16,26,40,36,26,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,25,22,31,18,28,28,22],
[30,0,22,27,32,22,31,26,27],
[25,28,0,27,37,24,27,29,25],
[28,23,23,0,30,29,31,31,30],
[19,18,13,20,0,22,21,23,25],
[32,28,26,21,28,0,33,22,25],
[22,19,23,19,29,17,0,27,19],
[22,24,21,19,27,28,23,0,25],
[28,23,25,20,25,25,31,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,22,23,37,28,16,24,29],
[29,0,27,34,30,22,26,21,28],
[28,23,0,28,36,28,23,32,34],
[27,16,22,0,23,14,12,19,23],
[13,20,14,27,0,24,16,18,28],
[22,28,22,36,26,0,26,21,35],
[34,24,27,38,34,24,0,26,30],
[26,29,18,31,32,29,24,0,33],
[21,22,16,27,22,15,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,32,28,23,23,25,24],
[25,0,24,22,26,25,18,22,17],
[24,26,0,30,27,29,22,24,23],
[18,28,20,0,20,25,24,18,23],
[22,24,23,30,0,22,27,28,27],
[27,25,21,25,28,0,22,20,24],
[27,32,28,26,23,28,0,30,25],
[25,28,26,32,22,30,20,0,24],
[26,33,27,27,23,26,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,36,35,10,29,10,39,11],
[25,0,36,21,10,15,10,39,11],
[14,14,0,25,14,14,24,39,25],
[15,29,25,0,25,29,25,39,11],
[40,40,36,25,0,40,36,39,11],
[21,35,36,21,10,0,10,39,21],
[40,40,26,25,14,40,0,29,25],
[11,11,11,11,11,11,21,0,11],
[39,39,25,39,39,29,25,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,20,24,9,15,15,27,33],
[33,0,20,24,16,32,32,27,40],
[30,30,0,29,20,30,30,27,20],
[26,26,21,0,26,29,29,33,26],
[41,34,30,24,0,34,41,31,34],
[35,18,20,21,16,0,26,28,37],
[35,18,20,21,9,24,0,28,30],
[23,23,23,17,19,22,22,0,31],
[17,10,30,24,16,13,20,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,32,26,24,28,25,28,30],
[19,0,30,25,21,26,25,25,28],
[18,20,0,20,22,21,21,26,23],
[24,25,30,0,21,24,22,27,27],
[26,29,28,29,0,29,23,28,31],
[22,24,29,26,21,0,23,24,26],
[25,25,29,28,27,27,0,27,29],
[22,25,24,23,22,26,23,0,23],
[20,22,27,23,19,24,21,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,38,15,20,37,20,15,28],
[22,0,18,22,31,29,13,15,17],
[12,32,0,4,13,23,13,15,28],
[35,28,46,0,27,37,28,19,28],
[30,19,37,23,0,37,32,23,19],
[13,21,27,13,13,0,13,24,17],
[30,37,37,22,18,37,0,41,37],
[35,35,35,31,27,26,9,0,17],
[22,33,22,22,31,33,13,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,21,24,20,21,26,23,32],
[16,0,21,20,18,17,24,21,26],
[29,29,0,17,26,19,35,21,28],
[26,30,33,0,24,23,28,26,29],
[30,32,24,26,0,23,38,27,30],
[29,33,31,27,27,0,32,23,38],
[24,26,15,22,12,18,0,13,23],
[27,29,29,24,23,27,37,0,32],
[18,24,22,21,20,12,27,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,27,29,23,27,24,28],
[29,0,24,24,29,23,26,25,31],
[29,26,0,25,33,29,30,30,33],
[23,26,25,0,31,27,28,21,33],
[21,21,17,19,0,18,24,15,27],
[27,27,21,23,32,0,26,21,26],
[23,24,20,22,26,24,0,24,27],
[26,25,20,29,35,29,26,0,32],
[22,19,17,17,23,24,23,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,30,29,33,29,30,23,21],
[23,0,23,31,28,24,23,19,18],
[20,27,0,29,25,24,23,22,20],
[21,19,21,0,24,15,20,18,14],
[17,22,25,26,0,16,21,17,18],
[21,26,26,35,34,0,25,22,25],
[20,27,27,30,29,25,0,14,25],
[27,31,28,32,33,28,36,0,21],
[29,32,30,36,32,25,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,27,22,25,25,28,25,22],
[25,0,24,23,28,26,25,24,23],
[23,26,0,27,32,25,30,28,30],
[28,27,23,0,27,29,29,23,23],
[25,22,18,23,0,23,23,25,20],
[25,24,25,21,27,0,29,24,21],
[22,25,20,21,27,21,0,26,21],
[25,26,22,27,25,26,24,0,21],
[28,27,20,27,30,29,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,17,20,19,23,19,26],
[33,0,29,28,20,28,29,24,34],
[32,21,0,27,22,25,21,26,29],
[33,22,23,0,24,29,26,26,31],
[30,30,28,26,0,30,31,25,32],
[31,22,25,21,20,0,24,24,31],
[27,21,29,24,19,26,0,28,30],
[31,26,24,24,25,26,22,0,33],
[24,16,21,19,18,19,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,29,35,27,25,28,35,34],
[18,0,24,21,19,20,21,22,28],
[21,26,0,22,21,22,20,22,23],
[15,29,28,0,20,24,24,25,23],
[23,31,29,30,0,28,24,30,28],
[25,30,28,26,22,0,26,24,28],
[22,29,30,26,26,24,0,30,30],
[15,28,28,25,20,26,20,0,29],
[16,22,27,27,22,22,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,19,19,20,15,20,22],
[29,0,25,23,30,24,22,28,32],
[30,25,0,28,27,26,24,32,31],
[31,27,22,0,26,26,25,29,28],
[31,20,23,24,0,25,23,26,27],
[30,26,24,24,25,0,22,28,32],
[35,28,26,25,27,28,0,28,32],
[30,22,18,21,24,22,22,0,26],
[28,18,19,22,23,18,18,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,30,29,31,28,31,25,29],
[23,0,24,28,29,29,30,25,29],
[20,26,0,27,22,23,28,27,27],
[21,22,23,0,25,20,25,20,24],
[19,21,28,25,0,22,28,25,28],
[22,21,27,30,28,0,29,24,31],
[19,20,22,25,22,21,0,23,25],
[25,25,23,30,25,26,27,0,29],
[21,21,23,26,22,19,25,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,34,25,36,30,33,31,20],
[25,0,27,11,36,24,19,22,12],
[16,23,0,14,28,12,18,31,16],
[25,39,36,0,42,24,33,26,23],
[14,14,22,8,0,13,14,25,15],
[20,26,38,26,37,0,23,26,25],
[17,31,32,17,36,27,0,26,17],
[19,28,19,24,25,24,24,0,18],
[30,38,34,27,35,25,33,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,35,23,25,33,33,26,36],
[17,0,24,26,23,20,24,12,22],
[15,26,0,35,23,22,23,21,28],
[27,24,15,0,16,27,23,19,28],
[25,27,27,34,0,30,26,25,29],
[17,30,28,23,20,0,20,10,16],
[17,26,27,27,24,30,0,24,28],
[24,38,29,31,25,40,26,0,38],
[14,28,22,22,21,34,22,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,38,25,32,37,28,16],
[28,0,23,30,25,21,34,21,15],
[25,27,0,35,32,39,38,30,26],
[12,20,15,0,24,29,37,22,19],
[25,25,18,26,0,25,34,33,15],
[18,29,11,21,25,0,30,28,20],
[13,16,12,13,16,20,0,12,3],
[22,29,20,28,17,22,38,0,20],
[34,35,24,31,35,30,47,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,23,32,21,25,29,26],
[26,0,14,18,23,24,23,18,21],
[27,36,0,17,30,28,30,29,30],
[27,32,33,0,37,23,30,27,32],
[18,27,20,13,0,14,25,27,20],
[29,26,22,27,36,0,28,27,33],
[25,27,20,20,25,22,0,21,30],
[21,32,21,23,23,23,29,0,25],
[24,29,20,18,30,17,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,29,29,24,30,26,24],
[22,0,21,27,25,20,27,28,20],
[24,29,0,31,27,27,31,28,25],
[21,23,19,0,25,23,23,23,21],
[21,25,23,25,0,23,24,26,25],
[26,30,23,27,27,0,32,32,22],
[20,23,19,27,26,18,0,25,23],
[24,22,22,27,24,18,25,0,25],
[26,30,25,29,25,28,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,35,34,34,34,31,25,33],
[17,0,23,19,27,28,23,21,25],
[15,27,0,19,26,28,19,19,29],
[16,31,31,0,40,27,13,22,29],
[16,23,24,10,0,28,17,17,29],
[16,22,22,23,22,0,15,19,22],
[19,27,31,37,33,35,0,17,36],
[25,29,31,28,33,31,33,0,28],
[17,25,21,21,21,28,14,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,28,20,23,17,22,21],
[25,0,18,27,19,20,21,21,26],
[26,32,0,32,24,23,23,24,27],
[22,23,18,0,17,13,23,20,25],
[30,31,26,33,0,24,23,28,31],
[27,30,27,37,26,0,25,32,28],
[33,29,27,27,27,25,0,25,28],
[28,29,26,30,22,18,25,0,26],
[29,24,23,25,19,22,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,27,24,31,35,35,28,19],
[26,0,27,23,26,35,26,21,26],
[23,23,0,26,34,37,34,21,27],
[26,27,24,0,41,32,33,33,24],
[19,24,16,9,0,36,32,22,20],
[15,15,13,18,14,0,26,13,4],
[15,24,16,17,18,24,0,22,13],
[22,29,29,17,28,37,28,0,32],
[31,24,23,26,30,46,37,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,32,21,23,27,27,25,26],
[25,0,26,23,20,25,20,24,24],
[18,24,0,23,21,22,18,21,23],
[29,27,27,0,23,23,25,27,25],
[27,30,29,27,0,26,20,24,27],
[23,25,28,27,24,0,24,27,24],
[23,30,32,25,30,26,0,25,24],
[25,26,29,23,26,23,25,0,25],
[24,26,27,25,23,26,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,24,24,18,27,28,17,17],
[18,0,19,22,20,15,28,20,22],
[26,31,0,21,17,24,23,16,18],
[26,28,29,0,21,23,30,20,28],
[32,30,33,29,0,22,29,26,27],
[23,35,26,27,28,0,27,17,29],
[22,22,27,20,21,23,0,18,25],
[33,30,34,30,24,33,32,0,33],
[33,28,32,22,23,21,25,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,27,27,32,24,22,23,23],
[24,0,25,24,27,25,18,17,19],
[23,25,0,24,29,22,22,24,19],
[23,26,26,0,28,26,21,23,20],
[18,23,21,22,0,25,22,16,17],
[26,25,28,24,25,0,31,23,25],
[28,32,28,29,28,19,0,25,28],
[27,33,26,27,34,27,25,0,25],
[27,31,31,30,33,25,22,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,18,24,26,28,26,32,30],
[17,0,17,24,18,22,24,30,31],
[32,33,0,24,27,33,35,35,30],
[26,26,26,0,20,26,24,26,32],
[24,32,23,30,0,23,27,33,32],
[22,28,17,24,27,0,24,32,31],
[24,26,15,26,23,26,0,30,31],
[18,20,15,24,17,18,20,0,28],
[20,19,20,18,18,19,19,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,29,19,17,26,24,24,21],
[33,0,32,20,29,26,26,28,24],
[21,18,0,18,23,19,23,20,18],
[31,30,32,0,29,25,28,30,16],
[33,21,27,21,0,23,22,30,24],
[24,24,31,25,27,0,25,33,25],
[26,24,27,22,28,25,0,33,21],
[26,22,30,20,20,17,17,0,18],
[29,26,32,34,26,25,29,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,27,34,24,23,31,27,19],
[22,0,26,26,22,18,26,21,19],
[23,24,0,25,23,16,23,22,19],
[16,24,25,0,25,19,22,24,21],
[26,28,27,25,0,26,26,24,26],
[27,32,34,31,24,0,27,22,25],
[19,24,27,28,24,23,0,22,24],
[23,29,28,26,26,28,28,0,24],
[31,31,31,29,24,25,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,23,28,28,35,35,26],
[26,0,26,23,26,28,29,31,24],
[26,24,0,27,23,23,31,29,25],
[27,27,23,0,30,26,26,35,26],
[22,24,27,20,0,27,26,29,23],
[22,22,27,24,23,0,25,32,28],
[15,21,19,24,24,25,0,27,27],
[15,19,21,15,21,18,23,0,21],
[24,26,25,24,27,22,23,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,19,18,17,21,22,17,21],
[36,0,24,26,27,26,29,28,25],
[31,26,0,27,18,23,34,25,30],
[32,24,23,0,26,24,25,28,22],
[33,23,32,24,0,34,27,31,22],
[29,24,27,26,16,0,29,31,23],
[28,21,16,25,23,21,0,26,23],
[33,22,25,22,19,19,24,0,23],
[29,25,20,28,28,27,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,14,15,27,25,24,16,19],
[32,0,25,21,33,24,37,31,22],
[36,25,0,27,31,29,35,28,30],
[35,29,23,0,34,30,39,21,34],
[23,17,19,16,0,19,24,13,20],
[25,26,21,20,31,0,28,21,30],
[26,13,15,11,26,22,0,12,22],
[34,19,22,29,37,29,38,0,24],
[31,28,20,16,30,20,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,27,30,25,23,19,17],
[26,0,31,28,24,18,26,23,31],
[24,19,0,29,26,25,29,22,25],
[23,22,21,0,24,24,23,22,18],
[20,26,24,26,0,24,27,29,25],
[25,32,25,26,26,0,28,26,22],
[27,24,21,27,23,22,0,19,15],
[31,27,28,28,21,24,31,0,25],
[33,19,25,32,25,28,35,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,29,21,24,27,23,27,30],
[27,0,23,26,25,24,26,33,38],
[21,27,0,23,19,23,19,20,25],
[29,24,27,0,29,26,27,27,31],
[26,25,31,21,0,25,19,23,29],
[23,26,27,24,25,0,19,25,29],
[27,24,31,23,31,31,0,29,32],
[23,17,30,23,27,25,21,0,24],
[20,12,25,19,21,21,18,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,28,21,22,22,24,24,24],
[28,0,20,20,23,22,22,18,27],
[22,30,0,26,24,25,27,27,26],
[29,30,24,0,26,29,26,25,28],
[28,27,26,24,0,26,23,27,28],
[28,28,25,21,24,0,25,19,25],
[26,28,23,24,27,25,0,19,27],
[26,32,23,25,23,31,31,0,21],
[26,23,24,22,22,25,23,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,26,29,25,27,23,27,28],
[31,0,30,31,29,30,28,32,24],
[24,20,0,23,25,28,25,28,28],
[21,19,27,0,24,25,24,24,23],
[25,21,25,26,0,25,28,27,27],
[23,20,22,25,25,0,24,29,29],
[27,22,25,26,22,26,0,27,26],
[23,18,22,26,23,21,23,0,27],
[22,26,22,27,23,21,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,31,42,25,40,35,22,31],
[27,0,28,32,25,32,29,25,29],
[19,22,0,32,32,32,25,34,35],
[8,18,18,0,12,28,27,10,23],
[25,25,18,38,0,31,25,28,31],
[10,18,18,22,19,0,28,19,23],
[15,21,25,23,25,22,0,25,22],
[28,25,16,40,22,31,25,0,26],
[19,21,15,27,19,27,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,29,27,27,25,22,24,25],
[28,0,31,25,29,26,23,26,32],
[21,19,0,24,30,22,22,22,28],
[23,25,26,0,24,27,19,22,25],
[23,21,20,26,0,23,17,14,24],
[25,24,28,23,27,0,19,25,25],
[28,27,28,31,33,31,0,24,32],
[26,24,28,28,36,25,26,0,19],
[25,18,22,25,26,25,18,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,23,18,23,38,19,29],
[28,0,32,24,30,36,33,25,28],
[25,18,0,20,16,22,31,17,29],
[27,26,30,0,27,35,34,22,28],
[32,20,34,23,0,29,38,27,28],
[27,14,28,15,21,0,29,21,20],
[12,17,19,16,12,21,0,24,16],
[31,25,33,28,23,29,26,0,28],
[21,22,21,22,22,30,34,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,23,36,28,26,26,31,23],
[23,0,29,34,34,25,29,27,27],
[27,21,0,30,33,24,22,25,27],
[14,16,20,0,25,16,19,23,20],
[22,16,17,25,0,20,24,25,24],
[24,25,26,34,30,0,31,29,23],
[24,21,28,31,26,19,0,32,26],
[19,23,25,27,25,21,18,0,28],
[27,23,23,30,26,27,24,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,39,23,37,32,28,26,33],
[19,0,32,18,26,30,21,24,23],
[11,18,0,9,20,27,16,12,18],
[27,32,41,0,33,36,24,27,32],
[13,24,30,17,0,23,19,20,24],
[18,20,23,14,27,0,18,20,22],
[22,29,34,26,31,32,0,19,25],
[24,26,38,23,30,30,31,0,29],
[17,27,32,18,26,28,25,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,17,23,21,24,19,24,19],
[29,0,20,27,24,19,26,20,26],
[33,30,0,32,30,22,31,26,32],
[27,23,18,0,21,27,25,29,22],
[29,26,20,29,0,25,30,23,30],
[26,31,28,23,25,0,29,24,24],
[31,24,19,25,20,21,0,24,21],
[26,30,24,21,27,26,26,0,28],
[31,24,18,28,20,26,29,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,22,25,29,25,29,32,27],
[29,0,23,24,29,31,35,36,28],
[28,27,0,24,31,31,29,31,29],
[25,26,26,0,32,26,33,31,28],
[21,21,19,18,0,23,24,28,21],
[25,19,19,24,27,0,29,30,32],
[21,15,21,17,26,21,0,28,26],
[18,14,19,19,22,20,22,0,22],
[23,22,21,22,29,18,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,23,29,23,21,19,25],
[30,0,23,19,26,22,24,24,24],
[30,27,0,22,29,26,26,24,30],
[27,31,28,0,27,28,27,25,32],
[21,24,21,23,0,27,29,19,26],
[27,28,24,22,23,0,25,20,27],
[29,26,24,23,21,25,0,19,26],
[31,26,26,25,31,30,31,0,27],
[25,26,20,18,24,23,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,26,31,31,24,29,28,31],
[20,0,24,23,20,21,23,25,29],
[24,26,0,27,29,25,23,22,28],
[19,27,23,0,23,18,24,23,33],
[19,30,21,27,0,23,23,24,29],
[26,29,25,32,27,0,30,25,32],
[21,27,27,26,27,20,0,23,32],
[22,25,28,27,26,25,27,0,27],
[19,21,22,17,21,18,18,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,31,33,32,25,31,32,36],
[20,0,26,25,28,25,25,27,31],
[19,24,0,28,26,28,21,22,38],
[17,25,22,0,27,19,29,20,28],
[18,22,24,23,0,21,27,24,31],
[25,25,22,31,29,0,22,26,33],
[19,25,29,21,23,28,0,21,31],
[18,23,28,30,26,24,29,0,29],
[14,19,12,22,19,17,19,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,33,28,27,26,26,35],
[24,0,17,25,24,24,23,28,33],
[27,33,0,32,27,25,27,28,29],
[17,25,18,0,24,24,23,21,27],
[22,26,23,26,0,27,23,23,24],
[23,26,25,26,23,0,26,24,28],
[24,27,23,27,27,24,0,22,32],
[24,22,22,29,27,26,28,0,32],
[15,17,21,23,26,22,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,29,22,28,25,33,27,20],
[27,0,30,27,22,21,34,27,19],
[21,20,0,29,19,15,30,25,15],
[28,23,21,0,25,25,35,23,19],
[22,28,31,25,0,18,30,22,21],
[25,29,35,25,32,0,25,27,31],
[17,16,20,15,20,25,0,18,10],
[23,23,25,27,28,23,32,0,23],
[30,31,35,31,29,19,40,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,20,23,25,27,20,24,25],
[24,0,24,26,28,29,25,27,29],
[30,26,0,31,24,25,22,18,27],
[27,24,19,0,21,23,22,20,25],
[25,22,26,29,0,28,21,23,25],
[23,21,25,27,22,0,20,20,25],
[30,25,28,28,29,30,0,30,30],
[26,23,32,30,27,30,20,0,28],
[25,21,23,25,25,25,20,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,23,30,21,16,21,11,16],
[34,0,29,31,16,22,19,18,17],
[27,21,0,29,22,22,22,17,17],
[20,19,21,0,16,21,12,17,15],
[29,34,28,34,0,28,29,21,30],
[34,28,28,29,22,0,24,24,27],
[29,31,28,38,21,26,0,20,30],
[39,32,33,33,29,26,30,0,23],
[34,33,33,35,20,23,20,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,28,22,28,28,27,29,27],
[22,0,22,19,27,20,20,24,25],
[22,28,0,22,22,27,27,23,21],
[28,31,28,0,25,29,29,29,29],
[22,23,28,25,0,24,24,24,23],
[22,30,23,21,26,0,20,24,22],
[23,30,23,21,26,30,0,23,22],
[21,26,27,21,26,26,27,0,24],
[23,25,29,21,27,28,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,24,29,23,24,18,34],
[24,0,26,29,35,31,35,25,31],
[22,24,0,21,25,20,26,17,20],
[26,21,29,0,34,29,32,25,32],
[21,15,25,16,0,24,15,17,22],
[27,19,30,21,26,0,29,14,30],
[26,15,24,18,35,21,0,24,33],
[32,25,33,25,33,36,26,0,32],
[16,19,30,18,28,20,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,22,21,20,17,21,19,26],
[27,0,31,28,27,21,25,25,36],
[28,19,0,24,21,22,24,19,26],
[29,22,26,0,21,19,20,21,27],
[30,23,29,29,0,28,24,20,33],
[33,29,28,31,22,0,23,29,31],
[29,25,26,30,26,27,0,21,34],
[31,25,31,29,30,21,29,0,35],
[24,14,24,23,17,19,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,31,23,18,24,21,21],
[28,0,21,30,29,22,20,24,20],
[29,29,0,26,30,28,25,29,28],
[19,20,24,0,22,20,22,20,20],
[27,21,20,28,0,25,24,24,21],
[32,28,22,30,25,0,31,26,24],
[26,30,25,28,26,19,0,22,24],
[29,26,21,30,26,24,28,0,28],
[29,30,22,30,29,26,26,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,28,33,14,32,26,24,20],
[21,0,21,27,19,28,22,19,18],
[22,29,0,35,25,37,22,28,21],
[17,23,15,0,10,23,19,17,21],
[36,31,25,40,0,35,35,30,26],
[18,22,13,27,15,0,15,19,12],
[24,28,28,31,15,35,0,23,20],
[26,31,22,33,20,31,27,0,13],
[30,32,29,29,24,38,30,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,34,30,30,30,36,40],
[26,0,22,28,25,15,32,29,35],
[24,28,0,22,22,22,29,29,32],
[16,22,28,0,19,17,28,28,29],
[20,25,28,31,0,22,26,30,29],
[20,35,28,33,28,0,27,29,42],
[20,18,21,22,24,23,0,30,33],
[14,21,21,22,20,21,20,0,30],
[10,15,18,21,21,8,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,23,26,26,25,24,24,29],
[18,0,16,22,22,22,20,13,26],
[27,34,0,24,24,24,24,23,23],
[24,28,26,0,27,21,25,24,19],
[24,28,26,23,0,23,21,21,22],
[25,28,26,29,27,0,25,24,28],
[26,30,26,25,29,25,0,28,27],
[26,37,27,26,29,26,22,0,26],
[21,24,27,31,28,22,23,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,37,37,37,32,23,36,18],
[27,0,14,14,14,14,27,13,0],
[13,36,0,45,27,27,31,36,18],
[13,36,5,0,0,0,13,18,0],
[13,36,23,50,0,0,31,36,18],
[18,36,23,50,50,0,36,36,23],
[27,23,19,37,19,14,0,36,18],
[14,37,14,32,14,14,14,0,32],
[32,50,32,50,32,27,32,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,25,24,27,32,31,28,26],
[30,0,29,25,33,30,31,30,27],
[25,21,0,22,30,27,28,28,24],
[26,25,28,0,30,29,29,27,27],
[23,17,20,20,0,26,22,25,20],
[18,20,23,21,24,0,27,26,23],
[19,19,22,21,28,23,0,25,22],
[22,20,22,23,25,24,25,0,18],
[24,23,26,23,30,27,28,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,24,26,28,22,28,25],
[25,0,26,27,22,30,26,27,28],
[21,24,0,29,26,31,22,26,26],
[26,23,21,0,26,32,25,23,24],
[24,28,24,24,0,27,21,31,27],
[22,20,19,18,23,0,23,25,24],
[28,24,28,25,29,27,0,25,26],
[22,23,24,27,19,25,25,0,28],
[25,22,24,26,23,26,24,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,29,26,25,25,26,25],
[25,0,27,25,30,20,23,28,20],
[25,23,0,27,26,20,23,23,24],
[21,25,23,0,22,21,12,24,20],
[24,20,24,28,0,18,16,20,19],
[25,30,30,29,32,0,25,26,28],
[25,27,27,38,34,25,0,25,20],
[24,22,27,26,30,24,25,0,22],
[25,30,26,30,31,22,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,27,29,21,27,25,32,36],
[22,0,24,24,25,26,20,26,32],
[23,26,0,23,26,32,26,34,29],
[21,26,27,0,19,28,26,33,23],
[29,25,24,31,0,29,26,34,31],
[23,24,18,22,21,0,24,31,23],
[25,30,24,24,24,26,0,23,29],
[18,24,16,17,16,19,27,0,24],
[14,18,21,27,19,27,21,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,23,23,21,23,21,20,21],
[23,0,23,23,24,22,18,24,16],
[27,27,0,28,27,27,23,25,25],
[27,27,22,0,23,26,24,24,22],
[29,26,23,27,0,23,21,23,20],
[27,28,23,24,27,0,24,30,24],
[29,32,27,26,29,26,0,25,24],
[30,26,25,26,27,20,25,0,17],
[29,34,25,28,30,26,26,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,21,27,24,26,31,29],
[28,0,27,25,23,22,23,21,30],
[28,23,0,23,23,28,26,23,32],
[29,25,27,0,25,22,26,31,27],
[23,27,27,25,0,19,27,24,26],
[26,28,22,28,31,0,26,29,31],
[24,27,24,24,23,24,0,20,33],
[19,29,27,19,26,21,30,0,31],
[21,20,18,23,24,19,17,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,21,33,19,21,21,15,28],
[33,0,31,35,29,31,22,30,18],
[29,19,0,23,15,30,18,21,18],
[17,15,27,0,21,23,24,12,21],
[31,21,35,29,0,35,27,30,25],
[29,19,20,27,15,0,12,26,16],
[29,28,32,26,23,38,0,19,20],
[35,20,29,38,20,24,31,0,23],
[22,32,32,29,25,34,30,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,29,32,27,20,25,21,24],
[21,0,21,22,18,16,13,15,18],
[21,29,0,25,23,26,25,21,26],
[18,28,25,0,21,15,17,23,20],
[23,32,27,29,0,24,23,20,19],
[30,34,24,35,26,0,25,24,28],
[25,37,25,33,27,25,0,28,28],
[29,35,29,27,30,26,22,0,28],
[26,32,24,30,31,22,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,27,28,38,19,33,41,17],
[21,0,22,31,34,16,31,29,13],
[23,28,0,29,29,22,38,29,27],
[22,19,21,0,21,22,17,18,14],
[12,16,21,29,0,20,22,26,19],
[31,34,28,28,30,0,29,36,16],
[17,19,12,33,28,21,0,22,27],
[9,21,21,32,24,14,28,0,12],
[33,37,23,36,31,34,23,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,30,22,34,21,6,19,36],
[29,0,20,27,31,29,26,24,28],
[20,30,0,35,38,21,17,18,29],
[28,23,15,0,19,17,17,26,25],
[16,19,12,31,0,14,21,27,17],
[29,21,29,33,36,0,29,22,38],
[44,24,33,33,29,21,0,13,37],
[31,26,32,24,23,28,37,0,28],
[14,22,21,25,33,12,13,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,28,26,27,24,23,28,29],
[14,0,19,21,24,17,23,17,24],
[22,31,0,24,18,22,28,22,28],
[24,29,26,0,19,16,20,21,26],
[23,26,32,31,0,22,29,23,28],
[26,33,28,34,28,0,29,25,32],
[27,27,22,30,21,21,0,22,29],
[22,33,28,29,27,25,28,0,33],
[21,26,22,24,22,18,21,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,21,32,31,27,29,28,30],
[24,0,31,34,30,30,34,30,29],
[29,19,0,32,28,28,28,28,35],
[18,16,18,0,31,26,27,30,26],
[19,20,22,19,0,31,25,30,31],
[23,20,22,24,19,0,29,21,31],
[21,16,22,23,25,21,0,25,26],
[22,20,22,20,20,29,25,0,27],
[20,21,15,24,19,19,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,15,19,14,20,19,14,15],
[31,0,19,30,25,19,32,30,22],
[35,31,0,26,27,23,27,24,17],
[31,20,24,0,11,26,22,22,16],
[36,25,23,39,0,23,39,23,32],
[30,31,27,24,27,0,29,21,26],
[31,18,23,28,11,21,0,22,24],
[36,20,26,28,27,29,28,0,34],
[35,28,33,34,18,24,26,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,17,26,24,22,17,14,18],
[28,0,16,33,30,29,19,20,24],
[33,34,0,29,25,30,25,20,30],
[24,17,21,0,18,25,19,13,16],
[26,20,25,32,0,25,20,16,21],
[28,21,20,25,25,0,24,20,26],
[33,31,25,31,30,26,0,19,30],
[36,30,30,37,34,30,31,0,25],
[32,26,20,34,29,24,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,40,32,24,33,37,30,28],
[24,0,39,30,26,18,45,25,30],
[10,11,0,23,16,14,29,10,12],
[18,20,27,0,25,25,45,10,30],
[26,24,34,25,0,29,42,25,19],
[17,32,36,25,21,0,42,19,22],
[13,5,21,5,8,8,0,6,20],
[20,25,40,40,25,31,44,0,26],
[22,20,38,20,31,28,30,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,24,17,21,22,17,24],
[25,0,36,22,20,21,22,26,27],
[22,14,0,17,15,10,17,15,18],
[26,28,33,0,22,23,27,23,23],
[33,30,35,28,0,22,33,22,33],
[29,29,40,27,28,0,30,32,24],
[28,28,33,23,17,20,0,22,28],
[33,24,35,27,28,18,28,0,26],
[26,23,32,27,17,26,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,30,29,28,29,25,37,28],
[24,0,24,26,23,20,22,26,26],
[20,26,0,22,26,22,20,22,24],
[21,24,28,0,24,26,22,26,29],
[22,27,24,26,0,31,25,26,23],
[21,30,28,24,19,0,26,27,26],
[25,28,30,28,25,24,0,28,28],
[13,24,28,24,24,23,22,0,24],
[22,24,26,21,27,24,22,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,26,24,26,26,24,22],
[33,0,26,25,30,28,34,28,23],
[32,24,0,25,26,28,29,23,23],
[24,25,25,0,27,22,31,25,26],
[26,20,24,23,0,25,30,20,27],
[24,22,22,28,25,0,26,33,25],
[24,16,21,19,20,24,0,19,22],
[26,22,27,25,30,17,31,0,27],
[28,27,27,24,23,25,28,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,24,27,23,23,26,19,24],
[29,0,26,28,27,23,28,27,28],
[26,24,0,23,21,23,24,21,27],
[23,22,27,0,22,21,24,24,21],
[27,23,29,28,0,22,30,22,23],
[27,27,27,29,28,0,29,28,24],
[24,22,26,26,20,21,0,21,19],
[31,23,29,26,28,22,29,0,24],
[26,22,23,29,27,26,31,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,27,23,27,26,29,33,25],
[20,0,28,25,26,23,23,31,24],
[23,22,0,20,21,24,25,32,24],
[27,25,30,0,21,24,32,31,30],
[23,24,29,29,0,24,28,31,28],
[24,27,26,26,26,0,24,29,25],
[21,27,25,18,22,26,0,29,23],
[17,19,18,19,19,21,21,0,21],
[25,26,26,20,22,25,27,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,22,23,27,20,24,27,21],
[26,0,32,29,26,21,29,30,23],
[28,18,0,27,25,27,39,29,29],
[27,21,23,0,23,25,31,33,27],
[23,24,25,27,0,24,22,24,23],
[30,29,23,25,26,0,33,28,26],
[26,21,11,19,28,17,0,25,30],
[23,20,21,17,26,22,25,0,24],
[29,27,21,23,27,24,20,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,20,21,30,17,26,29],
[29,0,28,23,20,27,26,29,27],
[30,22,0,23,22,22,24,25,31],
[30,27,27,0,21,28,22,29,28],
[29,30,28,29,0,24,24,26,32],
[20,23,28,22,26,0,18,26,30],
[33,24,26,28,26,32,0,28,30],
[24,21,25,21,24,24,22,0,28],
[21,23,19,22,18,20,20,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,22,29,28,22,25,22,28],
[24,0,24,27,33,25,24,23,27],
[28,26,0,28,32,25,26,25,32],
[21,23,22,0,27,23,21,24,30],
[22,17,18,23,0,19,18,19,24],
[28,25,25,27,31,0,28,21,30],
[25,26,24,29,32,22,0,22,30],
[28,27,25,26,31,29,28,0,28],
[22,23,18,20,26,20,20,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,22,29,24,31,33,31,31],
[20,0,15,23,27,18,28,29,17],
[28,35,0,21,31,33,36,30,28],
[21,27,29,0,28,28,27,30,28],
[26,23,19,22,0,26,26,23,21],
[19,32,17,22,24,0,21,29,19],
[17,22,14,23,24,29,0,25,17],
[19,21,20,20,27,21,25,0,17],
[19,33,22,22,29,31,33,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,27,30,30,33,31,19,26],
[32,0,29,29,15,20,15,27,25],
[23,21,0,12,20,29,36,25,22],
[20,21,38,0,15,31,26,20,29],
[20,35,30,35,0,36,31,31,31],
[17,30,21,19,14,0,20,19,19],
[19,35,14,24,19,30,0,24,14],
[31,23,25,30,19,31,26,0,26],
[24,25,28,21,19,31,36,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,32,24,32,32,31,27,30],
[20,0,25,29,24,32,31,20,16],
[18,25,0,25,27,27,28,19,24],
[26,21,25,0,19,26,24,18,21],
[18,26,23,31,0,32,29,21,23],
[18,18,23,24,18,0,27,18,20],
[19,19,22,26,21,23,0,17,20],
[23,30,31,32,29,32,33,0,25],
[20,34,26,29,27,30,30,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,31,40,29,35,26,21],
[26,0,29,36,39,30,37,32,20],
[26,21,0,21,32,21,27,29,17],
[19,14,29,0,28,26,26,21,23],
[10,11,18,22,0,21,11,24,10],
[21,20,29,24,29,0,22,26,29],
[15,13,23,24,39,28,0,24,23],
[24,18,21,29,26,24,26,0,17],
[29,30,33,27,40,21,27,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,18,8,1,4,22,5],
[36,0,35,35,23,11,1,32,12],
[32,15,0,35,12,22,8,32,15],
[32,15,15,0,19,5,8,22,15],
[42,27,38,31,0,23,27,24,27],
[49,39,28,45,27,0,14,21,33],
[46,49,42,42,23,36,0,32,33],
[28,18,18,28,26,29,18,0,23],
[45,38,35,35,23,17,17,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,22,32,19,23,24,23],
[30,0,25,22,28,28,24,28,30],
[31,25,0,12,24,22,18,22,27],
[28,28,38,0,32,26,20,28,28],
[18,22,26,18,0,17,14,23,23],
[31,22,28,24,33,0,25,25,29],
[27,26,32,30,36,25,0,24,25],
[26,22,28,22,27,25,26,0,26],
[27,20,23,22,27,21,25,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,22,23,19,22,21,19],
[25,0,30,23,26,23,27,28,28],
[24,20,0,25,25,22,21,20,21],
[28,27,25,0,28,22,29,24,25],
[27,24,25,22,0,21,25,29,19],
[31,27,28,28,29,0,25,28,24],
[28,23,29,21,25,25,0,24,23],
[29,22,30,26,21,22,26,0,22],
[31,22,29,25,31,26,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,50,50,50,32,31,50,50],
[32,0,50,50,32,32,13,50,50],
[0,0,0,37,32,19,0,19,37],
[0,0,13,0,32,19,13,32,50],
[0,18,18,18,0,19,0,18,18],
[18,18,31,31,31,0,31,31,31],
[19,37,50,37,50,19,0,37,37],
[0,0,31,18,32,19,13,0,50],
[0,0,13,0,32,19,13,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,28,25,28,22,27,22,26],
[23,0,29,24,30,23,26,25,24],
[22,21,0,22,24,19,27,18,18],
[25,26,28,0,30,25,26,25,28],
[22,20,26,20,0,17,21,19,21],
[28,27,31,25,33,0,26,24,25],
[23,24,23,24,29,24,0,20,22],
[28,25,32,25,31,26,30,0,22],
[24,26,32,22,29,25,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,21,11,21,35,18,7],
[25,0,20,27,21,31,28,24,13],
[26,30,0,28,11,30,25,18,11],
[29,23,22,0,4,33,35,11,15],
[39,29,39,46,0,50,43,29,25],
[29,19,20,17,0,0,35,7,3],
[15,22,25,15,7,15,0,15,8],
[32,26,32,39,21,43,35,0,32],
[43,37,39,35,25,47,42,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,26,28,19,27,26,22],
[25,0,27,28,30,28,26,29,21],
[26,23,0,26,23,22,24,21,22],
[24,22,24,0,27,22,23,23,22],
[22,20,27,23,0,22,20,24,21],
[31,22,28,28,28,0,24,25,28],
[23,24,26,27,30,26,0,29,23],
[24,21,29,27,26,25,21,0,21],
[28,29,28,28,29,22,27,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,24,29,21,28,25,17],
[28,0,25,26,25,25,22,21,25],
[25,25,0,24,29,24,33,24,21],
[26,24,26,0,24,26,30,25,22],
[21,25,21,26,0,18,31,24,22],
[29,25,26,24,32,0,32,30,25],
[22,28,17,20,19,18,0,19,18],
[25,29,26,25,26,20,31,0,23],
[33,25,29,28,28,25,32,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,17,23,25,17,26,34,34],
[18,0,21,23,30,17,17,27,20],
[33,29,0,31,31,34,24,38,31],
[27,27,19,0,25,23,28,33,17],
[25,20,19,25,0,22,22,31,20],
[33,33,16,27,28,0,28,37,28],
[24,33,26,22,28,22,0,33,24],
[16,23,12,17,19,13,17,0,16],
[16,30,19,33,30,22,26,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,23,26,21,16,22,22],
[25,0,30,23,25,23,19,20,24],
[20,20,0,19,22,12,18,19,21],
[27,27,31,0,26,24,26,23,22],
[24,25,28,24,0,23,20,22,26],
[29,27,38,26,27,0,21,27,27],
[34,31,32,24,30,29,0,27,26],
[28,30,31,27,28,23,23,0,30],
[28,26,29,28,24,23,24,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,30,29,23,30,24,24,19],
[18,0,25,30,22,26,22,23,20],
[20,25,0,24,20,21,22,21,19],
[21,20,26,0,17,22,21,15,21],
[27,28,30,33,0,31,29,25,25],
[20,24,29,28,19,0,17,28,23],
[26,28,28,29,21,33,0,27,23],
[26,27,29,35,25,22,23,0,17],
[31,30,31,29,25,27,27,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,27,25,24,24,26,27,29],
[26,0,26,25,29,26,24,28,24],
[23,24,0,24,30,19,23,23,22],
[25,25,26,0,24,23,20,21,25],
[26,21,20,26,0,20,21,23,23],
[26,24,31,27,30,0,25,29,27],
[24,26,27,30,29,25,0,30,28],
[23,22,27,29,27,21,20,0,25],
[21,26,28,25,27,23,22,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,25,25,24,18,17,22],
[27,0,26,19,18,23,15,19,28],
[24,24,0,25,25,28,29,20,24],
[25,31,25,0,32,29,32,26,32],
[25,32,25,18,0,26,22,24,28],
[26,27,22,21,24,0,20,21,24],
[32,35,21,18,28,30,0,28,26],
[33,31,30,24,26,29,22,0,23],
[28,22,26,18,22,26,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,37,26,25,30,27,28,22],
[27,0,35,21,21,21,28,25,24],
[13,15,0,21,20,13,25,22,18],
[24,29,29,0,25,31,27,31,24],
[25,29,30,25,0,29,30,29,27],
[20,29,37,19,21,0,30,20,22],
[23,22,25,23,20,20,0,28,21],
[22,25,28,19,21,30,22,0,21],
[28,26,32,26,23,28,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,31,29,19,42,33,25,25],
[15,0,21,10,29,31,30,24,23],
[19,29,0,18,25,28,30,26,27],
[21,40,32,0,25,33,34,23,19],
[31,21,25,25,0,32,31,26,20],
[8,19,22,17,18,0,31,16,14],
[17,20,20,16,19,19,0,14,20],
[25,26,24,27,24,34,36,0,29],
[25,27,23,31,30,36,30,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,1,1,1,20,20,1,1],
[30,0,31,16,25,25,35,25,30],
[49,19,0,25,44,19,19,34,39],
[49,34,25,0,25,44,34,25,30],
[49,25,6,25,0,19,20,34,39],
[30,25,31,6,31,0,20,15,21],
[30,15,31,16,30,30,0,30,30],
[49,25,16,25,16,35,20,0,50],
[49,20,11,20,11,29,20,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,24,30,20,21,23,23,29],
[20,0,26,25,22,19,21,24,22],
[26,24,0,27,15,23,24,18,24],
[20,25,23,0,20,15,20,21,23],
[30,28,35,30,0,33,19,28,27],
[29,31,27,35,17,0,26,16,25],
[27,29,26,30,31,24,0,18,28],
[27,26,32,29,22,34,32,0,21],
[21,28,26,27,23,25,22,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,27,25,46,33,46,27,33],
[7,0,12,25,42,37,20,23,37],
[23,38,0,33,42,30,34,26,34],
[25,25,17,0,50,39,25,28,39],
[4,8,8,0,0,19,8,8,34],
[17,13,20,11,31,0,17,31,42],
[4,30,16,25,42,33,0,31,37],
[23,27,24,22,42,19,19,0,34],
[17,13,16,11,16,8,13,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,20,21,24,22,29,19],
[28,0,21,27,27,22,22,25,24],
[29,29,0,31,20,34,21,32,29],
[30,23,19,0,24,26,26,28,26],
[29,23,30,26,0,24,21,26,22],
[26,28,16,24,26,0,24,28,25],
[28,28,29,24,29,26,0,26,23],
[21,25,18,22,24,22,24,0,21],
[31,26,21,24,28,25,27,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,25,29,26,24,22,34,20],
[22,0,23,24,20,15,18,22,19],
[25,27,0,26,29,23,25,31,29],
[21,26,24,0,27,14,18,25,15],
[24,30,21,23,0,23,23,27,23],
[26,35,27,36,27,0,26,35,22],
[28,32,25,32,27,24,0,31,28],
[16,28,19,25,23,15,19,0,16],
[30,31,21,35,27,28,22,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,26,28,26,23,27,19],
[30,0,27,33,25,26,30,29,26],
[26,23,0,20,26,21,19,30,24],
[24,17,30,0,27,19,19,24,25],
[22,25,24,23,0,24,25,25,24],
[24,24,29,31,26,0,32,29,27],
[27,20,31,31,25,18,0,24,30],
[23,21,20,26,25,21,26,0,22],
[31,24,26,25,26,23,20,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,25,25,22,24,23,33,28],
[13,0,25,24,16,22,19,26,15],
[25,25,0,26,25,24,19,20,15],
[25,26,24,0,22,32,29,29,29],
[28,34,25,28,0,28,21,25,16],
[26,28,26,18,22,0,16,21,20],
[27,31,31,21,29,34,0,24,24],
[17,24,30,21,25,29,26,0,29],
[22,35,35,21,34,30,26,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,21,29,33,36,26,27,28],
[20,0,24,23,23,26,22,22,25],
[29,26,0,26,26,31,23,26,26],
[21,27,24,0,18,26,19,21,25],
[17,27,24,32,0,28,24,25,23],
[14,24,19,24,22,0,23,25,24],
[24,28,27,31,26,27,0,23,26],
[23,28,24,29,25,25,27,0,26],
[22,25,24,25,27,26,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,25,24,36,15,30,25],
[24,0,23,27,25,36,19,22,23],
[24,27,0,30,27,37,24,21,25],
[25,23,20,0,22,26,19,23,18],
[26,25,23,28,0,29,17,20,30],
[14,14,13,24,21,0,15,19,16],
[35,31,26,31,33,35,0,29,24],
[20,28,29,27,30,31,21,0,28],
[25,27,25,32,20,34,26,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,31,22,30,30,23,30,28],
[22,0,28,27,31,30,18,21,23],
[19,22,0,23,32,27,17,25,21],
[28,23,27,0,31,33,25,31,27],
[20,19,18,19,0,29,17,19,20],
[20,20,23,17,21,0,15,18,26],
[27,32,33,25,33,35,0,30,33],
[20,29,25,19,31,32,20,0,18],
[22,27,29,23,30,24,17,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,46,28,25,34,23,14],
[31,0,15,38,28,6,15,23,18],
[31,35,0,46,17,35,35,35,39],
[4,12,4,0,17,18,27,23,12],
[22,22,33,33,0,22,31,22,30],
[25,44,15,32,28,0,27,35,33],
[16,35,15,23,19,23,0,26,24],
[27,27,15,27,28,15,24,0,35],
[36,32,11,38,20,17,26,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,19,31,19,24,24,25,15],
[28,0,27,29,22,30,24,29,12],
[31,23,0,38,24,22,21,39,19],
[19,21,12,0,9,16,18,23,6],
[31,28,26,41,0,28,31,31,25],
[26,20,28,34,22,0,21,28,17],
[26,26,29,32,19,29,0,26,19],
[25,21,11,27,19,22,24,0,15],
[35,38,31,44,25,33,31,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,22,28,23,26,20,22],
[28,0,30,25,32,25,28,25,24],
[26,20,0,23,29,23,29,24,19],
[28,25,27,0,30,21,30,24,25],
[22,18,21,20,0,20,24,24,17],
[27,25,27,29,30,0,28,27,27],
[24,22,21,20,26,22,0,19,16],
[30,25,26,26,26,23,31,0,23],
[28,26,31,25,33,23,34,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,20,21,23,20,25,20,21],
[26,0,28,27,22,23,24,24,28],
[30,22,0,24,20,23,20,21,22],
[29,23,26,0,21,23,23,23,28],
[27,28,30,29,0,27,27,24,28],
[30,27,27,27,23,0,25,25,23],
[25,26,30,27,23,25,0,20,19],
[30,26,29,27,26,25,30,0,27],
[29,22,28,22,22,27,31,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,19,20,17,20,21,27,17],
[21,0,15,19,15,18,23,20,15],
[31,35,0,25,27,28,34,28,22],
[30,31,25,0,27,35,32,27,24],
[33,35,23,23,0,28,28,26,25],
[30,32,22,15,22,0,22,28,24],
[29,27,16,18,22,28,0,25,18],
[23,30,22,23,24,22,25,0,27],
[33,35,28,26,25,26,32,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,29,21,19,21,22,24,24],
[31,0,33,27,26,29,25,21,32],
[21,17,0,21,24,23,18,17,19],
[29,23,29,0,25,30,23,23,25],
[31,24,26,25,0,27,25,26,26],
[29,21,27,20,23,0,25,26,23],
[28,25,32,27,25,25,0,26,25],
[26,29,33,27,24,24,24,0,27],
[26,18,31,25,24,27,25,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,24,26,29,28,21,20],
[26,0,24,32,27,27,33,26,32],
[22,26,0,30,22,32,30,23,26],
[26,18,20,0,23,20,25,18,26],
[24,23,28,27,0,30,30,21,26],
[21,23,18,30,20,0,34,21,24],
[22,17,20,25,20,16,0,17,20],
[29,24,27,32,29,29,33,0,26],
[30,18,24,24,24,26,30,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,29,23,22,24,28,20,23],
[27,0,23,14,16,15,22,17,20],
[21,27,0,20,19,21,21,18,22],
[27,36,30,0,20,25,29,21,27],
[28,34,31,30,0,30,30,24,26],
[26,35,29,25,20,0,28,28,25],
[22,28,29,21,20,22,0,22,23],
[30,33,32,29,26,22,28,0,24],
[27,30,28,23,24,25,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,23,22,29,10,12,17,22],
[38,0,23,31,36,33,34,26,37],
[27,27,0,34,24,36,26,20,28],
[28,19,16,0,31,26,24,28,33],
[21,14,26,19,0,13,22,23,18],
[40,17,14,24,37,0,29,27,23],
[38,16,24,26,28,21,0,21,29],
[33,24,30,22,27,23,29,0,29],
[28,13,22,17,32,27,21,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,29,25,30,43,36,27,29],
[20,0,23,17,25,22,31,21,20],
[21,27,0,19,32,26,27,30,30],
[25,33,31,0,38,38,37,19,28],
[20,25,18,12,0,21,29,14,24],
[7,28,24,12,29,0,32,15,22],
[14,19,23,13,21,18,0,22,23],
[23,29,20,31,36,35,28,0,26],
[21,30,20,22,26,28,27,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,46,41,28,41,19,46],
[13,0,50,46,40,19,32,28,46],
[13,0,0,28,31,0,13,28,18],
[4,4,22,0,22,0,4,4,22],
[9,10,19,28,0,19,19,19,28],
[22,31,50,50,31,0,13,32,40],
[9,18,37,46,31,37,0,19,46],
[31,22,22,46,31,18,31,0,40],
[4,4,32,28,22,10,4,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,24,31,27,21,20,27,32],
[27,0,22,28,25,24,28,22,28],
[26,28,0,28,26,27,26,24,28],
[19,22,22,0,23,29,24,25,28],
[23,25,24,27,0,25,25,25,27],
[29,26,23,21,25,0,23,23,30],
[30,22,24,26,25,27,0,26,29],
[23,28,26,25,25,27,24,0,23],
[18,22,22,22,23,20,21,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,24,20,29,26,21,20,22],
[23,0,26,20,21,19,25,19,24],
[26,24,0,22,31,26,30,31,26],
[30,30,28,0,33,24,27,19,26],
[21,29,19,17,0,25,20,19,21],
[24,31,24,26,25,0,24,21,24],
[29,25,20,23,30,26,0,21,27],
[30,31,19,31,31,29,29,0,30],
[28,26,24,24,29,26,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,28,29,20,29,29,26,25],
[22,0,30,31,26,22,22,21,28],
[22,20,0,19,24,29,27,14,19],
[21,19,31,0,23,26,23,21,30],
[30,24,26,27,0,30,29,20,31],
[21,28,21,24,20,0,25,19,22],
[21,28,23,27,21,25,0,22,30],
[24,29,36,29,30,31,28,0,26],
[25,22,31,20,19,28,20,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,23,26,25,18,20,29,18],
[40,0,30,35,24,20,26,25,29],
[27,20,0,21,21,20,15,18,22],
[24,15,29,0,27,21,21,33,25],
[25,26,29,23,0,19,12,23,15],
[32,30,30,29,31,0,34,25,19],
[30,24,35,29,38,16,0,31,17],
[21,25,32,17,27,25,19,0,20],
[32,21,28,25,35,31,33,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,17,27,32,23,22,27,14],
[22,0,24,27,31,8,13,16,16],
[33,26,0,25,17,17,15,21,16],
[23,23,25,0,32,23,22,14,31],
[18,19,33,18,0,17,13,24,18],
[27,42,33,27,33,0,27,21,41],
[28,37,35,28,37,23,0,24,24],
[23,34,29,36,26,29,26,0,29],
[36,34,34,19,32,9,26,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,29,34,30,41,40,24,26],
[6,0,19,18,22,24,16,20,8],
[21,31,0,30,19,30,27,26,22],
[16,32,20,0,17,23,23,15,12],
[20,28,31,33,0,36,28,20,15],
[9,26,20,27,14,0,22,12,7],
[10,34,23,27,22,28,0,23,19],
[26,30,24,35,30,38,27,0,16],
[24,42,28,38,35,43,31,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,22,16,21,24,18,23,23],
[26,0,22,21,20,24,19,24,20],
[28,28,0,23,24,22,22,18,25],
[34,29,27,0,30,34,25,24,32],
[29,30,26,20,0,29,21,28,24],
[26,26,28,16,21,0,16,24,26],
[32,31,28,25,29,34,0,32,33],
[27,26,32,26,22,26,18,0,24],
[27,30,25,18,26,24,17,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,21,31,31,36,33,13,13],
[17,0,24,19,48,39,33,21,14],
[29,26,0,21,24,37,29,19,23],
[19,31,29,0,29,50,24,19,25],
[19,2,26,21,0,29,19,10,16],
[14,11,13,0,21,0,17,16,11],
[17,17,21,26,31,33,0,10,14],
[37,29,31,31,40,34,40,0,11],
[37,36,27,25,34,39,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,30,23,27,32,28,33,30],
[20,0,27,21,18,24,21,28,23],
[20,23,0,14,22,30,23,24,21],
[27,29,36,0,23,33,26,31,31],
[23,32,28,27,0,34,31,31,27],
[18,26,20,17,16,0,22,20,17],
[22,29,27,24,19,28,0,28,26],
[17,22,26,19,19,30,22,0,19],
[20,27,29,19,23,33,24,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,29,28,31,24,23,27,26],
[29,0,26,26,30,27,24,30,28],
[21,24,0,22,26,18,18,29,23],
[22,24,28,0,25,19,24,29,21],
[19,20,24,25,0,19,14,24,21],
[26,23,32,31,31,0,23,28,26],
[27,26,32,26,36,27,0,32,25],
[23,20,21,21,26,22,18,0,22],
[24,22,27,29,29,24,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,9,14,22,15,23,16,21],
[28,0,13,17,19,16,20,20,18],
[41,37,0,23,35,31,36,35,31],
[36,33,27,0,25,26,23,24,25],
[28,31,15,25,0,20,22,27,21],
[35,34,19,24,30,0,20,26,24],
[27,30,14,27,28,30,0,22,23],
[34,30,15,26,23,24,28,0,32],
[29,32,19,25,29,26,27,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,27,29,26,26,28,24,33],
[22,0,19,23,13,27,31,30,32],
[23,31,0,25,17,26,27,31,33],
[21,27,25,0,23,23,30,29,30],
[24,37,33,27,0,31,29,31,30],
[24,23,24,27,19,0,25,26,28],
[22,19,23,20,21,25,0,25,26],
[26,20,19,21,19,24,25,0,30],
[17,18,17,20,20,22,24,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,30,21,29,23,21,42,35],
[18,0,23,29,36,22,27,30,20],
[20,27,0,22,25,24,18,29,20],
[29,21,28,0,32,22,23,41,28],
[21,14,25,18,0,14,24,32,21],
[27,28,26,28,36,0,26,29,19],
[29,23,32,27,26,24,0,40,32],
[8,20,21,9,18,21,10,0,10],
[15,30,30,22,29,31,18,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,13,20,27,26,22,30,15],
[29,0,22,24,14,27,30,19,20],
[37,28,0,25,20,33,35,31,29],
[30,26,25,0,21,36,26,33,30],
[23,36,30,29,0,27,24,20,28],
[24,23,17,14,23,0,17,13,18],
[28,20,15,24,26,33,0,28,34],
[20,31,19,17,30,37,22,0,31],
[35,30,21,20,22,32,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,27,26,29,23,26,28,30],
[20,0,26,26,24,27,20,24,23],
[23,24,0,27,25,22,23,18,25],
[24,24,23,0,24,23,25,22,26],
[21,26,25,26,0,23,26,22,24],
[27,23,28,27,27,0,30,31,23],
[24,30,27,25,24,20,0,23,25],
[22,26,32,28,28,19,27,0,24],
[20,27,25,24,26,27,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,22,18,21,22,25,26],
[25,0,24,25,19,26,25,24,20],
[29,26,0,27,25,26,28,29,28],
[28,25,23,0,19,24,24,22,23],
[32,31,25,31,0,31,32,26,26],
[29,24,24,26,19,0,26,27,24],
[28,25,22,26,18,24,0,28,23],
[25,26,21,28,24,23,22,0,20],
[24,30,22,27,24,26,27,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,29,14,15,15,16,25],
[33,0,29,33,12,17,22,12,28],
[32,21,0,23,18,16,21,20,34],
[21,17,27,0,23,16,15,12,29],
[36,38,32,27,0,21,30,26,32],
[35,33,34,34,29,0,29,24,43],
[35,28,29,35,20,21,0,19,38],
[34,38,30,38,24,26,31,0,42],
[25,22,16,21,18,7,12,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,17,14,33,15,15,40,16],
[17,0,11,19,18,23,17,35,24],
[33,39,0,20,33,26,28,41,22],
[36,31,30,0,34,32,19,44,16],
[17,32,17,16,0,19,9,35,11],
[35,27,24,18,31,0,23,50,30],
[35,33,22,31,41,27,0,45,26],
[10,15,9,6,15,0,5,0,22],
[34,26,28,34,39,20,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,19,39,28,15,25,25,24],
[26,0,14,28,35,7,24,38,26],
[31,36,0,37,40,25,30,35,36],
[11,22,13,0,30,7,13,25,20],
[22,15,10,20,0,13,17,28,21],
[35,43,25,43,37,0,33,33,30],
[25,26,20,37,33,17,0,30,26],
[25,12,15,25,22,17,20,0,18],
[26,24,14,30,29,20,24,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,21,27,24,31,26,27,28],
[14,0,21,24,21,24,20,23,17],
[29,29,0,25,25,28,20,20,24],
[23,26,25,0,18,29,21,18,20],
[26,29,25,32,0,29,26,21,26],
[19,26,22,21,21,0,17,25,22],
[24,30,30,29,24,33,0,23,27],
[23,27,30,32,29,25,27,0,31],
[22,33,26,30,24,28,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,27,28,20,33,22,27,25],
[24,0,27,19,23,32,15,26,20],
[23,23,0,25,24,28,22,27,16],
[22,31,25,0,24,34,23,30,19],
[30,27,26,26,0,30,23,31,24],
[17,18,22,16,20,0,10,18,17],
[28,35,28,27,27,40,0,37,23],
[23,24,23,20,19,32,13,0,17],
[25,30,34,31,26,33,27,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,30,26,23,25,25,26,30],
[21,0,26,21,24,16,23,21,25],
[20,24,0,19,21,19,17,20,21],
[24,29,31,0,22,25,25,25,27],
[27,26,29,28,0,26,26,25,28],
[25,34,31,25,24,0,29,29,31],
[25,27,33,25,24,21,0,24,24],
[24,29,30,25,25,21,26,0,24],
[20,25,29,23,22,19,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,30,20,22,20,28,28],
[29,0,35,30,24,30,32,28,32],
[25,15,0,32,20,34,22,19,22],
[20,20,18,0,16,21,25,24,24],
[30,26,30,34,0,30,34,25,34],
[28,20,16,29,20,0,21,13,35],
[30,18,28,25,16,29,0,21,38],
[22,22,31,26,25,37,29,0,32],
[22,18,28,26,16,15,12,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,19,22,20,29,26,27,23],
[27,0,20,22,17,22,22,24,17],
[31,30,0,25,27,30,26,35,26],
[28,28,25,0,22,27,23,31,32],
[30,33,23,28,0,26,25,32,30],
[21,28,20,23,24,0,22,25,21],
[24,28,24,27,25,28,0,30,24],
[23,26,15,19,18,25,20,0,21],
[27,33,24,18,20,29,26,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,26,22,30,23,26,25,27],
[19,0,23,23,25,24,30,25,27],
[24,27,0,18,28,23,28,26,24],
[28,27,32,0,30,26,33,34,23],
[20,25,22,20,0,22,29,26,27],
[27,26,27,24,28,0,30,26,27],
[24,20,22,17,21,20,0,23,24],
[25,25,24,16,24,24,27,0,18],
[23,23,26,27,23,23,26,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,27,28,16,25,23,20,24],
[28,0,19,28,21,34,23,22,29],
[23,31,0,27,19,30,31,29,34],
[22,22,23,0,19,21,20,23,26],
[34,29,31,31,0,33,30,24,35],
[25,16,20,29,17,0,25,17,31],
[27,27,19,30,20,25,0,22,31],
[30,28,21,27,26,33,28,0,30],
[26,21,16,24,15,19,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,22,37,29,28,19,29,23],
[21,0,22,25,24,19,17,23,20],
[28,28,0,25,24,21,18,26,17],
[13,25,25,0,19,21,16,22,18],
[21,26,26,31,0,25,20,24,17],
[22,31,29,29,25,0,14,25,20],
[31,33,32,34,30,36,0,31,25],
[21,27,24,28,26,25,19,0,20],
[27,30,33,32,33,30,25,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,29,24,28,30,33,25],
[29,0,25,29,31,34,29,33,29],
[25,25,0,29,29,31,28,33,28],
[21,21,21,0,24,24,25,26,24],
[26,19,21,26,0,27,28,29,27],
[22,16,19,26,23,0,26,25,28],
[20,21,22,25,22,24,0,26,23],
[17,17,17,24,21,25,24,0,20],
[25,21,22,26,23,22,27,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,13,30,24,23,17,25,26],
[11,0,11,15,15,6,6,19,11],
[37,39,0,26,31,30,18,31,43],
[20,35,24,0,17,18,10,26,33],
[26,35,19,33,0,28,22,17,36],
[27,44,20,32,22,0,25,20,37],
[33,44,32,40,28,25,0,20,47],
[25,31,19,24,33,30,30,0,38],
[24,39,7,17,14,13,3,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,33,20,33,22,33,30,23],
[26,0,30,30,35,21,39,33,30],
[17,20,0,20,19,23,26,26,21],
[30,20,30,0,31,30,24,24,26],
[17,15,31,19,0,18,35,32,26],
[28,29,27,20,32,0,31,28,23],
[17,11,24,26,15,19,0,18,21],
[20,17,24,26,18,22,32,0,17],
[27,20,29,24,24,27,29,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,25,25,17,24,27,25],
[31,0,23,24,30,24,23,31,28],
[29,27,0,29,23,25,30,25,24],
[25,26,21,0,28,23,23,32,28],
[25,20,27,22,0,25,24,31,31],
[33,26,25,27,25,0,31,29,27],
[26,27,20,27,26,19,0,27,27],
[23,19,25,18,19,21,23,0,23],
[25,22,26,22,19,23,23,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,23,22,22,24,25,22,24],
[20,0,22,20,20,21,23,20,20],
[27,28,0,26,23,24,27,21,25],
[28,30,24,0,24,26,26,21,26],
[28,30,27,26,0,24,26,28,29],
[26,29,26,24,26,0,24,20,28],
[25,27,23,24,24,26,0,22,24],
[28,30,29,29,22,30,28,0,23],
[26,30,25,24,21,22,26,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,30,24,30,35,25,30,26],
[23,0,29,19,27,19,22,24,14],
[20,21,0,19,21,19,14,16,19],
[26,31,31,0,27,26,18,23,24],
[20,23,29,23,0,22,21,33,19],
[15,31,31,24,28,0,17,27,17],
[25,28,36,32,29,33,0,37,31],
[20,26,34,27,17,23,13,0,21],
[24,36,31,26,31,33,19,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,30,24,33,22,24,30,31],
[17,0,37,21,40,31,21,21,33],
[20,13,0,23,29,23,19,15,18],
[26,29,27,0,36,29,22,19,32],
[17,10,21,14,0,13,15,20,21],
[28,19,27,21,37,0,28,25,28],
[26,29,31,28,35,22,0,33,36],
[20,29,35,31,30,25,17,0,30],
[19,17,32,18,29,22,14,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,18,17,26,21,23,24],
[29,0,24,20,21,28,23,27,29],
[25,26,0,27,19,35,25,22,33],
[32,30,23,0,26,32,23,25,33],
[33,29,31,24,0,31,28,24,30],
[24,22,15,18,19,0,17,23,33],
[29,27,25,27,22,33,0,21,30],
[27,23,28,25,26,27,29,0,32],
[26,21,17,17,20,17,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,22,44,28,29,21,20,21],
[15,0,33,30,28,27,21,22,18],
[28,17,0,35,33,18,14,19,13],
[6,20,15,0,14,17,10,9,11],
[22,22,17,36,0,24,7,30,21],
[21,23,32,33,26,0,19,15,15],
[29,29,36,40,43,31,0,25,25],
[30,28,31,41,20,35,25,0,23],
[29,32,37,39,29,35,25,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,19,22,23,17,21,24],
[31,0,25,25,30,26,24,29,35],
[31,25,0,23,28,29,25,24,29],
[31,25,27,0,24,31,22,22,34],
[28,20,22,26,0,26,24,25,33],
[27,24,21,19,24,0,22,21,25],
[33,26,25,28,26,28,0,26,35],
[29,21,26,28,25,29,24,0,33],
[26,15,21,16,17,25,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,31,23,19,28,27,28,23],
[26,0,30,20,20,27,19,25,23],
[19,20,0,19,12,16,15,33,16],
[27,30,31,0,19,23,27,30,25],
[31,30,38,31,0,24,27,33,23],
[22,23,34,27,26,0,25,36,22],
[23,31,35,23,23,25,0,30,23],
[22,25,17,20,17,14,20,0,12],
[27,27,34,25,27,28,27,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,21,23,22,20,25,24,19],
[22,0,22,24,22,24,28,24,24],
[29,28,0,27,26,19,25,30,22],
[27,26,23,0,24,21,24,19,22],
[28,28,24,26,0,24,29,29,22],
[30,26,31,29,26,0,30,30,23],
[25,22,25,26,21,20,0,26,21],
[26,26,20,31,21,20,24,0,25],
[31,26,28,28,28,27,29,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,23,18,23,16,19,16,23],
[30,0,31,24,30,25,29,30,32],
[27,19,0,21,27,20,23,20,24],
[32,26,29,0,28,24,23,25,32],
[27,20,23,22,0,22,26,22,26],
[34,25,30,26,28,0,26,23,30],
[31,21,27,27,24,24,0,20,28],
[34,20,30,25,28,27,30,0,29],
[27,18,26,18,24,20,22,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,29,28,25,45,40,36,49],
[20,0,36,19,22,32,34,33,37],
[21,14,0,15,15,27,32,22,32],
[22,31,35,0,25,35,46,34,36],
[25,28,35,25,0,36,42,36,41],
[5,18,23,15,14,0,33,28,30],
[10,16,18,4,8,17,0,18,22],
[14,17,28,16,14,22,32,0,22],
[1,13,18,14,9,20,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,18,22,22,18,22,15,22],
[27,0,21,25,29,27,27,19,27],
[32,29,0,25,23,21,24,25,25],
[28,25,25,0,30,22,29,21,29],
[28,21,27,20,0,20,24,20,25],
[32,23,29,28,30,0,26,24,32],
[28,23,26,21,26,24,0,19,26],
[35,31,25,29,30,26,31,0,38],
[28,23,25,21,25,18,24,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,46,50,24,46,46,46,46],
[28,0,28,28,28,46,46,24,24],
[4,22,0,50,24,46,46,0,24],
[0,22,0,0,24,46,46,0,24],
[26,22,26,26,0,22,46,22,22],
[4,4,4,4,28,0,46,0,0],
[4,4,4,4,4,4,0,4,0],
[4,26,50,50,28,50,46,0,46],
[4,26,26,26,28,50,50,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,32,26,24,22,27,23,20],
[27,0,28,26,28,23,27,26,22],
[18,22,0,26,21,20,20,22,21],
[24,24,24,0,27,23,25,20,25],
[26,22,29,23,0,19,23,22,22],
[28,27,30,27,31,0,29,28,25],
[23,23,30,25,27,21,0,28,21],
[27,24,28,30,28,22,22,0,21],
[30,28,29,25,28,25,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,28,24,29,22,22,30,28],
[29,0,27,29,32,28,22,30,31],
[22,23,0,25,29,19,19,28,26],
[26,21,25,0,25,23,15,21,24],
[21,18,21,25,0,19,20,20,25],
[28,22,31,27,31,0,27,37,37],
[28,28,31,35,30,23,0,34,31],
[20,20,22,29,30,13,16,0,27],
[22,19,24,26,25,13,19,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,19,23,17,23,26,29,20],
[22,0,23,12,16,20,27,19,23],
[31,27,0,25,30,30,29,24,27],
[27,38,25,0,26,29,30,22,26],
[33,34,20,24,0,27,26,30,24],
[27,30,20,21,23,0,20,25,22],
[24,23,21,20,24,30,0,22,24],
[21,31,26,28,20,25,28,0,21],
[30,27,23,24,26,28,26,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,32,31,21,22,28,16,22],
[10,0,20,10,21,17,28,11,16],
[18,30,0,10,21,25,18,21,11],
[19,40,40,0,11,35,34,11,32],
[29,29,29,39,0,30,28,29,22],
[28,33,25,15,20,0,33,25,15],
[22,22,32,16,22,17,0,22,32],
[34,39,29,39,21,25,28,0,32],
[28,34,39,18,28,35,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,19,24,24,18,18,18],
[25,0,22,18,24,21,26,17,14],
[29,28,0,28,26,27,25,19,16],
[31,32,22,0,21,26,32,22,20],
[26,26,24,29,0,25,27,20,19],
[26,29,23,24,25,0,27,23,20],
[32,24,25,18,23,23,0,19,18],
[32,33,31,28,30,27,31,0,25],
[32,36,34,30,31,30,32,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,35,22,34,30,32,24,30],
[24,0,36,13,30,40,22,29,26],
[15,14,0,16,30,22,24,30,19],
[28,37,34,0,43,40,30,22,33],
[16,20,20,7,0,25,16,23,15],
[20,10,28,10,25,0,23,15,18],
[18,28,26,20,34,27,0,29,20],
[26,21,20,28,27,35,21,0,26],
[20,24,31,17,35,32,30,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,22,24,19,31,27,22,27],
[29,0,25,19,22,29,27,27,26],
[28,25,0,23,26,33,30,27,30],
[26,31,27,0,24,30,27,27,28],
[31,28,24,26,0,31,24,24,31],
[19,21,17,20,19,0,25,18,26],
[23,23,20,23,26,25,0,23,26],
[28,23,23,23,26,32,27,0,26],
[23,24,20,22,19,24,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,20,23,20,30,26,20],
[26,0,31,30,25,26,29,31,35],
[26,19,0,22,29,18,31,21,27],
[30,20,28,0,27,22,32,27,23],
[27,25,21,23,0,20,26,24,20],
[30,24,32,28,30,0,32,24,30],
[20,21,19,18,24,18,0,19,23],
[24,19,29,23,26,26,31,0,18],
[30,15,23,27,30,20,27,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,29,23,29,19,34,26,34],
[34,0,29,25,33,34,39,25,30],
[21,21,0,19,19,26,27,23,28],
[27,25,31,0,37,31,36,29,35],
[21,17,31,13,0,24,29,21,30],
[31,16,24,19,26,0,28,17,22],
[16,11,23,14,21,22,0,25,21],
[24,25,27,21,29,33,25,0,36],
[16,20,22,15,20,28,29,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,10,16,18,26,16,17,24],
[27,0,23,29,22,23,28,21,21],
[40,27,0,25,28,28,32,27,33],
[34,21,25,0,24,29,32,15,32],
[32,28,22,26,0,25,27,17,29],
[24,27,22,21,25,0,21,26,29],
[34,22,18,18,23,29,0,23,24],
[33,29,23,35,33,24,27,0,36],
[26,29,17,18,21,21,26,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,31,28,25,31,23,16,21],
[23,0,35,20,26,28,21,27,25],
[19,15,0,25,12,28,16,11,18],
[22,30,25,0,21,30,19,17,26],
[25,24,38,29,0,29,18,20,28],
[19,22,22,20,21,0,25,19,22],
[27,29,34,31,32,25,0,30,36],
[34,23,39,33,30,31,20,0,27],
[29,25,32,24,22,28,14,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,22,19,19,22,13,22,33],
[32,0,19,23,12,29,18,23,25],
[28,31,0,26,18,25,13,26,35],
[31,27,24,0,20,22,21,28,28],
[31,38,32,30,0,42,25,37,33],
[28,21,25,28,8,0,30,18,28],
[37,32,37,29,25,20,0,30,32],
[28,27,24,22,13,32,20,0,24],
[17,25,15,22,17,22,18,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,31,42,27,32,34,25,24],
[26,0,23,38,39,24,34,23,23],
[19,27,0,39,32,30,34,26,22],
[8,12,11,0,15,12,36,13,7],
[23,11,18,35,0,23,34,20,15],
[18,26,20,38,27,0,29,30,30],
[16,16,16,14,16,21,0,17,11],
[25,27,24,37,30,20,33,0,31],
[26,27,28,43,35,20,39,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,22,33,24,37,36,29,27],
[29,0,34,37,30,32,33,25,28],
[28,16,0,28,25,27,28,28,22],
[17,13,22,0,14,19,21,17,24],
[26,20,25,36,0,28,31,30,26],
[13,18,23,31,22,0,32,16,22],
[14,17,22,29,19,18,0,19,23],
[21,25,22,33,20,34,31,0,30],
[23,22,28,26,24,28,27,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,12,24,21,20,18,17,18],
[29,0,27,30,23,18,23,23,18],
[38,23,0,34,26,24,21,26,17],
[26,20,16,0,19,15,22,15,26],
[29,27,24,31,0,19,24,22,26],
[30,32,26,35,31,0,20,29,28],
[32,27,29,28,26,30,0,22,27],
[33,27,24,35,28,21,28,0,29],
[32,32,33,24,24,22,23,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,24,27,29,27,25,29],
[21,0,25,30,29,25,27,23,20],
[25,25,0,22,27,27,25,20,20],
[26,20,28,0,25,29,28,24,25],
[23,21,23,25,0,30,29,18,21],
[21,25,23,21,20,0,24,23,22],
[23,23,25,22,21,26,0,24,23],
[25,27,30,26,32,27,26,0,20],
[21,30,30,25,29,28,27,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,17,23,21,18,25,21],
[26,0,32,32,40,37,23,34,26],
[25,18,0,15,23,22,25,36,26],
[33,18,35,0,29,26,33,32,28],
[27,10,27,21,0,19,20,25,14],
[29,13,28,24,31,0,29,32,32],
[32,27,25,17,30,21,0,23,31],
[25,16,14,18,25,18,27,0,30],
[29,24,24,22,36,18,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,24,28,22,21,26,22,24],
[22,0,26,25,23,25,24,22,25],
[26,24,0,27,21,24,26,21,26],
[22,25,23,0,22,24,29,20,25],
[28,27,29,28,0,28,33,25,26],
[29,25,26,26,22,0,28,24,28],
[24,26,24,21,17,22,0,17,18],
[28,28,29,30,25,26,33,0,28],
[26,25,24,25,24,22,32,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,18,24,24,22,14,19,20],
[31,0,30,25,31,26,21,29,36],
[32,20,0,21,29,17,15,23,24],
[26,25,29,0,30,31,17,28,36],
[26,19,21,20,0,20,17,16,22],
[28,24,33,19,30,0,25,30,35],
[36,29,35,33,33,25,0,29,29],
[31,21,27,22,34,20,21,0,28],
[30,14,26,14,28,15,21,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,33,26,19,16,21,18],
[34,0,27,41,26,32,25,26,25],
[33,23,0,30,23,21,25,21,18],
[17,9,20,0,15,17,12,20,16],
[24,24,27,35,0,34,28,28,23],
[31,18,29,33,16,0,24,25,23],
[34,25,25,38,22,26,0,25,28],
[29,24,29,30,22,25,25,0,27],
[32,25,32,34,27,27,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,14,38,6,28,14,27,23],
[34,0,31,38,23,42,31,41,31],
[36,19,0,34,32,36,28,36,32],
[12,12,16,0,10,21,12,12,17],
[44,27,18,40,0,42,33,35,42],
[22,8,14,29,8,0,20,22,21],
[36,19,22,38,17,30,0,34,30],
[23,9,14,38,15,28,16,0,32],
[27,19,18,33,8,29,20,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,29,32,27,23,19,27,29],
[35,0,32,36,34,29,24,22,40],
[21,18,0,26,29,12,21,33,30],
[18,14,24,0,30,16,19,20,15],
[23,16,21,20,0,18,23,18,19],
[27,21,38,34,32,0,30,27,36],
[31,26,29,31,27,20,0,27,28],
[23,28,17,30,32,23,23,0,25],
[21,10,20,35,31,14,22,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,23,34,26,35,40,19,22],
[21,0,15,18,15,22,29,22,32],
[27,35,0,40,25,36,41,25,30],
[16,32,10,0,23,17,29,24,30],
[24,35,25,27,0,29,33,29,31],
[15,28,14,33,21,0,25,23,22],
[10,21,9,21,17,25,0,8,20],
[31,28,25,26,21,27,42,0,29],
[28,18,20,20,19,28,30,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,16,18,14,24,25,21],
[28,0,37,29,33,14,18,38,26],
[28,13,0,24,22,23,21,22,27],
[34,21,26,0,35,26,25,25,31],
[32,17,28,15,0,25,20,17,17],
[36,36,27,24,25,0,24,35,25],
[26,32,29,25,30,26,0,33,36],
[25,12,28,25,33,15,17,0,30],
[29,24,23,19,33,25,14,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,25,25,0,0,25,25],
[25,0,25,25,25,0,0,25,25],
[25,25,0,0,25,0,0,0,25],
[25,25,50,0,25,0,0,25,25],
[25,25,25,25,0,25,25,25,25],
[50,50,50,50,25,0,25,25,50],
[50,50,50,50,25,25,0,50,50],
[25,25,50,25,25,25,0,0,25],
[25,25,25,25,25,0,0,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,24,25,24,29,26,27],
[21,0,27,29,26,24,32,25,21],
[24,23,0,26,26,18,27,29,28],
[26,21,24,0,29,23,32,26,26],
[25,24,24,21,0,22,24,25,25],
[26,26,32,27,28,0,29,27,23],
[21,18,23,18,26,21,0,21,22],
[24,25,21,24,25,23,29,0,24],
[23,29,22,24,25,27,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,31,32,35,22,25,27],
[25,0,31,31,32,31,25,23,25],
[27,19,0,30,28,30,25,25,25],
[19,19,20,0,23,29,20,22,21],
[18,18,22,27,0,24,18,18,23],
[15,19,20,21,26,0,20,20,21],
[28,25,25,30,32,30,0,24,23],
[25,27,25,28,32,30,26,0,23],
[23,25,25,29,27,29,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,31,22,22,23,24,28,34],
[32,0,27,25,34,24,24,35,33],
[19,23,0,19,17,27,27,35,35],
[28,25,31,0,32,28,28,37,27],
[28,16,33,18,0,24,22,31,28],
[27,26,23,22,26,0,19,23,26],
[26,26,23,22,28,31,0,34,32],
[22,15,15,13,19,27,16,0,17],
[16,17,15,23,22,24,18,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,31,31,25,28,31,30,31],
[23,0,33,29,26,27,28,28,34],
[19,17,0,24,21,25,24,22,26],
[19,21,26,0,19,22,26,25,29],
[25,24,29,31,0,31,29,30,31],
[22,23,25,28,19,0,25,21,25],
[19,22,26,24,21,25,0,23,31],
[20,22,28,25,20,29,27,0,30],
[19,16,24,21,19,25,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,24,20,27,23,23,20],
[24,0,24,31,26,33,23,33,23],
[24,26,0,36,32,36,34,27,25],
[26,19,14,0,27,27,19,9,20],
[30,24,18,23,0,36,23,15,25],
[23,17,14,23,14,0,17,20,24],
[27,27,16,31,27,33,0,17,33],
[27,17,23,41,35,30,33,0,30],
[30,27,25,30,25,26,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,24,32,36,28,25,27,31],
[23,0,14,29,33,20,21,25,26],
[26,36,0,37,37,28,23,29,30],
[18,21,13,0,24,16,16,22,23],
[14,17,13,26,0,8,9,21,20],
[22,30,22,34,42,0,20,31,30],
[25,29,27,34,41,30,0,27,30],
[23,25,21,28,29,19,23,0,30],
[19,24,20,27,30,20,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,18,16,24,18,28,24,15],
[26,0,24,20,21,22,32,29,24],
[32,26,0,25,18,24,36,30,25],
[34,30,25,0,30,25,33,34,23],
[26,29,32,20,0,22,34,33,25],
[32,28,26,25,28,0,30,28,28],
[22,18,14,17,16,20,0,23,21],
[26,21,20,16,17,22,27,0,22],
[35,26,25,27,25,22,29,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,30,31,25,32,15,18],
[29,0,26,31,30,32,29,23,24],
[30,24,0,27,35,34,30,25,27],
[20,19,23,0,26,25,27,18,16],
[19,20,15,24,0,23,25,20,17],
[25,18,16,25,27,0,26,20,16],
[18,21,20,23,25,24,0,18,20],
[35,27,25,32,30,30,32,0,25],
[32,26,23,34,33,34,30,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,35,25,35,31,33,31,32],
[21,0,29,19,29,28,31,26,32],
[15,21,0,10,22,23,21,19,24],
[25,31,40,0,30,34,27,31,35],
[15,21,28,20,0,26,18,17,31],
[19,22,27,16,24,0,24,24,30],
[17,19,29,23,32,26,0,15,31],
[19,24,31,19,33,26,35,0,30],
[18,18,26,15,19,20,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,24,20,26,19,23,17,22],
[22,0,29,27,14,28,18,25,28],
[26,21,0,21,16,31,21,19,21],
[30,23,29,0,16,22,15,21,26],
[24,36,34,34,0,34,29,28,17],
[31,22,19,28,16,0,19,31,22],
[27,32,29,35,21,31,0,32,26],
[33,25,31,29,22,19,18,0,30],
[28,22,29,24,33,28,24,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,31,32,20,26,22,26],
[34,0,30,30,25,40,34,33,34],
[29,20,0,25,30,37,29,28,27],
[19,20,25,0,28,20,20,23,20],
[18,25,20,22,0,29,28,24,25],
[30,10,13,30,21,0,24,23,22],
[24,16,21,30,22,26,0,16,20],
[28,17,22,27,26,27,34,0,27],
[24,16,23,30,25,28,30,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,28,31,27,32,29,28],
[24,0,25,26,24,25,22,26,31],
[25,25,0,22,28,21,25,22,31],
[22,24,28,0,29,26,24,21,27],
[19,26,22,21,0,24,23,22,29],
[23,25,29,24,26,0,28,25,33],
[18,28,25,26,27,22,0,21,28],
[21,24,28,29,28,25,29,0,28],
[22,19,19,23,21,17,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,30,24,23,33,25,27,31],
[27,0,26,26,25,33,26,24,35],
[20,24,0,26,24,29,26,25,26],
[26,24,24,0,23,32,26,27,26],
[27,25,26,27,0,34,27,27,31],
[17,17,21,18,16,0,18,23,26],
[25,24,24,24,23,32,0,28,29],
[23,26,25,23,23,27,22,0,27],
[19,15,24,24,19,24,21,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,30,32,31,21,31,22,28],
[26,0,26,25,30,15,26,19,24],
[20,24,0,18,20,19,23,16,18],
[18,25,32,0,34,17,25,20,22],
[19,20,30,16,0,28,27,19,11],
[29,35,31,33,22,0,33,13,26],
[19,24,27,25,23,17,0,19,22],
[28,31,34,30,31,37,31,0,25],
[22,26,32,28,39,24,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,22,25,30,33,25,32,31],
[19,0,14,19,22,24,22,26,23],
[28,36,0,27,31,34,25,34,34],
[25,31,23,0,32,31,31,34,26],
[20,28,19,18,0,28,28,24,22],
[17,26,16,19,22,0,32,25,25],
[25,28,25,19,22,18,0,31,22],
[18,24,16,16,26,25,19,0,18],
[19,27,16,24,28,25,28,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,31,22,28,26,24,30,26],
[25,0,30,27,25,20,19,22,25],
[19,20,0,14,22,21,12,19,26],
[28,23,36,0,29,21,23,26,32],
[22,25,28,21,0,22,22,18,25],
[24,30,29,29,28,0,24,26,28],
[26,31,38,27,28,26,0,22,29],
[20,28,31,24,32,24,28,0,24],
[24,25,24,18,25,22,21,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,32,24,23,24,19,29,28],
[30,0,36,26,23,22,15,22,29],
[18,14,0,26,13,14,15,17,19],
[26,24,24,0,19,28,30,29,27],
[27,27,37,31,0,25,28,30,30],
[26,28,36,22,25,0,28,28,28],
[31,35,35,20,22,22,0,34,30],
[21,28,33,21,20,22,16,0,20],
[22,21,31,23,20,22,20,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,36,36,31,36,24,26,31],
[19,0,37,13,13,42,24,14,32],
[14,13,0,21,0,18,6,14,19],
[14,37,29,0,0,42,24,32,37],
[19,37,50,50,0,42,24,32,37],
[14,8,32,8,8,0,32,14,32],
[26,26,44,26,26,18,0,8,39],
[24,36,36,18,18,36,42,0,37],
[19,18,31,13,13,18,11,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,26,23,24,24,28,18],
[23,0,32,26,27,21,26,28,29],
[23,18,0,19,21,21,23,25,21],
[24,24,31,0,27,26,25,24,27],
[27,23,29,23,0,24,28,25,22],
[26,29,29,24,26,0,27,28,25],
[26,24,27,25,22,23,0,22,25],
[22,22,25,26,25,22,28,0,31],
[32,21,29,23,28,25,25,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,29,29,25,27,26,19,37],
[35,0,31,33,26,24,23,27,30],
[21,19,0,22,23,16,10,11,20],
[21,17,28,0,25,17,24,22,26],
[25,24,27,25,0,15,18,20,29],
[23,26,34,33,35,0,30,27,26],
[24,27,40,26,32,20,0,22,31],
[31,23,39,28,30,23,28,0,31],
[13,20,30,24,21,24,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,30,21,20,17,24,26,20],
[33,0,21,32,25,32,24,21,24],
[20,29,0,26,27,25,22,27,22],
[29,18,24,0,24,24,27,27,26],
[30,25,23,26,0,23,29,25,20],
[33,18,25,26,27,0,22,25,27],
[26,26,28,23,21,28,0,15,20],
[24,29,23,23,25,25,35,0,35],
[30,26,28,24,30,23,30,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,15,40,16,29,27,36,34],
[22,0,23,43,25,30,29,29,41],
[35,27,0,41,38,21,39,45,39],
[10,7,9,0,11,17,23,21,33],
[34,25,12,39,0,19,37,43,40],
[21,20,29,33,31,0,35,38,29],
[23,21,11,27,13,15,0,34,25],
[14,21,5,29,7,12,16,0,25],
[16,9,11,17,10,21,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,21,18,22,25,20,27],
[28,0,21,29,28,28,28,24,21],
[29,29,0,27,25,27,22,24,22],
[29,21,23,0,20,20,28,24,26],
[32,22,25,30,0,26,28,21,28],
[28,22,23,30,24,0,27,22,24],
[25,22,28,22,22,23,0,25,21],
[30,26,26,26,29,28,25,0,27],
[23,29,28,24,22,26,29,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,32,33,37,27,31,25,40],
[26,0,37,25,38,34,30,31,37],
[18,13,0,24,33,14,19,25,19],
[17,25,26,0,31,23,24,22,29],
[13,12,17,19,0,21,17,16,21],
[23,16,36,27,29,0,29,28,27],
[19,20,31,26,33,21,0,23,34],
[25,19,25,28,34,22,27,0,33],
[10,13,31,21,29,23,16,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,20,25,23,28,27,21,26],
[21,0,17,25,19,31,20,20,25],
[30,33,0,33,23,33,32,25,27],
[25,25,17,0,17,26,21,20,24],
[27,31,27,33,0,33,25,28,28],
[22,19,17,24,17,0,19,26,23],
[23,30,18,29,25,31,0,26,29],
[29,30,25,30,22,24,24,0,27],
[24,25,23,26,22,27,21,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,24,17,23,24,20,26],
[25,0,26,23,22,24,17,22,23],
[26,24,0,20,17,24,27,25,25],
[26,27,30,0,28,23,27,21,29],
[33,28,33,22,0,24,25,18,29],
[27,26,26,27,26,0,23,26,31],
[26,33,23,23,25,27,0,23,26],
[30,28,25,29,32,24,27,0,32],
[24,27,25,21,21,19,24,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,29,19,23,23,22,22],
[28,0,20,27,24,25,25,25,25],
[29,30,0,29,22,25,27,27,30],
[21,23,21,0,17,20,24,21,21],
[31,26,28,33,0,23,30,25,27],
[27,25,25,30,27,0,27,25,25],
[27,25,23,26,20,23,0,21,27],
[28,25,23,29,25,25,29,0,25],
[28,25,20,29,23,25,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,25,19,22,24,26,14,27],
[22,0,24,21,22,24,22,20,27],
[25,26,0,23,27,25,22,21,21],
[31,29,27,0,30,25,28,23,29],
[28,28,23,20,0,31,25,26,27],
[26,26,25,25,19,0,22,24,31],
[24,28,28,22,25,28,0,25,30],
[36,30,29,27,24,26,25,0,33],
[23,23,29,21,23,19,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,17,30,30,35,30,49,30],
[1,0,17,18,16,3,17,1,16],
[33,33,0,29,48,18,30,33,29],
[20,32,21,0,34,7,30,32,15],
[20,34,2,16,0,7,15,34,1],
[15,47,32,43,43,0,45,43,15],
[20,33,20,20,35,5,0,20,20],
[1,49,17,18,16,7,30,0,16],
[20,34,21,35,49,35,30,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,25,24,22,35,35,25,27],
[16,0,20,16,24,24,11,14,17],
[25,30,0,21,18,29,18,19,24],
[26,34,29,0,26,38,30,27,24],
[28,26,32,24,0,35,24,19,29],
[15,26,21,12,15,0,16,13,17],
[15,39,32,20,26,34,0,18,28],
[25,36,31,23,31,37,32,0,28],
[23,33,26,26,21,33,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,23,25,15,29,11,28,22],
[17,0,21,23,19,28,17,24,13],
[27,29,0,21,24,33,25,26,23],
[25,27,29,0,22,32,17,24,21],
[35,31,26,28,0,35,24,30,26],
[21,22,17,18,15,0,16,23,17],
[39,33,25,33,26,34,0,34,31],
[22,26,24,26,20,27,16,0,25],
[28,37,27,29,24,33,19,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,25,25,26,23,26,23,26],
[20,0,21,20,16,19,22,22,21],
[25,29,0,25,29,23,24,25,28],
[25,30,25,0,25,23,27,25,25],
[24,34,21,25,0,24,27,25,23],
[27,31,27,27,26,0,29,25,26],
[24,28,26,23,23,21,0,18,25],
[27,28,25,25,25,25,32,0,27],
[24,29,22,25,27,24,25,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,18,21,8,7,11,9,19],
[37,0,38,30,30,35,30,23,20],
[32,12,0,25,15,22,30,13,12],
[29,20,25,0,25,21,24,20,17],
[42,20,35,25,0,40,35,13,23],
[43,15,28,29,10,0,38,19,21],
[39,20,20,26,15,12,0,24,26],
[41,27,37,30,37,31,26,0,16],
[31,30,38,33,27,29,24,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,28,21,20,18,25,25],
[25,0,23,27,16,22,20,31,30],
[29,27,0,28,24,26,27,29,28],
[22,23,22,0,19,18,24,25,19],
[29,34,26,31,0,28,25,37,30],
[30,28,24,32,22,0,26,32,30],
[32,30,23,26,25,24,0,31,27],
[25,19,21,25,13,18,19,0,22],
[25,20,22,31,20,20,23,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,24,31,28,27,28,36,24],
[13,0,26,24,12,16,21,25,24],
[26,24,0,28,15,19,37,37,8],
[19,26,22,0,16,20,29,22,17],
[22,38,35,34,0,25,32,34,36],
[23,34,31,30,25,0,30,24,23],
[22,29,13,21,18,20,0,29,20],
[14,25,13,28,16,26,21,0,12],
[26,26,42,33,14,27,30,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,37,31,25,33,36,30,36],
[23,0,31,29,28,26,39,25,27],
[13,19,0,21,17,16,24,20,23],
[19,21,29,0,18,26,26,24,28],
[25,22,33,32,0,28,31,31,34],
[17,24,34,24,22,0,31,23,29],
[14,11,26,24,19,19,0,18,22],
[20,25,30,26,19,27,32,0,35],
[14,23,27,22,16,21,28,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,30,26,28,28,32,29,27],
[26,0,32,28,23,32,29,26,29],
[20,18,0,22,18,26,22,22,23],
[24,22,28,0,25,28,31,22,32],
[22,27,32,25,0,30,27,27,25],
[22,18,24,22,20,0,22,18,24],
[18,21,28,19,23,28,0,24,26],
[21,24,28,28,23,32,26,0,28],
[23,21,27,18,25,26,24,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,24,26,30,22,25,33,23],
[31,0,28,32,29,27,32,32,25],
[26,22,0,21,34,28,29,30,25],
[24,18,29,0,28,23,24,29,23],
[20,21,16,22,0,21,21,21,22],
[28,23,22,27,29,0,16,36,23],
[25,18,21,26,29,34,0,32,30],
[17,18,20,21,29,14,18,0,20],
[27,25,25,27,28,27,20,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,23,17,21,22,23,22],
[28,0,21,20,17,19,23,23,19],
[27,29,0,27,22,31,24,25,22],
[27,30,23,0,25,28,29,28,24],
[33,33,28,25,0,29,28,34,25],
[29,31,19,22,21,0,23,26,28],
[28,27,26,21,22,27,0,27,19],
[27,27,25,22,16,24,23,0,25],
[28,31,28,26,25,22,31,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,21,21,26,25,29,22,24],
[20,0,20,17,24,24,25,14,22],
[29,30,0,26,29,28,31,21,27],
[29,33,24,0,28,30,30,25,25],
[24,26,21,22,0,24,23,23,23],
[25,26,22,20,26,0,27,23,29],
[21,25,19,20,27,23,0,18,20],
[28,36,29,25,27,27,32,0,27],
[26,28,23,25,27,21,30,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,27,26,30,22,24,23,35],
[24,0,25,29,25,27,28,24,34],
[23,25,0,24,26,31,26,27,33],
[24,21,26,0,25,23,22,25,32],
[20,25,24,25,0,23,24,23,28],
[28,23,19,27,27,0,21,22,33],
[26,22,24,28,26,29,0,26,32],
[27,26,23,25,27,28,24,0,34],
[15,16,17,18,22,17,18,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,7,13,20,16,18,14],
[30,0,27,24,25,24,25,29,22],
[26,23,0,25,16,16,20,15,21],
[43,26,25,0,23,30,22,24,15],
[37,25,34,27,0,31,32,21,21],
[30,26,34,20,19,0,23,21,19],
[34,25,30,28,18,27,0,18,15],
[32,21,35,26,29,29,32,0,26],
[36,28,29,35,29,31,35,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,30,26,29,32,26,24,20],
[17,0,17,18,26,23,14,17,19],
[20,33,0,25,27,25,25,24,25],
[24,32,25,0,32,25,24,27,16],
[21,24,23,18,0,24,19,19,16],
[18,27,25,25,26,0,26,23,15],
[24,36,25,26,31,24,0,28,26],
[26,33,26,23,31,27,22,0,19],
[30,31,25,34,34,35,24,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,19,30,35,25,25,27],
[25,0,24,26,31,26,14,16,31],
[29,26,0,19,41,36,28,26,21],
[31,24,31,0,33,39,24,20,26],
[20,19,9,17,0,38,20,16,27],
[15,24,14,11,12,0,24,11,17],
[25,36,22,26,30,26,0,25,35],
[25,34,24,30,34,39,25,0,32],
[23,19,29,24,23,33,15,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,19,28,29,31,23,27,30],
[22,0,19,32,30,29,22,28,19],
[31,31,0,33,31,30,25,27,35],
[22,18,17,0,19,22,16,17,20],
[21,20,19,31,0,26,21,24,27],
[19,21,20,28,24,0,24,25,20],
[27,28,25,34,29,26,0,32,25],
[23,22,23,33,26,25,18,0,27],
[20,31,15,30,23,30,25,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,24,31,21,26,37,26,25],
[20,0,26,24,24,21,42,26,23],
[26,24,0,41,26,27,35,21,24],
[19,26,9,0,27,16,23,24,24],
[29,26,24,23,0,23,37,17,19],
[24,29,23,34,27,0,39,36,32],
[13,8,15,27,13,11,0,15,12],
[24,24,29,26,33,14,35,0,12],
[25,27,26,26,31,18,38,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,16,25,24,25,21,31],
[35,0,22,24,23,18,26,25,25],
[33,28,0,30,28,24,31,31,37],
[34,26,20,0,29,30,28,30,28],
[25,27,22,21,0,29,21,20,25],
[26,32,26,20,21,0,32,31,32],
[25,24,19,22,29,18,0,23,29],
[29,25,19,20,30,19,27,0,25],
[19,25,13,22,25,18,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,22,28,14,30,24,23],
[26,0,24,23,26,24,26,21,24],
[27,26,0,25,30,30,29,22,29],
[28,27,25,0,29,26,31,20,23],
[22,24,20,21,0,10,19,30,23],
[36,26,20,24,40,0,34,31,23],
[20,24,21,19,31,16,0,27,30],
[26,29,28,30,20,19,23,0,23],
[27,26,21,27,27,27,20,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,33,22,31,16,26,25,30],
[20,0,45,12,29,17,21,23,20],
[17,5,0,14,17,16,23,11,8],
[28,38,36,0,42,25,20,39,38],
[19,21,33,8,0,22,17,28,24],
[34,33,34,25,28,0,34,28,25],
[24,29,27,30,33,16,0,35,35],
[25,27,39,11,22,22,15,0,24],
[20,30,42,12,26,25,15,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,14,19,8,7,7,23,25],
[47,0,22,23,27,25,26,29,30],
[36,28,0,24,32,23,27,36,37],
[31,27,26,0,28,21,27,24,36],
[42,23,18,22,0,20,17,35,25],
[43,25,27,29,30,0,24,39,19],
[43,24,23,23,33,26,0,34,30],
[27,21,14,26,15,11,16,0,22],
[25,20,13,14,25,31,20,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,25,23,28,23,26,24],
[25,0,25,25,23,22,25,25,22],
[21,25,0,24,28,16,29,26,26],
[25,25,26,0,26,21,27,28,23],
[27,27,22,24,0,22,32,24,24],
[22,28,34,29,28,0,25,29,20],
[27,25,21,23,18,25,0,22,23],
[24,25,24,22,26,21,28,0,24],
[26,28,24,27,26,30,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,30,33,30,24,34,31,30],
[21,0,20,24,23,21,24,23,21],
[20,30,0,32,22,27,28,28,24],
[17,26,18,0,31,22,27,23,27],
[20,27,28,19,0,25,26,27,24],
[26,29,23,28,25,0,29,28,24],
[16,26,22,23,24,21,0,26,23],
[19,27,22,27,23,22,24,0,24],
[20,29,26,23,26,26,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,15,18,25,13,21,18,28],
[25,0,17,24,24,20,24,16,26],
[35,33,0,29,27,24,22,27,26],
[32,26,21,0,29,24,26,23,17],
[25,26,23,21,0,21,18,24,28],
[37,30,26,26,29,0,25,27,35],
[29,26,28,24,32,25,0,22,26],
[32,34,23,27,26,23,28,0,30],
[22,24,24,33,22,15,24,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,16,22,20,29,22,23,28],
[26,0,17,21,23,28,29,20,27],
[34,33,0,29,30,32,26,24,36],
[28,29,21,0,23,29,29,23,26],
[30,27,20,27,0,33,22,25,30],
[21,22,18,21,17,0,19,27,31],
[28,21,24,21,28,31,0,24,28],
[27,30,26,27,25,23,26,0,32],
[22,23,14,24,20,19,22,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,26,27,24,26,20,29],
[27,0,24,22,25,26,26,20,31],
[27,26,0,25,27,23,30,26,29],
[24,28,25,0,26,25,26,24,32],
[23,25,23,24,0,27,30,25,32],
[26,24,27,25,23,0,28,23,35],
[24,24,20,24,20,22,0,21,25],
[30,30,24,26,25,27,29,0,30],
[21,19,21,18,18,15,25,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,0,0,24,24,24,21],
[29,0,26,5,5,29,29,29,26],
[29,24,0,29,29,29,29,29,5],
[50,45,21,0,0,29,45,29,21],
[50,45,21,50,0,29,45,29,21],
[26,21,21,21,21,0,45,29,21],
[26,21,21,5,5,5,0,5,26],
[26,21,21,21,21,21,45,0,21],
[29,24,45,29,29,29,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,25,31,31,31,29,33,33],
[18,0,24,18,27,23,23,23,25],
[25,26,0,23,29,30,24,29,25],
[19,32,27,0,29,31,30,28,23],
[19,23,21,21,0,31,30,24,27],
[19,27,20,19,19,0,22,22,26],
[21,27,26,20,20,28,0,25,26],
[17,27,21,22,26,28,25,0,22],
[17,25,25,27,23,24,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,24,23,26,29,23,24,25],
[21,0,19,18,24,23,16,21,23],
[26,31,0,25,26,25,26,20,23],
[27,32,25,0,31,24,29,25,30],
[24,26,24,19,0,16,21,21,18],
[21,27,25,26,34,0,31,28,30],
[27,34,24,21,29,19,0,26,29],
[26,29,30,25,29,22,24,0,26],
[25,27,27,20,32,20,21,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,29,29,37,24,24,16],
[30,0,26,30,38,34,32,21,13],
[29,24,0,21,29,41,32,33,25],
[21,20,29,0,42,32,27,24,24],
[21,12,21,8,0,16,27,24,12],
[13,16,9,18,34,0,20,17,5],
[26,18,18,23,23,30,0,18,14],
[26,29,17,26,26,33,32,0,30],
[34,37,25,26,38,45,36,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,24,24,26,28,21,21,21],
[29,0,23,24,30,34,25,23,24],
[26,27,0,24,29,31,22,27,30],
[26,26,26,0,28,32,24,24,25],
[24,20,21,22,0,25,22,20,22],
[22,16,19,18,25,0,14,25,22],
[29,25,28,26,28,36,0,24,27],
[29,27,23,26,30,25,26,0,28],
[29,26,20,25,28,28,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,28,28,16,27,24,20,31],
[27,0,32,24,24,33,30,24,35],
[22,18,0,23,23,23,30,23,33],
[22,26,27,0,19,24,23,22,34],
[34,26,27,31,0,25,31,30,35],
[23,17,27,26,25,0,24,25,29],
[26,20,20,27,19,26,0,20,35],
[30,26,27,28,20,25,30,0,34],
[19,15,17,16,15,21,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,32,25,23,23,28,30,24],
[26,0,25,25,27,24,25,33,30],
[18,25,0,25,28,24,32,28,28],
[25,25,25,0,26,19,27,29,29],
[27,23,22,24,0,25,26,29,21],
[27,26,26,31,25,0,28,29,25],
[22,25,18,23,24,22,0,27,28],
[20,17,22,21,21,21,23,0,21],
[26,20,22,21,29,25,22,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,24,17,24,23,29,25,23],
[29,0,25,18,19,14,28,17,13],
[26,25,0,17,22,14,29,23,15],
[33,32,33,0,26,25,30,23,20],
[26,31,28,24,0,23,37,36,25],
[27,36,36,25,27,0,27,28,21],
[21,22,21,20,13,23,0,24,13],
[25,33,27,27,14,22,26,0,16],
[27,37,35,30,25,29,37,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,39,18,30,21,19,19,23],
[37,0,44,17,30,31,8,21,27],
[11,6,0,20,12,15,11,11,20],
[32,33,30,0,24,28,27,19,32],
[20,20,38,26,0,19,28,16,25],
[29,19,35,22,31,0,13,24,32],
[31,42,39,23,22,37,0,37,40],
[31,29,39,31,34,26,13,0,32],
[27,23,30,18,25,18,10,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,29,30,28,30,25,28,24],
[24,0,27,27,27,27,24,36,28],
[21,23,0,19,25,26,22,25,20],
[20,23,31,0,25,23,22,25,22],
[22,23,25,25,0,25,27,30,22],
[20,23,24,27,25,0,20,30,25],
[25,26,28,28,23,30,0,25,26],
[22,14,25,25,20,20,25,0,22],
[26,22,30,28,28,25,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,29,24,25,28,24,27,28],
[26,0,25,22,23,26,27,18,27],
[21,25,0,26,26,27,31,23,28],
[26,28,24,0,29,30,22,25,26],
[25,27,24,21,0,23,23,18,27],
[22,24,23,20,27,0,20,20,20],
[26,23,19,28,27,30,0,19,29],
[23,32,27,25,32,30,31,0,26],
[22,23,22,24,23,30,21,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,26,33,26,35,26,23,19],
[29,0,31,38,29,37,31,27,25],
[24,19,0,29,19,24,23,24,24],
[17,12,21,0,25,28,13,14,14],
[24,21,31,25,0,29,26,28,28],
[15,13,26,22,21,0,21,26,23],
[24,19,27,37,24,29,0,18,20],
[27,23,26,36,22,24,32,0,32],
[31,25,26,36,22,27,30,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,31,19,25,21,14,24,21],
[31,0,33,20,23,23,21,20,24],
[19,17,0,8,23,19,20,19,18],
[31,30,42,0,30,32,26,22,27],
[25,27,27,20,0,26,20,24,23],
[29,27,31,18,24,0,19,18,25],
[36,29,30,24,30,31,0,27,25],
[26,30,31,28,26,32,23,0,31],
[29,26,32,23,27,25,25,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,35,30,32,18,21,13,27],
[20,0,30,19,27,28,8,9,17],
[15,20,0,27,19,25,22,17,22],
[20,31,23,0,22,28,28,23,11],
[18,23,31,28,0,19,28,17,16],
[32,22,25,22,31,0,12,15,20],
[29,42,28,22,22,38,0,30,17],
[37,41,33,27,33,35,20,0,25],
[23,33,28,39,34,30,33,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,20,31,29,30,20,24,28],
[24,0,23,42,32,32,26,19,30],
[30,27,0,33,33,33,24,16,25],
[19,8,17,0,25,31,14,16,25],
[21,18,17,25,0,24,16,20,28],
[20,18,17,19,26,0,21,20,22],
[30,24,26,36,34,29,0,26,28],
[26,31,34,34,30,30,24,0,27],
[22,20,25,25,22,28,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,24,27,23,29,24,26,30],
[21,0,22,21,26,33,28,28,21],
[26,28,0,29,33,29,33,29,24],
[23,29,21,0,21,34,27,21,19],
[27,24,17,29,0,37,34,25,24],
[21,17,21,16,13,0,17,13,13],
[26,22,17,23,16,33,0,19,21],
[24,22,21,29,25,37,31,0,19],
[20,29,26,31,26,37,29,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,35,34,38,29,23,34],
[28,0,31,32,31,37,25,23,31],
[27,19,0,27,28,41,25,31,27],
[15,18,23,0,35,34,28,29,26],
[16,19,22,15,0,33,22,30,33],
[12,13,9,16,17,0,16,23,23],
[21,25,25,22,28,34,0,31,25],
[27,27,19,21,20,27,19,0,23],
[16,19,23,24,17,27,25,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,19,23,25,21,28,22,28],
[20,0,13,12,21,21,23,18,17],
[31,37,0,29,24,37,25,26,29],
[27,38,21,0,17,22,21,26,27],
[25,29,26,33,0,32,30,26,20],
[29,29,13,28,18,0,22,25,28],
[22,27,25,29,20,28,0,27,24],
[28,32,24,24,24,25,23,0,31],
[22,33,21,23,30,22,26,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,20,23,29,25,28,25],
[25,0,31,22,21,28,27,34,20],
[21,19,0,20,21,28,25,24,20],
[30,28,30,0,25,32,32,35,30],
[27,29,29,25,0,28,28,30,31],
[21,22,22,18,22,0,25,24,20],
[25,23,25,18,22,25,0,31,22],
[22,16,26,15,20,26,19,0,20],
[25,30,30,20,19,30,28,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,27,23,28,27,21,24],
[28,0,26,25,24,30,30,23,26],
[25,24,0,25,24,32,29,25,25],
[23,25,25,0,23,30,28,25,23],
[27,26,26,27,0,30,33,30,25],
[22,20,18,20,20,0,23,22,22],
[23,20,21,22,17,27,0,17,21],
[29,27,25,25,20,28,33,0,23],
[26,24,25,27,25,28,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,27,28,22,28,31,28,26],
[22,0,25,27,18,24,31,25,22],
[23,25,0,22,21,21,27,28,23],
[22,23,28,0,26,24,29,26,28],
[28,32,29,24,0,25,31,28,27],
[22,26,29,26,25,0,27,30,24],
[19,19,23,21,19,23,0,26,21],
[22,25,22,24,22,20,24,0,25],
[24,28,27,22,23,26,29,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,18,21,23,23,16,29],
[35,0,28,25,24,24,28,30,31],
[31,22,0,22,22,27,30,22,30],
[32,25,28,0,26,28,29,19,31],
[29,26,28,24,0,28,26,22,27],
[27,26,23,22,22,0,22,24,24],
[27,22,20,21,24,28,0,22,28],
[34,20,28,31,28,26,28,0,31],
[21,19,20,19,23,26,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,25,27,32,30,31,28,25],
[23,0,28,25,23,28,27,23,23],
[25,22,0,25,23,30,28,27,29],
[23,25,25,0,21,27,28,20,24],
[18,27,27,29,0,30,29,26,24],
[20,22,20,23,20,0,24,22,23],
[19,23,22,22,21,26,0,21,19],
[22,27,23,30,24,28,29,0,23],
[25,27,21,26,26,27,31,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,25,22,23,24,19,29,31],
[20,0,20,26,19,21,16,26,26],
[25,30,0,28,25,31,24,32,31],
[28,24,22,0,21,19,20,28,29],
[27,31,25,29,0,28,26,33,28],
[26,29,19,31,22,0,24,30,29],
[31,34,26,30,24,26,0,35,36],
[21,24,18,22,17,20,15,0,26],
[19,24,19,21,22,21,14,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,29,17,22,25,18,19,24],
[33,0,31,24,28,29,27,27,22],
[21,19,0,18,21,21,13,21,16],
[33,26,32,0,34,27,23,31,28],
[28,22,29,16,0,23,20,26,26],
[25,21,29,23,27,0,20,25,22],
[32,23,37,27,30,30,0,27,26],
[31,23,29,19,24,25,23,0,22],
[26,28,34,22,24,28,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,21,26,19,21,26,24,22],
[26,0,32,29,25,22,32,21,30],
[29,18,0,26,23,22,29,28,28],
[24,21,24,0,22,19,24,16,30],
[31,25,27,28,0,32,32,27,31],
[29,28,28,31,18,0,29,28,31],
[24,18,21,26,18,21,0,21,22],
[26,29,22,34,23,22,29,0,27],
[28,20,22,20,19,19,28,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,18,23,22,22,22,27,21],
[22,0,19,19,15,21,22,19,23],
[32,31,0,30,24,29,29,29,32],
[27,31,20,0,16,24,26,22,20],
[28,35,26,34,0,32,30,25,29],
[28,29,21,26,18,0,24,27,28],
[28,28,21,24,20,26,0,21,26],
[23,31,21,28,25,23,29,0,30],
[29,27,18,30,21,22,24,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,26,26,28,29,26,26],
[29,0,30,32,28,30,25,33,27],
[29,20,0,31,26,28,28,28,28],
[24,18,19,0,25,29,22,24,24],
[24,22,24,25,0,31,23,31,31],
[22,20,22,21,19,0,20,25,23],
[21,25,22,28,27,30,0,29,23],
[24,17,22,26,19,25,21,0,27],
[24,23,22,26,19,27,27,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,29,18,39,33,29,29,35],
[1,0,0,0,1,7,10,0,1],
[21,50,0,28,39,19,24,16,42],
[32,50,22,0,33,27,12,17,24],
[11,49,11,17,0,21,24,20,30],
[17,43,31,23,29,0,22,25,37],
[21,40,26,38,26,28,0,31,37],
[21,50,34,33,30,25,19,0,43],
[15,49,8,26,20,13,13,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,28,24,27,26,22,35,30],
[22,0,19,21,26,17,18,21,17],
[22,31,0,29,28,23,26,27,29],
[26,29,21,0,19,24,28,25,28],
[23,24,22,31,0,20,25,22,25],
[24,33,27,26,30,0,24,22,28],
[28,32,24,22,25,26,0,24,24],
[15,29,23,25,28,28,26,0,18],
[20,33,21,22,25,22,26,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,30,26,21,21,23,22],
[27,0,27,26,30,17,22,17,21],
[24,23,0,27,24,19,21,15,18],
[20,24,23,0,27,12,18,20,15],
[24,20,26,23,0,17,21,18,19],
[29,33,31,38,33,0,24,29,30],
[29,28,29,32,29,26,0,21,25],
[27,33,35,30,32,21,29,0,21],
[28,29,32,35,31,20,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,24,31,26,31,21,22,29],
[13,0,25,17,20,20,18,17,26],
[26,25,0,17,22,20,21,18,29],
[19,33,33,0,31,28,17,20,29],
[24,30,28,19,0,27,20,17,28],
[19,30,30,22,23,0,25,20,27],
[29,32,29,33,30,25,0,26,28],
[28,33,32,30,33,30,24,0,33],
[21,24,21,21,22,23,22,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,33,22,30,32,31,25,31],
[17,0,29,21,26,25,25,23,27],
[17,21,0,19,22,22,29,19,25],
[28,29,31,0,28,31,31,24,29],
[20,24,28,22,0,28,24,19,27],
[18,25,28,19,22,0,26,19,24],
[19,25,21,19,26,24,0,20,24],
[25,27,31,26,31,31,30,0,29],
[19,23,25,21,23,26,26,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,19,29,22,22,27,23,23],
[29,0,18,33,20,26,22,27,20],
[31,32,0,37,30,31,30,25,28],
[21,17,13,0,22,22,22,15,17],
[28,30,20,28,0,28,31,21,26],
[28,24,19,28,22,0,26,25,23],
[23,28,20,28,19,24,0,22,23],
[27,23,25,35,29,25,28,0,21],
[27,30,22,33,24,27,27,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,26,25,25,22,20,34,19],
[23,0,23,27,26,25,15,22,19],
[24,27,0,27,23,27,19,32,23],
[25,23,23,0,25,27,24,25,25],
[25,24,27,25,0,24,14,32,15],
[28,25,23,23,26,0,18,24,27],
[30,35,31,26,36,32,0,25,23],
[16,28,18,25,18,26,25,0,23],
[31,31,27,25,35,23,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,18,16,14,15,17,8,19],
[28,0,24,20,34,26,20,15,21],
[32,26,0,27,25,38,23,26,27],
[34,30,23,0,23,31,16,27,15],
[36,16,25,27,0,26,21,19,24],
[35,24,12,19,24,0,18,22,22],
[33,30,27,34,29,32,0,25,24],
[42,35,24,23,31,28,25,0,29],
[31,29,23,35,26,28,26,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,23,24,21,18,23,24,23],
[30,0,22,25,20,17,25,29,18],
[27,28,0,26,32,29,26,25,24],
[26,25,24,0,22,23,25,26,21],
[29,30,18,28,0,23,22,29,21],
[32,33,21,27,27,0,24,27,29],
[27,25,24,25,28,26,0,28,21],
[26,21,25,24,21,23,22,0,24],
[27,32,26,29,29,21,29,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,33,20,30,28,30,27],
[25,0,25,26,21,26,27,25,25],
[24,25,0,25,25,32,30,27,24],
[17,24,25,0,21,26,26,33,23],
[30,29,25,29,0,32,29,30,28],
[20,24,18,24,18,0,31,26,19],
[22,23,20,24,21,19,0,21,23],
[20,25,23,17,20,24,29,0,16],
[23,25,26,27,22,31,27,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,12,21,21,32,22,32],
[28,0,21,15,21,18,29,22,19],
[25,29,0,21,21,20,24,20,17],
[38,35,29,0,30,24,37,25,28],
[29,29,29,20,0,24,31,23,19],
[29,32,30,26,26,0,34,20,21],
[18,21,26,13,19,16,0,14,21],
[28,28,30,25,27,30,36,0,22],
[18,31,33,22,31,29,29,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,24,27,26,30,31,29],
[21,0,23,30,24,20,29,32,33],
[25,27,0,24,28,24,32,31,28],
[26,20,26,0,21,24,27,30,28],
[23,26,22,29,0,24,33,30,32],
[24,30,26,26,26,0,29,32,31],
[20,21,18,23,17,21,0,26,26],
[19,18,19,20,20,18,24,0,23],
[21,17,22,22,18,19,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,27,27,25,23,21,23,27],
[29,0,29,28,25,25,27,27,26],
[23,21,0,23,19,26,18,23,26],
[23,22,27,0,20,23,19,21,22],
[25,25,31,30,0,27,25,29,29],
[27,25,24,27,23,0,30,29,29],
[29,23,32,31,25,20,0,24,28],
[27,23,27,29,21,21,26,0,31],
[23,24,24,28,21,21,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,25,32,23,32,28,23,31],
[31,0,25,35,22,32,35,28,29],
[25,25,0,36,29,34,28,32,28],
[18,15,14,0,20,23,23,17,13],
[27,28,21,30,0,32,33,34,25],
[18,18,16,27,18,0,22,22,21],
[22,15,22,27,17,28,0,25,20],
[27,22,18,33,16,28,25,0,29],
[19,21,22,37,25,29,30,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,23,22,24,24,27,26],
[25,0,23,23,26,18,26,24,25],
[27,27,0,21,22,23,26,24,24],
[27,27,29,0,26,23,29,29,28],
[28,24,28,24,0,25,30,29,26],
[26,32,27,27,25,0,28,24,28],
[26,24,24,21,20,22,0,22,26],
[23,26,26,21,21,26,28,0,24],
[24,25,26,22,24,22,24,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,32,31,31,28,30,23,28],
[23,0,24,30,27,20,30,28,26],
[18,26,0,24,22,19,26,17,21],
[19,20,26,0,19,23,24,22,21],
[19,23,28,31,0,26,24,21,23],
[22,30,31,27,24,0,23,30,24],
[20,20,24,26,26,27,0,19,19],
[27,22,33,28,29,20,31,0,22],
[22,24,29,29,27,26,31,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,31,30,25,25,22,29,20],
[24,0,30,23,26,26,24,25,24],
[19,20,0,26,20,20,21,19,16],
[20,27,24,0,25,26,18,22,16],
[25,24,30,25,0,29,23,26,25],
[25,24,30,24,21,0,25,26,20],
[28,26,29,32,27,25,0,27,21],
[21,25,31,28,24,24,23,0,18],
[30,26,34,34,25,30,29,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,21,29,27,25,26,21,31],
[26,0,27,30,34,29,23,17,31],
[29,23,0,28,27,22,20,18,29],
[21,20,22,0,21,18,19,17,20],
[23,16,23,29,0,20,21,14,24],
[25,21,28,32,30,0,31,23,27],
[24,27,30,31,29,19,0,27,30],
[29,33,32,33,36,27,23,0,36],
[19,19,21,30,26,23,20,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,15,28,24,25,20,19],
[27,0,18,20,22,25,27,20,18],
[27,32,0,26,36,31,35,24,30],
[35,30,24,0,30,29,31,29,28],
[22,28,14,20,0,28,27,17,20],
[26,25,19,21,22,0,26,20,23],
[25,23,15,19,23,24,0,26,22],
[30,30,26,21,33,30,24,0,23],
[31,32,20,22,30,27,28,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,28,27,23,19,30,25],
[22,0,22,22,26,22,21,24,16],
[24,28,0,31,26,26,23,33,22],
[22,28,19,0,26,19,22,24,20],
[23,24,24,24,0,20,23,32,15],
[27,28,24,31,30,0,22,33,25],
[31,29,27,28,27,28,0,29,22],
[20,26,17,26,18,17,21,0,14],
[25,34,28,30,35,25,28,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,23,24,16,19,23,24],
[31,0,24,34,31,24,24,29,33],
[28,26,0,29,22,22,17,26,26],
[27,16,21,0,20,19,14,20,32],
[26,19,28,30,0,19,23,27,28],
[34,26,28,31,31,0,25,31,31],
[31,26,33,36,27,25,0,34,34],
[27,21,24,30,23,19,16,0,30],
[26,17,24,18,22,19,16,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,27,21,27,25,26,24,27],
[27,0,28,25,27,27,29,26,32],
[23,22,0,19,26,18,24,19,25],
[29,25,31,0,28,24,30,22,30],
[23,23,24,22,0,24,28,23,28],
[25,23,32,26,26,0,32,24,29],
[24,21,26,20,22,18,0,21,26],
[26,24,31,28,27,26,29,0,28],
[23,18,25,20,22,21,24,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,17,27,17,23,19,24,20],
[25,0,21,27,22,22,26,22,20],
[33,29,0,27,24,26,24,24,22],
[23,23,23,0,26,21,23,20,21],
[33,28,26,24,0,22,25,21,24],
[27,28,24,29,28,0,26,20,25],
[31,24,26,27,25,24,0,21,20],
[26,28,26,30,29,30,29,0,25],
[30,30,28,29,26,25,30,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,35,32,24,25,29,27],
[24,0,27,28,23,24,23,27,19],
[24,23,0,34,26,23,31,33,30],
[15,22,16,0,19,12,16,17,16],
[18,27,24,31,0,20,26,29,28],
[26,26,27,38,30,0,24,26,27],
[25,27,19,34,24,26,0,26,23],
[21,23,17,33,21,24,24,0,28],
[23,31,20,34,22,23,27,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,20,25,27,24,25,23,18],
[21,0,21,28,21,18,24,21,16],
[30,29,0,28,33,29,27,34,23],
[25,22,22,0,22,23,23,22,23],
[23,29,17,28,0,20,21,20,17],
[26,32,21,27,30,0,29,30,25],
[25,26,23,27,29,21,0,25,18],
[27,29,16,28,30,20,25,0,20],
[32,34,27,27,33,25,32,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,19,19,12,12,50,12,44],
[38,0,50,38,13,25,38,25,50],
[31,0,0,6,0,18,31,12,43],
[31,12,44,0,12,18,50,12,44],
[38,37,50,38,0,18,50,18,50],
[38,25,32,32,32,0,38,7,44],
[0,12,19,0,0,12,0,12,19],
[38,25,38,38,32,43,38,0,50],
[6,0,7,6,0,6,31,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,25,33,28,24,33,27],
[26,0,26,25,27,24,26,27,19],
[26,24,0,25,32,24,23,23,19],
[25,25,25,0,32,29,22,28,29],
[17,23,18,18,0,22,18,17,20],
[22,26,26,21,28,0,19,21,24],
[26,24,27,28,32,31,0,31,29],
[17,23,27,22,33,29,19,0,22],
[23,31,31,21,30,26,21,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,23,23,27,25,26,27],
[25,0,27,24,30,20,27,28,28],
[25,23,0,28,28,28,23,21,26],
[27,26,22,0,23,29,25,29,32],
[27,20,22,27,0,26,26,24,26],
[23,30,22,21,24,0,25,26,23],
[25,23,27,25,24,25,0,29,25],
[24,22,29,21,26,24,21,0,24],
[23,22,24,18,24,27,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,32,21,23,25,26,26,28],
[17,0,23,15,17,20,27,14,20],
[18,27,0,25,20,15,19,25,29],
[29,35,25,0,21,28,31,28,29],
[27,33,30,29,0,27,34,27,23],
[25,30,35,22,23,0,34,29,24],
[24,23,31,19,16,16,0,19,27],
[24,36,25,22,23,21,31,0,18],
[22,30,21,21,27,26,23,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,27,30,25,26,26,25,26],
[24,0,33,30,20,28,27,22,25],
[23,17,0,27,22,19,16,17,22],
[20,20,23,0,17,22,20,21,17],
[25,30,28,33,0,20,27,24,23],
[24,22,31,28,30,0,24,22,29],
[24,23,34,30,23,26,0,21,20],
[25,28,33,29,26,28,29,0,31],
[24,25,28,33,27,21,30,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,24,26,26,32,35,20],
[24,0,25,28,23,30,26,31,19],
[27,25,0,28,27,35,30,36,21],
[26,22,22,0,17,34,26,32,23],
[24,27,23,33,0,35,31,33,27],
[24,20,15,16,15,0,24,26,15],
[18,24,20,24,19,26,0,33,19],
[15,19,14,18,17,24,17,0,15],
[30,31,29,27,23,35,31,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,27,25,27,36,26,24,24],
[26,0,30,24,28,35,29,24,26],
[23,20,0,28,27,24,20,19,19],
[25,26,22,0,21,22,13,15,15],
[23,22,23,29,0,28,22,26,24],
[14,15,26,28,22,0,22,20,20],
[24,21,30,37,28,28,0,28,24],
[26,26,31,35,24,30,22,0,22],
[26,24,31,35,26,30,26,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,21,24,25,24,31,28,37],
[15,0,21,19,21,10,14,17,22],
[29,29,0,30,28,17,25,29,24],
[26,31,20,0,16,20,34,22,38],
[25,29,22,34,0,26,33,23,33],
[26,40,33,30,24,0,27,35,30],
[19,36,25,16,17,23,0,15,34],
[22,33,21,28,27,15,35,0,31],
[13,28,26,12,17,20,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,36,11,36,11,0,25],
[25,0,25,36,11,50,25,14,39],
[25,25,0,36,36,36,36,25,25],
[14,14,14,0,25,50,25,14,39],
[39,39,14,25,0,50,50,14,39],
[14,0,14,0,0,0,14,0,0],
[39,25,14,25,0,36,0,0,25],
[50,36,25,36,36,50,50,0,25],
[25,11,25,11,11,50,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,34,30,36,40,25,24,33],
[22,0,26,34,35,37,20,27,29],
[16,24,0,30,23,26,10,26,30],
[20,16,20,0,19,29,11,26,34],
[14,15,27,31,0,30,28,27,22],
[10,13,24,21,20,0,10,16,17],
[25,30,40,39,22,40,0,35,29],
[26,23,24,24,23,34,15,0,35],
[17,21,20,16,28,33,21,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,17,32,32,27,32,50,50],
[0,0,17,17,32,9,32,24,32],
[33,33,0,50,24,42,36,36,33],
[18,33,0,0,24,24,15,36,33],
[18,18,26,26,0,18,33,21,18],
[23,41,8,26,32,0,23,26,23],
[18,18,14,35,17,27,0,21,18],
[0,26,14,14,29,24,29,0,26],
[0,18,17,17,32,27,32,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,20,27,29,24,36,25,24],
[27,0,15,30,25,25,33,24,26],
[30,35,0,32,34,26,35,36,22],
[23,20,18,0,22,25,34,31,20],
[21,25,16,28,0,20,28,28,19],
[26,25,24,25,30,0,32,33,22],
[14,17,15,16,22,18,0,26,25],
[25,26,14,19,22,17,24,0,22],
[26,24,28,30,31,28,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,30,35,33,42,29,28],
[25,0,26,22,32,26,41,27,40],
[26,24,0,26,23,27,36,31,28],
[20,28,24,0,26,24,31,19,25],
[15,18,27,24,0,23,37,26,26],
[17,24,23,26,27,0,31,23,30],
[8,9,14,19,13,19,0,15,14],
[21,23,19,31,24,27,35,0,33],
[22,10,22,25,24,20,36,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,13,16,12,31,24,30,33],
[34,0,20,25,28,46,27,31,37],
[37,30,0,27,20,37,26,28,36],
[34,25,23,0,13,34,19,25,45],
[38,22,30,37,0,39,31,23,44],
[19,4,13,16,11,0,18,25,29],
[26,23,24,31,19,32,0,23,40],
[20,19,22,25,27,25,27,0,31],
[17,13,14,5,6,21,10,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,21,26,32,21,28,27,23],
[23,0,17,21,24,21,22,25,23],
[29,33,0,28,30,28,32,32,24],
[24,29,22,0,31,22,25,28,26],
[18,26,20,19,0,18,23,23,22],
[29,29,22,28,32,0,30,34,31],
[22,28,18,25,27,20,0,29,23],
[23,25,18,22,27,16,21,0,25],
[27,27,26,24,28,19,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,30,28,27,26,24,28],
[24,0,21,29,26,20,26,23,29],
[24,29,0,26,25,32,25,25,27],
[20,21,24,0,24,25,25,22,22],
[22,24,25,26,0,28,27,22,35],
[23,30,18,25,22,0,31,22,27],
[24,24,25,25,23,19,0,15,27],
[26,27,25,28,28,28,35,0,29],
[22,21,23,28,15,23,23,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,28,28,27,32,29,24,30],
[7,0,11,16,22,17,18,7,15],
[22,39,0,36,33,25,27,23,25],
[22,34,14,0,20,19,26,11,29],
[23,28,17,30,0,20,19,18,25],
[18,33,25,31,30,0,23,13,25],
[21,32,23,24,31,27,0,27,24],
[26,43,27,39,32,37,23,0,30],
[20,35,25,21,25,25,26,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,8,27,22,31,29,18],
[39,0,33,34,42,38,33,43,22],
[36,17,0,21,34,33,31,39,17],
[42,16,29,0,47,27,32,37,32],
[23,8,16,3,0,15,26,37,15],
[28,12,17,23,35,0,37,38,20],
[19,17,19,18,24,13,0,35,26],
[21,7,11,13,13,12,15,0,9],
[32,28,33,18,35,30,24,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,24,28,26,32,28,25,25],
[32,0,24,22,25,30,35,31,27],
[26,26,0,29,33,25,33,36,28],
[22,28,21,0,25,24,27,29,27],
[24,25,17,25,0,24,26,25,22],
[18,20,25,26,26,0,35,25,26],
[22,15,17,23,24,15,0,26,14],
[25,19,14,21,25,25,24,0,19],
[25,23,22,23,28,24,36,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,32,33,28,26,29,26],
[28,0,27,28,27,25,28,25,25],
[29,23,0,26,31,32,29,30,28],
[18,22,24,0,26,27,26,24,23],
[17,23,19,24,0,28,20,25,22],
[22,25,18,23,22,0,18,25,26],
[24,22,21,24,30,32,0,26,18],
[21,25,20,26,25,25,24,0,23],
[24,25,22,27,28,24,32,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,22,21,32,22,19,31,27],
[20,0,24,23,24,20,23,20,47],
[28,26,0,15,24,34,21,25,29],
[29,27,35,0,24,30,33,13,30],
[18,26,26,26,0,29,32,36,29],
[28,30,16,20,21,0,36,17,39],
[31,27,29,17,18,14,0,12,31],
[19,30,25,37,14,33,38,0,30],
[23,3,21,20,21,11,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,11,25,25,12,17,22,11],
[34,0,38,25,26,40,25,35,35],
[39,12,0,29,27,21,29,29,35],
[25,25,21,0,19,26,19,20,25],
[25,24,23,31,0,25,24,25,23],
[38,10,29,24,25,0,33,31,30],
[33,25,21,31,26,17,0,23,31],
[28,15,21,30,25,19,27,0,32],
[39,15,15,25,27,20,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,34,28,29,32,22,40,30],
[21,0,35,20,30,33,20,35,30],
[16,15,0,18,29,27,14,23,20],
[22,30,32,0,28,34,22,31,23],
[21,20,21,22,0,26,27,27,21],
[18,17,23,16,24,0,15,18,18],
[28,30,36,28,23,35,0,38,30],
[10,15,27,19,23,32,12,0,16],
[20,20,30,27,29,32,20,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,23,20,28,19,16,16,20],
[36,0,26,36,41,32,29,24,32],
[27,24,0,22,34,18,20,23,24],
[30,14,28,0,28,26,19,21,31],
[22,9,16,22,0,19,9,14,18],
[31,18,32,24,31,0,19,26,29],
[34,21,30,31,41,31,0,27,37],
[34,26,27,29,36,24,23,0,30],
[30,18,26,19,32,21,13,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,23,31,19,30,38,22,30],
[18,0,28,28,23,28,30,26,31],
[27,22,0,33,31,31,35,29,32],
[19,22,17,0,19,16,26,22,24],
[31,27,19,31,0,33,33,36,33],
[20,22,19,34,17,0,36,29,38],
[12,20,15,24,17,14,0,14,30],
[28,24,21,28,14,21,36,0,31],
[20,19,18,26,17,12,20,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,26,24,23,22,26,24],
[25,0,27,26,26,28,23,31,22],
[22,23,0,26,24,25,22,29,24],
[24,24,24,0,24,24,18,30,25],
[26,24,26,26,0,24,20,28,18],
[27,22,25,26,26,0,21,27,19],
[28,27,28,32,30,29,0,33,21],
[24,19,21,20,22,23,17,0,17],
[26,28,26,25,32,31,29,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,13,18,32,17,19,20,12],
[28,0,15,27,23,23,17,24,22],
[37,35,0,20,37,28,32,31,32],
[32,23,30,0,31,25,29,25,24],
[18,27,13,19,0,29,18,18,19],
[33,27,22,25,21,0,22,18,22],
[31,33,18,21,32,28,0,29,24],
[30,26,19,25,32,32,21,0,21],
[38,28,18,26,31,28,26,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,17,23,25,23,24,22,17],
[13,0,19,24,18,21,14,18,19],
[33,31,0,32,31,25,24,38,31],
[27,26,18,0,21,23,28,16,14],
[25,32,19,29,0,22,25,27,22],
[27,29,25,27,28,0,25,29,16],
[26,36,26,22,25,25,0,27,23],
[28,32,12,34,23,21,23,0,21],
[33,31,19,36,28,34,27,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,25,30,26,31,32,32,34],
[17,0,15,23,19,19,18,18,29],
[25,35,0,24,23,28,21,22,27],
[20,27,26,0,25,28,29,26,33],
[24,31,27,25,0,31,19,26,33],
[19,31,22,22,19,0,17,21,30],
[18,32,29,21,31,33,0,25,31],
[18,32,28,24,24,29,25,0,36],
[16,21,23,17,17,20,19,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,27,28,29,30,25,25,27],
[22,0,23,23,22,24,24,24,20],
[23,27,0,31,24,27,30,22,24],
[22,27,19,0,20,25,20,20,20],
[21,28,26,30,0,28,25,22,27],
[20,26,23,25,22,0,26,17,23],
[25,26,20,30,25,24,0,16,22],
[25,26,28,30,28,33,34,0,32],
[23,30,26,30,23,27,28,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,30,29,27,28,28,31,24],
[23,0,31,28,26,24,24,29,31],
[20,19,0,23,22,25,21,24,25],
[21,22,27,0,24,22,23,33,28],
[23,24,28,26,0,24,22,27,23],
[22,26,25,28,26,0,25,34,30],
[22,26,29,27,28,25,0,28,27],
[19,21,26,17,23,16,22,0,25],
[26,19,25,22,27,20,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,28,29,26,21,25,28],
[27,0,30,26,26,21,21,26,26],
[24,20,0,22,29,22,23,25,20],
[22,24,28,0,27,25,28,23,24],
[21,24,21,23,0,22,24,24,18],
[24,29,28,25,28,0,25,27,26],
[29,29,27,22,26,25,0,27,31],
[25,24,25,27,26,23,23,0,25],
[22,24,30,26,32,24,19,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,22,30,22,19,23,21],
[30,0,29,26,30,29,28,25,27],
[30,21,0,27,30,29,25,20,22],
[28,24,23,0,27,28,30,27,25],
[20,20,20,23,0,25,29,18,18],
[28,21,21,22,25,0,26,20,17],
[31,22,25,20,21,24,0,29,24],
[27,25,30,23,32,30,21,0,20],
[29,23,28,25,32,33,26,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,29,26,19,25,27,25],
[26,0,24,31,26,27,31,27,34],
[26,26,0,32,25,26,24,34,27],
[21,19,18,0,25,21,21,26,24],
[24,24,25,25,0,27,27,26,27],
[31,23,24,29,23,0,23,26,27],
[25,19,26,29,23,27,0,27,28],
[23,23,16,24,24,24,23,0,24],
[25,16,23,26,23,23,22,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,19,17,25,20,22,21,17],
[24,0,20,22,22,25,24,24,16],
[31,30,0,22,28,30,25,29,24],
[33,28,28,0,28,33,28,26,25],
[25,28,22,22,0,25,28,23,17],
[30,25,20,17,25,0,21,21,16],
[28,26,25,22,22,29,0,24,16],
[29,26,21,24,27,29,26,0,20],
[33,34,26,25,33,34,34,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,30,36,27,25,36,36,38],
[15,0,23,19,31,21,35,37,38],
[20,27,0,25,30,25,28,29,28],
[14,31,25,0,26,24,35,35,35],
[23,19,20,24,0,25,29,31,31],
[25,29,25,26,25,0,40,27,24],
[14,15,22,15,21,10,0,22,24],
[14,13,21,15,19,23,28,0,30],
[12,12,22,15,19,26,26,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,29,22,28,21,27,24,18],
[22,0,17,14,17,23,17,30,24],
[21,33,0,26,11,33,15,31,24],
[28,36,24,0,23,35,24,24,35],
[22,33,39,27,0,35,27,29,25],
[29,27,17,15,15,0,19,21,16],
[23,33,35,26,23,31,0,37,21],
[26,20,19,26,21,29,13,0,26],
[32,26,26,15,25,34,29,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,27,21,27,27,30,27,21],
[20,0,19,14,21,20,24,21,19],
[23,31,0,19,24,22,27,20,25],
[29,36,31,0,24,26,31,28,27],
[23,29,26,26,0,23,29,28,21],
[23,30,28,24,27,0,28,24,23],
[20,26,23,19,21,22,0,22,16],
[23,29,30,22,22,26,28,0,23],
[29,31,25,23,29,27,34,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,30,22,23,23,26,25],
[21,0,34,26,18,15,23,34,23],
[24,16,0,28,20,24,25,23,24],
[20,24,22,0,17,22,16,26,23],
[28,32,30,33,0,24,25,31,22],
[27,35,26,28,26,0,25,35,28],
[27,27,25,34,25,25,0,31,23],
[24,16,27,24,19,15,19,0,20],
[25,27,26,27,28,22,27,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,21,21,37,26,46,30,34],
[33,0,33,17,33,29,33,26,35],
[29,17,0,19,39,35,39,35,41],
[29,33,31,0,44,25,29,29,33],
[13,17,11,6,0,15,29,19,32],
[24,21,15,25,35,0,35,23,28],
[4,17,11,21,21,15,0,19,25],
[20,24,15,21,31,27,31,0,37],
[16,15,9,17,18,22,25,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,25,32,30,29,25,21,31],
[18,0,22,25,33,31,22,22,24],
[25,28,0,31,30,33,27,27,33],
[18,25,19,0,28,30,20,24,24],
[20,17,20,22,0,22,22,16,25],
[21,19,17,20,28,0,20,17,25],
[25,28,23,30,28,30,0,24,23],
[29,28,23,26,34,33,26,0,28],
[19,26,17,26,25,25,27,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,34,38,34,43,16,24,32],
[28,0,39,32,36,39,19,20,35],
[16,11,0,16,20,30,22,10,27],
[12,18,34,0,20,32,12,20,28],
[16,14,30,30,0,37,20,23,25],
[7,11,20,18,13,0,9,12,14],
[34,31,28,38,30,41,0,25,34],
[26,30,40,30,27,38,25,0,24],
[18,15,23,22,25,36,16,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,24,29,29,13,26,14,25],
[36,0,30,27,30,23,26,29,26],
[26,20,0,26,24,26,24,23,28],
[21,23,24,0,17,21,27,21,21],
[21,20,26,33,0,27,29,24,22],
[37,27,24,29,23,0,25,13,29],
[24,24,26,23,21,25,0,21,22],
[36,21,27,29,26,37,29,0,22],
[25,24,22,29,28,21,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,27,24,28,23,25,24],
[25,0,22,23,28,22,25,26,27],
[26,28,0,26,29,33,27,26,25],
[23,27,24,0,26,25,24,26,22],
[26,22,21,24,0,27,18,23,25],
[22,28,17,25,23,0,28,26,25],
[27,25,23,26,32,22,0,33,23],
[25,24,24,24,27,24,17,0,26],
[26,23,25,28,25,25,27,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,30,23,26,32,23,30,28],
[26,0,24,26,26,32,27,27,28],
[20,26,0,26,22,26,18,27,23],
[27,24,24,0,24,26,30,31,26],
[24,24,28,26,0,27,24,24,23],
[18,18,24,24,23,0,18,25,22],
[27,23,32,20,26,32,0,27,21],
[20,23,23,19,26,25,23,0,22],
[22,22,27,24,27,28,29,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,21,30,29,22,23,32,23],
[27,0,21,24,28,23,20,28,27],
[29,29,0,20,27,26,27,37,24],
[20,26,30,0,31,25,24,36,28],
[21,22,23,19,0,22,22,31,21],
[28,27,24,25,28,0,30,32,29],
[27,30,23,26,28,20,0,28,21],
[18,22,13,14,19,18,22,0,17],
[27,23,26,22,29,21,29,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,25,4,17,11,11,20,19],
[40,0,30,32,25,24,25,36,25],
[25,20,0,22,8,25,25,19,17],
[46,18,28,0,23,19,27,26,17],
[33,25,42,27,0,35,41,32,30],
[39,26,25,31,15,0,19,20,19],
[39,25,25,23,9,31,0,15,18],
[30,14,31,24,18,30,35,0,27],
[31,25,33,33,20,31,32,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,23,19,23,32,24,24,25],
[35,0,26,25,24,32,26,20,29],
[27,24,0,21,27,28,23,18,27],
[31,25,29,0,27,33,24,25,23],
[27,26,23,23,0,30,23,23,27],
[18,18,22,17,20,0,18,21,18],
[26,24,27,26,27,32,0,26,28],
[26,30,32,25,27,29,24,0,33],
[25,21,23,27,23,32,22,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,27,30,26,25,30,30,24],
[19,0,27,29,19,26,24,24,20],
[23,23,0,27,15,29,20,24,27],
[20,21,23,0,22,26,31,22,24],
[24,31,35,28,0,33,33,23,31],
[25,24,21,24,17,0,21,20,25],
[20,26,30,19,17,29,0,22,24],
[20,26,26,28,27,30,28,0,31],
[26,30,23,26,19,25,26,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,9,16,27,24,25,29],
[30,0,24,22,19,23,15,29,22],
[29,26,0,27,18,27,28,37,23],
[41,28,23,0,19,32,23,40,28],
[34,31,32,31,0,23,21,35,19],
[23,27,23,18,27,0,23,27,19],
[26,35,22,27,29,27,0,36,27],
[25,21,13,10,15,23,14,0,16],
[21,28,27,22,31,31,23,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,22,21,27,21,19,25],
[26,0,28,26,22,29,28,19,25],
[27,22,0,21,21,25,20,19,26],
[28,24,29,0,23,27,24,24,24],
[29,28,29,27,0,27,27,23,27],
[23,21,25,23,23,0,21,16,21],
[29,22,30,26,23,29,0,26,30],
[31,31,31,26,27,34,24,0,26],
[25,25,24,26,23,29,20,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,36,40,39,41,30,19,22],
[17,0,27,24,26,31,28,33,22],
[14,23,0,24,21,21,16,26,16],
[10,26,26,0,28,39,20,23,15],
[11,24,29,22,0,40,27,28,16],
[9,19,29,11,10,0,15,15,20],
[20,22,34,30,23,35,0,22,28],
[31,17,24,27,22,35,28,0,18],
[28,28,34,35,34,30,22,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,29,31,31,26,23,24],
[24,0,27,31,22,28,29,25,22],
[25,23,0,31,31,27,22,23,28],
[21,19,19,0,24,29,20,21,22],
[19,28,19,26,0,21,24,19,27],
[19,22,23,21,29,0,28,16,21],
[24,21,28,30,26,22,0,23,23],
[27,25,27,29,31,34,27,0,29],
[26,28,22,28,23,29,27,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,14,23,21,19,25,28],
[28,0,25,25,27,22,31,26,35],
[29,25,0,16,24,24,22,23,26],
[36,25,34,0,39,35,36,40,29],
[27,23,26,11,0,28,29,33,26],
[29,28,26,15,22,0,29,26,24],
[31,19,28,14,21,21,0,36,29],
[25,24,27,10,17,24,14,0,19],
[22,15,24,21,24,26,21,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,31,32,23,26,34,34,29],
[23,0,24,25,22,30,26,25,26],
[19,26,0,32,21,29,27,23,27],
[18,25,18,0,21,25,25,20,19],
[27,28,29,29,0,23,30,34,26],
[24,20,21,25,27,0,25,26,24],
[16,24,23,25,20,25,0,25,21],
[16,25,27,30,16,24,25,0,25],
[21,24,23,31,24,26,29,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,23,24,25,23,27,21,22],
[23,0,24,22,32,19,24,21,29],
[27,26,0,25,33,24,26,25,29],
[26,28,25,0,36,23,32,29,25],
[25,18,17,14,0,19,26,22,27],
[27,31,26,27,31,0,25,26,27],
[23,26,24,18,24,25,0,23,22],
[29,29,25,21,28,24,27,0,24],
[28,21,21,25,23,23,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,19,23,19,25,20,19,23],
[29,0,27,32,25,26,22,29,29],
[31,23,0,27,21,26,22,24,27],
[27,18,23,0,24,21,23,24,21],
[31,25,29,26,0,27,18,21,28],
[25,24,24,29,23,0,24,25,22],
[30,28,28,27,32,26,0,21,26],
[31,21,26,26,29,25,29,0,26],
[27,21,23,29,22,28,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,22,30,27,28,25,26,33],
[26,0,28,24,22,23,24,32,30],
[28,22,0,27,22,26,27,27,29],
[20,26,23,0,22,25,24,26,27],
[23,28,28,28,0,28,26,32,29],
[22,27,24,25,22,0,24,23,25],
[25,26,23,26,24,26,0,23,31],
[24,18,23,24,18,27,27,0,25],
[17,20,21,23,21,25,19,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,35,34,29,34,10,31],
[16,0,11,23,11,29,32,20,19],
[16,39,0,33,2,20,23,26,25],
[15,27,17,0,17,19,17,25,17],
[16,39,48,33,0,29,32,26,25],
[21,21,30,31,21,0,40,8,40],
[16,18,27,33,18,10,0,16,27],
[40,30,24,25,24,42,34,0,40],
[19,31,25,33,25,10,23,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,23,11,21,19,15,25],
[35,0,21,25,20,30,26,28,34],
[31,29,0,30,21,34,26,34,38],
[27,25,20,0,19,27,25,26,27],
[39,30,29,31,0,35,25,38,35],
[29,20,16,23,15,0,27,25,26],
[31,24,24,25,25,23,0,24,30],
[35,22,16,24,12,25,26,0,31],
[25,16,12,23,15,24,20,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,30,27,24,27,30,13],
[34,0,28,37,38,25,22,34,29],
[32,22,0,32,32,28,23,34,19],
[20,13,18,0,22,18,21,36,9],
[23,12,18,28,0,18,15,22,15],
[26,25,22,32,32,0,21,29,24],
[23,28,27,29,35,29,0,33,23],
[20,16,16,14,28,21,17,0,14],
[37,21,31,41,35,26,27,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,29,30,31,20,20,20,38],
[28,0,30,26,32,18,28,29,36],
[21,20,0,22,28,20,37,8,28],
[20,24,28,0,28,21,33,23,33],
[19,18,22,22,0,17,21,14,22],
[30,32,30,29,33,0,25,16,34],
[30,22,13,17,29,25,0,9,25],
[30,21,42,27,36,34,41,0,46],
[12,14,22,17,28,16,25,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,16,14,19,16,22,12,19],
[27,0,23,24,17,27,31,23,31],
[34,27,0,22,25,23,28,20,26],
[36,26,28,0,21,22,24,18,23],
[31,33,25,29,0,30,34,22,23],
[34,23,27,28,20,0,34,25,24],
[28,19,22,26,16,16,0,22,17],
[38,27,30,32,28,25,28,0,27],
[31,19,24,27,27,26,33,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,24,33,25,33,23,29,26],
[24,0,21,28,26,30,26,27,20],
[26,29,0,23,25,28,21,26,20],
[17,22,27,0,23,33,22,25,23],
[25,24,25,27,0,31,23,22,19],
[17,20,22,17,19,0,13,25,21],
[27,24,29,28,27,37,0,25,28],
[21,23,24,25,28,25,25,0,25],
[24,30,30,27,31,29,22,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,35,29,27,24,16,30,26],
[30,0,34,32,33,24,24,29,22],
[15,16,0,23,20,20,11,15,15],
[21,18,27,0,24,21,18,18,16],
[23,17,30,26,0,23,22,22,17],
[26,26,30,29,27,0,25,20,20],
[34,26,39,32,28,25,0,30,27],
[20,21,35,32,28,30,20,0,28],
[24,28,35,34,33,30,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,28,19,24,19,26,25,29],
[30,0,30,23,36,28,40,30,31],
[22,20,0,19,27,17,27,17,23],
[31,27,31,0,31,21,33,24,30],
[26,14,23,19,0,19,29,20,24],
[31,22,33,29,31,0,34,27,33],
[24,10,23,17,21,16,0,24,25],
[25,20,33,26,30,23,26,0,22],
[21,19,27,20,26,17,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,21,23,28,23,24,18],
[26,0,30,20,25,30,24,28,22],
[24,20,0,17,20,33,19,26,24],
[29,30,33,0,32,34,28,27,25],
[27,25,30,18,0,31,25,25,22],
[22,20,17,16,19,0,18,18,18],
[27,26,31,22,25,32,0,25,27],
[26,22,24,23,25,32,25,0,19],
[32,28,26,25,28,32,23,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,29,27,32,27,28,22],
[25,0,28,27,30,26,21,25,23],
[20,22,0,22,29,35,21,28,25],
[21,23,28,0,29,30,21,26,17],
[23,20,21,21,0,27,21,21,18],
[18,24,15,20,23,0,25,19,19],
[23,29,29,29,29,25,0,28,27],
[22,25,22,24,29,31,22,0,23],
[28,27,25,33,32,31,23,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,20,18,24,28,28,32,21],
[27,0,25,32,30,34,31,32,29],
[30,25,0,30,36,25,35,34,37],
[32,18,20,0,26,20,29,32,32],
[26,20,14,24,0,28,26,31,30],
[22,16,25,30,22,0,30,27,30],
[22,19,15,21,24,20,0,25,25],
[18,18,16,18,19,23,25,0,26],
[29,21,13,18,20,20,25,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,24,29,23,25,23,34,28],
[23,0,24,34,32,26,25,22,24],
[26,26,0,32,25,24,30,31,26],
[21,16,18,0,19,19,20,23,17],
[27,18,25,31,0,23,26,26,26],
[25,24,26,31,27,0,20,21,24],
[27,25,20,30,24,30,0,25,26],
[16,28,19,27,24,29,25,0,21],
[22,26,24,33,24,26,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,17,6,20,19,23,13,8],
[35,0,28,20,24,35,37,29,28],
[33,22,0,24,36,23,30,26,14],
[44,30,26,0,42,37,44,30,20],
[30,26,14,8,0,31,38,29,20],
[31,15,27,13,19,0,29,27,14],
[27,13,20,6,12,21,0,17,19],
[37,21,24,20,21,23,33,0,28],
[42,22,36,30,30,36,31,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,30,33,26,26,29,26,25],
[23,0,25,25,22,24,27,26,23],
[20,25,0,25,21,21,25,20,20],
[17,25,25,0,15,19,22,23,19],
[24,28,29,35,0,27,26,29,25],
[24,26,29,31,23,0,28,23,21],
[21,23,25,28,24,22,0,22,21],
[24,24,30,27,21,27,28,0,19],
[25,27,30,31,25,29,29,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,22,21,26,19,20,24,20],
[27,0,26,23,23,22,28,26,29],
[28,24,0,20,29,28,27,28,29],
[29,27,30,0,31,24,33,37,25],
[24,27,21,19,0,22,22,25,30],
[31,28,22,26,28,0,22,27,30],
[30,22,23,17,28,28,0,25,30],
[26,24,22,13,25,23,25,0,22],
[30,21,21,25,20,20,20,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,25,30,23,24,20,24],
[27,0,23,27,28,22,25,27,25],
[27,27,0,22,29,20,25,23,20],
[25,23,28,0,29,25,31,24,21],
[20,22,21,21,0,21,25,19,20],
[27,28,30,25,29,0,30,25,28],
[26,25,25,19,25,20,0,21,20],
[30,23,27,26,31,25,29,0,25],
[26,25,30,29,30,22,30,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,22,19,22,24,24,22],
[24,0,25,27,20,20,30,19,20],
[27,25,0,23,25,18,29,27,21],
[28,23,27,0,25,22,31,27,26],
[31,30,25,25,0,23,26,25,21],
[28,30,32,28,27,0,32,25,27],
[26,20,21,19,24,18,0,18,20],
[26,31,23,23,25,25,32,0,25],
[28,30,29,24,29,23,30,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,26,32,27,27,30,26],
[25,0,30,24,34,23,31,27,25],
[21,20,0,22,35,23,21,20,20],
[24,26,28,0,31,23,27,27,20],
[18,16,15,19,0,18,20,18,15],
[23,27,27,27,32,0,24,24,23],
[23,19,29,23,30,26,0,22,25],
[20,23,30,23,32,26,28,0,25],
[24,25,30,30,35,27,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,28,30,29,30,36,25,27],
[28,0,25,31,31,31,34,45,32],
[22,25,0,32,42,37,37,29,27],
[20,19,18,0,29,20,25,25,21],
[21,19,8,21,0,24,21,24,18],
[20,19,13,30,26,0,28,27,23],
[14,16,13,25,29,22,0,16,15],
[25,5,21,25,26,23,34,0,21],
[23,18,23,29,32,27,35,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,19,6,22,19,19,19,19],
[22,0,19,28,22,28,35,22,28],
[31,31,0,28,9,24,31,22,9],
[44,22,22,0,22,28,22,35,22],
[28,28,41,28,0,15,28,28,32],
[31,22,26,22,35,0,22,13,35],
[31,15,19,28,22,28,0,22,28],
[31,28,28,15,22,37,28,0,28],
[31,22,41,28,18,15,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,20,23,22,25,29,19,23],
[23,0,20,27,23,22,34,25,21],
[30,30,0,27,23,14,29,21,25],
[27,23,23,0,19,19,27,18,25],
[28,27,27,31,0,17,29,21,27],
[25,28,36,31,33,0,35,28,32],
[21,16,21,23,21,15,0,15,19],
[31,25,29,32,29,22,35,0,18],
[27,29,25,25,23,18,31,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,22,23,27,23,24,20,22],
[29,0,21,22,27,21,18,25,23],
[28,29,0,25,33,30,23,23,25],
[27,28,25,0,33,26,27,28,22],
[23,23,17,17,0,21,19,23,24],
[27,29,20,24,29,0,22,17,30],
[26,32,27,23,31,28,0,24,24],
[30,25,27,22,27,33,26,0,26],
[28,27,25,28,26,20,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,21,22,23,31,17,21],
[26,0,27,23,27,24,31,23,25],
[27,23,0,23,19,21,28,19,16],
[29,27,27,0,26,23,32,27,24],
[28,23,31,24,0,28,29,27,31],
[27,26,29,27,22,0,34,16,19],
[19,19,22,18,21,16,0,20,23],
[33,27,31,23,23,34,30,0,33],
[29,25,34,26,19,31,27,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,32,33,19,28,25,24,21],
[16,0,19,15,12,23,14,17,17],
[18,31,0,21,15,24,18,19,20],
[17,35,29,0,22,27,31,22,34],
[31,38,35,28,0,32,25,27,29],
[22,27,26,23,18,0,16,14,18],
[25,36,32,19,25,34,0,22,22],
[26,33,31,28,23,36,28,0,25],
[29,33,30,16,21,32,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,17,23,24,27,28,21],
[30,0,28,25,30,31,27,28,25],
[26,22,0,27,27,30,30,32,29],
[33,25,23,0,36,30,25,34,23],
[27,20,23,14,0,28,25,27,18],
[26,19,20,20,22,0,26,24,21],
[23,23,20,25,25,24,0,30,23],
[22,22,18,16,23,26,20,0,14],
[29,25,21,27,32,29,27,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,31,25,27,36,20,28,26],
[28,0,33,33,30,29,25,32,30],
[19,17,0,25,26,29,13,24,28],
[25,17,25,0,24,29,23,28,25],
[23,20,24,26,0,29,14,27,22],
[14,21,21,21,21,0,16,24,24],
[30,25,37,27,36,34,0,31,31],
[22,18,26,22,23,26,19,0,25],
[24,20,22,25,28,26,19,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,23,24,29,23,30,21],
[30,0,20,25,33,26,24,27,23],
[34,30,0,19,30,28,33,32,28],
[27,25,31,0,34,30,24,29,32],
[26,17,20,16,0,25,23,21,21],
[21,24,22,20,25,0,25,29,20],
[27,26,17,26,27,25,0,26,21],
[20,23,18,21,29,21,24,0,20],
[29,27,22,18,29,30,29,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,18,30,21,23,26,26,24],
[24,0,23,33,19,23,23,26,33],
[32,27,0,32,25,22,30,30,28],
[20,17,18,0,16,20,15,25,21],
[29,31,25,34,0,35,26,35,22],
[27,27,28,30,15,0,25,33,28],
[24,27,20,35,24,25,0,31,26],
[24,24,20,25,15,17,19,0,23],
[26,17,22,29,28,22,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,31,27,25,27,29,33,32],
[21,0,25,14,20,16,19,25,21],
[19,25,0,18,27,21,25,25,20],
[23,36,32,0,25,24,33,33,27],
[25,30,23,25,0,24,23,25,30],
[23,34,29,26,26,0,26,30,32],
[21,31,25,17,27,24,0,28,21],
[17,25,25,17,25,20,22,0,23],
[18,29,30,23,20,18,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,8,36,21,37,38,37,26],
[26,0,8,36,10,37,18,27,20],
[42,42,0,32,23,42,41,33,26],
[14,14,18,0,14,24,18,28,7],
[29,40,27,36,0,37,31,30,20],
[13,13,8,26,13,0,18,17,16],
[12,32,9,32,19,32,0,22,12],
[13,23,17,22,20,33,28,0,17],
[24,30,24,43,30,34,38,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,25,32,31,26,17,23,20],
[38,0,25,35,29,26,21,19,35],
[25,25,0,30,29,27,22,26,24],
[18,15,20,0,31,28,22,19,21],
[19,21,21,19,0,14,22,18,21],
[24,24,23,22,36,0,24,20,22],
[33,29,28,28,28,26,0,26,19],
[27,31,24,31,32,30,24,0,32],
[30,15,26,29,29,28,31,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,29,30,25,32,29,31,25],
[23,0,33,29,33,35,34,26,23],
[21,17,0,24,22,32,28,30,15],
[20,21,26,0,30,36,31,31,25],
[25,17,28,20,0,32,24,29,25],
[18,15,18,14,18,0,23,16,15],
[21,16,22,19,26,27,0,25,20],
[19,24,20,19,21,34,25,0,17],
[25,27,35,25,25,35,30,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,21,23,23,27,25,26,22],
[23,0,19,21,22,28,23,24,24],
[29,31,0,23,26,26,31,29,25],
[27,29,27,0,22,32,31,28,24],
[27,28,24,28,0,27,31,29,25],
[23,22,24,18,23,0,26,26,16],
[25,27,19,19,19,24,0,20,19],
[24,26,21,22,21,24,30,0,23],
[28,26,25,26,25,34,31,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,33,32,23,25,26,22,28],
[19,0,33,24,29,27,22,24,27],
[17,17,0,26,30,29,23,16,37],
[18,26,24,0,21,20,19,23,33],
[27,21,20,29,0,18,25,17,31],
[25,23,21,30,32,0,18,30,27],
[24,28,27,31,25,32,0,32,37],
[28,26,34,27,33,20,18,0,35],
[22,23,13,17,19,23,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,23,28,28,34,31,32,31],
[15,0,20,23,22,26,21,14,13],
[27,30,0,29,29,35,34,20,31],
[22,27,21,0,18,24,31,20,22],
[22,28,21,32,0,33,31,16,28],
[16,24,15,26,17,0,17,21,19],
[19,29,16,19,19,33,0,23,16],
[18,36,30,30,34,29,27,0,28],
[19,37,19,28,22,31,34,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,12,18,24,23,13,27,13],
[22,0,22,25,29,27,25,23,19],
[38,28,0,24,27,25,26,29,20],
[32,25,26,0,28,29,28,25,23],
[26,21,23,22,0,26,21,20,16],
[27,23,25,21,24,0,23,16,13],
[37,25,24,22,29,27,0,31,25],
[23,27,21,25,30,34,19,0,12],
[37,31,30,27,34,37,25,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,23,11,20,17,16,27,13],
[39,0,38,25,28,25,29,27,30],
[27,12,0,18,21,19,24,20,19],
[39,25,32,0,31,26,32,38,39],
[30,22,29,19,0,16,33,30,32],
[33,25,31,24,34,0,37,31,32],
[34,21,26,18,17,13,0,27,23],
[23,23,30,12,20,19,23,0,19],
[37,20,31,11,18,18,27,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,17,22,24,34,25,29,19],
[22,0,20,25,27,35,29,20,28],
[33,30,0,25,27,31,37,32,30],
[28,25,25,0,19,31,32,26,36],
[26,23,23,31,0,40,33,25,38],
[16,15,19,19,10,0,25,17,23],
[25,21,13,18,17,25,0,20,20],
[21,30,18,24,25,33,30,0,28],
[31,22,20,14,12,27,30,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,16,29,28,20,26,28,26],
[26,0,22,29,29,27,27,25,26],
[34,28,0,27,26,20,24,32,25],
[21,21,23,0,21,18,25,29,26],
[22,21,24,29,0,23,21,31,28],
[30,23,30,32,27,0,28,36,33],
[24,23,26,25,29,22,0,32,22],
[22,25,18,21,19,14,18,0,23],
[24,24,25,24,22,17,28,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,30,29,28,26,27,28],
[27,0,20,29,22,23,20,24,24],
[24,30,0,30,29,29,24,32,30],
[20,21,20,0,25,25,18,22,23],
[21,28,21,25,0,30,19,25,28],
[22,27,21,25,20,0,20,25,27],
[24,30,26,32,31,30,0,28,27],
[23,26,18,28,25,25,22,0,29],
[22,26,20,27,22,23,23,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,19,22,18,18,21,23,22],
[23,0,19,22,22,19,21,18,23],
[31,31,0,32,29,28,31,21,26],
[28,28,18,0,25,19,30,19,26],
[32,28,21,25,0,20,28,20,27],
[32,31,22,31,30,0,32,25,29],
[29,29,19,20,22,18,0,24,21],
[27,32,29,31,30,25,26,0,31],
[28,27,24,24,23,21,29,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,31,25,24,34,19,22,23],
[28,0,28,33,26,36,25,28,26],
[19,22,0,25,20,30,18,21,24],
[25,17,25,0,21,27,15,23,21],
[26,24,30,29,0,30,19,21,24],
[16,14,20,23,20,0,18,18,17],
[31,25,32,35,31,32,0,25,31],
[28,22,29,27,29,32,25,0,26],
[27,24,26,29,26,33,19,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,33,24,33,32,22,28],
[28,0,29,28,24,31,31,27,28],
[26,21,0,27,23,25,24,26,24],
[17,22,23,0,24,26,21,18,24],
[26,26,27,26,0,32,25,26,28],
[17,19,25,24,18,0,22,24,20],
[18,19,26,29,25,28,0,20,27],
[28,23,24,32,24,26,30,0,29],
[22,22,26,26,22,30,23,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,33,32,22,36,25,22],
[25,0,33,33,31,31,33,26,27],
[20,17,0,25,27,27,22,23,26],
[17,17,25,0,20,23,19,21,19],
[18,19,23,30,0,21,28,19,22],
[28,19,23,27,29,0,33,24,23],
[14,17,28,31,22,17,0,14,20],
[25,24,27,29,31,26,36,0,29],
[28,23,24,31,28,27,30,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,26,22,17,28,35,21,31],
[19,0,19,13,13,25,22,15,25],
[24,31,0,31,25,29,33,29,31],
[28,37,19,0,19,32,27,27,35],
[33,37,25,31,0,32,32,28,34],
[22,25,21,18,18,0,30,26,25],
[15,28,17,23,18,20,0,17,22],
[29,35,21,23,22,24,33,0,32],
[19,25,19,15,16,25,28,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,28,35,27,19,32,31,34],
[32,0,25,33,31,29,29,32,34],
[22,25,0,33,27,21,23,36,26],
[15,17,17,0,22,18,26,33,31],
[23,19,23,28,0,22,29,35,30],
[31,21,29,32,28,0,32,31,32],
[18,21,27,24,21,18,0,28,28],
[19,18,14,17,15,19,22,0,25],
[16,16,24,19,20,18,22,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,26,26,25,26,25,25,24],
[20,0,23,24,26,21,25,22,30],
[24,27,0,25,26,21,25,25,26],
[24,26,25,0,25,24,24,25,30],
[25,24,24,25,0,27,19,20,22],
[24,29,29,26,23,0,22,23,28],
[25,25,25,26,31,28,0,25,26],
[25,28,25,25,30,27,25,0,25],
[26,20,24,20,28,22,24,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,27,27,28,27,19,23,35],
[17,0,22,29,30,30,22,22,29],
[23,28,0,34,26,35,22,23,31],
[23,21,16,0,19,26,17,14,20],
[22,20,24,31,0,31,21,25,29],
[23,20,15,24,19,0,14,13,21],
[31,28,28,33,29,36,0,23,35],
[27,28,27,36,25,37,27,0,31],
[15,21,19,30,21,29,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,24,23,30,25,24,29],
[24,0,24,25,29,29,33,30,25],
[27,26,0,29,23,25,29,26,28],
[26,25,21,0,28,29,27,30,24],
[27,21,27,22,0,31,28,31,32],
[20,21,25,21,19,0,27,32,22],
[25,17,21,23,22,23,0,27,23],
[26,20,24,20,19,18,23,0,24],
[21,25,22,26,18,28,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,30,27,25,22,23,23],
[26,0,28,23,28,25,23,20,26],
[24,22,0,24,25,26,17,22,22],
[20,27,26,0,29,23,16,20,23],
[23,22,25,21,0,23,24,22,20],
[25,25,24,27,27,0,20,25,20],
[28,27,33,34,26,30,0,27,25],
[27,30,28,30,28,25,23,0,26],
[27,24,28,27,30,30,25,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,31,26,28,38,23,20,38],
[26,0,41,32,22,35,35,17,29],
[19,9,0,17,7,13,23,7,20],
[24,18,33,0,12,34,21,17,25],
[22,28,43,38,0,38,25,20,26],
[12,15,37,16,12,0,19,29,15],
[27,15,27,29,25,31,0,17,25],
[30,33,43,33,30,21,33,0,33],
[12,21,30,25,24,35,25,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,23,31,26,27,31,34,25],
[22,0,29,30,33,31,25,30,19],
[27,21,0,31,27,24,24,26,22],
[19,20,19,0,27,19,15,34,23],
[24,17,23,23,0,22,23,27,22],
[23,19,26,31,28,0,26,29,23],
[19,25,26,35,27,24,0,33,23],
[16,20,24,16,23,21,17,0,19],
[25,31,28,27,28,27,27,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,13,21,22,21,26,30],
[27,0,24,29,24,22,29,27,28],
[33,26,0,23,24,25,39,34,40],
[37,21,27,0,27,30,28,32,31],
[29,26,26,23,0,20,29,25,30],
[28,28,25,20,30,0,35,29,37],
[29,21,11,22,21,15,0,16,26],
[24,23,16,18,25,21,34,0,29],
[20,22,10,19,20,13,24,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,16,18,17,17,21,25,22],
[30,0,16,21,22,18,24,24,18],
[34,34,0,38,26,25,30,34,28],
[32,29,12,0,18,22,21,19,26],
[33,28,24,32,0,16,30,26,28],
[33,32,25,28,34,0,35,25,26],
[29,26,20,29,20,15,0,24,23],
[25,26,16,31,24,25,26,0,22],
[28,32,22,24,22,24,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,18,13,13,28,21,16,18],
[19,0,20,12,20,30,28,17,23],
[32,30,0,19,23,36,27,22,34],
[37,38,31,0,21,31,30,26,37],
[37,30,27,29,0,40,25,29,34],
[22,20,14,19,10,0,16,22,25],
[29,22,23,20,25,34,0,18,35],
[34,33,28,24,21,28,32,0,33],
[32,27,16,13,16,25,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,24,29,37,41,16,30,29],
[17,0,24,22,37,37,20,33,18],
[26,26,0,20,26,26,20,24,20],
[21,28,30,0,17,23,17,23,15],
[13,13,24,33,0,26,21,18,25],
[9,13,24,27,24,0,16,9,18],
[34,30,30,33,29,34,0,28,22],
[20,17,26,27,32,41,22,0,29],
[21,32,30,35,25,32,28,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,20,20,36,23,35,28,31],
[22,0,29,26,32,18,32,26,28],
[30,21,0,21,35,23,24,25,33],
[30,24,29,0,42,31,35,31,28],
[14,18,15,8,0,9,20,22,16],
[27,32,27,19,41,0,28,29,33],
[15,18,26,15,30,22,0,15,22],
[22,24,25,19,28,21,35,0,30],
[19,22,17,22,34,17,28,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,27,28,21,25,26,22,25],
[25,0,24,26,21,20,22,20,20],
[23,26,0,28,22,24,21,19,26],
[22,24,22,0,19,26,23,20,26],
[29,29,28,31,0,27,24,25,28],
[25,30,26,24,23,0,24,23,20],
[24,28,29,27,26,26,0,23,31],
[28,30,31,30,25,27,27,0,27],
[25,30,24,24,22,30,19,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,31,28,28,23,30,28,28],
[23,0,28,24,23,22,26,25,29],
[19,22,0,24,21,21,23,24,23],
[22,26,26,0,23,23,27,27,28],
[22,27,29,27,0,27,27,28,25],
[27,28,29,27,23,0,30,28,25],
[20,24,27,23,23,20,0,23,24],
[22,25,26,23,22,22,27,0,26],
[22,21,27,22,25,25,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,30,24,22,24,34,36,17],
[21,0,26,28,24,21,24,25,25],
[20,24,0,28,19,17,14,28,24],
[26,22,22,0,20,17,21,23,23],
[28,26,31,30,0,20,18,25,27],
[26,29,33,33,30,0,23,40,27],
[16,26,36,29,32,27,0,34,30],
[14,25,22,27,25,10,16,0,23],
[33,25,26,27,23,23,20,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,21,19,17,19,24,26,20],
[18,0,15,20,18,18,18,18,17],
[29,35,0,23,21,24,26,25,28],
[31,30,27,0,26,18,31,26,25],
[33,32,29,24,0,27,30,28,26],
[31,32,26,32,23,0,33,31,36],
[26,32,24,19,20,17,0,21,18],
[24,32,25,24,22,19,29,0,23],
[30,33,22,25,24,14,32,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,30,28,29,33,27,28,21],
[26,0,28,29,29,30,29,24,26],
[20,22,0,29,24,23,24,23,18],
[22,21,21,0,21,30,24,17,18],
[21,21,26,29,0,28,25,22,23],
[17,20,27,20,22,0,20,19,17],
[23,21,26,26,25,30,0,19,24],
[22,26,27,33,28,31,31,0,22],
[29,24,32,32,27,33,26,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,24,22,23,23,21,27],
[32,0,30,32,21,31,23,22,31],
[30,20,0,28,24,23,26,23,36],
[26,18,22,0,25,30,19,27,32],
[28,29,26,25,0,28,29,27,30],
[27,19,27,20,22,0,18,30,35],
[27,27,24,31,21,32,0,31,37],
[29,28,27,23,23,20,19,0,29],
[23,19,14,18,20,15,13,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,23,27,25,19,20,22,31],
[23,0,31,21,18,23,21,24,16],
[27,19,0,32,23,21,26,36,27],
[23,29,18,0,20,25,23,36,32],
[25,32,27,30,0,21,29,30,20],
[31,27,29,25,29,0,18,26,23],
[30,29,24,27,21,32,0,27,24],
[28,26,14,14,20,24,23,0,28],
[19,34,23,18,30,27,26,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,29,29,22,28,28,30,32],
[29,0,25,29,24,32,28,30,30],
[21,25,0,29,31,26,29,25,28],
[21,21,21,0,25,25,26,24,25],
[28,26,19,25,0,25,30,26,27],
[22,18,24,25,25,0,25,22,26],
[22,22,21,24,20,25,0,18,27],
[20,20,25,26,24,28,32,0,27],
[18,20,22,25,23,24,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,22,37,31,31,31,39,45],
[14,0,30,36,39,31,37,39,36],
[28,20,0,33,29,24,29,32,41],
[13,14,17,0,31,18,18,26,21],
[19,11,21,19,0,37,37,39,27],
[19,19,26,32,13,0,19,26,32],
[19,13,21,32,13,31,0,21,27],
[11,11,18,24,11,24,29,0,32],
[5,14,9,29,23,18,23,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,30,19,14,20,24,13,25],
[39,0,20,39,21,34,40,25,36],
[20,30,0,39,22,19,29,27,22],
[31,11,11,0,12,17,33,13,28],
[36,29,28,38,0,36,38,22,30],
[30,16,31,33,14,0,34,24,26],
[26,10,21,17,12,16,0,10,16],
[37,25,23,37,28,26,40,0,28],
[25,14,28,22,20,24,34,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,19,22,22,26,20,23],
[34,0,26,24,29,27,29,29,29],
[29,24,0,25,27,27,28,26,27],
[31,26,25,0,23,26,27,27,31],
[28,21,23,27,0,28,24,28,23],
[28,23,23,24,22,0,29,24,24],
[24,21,22,23,26,21,0,28,25],
[30,21,24,23,22,26,22,0,24],
[27,21,23,19,27,26,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,27,28,27,29,24,25],
[31,0,26,29,27,22,27,23,25],
[31,24,0,27,25,31,28,23,24],
[23,21,23,0,29,27,26,19,25],
[22,23,25,21,0,31,27,24,22],
[23,28,19,23,19,0,22,15,24],
[21,23,22,24,23,28,0,19,19],
[26,27,27,31,26,35,31,0,24],
[25,25,26,25,28,26,31,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,21,18,19,24,18,18,19],
[24,0,22,23,18,27,20,25,19],
[29,28,0,20,26,32,31,25,25],
[32,27,30,0,22,32,23,33,24],
[31,32,24,28,0,32,26,28,30],
[26,23,18,18,18,0,25,21,23],
[32,30,19,27,24,25,0,27,24],
[32,25,25,17,22,29,23,0,22],
[31,31,25,26,20,27,26,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,21,22,28,23,19,24,24],
[14,0,35,24,22,25,30,33,25],
[29,15,0,15,23,19,12,28,19],
[28,26,35,0,27,30,18,26,26],
[22,28,27,23,0,26,25,25,21],
[27,25,31,20,24,0,21,25,19],
[31,20,38,32,25,29,0,50,19],
[26,17,22,24,25,25,0,0,10],
[26,25,31,24,29,31,31,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,31,29,25,30,37,33,33],
[25,0,20,22,18,31,27,31,30],
[19,30,0,20,24,29,26,30,28],
[21,28,30,0,21,28,33,36,36],
[25,32,26,29,0,34,31,35,34],
[20,19,21,22,16,0,21,30,25],
[13,23,24,17,19,29,0,28,29],
[17,19,20,14,15,20,22,0,24],
[17,20,22,14,16,25,21,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,20,16,26,14,20,25],
[29,0,26,33,24,21,16,21,27],
[27,24,0,27,28,25,19,23,26],
[30,17,23,0,20,24,15,16,22],
[34,26,22,30,0,27,22,23,23],
[24,29,25,26,23,0,19,23,23],
[36,34,31,35,28,31,0,26,23],
[30,29,27,34,27,27,24,0,24],
[25,23,24,28,27,27,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,28,34,23,31,26,32,36],
[23,0,32,31,23,24,19,30,33],
[22,18,0,23,18,17,15,24,23],
[16,19,27,0,16,22,14,20,19],
[27,27,32,34,0,32,25,35,23],
[19,26,33,28,18,0,20,28,28],
[24,31,35,36,25,30,0,32,31],
[18,20,26,30,15,22,18,0,22],
[14,17,27,31,27,22,19,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,24,30,42,27,19,24,24],
[15,0,15,36,36,17,26,24,8],
[26,35,0,29,42,35,19,32,26],
[20,14,21,0,23,23,24,30,21],
[8,14,8,27,0,11,26,23,8],
[23,33,15,27,39,0,26,32,16],
[31,24,31,26,24,24,0,41,31],
[26,26,18,20,27,18,9,0,25],
[26,42,24,29,42,34,19,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,29,25,30,29,32,33,30],
[20,0,23,29,26,25,28,24,22],
[21,27,0,24,21,29,27,25,28],
[25,21,26,0,23,21,30,27,22],
[20,24,29,27,0,23,30,25,21],
[21,25,21,29,27,0,32,26,24],
[18,22,23,20,20,18,0,20,16],
[17,26,25,23,25,24,30,0,24],
[20,28,22,28,29,26,34,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,31,20,30,18,30,20],
[26,0,26,37,28,26,27,28,22],
[25,24,0,35,31,28,28,34,19],
[19,13,15,0,19,24,20,27,20],
[30,22,19,31,0,28,26,32,26],
[20,24,22,26,22,0,22,20,23],
[32,23,22,30,24,28,0,35,24],
[20,22,16,23,18,30,15,0,18],
[30,28,31,30,24,27,26,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,35,25,28,11,25,16,24],
[22,0,28,22,21,15,32,21,30],
[15,22,0,26,26,19,22,19,26],
[25,28,24,0,30,31,30,29,30],
[22,29,24,20,0,15,28,14,24],
[39,35,31,19,35,0,32,29,31],
[25,18,28,20,22,18,0,18,28],
[34,29,31,21,36,21,32,0,30],
[26,20,24,20,26,19,22,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,45,25,24,50,50,50],
[4,0,20,24,4,24,29,9,4],
[9,30,0,30,9,9,9,9,9],
[5,26,20,0,0,25,29,9,9],
[25,46,41,50,0,25,29,29,29],
[26,26,41,25,25,0,50,30,30],
[0,21,41,21,21,0,0,21,4],
[0,41,41,41,21,20,29,0,4],
[0,46,41,41,21,20,46,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,18,21,29,21,22,23,23],
[28,0,26,27,28,26,24,25,33],
[32,24,0,26,32,27,28,24,29],
[29,23,24,0,32,25,27,25,26],
[21,22,18,18,0,25,22,19,25],
[29,24,23,25,25,0,23,27,32],
[28,26,22,23,28,27,0,22,24],
[27,25,26,25,31,23,28,0,29],
[27,17,21,24,25,18,26,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,19,15,32,22,21,23,19],
[26,0,23,17,32,27,31,21,23],
[31,27,0,21,38,25,25,26,23],
[35,33,29,0,32,32,41,25,25],
[18,18,12,18,0,23,24,20,22],
[28,23,25,18,27,0,34,22,24],
[29,19,25,9,26,16,0,22,19],
[27,29,24,25,30,28,28,0,17],
[31,27,27,25,28,26,31,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,20,21,22,27,22,25],
[30,0,32,33,27,24,27,27,29],
[29,18,0,24,28,23,28,23,25],
[30,17,26,0,22,27,27,26,27],
[29,23,22,28,0,26,26,25,28],
[28,26,27,23,24,0,25,27,27],
[23,23,22,23,24,25,0,23,25],
[28,23,27,24,25,23,27,0,30],
[25,21,25,23,22,23,25,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,21,24,23,22,29,26,29],
[24,0,22,20,24,26,30,29,30],
[29,28,0,26,23,24,29,25,32],
[26,30,24,0,25,26,29,30,31],
[27,26,27,25,0,28,32,30,33],
[28,24,26,24,22,0,30,34,32],
[21,20,21,21,18,20,0,22,24],
[24,21,25,20,20,16,28,0,24],
[21,20,18,19,17,18,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,16,16,34,26,0,8,26],
[18,0,0,18,18,18,18,18,18],
[34,50,0,18,34,26,18,26,18],
[34,32,32,0,50,42,16,24,34],
[16,32,16,0,0,42,0,8,0],
[24,32,24,8,8,0,8,8,8],
[50,32,32,34,50,42,0,8,26],
[42,32,24,26,42,42,42,0,34],
[24,32,32,16,50,42,24,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,21,22,17,22,20,22,25],
[27,0,23,21,25,18,22,25,28],
[29,27,0,24,20,24,24,24,28],
[28,29,26,0,23,27,30,26,29],
[33,25,30,27,0,28,28,25,27],
[28,32,26,23,22,0,24,25,26],
[30,28,26,20,22,26,0,26,24],
[28,25,26,24,25,25,24,0,25],
[25,22,22,21,23,24,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,23,33,31,24,28,33,31],
[10,0,14,18,13,15,17,25,18],
[27,36,0,35,32,21,30,37,28],
[17,32,15,0,15,11,29,31,22],
[19,37,18,35,0,11,19,28,18],
[26,35,29,39,39,0,25,40,33],
[22,33,20,21,31,25,0,31,33],
[17,25,13,19,22,10,19,0,23],
[19,32,22,28,32,17,17,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,22,28,23,28,21,28,29],
[25,0,24,25,26,28,25,23,29],
[28,26,0,25,27,25,24,23,30],
[22,25,25,0,26,25,26,22,28],
[27,24,23,24,0,26,23,27,28],
[22,22,25,25,24,0,23,22,25],
[29,25,26,24,27,27,0,27,26],
[22,27,27,28,23,28,23,0,21],
[21,21,20,22,22,25,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,28,22,21,21,23,23,25],
[29,0,25,26,26,25,31,31,29],
[22,25,0,26,25,25,27,26,25],
[28,24,24,0,23,23,34,29,29],
[29,24,25,27,0,24,24,24,25],
[29,25,25,27,26,0,30,27,27],
[27,19,23,16,26,20,0,24,23],
[27,19,24,21,26,23,26,0,21],
[25,21,25,21,25,23,27,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,12,1,16,0,22,23,22],
[41,0,16,18,18,4,24,19,31],
[38,34,0,22,28,25,28,33,50],
[49,32,28,0,37,21,27,31,46],
[34,32,22,13,0,12,25,23,34],
[50,46,25,29,38,0,40,39,47],
[28,26,22,23,25,10,0,17,36],
[27,31,17,19,27,11,33,0,43],
[28,19,0,4,16,3,14,7,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,19,28,35,32,26,27],
[23,0,20,20,26,26,26,20,23],
[23,30,0,30,29,24,24,27,24],
[31,30,20,0,30,25,23,35,28],
[22,24,21,20,0,23,24,18,19],
[15,24,26,25,27,0,25,29,31],
[18,24,26,27,26,25,0,29,25],
[24,30,23,15,32,21,21,0,28],
[23,27,26,22,31,19,25,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,24,23,23,21,17,25],
[27,0,25,27,24,23,28,20,30],
[24,25,0,27,21,22,21,21,26],
[26,23,23,0,21,19,25,21,28],
[27,26,29,29,0,26,27,24,26],
[27,27,28,31,24,0,26,27,31],
[29,22,29,25,23,24,0,25,28],
[33,30,29,29,26,23,25,0,30],
[25,20,24,22,24,19,22,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,28,19,18,23,29,29,11],
[36,0,36,23,30,30,40,36,30],
[22,14,0,19,14,23,21,23,11],
[31,27,31,0,24,23,31,29,25],
[32,20,36,26,0,26,36,26,28],
[27,20,27,27,24,0,27,34,20],
[21,10,29,19,14,23,0,36,4],
[21,14,27,21,24,16,14,0,14],
[39,20,39,25,22,30,46,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,23,23,23,21,29,31],
[25,0,22,24,22,25,25,25,23],
[25,28,0,26,25,28,26,31,26],
[27,26,24,0,24,22,30,26,27],
[27,28,25,26,0,25,23,29,29],
[27,25,22,28,25,0,20,30,32],
[29,25,24,20,27,30,0,26,23],
[21,25,19,24,21,20,24,0,24],
[19,27,24,23,21,18,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,24,34,28,29,23,32],
[25,0,30,26,32,27,31,27,25],
[21,20,0,22,20,19,16,17,24],
[26,24,28,0,28,30,31,32,36],
[16,18,30,22,0,17,17,16,28],
[22,23,31,20,33,0,25,26,28],
[21,19,34,19,33,25,0,22,27],
[27,23,33,18,34,24,28,0,25],
[18,25,26,14,22,22,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,32,23,28,26,19,32,26],
[23,0,30,21,27,30,29,20,25],
[18,20,0,23,23,22,24,23,23],
[27,29,27,0,31,30,21,26,31],
[22,23,27,19,0,22,25,29,27],
[24,20,28,20,28,0,25,22,32],
[31,21,26,29,25,25,0,22,32],
[18,30,27,24,21,28,28,0,28],
[24,25,27,19,23,18,18,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,24,19,21,28,24,26,23],
[34,0,29,24,28,29,26,24,25],
[26,21,0,24,20,28,25,21,19],
[31,26,26,0,31,33,32,27,23],
[29,22,30,19,0,33,27,24,21],
[22,21,22,17,17,0,21,21,19],
[26,24,25,18,23,29,0,20,19],
[24,26,29,23,26,29,30,0,19],
[27,25,31,27,29,31,31,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,25,35,31,26,30,21],
[18,0,32,30,26,23,21,21,27],
[18,18,0,17,24,20,21,21,17],
[25,20,33,0,20,23,22,21,15],
[15,24,26,30,0,27,24,28,16],
[19,27,30,27,23,0,20,24,20],
[24,29,29,28,26,30,0,23,29],
[20,29,29,29,22,26,27,0,22],
[29,23,33,35,34,30,21,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,26,25,21,20,30,27],
[28,0,29,31,29,27,30,24,26],
[28,21,0,28,27,22,24,25,24],
[24,19,22,0,23,27,18,25,24],
[25,21,23,27,0,23,21,24,28],
[29,23,28,23,27,0,23,28,27],
[30,20,26,32,29,27,0,26,29],
[20,26,25,25,26,22,24,0,26],
[23,24,26,26,22,23,21,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,22,32,37,24,29,28,22],
[21,0,20,29,21,21,28,23,19],
[28,30,0,34,28,27,31,25,23],
[18,21,16,0,22,18,19,19,17],
[13,29,22,28,0,16,24,25,21],
[26,29,23,32,34,0,30,28,25],
[21,22,19,31,26,20,0,24,18],
[22,27,25,31,25,22,26,0,25],
[28,31,27,33,29,25,32,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,28,25,27,27,26,29],
[24,0,30,23,29,30,29,30,25],
[22,20,0,25,23,23,21,21,24],
[22,27,25,0,23,30,26,24,26],
[25,21,27,27,0,25,24,20,21],
[23,20,27,20,25,0,26,24,22],
[23,21,29,24,26,24,0,24,22],
[24,20,29,26,30,26,26,0,23],
[21,25,26,24,29,28,28,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,28,35,25,22,25,29,17],
[29,0,31,37,27,21,19,34,22],
[22,19,0,23,7,14,15,25,7],
[15,13,27,0,5,17,0,13,12],
[25,23,43,45,0,23,27,30,37],
[28,29,36,33,27,0,30,33,14],
[25,31,35,50,23,20,0,30,21],
[21,16,25,37,20,17,20,0,23],
[33,28,43,38,13,36,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,25,23,19,26,23,25],
[27,0,25,32,28,22,28,25,21],
[27,25,0,33,17,23,30,29,23],
[25,18,17,0,18,19,25,26,22],
[27,22,33,32,0,25,25,31,25],
[31,28,27,31,25,0,31,24,26],
[24,22,20,25,25,19,0,23,23],
[27,25,21,24,19,26,27,0,27],
[25,29,27,28,25,24,27,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,17,14,27,20,17,19],
[33,0,25,27,21,32,28,25,26],
[34,25,0,23,20,33,25,26,28],
[33,23,27,0,19,31,25,18,23],
[36,29,30,31,0,34,26,25,26],
[23,18,17,19,16,0,24,16,17],
[30,22,25,25,24,26,0,23,26],
[33,25,24,32,25,34,27,0,20],
[31,24,22,27,24,33,24,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,26,23,23,25,22,25],
[26,0,28,29,23,24,24,24,27],
[26,22,0,27,24,24,30,26,27],
[24,21,23,0,20,24,24,21,24],
[27,27,26,30,0,23,24,23,26],
[27,26,26,26,27,0,29,25,29],
[25,26,20,26,26,21,0,25,26],
[28,26,24,29,27,25,25,0,27],
[25,23,23,26,24,21,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,20,26,23,29,25,24],
[25,0,22,26,22,25,27,24,25],
[26,28,0,23,26,28,28,25,24],
[30,24,27,0,32,28,29,23,25],
[24,28,24,18,0,26,28,23,21],
[27,25,22,22,24,0,24,22,24],
[21,23,22,21,22,26,0,22,19],
[25,26,25,27,27,28,28,0,29],
[26,25,26,25,29,26,31,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,18,27,17,18,15,24,22],
[20,0,13,27,17,14,4,11,27],
[32,37,0,27,32,26,19,28,38],
[23,23,23,0,27,19,19,19,34],
[33,33,18,23,0,6,11,33,27],
[32,36,24,31,44,0,36,36,43],
[35,46,31,31,39,14,0,41,47],
[26,39,22,31,17,14,9,0,29],
[28,23,12,16,23,7,3,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,26,30,28,24,30,19,25],
[28,0,22,27,29,17,26,22,19],
[24,28,0,29,28,27,30,30,27],
[20,23,21,0,22,16,20,20,17],
[22,21,22,28,0,20,30,28,25],
[26,33,23,34,30,0,33,28,23],
[20,24,20,30,20,17,0,27,16],
[31,28,20,30,22,22,23,0,25],
[25,31,23,33,25,27,34,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,3,3,28,28,4,28,7,8],
[47,0,28,46,32,47,47,47,25],
[47,22,0,42,31,29,47,25,22],
[22,4,8,0,11,11,26,11,22],
[22,18,19,39,0,22,26,22,22],
[46,3,21,39,28,0,42,4,21],
[22,3,3,24,24,8,0,3,7],
[43,3,25,39,28,46,47,0,22],
[42,25,28,28,28,29,43,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,32,28,19,29,28,27,29],
[26,0,31,25,30,21,23,21,27],
[18,19,0,32,28,17,27,21,29],
[22,25,18,0,22,23,25,23,26],
[31,20,22,28,0,23,21,23,36],
[21,29,33,27,27,0,28,29,35],
[22,27,23,25,29,22,0,23,33],
[23,29,29,27,27,21,27,0,32],
[21,23,21,24,14,15,17,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,27,20,32,14,34,22,30],
[40,0,26,29,41,22,37,21,21],
[23,24,0,16,24,24,32,24,20],
[30,21,34,0,33,35,31,33,41],
[18,9,26,17,0,19,27,21,30],
[36,28,26,15,31,0,32,21,20],
[16,13,18,19,23,18,0,13,20],
[28,29,26,17,29,29,37,0,29],
[20,29,30,9,20,30,30,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,31,19,35,16,23,17,23],
[25,0,30,18,38,23,26,22,24],
[19,20,0,19,32,16,19,19,17],
[31,32,31,0,39,25,34,27,26],
[15,12,18,11,0,16,24,19,16],
[34,27,34,25,34,0,24,22,36],
[27,24,31,16,26,26,0,20,22],
[33,28,31,23,31,28,30,0,29],
[27,26,33,24,34,14,28,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,35,31,28,35,30,34,24],
[21,0,35,31,32,33,36,37,25],
[15,15,0,25,24,27,24,28,17],
[19,19,25,0,32,21,27,35,23],
[22,18,26,18,0,33,29,29,22],
[15,17,23,29,17,0,25,32,25],
[20,14,26,23,21,25,0,28,19],
[16,13,22,15,21,18,22,0,22],
[26,25,33,27,28,25,31,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,22,27,27,21,23,21],
[25,0,29,21,28,30,24,27,18],
[25,21,0,21,29,29,22,21,23],
[28,29,29,0,36,35,25,37,28],
[23,22,21,14,0,21,17,20,18],
[23,20,21,15,29,0,14,24,24],
[29,26,28,25,33,36,0,30,22],
[27,23,29,13,30,26,20,0,27],
[29,32,27,22,32,26,28,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,35,26,28,23,20,35,31],
[22,0,25,24,27,33,16,28,31],
[15,25,0,18,20,18,16,20,27],
[24,26,32,0,29,28,26,30,32],
[22,23,30,21,0,32,19,26,27],
[27,17,32,22,18,0,10,27,26],
[30,34,34,24,31,40,0,36,31],
[15,22,30,20,24,23,14,0,28],
[19,19,23,18,23,24,19,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,27,22,24,23,19,20,22],
[19,0,24,19,20,18,20,17,19],
[23,26,0,21,20,26,19,16,19],
[28,31,29,0,21,26,20,24,27],
[26,30,30,29,0,27,32,25,26],
[27,32,24,24,23,0,19,21,15],
[31,30,31,30,18,31,0,27,27],
[30,33,34,26,25,29,23,0,19],
[28,31,31,23,24,35,23,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,34,33,25,31,35,38,31],
[26,0,33,32,31,32,30,32,25],
[16,17,0,28,20,28,24,21,23],
[17,18,22,0,19,26,25,21,23],
[25,19,30,31,0,31,33,24,24],
[19,18,22,24,19,0,26,24,26],
[15,20,26,25,17,24,0,21,20],
[12,18,29,29,26,26,29,0,21],
[19,25,27,27,26,24,30,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,23,20,21,23,19,16],
[24,0,18,27,14,19,33,14,11],
[25,32,0,44,30,21,33,22,26],
[27,23,6,0,16,12,28,12,13],
[30,36,20,34,0,13,31,13,8],
[29,31,29,38,37,0,34,21,19],
[27,17,17,22,19,16,0,6,11],
[31,36,28,38,37,29,44,0,18],
[34,39,24,37,42,31,39,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,23,27,25,32,30,31],
[23,0,33,22,15,19,34,30,21],
[23,17,0,25,18,24,40,30,34],
[27,28,25,0,16,19,32,24,32],
[23,35,32,34,0,29,39,30,46],
[25,31,26,31,21,0,28,27,37],
[18,16,10,18,11,22,0,18,27],
[20,20,20,26,20,23,32,0,31],
[19,29,16,18,4,13,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,32,21,32,22,28,32,34],
[23,0,9,18,34,20,15,26,19],
[18,41,0,19,36,17,15,32,24],
[29,32,31,0,33,22,23,31,37],
[18,16,14,17,0,20,10,26,15],
[28,30,33,28,30,0,24,30,30],
[22,35,35,27,40,26,0,35,37],
[18,24,18,19,24,20,15,0,20],
[16,31,26,13,35,20,13,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,19,25,32,24,28,33,25],
[29,0,24,33,36,36,29,38,28],
[31,26,0,24,33,35,29,34,26],
[25,17,26,0,31,38,25,32,21],
[18,14,17,19,0,25,26,26,23],
[26,14,15,12,25,0,21,18,20],
[22,21,21,25,24,29,0,28,17],
[17,12,16,18,24,32,22,0,17],
[25,22,24,29,27,30,33,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,22,21,28,32,25,22,27],
[22,0,17,27,29,34,28,20,26],
[28,33,0,28,32,32,24,28,28],
[29,23,22,0,24,29,24,19,22],
[22,21,18,26,0,33,20,17,30],
[18,16,18,21,17,0,15,16,26],
[25,22,26,26,30,35,0,20,30],
[28,30,22,31,33,34,30,0,30],
[23,24,22,28,20,24,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,26,22,26,21,21,24,19],
[23,0,27,20,25,22,23,27,21],
[24,23,0,23,24,19,21,25,15],
[28,30,27,0,27,22,25,29,21],
[24,25,26,23,0,17,24,31,22],
[29,28,31,28,33,0,24,31,26],
[29,27,29,25,26,26,0,32,22],
[26,23,25,21,19,19,18,0,17],
[31,29,35,29,28,24,28,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,27,33,21,26,37,31,30],
[28,0,25,23,32,29,33,33,28],
[23,25,0,15,27,15,27,33,31],
[17,27,35,0,17,15,22,35,30],
[29,18,23,33,0,32,27,36,27],
[24,21,35,35,18,0,32,35,30],
[13,17,23,28,23,18,0,34,16],
[19,17,17,15,14,15,16,0,20],
[20,22,19,20,23,20,34,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,19,25,25,24,30,24,27],
[23,0,19,23,19,15,26,26,20],
[31,31,0,30,24,22,34,28,28],
[25,27,20,0,20,23,26,22,24],
[25,31,26,30,0,28,33,26,31],
[26,35,28,27,22,0,33,30,28],
[20,24,16,24,17,17,0,20,23],
[26,24,22,28,24,20,30,0,27],
[23,30,22,26,19,22,27,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,37,28,30,25,28,33,25],
[19,0,19,13,18,15,33,20,14],
[13,31,0,21,17,18,29,35,19],
[22,37,29,0,22,22,28,29,22],
[20,32,33,28,0,16,27,31,20],
[25,35,32,28,34,0,41,42,28],
[22,17,21,22,23,9,0,20,11],
[17,30,15,21,19,8,30,0,12],
[25,36,31,28,30,22,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,31,33,20,29,22,28,26],
[28,0,38,36,25,37,27,26,34],
[19,12,0,29,14,32,23,24,13],
[17,14,21,0,17,35,26,26,34],
[30,25,36,33,0,26,23,33,28],
[21,13,18,15,24,0,20,30,21],
[28,23,27,24,27,30,0,29,28],
[22,24,26,24,17,20,21,0,20],
[24,16,37,16,22,29,22,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,30,26,29,24,13,21,16],
[32,0,19,15,11,14,23,14,14],
[20,31,0,8,16,14,17,8,20],
[24,35,42,0,41,30,30,33,33],
[21,39,34,9,0,9,18,10,28],
[26,36,36,20,41,0,23,15,28],
[37,27,33,20,32,27,0,21,16],
[29,36,42,17,40,35,29,0,42],
[34,36,30,17,22,22,34,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,25,23,8,19,16,14,24],
[18,0,16,23,14,25,21,19,9],
[25,34,0,16,9,27,18,14,10],
[27,27,34,0,15,26,9,13,26],
[42,36,41,35,0,43,24,28,34],
[31,25,23,24,7,0,16,10,16],
[34,29,32,41,26,34,0,5,19],
[36,31,36,37,22,40,45,0,23],
[26,41,40,24,16,34,31,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,29,29,31,29,24,24,32],
[27,0,31,27,32,27,31,28,25],
[21,19,0,23,28,23,24,20,30],
[21,23,27,0,25,24,28,26,28],
[19,18,22,25,0,20,21,23,24],
[21,23,27,26,30,0,24,23,28],
[26,19,26,22,29,26,0,23,28],
[26,22,30,24,27,27,27,0,27],
[18,25,20,22,26,22,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,20,26,40,27,18,21,36],
[27,0,25,24,34,33,29,26,32],
[30,25,0,25,44,19,26,34,45],
[24,26,25,0,38,24,24,29,44],
[10,16,6,12,0,10,14,17,35],
[23,17,31,26,40,0,23,33,37],
[32,21,24,26,36,27,0,32,26],
[29,24,16,21,33,17,18,0,37],
[14,18,5,6,15,13,24,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,20,28,31,18,28,10],
[35,0,35,25,36,29,26,35,28],
[32,15,0,15,34,22,18,29,17],
[30,25,35,0,45,24,26,32,27],
[22,14,16,5,0,12,15,20,9],
[19,21,28,26,38,0,31,37,12],
[32,24,32,24,35,19,0,21,25],
[22,15,21,18,30,13,29,0,16],
[40,22,33,23,41,38,25,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,22,34,26,29,28,29,23],
[20,0,14,22,20,18,21,27,20],
[28,36,0,37,31,34,25,31,35],
[16,28,13,0,24,20,21,24,28],
[24,30,19,26,0,27,26,29,23],
[21,32,16,30,23,0,28,26,29],
[22,29,25,29,24,22,0,32,29],
[21,23,19,26,21,24,18,0,26],
[27,30,15,22,27,21,21,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,23,23,20,20,16,23],
[31,0,25,31,29,22,24,31,26],
[36,25,0,35,37,32,29,35,34],
[27,19,15,0,20,12,19,20,15],
[27,21,13,30,0,21,25,24,23],
[30,28,18,38,29,0,25,28,26],
[30,26,21,31,25,25,0,31,24],
[34,19,15,30,26,22,19,0,20],
[27,24,16,35,27,24,26,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,29,22,27,19,26,24],
[26,0,28,24,24,33,32,28,29],
[22,22,0,24,24,36,26,23,20],
[21,26,26,0,22,28,26,17,23],
[28,26,26,28,0,27,29,25,24],
[23,17,14,22,23,0,24,22,17],
[31,18,24,24,21,26,0,20,20],
[24,22,27,33,25,28,30,0,24],
[26,21,30,27,26,33,30,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,26,24,27,14,24,28,25],
[31,0,36,30,25,29,28,26,30],
[24,14,0,28,23,20,19,22,25],
[26,20,22,0,27,20,28,29,27],
[23,25,27,23,0,27,30,23,29],
[36,21,30,30,23,0,27,24,30],
[26,22,31,22,20,23,0,25,27],
[22,24,28,21,27,26,25,0,25],
[25,20,25,23,21,20,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,24,27,27,31,24,27],
[25,0,25,25,29,30,31,26,27],
[27,25,0,19,35,33,31,27,30],
[26,25,31,0,29,29,30,27,27],
[23,21,15,21,0,19,22,24,14],
[23,20,17,21,31,0,29,17,26],
[19,19,19,20,28,21,0,22,21],
[26,24,23,23,26,33,28,0,26],
[23,23,20,23,36,24,29,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,26,25,15,22,21,21,17],
[42,0,27,30,21,32,29,38,25],
[24,23,0,24,19,36,17,17,24],
[25,20,26,0,19,25,26,24,32],
[35,29,31,31,0,30,22,33,36],
[28,18,14,25,20,0,13,25,28],
[29,21,33,24,28,37,0,35,20],
[29,12,33,26,17,25,15,0,31],
[33,25,26,18,14,22,30,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,24,29,22,22,22,22],
[30,0,32,33,33,31,24,26,28],
[29,18,0,16,31,23,30,26,22],
[26,17,34,0,34,26,25,25,25],
[21,17,19,16,0,21,24,25,18],
[28,19,27,24,29,0,24,24,23],
[28,26,20,25,26,26,0,33,19],
[28,24,24,25,25,26,17,0,22],
[28,22,28,25,32,27,31,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,25,28,21,28,27,26],
[26,0,24,22,23,27,25,27,24],
[25,26,0,24,22,25,20,29,29],
[25,28,26,0,31,25,28,28,27],
[22,27,28,19,0,28,33,24,34],
[29,23,25,25,22,0,27,26,29],
[22,25,30,22,17,23,0,31,30],
[23,23,21,22,26,24,19,0,25],
[24,26,21,23,16,21,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,17,21,18,21,17,22,28],
[31,0,24,21,24,20,17,15,24],
[33,26,0,25,29,23,22,25,34],
[29,29,25,0,24,21,26,26,25],
[32,26,21,26,0,23,19,23,28],
[29,30,27,29,27,0,25,24,30],
[33,33,28,24,31,25,0,27,29],
[28,35,25,24,27,26,23,0,25],
[22,26,16,25,22,20,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,25,18,23,26,30,23,29],
[27,0,31,31,26,24,27,27,26],
[25,19,0,27,22,23,21,24,30],
[32,19,23,0,18,22,24,25,29],
[27,24,28,32,0,25,22,32,29],
[24,26,27,28,25,0,29,26,27],
[20,23,29,26,28,21,0,23,25],
[27,23,26,25,18,24,27,0,28],
[21,24,20,21,21,23,25,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,17,21,21,24,21,19,26],
[26,0,24,26,21,33,25,32,26],
[33,26,0,26,28,33,25,28,27],
[29,24,24,0,21,27,22,26,21],
[29,29,22,29,0,29,25,28,26],
[26,17,17,23,21,0,20,20,25],
[29,25,25,28,25,30,0,23,28],
[31,18,22,24,22,30,27,0,28],
[24,24,23,29,24,25,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,33,17,34,29,22,21,16],
[24,0,19,20,23,18,31,17,15],
[17,31,0,19,23,20,26,18,18],
[33,30,31,0,34,25,28,32,27],
[16,27,27,16,0,23,17,9,14],
[21,32,30,25,27,0,33,17,19],
[28,19,24,22,33,17,0,14,21],
[29,33,32,18,41,33,36,0,33],
[34,35,32,23,36,31,29,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,19,18,17,20,16,23],
[21,0,15,18,20,17,19,20,23],
[24,35,0,27,23,19,22,20,28],
[31,32,23,0,22,22,26,20,25],
[32,30,27,28,0,25,30,22,26],
[33,33,31,28,25,0,29,25,27],
[30,31,28,24,20,21,0,22,26],
[34,30,30,30,28,25,28,0,21],
[27,27,22,25,24,23,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,33,28,32,29,29,24],
[25,0,28,31,27,35,26,28,24],
[24,22,0,31,21,33,28,27,22],
[17,19,19,0,15,27,30,25,23],
[22,23,29,35,0,28,27,31,27],
[18,15,17,23,22,0,24,21,14],
[21,24,22,20,23,26,0,22,20],
[21,22,23,25,19,29,28,0,20],
[26,26,28,27,23,36,30,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,16,22,26,22,22,18],
[25,0,21,19,27,22,22,20,20],
[29,29,0,19,31,23,21,24,21],
[34,31,31,0,30,26,25,32,28],
[28,23,19,20,0,24,19,23,20],
[24,28,27,24,26,0,21,25,21],
[28,28,29,25,31,29,0,32,25],
[28,30,26,18,27,25,18,0,21],
[32,30,29,22,30,29,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,21,25,19,26,22,22,26],
[24,0,18,24,21,20,19,19,24],
[29,32,0,25,25,24,23,22,25],
[25,26,25,0,20,22,18,21,23],
[31,29,25,30,0,28,22,19,25],
[24,30,26,28,22,0,21,21,22],
[28,31,27,32,28,29,0,27,24],
[28,31,28,29,31,29,23,0,27],
[24,26,25,27,25,28,26,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,25,29,14,24,20,21,20],
[32,0,35,34,21,34,27,39,38],
[25,15,0,35,28,22,21,29,31],
[21,16,15,0,23,24,14,19,20],
[36,29,22,27,0,23,26,29,33],
[26,16,28,26,27,0,21,21,23],
[30,23,29,36,24,29,0,31,24],
[29,11,21,31,21,29,19,0,24],
[30,12,19,30,17,27,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,26,27,24,27,32,30,22],
[30,0,25,23,20,21,23,28,26],
[24,25,0,29,24,24,28,32,19],
[23,27,21,0,28,20,32,30,22],
[26,30,26,22,0,24,28,30,20],
[23,29,26,30,26,0,30,38,19],
[18,27,22,18,22,20,0,22,16],
[20,22,18,20,20,12,28,0,15],
[28,24,31,28,30,31,34,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,12,20,19,14,31,31,18],
[14,0,10,18,18,6,27,23,10],
[38,40,0,24,28,13,38,20,16],
[30,32,26,0,23,29,30,28,15],
[31,32,22,27,0,6,29,23,19],
[36,44,37,21,44,0,30,32,35],
[19,23,12,20,21,20,0,19,6],
[19,27,30,22,27,18,31,0,18],
[32,40,34,35,31,15,44,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,23,23,20,26,23,25,25],
[18,0,24,18,22,21,26,18,19],
[27,26,0,24,28,29,21,19,25],
[27,32,26,0,26,22,20,22,27],
[30,28,22,24,0,23,20,24,18],
[24,29,21,28,27,0,23,20,22],
[27,24,29,30,30,27,0,24,29],
[25,32,31,28,26,30,26,0,30],
[25,31,25,23,32,28,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,25,29,23,33,21,31,31],
[27,0,25,27,33,27,29,35,29],
[25,25,0,31,29,24,20,26,21],
[21,23,19,0,22,26,20,25,22],
[27,17,21,28,0,24,21,23,22],
[17,23,26,24,26,0,17,30,29],
[29,21,30,30,29,33,0,36,28],
[19,15,24,25,27,20,14,0,21],
[19,21,29,28,28,21,22,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,30,31,0,19,39,20,19],
[31,0,31,31,20,20,20,20,20],
[20,19,0,20,0,20,20,20,39],
[19,19,30,0,19,19,19,39,19],
[50,30,50,31,0,39,39,20,39],
[31,30,30,31,11,0,39,20,50],
[11,30,30,31,11,11,0,31,30],
[30,30,30,11,30,30,19,0,30],
[31,30,11,31,11,0,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,28,18,23,29,24,31,28],
[22,0,29,12,26,28,20,21,24],
[22,21,0,16,27,27,17,25,26],
[32,38,34,0,28,34,35,26,25],
[27,24,23,22,0,36,27,26,20],
[21,22,23,16,14,0,23,15,17],
[26,30,33,15,23,27,0,30,29],
[19,29,25,24,24,35,20,0,29],
[22,26,24,25,30,33,21,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,24,24,21,25,22,22],
[28,0,26,25,21,28,24,26,21],
[25,24,0,22,25,25,27,25,23],
[26,25,28,0,25,26,28,23,23],
[26,29,25,25,0,24,21,25,26],
[29,22,25,24,26,0,25,26,26],
[25,26,23,22,29,25,0,19,23],
[28,24,25,27,25,24,31,0,22],
[28,29,27,27,24,24,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,29,22,39,22,22,22],
[28,0,33,40,33,39,33,22,32],
[28,17,0,40,40,39,40,29,39],
[21,10,10,0,43,17,43,10,32],
[28,17,10,7,0,17,17,7,32],
[11,11,11,33,33,0,33,33,33],
[28,17,10,7,33,17,0,7,32],
[28,28,21,40,43,17,43,0,32],
[28,18,11,18,18,17,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,21,19,16,20,17,14],
[35,0,25,39,27,28,27,29,26],
[28,25,0,33,24,20,32,28,27],
[29,11,17,0,22,16,13,21,20],
[31,23,26,28,0,25,23,29,24],
[34,22,30,34,25,0,36,33,33],
[30,23,18,37,27,14,0,22,18],
[33,21,22,29,21,17,28,0,19],
[36,24,23,30,26,17,32,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,25,27,27,23,40,33,27],
[31,0,27,30,20,23,28,28,21],
[25,23,0,39,31,37,28,42,23],
[23,20,11,0,24,29,30,29,26],
[23,30,19,26,0,27,27,26,11],
[27,27,13,21,23,0,40,22,13],
[10,22,22,20,23,10,0,21,10],
[17,22,8,21,24,28,29,0,15],
[23,29,27,24,39,37,40,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,26,24,20,27,23,31],
[29,0,28,25,26,31,27,31,29],
[25,22,0,29,29,27,31,26,26],
[24,25,21,0,25,22,20,21,22],
[26,24,21,25,0,20,28,24,27],
[30,19,23,28,30,0,25,29,32],
[23,23,19,30,22,25,0,25,25],
[27,19,24,29,26,21,25,0,25],
[19,21,24,28,23,18,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,24,23,23,19,17,27,22],
[31,0,28,27,26,30,23,32,25],
[26,22,0,27,22,22,22,31,29],
[27,23,23,0,18,21,21,26,28],
[27,24,28,32,0,25,25,30,31],
[31,20,28,29,25,0,30,29,28],
[33,27,28,29,25,20,0,29,32],
[23,18,19,24,20,21,21,0,22],
[28,25,21,22,19,22,18,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,30,25,30,36,30,27,28],
[9,0,22,17,20,33,22,13,21],
[20,28,0,18,29,34,24,23,23],
[25,33,32,0,33,41,24,37,35],
[20,30,21,17,0,19,29,15,23],
[14,17,16,9,31,0,21,24,10],
[20,28,26,26,21,29,0,23,21],
[23,37,27,13,35,26,27,0,9],
[22,29,27,15,27,40,29,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,33,33,24,42,28,38,30],
[1,0,15,1,18,17,8,22,12],
[17,35,0,16,25,28,31,40,23],
[17,49,34,0,25,38,32,46,38],
[26,32,25,25,0,36,28,33,32],
[8,33,22,12,14,0,12,30,29],
[22,42,19,18,22,38,0,45,38],
[12,28,10,4,17,20,5,0,13],
[20,38,27,12,18,21,12,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,22,32,22,29,29,25,24],
[17,0,14,22,14,21,17,18,19],
[28,36,0,33,27,35,26,36,25],
[18,28,17,0,24,27,20,20,25],
[28,36,23,26,0,34,25,28,21],
[21,29,15,23,16,0,21,14,17],
[21,33,24,30,25,29,0,29,24],
[25,32,14,30,22,36,21,0,24],
[26,31,25,25,29,33,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,28,28,30,23,16,21],
[26,0,28,31,21,27,24,19,24],
[26,22,0,29,21,27,24,25,27],
[22,19,21,0,20,25,28,21,22],
[22,29,29,30,0,30,20,19,25],
[20,23,23,25,20,0,21,22,25],
[27,26,26,22,30,29,0,20,21],
[34,31,25,29,31,28,30,0,29],
[29,26,23,28,25,25,29,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,24,26,32,30,23,32,24],
[21,0,25,24,33,27,21,30,29],
[26,25,0,26,34,32,28,27,30],
[24,26,24,0,33,25,25,27,23],
[18,17,16,17,0,23,19,20,22],
[20,23,18,25,27,0,20,28,26],
[27,29,22,25,31,30,0,28,30],
[18,20,23,23,30,22,22,0,20],
[26,21,20,27,28,24,20,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,26,28,25,31,30,25,28],
[15,0,16,19,20,20,21,19,15],
[24,34,0,24,25,28,25,24,23],
[22,31,26,0,28,29,30,26,26],
[25,30,25,22,0,29,25,24,26],
[19,30,22,21,21,0,27,24,23],
[20,29,25,20,25,23,0,27,28],
[25,31,26,24,26,26,23,0,23],
[22,35,27,24,24,27,22,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,26,28,17,24,30,24,28],
[28,0,28,26,28,21,28,29,28],
[24,22,0,21,16,22,26,18,26],
[22,24,29,0,25,25,24,24,23],
[33,22,34,25,0,25,30,29,24],
[26,29,28,25,25,0,32,28,29],
[20,22,24,26,20,18,0,24,23],
[26,21,32,26,21,22,26,0,22],
[22,22,24,27,26,21,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,31,25,27,27,25,23,25],
[28,0,19,22,20,19,12,22,14],
[19,31,0,23,29,29,22,28,27],
[25,28,27,0,26,31,33,30,27],
[23,30,21,24,0,34,27,21,31],
[23,31,21,19,16,0,27,19,29],
[25,38,28,17,23,23,0,22,14],
[27,28,22,20,29,31,28,0,23],
[25,36,23,23,19,21,36,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,22,25,27,28,24,10,33],
[23,0,29,22,25,27,29,19,23],
[28,21,0,19,23,29,22,22,25],
[25,28,31,0,26,35,32,27,30],
[23,25,27,24,0,30,24,22,33],
[22,23,21,15,20,0,21,10,30],
[26,21,28,18,26,29,0,24,29],
[40,31,28,23,28,40,26,0,32],
[17,27,25,20,17,20,21,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,29,29,25,25,30,27,31],
[16,0,26,24,15,19,23,20,24],
[21,24,0,20,22,20,23,27,22],
[21,26,30,0,22,23,27,32,28],
[25,35,28,28,0,30,32,37,32],
[25,31,30,27,20,0,31,34,33],
[20,27,27,23,18,19,0,28,26],
[23,30,23,18,13,16,22,0,24],
[19,26,28,22,18,17,24,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,27,32,25,27,22,28],
[25,0,25,21,26,19,25,19,26],
[25,25,0,20,28,22,28,23,24],
[23,29,30,0,29,23,31,22,26],
[18,24,22,21,0,19,27,23,23],
[25,31,28,27,31,0,33,29,28],
[23,25,22,19,23,17,0,22,23],
[28,31,27,28,27,21,28,0,25],
[22,24,26,24,27,22,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,27,26,25,24,23,30,29],
[21,0,24,27,21,25,23,31,28],
[23,26,0,26,16,20,23,26,30],
[24,23,24,0,23,21,19,29,31],
[25,29,34,27,0,27,29,28,33],
[26,25,30,29,23,0,25,33,29],
[27,27,27,31,21,25,0,28,34],
[20,19,24,21,22,17,22,0,29],
[21,22,20,19,17,21,16,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,19,16,24,21,26,25],
[30,0,28,29,17,33,22,24,34],
[29,22,0,29,22,17,22,23,24],
[31,21,21,0,15,27,29,24,33],
[34,33,28,35,0,31,27,24,36],
[26,17,33,23,19,0,21,26,28],
[29,28,28,21,23,29,0,23,33],
[24,26,27,26,26,24,27,0,29],
[25,16,26,17,14,22,17,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,24,31,25,24,22,24],
[24,0,27,21,26,21,23,23,20],
[27,23,0,24,33,23,29,28,24],
[26,29,26,0,28,25,33,25,24],
[19,24,17,22,0,17,26,22,19],
[25,29,27,25,33,0,25,28,27],
[26,27,21,17,24,25,0,22,21],
[28,27,22,25,28,22,28,0,22],
[26,30,26,26,31,23,29,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,13,17,5,27,28,23,15],
[23,0,9,17,15,17,27,20,8],
[37,41,0,27,17,29,37,20,28],
[33,33,23,0,20,27,35,24,20],
[45,35,33,30,0,39,44,43,18],
[23,33,21,23,11,0,32,29,19],
[22,23,13,15,6,18,0,24,10],
[27,30,30,26,7,21,26,0,18],
[35,42,22,30,32,31,40,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,31,29,29,27,28,25],
[26,0,22,33,18,23,24,25,25],
[25,28,0,32,21,29,22,28,26],
[19,17,18,0,18,25,19,25,26],
[21,32,29,32,0,32,30,26,28],
[21,27,21,25,18,0,25,25,29],
[23,26,28,31,20,25,0,35,31],
[22,25,22,25,24,25,15,0,18],
[25,25,24,24,22,21,19,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,25,24,32,39,27,30,27],
[33,0,30,27,29,35,25,27,27],
[25,20,0,22,29,28,29,21,30],
[26,23,28,0,39,27,21,27,22],
[18,21,21,11,0,21,18,19,24],
[11,15,22,23,29,0,26,32,18],
[23,25,21,29,32,24,0,26,31],
[20,23,29,23,31,18,24,0,24],
[23,23,20,28,26,32,19,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,27,20,21,19,27,20,28],
[30,0,28,23,23,18,22,27,32],
[23,22,0,19,16,14,19,19,26],
[30,27,31,0,23,27,26,28,34],
[29,27,34,27,0,20,25,25,27],
[31,32,36,23,30,0,28,34,32],
[23,28,31,24,25,22,0,28,32],
[30,23,31,22,25,16,22,0,28],
[22,18,24,16,23,18,18,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,21,27,22,25,25,22,24],
[20,0,18,20,18,18,19,23,18],
[29,32,0,29,25,26,27,26,27],
[23,30,21,0,23,23,19,18,24],
[28,32,25,27,0,24,27,23,26],
[25,32,24,27,26,0,22,20,24],
[25,31,23,31,23,28,0,22,27],
[28,27,24,32,27,30,28,0,28],
[26,32,23,26,24,26,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,21,24,26,25,25,23,32],
[34,0,26,38,27,25,35,28,33],
[29,24,0,25,30,23,23,29,33],
[26,12,25,0,30,16,27,28,35],
[24,23,20,20,0,21,24,19,18],
[25,25,27,34,29,0,32,32,36],
[25,15,27,23,26,18,0,21,28],
[27,22,21,22,31,18,29,0,26],
[18,17,17,15,32,14,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,14,33,34,13,21,4,13],
[27,0,27,39,37,26,27,17,36],
[36,23,0,39,40,49,38,20,23],
[17,11,11,0,21,11,12,1,10],
[16,13,10,29,0,10,27,1,11],
[37,24,1,39,40,0,38,14,23],
[29,23,12,38,23,12,0,12,12],
[46,33,30,49,49,36,38,0,20],
[37,14,27,40,39,27,38,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,34,30,31,30,28,25,35],
[7,0,17,12,24,17,23,19,23],
[16,33,0,16,28,27,29,19,29],
[20,38,34,0,35,28,27,18,40],
[19,26,22,15,0,26,26,18,31],
[20,33,23,22,24,0,30,24,28],
[22,27,21,23,24,20,0,22,25],
[25,31,31,32,32,26,28,0,30],
[15,27,21,10,19,22,25,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,25,14,25,23,24,19,29],
[31,0,31,28,28,30,25,24,33],
[25,19,0,15,37,20,25,16,30],
[36,22,35,0,40,29,33,32,35],
[25,22,13,10,0,22,17,19,18],
[27,20,30,21,28,0,27,26,25],
[26,25,25,17,33,23,0,21,29],
[31,26,34,18,31,24,29,0,30],
[21,17,20,15,32,25,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,12,22,24,22,16,22,21],
[38,0,34,41,24,29,25,31,26],
[38,16,0,45,27,27,27,33,31],
[28,9,5,0,15,16,14,14,11],
[26,26,23,35,0,23,27,27,18],
[28,21,23,34,27,0,22,25,19],
[34,25,23,36,23,28,0,31,27],
[28,19,17,36,23,25,19,0,22],
[29,24,19,39,32,31,23,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,21,25,23,18,31,23,19],
[26,0,22,24,24,18,34,26,25],
[29,28,0,28,27,22,38,26,26],
[25,26,22,0,23,21,28,26,23],
[27,26,23,27,0,29,34,23,27],
[32,32,28,29,21,0,33,27,25],
[19,16,12,22,16,17,0,14,18],
[27,24,24,24,27,23,36,0,22],
[31,25,24,27,23,25,32,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,23,28,27,26,20,21,20],
[30,0,29,28,29,27,21,19,18],
[27,21,0,28,24,23,25,28,23],
[22,22,22,0,26,20,18,16,18],
[23,21,26,24,0,22,23,24,21],
[24,23,27,30,28,0,26,25,19],
[30,29,25,32,27,24,0,28,27],
[29,31,22,34,26,25,22,0,19],
[30,32,27,32,29,31,23,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,19,23,33,31,26,23,28],
[21,0,19,27,25,28,30,24,28],
[31,31,0,28,30,32,28,25,31],
[27,23,22,0,30,26,27,20,26],
[17,25,20,20,0,22,25,19,30],
[19,22,18,24,28,0,28,20,22],
[24,20,22,23,25,22,0,19,25],
[27,26,25,30,31,30,31,0,33],
[22,22,19,24,20,28,25,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,32,27,37,34,27,27,25],
[19,0,23,15,22,22,24,15,21],
[18,27,0,18,28,23,33,17,29],
[23,35,32,0,34,35,34,30,27],
[13,28,22,16,0,23,30,16,16],
[16,28,27,15,27,0,31,19,22],
[23,26,17,16,20,19,0,16,22],
[23,35,33,20,34,31,34,0,29],
[25,29,21,23,34,28,28,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,17,27,24,8,26,18,34],
[25,0,8,26,30,8,24,22,32],
[33,42,0,38,30,25,35,38,42],
[23,24,12,0,26,5,22,18,24],
[26,20,20,24,0,7,30,15,29],
[42,42,25,45,43,0,39,35,41],
[24,26,15,28,20,11,0,18,24],
[32,28,12,32,35,15,32,0,33],
[16,18,8,26,21,9,26,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,29,35,25,50,14,14,18],
[15,0,15,26,11,27,23,23,16],
[21,35,0,35,24,50,19,25,28],
[15,24,15,0,17,27,23,23,22],
[25,39,26,33,0,33,33,33,32],
[0,23,0,23,17,0,8,14,6],
[36,27,31,27,17,42,0,17,27],
[36,27,25,27,17,36,33,0,27],
[32,34,22,28,18,44,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,28,21,20,19,26,21],
[23,0,27,26,33,23,20,29,24],
[23,23,0,21,28,19,17,26,21],
[22,24,29,0,28,18,19,24,20],
[29,17,22,22,0,19,16,22,20],
[30,27,31,32,31,0,25,31,28],
[31,30,33,31,34,25,0,33,29],
[24,21,24,26,28,19,17,0,20],
[29,26,29,30,30,22,21,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,24,25,27,26,15,22,14],
[33,0,31,20,25,29,18,18,17],
[26,19,0,16,22,25,12,17,12],
[25,30,34,0,27,25,15,22,16],
[23,25,28,23,0,30,21,20,15],
[24,21,25,25,20,0,22,16,11],
[35,32,38,35,29,28,0,26,15],
[28,32,33,28,30,34,24,0,26],
[36,33,38,34,35,39,35,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,25,26,23,23,22,25,21],
[33,0,30,29,27,28,21,23,26],
[25,20,0,19,24,24,24,23,26],
[24,21,31,0,22,24,20,23,24],
[27,23,26,28,0,21,27,23,23],
[27,22,26,26,29,0,28,21,23],
[28,29,26,30,23,22,0,28,25],
[25,27,27,27,27,29,22,0,24],
[29,24,24,26,27,27,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,26,34,27,25,23,29,34],
[23,0,21,36,23,21,28,29,29],
[24,29,0,34,28,28,40,32,39],
[16,14,16,0,24,20,21,24,23],
[23,27,22,26,0,29,31,26,31],
[25,29,22,30,21,0,28,27,30],
[27,22,10,29,19,22,0,21,24],
[21,21,18,26,24,23,29,0,23],
[16,21,11,27,19,20,26,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,26,29,30,34,25,32,27],
[19,0,22,32,23,26,23,21,26],
[24,28,0,23,26,28,26,26,28],
[21,18,27,0,24,23,16,29,25],
[20,27,24,26,0,25,23,19,27],
[16,24,22,27,25,0,24,29,26],
[25,27,24,34,27,26,0,28,23],
[18,29,24,21,31,21,22,0,22],
[23,24,22,25,23,24,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,43,35,30,35,30,29,12],
[30,0,30,30,30,22,30,30,30],
[7,20,0,35,30,8,8,19,12],
[15,20,15,0,18,23,10,10,12],
[20,20,20,32,0,12,20,20,24],
[15,28,42,27,38,0,30,37,20],
[20,20,42,40,30,20,0,24,25],
[21,20,31,40,30,13,26,0,25],
[38,20,38,38,26,30,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,17,16,23,9,9,22,13],
[28,0,15,16,22,11,23,21,15],
[33,35,0,22,31,10,25,19,22],
[34,34,28,0,31,26,21,28,28],
[27,28,19,19,0,16,31,25,22],
[41,39,40,24,34,0,22,31,23],
[41,27,25,29,19,28,0,26,19],
[28,29,31,22,25,19,24,0,27],
[37,35,28,22,28,27,31,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,27,30,25,28,21,25,26],
[20,0,24,22,18,24,25,24,27],
[23,26,0,27,21,29,23,26,23],
[20,28,23,0,21,23,21,22,21],
[25,32,29,29,0,30,27,23,28],
[22,26,21,27,20,0,19,22,23],
[29,25,27,29,23,31,0,27,28],
[25,26,24,28,27,28,23,0,27],
[24,23,27,29,22,27,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,22,28,23,28,31,30,24],
[22,0,10,21,24,28,27,24,16],
[28,40,0,18,29,28,27,35,21],
[22,29,32,0,34,33,24,22,30],
[27,26,21,16,0,29,13,19,10],
[22,22,22,17,21,0,27,24,26],
[19,23,23,26,37,23,0,21,28],
[20,26,15,28,31,26,29,0,26],
[26,34,29,20,40,24,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,25,26,17,32,20,23,23],
[32,0,22,25,30,30,24,28,23],
[25,28,0,25,28,33,17,22,27],
[24,25,25,0,23,32,25,26,17],
[33,20,22,27,0,30,20,19,26],
[18,20,17,18,20,0,14,17,14],
[30,26,33,25,30,36,0,22,26],
[27,22,28,24,31,33,28,0,25],
[27,27,23,33,24,36,24,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,21,16,22,20,19,23],
[29,0,27,27,23,26,27,20,22],
[30,23,0,24,26,21,26,25,27],
[29,23,26,0,21,22,31,27,29],
[34,27,24,29,0,22,27,29,29],
[28,24,29,28,28,0,24,24,29],
[30,23,24,19,23,26,0,22,25],
[31,30,25,23,21,26,28,0,28],
[27,28,23,21,21,21,25,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,26,28,23,29,24,23],
[28,0,26,28,25,29,31,29,29],
[27,24,0,28,24,27,32,26,21],
[24,22,22,0,23,30,28,26,23],
[22,25,26,27,0,23,28,29,23],
[27,21,23,20,27,0,24,25,25],
[21,19,18,22,22,26,0,19,19],
[26,21,24,24,21,25,31,0,23],
[27,21,29,27,27,25,31,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,23,19,27,26,24,29,23],
[23,0,22,27,32,25,22,22,23],
[27,28,0,24,30,24,27,28,25],
[31,23,26,0,30,24,24,26,25],
[23,18,20,20,0,21,15,18,20],
[24,25,26,26,29,0,22,22,24],
[26,28,23,26,35,28,0,22,28],
[21,28,22,24,32,28,28,0,28],
[27,27,25,25,30,26,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,14,23,24,15,21,23,21],
[37,0,26,26,23,20,32,27,25],
[36,24,0,20,25,19,24,23,20],
[27,24,30,0,26,16,24,27,24],
[26,27,25,24,0,21,26,18,24],
[35,30,31,34,29,0,25,29,29],
[29,18,26,26,24,25,0,23,22],
[27,23,27,23,32,21,27,0,28],
[29,25,30,26,26,21,28,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,37,32,34,30,30,30,22],
[21,0,26,26,23,29,28,20,21],
[13,24,0,22,24,21,13,17,18],
[18,24,28,0,24,17,22,20,22],
[16,27,26,26,0,11,27,20,25],
[20,21,29,33,39,0,29,15,30],
[20,22,37,28,23,21,0,25,23],
[20,30,33,30,30,35,25,0,24],
[28,29,32,28,25,20,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,23,22,28,31,27,24],
[24,0,24,24,29,27,33,28,25],
[25,26,0,24,26,20,28,25,24],
[27,26,26,0,32,29,27,23,22],
[28,21,24,18,0,29,27,27,23],
[22,23,30,21,21,0,22,25,22],
[19,17,22,23,23,28,0,28,23],
[23,22,25,27,23,25,22,0,20],
[26,25,26,28,27,28,27,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,33,30,26,30,24,29,22],
[22,0,24,25,25,27,26,22,26],
[17,26,0,21,24,32,25,26,27],
[20,25,29,0,26,27,20,24,24],
[24,25,26,24,0,27,22,23,22],
[20,23,18,23,23,0,20,18,23],
[26,24,25,30,28,30,0,28,26],
[21,28,24,26,27,32,22,0,22],
[28,24,23,26,28,27,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,1,28,15,32,28,21,21,19],
[49,0,38,41,32,33,36,22,43],
[22,12,0,25,24,30,30,17,15],
[35,9,25,0,32,27,28,17,36],
[18,18,26,18,0,33,21,15,31],
[22,17,20,23,17,0,18,13,19],
[29,14,20,22,29,32,0,25,21],
[29,28,33,33,35,37,25,0,37],
[31,7,35,14,19,31,29,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,27,23,26,24,28,26,23],
[27,0,24,29,24,25,31,34,27],
[23,26,0,25,25,29,29,29,22],
[27,21,25,0,22,22,24,30,32],
[24,26,25,28,0,23,31,29,26],
[26,25,21,28,27,0,26,28,24],
[22,19,21,26,19,24,0,24,24],
[24,16,21,20,21,22,26,0,18],
[27,23,28,18,24,26,26,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,39,26,23,21,24,34],
[24,0,24,33,23,23,17,16,27],
[27,26,0,38,28,27,24,30,32],
[11,17,12,0,18,17,7,12,23],
[24,27,22,32,0,29,22,24,24],
[27,27,23,33,21,0,17,17,30],
[29,33,26,43,28,33,0,23,33],
[26,34,20,38,26,33,27,0,33],
[16,23,18,27,26,20,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,20,7,7,6,10,10,19],
[37,0,36,23,13,16,16,16,36],
[30,14,0,13,27,6,30,16,6],
[43,27,37,0,14,16,30,37,19],
[43,37,23,36,0,29,29,23,29],
[44,34,44,34,21,0,44,44,40],
[40,34,20,20,21,6,0,13,26],
[40,34,34,13,27,6,37,0,26],
[31,14,44,31,21,10,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,21,30,24,27,25,28],
[24,0,28,28,25,31,23,27,25],
[24,22,0,23,26,26,26,21,25],
[29,22,27,0,28,31,27,24,26],
[20,25,24,22,0,24,25,20,27],
[26,19,24,19,26,0,23,19,19],
[23,27,24,23,25,27,0,20,28],
[25,23,29,26,30,31,30,0,26],
[22,25,25,24,23,31,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,24,29,25,34,23,28,22],
[33,0,15,29,28,23,24,24,27],
[26,35,0,30,24,21,24,26,22],
[21,21,20,0,21,20,17,21,12],
[25,22,26,29,0,30,20,28,26],
[16,27,29,30,20,0,18,23,21],
[27,26,26,33,30,32,0,22,20],
[22,26,24,29,22,27,28,0,22],
[28,23,28,38,24,29,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,30,20,15,35,20,21],
[21,0,21,23,23,16,35,18,22],
[25,29,0,30,19,21,34,16,21],
[20,27,20,0,17,23,29,24,18],
[30,27,31,33,0,24,37,26,30],
[35,34,29,27,26,0,34,29,25],
[15,15,16,21,13,16,0,10,14],
[30,32,34,26,24,21,40,0,20],
[29,28,29,32,20,25,36,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,24,22,22,16,26,23,17],
[31,0,31,18,30,18,30,28,21],
[26,19,0,12,21,11,12,26,19],
[28,32,38,0,26,15,27,31,32],
[28,20,29,24,0,20,17,29,14],
[34,32,39,35,30,0,28,39,24],
[24,20,38,23,33,22,0,31,17],
[27,22,24,19,21,11,19,0,18],
[33,29,31,18,36,26,33,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,27,29,30,25,25,33,32],
[26,0,28,24,27,24,16,27,29],
[23,22,0,21,23,24,21,23,27],
[21,26,29,0,29,29,15,31,29],
[20,23,27,21,0,19,17,21,29],
[25,26,26,21,31,0,17,23,27],
[25,34,29,35,33,33,0,34,36],
[17,23,27,19,29,27,16,0,24],
[18,21,23,21,21,23,14,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,15,22,17,22,19,18,19],
[30,0,20,21,23,23,32,29,30],
[35,30,0,30,23,33,29,27,25],
[28,29,20,0,30,26,27,29,33],
[33,27,27,20,0,28,32,33,24],
[28,27,17,24,22,0,29,25,29],
[31,18,21,23,18,21,0,24,18],
[32,21,23,21,17,25,26,0,19],
[31,20,25,17,26,21,32,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,35,36,35,49,20,35,36],
[15,0,17,2,2,15,1,1,20],
[15,33,0,33,33,33,33,34,19],
[14,48,17,0,18,14,0,17,18],
[15,48,17,32,0,31,1,17,35],
[1,35,17,36,19,0,19,35,36],
[30,49,17,50,49,31,0,17,36],
[15,49,16,33,33,15,33,0,19],
[14,30,31,32,15,14,14,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,31,26,26,28,26,26,28],
[28,0,31,24,26,24,22,25,24],
[19,19,0,20,17,26,22,23,21],
[24,26,30,0,26,25,22,26,24],
[24,24,33,24,0,27,22,27,26],
[22,26,24,25,23,0,20,28,28],
[24,28,28,28,28,30,0,29,31],
[24,25,27,24,23,22,21,0,27],
[22,26,29,26,24,22,19,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,34,31,26,26,29,23,28],
[23,0,31,27,21,26,23,25,29],
[16,19,0,23,20,19,17,18,22],
[19,23,27,0,22,27,22,25,23],
[24,29,30,28,0,29,23,23,29],
[24,24,31,23,21,0,21,22,29],
[21,27,33,28,27,29,0,28,28],
[27,25,32,25,27,28,22,0,30],
[22,21,28,27,21,21,22,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,0,3,10,0,0,10,0],
[40,0,3,16,3,16,3,23,16],
[50,47,0,26,10,26,26,23,26],
[47,34,24,0,34,37,24,47,24],
[40,47,40,16,0,16,40,47,16],
[50,34,24,13,34,0,27,47,3],
[50,47,24,26,10,23,0,47,23],
[40,27,27,3,3,3,3,0,3],
[50,34,24,26,34,47,27,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,34,22,24,28,28,22,15],
[26,0,30,25,25,23,24,25,22],
[16,20,0,14,16,19,22,22,13],
[28,25,36,0,25,28,38,31,23],
[26,25,34,25,0,30,30,29,25],
[22,27,31,22,20,0,30,27,21],
[22,26,28,12,20,20,0,25,14],
[28,25,28,19,21,23,25,0,18],
[35,28,37,27,25,29,36,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,25,25,23,20,28,30,24],
[23,0,24,20,25,22,26,29,24],
[25,26,0,27,25,25,28,30,23],
[25,30,23,0,26,27,25,32,28],
[27,25,25,24,0,26,34,28,26],
[30,28,25,23,24,0,31,32,24],
[22,24,22,25,16,19,0,26,22],
[20,21,20,18,22,18,24,0,19],
[26,26,27,22,24,26,28,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,22,28,26,26,26,26],
[21,0,23,16,22,24,21,24,22],
[25,27,0,20,21,25,25,22,23],
[28,34,30,0,23,25,31,34,23],
[22,28,29,27,0,18,26,30,32],
[24,26,25,25,32,0,25,34,33],
[24,29,25,19,24,25,0,25,23],
[24,26,28,16,20,16,25,0,23],
[24,28,27,27,18,17,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,27,25,25,22,25,25,29],
[31,0,27,31,29,33,22,30,34],
[23,23,0,22,27,23,18,23,24],
[25,19,28,0,26,23,20,25,24],
[25,21,23,24,0,20,21,24,27],
[28,17,27,27,30,0,20,26,25],
[25,28,32,30,29,30,0,29,29],
[25,20,27,25,26,24,21,0,24],
[21,16,26,26,23,25,21,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,21,18,16,25,24,27,27],
[27,0,28,28,25,29,30,30,31],
[29,22,0,25,19,34,32,29,23],
[32,22,25,0,24,23,27,27,28],
[34,25,31,26,0,25,33,28,30],
[25,21,16,27,25,0,24,29,32],
[26,20,18,23,17,26,0,25,28],
[23,20,21,23,22,21,25,0,26],
[23,19,27,22,20,18,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,31,27,29,22,20,25,19],
[19,0,26,24,29,21,25,23,16],
[19,24,0,23,30,20,25,17,22],
[23,26,27,0,31,24,29,24,24],
[21,21,20,19,0,16,24,19,15],
[28,29,30,26,34,0,28,23,26],
[30,25,25,21,26,22,0,23,19],
[25,27,33,26,31,27,27,0,23],
[31,34,28,26,35,24,31,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,18,24,20,24,23,25,20],
[29,0,25,33,28,31,25,32,32],
[32,25,0,29,25,29,22,32,24],
[26,17,21,0,24,26,25,24,24],
[30,22,25,26,0,29,22,25,24],
[26,19,21,24,21,0,21,23,25],
[27,25,28,25,28,29,0,24,24],
[25,18,18,26,25,27,26,0,23],
[30,18,26,26,26,25,26,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,19,20,24,32,21,26,24],
[29,0,20,23,28,32,33,25,35],
[31,30,0,20,37,35,26,32,30],
[30,27,30,0,30,29,25,28,32],
[26,22,13,20,0,21,21,19,25],
[18,18,15,21,29,0,19,19,26],
[29,17,24,25,29,31,0,26,27],
[24,25,18,22,31,31,24,0,21],
[26,15,20,18,25,24,23,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,32,19,30,32,28,26,24],
[21,0,26,25,31,33,29,26,24],
[18,24,0,22,21,30,22,24,25],
[31,25,28,0,23,29,27,18,27],
[20,19,29,27,0,28,27,22,21],
[18,17,20,21,22,0,24,24,24],
[22,21,28,23,23,26,0,23,32],
[24,24,26,32,28,26,27,0,27],
[26,26,25,23,29,26,18,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,28,18,31,24,18,26],
[26,0,27,36,26,24,30,25,27],
[22,23,0,30,21,29,29,19,29],
[22,14,20,0,18,17,15,20,18],
[32,24,29,32,0,31,31,21,30],
[19,26,21,33,19,0,30,25,21],
[26,20,21,35,19,20,0,19,26],
[32,25,31,30,29,25,31,0,30],
[24,23,21,32,20,29,24,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,19,25,24,30,21,36],
[29,0,22,28,22,28,23,29,29],
[25,28,0,32,31,33,24,32,32],
[31,22,18,0,32,38,26,28,28],
[25,28,19,18,0,21,29,27,31],
[26,22,17,12,29,0,19,27,22],
[20,27,26,24,21,31,0,25,22],
[29,21,18,22,23,23,25,0,28],
[14,21,18,22,19,28,28,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,31,21,30,25,27,26,19],
[24,0,23,24,31,29,32,29,23],
[19,27,0,23,28,24,28,23,20],
[29,26,27,0,28,21,28,25,21],
[20,19,22,22,0,21,28,24,20],
[25,21,26,29,29,0,27,26,22],
[23,18,22,22,22,23,0,15,23],
[24,21,27,25,26,24,35,0,25],
[31,27,30,29,30,28,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,27,26,19,21,21,22,24],
[28,0,30,25,27,25,23,26,22],
[23,20,0,29,19,21,18,21,13],
[24,25,21,0,21,21,18,20,19],
[31,23,31,29,0,24,24,23,19],
[29,25,29,29,26,0,23,25,22],
[29,27,32,32,26,27,0,27,24],
[28,24,29,30,27,25,23,0,26],
[26,28,37,31,31,28,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,20,31,22,21,24,25],
[29,0,22,19,29,22,20,18,25],
[27,28,0,23,31,25,27,20,29],
[30,31,27,0,30,26,25,22,31],
[19,21,19,20,0,20,22,22,21],
[28,28,25,24,30,0,22,23,27],
[29,30,23,25,28,28,0,27,24],
[26,32,30,28,28,27,23,0,31],
[25,25,21,19,29,23,26,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,23,24,29,27,24,22,21],
[30,0,29,24,30,28,27,25,28],
[27,21,0,24,33,27,30,22,25],
[26,26,26,0,33,23,23,24,28],
[21,20,17,17,0,23,17,18,17],
[23,22,23,27,27,0,24,25,26],
[26,23,20,27,33,26,0,23,22],
[28,25,28,26,32,25,27,0,26],
[29,22,25,22,33,24,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,27,22,17,31,24,26],
[25,0,23,32,27,16,31,20,15],
[27,27,0,28,23,27,30,25,27],
[23,18,22,0,25,16,29,26,25],
[28,23,27,25,0,22,30,29,27],
[33,34,23,34,28,0,37,28,31],
[19,19,20,21,20,13,0,18,18],
[26,30,25,24,21,22,32,0,20],
[24,35,23,25,23,19,32,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,25,21,25,29,22,25,23],
[22,0,23,26,26,28,21,24,28],
[25,27,0,29,27,32,26,25,30],
[29,24,21,0,23,25,28,24,28],
[25,24,23,27,0,24,19,24,28],
[21,22,18,25,26,0,22,21,20],
[28,29,24,22,31,28,0,23,28],
[25,26,25,26,26,29,27,0,33],
[27,22,20,22,22,30,22,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,24,24,26,28,26,27],
[25,0,25,25,29,32,29,31,31],
[25,25,0,22,27,26,26,29,31],
[26,25,28,0,32,28,31,31,31],
[26,21,23,18,0,28,27,27,32],
[24,18,24,22,22,0,28,23,31],
[22,21,24,19,23,22,0,20,28],
[24,19,21,19,23,27,30,0,24],
[23,19,19,19,18,19,22,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,24,20,27,29,16,23,40],
[23,0,27,12,23,23,13,25,34],
[26,23,0,12,27,23,7,22,32],
[30,38,38,0,37,35,25,32,43],
[23,27,23,13,0,20,18,24,28],
[21,27,27,15,30,0,22,18,37],
[34,37,43,25,32,28,0,33,40],
[27,25,28,18,26,32,17,0,38],
[10,16,18,7,22,13,10,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,23,24,24,17,28,26,21],
[31,0,28,26,29,27,26,28,23],
[27,22,0,23,20,18,26,27,22],
[26,24,27,0,23,20,29,26,24],
[26,21,30,27,0,21,23,27,29],
[33,23,32,30,29,0,28,28,27],
[22,24,24,21,27,22,0,28,22],
[24,22,23,24,23,22,22,0,21],
[29,27,28,26,21,23,28,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,22,27,27,30,22,26,25],
[30,0,26,28,33,34,24,24,30],
[28,24,0,33,34,36,23,31,35],
[23,22,17,0,23,33,25,21,28],
[23,17,16,27,0,34,19,24,28],
[20,16,14,17,16,0,11,17,26],
[28,26,27,25,31,39,0,27,31],
[24,26,19,29,26,33,23,0,32],
[25,20,15,22,22,24,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,28,25,26,24,30,20,28],
[30,0,29,26,20,33,31,32,32],
[22,21,0,26,26,29,28,29,30],
[25,24,24,0,24,26,24,26,23],
[24,30,24,26,0,31,32,29,27],
[26,17,21,24,19,0,26,22,24],
[20,19,22,26,18,24,0,22,22],
[30,18,21,24,21,28,28,0,26],
[22,18,20,27,23,26,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,26,26,23,29,30,25,30],
[19,0,22,20,19,19,23,24,19],
[24,28,0,21,23,26,26,25,27],
[24,30,29,0,29,28,27,30,29],
[27,31,27,21,0,29,29,28,27],
[21,31,24,22,21,0,28,24,27],
[20,27,24,23,21,22,0,21,28],
[25,26,25,20,22,26,29,0,26],
[20,31,23,21,23,23,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,29,28,30,33,28,35,24],
[16,0,24,23,27,25,24,24,21],
[21,26,0,25,31,29,23,22,24],
[22,27,25,0,29,26,26,32,28],
[20,23,19,21,0,24,19,26,23],
[17,25,21,24,26,0,21,24,21],
[22,26,27,24,31,29,0,29,26],
[15,26,28,18,24,26,21,0,23],
[26,29,26,22,27,29,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,24,26,21,23,18,21,26],
[35,0,21,34,21,21,23,24,25],
[26,29,0,31,24,18,25,29,32],
[24,16,19,0,20,28,16,28,28],
[29,29,26,30,0,20,22,20,32],
[27,29,32,22,30,0,22,27,24],
[32,27,25,34,28,28,0,27,26],
[29,26,21,22,30,23,23,0,36],
[24,25,18,22,18,26,24,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,25,29,23,22,26,33,26],
[22,0,21,24,21,22,23,27,21],
[25,29,0,23,27,32,24,33,24],
[21,26,27,0,24,27,26,31,24],
[27,29,23,26,0,27,25,34,27],
[28,28,18,23,23,0,24,30,25],
[24,27,26,24,25,26,0,30,21],
[17,23,17,19,16,20,20,0,17],
[24,29,26,26,23,25,29,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,14,40,27,24,27,27,37],
[25,0,27,35,32,39,42,39,30],
[36,23,0,36,42,22,23,36,36],
[10,15,14,0,30,14,25,15,28],
[23,18,8,20,0,28,27,22,28],
[26,11,28,36,22,0,39,28,22],
[23,8,27,25,23,11,0,27,29],
[23,11,14,35,28,22,23,0,28],
[13,20,14,22,22,28,21,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,22,16,24,21,26,22,26],
[25,0,21,23,24,18,26,25,18],
[28,29,0,29,32,35,31,31,22],
[34,27,21,0,25,22,25,24,27],
[26,26,18,25,0,26,26,23,16],
[29,32,15,28,24,0,35,33,26],
[24,24,19,25,24,15,0,28,23],
[28,25,19,26,27,17,22,0,29],
[24,32,28,23,34,24,27,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,34,27,28,26,33,22,23],
[19,0,31,13,21,16,27,18,22],
[16,19,0,19,17,23,29,17,19],
[23,37,31,0,25,28,37,26,29],
[22,29,33,25,0,29,36,29,29],
[24,34,27,22,21,0,28,23,25],
[17,23,21,13,14,22,0,18,22],
[28,32,33,24,21,27,32,0,34],
[27,28,31,21,21,25,28,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,21,27,23,20,23,23],
[27,0,26,30,31,30,28,23,25],
[27,24,0,26,27,30,22,24,27],
[29,20,24,0,29,24,23,24,20],
[23,19,23,21,0,22,21,24,25],
[27,20,20,26,28,0,25,23,26],
[30,22,28,27,29,25,0,27,21],
[27,27,26,26,26,27,23,0,24],
[27,25,23,30,25,24,29,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,26,50,50,44,32,50,17],
[0,0,0,24,0,0,0,6,0],
[24,50,0,50,50,44,50,35,35],
[0,26,0,0,11,15,15,0,11],
[0,50,0,39,0,15,15,24,11],
[6,50,6,35,35,0,32,35,17],
[18,50,0,35,35,18,0,35,29],
[0,44,15,50,26,15,15,0,11],
[33,50,15,39,39,33,21,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,28,28,24,22,25,27,21],
[27,0,26,28,21,27,25,28,19],
[22,24,0,27,27,24,27,28,24],
[22,22,23,0,24,20,25,27,18],
[26,29,23,26,0,24,27,29,23],
[28,23,26,30,26,0,25,27,20],
[25,25,23,25,23,25,0,28,26],
[23,22,22,23,21,23,22,0,18],
[29,31,26,32,27,30,24,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,25,25,28,25,26,26],
[25,0,25,20,21,23,20,22,19],
[26,25,0,20,22,25,19,24,25],
[25,30,30,0,22,24,21,23,23],
[25,29,28,28,0,26,23,27,25],
[22,27,25,26,24,0,21,25,25],
[25,30,31,29,27,29,0,28,22],
[24,28,26,27,23,25,22,0,24],
[24,31,25,27,25,25,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,20,29,22,28,26,28,26],
[31,0,29,28,25,28,32,32,26],
[30,21,0,30,24,30,26,29,28],
[21,22,20,0,18,24,21,25,26],
[28,25,26,32,0,28,24,31,32],
[22,22,20,26,22,0,24,26,30],
[24,18,24,29,26,26,0,27,26],
[22,18,21,25,19,24,23,0,24],
[24,24,22,24,18,20,24,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,22,22,21,24,22,25,18],
[27,0,25,25,17,29,14,22,16],
[28,25,0,21,27,36,25,29,26],
[28,25,29,0,23,29,21,26,16],
[29,33,23,27,0,37,22,35,26],
[26,21,14,21,13,0,14,28,17],
[28,36,25,29,28,36,0,28,28],
[25,28,21,24,15,22,22,0,20],
[32,34,24,34,24,33,22,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,31,30,33,28,23,31,33],
[19,0,24,25,29,25,27,25,28],
[19,26,0,23,24,25,24,22,27],
[20,25,27,0,22,23,32,31,31],
[17,21,26,28,0,25,29,26,26],
[22,25,25,27,25,0,27,22,24],
[27,23,26,18,21,23,0,26,31],
[19,25,28,19,24,28,24,0,27],
[17,22,23,19,24,26,19,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,33,27,31,29,24,32],
[25,0,24,33,25,28,26,24,23],
[27,26,0,33,26,27,27,25,26],
[17,17,17,0,17,16,21,14,20],
[23,25,24,33,0,29,31,24,28],
[19,22,23,34,21,0,24,19,24],
[21,24,23,29,19,26,0,20,22],
[26,26,25,36,26,31,30,0,30],
[18,27,24,30,22,26,28,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,24,28,27,25,27,27,22],
[20,0,22,27,24,23,26,24,21],
[26,28,0,26,28,25,26,25,22],
[22,23,24,0,25,21,20,22,18],
[23,26,22,25,0,21,21,21,25],
[25,27,25,29,29,0,26,29,20],
[23,24,24,30,29,24,0,27,21],
[23,26,25,28,29,21,23,0,21],
[28,29,28,32,25,30,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,18,24,23,21,21,22,20],
[21,0,18,24,21,19,20,24,20],
[32,32,0,27,24,22,26,26,26],
[26,26,23,0,26,25,25,28,25],
[27,29,26,24,0,24,21,22,25],
[29,31,28,25,26,0,20,21,28],
[29,30,24,25,29,30,0,29,28],
[28,26,24,22,28,29,21,0,23],
[30,30,24,25,25,22,22,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,22,27,23,25,22,26,25],
[23,0,21,22,20,23,19,24,28],
[28,29,0,24,28,21,22,26,21],
[23,28,26,0,26,25,31,30,22],
[27,30,22,24,0,23,25,27,27],
[25,27,29,25,27,0,25,25,27],
[28,31,28,19,25,25,0,29,27],
[24,26,24,20,23,25,21,0,22],
[25,22,29,28,23,23,23,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,15,20,27,30,28,25],
[21,0,24,17,16,21,28,18,22],
[25,26,0,16,23,20,21,23,23],
[35,33,34,0,24,31,31,28,27],
[30,34,27,26,0,23,32,25,29],
[23,29,30,19,27,0,27,20,23],
[20,22,29,19,18,23,0,20,27],
[22,32,27,22,25,30,30,0,25],
[25,28,27,23,21,27,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,25,22,38,27,26,28,30],
[32,0,32,29,26,26,30,32,21],
[25,18,0,19,16,23,18,32,19],
[28,21,31,0,27,30,28,27,22],
[12,24,34,23,0,21,22,27,27],
[23,24,27,20,29,0,25,33,22],
[24,20,32,22,28,25,0,27,23],
[22,18,18,23,23,17,23,0,19],
[20,29,31,28,23,28,27,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,6,0,13,24,8,10,14],
[26,0,31,23,31,49,31,26,24],
[44,19,0,23,31,44,11,10,8],
[50,27,27,0,31,50,35,34,15],
[37,19,19,19,0,34,21,28,27],
[26,1,6,0,16,0,10,11,9],
[42,19,39,15,29,40,0,9,24],
[40,24,40,16,22,39,41,0,22],
[36,26,42,35,23,41,26,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,33,31,29,33,30,32,25],
[16,0,28,19,24,29,24,19,25],
[17,22,0,18,22,22,24,25,16],
[19,31,32,0,30,27,24,32,29],
[21,26,28,20,0,32,21,27,24],
[17,21,28,23,18,0,24,25,20],
[20,26,26,26,29,26,0,27,21],
[18,31,25,18,23,25,23,0,21],
[25,25,34,21,26,30,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,27,29,29,21,25,35,24],
[21,0,21,32,27,25,26,29,30],
[23,29,0,32,26,27,28,28,20],
[21,18,18,0,27,20,28,27,22],
[21,23,24,23,0,19,24,33,23],
[29,25,23,30,31,0,26,36,21],
[25,24,22,22,26,24,0,37,22],
[15,21,22,23,17,14,13,0,16],
[26,20,30,28,27,29,28,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,28,24,30,28,30,32],
[18,0,26,26,25,26,29,26,36],
[18,24,0,30,33,31,33,30,31],
[22,24,20,0,30,29,30,26,34],
[26,25,17,20,0,20,20,23,27],
[20,24,19,21,30,0,31,28,22],
[22,21,17,20,30,19,0,19,28],
[20,24,20,24,27,22,31,0,32],
[18,14,19,16,23,28,22,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,29,21,20,40,39,29,16],
[3,0,31,19,20,40,15,25,18],
[21,19,0,31,22,32,14,23,37],
[29,31,19,0,37,45,29,31,43],
[30,30,28,13,0,20,25,32,17],
[10,10,18,5,30,0,5,22,10],
[11,35,36,21,25,45,0,31,25],
[21,25,27,19,18,28,19,0,16],
[34,32,13,7,33,40,25,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,29,25,27,24,32,21],
[29,0,29,30,29,24,26,30,20],
[30,21,0,32,27,21,28,28,23],
[21,20,18,0,25,21,26,25,22],
[25,21,23,25,0,27,25,26,24],
[23,26,29,29,23,0,27,28,26],
[26,24,22,24,25,23,0,27,23],
[18,20,22,25,24,22,23,0,20],
[29,30,27,28,26,24,27,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,27,25,20,23,27,23,17],
[29,0,30,32,28,23,28,27,25],
[23,20,0,26,20,23,17,21,22],
[25,18,24,0,20,21,19,18,19],
[30,22,30,30,0,28,28,29,18],
[27,27,27,29,22,0,22,22,15],
[23,22,33,31,22,28,0,22,25],
[27,23,29,32,21,28,28,0,18],
[33,25,28,31,32,35,25,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,9,23,17,28,9,20],
[32,0,27,22,18,15,30,16,18],
[33,23,0,33,31,25,45,28,35],
[41,28,17,0,34,33,39,22,33],
[27,32,19,16,0,24,28,10,14],
[33,35,25,17,26,0,36,28,38],
[22,20,5,11,22,14,0,18,23],
[41,34,22,28,40,22,32,0,31],
[30,32,15,17,36,12,27,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,29,16,25,30,18,29,17],
[21,0,23,14,24,20,23,21,22],
[21,27,0,16,26,24,17,20,24],
[34,36,34,0,27,37,34,24,31],
[25,26,24,23,0,28,20,17,20],
[20,30,26,13,22,0,19,23,15],
[32,27,33,16,30,31,0,25,23],
[21,29,30,26,33,27,25,0,24],
[33,28,26,19,30,35,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,27,41,42,28,31,41,18],
[20,0,22,37,36,30,14,36,14],
[23,28,0,45,49,37,30,43,27],
[9,13,5,0,9,30,12,31,10],
[8,14,1,41,0,24,5,24,14],
[22,20,13,20,26,0,13,22,17],
[19,36,20,38,45,37,0,43,19],
[9,14,7,19,26,28,7,0,24],
[32,36,23,40,36,33,31,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,26,33,27,23,32,26,30],
[20,0,24,28,26,25,28,24,24],
[24,26,0,30,33,28,28,27,25],
[17,22,20,0,28,19,24,23,24],
[23,24,17,22,0,24,25,25,24],
[27,25,22,31,26,0,28,29,26],
[18,22,22,26,25,22,0,23,26],
[24,26,23,27,25,21,27,0,23],
[20,26,25,26,26,24,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,28,33,18,18,35,30,39],
[33,0,22,42,40,21,38,31,38],
[22,28,0,30,28,30,31,11,31],
[17,8,20,0,18,10,36,22,27],
[32,10,22,32,0,21,38,33,22],
[32,29,20,40,29,0,29,24,39],
[15,12,19,14,12,21,0,4,32],
[20,19,39,28,17,26,46,0,30],
[11,12,19,23,28,11,18,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,19,21,21,22,23,23],
[31,0,25,26,30,28,30,32,27],
[28,25,0,23,27,26,25,29,23],
[31,24,27,0,30,29,25,28,28],
[29,20,23,20,0,26,23,26,24],
[29,22,24,21,24,0,22,24,24],
[28,20,25,25,27,28,0,29,24],
[27,18,21,22,24,26,21,0,24],
[27,23,27,22,26,26,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,29,18,26,22,14,28,30],
[34,0,37,24,31,29,25,25,30],
[21,13,0,22,20,17,21,27,19],
[32,26,28,0,25,27,24,27,26],
[24,19,30,25,0,22,21,23,22],
[28,21,33,23,28,0,21,31,30],
[36,25,29,26,29,29,0,31,29],
[22,25,23,23,27,19,19,0,26],
[20,20,31,24,28,20,21,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,27,27,32,28,23,32,32],
[21,0,22,29,23,22,18,33,19],
[23,28,0,33,33,34,24,39,27],
[23,21,17,0,24,27,21,33,15],
[18,27,17,26,0,22,19,34,23],
[22,28,16,23,28,0,23,25,28],
[27,32,26,29,31,27,0,33,21],
[18,17,11,17,16,25,17,0,23],
[18,31,23,35,27,22,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,17,21,21,24,23,26],
[25,0,21,14,25,18,25,20,22],
[27,29,0,25,27,22,25,23,31],
[33,36,25,0,31,30,34,30,30],
[29,25,23,19,0,22,18,22,22],
[29,32,28,20,28,0,30,27,34],
[26,25,25,16,32,20,0,17,26],
[27,30,27,20,28,23,33,0,26],
[24,28,19,20,28,16,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,24,25,23,26,23,25,26],
[22,0,21,25,20,27,22,22,20],
[26,29,0,30,26,27,23,28,24],
[25,25,20,0,20,27,27,29,23],
[27,30,24,30,0,29,22,26,27],
[24,23,23,23,21,0,23,27,25],
[27,28,27,23,28,27,0,27,25],
[25,28,22,21,24,23,23,0,19],
[24,30,26,27,23,25,25,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,29,21,27,27,24,28,24],
[29,0,32,25,24,29,30,33,28],
[21,18,0,19,23,27,24,22,21],
[29,25,31,0,27,31,31,35,26],
[23,26,27,23,0,27,22,25,25],
[23,21,23,19,23,0,27,23,18],
[26,20,26,19,28,23,0,25,21],
[22,17,28,15,25,27,25,0,18],
[26,22,29,24,25,32,29,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,21,23,20,25,21,17,16],
[36,0,25,30,21,26,17,27,33],
[29,25,0,23,25,23,24,20,23],
[27,20,27,0,16,30,15,16,23],
[30,29,25,34,0,33,21,27,21],
[25,24,27,20,17,0,21,12,21],
[29,33,26,35,29,29,0,22,25],
[33,23,30,34,23,38,28,0,28],
[34,17,27,27,29,29,25,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,24,23,17,21,24,27],
[29,0,22,23,25,24,28,22,22],
[25,28,0,17,21,20,24,22,25],
[26,27,33,0,31,33,33,28,25],
[27,25,29,19,0,29,19,22,26],
[33,26,30,17,21,0,21,24,25],
[29,22,26,17,31,29,0,23,28],
[26,28,28,22,28,26,27,0,27],
[23,28,25,25,24,25,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,20,28,28,34,25,30,29],
[23,0,16,28,30,23,24,29,35],
[30,34,0,37,37,25,33,34,35],
[22,22,13,0,27,21,19,25,29],
[22,20,13,23,0,23,26,22,18],
[16,27,25,29,27,0,23,32,25],
[25,26,17,31,24,27,0,32,30],
[20,21,16,25,28,18,18,0,28],
[21,15,15,21,32,25,20,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,25,25,24,27,26,21],
[30,0,22,26,32,22,30,31,26],
[29,28,0,24,24,24,29,27,31],
[25,24,26,0,24,21,26,31,22],
[25,18,26,26,0,17,31,28,24],
[26,28,26,29,33,0,34,30,23],
[23,20,21,24,19,16,0,24,22],
[24,19,23,19,22,20,26,0,21],
[29,24,19,28,26,27,28,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,22,25,31,25,30,29],
[18,0,17,26,16,26,24,22,19],
[18,33,0,27,22,32,28,33,31],
[28,24,23,0,23,22,22,28,24],
[25,34,28,27,0,29,24,35,33],
[19,24,18,28,21,0,23,25,22],
[25,26,22,28,26,27,0,30,28],
[20,28,17,22,15,25,20,0,30],
[21,31,19,26,17,28,22,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,24,18,22,26,19,17,25],
[20,0,17,15,15,23,26,17,21],
[26,33,0,19,22,26,22,21,26],
[32,35,31,0,22,32,29,26,21],
[28,35,28,28,0,37,25,25,35],
[24,27,24,18,13,0,21,22,22],
[31,24,28,21,25,29,0,27,29],
[33,33,29,24,25,28,23,0,25],
[25,29,24,29,15,28,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,38,32,30,29,29,23,31],
[23,0,32,23,33,27,28,32,28],
[12,18,0,23,26,23,19,18,24],
[18,27,27,0,26,28,20,26,28],
[20,17,24,24,0,25,26,23,25],
[21,23,27,22,25,0,20,22,23],
[21,22,31,30,24,30,0,20,24],
[27,18,32,24,27,28,30,0,26],
[19,22,26,22,25,27,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,27,29,25,31,23,20,18],
[18,0,23,28,28,28,22,25,22],
[23,27,0,25,25,27,19,23,30],
[21,22,25,0,17,22,17,19,22],
[25,22,25,33,0,26,21,25,27],
[19,22,23,28,24,0,17,20,19],
[27,28,31,33,29,33,0,25,29],
[30,25,27,31,25,30,25,0,31],
[32,28,20,28,23,31,21,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,23,24,24,20,22,17],
[31,0,30,25,26,30,29,27,26],
[31,20,0,26,28,25,26,27,21],
[27,25,24,0,31,30,26,21,21],
[26,24,22,19,0,28,23,24,21],
[26,20,25,20,22,0,25,23,22],
[30,21,24,24,27,25,0,25,19],
[28,23,23,29,26,27,25,0,20],
[33,24,29,29,29,28,31,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,22,28,25,23,26,24],
[26,0,21,21,25,24,24,27,26],
[27,29,0,25,28,27,26,28,30],
[28,29,25,0,30,26,29,27,32],
[22,25,22,20,0,20,24,23,22],
[25,26,23,24,30,0,27,28,28],
[27,26,24,21,26,23,0,24,23],
[24,23,22,23,27,22,26,0,26],
[26,24,20,18,28,22,27,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,26,32,23,21,24,29],
[30,0,25,26,34,30,32,32,36],
[29,25,0,23,31,24,24,29,31],
[24,24,27,0,30,26,29,28,33],
[18,16,19,20,0,21,25,18,22],
[27,20,26,24,29,0,27,29,37],
[29,18,26,21,25,23,0,23,26],
[26,18,21,22,32,21,27,0,22],
[21,14,19,17,28,13,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,22,15,24,17,21,24,22],
[29,0,25,23,29,21,21,23,30],
[28,25,0,24,27,28,26,25,26],
[35,27,26,0,35,19,24,26,25],
[26,21,23,15,0,22,21,21,30],
[33,29,22,31,28,0,29,26,31],
[29,29,24,26,29,21,0,29,30],
[26,27,25,24,29,24,21,0,25],
[28,20,24,25,20,19,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,24,16,22,25,22,26,24],
[17,0,21,18,21,27,25,17,22],
[26,29,0,23,23,22,25,28,29],
[34,32,27,0,30,35,24,32,31],
[28,29,27,20,0,20,26,29,31],
[25,23,28,15,30,0,25,30,26],
[28,25,25,26,24,25,0,31,31],
[24,33,22,18,21,20,19,0,33],
[26,28,21,19,19,24,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,31,25,30,35,30,40,36],
[24,0,24,24,24,25,20,45,30],
[19,26,0,19,20,25,20,35,35],
[25,26,31,0,35,30,30,30,35],
[20,26,30,15,0,35,20,40,26],
[15,25,25,20,15,0,14,35,20],
[20,30,30,20,30,36,0,45,30],
[10,5,15,20,10,15,5,0,20],
[14,20,15,15,24,30,20,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,28,14,13,17,14,22,13],
[23,0,21,27,19,24,19,26,14],
[22,29,0,19,24,29,20,18,17],
[36,23,31,0,22,30,22,36,20],
[37,31,26,28,0,24,26,31,29],
[33,26,21,20,26,0,13,28,15],
[36,31,30,28,24,37,0,34,27],
[28,24,32,14,19,22,16,0,17],
[37,36,33,30,21,35,23,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,29,43,17,36,30,23],
[25,0,24,24,32,25,38,24,25],
[21,26,0,17,21,18,37,24,21],
[21,26,33,0,34,24,38,32,27],
[7,18,29,16,0,24,28,24,19],
[33,25,32,26,26,0,31,30,27],
[14,12,13,12,22,19,0,14,14],
[20,26,26,18,26,20,36,0,27],
[27,25,29,23,31,23,36,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,22,26,25,22,20,24],
[25,0,18,24,21,11,15,21,14],
[21,32,0,25,24,10,27,21,9],
[28,26,25,0,21,19,21,24,21],
[24,29,26,29,0,24,30,25,23],
[25,39,40,31,26,0,22,22,35],
[28,35,23,29,20,28,0,25,27],
[30,29,29,26,25,28,25,0,26],
[26,36,41,29,27,15,23,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,0,0,25,25,0,0,0],
[50,0,50,25,25,50,25,0,25],
[50,0,0,0,25,25,0,0,0],
[50,25,50,0,50,50,50,0,0],
[25,25,25,0,0,50,0,0,0],
[25,0,25,0,0,0,0,0,0],
[50,25,50,0,50,50,0,0,0],
[50,50,50,50,50,50,50,0,25],
[50,25,50,50,50,50,50,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,20,27,21,31,20,28,27],
[19,0,17,25,15,27,21,23,26],
[30,33,0,37,25,33,24,33,28],
[23,25,13,0,11,22,18,24,16],
[29,35,25,39,0,25,28,34,31],
[19,23,17,28,25,0,20,24,26],
[30,29,26,32,22,30,0,32,30],
[22,27,17,26,16,26,18,0,26],
[23,24,22,34,19,24,20,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,12,23,30,12,13,24,14],
[44,0,50,38,31,26,19,50,32],
[38,0,0,18,24,6,7,24,19],
[27,12,32,0,31,13,13,39,27],
[20,19,26,19,0,14,26,19,27],
[38,24,44,37,36,0,24,43,32],
[37,31,43,37,24,26,0,43,25],
[26,0,26,11,31,7,7,0,21],
[36,18,31,23,23,18,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,24,27,28,24,22,32],
[28,0,32,29,27,25,34,29,35],
[25,18,0,23,26,29,24,27,26],
[26,21,27,0,22,27,27,23,35],
[23,23,24,28,0,32,29,30,26],
[22,25,21,23,18,0,25,15,34],
[26,16,26,23,21,25,0,20,24],
[28,21,23,27,20,35,30,0,30],
[18,15,24,15,24,16,26,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,31,25,29,29,25,34,30],
[25,0,29,26,21,28,25,29,32],
[19,21,0,18,15,28,16,30,24],
[25,24,32,0,30,28,18,32,33],
[21,29,35,20,0,25,18,33,27],
[21,22,22,22,25,0,19,27,24],
[25,25,34,32,32,31,0,34,27],
[16,21,20,18,17,23,16,0,23],
[20,18,26,17,23,26,23,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,28,22,24,28,29,29],
[24,0,23,29,25,22,28,25,28],
[25,27,0,28,23,28,28,28,29],
[22,21,22,0,24,25,19,24,25],
[28,25,27,26,0,27,25,30,22],
[26,28,22,25,23,0,31,27,29],
[22,22,22,31,25,19,0,27,29],
[21,25,22,26,20,23,23,0,24],
[21,22,21,25,28,21,21,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,34,17,30,12,4,13,39],
[17,0,21,22,23,11,6,24,11],
[16,29,0,28,29,23,11,18,24],
[33,28,22,0,24,5,15,18,33],
[20,27,21,26,0,26,15,33,20],
[38,39,27,45,24,0,33,22,38],
[46,44,39,35,35,17,0,23,46],
[37,26,32,32,17,28,27,0,37],
[11,39,26,17,30,12,4,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,37,22,32,30,21,21,30],
[25,0,21,22,21,25,16,10,25],
[13,29,0,20,14,19,15,10,18],
[28,28,30,0,26,24,19,15,23],
[18,29,36,24,0,30,30,21,24],
[20,25,31,26,20,0,15,16,25],
[29,34,35,31,20,35,0,30,29],
[29,40,40,35,29,34,20,0,34],
[20,25,32,27,26,25,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,50,28,33,33,34,21,33],
[23,0,37,21,24,28,34,24,32],
[0,13,0,16,6,17,19,13,21],
[22,29,34,0,23,17,34,23,17],
[17,26,44,27,0,28,34,24,32],
[17,22,33,33,22,0,40,28,28],
[16,16,31,16,16,10,0,11,15],
[29,26,37,27,26,22,39,0,33],
[17,18,29,33,18,22,35,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,26,39,39,39,50,39],
[24,0,13,26,24,25,25,36,27],
[25,37,0,26,50,39,39,37,39],
[24,24,24,0,24,13,24,24,38],
[11,26,0,26,0,25,25,23,27],
[11,25,11,37,25,0,36,23,25],
[11,25,11,26,25,14,0,37,25],
[0,14,13,26,27,27,13,0,27],
[11,23,11,12,23,25,25,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,21,30,32,36,25,23],
[25,0,20,18,29,25,30,36,20],
[29,30,0,25,33,34,40,34,26],
[29,32,25,0,35,31,31,40,30],
[20,21,17,15,0,19,31,21,22],
[18,25,16,19,31,0,25,21,15],
[14,20,10,19,19,25,0,15,4],
[25,14,16,10,29,29,35,0,17],
[27,30,24,20,28,35,46,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,31,36,32,37,31,32],
[25,0,26,24,31,27,32,25,24],
[20,24,0,31,32,28,30,27,24],
[19,26,19,0,27,25,23,23,24],
[14,19,18,23,0,26,20,18,18],
[18,23,22,25,24,0,24,21,22],
[13,18,20,27,30,26,0,25,22],
[19,25,23,27,32,29,25,0,22],
[18,26,26,26,32,28,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,29,31,25,31,32,30,27],
[16,0,18,23,17,21,17,22,25],
[21,32,0,22,22,29,26,30,28],
[19,27,28,0,20,26,25,22,25],
[25,33,28,30,0,29,24,29,28],
[19,29,21,24,21,0,21,26,20],
[18,33,24,25,26,29,0,27,22],
[20,28,20,28,21,24,23,0,24],
[23,25,22,25,22,30,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,20,15,22,27,26,17,20],
[24,0,22,16,28,27,26,18,26],
[30,28,0,22,17,24,27,30,32],
[35,34,28,0,23,29,34,30,28],
[28,22,33,27,0,34,39,33,38],
[23,23,26,21,16,0,20,18,27],
[24,24,23,16,11,30,0,24,27],
[33,32,20,20,17,32,26,0,26],
[30,24,18,22,12,23,23,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,26,23,26,26,25,29,28],
[23,0,23,22,27,28,20,25,26],
[24,27,0,25,26,27,25,24,29],
[27,28,25,0,26,26,23,24,27],
[24,23,24,24,0,23,24,27,25],
[24,22,23,24,27,0,24,24,24],
[25,30,25,27,26,26,0,24,22],
[21,25,26,26,23,26,26,0,20],
[22,24,21,23,25,26,28,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,32,28,21,26,21,25,21],
[29,0,30,27,28,25,28,26,27],
[18,20,0,21,20,23,22,21,21],
[22,23,29,0,21,26,23,25,22],
[29,22,30,29,0,31,28,30,20],
[24,25,27,24,19,0,22,23,24],
[29,22,28,27,22,28,0,25,28],
[25,24,29,25,20,27,25,0,27],
[29,23,29,28,30,26,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,16,26,29,20,22,21,23],
[29,0,27,31,28,22,26,30,27],
[34,23,0,29,32,26,25,28,31],
[24,19,21,0,25,25,24,24,21],
[21,22,18,25,0,25,19,24,24],
[30,28,24,25,25,0,21,27,29],
[28,24,25,26,31,29,0,21,28],
[29,20,22,26,26,23,29,0,26],
[27,23,19,29,26,21,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,31,25,20,25,30,32,32],
[25,0,27,30,27,26,27,22,29],
[19,23,0,22,25,17,22,13,24],
[25,20,28,0,25,24,18,23,23],
[30,23,25,25,0,30,31,27,26],
[25,24,33,26,20,0,24,19,29],
[20,23,28,32,19,26,0,21,31],
[18,28,37,27,23,31,29,0,21],
[18,21,26,27,24,21,19,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,28,19,28,34,19,37],
[13,0,32,25,0,32,23,16,24],
[13,18,0,10,0,16,16,10,9],
[22,25,40,0,16,31,22,17,16],
[31,50,50,34,0,41,32,25,31],
[22,18,34,19,9,0,15,19,18],
[16,27,34,28,18,35,0,28,27],
[31,34,40,33,25,31,22,0,25],
[13,26,41,34,19,32,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,26,24,27,24,20,30,28],
[28,0,29,21,26,18,24,28,23],
[24,21,0,18,24,22,22,25,21],
[26,29,32,0,30,24,23,26,31],
[23,24,26,20,0,19,21,27,29],
[26,32,28,26,31,0,25,26,29],
[30,26,28,27,29,25,0,28,33],
[20,22,25,24,23,24,22,0,26],
[22,27,29,19,21,21,17,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,20,25,20,26,23,26,20],
[26,0,20,23,21,25,25,28,18],
[30,30,0,26,25,35,27,34,30],
[25,27,24,0,22,21,25,27,24],
[30,29,25,28,0,30,27,35,24],
[24,25,15,29,20,0,21,23,18],
[27,25,23,25,23,29,0,30,21],
[24,22,16,23,15,27,20,0,18],
[30,32,20,26,26,32,29,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,26,26,23,25,24,24,28],
[20,0,22,23,24,24,23,21,24],
[24,28,0,23,21,25,21,24,25],
[24,27,27,0,18,26,22,24,26],
[27,26,29,32,0,30,26,26,23],
[25,26,25,24,20,0,22,26,24],
[26,27,29,28,24,28,0,22,25],
[26,29,26,26,24,24,28,0,22],
[22,26,25,24,27,26,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,27,27,19,27,27,27],
[23,0,25,24,16,27,35,26,35],
[23,25,0,16,16,27,26,17,42],
[23,26,34,0,24,35,43,26,43],
[23,34,34,26,0,26,26,26,34],
[31,23,23,15,24,0,23,33,50],
[23,15,24,7,24,27,0,18,35],
[23,24,33,24,24,17,32,0,42],
[23,15,8,7,16,0,15,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,22,12,23,18,22,19,19],
[36,0,31,28,28,25,32,33,32],
[28,19,0,22,20,18,26,23,16],
[38,22,28,0,31,22,30,29,27],
[27,22,30,19,0,25,26,29,23],
[32,25,32,28,25,0,35,30,25],
[28,18,24,20,24,15,0,22,17],
[31,17,27,21,21,20,28,0,22],
[31,18,34,23,27,25,33,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,23,24,23,29,31,24,21],
[21,0,24,19,29,21,29,23,20],
[27,26,0,25,24,30,28,23,26],
[26,31,25,0,30,26,27,24,23],
[27,21,26,20,0,25,31,19,24],
[21,29,20,24,25,0,30,25,19],
[19,21,22,23,19,20,0,22,21],
[26,27,27,26,31,25,28,0,25],
[29,30,24,27,26,31,29,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,29,34,33,34,24,36,34],
[17,0,18,33,27,27,28,18,24],
[21,32,0,40,34,38,27,39,36],
[16,17,10,0,17,20,10,24,17],
[17,23,16,33,0,31,16,30,27],
[16,23,12,30,19,0,12,24,9],
[26,22,23,40,34,38,0,30,32],
[14,32,11,26,20,26,20,0,20],
[16,26,14,33,23,41,18,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,24,12,30,21,25,27],
[29,0,28,16,16,28,26,30,27],
[30,22,0,20,20,35,29,26,32],
[26,34,30,0,19,35,25,28,29],
[38,34,30,31,0,35,36,34,25],
[20,22,15,15,15,0,18,22,18],
[29,24,21,25,14,32,0,25,24],
[25,20,24,22,16,28,25,0,19],
[23,23,18,21,25,32,26,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,14,5,12,14,13,21,13],
[24,0,17,5,0,14,5,8,0],
[36,33,0,19,27,28,27,35,27],
[45,45,31,0,30,29,30,32,23],
[38,50,23,20,0,29,37,32,36],
[36,36,22,21,21,0,28,23,14],
[37,45,23,20,13,22,0,38,23],
[29,42,15,18,18,27,12,0,20],
[37,50,23,27,14,36,27,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,7,13,7,7,7,18,7],
[50,0,44,37,19,31,31,37,31],
[43,6,0,30,19,7,24,24,18],
[37,13,20,0,13,21,31,31,25],
[43,31,31,37,0,31,18,30,24],
[43,19,43,29,19,0,24,24,18],
[43,19,26,19,32,26,0,37,31],
[32,13,26,19,20,26,13,0,12],
[43,19,32,25,26,32,19,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,30,23,27,28,27,24],
[21,0,25,23,22,27,29,30,31],
[25,25,0,28,20,29,21,25,27],
[20,27,22,0,23,29,29,31,23],
[27,28,30,27,0,31,33,29,24],
[23,23,21,21,19,0,25,27,22],
[22,21,29,21,17,25,0,28,30],
[23,20,25,19,21,23,22,0,21],
[26,19,23,27,26,28,20,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,24,28,25,22,30,33],
[25,0,17,27,44,34,19,42,31],
[27,33,0,31,36,36,25,37,32],
[26,23,19,0,32,24,23,33,24],
[22,6,14,18,0,19,10,29,16],
[25,16,14,26,31,0,21,37,28],
[28,31,25,27,40,29,0,45,26],
[20,8,13,17,21,13,5,0,21],
[17,19,18,26,34,22,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,23,35,28,31,34,21],
[25,0,25,30,40,26,31,32,26],
[25,25,0,18,31,17,29,23,18],
[27,20,32,0,36,33,25,31,24],
[15,10,19,14,0,14,12,21,11],
[22,24,33,17,36,0,25,31,19],
[19,19,21,25,38,25,0,32,15],
[16,18,27,19,29,19,18,0,13],
[29,24,32,26,39,31,35,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,13,17,16,27,20,15],
[36,0,28,24,24,30,25,26,31],
[32,22,0,17,15,27,29,29,21],
[37,26,33,0,25,29,27,27,25],
[33,26,35,25,0,32,27,31,27],
[34,20,23,21,18,0,23,28,21],
[23,25,21,23,23,27,0,21,28],
[30,24,21,23,19,22,29,0,24],
[35,19,29,25,23,29,22,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,32,31,25,29,33,31,33],
[22,0,27,22,19,19,27,21,27],
[18,23,0,15,20,19,24,22,21],
[19,28,35,0,18,24,34,30,25],
[25,31,30,32,0,30,29,31,31],
[21,31,31,26,20,0,27,29,29],
[17,23,26,16,21,23,0,27,27],
[19,29,28,20,19,21,23,0,27],
[17,23,29,25,19,21,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,33,33,33,26,19,26,28],
[17,0,28,19,22,16,17,19,14],
[17,22,0,8,25,14,16,18,18],
[17,31,42,0,27,27,22,24,23],
[17,28,25,23,0,19,18,27,22],
[24,34,36,23,31,0,31,26,25],
[31,33,34,28,32,19,0,28,32],
[24,31,32,26,23,24,22,0,26],
[22,36,32,27,28,25,18,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,16,20,17,24,20,20,26],
[23,0,13,23,15,23,20,17,20],
[34,37,0,32,27,35,31,23,28],
[30,27,18,0,21,30,21,20,28],
[33,35,23,29,0,33,27,28,33],
[26,27,15,20,17,0,25,25,25],
[30,30,19,29,23,25,0,28,32],
[30,33,27,30,22,25,22,0,26],
[24,30,22,22,17,25,18,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,22,31,26,28,25,20,26],
[26,0,22,25,23,24,23,23,24],
[28,28,0,21,25,26,22,29,28],
[19,25,29,0,27,26,23,23,26],
[24,27,25,23,0,24,20,28,24],
[22,26,24,24,26,0,26,22,24],
[25,27,28,27,30,24,0,26,27],
[30,27,21,27,22,28,24,0,26],
[24,26,22,24,26,26,23,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,20,31,24,8,17,14,8],
[25,0,24,28,23,17,28,15,21],
[30,26,0,24,25,15,25,16,25],
[19,22,26,0,16,20,21,14,12],
[26,27,25,34,0,25,29,28,24],
[42,33,35,30,25,0,42,23,28],
[33,22,25,29,21,8,0,17,26],
[36,35,34,36,22,27,33,0,31],
[42,29,25,38,26,22,24,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,26,29,34,27,25,21,23],
[34,0,26,33,38,32,23,29,38],
[24,24,0,37,30,31,30,29,24],
[21,17,13,0,21,18,25,19,22],
[16,12,20,29,0,15,20,17,22],
[23,18,19,32,35,0,25,24,20],
[25,27,20,25,30,25,0,23,29],
[29,21,21,31,33,26,27,0,36],
[27,12,26,28,28,30,21,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,25,23,27,26,27,29,28],
[23,0,23,21,23,21,25,27,27],
[25,27,0,23,23,26,27,25,25],
[27,29,27,0,31,26,18,27,30],
[23,27,27,19,0,21,25,29,31],
[24,29,24,24,29,0,28,30,27],
[23,25,23,32,25,22,0,28,23],
[21,23,25,23,21,20,22,0,20],
[22,23,25,20,19,23,27,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,26,31,25,29,22,22,14],
[34,0,24,31,32,29,27,34,28],
[24,26,0,31,20,29,25,23,19],
[19,19,19,0,19,25,22,22,15],
[25,18,30,31,0,25,33,31,24],
[21,21,21,25,25,0,17,20,15],
[28,23,25,28,17,33,0,16,11],
[28,16,27,28,19,30,34,0,26],
[36,22,31,35,26,35,39,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,29,25,29,29,26,28],
[21,0,24,24,26,22,26,22,24],
[24,26,0,24,24,19,25,22,22],
[21,26,26,0,25,23,26,28,24],
[25,24,26,25,0,29,24,24,23],
[21,28,31,27,21,0,31,27,25],
[21,24,25,24,26,19,0,23,23],
[24,28,28,22,26,23,27,0,25],
[22,26,28,26,27,25,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,17,35,42,35,35,16,35],
[15,0,25,17,25,35,26,8,34],
[33,25,0,25,25,26,25,33,41],
[15,33,25,0,33,43,26,23,33],
[8,25,25,17,0,35,27,16,43],
[15,15,24,7,15,0,25,15,25],
[15,24,25,24,23,25,0,23,23],
[34,42,17,27,34,35,27,0,35],
[15,16,9,17,7,25,27,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,17,23,23,20,20,13,17],
[38,0,32,21,20,29,32,30,34],
[33,18,0,31,29,37,31,37,35],
[27,29,19,0,19,26,32,28,28],
[27,30,21,31,0,29,30,38,31],
[30,21,13,24,21,0,31,34,30],
[30,18,19,18,20,19,0,28,15],
[37,20,13,22,12,16,22,0,24],
[33,16,15,22,19,20,35,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,27,28,29,26,32,26],
[25,0,25,24,25,23,19,30,23],
[21,25,0,23,24,24,24,28,22],
[23,26,27,0,25,24,24,30,23],
[22,25,26,25,0,23,26,30,25],
[21,27,26,26,27,0,25,27,22],
[24,31,26,26,24,25,0,26,26],
[18,20,22,20,20,23,24,0,21],
[24,27,28,27,25,28,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,34,40,35,39,25,34,42],
[24,0,27,33,34,34,27,29,37],
[16,23,0,27,23,30,17,21,26],
[10,17,23,0,29,26,10,20,19],
[15,16,27,21,0,28,18,26,21],
[11,16,20,24,22,0,11,11,23],
[25,23,33,40,32,39,0,30,40],
[16,21,29,30,24,39,20,0,37],
[8,13,24,31,29,27,10,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,0,0,25,25,0,50],
[25,0,25,0,25,25,25,0,50],
[25,25,0,0,25,25,25,25,50],
[50,50,50,0,25,25,25,50,50],
[50,25,25,25,0,25,25,25,50],
[25,25,25,25,25,0,25,25,50],
[25,25,25,25,25,25,0,25,50],
[50,50,25,0,25,25,25,0,50],
[0,0,0,0,0,0,0,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,22,22,27,28,30,33,31],
[21,0,26,22,23,23,25,28,28],
[28,24,0,28,23,26,29,35,34],
[28,28,22,0,24,24,25,27,32],
[23,27,27,26,0,22,33,28,29],
[22,27,24,26,28,0,31,33,34],
[20,25,21,25,17,19,0,26,28],
[17,22,15,23,22,17,24,0,25],
[19,22,16,18,21,16,22,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,24,23,27,29,28,29,22],
[22,0,24,14,25,25,28,29,24],
[26,26,0,25,28,31,29,28,25],
[27,36,25,0,26,31,30,35,30],
[23,25,22,24,0,24,26,29,21],
[21,25,19,19,26,0,24,26,24],
[22,22,21,20,24,26,0,20,27],
[21,21,22,15,21,24,30,0,20],
[28,26,25,20,29,26,23,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,28,26,22,25,21,29],
[30,0,27,33,27,23,23,24,29],
[26,23,0,33,28,25,25,27,32],
[22,17,17,0,23,18,20,19,23],
[24,23,22,27,0,21,24,23,26],
[28,27,25,32,29,0,25,30,29],
[25,27,25,30,26,25,0,28,31],
[29,26,23,31,27,20,22,0,25],
[21,21,18,27,24,21,19,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,29,22,22,27,24,18,23],
[31,0,30,26,28,35,29,25,31],
[21,20,0,19,25,29,22,22,29],
[28,24,31,0,34,36,28,29,34],
[28,22,25,16,0,27,23,28,27],
[23,15,21,14,23,0,17,18,30],
[26,21,28,22,27,33,0,25,29],
[32,25,28,21,22,32,25,0,26],
[27,19,21,16,23,20,21,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,29,31,23,26,29,28,31],
[23,0,29,26,21,24,25,15,19],
[21,21,0,23,17,19,24,20,25],
[19,24,27,0,23,17,21,21,18],
[27,29,33,27,0,26,28,25,29],
[24,26,31,33,24,0,22,21,19],
[21,25,26,29,22,28,0,25,20],
[22,35,30,29,25,29,25,0,22],
[19,31,25,32,21,31,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,31,24,22,25,24,28,25],
[29,0,32,24,25,30,26,34,34],
[19,18,0,18,21,21,22,27,20],
[26,26,32,0,24,24,25,31,29],
[28,25,29,26,0,29,22,27,31],
[25,20,29,26,21,0,26,28,32],
[26,24,28,25,28,24,0,31,31],
[22,16,23,19,23,22,19,0,20],
[25,16,30,21,19,18,19,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,7,12,13,18,7,7],
[37,0,12,30,24,18,30,37,31],
[38,38,0,25,38,33,25,32,26],
[43,20,25,0,32,27,30,33,20],
[38,26,12,18,0,13,25,33,13],
[37,32,17,23,37,0,36,32,25],
[32,20,25,20,25,14,0,21,21],
[43,13,18,17,17,18,29,0,12],
[43,19,24,30,37,25,29,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,20,21,23,23,20,21],
[29,0,23,24,24,27,22,22,26],
[30,27,0,24,26,26,35,29,27],
[30,26,26,0,24,27,28,29,29],
[29,26,24,26,0,23,25,19,25],
[27,23,24,23,27,0,27,18,26],
[27,28,15,22,25,23,0,24,28],
[30,28,21,21,31,32,26,0,29],
[29,24,23,21,25,24,22,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,29,27,27,37,43,21,30],
[21,0,21,27,26,29,37,27,36],
[21,29,0,29,14,28,44,27,27],
[23,23,21,0,27,29,37,21,22],
[23,24,36,23,0,31,44,27,38],
[13,21,22,21,19,0,36,19,22],
[7,13,6,13,6,14,0,13,7],
[29,23,23,29,23,31,37,0,38],
[20,14,23,28,12,28,43,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,28,23,30,27,21,26,18],
[32,0,30,27,35,26,30,30,24],
[22,20,0,25,32,23,31,23,20],
[27,23,25,0,20,35,29,15,27],
[20,15,18,30,0,27,23,12,24],
[23,24,27,15,23,0,17,14,15],
[29,20,19,21,27,33,0,23,26],
[24,20,27,35,38,36,27,0,25],
[32,26,30,23,26,35,24,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,30,26,29,30,28,38,23],
[15,0,24,20,31,31,24,27,25],
[20,26,0,23,30,31,21,39,38],
[24,30,27,0,31,27,23,35,39],
[21,19,20,19,0,27,24,30,25],
[20,19,19,23,23,0,22,19,28],
[22,26,29,27,26,28,0,30,31],
[12,23,11,15,20,31,20,0,26],
[27,25,12,11,25,22,19,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,11,26,14,19,20,10,21],
[36,0,25,16,35,24,21,15,26],
[39,25,0,31,33,38,24,30,35],
[24,34,19,0,25,19,24,20,15],
[36,15,17,25,0,15,32,26,22],
[31,26,12,31,35,0,27,21,22],
[30,29,26,26,18,23,0,27,22],
[40,35,20,30,24,29,23,0,31],
[29,24,15,35,28,28,28,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,23,23,26,24,26,28,14],
[35,0,29,37,29,31,28,29,17],
[27,21,0,31,21,15,15,21,27],
[27,13,19,0,26,26,28,29,16],
[24,21,29,24,0,20,23,29,10],
[26,19,35,24,30,0,24,23,30],
[24,22,35,22,27,26,0,24,22],
[22,21,29,21,21,27,26,0,18],
[36,33,23,34,40,20,28,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,19,27,26,27,23,23],
[21,0,23,24,24,24,29,29,25],
[25,27,0,20,22,18,30,24,22],
[31,26,30,0,29,27,30,33,23],
[23,26,28,21,0,19,28,20,21],
[24,26,32,23,31,0,30,26,26],
[23,21,20,20,22,20,0,25,21],
[27,21,26,17,30,24,25,0,21],
[27,25,28,27,29,24,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,25,24,24,27,26,20,28],
[27,0,30,28,23,28,28,24,29],
[25,20,0,23,22,27,20,25,28],
[26,22,27,0,24,23,23,21,31],
[26,27,28,26,0,24,26,28,25],
[23,22,23,27,26,0,24,23,29],
[24,22,30,27,24,26,0,27,30],
[30,26,25,29,22,27,23,0,26],
[22,21,22,19,25,21,20,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,17,20,25,17,16,21,20],
[36,0,27,21,25,26,23,39,29],
[33,23,0,28,27,29,25,37,33],
[30,29,22,0,24,21,27,32,21],
[25,25,23,26,0,19,26,28,24],
[33,24,21,29,31,0,29,22,22],
[34,27,25,23,24,21,0,30,24],
[29,11,13,18,22,28,20,0,24],
[30,21,17,29,26,28,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,21,39,18,27,33,29,22],
[21,0,15,27,10,15,31,25,10],
[29,35,0,40,35,30,33,27,22],
[11,23,10,0,6,17,20,16,16],
[32,40,15,44,0,28,31,31,27],
[23,35,20,33,22,0,28,28,22],
[17,19,17,30,19,22,0,19,16],
[21,25,23,34,19,22,31,0,16],
[28,40,28,34,23,28,34,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,27,30,25,30,26,29,33],
[24,0,23,26,23,24,22,26,26],
[23,27,0,25,28,27,27,27,24],
[20,24,25,0,27,27,26,27,26],
[25,27,22,23,0,23,19,26,22],
[20,26,23,23,27,0,24,29,26],
[24,28,23,24,31,26,0,27,30],
[21,24,23,23,24,21,23,0,26],
[17,24,26,24,28,24,20,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,28,25,33,31,31,31],
[24,0,24,15,21,21,18,30,14],
[22,26,0,19,21,25,22,22,21],
[22,35,31,0,23,34,24,25,26],
[25,29,29,27,0,30,19,27,24],
[17,29,25,16,20,0,18,19,25],
[19,32,28,26,31,32,0,38,27],
[19,20,28,25,23,31,12,0,24],
[19,36,29,24,26,25,23,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,33,25,26,27,31,26,28],
[16,0,30,25,23,27,25,23,28],
[17,20,0,23,19,25,24,21,23],
[25,25,27,0,22,27,24,32,28],
[24,27,31,28,0,28,28,24,34],
[23,23,25,23,22,0,25,25,29],
[19,25,26,26,22,25,0,21,28],
[24,27,29,18,26,25,29,0,27],
[22,22,27,22,16,21,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,31,18,17,27,21,32,18],
[31,0,28,32,31,33,26,31,22],
[19,22,0,17,20,28,21,25,13],
[32,18,33,0,18,34,26,30,24],
[33,19,30,32,0,33,25,39,19],
[23,17,22,16,17,0,24,32,11],
[29,24,29,24,25,26,0,37,25],
[18,19,25,20,11,18,13,0,20],
[32,28,37,26,31,39,25,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,14,6,18,10,17,12,19],
[41,0,31,21,33,28,32,25,31],
[36,19,0,27,23,22,24,21,33],
[44,29,23,0,25,15,27,20,27],
[32,17,27,25,0,12,28,25,33],
[40,22,28,35,38,0,24,32,41],
[33,18,26,23,22,26,0,21,23],
[38,25,29,30,25,18,29,0,33],
[31,19,17,23,17,9,27,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,30,14,23,24,34,25,34],
[22,0,33,22,22,31,27,25,29],
[20,17,0,18,26,27,20,31,19],
[36,28,32,0,24,27,23,27,33],
[27,28,24,26,0,24,26,28,18],
[26,19,23,23,26,0,31,20,23],
[16,23,30,27,24,19,0,15,23],
[25,25,19,23,22,30,35,0,26],
[16,21,31,17,32,27,27,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,27,28,21,26,29,26,29],
[21,0,22,24,21,22,25,26,30],
[23,28,0,25,22,22,22,23,27],
[22,26,25,0,21,25,27,24,28],
[29,29,28,29,0,25,32,29,30],
[24,28,28,25,25,0,26,24,28],
[21,25,28,23,18,24,0,25,28],
[24,24,27,26,21,26,25,0,28],
[21,20,23,22,20,22,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,24,26,25,19,20,15,25],
[32,0,27,32,29,23,23,20,34],
[26,23,0,25,32,27,20,17,21],
[24,18,25,0,29,19,25,21,25],
[25,21,18,21,0,13,17,17,27],
[31,27,23,31,37,0,34,28,35],
[30,27,30,25,33,16,0,25,23],
[35,30,33,29,33,22,25,0,31],
[25,16,29,25,23,15,27,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,30,22,22,24,25,21],
[23,0,24,26,28,21,21,25,25],
[23,26,0,28,23,26,25,24,28],
[20,24,22,0,23,21,20,25,18],
[28,22,27,27,0,21,22,25,21],
[28,29,24,29,29,0,26,30,28],
[26,29,25,30,28,24,0,25,26],
[25,25,26,25,25,20,25,0,25],
[29,25,22,32,29,22,24,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,33,32,29,30,26,21,25],
[21,0,22,29,15,35,25,20,25],
[17,28,0,28,29,21,24,25,25],
[18,21,22,0,16,28,36,17,29],
[21,35,21,34,0,30,27,16,21],
[20,15,29,22,20,0,21,21,16],
[24,25,26,14,23,29,0,18,27],
[29,30,25,33,34,29,32,0,32],
[25,25,25,21,29,34,23,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,29,23,22,33,27,30,27],
[21,0,30,31,24,19,16,19,29],
[21,20,0,20,22,17,20,19,29],
[27,19,30,0,23,26,18,16,36],
[28,26,28,27,0,25,22,27,24],
[17,31,33,24,25,0,25,29,28],
[23,34,30,32,28,25,0,26,33],
[20,31,31,34,23,21,24,0,30],
[23,21,21,14,26,22,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,0,0,0,0,25,0,0],
[25,0,25,25,25,25,25,25,25],
[50,25,0,25,50,50,50,50,25],
[50,25,25,0,25,25,25,25,25],
[50,25,0,25,0,25,50,25,25],
[50,25,0,25,25,0,50,50,25],
[25,25,0,25,0,0,0,0,25],
[50,25,0,25,25,0,50,0,25],
[50,25,25,25,25,25,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,0,0,0,0,25,0],
[25,0,25,25,25,0,25,25,25],
[25,25,0,0,25,25,25,25,25],
[50,25,50,0,25,25,25,25,25],
[50,25,25,25,0,0,25,25,25],
[50,50,25,25,50,0,25,50,50],
[50,25,25,25,25,25,0,25,25],
[25,25,25,25,25,0,25,0,0],
[50,25,25,25,25,0,25,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,27,23,25,25,28,28],
[25,0,31,19,21,26,24,24,27],
[25,19,0,26,19,23,29,23,25],
[23,31,24,0,29,21,30,26,28],
[27,29,31,21,0,26,30,21,26],
[25,24,27,29,24,0,28,26,29],
[25,26,21,20,20,22,0,21,22],
[22,26,27,24,29,24,29,0,24],
[22,23,25,22,24,21,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,26,25,24,23,28,29],
[24,0,30,26,22,29,24,32,27],
[22,20,0,25,20,22,19,26,21],
[24,24,25,0,26,25,22,32,31],
[25,28,30,24,0,23,25,29,29],
[26,21,28,25,27,0,21,33,25],
[27,26,31,28,25,29,0,34,27],
[22,18,24,18,21,17,16,0,21],
[21,23,29,19,21,25,23,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,23,25,20,23,20,22,27],
[21,0,28,24,21,24,24,19,25],
[27,22,0,23,21,22,20,23,28],
[25,26,27,0,25,30,23,24,25],
[30,29,29,25,0,30,26,25,29],
[27,26,28,20,20,0,21,24,27],
[30,26,30,27,24,29,0,24,30],
[28,31,27,26,25,26,26,0,31],
[23,25,22,25,21,23,20,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,28,27,31,27,23,26,29],
[29,0,28,26,29,29,21,27,28],
[22,22,0,26,27,28,28,23,28],
[23,24,24,0,28,23,18,31,28],
[19,21,23,22,0,26,25,27,31],
[23,21,22,27,24,0,19,35,27],
[27,29,22,32,25,31,0,31,28],
[24,23,27,19,23,15,19,0,26],
[21,22,22,22,19,23,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,27,43,18,36,34,34,27],
[7,0,27,18,16,34,25,9,18],
[23,23,0,23,25,25,23,23,16],
[7,32,27,0,25,16,23,25,18],
[32,34,25,25,0,34,32,34,34],
[14,16,25,34,16,0,23,16,25],
[16,25,27,27,18,27,0,27,18],
[16,41,27,25,16,34,23,0,27],
[23,32,34,32,16,25,32,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,27,31,28,31,33,37],
[24,0,27,34,29,31,27,27,30],
[27,23,0,23,27,25,26,33,34],
[23,16,27,0,32,29,28,28,30],
[19,21,23,18,0,24,24,31,28],
[22,19,25,21,26,0,26,26,31],
[19,23,24,22,26,24,0,29,30],
[17,23,17,22,19,24,21,0,24],
[13,20,16,20,22,19,20,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,20,26,26,25,27,22],
[29,0,23,26,25,29,27,23,22],
[29,27,0,27,27,29,24,28,28],
[30,24,23,0,24,26,22,24,25],
[24,25,23,26,0,24,33,28,28],
[24,21,21,24,26,0,23,26,19],
[25,23,26,28,17,27,0,21,21],
[23,27,22,26,22,24,29,0,25],
[28,28,22,25,22,31,29,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,27,27,25,33,23,30,36],
[27,0,24,30,35,30,28,32,30],
[23,26,0,22,29,23,30,27,33],
[23,20,28,0,31,30,24,28,28],
[25,15,21,19,0,28,20,18,29],
[17,20,27,20,22,0,23,25,18],
[27,22,20,26,30,27,0,25,25],
[20,18,23,22,32,25,25,0,26],
[14,20,17,22,21,32,25,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,25,25,25,28,26,32,25],
[18,0,24,27,25,23,25,24,24],
[25,26,0,31,26,27,26,28,24],
[25,23,19,0,24,25,23,25,22],
[25,25,24,26,0,26,21,29,27],
[22,27,23,25,24,0,25,33,24],
[24,25,24,27,29,25,0,28,21],
[18,26,22,25,21,17,22,0,23],
[25,26,26,28,23,26,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,24,25,25,27,27,24,31],
[21,0,26,23,19,25,20,20,24],
[26,24,0,28,21,26,27,19,29],
[25,27,22,0,25,28,27,24,29],
[25,31,29,25,0,27,29,27,32],
[23,25,24,22,23,0,23,22,23],
[23,30,23,23,21,27,0,23,30],
[26,30,31,26,23,28,27,0,30],
[19,26,21,21,18,27,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,27,28,18,24,22,27,17],
[35,0,25,35,24,30,25,30,26],
[23,25,0,30,19,30,26,23,21],
[22,15,20,0,15,23,23,20,17],
[32,26,31,35,0,28,33,26,25],
[26,20,20,27,22,0,20,21,20],
[28,25,24,27,17,30,0,23,25],
[23,20,27,30,24,29,27,0,21],
[33,24,29,33,25,30,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,22,24,20,22,26,23],
[28,0,23,21,25,22,29,31,26],
[29,27,0,21,25,28,27,26,25],
[28,29,29,0,28,29,25,26,25],
[26,25,25,22,0,24,28,25,26],
[30,28,22,21,26,0,27,24,27],
[28,21,23,25,22,23,0,24,20],
[24,19,24,24,25,26,26,0,18],
[27,24,25,25,24,23,30,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,40,19,29,21,9,19,10],
[30,0,30,19,19,30,9,9,9],
[10,20,0,10,29,10,0,0,10],
[31,31,40,0,19,31,11,20,10],
[21,31,21,31,0,21,21,21,21],
[29,20,40,19,29,0,9,29,29],
[41,41,50,39,29,41,0,39,20],
[31,41,50,30,29,21,11,0,31],
[40,41,40,40,29,21,30,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,30,29,22,23,25,20,23],
[29,0,25,28,28,24,30,31,30],
[20,25,0,23,21,22,25,22,20],
[21,22,27,0,25,20,25,25,27],
[28,22,29,25,0,27,28,33,30],
[27,26,28,30,23,0,33,29,28],
[25,20,25,25,22,17,0,24,18],
[30,19,28,25,17,21,26,0,25],
[27,20,30,23,20,22,32,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,32,28,31,31,29,21],
[22,0,22,32,29,25,26,27,25],
[24,28,0,28,26,31,24,30,21],
[18,18,22,0,24,20,16,20,17],
[22,21,24,26,0,23,24,24,21],
[19,25,19,30,27,0,22,24,22],
[19,24,26,34,26,28,0,28,25],
[21,23,20,30,26,26,22,0,21],
[29,25,29,33,29,28,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,28,28,26,28,21,30,29],
[22,0,21,29,23,27,26,25,25],
[22,29,0,27,21,27,24,29,24],
[22,21,23,0,21,27,22,22,21],
[24,27,29,29,0,29,25,27,26],
[22,23,23,23,21,0,19,25,24],
[29,24,26,28,25,31,0,31,26],
[20,25,21,28,23,25,19,0,24],
[21,25,26,29,24,26,24,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,25,24,26,28,27,26,28],
[22,0,28,28,27,26,26,29,27],
[25,22,0,23,22,24,21,20,24],
[26,22,27,0,23,29,23,26,24],
[24,23,28,27,0,27,22,25,29],
[22,24,26,21,23,0,20,21,24],
[23,24,29,27,28,30,0,26,27],
[24,21,30,24,25,29,24,0,23],
[22,23,26,26,21,26,23,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,18,22,21,24,20,19,26],
[21,0,21,20,21,27,20,23,18],
[32,29,0,25,25,30,22,25,37],
[28,30,25,0,24,25,23,25,28],
[29,29,25,26,0,25,27,22,26],
[26,23,20,25,25,0,22,15,26],
[30,30,28,27,23,28,0,29,29],
[31,27,25,25,28,35,21,0,31],
[24,32,13,22,24,24,21,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,28,27,23,31,27,26,28],
[21,0,28,27,25,24,26,26,26],
[22,22,0,25,24,28,25,25,22],
[23,23,25,0,24,33,24,24,24],
[27,25,26,26,0,32,21,28,26],
[19,26,22,17,18,0,21,21,22],
[23,24,25,26,29,29,0,25,25],
[24,24,25,26,22,29,25,0,23],
[22,24,28,26,24,28,25,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,24,28,26,27,30,27,14],
[18,0,24,16,21,18,13,23,19],
[26,26,0,22,25,31,24,28,25],
[22,34,28,0,23,23,23,32,24],
[24,29,25,27,0,24,29,33,25],
[23,32,19,27,26,0,22,32,29],
[20,37,26,27,21,28,0,26,16],
[23,27,22,18,17,18,24,0,19],
[36,31,25,26,25,21,34,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,22,25,25,23,22,24,23],
[27,0,19,26,27,23,26,22,28],
[28,31,0,23,29,28,27,28,29],
[25,24,27,0,29,24,27,28,27],
[25,23,21,21,0,23,24,27,23],
[27,27,22,26,27,0,24,29,26],
[28,24,23,23,26,26,0,30,26],
[26,28,22,22,23,21,20,0,25],
[27,22,21,23,27,24,24,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,22,22,26,28,27,32],
[24,0,25,21,22,23,23,22,20],
[25,25,0,23,23,21,24,24,26],
[28,29,27,0,21,23,24,24,27],
[28,28,27,29,0,29,32,24,29],
[24,27,29,27,21,0,23,27,26],
[22,27,26,26,18,27,0,28,23],
[23,28,26,26,26,23,22,0,26],
[18,30,24,23,21,24,27,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,25,50,25,50,0,50,50],
[0,0,25,25,0,25,0,50,25],
[25,25,0,50,25,25,25,25,25],
[0,25,0,0,25,25,0,25,25],
[25,50,25,25,0,25,25,50,25],
[0,25,25,25,25,0,0,25,0],
[50,50,25,50,25,50,0,50,50],
[0,0,25,25,0,25,0,0,25],
[0,25,25,25,25,50,0,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,22,15,17,19,16,20],
[33,0,25,27,24,26,26,26,29],
[31,25,0,30,24,22,25,21,25],
[28,23,20,0,20,22,22,20,23],
[35,26,26,30,0,25,28,27,25],
[33,24,28,28,25,0,25,28,25],
[31,24,25,28,22,25,0,22,27],
[34,24,29,30,23,22,28,0,24],
[30,21,25,27,25,25,23,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,27,33,34,30,24,28,33],
[11,0,24,22,26,36,24,16,17],
[23,26,0,37,34,32,34,31,34],
[17,28,13,0,26,41,21,26,15],
[16,24,16,24,0,33,24,19,25],
[20,14,18,9,17,0,20,14,15],
[26,26,16,29,26,30,0,35,21],
[22,34,19,24,31,36,15,0,26],
[17,33,16,35,25,35,29,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,27,22,26,15,24,17,23],
[34,0,30,27,30,30,27,21,22],
[23,20,0,20,26,14,18,22,26],
[28,23,30,0,35,25,24,22,24],
[24,20,24,15,0,19,22,17,26],
[35,20,36,25,31,0,27,26,31],
[26,23,32,26,28,23,0,24,29],
[33,29,28,28,33,24,26,0,33],
[27,28,24,26,24,19,21,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,0,25,25,25,25,25,0],
[50,0,0,25,50,25,25,25,25],
[50,50,0,50,50,25,50,25,25],
[25,25,0,0,25,25,0,25,25],
[25,0,0,25,0,25,25,25,25],
[25,25,25,25,25,0,25,25,0],
[25,25,0,50,25,25,0,25,25],
[25,25,25,25,25,25,25,0,0],
[50,25,25,25,25,50,25,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,34,21,23,27,26,25,34],
[20,0,25,17,23,24,23,23,26],
[16,25,0,24,21,20,19,23,34],
[29,33,26,0,34,24,26,32,41],
[27,27,29,16,0,27,19,27,32],
[23,26,30,26,23,0,23,21,29],
[24,27,31,24,31,27,0,30,30],
[25,27,27,18,23,29,20,0,23],
[16,24,16,9,18,21,20,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,29,20,29,29,34,32,29],
[32,0,33,28,25,33,33,40,24],
[21,17,0,25,21,23,40,29,7],
[30,22,25,0,28,32,36,28,23],
[21,25,29,22,0,31,29,36,24],
[21,17,27,18,19,0,38,30,22],
[16,17,10,14,21,12,0,26,9],
[18,10,21,22,14,20,24,0,14],
[21,26,43,27,26,28,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,26,29,29,30,26,25],
[21,0,26,25,21,23,24,21,22],
[24,24,0,27,28,21,27,21,24],
[24,25,23,0,25,21,23,20,26],
[21,29,22,25,0,20,27,21,22],
[21,27,29,29,30,0,31,20,24],
[20,26,23,27,23,19,0,17,20],
[24,29,29,30,29,30,33,0,29],
[25,28,26,24,28,26,30,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,26,28,28,23,33,22,33],
[34,0,34,29,24,35,35,34,35],
[24,16,0,28,24,23,18,24,40],
[22,21,22,0,24,25,40,24,35],
[22,26,26,26,0,21,33,22,33],
[27,15,27,25,29,0,39,34,34],
[17,15,32,10,17,11,0,22,28],
[28,16,26,26,28,16,28,0,33],
[17,15,10,15,17,16,22,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,23,25,25,23,29,26,26],
[21,0,24,18,21,23,28,18,23],
[27,26,0,24,23,22,36,24,27],
[25,32,26,0,28,20,34,23,27],
[25,29,27,22,0,31,27,24,23],
[27,27,28,30,19,0,29,25,28],
[21,22,14,16,23,21,0,20,24],
[24,32,26,27,26,25,30,0,25],
[24,27,23,23,27,22,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,16,18,16,32,25,39],
[32,0,18,7,18,16,28,28,31],
[33,32,0,25,32,22,35,30,33],
[34,43,25,0,29,28,31,35,36],
[32,32,18,21,0,21,29,32,34],
[34,34,28,22,29,0,42,34,34],
[18,22,15,19,21,8,0,22,34],
[25,22,20,15,18,16,28,0,35],
[11,19,17,14,16,16,16,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,18,21,26,14,20,26,25],
[28,0,23,19,20,20,15,21,25],
[32,27,0,24,20,22,24,27,27],
[29,31,26,0,31,26,23,25,31],
[24,30,30,19,0,23,23,25,28],
[36,30,28,24,27,0,28,33,27],
[30,35,26,27,27,22,0,25,28],
[24,29,23,25,25,17,25,0,27],
[25,25,23,19,22,23,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,28,29,26,20,33,16,25],
[30,0,31,31,29,26,30,25,23],
[22,19,0,24,20,20,28,13,20],
[21,19,26,0,23,20,20,20,24],
[24,21,30,27,0,20,27,13,26],
[30,24,30,30,30,0,26,27,31],
[17,20,22,30,23,24,0,18,21],
[34,25,37,30,37,23,32,0,32],
[25,27,30,26,24,19,29,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,25,14,23,13,19,21,19],
[36,0,27,23,25,24,31,22,23],
[25,23,0,19,21,27,23,21,23],
[36,27,31,0,32,24,25,28,25],
[27,25,29,18,0,18,19,23,28],
[37,26,23,26,32,0,28,26,27],
[31,19,27,25,31,22,0,23,23],
[29,28,29,22,27,24,27,0,22],
[31,27,27,25,22,23,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,25,25,50,25,25,25,50],
[0,0,25,25,25,25,25,25,0],
[25,25,0,0,25,0,0,0,25],
[25,25,50,0,50,50,25,50,25],
[0,25,25,0,0,25,0,25,0],
[25,25,50,0,25,0,25,25,25],
[25,25,50,25,50,25,0,50,25],
[25,25,50,0,25,25,0,0,25],
[0,50,25,25,50,25,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,29,19,28,29,26,25,32],
[22,0,27,24,30,32,25,25,23],
[21,23,0,22,22,24,23,23,24],
[31,26,28,0,26,33,22,23,25],
[22,20,28,24,0,26,23,30,22],
[21,18,26,17,24,0,19,21,24],
[24,25,27,28,27,31,0,29,29],
[25,25,27,27,20,29,21,0,25],
[18,27,26,25,28,26,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,25,21,25,28,26,26],
[26,0,25,25,20,27,27,25,22],
[24,25,0,28,24,28,33,26,21],
[25,25,22,0,20,29,25,24,22],
[29,30,26,30,0,31,33,27,25],
[25,23,22,21,19,0,23,24,18],
[22,23,17,25,17,27,0,22,22],
[24,25,24,26,23,26,28,0,24],
[24,28,29,28,25,32,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,27,29,25,28,25,26,31],
[25,0,26,27,24,28,26,25,24],
[23,24,0,27,22,26,25,22,27],
[21,23,23,0,18,27,20,18,19],
[25,26,28,32,0,27,22,24,28],
[22,22,24,23,23,0,22,23,21],
[25,24,25,30,28,28,0,26,28],
[24,25,28,32,26,27,24,0,27],
[19,26,23,31,22,29,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,31,29,31,29,25,33],
[25,0,27,30,31,25,23,25,34],
[24,23,0,27,31,30,26,28,30],
[19,20,23,0,27,29,21,27,27],
[21,19,19,23,0,22,24,25,29],
[19,25,20,21,28,0,24,29,23],
[21,27,24,29,26,26,0,22,30],
[25,25,22,23,25,21,28,0,26],
[17,16,20,23,21,27,20,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,20,24,23,24,29,24],
[25,0,28,27,22,25,25,29,30],
[25,22,0,26,24,22,23,25,24],
[30,23,24,0,22,23,20,26,25],
[26,28,26,28,0,28,21,27,21],
[27,25,28,27,22,0,22,29,27],
[26,25,27,30,29,28,0,28,27],
[21,21,25,24,23,21,22,0,23],
[26,20,26,25,29,23,23,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,25,21,24,22,27,15,27],
[31,0,25,24,24,20,24,14,28],
[25,25,0,27,28,22,25,23,28],
[29,26,23,0,28,26,24,19,28],
[26,26,22,22,0,19,25,21,28],
[28,30,28,24,31,0,29,25,36],
[23,26,25,26,25,21,0,20,28],
[35,36,27,31,29,25,30,0,38],
[23,22,22,22,22,14,22,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,28,23,21,23,30,32,29],
[23,0,28,22,20,25,29,29,26],
[22,22,0,18,18,23,18,24,18],
[27,28,32,0,31,24,29,33,27],
[29,30,32,19,0,24,27,30,31],
[27,25,27,26,26,0,20,32,33],
[20,21,32,21,23,30,0,32,29],
[18,21,26,17,20,18,18,0,22],
[21,24,32,23,19,17,21,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,30,26,28,27,30,27,24],
[22,0,29,25,26,25,29,30,23],
[20,21,0,24,24,23,27,29,22],
[24,25,26,0,22,22,28,27,24],
[22,24,26,28,0,28,26,33,25],
[23,25,27,28,22,0,27,30,24],
[20,21,23,22,24,23,0,24,19],
[23,20,21,23,17,20,26,0,20],
[26,27,28,26,25,26,31,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,29,24,25,24,23,26],
[25,0,30,25,25,25,26,16,30],
[27,20,0,28,20,23,31,11,29],
[21,25,22,0,25,31,26,29,28],
[26,25,30,25,0,36,35,25,33],
[25,25,27,19,14,0,23,16,19],
[26,24,19,24,15,27,0,15,26],
[27,34,39,21,25,34,35,0,38],
[24,20,21,22,17,31,24,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,20,30,21,26,27,27],
[21,0,21,18,24,18,22,20,20],
[24,29,0,23,28,25,28,28,21],
[30,32,27,0,26,25,26,24,24],
[20,26,22,24,0,18,21,27,15],
[29,32,25,25,32,0,29,35,24],
[24,28,22,24,29,21,0,29,17],
[23,30,22,26,23,15,21,0,19],
[23,30,29,26,35,26,33,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,27,18,19,16,18,18,19],
[30,0,28,21,28,18,25,23,22],
[23,22,0,21,28,13,19,20,19],
[32,29,29,0,30,24,30,27,22],
[31,22,22,20,0,22,18,23,20],
[34,32,37,26,28,0,22,26,26],
[32,25,31,20,32,28,0,25,21],
[32,27,30,23,27,24,25,0,20],
[31,28,31,28,30,24,29,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,28,30,31,27,23,26,23],
[22,0,22,27,26,25,23,20,27],
[22,28,0,32,30,25,23,23,25],
[20,23,18,0,25,19,20,20,22],
[19,24,20,25,0,28,19,24,25],
[23,25,25,31,22,0,21,27,24],
[27,27,27,30,31,29,0,26,23],
[24,30,27,30,26,23,24,0,24],
[27,23,25,28,25,26,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,30,26,25,25,14,25,21],
[27,0,34,24,31,31,27,32,30],
[20,16,0,16,20,20,12,21,24],
[24,26,34,0,29,31,25,30,24],
[25,19,30,21,0,28,18,22,27],
[25,19,30,19,22,0,16,25,22],
[36,23,38,25,32,34,0,38,28],
[25,18,29,20,28,25,12,0,24],
[29,20,26,26,23,28,22,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,4,11,22,20,8,8,25],
[31,0,20,13,27,30,19,10,31],
[46,30,0,26,36,31,23,27,35],
[39,37,24,0,33,37,37,28,31],
[28,23,14,17,0,32,29,23,31],
[30,20,19,13,18,0,24,14,22],
[42,31,27,13,21,26,0,8,25],
[42,40,23,22,27,36,42,0,29],
[25,19,15,19,19,28,25,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,30,22,27,30,28,31,24],
[29,0,27,27,25,30,32,27,31],
[20,23,0,23,23,27,24,27,25],
[28,23,27,0,23,32,30,31,29],
[23,25,27,27,0,32,32,30,27],
[20,20,23,18,18,0,19,24,25],
[22,18,26,20,18,31,0,25,22],
[19,23,23,19,20,26,25,0,26],
[26,19,25,21,23,25,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,10,19,19,21,30,41,40],
[31,0,31,31,31,31,40,41,21],
[40,19,0,19,29,21,30,41,40],
[31,19,31,0,19,40,31,41,31],
[31,19,21,31,0,21,21,41,21],
[29,19,29,10,29,0,21,29,19],
[20,10,20,19,29,29,0,29,19],
[9,9,9,9,9,21,21,0,21],
[10,29,10,19,29,31,31,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,25,0,50,25,25,25,50],
[0,0,0,0,0,0,0,0,25],
[25,50,0,25,50,50,50,50,25],
[50,50,25,0,50,50,50,50,50],
[0,50,0,0,0,0,0,25,25],
[25,50,0,0,50,0,25,50,25],
[25,50,0,0,50,25,0,25,25],
[25,50,0,0,25,0,25,0,25],
[0,25,25,0,25,25,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,25,31,23,26,31,31,29],
[18,0,16,32,21,11,25,29,20],
[25,34,0,31,25,22,29,24,24],
[19,18,19,0,15,13,27,28,20],
[27,29,25,35,0,25,26,33,31],
[24,39,28,37,25,0,28,31,29],
[19,25,21,23,24,22,0,31,27],
[19,21,26,22,17,19,19,0,20],
[21,30,26,30,19,21,23,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,23,38,22,26,34,18,29],
[41,0,32,44,25,33,37,26,37],
[27,18,0,42,23,23,33,16,36],
[12,6,8,0,12,15,27,10,15],
[28,25,27,38,0,26,30,26,38],
[24,17,27,35,24,0,30,24,28],
[16,13,17,23,20,20,0,18,20],
[32,24,34,40,24,26,32,0,32],
[21,13,14,35,12,22,30,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,27,22,25,24,34,26,29],
[29,0,26,24,27,24,30,29,32],
[23,24,0,24,28,23,24,27,34],
[28,26,26,0,30,22,33,26,31],
[25,23,22,20,0,22,27,29,28],
[26,26,27,28,28,0,28,24,31],
[16,20,26,17,23,22,0,16,26],
[24,21,23,24,21,26,34,0,32],
[21,18,16,19,22,19,24,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,50,25,25,25,25,0,25],
[25,0,25,25,25,25,25,25,25],
[0,25,0,25,25,25,25,0,25],
[25,25,25,0,0,25,0,0,25],
[25,25,25,50,0,25,25,25,25],
[25,25,25,25,25,0,25,0,25],
[25,25,25,50,25,25,0,25,25],
[50,25,50,50,25,50,25,0,25],
[25,25,25,25,25,25,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,30,39,41,32,21,9,10],
[18,0,20,18,31,20,20,9,9],
[20,30,0,39,30,30,30,20,30],
[11,32,11,0,32,32,11,0,10],
[9,19,20,18,0,20,9,9,9],
[18,30,20,18,30,0,11,9,9],
[29,30,20,39,41,39,0,9,19],
[41,41,30,50,41,41,41,0,19],
[40,41,20,40,41,41,31,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,27,28,28,38,31,27],
[24,0,11,18,18,11,23,19,20],
[25,39,0,30,30,26,31,30,34],
[23,32,20,0,21,23,38,31,30],
[22,32,20,29,0,24,35,34,33],
[22,39,24,27,26,0,34,31,28],
[12,27,19,12,15,16,0,29,15],
[19,31,20,19,16,19,21,0,21],
[23,30,16,20,17,22,35,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,22,28,24,29,19,22],
[26,0,30,21,28,32,19,23,20],
[24,20,0,22,16,26,32,18,27],
[28,29,28,0,28,31,31,22,28],
[22,22,34,22,0,30,27,29,22],
[26,18,24,19,20,0,26,22,20],
[21,31,18,19,23,24,0,20,24],
[31,27,32,28,21,28,30,0,31],
[28,30,23,22,28,30,26,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,23,25,19,27,27,27],
[26,0,28,22,22,23,23,28,27],
[25,22,0,21,25,27,25,22,20],
[27,28,29,0,24,30,27,32,28],
[25,28,25,26,0,28,27,30,30],
[31,27,23,20,22,0,29,30,24],
[23,27,25,23,23,21,0,31,32],
[23,22,28,18,20,20,19,0,21],
[23,23,30,22,20,26,18,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,18,35,26,43,33,34],
[28,0,39,22,46,40,42,39,40],
[25,11,0,27,39,32,39,27,36],
[32,28,23,0,35,32,42,27,36],
[15,4,11,15,0,23,35,24,27],
[24,10,18,18,27,0,29,27,36],
[7,8,11,8,15,21,0,16,24],
[17,11,23,23,26,23,34,0,31],
[16,10,14,14,23,14,26,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,29,23,26,19,26,22],
[28,0,28,24,26,27,24,22,24],
[28,22,0,29,23,21,22,26,27],
[21,26,21,0,25,23,25,23,26],
[27,24,27,25,0,24,21,22,23],
[24,23,29,27,26,0,19,23,26],
[31,26,28,25,29,31,0,28,29],
[24,28,24,27,28,27,22,0,25],
[28,26,23,24,27,24,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,29,28,27,26,22,27],
[26,0,33,26,31,28,25,20,29],
[22,17,0,20,22,17,16,18,21],
[21,24,30,0,26,17,27,19,29],
[22,19,28,24,0,18,28,24,21],
[23,22,33,33,32,0,30,27,30],
[24,25,34,23,22,20,0,21,21],
[28,30,32,31,26,23,29,0,21],
[23,21,29,21,29,20,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,24,15,14,14,26,14,23],
[27,0,25,30,18,17,30,19,21],
[26,25,0,15,20,20,24,21,16],
[35,20,35,0,22,20,30,23,24],
[36,32,30,28,0,27,35,26,22],
[36,33,30,30,23,0,34,27,23],
[24,20,26,20,15,16,0,23,16],
[36,31,29,27,24,23,27,0,25],
[27,29,34,26,28,27,34,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,24,21,16,22,19,24],
[29,0,23,28,24,18,24,17,19],
[29,27,0,23,22,20,30,24,26],
[26,22,27,0,18,22,27,19,27],
[29,26,28,32,0,28,27,25,26],
[34,32,30,28,22,0,31,26,30],
[28,26,20,23,23,19,0,22,24],
[31,33,26,31,25,24,28,0,30],
[26,31,24,23,24,20,26,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,27,27,26,33,29,28,29],
[27,0,26,26,19,29,31,30,30],
[23,24,0,21,23,24,26,25,23],
[23,24,29,0,25,28,30,29,28],
[24,31,27,25,0,26,29,28,27],
[17,21,26,22,24,0,26,26,29],
[21,19,24,20,21,24,0,23,22],
[22,20,25,21,22,24,27,0,28],
[21,20,27,22,23,21,28,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,24,24,18,33,19,18,22],
[32,0,31,25,20,30,28,27,30],
[26,19,0,23,22,23,23,15,24],
[26,25,27,0,20,25,23,25,25],
[32,30,28,30,0,32,30,22,23],
[17,20,27,25,18,0,17,18,24],
[31,22,27,27,20,33,0,26,26],
[32,23,35,25,28,32,24,0,26],
[28,20,26,25,27,26,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,31,24,24,28,34,21,29],
[22,0,26,25,26,22,31,24,22],
[19,24,0,19,21,27,35,19,31],
[26,25,31,0,28,32,38,27,31],
[26,24,29,22,0,30,36,27,34],
[22,28,23,18,20,0,29,25,27],
[16,19,15,12,14,21,0,22,19],
[29,26,31,23,23,25,28,0,31],
[21,28,19,19,16,23,31,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,25,25,26,32,30,22],
[23,0,26,24,23,21,28,27,28],
[23,24,0,20,24,21,27,27,26],
[25,26,30,0,24,24,30,30,26],
[25,27,26,26,0,21,27,30,27],
[24,29,29,26,29,0,32,33,21],
[18,22,23,20,23,18,0,30,21],
[20,23,23,20,20,17,20,0,20],
[28,22,24,24,23,29,29,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,23,28,22,28,28,27],
[26,0,26,16,22,19,30,22,24],
[27,24,0,22,24,21,31,26,25],
[27,34,28,0,24,24,32,32,31],
[22,28,26,26,0,22,30,26,28],
[28,31,29,26,28,0,28,26,25],
[22,20,19,18,20,22,0,25,20],
[22,28,24,18,24,24,25,0,21],
[23,26,25,19,22,25,30,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,20,26,18,26,13,17,21],
[24,0,28,33,21,31,25,26,27],
[30,22,0,32,22,32,23,19,31],
[24,17,18,0,24,26,17,16,24],
[32,29,28,26,0,32,22,27,27],
[24,19,18,24,18,0,10,16,15],
[37,25,27,33,28,40,0,25,33],
[33,24,31,34,23,34,25,0,26],
[29,23,19,26,23,35,17,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,35,30,30,35,21,30,26],
[0,0,17,12,27,15,12,24,26],
[15,33,0,19,21,22,19,27,17],
[20,38,31,0,30,23,20,20,21],
[20,23,29,20,0,19,20,29,21],
[15,35,28,27,31,0,28,27,25],
[29,38,31,30,30,22,0,25,25],
[20,26,23,30,21,23,25,0,21],
[24,24,33,29,29,25,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,41,31,24,31,26,28,25],
[20,0,28,32,21,21,23,29,23],
[9,22,0,25,12,19,13,22,16],
[19,18,25,0,13,17,21,20,17],
[26,29,38,37,0,22,29,30,29],
[19,29,31,33,28,0,22,23,24],
[24,27,37,29,21,28,0,27,25],
[22,21,28,30,20,27,23,0,21],
[25,27,34,33,21,26,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,22,19,11,12,24,21],
[35,0,31,33,30,25,24,32,36],
[28,19,0,24,25,20,15,26,24],
[28,17,26,0,18,15,21,27,29],
[31,20,25,32,0,28,26,29,28],
[39,25,30,35,22,0,19,31,29],
[38,26,35,29,24,31,0,30,33],
[26,18,24,23,21,19,20,0,30],
[29,14,26,21,22,21,17,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,26,26,19,27,26,28,29],
[29,0,19,32,19,27,27,28,31],
[24,31,0,27,28,29,30,32,28],
[24,18,23,0,15,21,22,25,26],
[31,31,22,35,0,27,29,32,33],
[23,23,21,29,23,0,24,26,31],
[24,23,20,28,21,26,0,27,28],
[22,22,18,25,18,24,23,0,27],
[21,19,22,24,17,19,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,31,22,16,25,27,20,30],
[22,0,29,28,21,27,26,28,25],
[19,21,0,14,17,14,20,19,23],
[28,22,36,0,25,29,26,34,26],
[34,29,33,25,0,27,31,27,32],
[25,23,36,21,23,0,21,25,18],
[23,24,30,24,19,29,0,28,28],
[30,22,31,16,23,25,22,0,28],
[20,25,27,24,18,32,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,24,24,21,29,36,35,32],
[23,0,21,19,23,15,33,23,17],
[26,29,0,21,23,27,29,35,29],
[26,31,29,0,21,24,25,32,24],
[29,27,27,29,0,20,30,33,32],
[21,35,23,26,30,0,29,38,30],
[14,17,21,25,20,21,0,22,26],
[15,27,15,18,17,12,28,0,20],
[18,33,21,26,18,20,24,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,21,24,17,25,19,22,25],
[27,0,21,27,22,25,23,22,25],
[29,29,0,27,23,27,28,27,27],
[26,23,23,0,21,26,23,28,26],
[33,28,27,29,0,27,24,24,26],
[25,25,23,24,23,0,22,23,26],
[31,27,22,27,26,28,0,26,26],
[28,28,23,22,26,27,24,0,26],
[25,25,23,24,24,24,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,25,19,27,22,24,26,24],
[27,0,26,30,28,26,26,30,25],
[25,24,0,22,22,21,24,23,25],
[31,20,28,0,26,25,24,24,31],
[23,22,28,24,0,23,19,27,24],
[28,24,29,25,27,0,22,29,27],
[26,24,26,26,31,28,0,32,26],
[24,20,27,26,23,21,18,0,27],
[26,25,25,19,26,23,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,21,27,34,28,26,22,31],
[23,0,25,25,33,26,28,21,19],
[29,25,0,23,35,29,23,20,24],
[23,25,27,0,33,29,23,22,28],
[16,17,15,17,0,18,22,20,16],
[22,24,21,21,32,0,20,21,22],
[24,22,27,27,28,30,0,22,24],
[28,29,30,28,30,29,28,0,25],
[19,31,26,22,34,28,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,31,21,25,33,27,31,27],
[23,0,27,22,17,27,24,24,26],
[19,23,0,24,20,27,22,27,21],
[29,28,26,0,23,25,24,24,27],
[25,33,30,27,0,25,33,25,32],
[17,23,23,25,25,0,24,21,19],
[23,26,28,26,17,26,0,20,18],
[19,26,23,26,25,29,30,0,22],
[23,24,29,23,18,31,32,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,28,24,23,23,27,25,21],
[27,0,27,24,25,27,24,29,26],
[22,23,0,20,24,22,22,23,24],
[26,26,30,0,24,31,26,29,24],
[27,25,26,26,0,28,27,30,29],
[27,23,28,19,22,0,25,21,18],
[23,26,28,24,23,25,0,27,24],
[25,21,27,21,20,29,23,0,26],
[29,24,26,26,21,32,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,22,31,25,27,31,30],
[25,0,31,21,26,20,29,31,25],
[22,19,0,21,23,18,23,21,25],
[28,29,29,0,32,23,31,32,33],
[19,24,27,18,0,20,25,30,27],
[25,30,32,27,30,0,33,33,31],
[23,21,27,19,25,17,0,19,20],
[19,19,29,18,20,17,31,0,27],
[20,25,25,17,23,19,30,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,20,24,37,27,25,33,28],
[20,0,21,30,20,25,28,25,26],
[30,29,0,33,35,30,37,34,25],
[26,20,17,0,24,23,32,23,29],
[13,30,15,26,0,31,20,22,27],
[23,25,20,27,19,0,33,20,27],
[25,22,13,18,30,17,0,23,18],
[17,25,16,27,28,30,27,0,23],
[22,24,25,21,23,23,32,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,20,30,21,28,16,35,22],
[14,0,14,14,21,22,22,20,7],
[30,36,0,16,29,28,16,28,30],
[20,36,34,0,27,28,29,27,28],
[29,29,21,23,0,21,22,21,23],
[22,28,22,22,29,0,15,13,15],
[34,28,34,21,28,35,0,34,14],
[15,30,22,23,29,37,16,0,23],
[28,43,20,22,27,35,36,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,29,31,33,22,32,30],
[25,0,31,36,36,35,26,38,33],
[20,19,0,30,31,33,25,36,35],
[21,14,20,0,30,25,23,32,22],
[19,14,19,20,0,24,20,31,21],
[17,15,17,25,26,0,25,36,24],
[28,24,25,27,30,25,0,28,31],
[18,12,14,18,19,14,22,0,20],
[20,17,15,28,29,26,19,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,25,26,25,21,26,22,22],
[27,0,24,31,28,26,25,26,30],
[25,26,0,21,34,27,29,30,29],
[24,19,29,0,28,19,25,25,22],
[25,22,16,22,0,19,25,24,26],
[29,24,23,31,31,0,31,24,34],
[24,25,21,25,25,19,0,23,26],
[28,24,20,25,26,26,27,0,26],
[28,20,21,28,24,16,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,19,27,25,21,23,25,26],
[27,0,20,30,25,24,28,30,28],
[31,30,0,33,28,25,32,32,29],
[23,20,17,0,22,23,22,25,17],
[25,25,22,28,0,19,25,30,23],
[29,26,25,27,31,0,30,29,27],
[27,22,18,28,25,20,0,28,20],
[25,20,18,25,20,21,22,0,17],
[24,22,21,33,27,23,30,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,24,25,29,26,28,30],
[26,0,28,33,29,25,29,32,29],
[26,22,0,34,33,26,26,29,30],
[26,17,16,0,23,18,32,29,20],
[25,21,17,27,0,23,28,29,21],
[21,25,24,32,27,0,26,31,25],
[24,21,24,18,22,24,0,32,25],
[22,18,21,21,21,19,18,0,22],
[20,21,20,30,29,25,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,27,21,27,25,21,28,20],
[25,0,30,21,20,24,28,26,17],
[23,20,0,22,28,20,25,29,17],
[29,29,28,0,29,25,23,30,25],
[23,30,22,21,0,20,24,28,21],
[25,26,30,25,30,0,24,30,28],
[29,22,25,27,26,26,0,30,26],
[22,24,21,20,22,20,20,0,19],
[30,33,33,25,29,22,24,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,21,25,24,22,22,23,19],
[23,0,22,25,25,25,25,32,24],
[29,28,0,31,30,24,26,35,29],
[25,25,19,0,26,20,20,27,23],
[26,25,20,24,0,23,26,31,28],
[28,25,26,30,27,0,26,30,29],
[28,25,24,30,24,24,0,29,28],
[27,18,15,23,19,20,21,0,20],
[31,26,21,27,22,21,22,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,12,12,13,24,21,12,17],
[23,0,25,16,8,23,26,12,23],
[38,25,0,12,10,23,33,22,22],
[38,34,38,0,28,38,37,28,23],
[37,42,40,22,0,32,36,27,33],
[26,27,27,12,18,0,27,16,25],
[29,24,17,13,14,23,0,19,10],
[38,38,28,22,23,34,31,0,33],
[33,27,28,27,17,25,40,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,22,28,37,35,20,38,31],
[14,0,15,16,14,18,19,14,16],
[28,35,0,28,25,28,22,32,28],
[22,34,22,0,26,25,26,31,31],
[13,36,25,24,0,22,29,26,39],
[15,32,22,25,28,0,17,26,28],
[30,31,28,24,21,33,0,29,23],
[12,36,18,19,24,24,21,0,24],
[19,34,22,19,11,22,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,25,0,0,25,25,25,25],
[50,0,50,25,50,25,50,50,50],
[25,0,0,0,0,0,25,25,0],
[50,25,50,0,50,25,50,50,50],
[50,0,50,0,0,25,50,50,25],
[25,25,50,25,25,0,25,50,50],
[25,0,25,0,0,25,0,25,25],
[25,0,25,0,0,0,25,0,0],
[25,0,50,0,25,0,25,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,8,24,9,17,17,17,16],
[33,0,16,32,25,32,33,33,32],
[42,34,0,33,26,25,34,42,41],
[26,18,17,0,9,9,17,9,16],
[41,25,24,41,0,33,33,33,32],
[33,18,25,41,17,0,25,25,33],
[33,17,16,33,17,25,0,33,33],
[33,17,8,41,17,25,17,0,24],
[34,18,9,34,18,17,17,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,19,28,29,34,25,30,33],
[26,0,25,26,28,25,22,28,30],
[31,25,0,28,31,26,25,30,28],
[22,24,22,0,28,33,25,34,31],
[21,22,19,22,0,20,19,19,26],
[16,25,24,17,30,0,21,32,34],
[25,28,25,25,31,29,0,32,34],
[20,22,20,16,31,18,18,0,31],
[17,20,22,19,24,16,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,30,25,27,28,23,26,19],
[23,0,27,27,24,26,22,23,21],
[20,23,0,29,27,24,23,24,17],
[25,23,21,0,24,23,21,23,22],
[23,26,23,26,0,27,22,26,17],
[22,24,26,27,23,0,20,26,18],
[27,28,27,29,28,30,0,27,25],
[24,27,26,27,24,24,23,0,21],
[31,29,33,28,33,32,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,23,27,28,27,29,26],
[25,0,27,20,24,23,23,25,22],
[24,23,0,21,21,24,25,26,23],
[27,30,29,0,23,24,27,26,27],
[23,26,29,27,0,26,28,27,21],
[22,27,26,26,24,0,26,28,23],
[23,27,25,23,22,24,0,22,24],
[21,25,24,24,23,22,28,0,28],
[24,28,27,23,29,27,26,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,21,21,26,23,30,23,23],
[23,0,20,28,25,29,27,23,25],
[29,30,0,26,25,22,33,27,26],
[29,22,24,0,30,28,35,27,27],
[24,25,25,20,0,23,29,23,22],
[27,21,28,22,27,0,35,25,28],
[20,23,17,15,21,15,0,17,20],
[27,27,23,23,27,25,33,0,25],
[27,25,24,23,28,22,30,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,33,37,24,30,26,31,34],
[20,0,31,33,37,36,23,26,26],
[17,19,0,19,24,17,11,12,12],
[13,17,31,0,18,35,23,21,24],
[26,13,26,32,0,25,18,17,22],
[20,14,33,15,25,0,14,4,15],
[24,27,39,27,32,36,0,32,28],
[19,24,38,29,33,46,18,0,22],
[16,24,38,26,28,35,22,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,25,50,25,50,50,50,25],
[50,0,25,50,25,50,50,50,25],
[25,25,0,50,50,50,25,50,25],
[0,0,0,0,0,25,25,25,0],
[25,25,0,50,0,25,25,25,25],
[0,0,0,25,25,0,25,50,0],
[0,0,25,25,25,25,0,50,25],
[0,0,0,25,25,0,0,0,0],
[25,25,25,50,25,50,25,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,21,26,22,19,30,13,23],
[24,0,20,24,23,20,30,9,22],
[29,30,0,22,28,19,30,17,18],
[24,26,28,0,25,16,28,16,22],
[28,27,22,25,0,20,32,15,18],
[31,30,31,34,30,0,34,25,20],
[20,20,20,22,18,16,0,13,12],
[37,41,33,34,35,25,37,0,29],
[27,28,32,28,32,30,38,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,27,22,24,26,28,24,24],
[22,0,26,25,27,24,26,27,25],
[23,24,0,23,23,24,26,26,25],
[28,25,27,0,28,27,24,24,25],
[26,23,27,22,0,24,21,23,22],
[24,26,26,23,26,0,24,21,21],
[22,24,24,26,29,26,0,24,26],
[26,23,24,26,27,29,26,0,27],
[26,25,25,25,28,29,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,31,28,18,19,22,25,22],
[25,0,25,30,23,23,22,22,24],
[19,25,0,23,22,22,21,21,21],
[22,20,27,0,19,20,20,25,19],
[32,27,28,31,0,25,25,28,28],
[31,27,28,30,25,0,26,29,23],
[28,28,29,30,25,24,0,21,23],
[25,28,29,25,22,21,29,0,26],
[28,26,29,31,22,27,27,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,34,34,22,27,28,36],
[25,0,19,22,20,11,17,21,30],
[25,31,0,29,33,29,29,24,27],
[16,28,21,0,25,17,17,12,20],
[16,30,17,25,0,27,22,28,31],
[28,39,21,33,23,0,27,29,36],
[23,33,21,33,28,23,0,33,29],
[22,29,26,38,22,21,17,0,29],
[14,20,23,30,19,14,21,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,19,26,33,33,34,27,41],
[26,0,18,16,26,26,17,17,24],
[31,32,0,24,41,31,22,34,31],
[24,34,26,0,43,24,17,17,33],
[17,24,9,7,0,17,17,17,24],
[17,24,19,26,33,0,18,19,26],
[16,33,28,33,33,32,0,19,25],
[23,33,16,33,33,31,31,0,23],
[9,26,19,17,26,24,25,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,25,19,23,21,25,31],
[29,0,32,21,23,26,29,25,33],
[25,18,0,25,18,22,26,21,18],
[25,29,25,0,21,25,28,30,24],
[31,27,32,29,0,28,27,29,25],
[27,24,28,25,22,0,29,27,25],
[29,21,24,22,23,21,0,25,28],
[25,25,29,20,21,23,25,0,27],
[19,17,32,26,25,25,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,27,24,27,31,28,23,25],
[25,0,25,27,24,28,26,22,22],
[23,25,0,27,30,28,29,29,28],
[26,23,23,0,25,24,23,23,23],
[23,26,20,25,0,24,23,22,25],
[19,22,22,26,26,0,27,22,20],
[22,24,21,27,27,23,0,21,19],
[27,28,21,27,28,28,29,0,26],
[25,28,22,27,25,30,31,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,29,31,27,24,21,22,29],
[24,0,31,25,27,26,21,22,26],
[21,19,0,23,25,19,16,19,21],
[19,25,27,0,23,21,19,18,24],
[23,23,25,27,0,24,23,22,28],
[26,24,31,29,26,0,25,26,24],
[29,29,34,31,27,25,0,27,31],
[28,28,31,32,28,24,23,0,24],
[21,24,29,26,22,26,19,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,22,27,22,26,21,20],
[26,0,22,25,21,22,26,21,25],
[26,28,0,28,23,30,29,26,24],
[28,25,22,0,24,24,25,27,23],
[23,29,27,26,0,31,29,26,25],
[28,28,20,26,19,0,27,24,23],
[24,24,21,25,21,23,0,19,19],
[29,29,24,23,24,26,31,0,22],
[30,25,26,27,25,27,31,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,27,21,19,21,24,19],
[31,0,25,28,30,31,32,34,29],
[29,25,0,27,23,29,29,30,30],
[23,22,23,0,23,26,28,24,24],
[29,20,27,27,0,27,28,25,25],
[31,19,21,24,23,0,26,27,28],
[29,18,21,22,22,24,0,22,32],
[26,16,20,26,25,23,28,0,22],
[31,21,20,26,25,22,18,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,37,24,22,18,22,20,29],
[23,0,22,23,18,19,25,21,29],
[13,28,0,21,26,16,21,21,34],
[26,27,29,0,19,23,16,18,28],
[28,32,24,31,0,23,24,23,32],
[32,31,34,27,27,0,22,25,33],
[28,25,29,34,26,28,0,35,31],
[30,29,29,32,27,25,15,0,28],
[21,21,16,22,18,17,19,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,29,24,22,23,23,25,26],
[22,0,23,22,22,19,18,23,21],
[21,27,0,27,25,23,20,25,21],
[26,28,23,0,27,21,26,28,26],
[28,28,25,23,0,22,19,28,27],
[27,31,27,29,28,0,22,25,26],
[27,32,30,24,31,28,0,30,26],
[25,27,25,22,22,25,20,0,29],
[24,29,29,24,23,24,24,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,28,16,20,25,26,25],
[28,0,26,30,24,29,26,29,31],
[25,24,0,27,22,28,28,28,29],
[22,20,23,0,24,20,21,26,25],
[34,26,28,26,0,28,25,28,28],
[30,21,22,30,22,0,28,25,20],
[25,24,22,29,25,22,0,25,23],
[24,21,22,24,22,25,25,0,28],
[25,19,21,25,22,30,27,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,37,25,30,28,31,27],
[25,0,21,25,20,28,24,27,23],
[29,29,0,28,24,29,35,25,29],
[13,25,22,0,23,26,21,22,17],
[25,30,26,27,0,30,24,26,25],
[20,22,21,24,20,0,22,23,16],
[22,26,15,29,26,28,0,24,19],
[19,23,25,28,24,27,26,0,24],
[23,27,21,33,25,34,31,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,14,21,24,23,15,14],
[25,0,20,15,18,34,25,26,27],
[29,30,0,20,22,26,19,22,17],
[36,35,30,0,29,34,28,27,23],
[29,32,28,21,0,31,28,26,24],
[26,16,24,16,19,0,24,21,21],
[27,25,31,22,22,26,0,29,14],
[35,24,28,23,24,29,21,0,17],
[36,23,33,27,26,29,36,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,20,22,17,27,24,28,33],
[16,0,19,10,11,16,25,21,36],
[30,31,0,26,25,32,34,34,34],
[28,40,24,0,32,28,32,35,43],
[33,39,25,18,0,19,34,35,42],
[23,34,18,22,31,0,20,21,29],
[26,25,16,18,16,30,0,23,40],
[22,29,16,15,15,29,27,0,40],
[17,14,16,7,8,21,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,16,23,25,25,28,27],
[23,0,32,25,25,29,28,30,29],
[23,18,0,22,20,30,26,19,24],
[34,25,28,0,30,29,26,29,31],
[27,25,30,20,0,30,30,25,32],
[25,21,20,21,20,0,22,23,21],
[25,22,24,24,20,28,0,23,20],
[22,20,31,21,25,27,27,0,26],
[23,21,26,19,18,29,30,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,26,31,24,29,29,23],
[26,0,31,18,22,28,33,34,30],
[27,19,0,32,22,37,28,33,26],
[24,32,18,0,21,28,23,28,37],
[19,28,28,29,0,32,27,29,24],
[26,22,13,22,18,0,27,23,23],
[21,17,22,27,23,23,0,18,26],
[21,16,17,22,21,27,32,0,25],
[27,20,24,13,26,27,24,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,17,9,27,17,19,17,17],
[24,0,8,23,33,17,10,23,23],
[33,42,0,42,50,27,19,23,35],
[41,27,8,0,44,18,10,17,37],
[23,17,0,6,0,0,10,14,6],
[33,33,23,32,50,0,26,33,25],
[31,40,31,40,40,24,0,40,40],
[33,27,27,33,36,17,10,0,35],
[33,27,15,13,44,25,10,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,18,16,25,21,15,20],
[27,0,20,22,25,25,28,21,20],
[33,30,0,18,27,25,27,17,23],
[32,28,32,0,32,32,34,25,24],
[34,25,23,18,0,21,26,17,19],
[25,25,25,18,29,0,25,17,20],
[29,22,23,16,24,25,0,13,19],
[35,29,33,25,33,33,37,0,30],
[30,30,27,26,31,30,31,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,29,30,38,25,28,25,25],
[28,0,27,26,35,27,27,25,29],
[21,23,0,25,35,25,25,19,29],
[20,24,25,0,32,22,26,20,32],
[12,15,15,18,0,27,17,19,20],
[25,23,25,28,23,0,26,18,28],
[22,23,25,24,33,24,0,26,30],
[25,25,31,30,31,32,24,0,31],
[25,21,21,18,30,22,20,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,22,29,17,18,16,23],
[26,0,20,27,24,18,23,17,21],
[27,30,0,33,26,27,19,21,30],
[28,23,17,0,19,24,20,19,23],
[21,26,24,31,0,21,21,15,27],
[33,32,23,26,29,0,25,27,29],
[32,27,31,30,29,25,0,22,25],
[34,33,29,31,35,23,28,0,33],
[27,29,20,27,23,21,25,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,30,19,34,39,24,23,19],
[28,0,35,34,44,44,23,38,23],
[20,15,0,19,39,33,20,23,20],
[31,16,31,0,37,39,29,34,27],
[16,6,11,13,0,34,10,23,10],
[11,6,17,11,16,0,11,21,11],
[26,27,30,21,40,39,0,30,22],
[27,12,27,16,27,29,20,0,21],
[31,27,30,23,40,39,28,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,25,20,33,32,17,29,23],
[23,0,34,14,22,29,28,34,25],
[25,16,0,18,22,25,24,30,17],
[30,36,32,0,28,26,38,38,25],
[17,28,28,22,0,23,28,28,22],
[18,21,25,24,27,0,29,31,25],
[33,22,26,12,22,21,0,21,25],
[21,16,20,12,22,19,29,0,19],
[27,25,33,25,28,25,25,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,20,22,16,27,17,15,26],
[31,0,26,32,28,33,28,23,30],
[30,24,0,23,25,33,19,23,22],
[28,18,27,0,25,29,23,16,28],
[34,22,25,25,0,32,27,27,27],
[23,17,17,21,18,0,18,12,16],
[33,22,31,27,23,32,0,24,24],
[35,27,27,34,23,38,26,0,26],
[24,20,28,22,23,34,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,22,18,10,11,18,14,18],
[30,0,28,22,23,14,13,19,20],
[28,22,0,21,25,19,23,22,22],
[32,28,29,0,20,26,24,30,28],
[40,27,25,30,0,21,22,33,25],
[39,36,31,24,29,0,26,31,30],
[32,37,27,26,28,24,0,26,26],
[36,31,28,20,17,19,24,0,26],
[32,30,28,22,25,20,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,22,31,34,29,29,25],
[26,0,21,24,27,27,27,28,24],
[22,29,0,19,27,28,25,25,22],
[28,26,31,0,28,30,25,34,24],
[19,23,23,22,0,26,21,27,25],
[16,23,22,20,24,0,25,24,25],
[21,23,25,25,29,25,0,27,24],
[21,22,25,16,23,26,23,0,23],
[25,26,28,26,25,25,26,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,20,27,24,18,27,26,26],
[26,0,23,25,23,25,27,23,20],
[30,27,0,27,27,21,29,27,23],
[23,25,23,0,21,19,25,19,19],
[26,27,23,29,0,15,27,25,24],
[32,25,29,31,35,0,30,28,25],
[23,23,21,25,23,20,0,22,19],
[24,27,23,31,25,22,28,0,26],
[24,30,27,31,26,25,31,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,30,27,22,27,29,23,26],
[24,0,18,24,23,25,31,25,30],
[20,32,0,27,18,21,28,22,28],
[23,26,23,0,22,23,31,29,24],
[28,27,32,28,0,30,31,25,37],
[23,25,29,27,20,0,27,23,25],
[21,19,22,19,19,23,0,27,23],
[27,25,28,21,25,27,23,0,26],
[24,20,22,26,13,25,27,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,32,29,29,27,24,22],
[24,0,28,30,25,28,24,25,25],
[25,22,0,30,28,27,24,29,21],
[18,20,20,0,21,21,20,19,18],
[21,25,22,29,0,25,23,24,21],
[21,22,23,29,25,0,18,24,23],
[23,26,26,30,27,32,0,30,20],
[26,25,21,31,26,26,20,0,22],
[28,25,29,32,29,27,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,23,26,19,28,28,19,22],
[19,0,25,27,22,15,20,19,21],
[27,25,0,23,20,19,17,22,16],
[24,23,27,0,21,22,22,23,22],
[31,28,30,29,0,24,26,28,26],
[22,35,31,28,26,0,23,28,23],
[22,30,33,28,24,27,0,27,23],
[31,31,28,27,22,22,23,0,22],
[28,29,34,28,24,27,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,24,31,26,9,20,26,18],
[24,0,30,27,27,28,31,31,23],
[26,20,0,25,30,19,17,20,25],
[19,23,25,0,22,10,22,21,18],
[24,23,20,28,0,24,19,28,32],
[41,22,31,40,26,0,26,26,26],
[30,19,33,28,31,24,0,24,22],
[24,19,30,29,22,24,26,0,23],
[32,27,25,32,18,24,28,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,19,31,26,29,24,24],
[21,0,26,26,24,24,24,25,24],
[24,24,0,18,24,23,25,27,28],
[31,24,32,0,31,27,30,22,29],
[19,26,26,19,0,23,28,22,24],
[24,26,27,23,27,0,25,23,27],
[21,26,25,20,22,25,0,22,15],
[26,25,23,28,28,27,28,0,27],
[26,26,22,21,26,23,35,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,29,25,26,33,29,19,21],
[17,0,24,18,25,20,13,22,12],
[21,26,0,27,24,24,24,34,20],
[25,32,23,0,25,26,29,27,21],
[24,25,26,25,0,28,21,24,20],
[17,30,26,24,22,0,23,21,27],
[21,37,26,21,29,27,0,28,34],
[31,28,16,23,26,29,22,0,21],
[29,38,30,29,30,23,16,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,21,26,21,25,25,24,26],
[21,0,20,23,23,28,24,23,23],
[29,30,0,31,23,29,25,31,25],
[24,27,19,0,25,25,25,28,23],
[29,27,27,25,0,32,26,31,25],
[25,22,21,25,18,0,22,21,24],
[25,26,25,25,24,28,0,30,26],
[26,27,19,22,19,29,20,0,26],
[24,27,25,27,25,26,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,27,21,27,28,26,24,36],
[24,0,26,22,30,28,27,25,28],
[23,24,0,19,30,29,26,23,29],
[29,28,31,0,31,28,25,20,34],
[23,20,20,19,0,21,22,19,29],
[22,22,21,22,29,0,19,15,29],
[24,23,24,25,28,31,0,29,30],
[26,25,27,30,31,35,21,0,33],
[14,22,21,16,21,21,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,27,24,21,24,21,18],
[28,0,22,23,21,25,21,26,26],
[25,28,0,30,23,26,26,26,23],
[23,27,20,0,23,22,26,22,23],
[26,29,27,27,0,26,25,28,26],
[29,25,24,28,24,0,31,26,19],
[26,29,24,24,25,19,0,27,20],
[29,24,24,28,22,24,23,0,22],
[32,24,27,27,24,31,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,26,30,30,30,31,25,27],
[17,0,23,29,23,33,28,24,32],
[24,27,0,31,29,30,27,24,27],
[20,21,19,0,25,27,22,21,23],
[20,27,21,25,0,30,27,22,27],
[20,17,20,23,20,0,25,16,21],
[19,22,23,28,23,25,0,21,27],
[25,26,26,29,28,34,29,0,30],
[23,18,23,27,23,29,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,28,23,23,20,23,25],
[25,0,26,25,29,25,26,24,26],
[27,24,0,30,24,24,24,30,32],
[22,25,20,0,25,23,24,29,24],
[27,21,26,25,0,23,25,25,26],
[27,25,26,27,27,0,23,23,29],
[30,24,26,26,25,27,0,20,29],
[27,26,20,21,25,27,30,0,27],
[25,24,18,26,24,21,21,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,25,23,19,19,26,25,20],
[31,0,29,37,23,22,32,35,27],
[25,21,0,29,15,18,29,30,23],
[27,13,21,0,18,21,35,23,14],
[31,27,35,32,0,23,34,34,23],
[31,28,32,29,27,0,32,30,20],
[24,18,21,15,16,18,0,21,13],
[25,15,20,27,16,20,29,0,17],
[30,23,27,36,27,30,37,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,32,29,34,34,23,27,24],
[11,0,26,15,24,23,14,8,17],
[18,24,0,21,22,16,9,15,7],
[21,35,29,0,24,33,24,24,26],
[16,26,28,26,0,25,18,18,16],
[16,27,34,17,25,0,23,18,22],
[27,36,41,26,32,27,0,18,11],
[23,42,35,26,32,32,32,0,22],
[26,33,43,24,34,28,39,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,27,26,24,31,22,17],
[25,0,22,28,23,18,30,21,22],
[27,28,0,28,26,25,31,20,25],
[23,22,22,0,26,19,31,20,23],
[24,27,24,24,0,21,31,20,24],
[26,32,25,31,29,0,28,25,26],
[19,20,19,19,19,22,0,20,19],
[28,29,30,30,30,25,30,0,22],
[33,28,25,27,26,24,31,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,27,26,13,27,23,23],
[21,0,27,24,26,14,26,25,25],
[25,23,0,11,33,17,29,22,22],
[23,26,39,0,31,25,38,24,30],
[24,24,17,19,0,15,25,28,21],
[37,36,33,25,35,0,37,34,37],
[23,24,21,12,25,13,0,25,19],
[27,25,28,26,22,16,25,0,21],
[27,25,28,20,29,13,31,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,30,37,28,22,35,25,34],
[24,0,23,36,27,31,37,31,35],
[20,27,0,34,26,21,34,15,37],
[13,14,16,0,20,14,27,18,25],
[22,23,24,30,0,22,25,25,31],
[28,19,29,36,28,0,27,16,34],
[15,13,16,23,25,23,0,10,26],
[25,19,35,32,25,34,40,0,39],
[16,15,13,25,19,16,24,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,32,29,23,32,27,23,27],
[24,0,21,6,18,17,20,8,21],
[18,29,0,25,11,19,13,20,15],
[21,44,25,0,22,27,31,17,28],
[27,32,39,28,0,30,32,26,25],
[18,33,31,23,20,0,34,15,34],
[23,30,37,19,18,16,0,27,25],
[27,42,30,33,24,35,23,0,23],
[23,29,35,22,25,16,25,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,29,27,22,28,33,30,33],
[22,0,26,13,25,27,27,20,25],
[21,24,0,20,22,23,19,15,25],
[23,37,30,0,32,34,28,32,32],
[28,25,28,18,0,22,25,22,31],
[22,23,27,16,28,0,23,25,25],
[17,23,31,22,25,27,0,30,35],
[20,30,35,18,28,25,20,0,23],
[17,25,25,18,19,25,15,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,25,30,21,25,27,22,22],
[23,0,21,26,25,19,28,25,21],
[25,29,0,31,26,26,26,26,25],
[20,24,19,0,17,20,23,19,23],
[29,25,24,33,0,28,26,28,25],
[25,31,24,30,22,0,31,29,26],
[23,22,24,27,24,19,0,21,22],
[28,25,24,31,22,21,29,0,23],
[28,29,25,27,25,24,28,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,16,22,24,21,14,23,26],
[21,0,15,20,26,21,22,19,21],
[34,35,0,26,26,30,20,31,29],
[28,30,24,0,28,24,22,17,24],
[26,24,24,22,0,18,26,22,31],
[29,29,20,26,32,0,22,24,27],
[36,28,30,28,24,28,0,26,26],
[27,31,19,33,28,26,24,0,31],
[24,29,21,26,19,23,24,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,21,29,15,30,22,20],
[28,0,21,21,30,15,24,31,22],
[28,29,0,23,36,27,24,32,27],
[29,29,27,0,33,24,20,28,25],
[21,20,14,17,0,19,27,19,16],
[35,35,23,26,31,0,32,30,30],
[20,26,26,30,23,18,0,20,21],
[28,19,18,22,31,20,30,0,17],
[30,28,23,25,34,20,29,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,26,21,27,25,18,26,28],
[20,0,23,25,26,20,22,21,22],
[24,27,0,23,29,22,27,21,21],
[29,25,27,0,34,25,32,30,26],
[23,24,21,16,0,17,18,20,20],
[25,30,28,25,33,0,22,25,29],
[32,28,23,18,32,28,0,20,22],
[24,29,29,20,30,25,30,0,34],
[22,28,29,24,30,21,28,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,30,22,27,22,25,24],
[30,0,20,32,27,28,27,30,31],
[29,30,0,33,30,29,23,31,27],
[20,18,17,0,20,25,17,26,17],
[28,23,20,30,0,31,27,33,23],
[23,22,21,25,19,0,20,26,26],
[28,23,27,33,23,30,0,29,25],
[25,20,19,24,17,24,21,0,22],
[26,19,23,33,27,24,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,38,12,13,25,37,25,25],
[50,0,38,38,25,38,50,38,38],
[12,12,0,24,13,12,37,37,25],
[38,12,26,0,13,13,25,25,13],
[37,25,37,37,0,37,37,37,37],
[25,12,38,37,13,0,37,50,37],
[13,0,13,25,13,13,0,25,25],
[25,12,13,25,13,0,25,0,25],
[25,12,25,37,13,13,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,13,21,24,19,18,22,27],
[31,0,27,27,27,24,30,35,31],
[37,23,0,29,31,26,35,37,31],
[29,23,21,0,31,25,25,26,28],
[26,23,19,19,0,17,21,26,22],
[31,26,24,25,33,0,32,27,41],
[32,20,15,25,29,18,0,23,31],
[28,15,13,24,24,23,27,0,24],
[23,19,19,22,28,9,19,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,15,11,25,21,13,17],
[31,0,23,29,23,32,25,28,27],
[36,27,0,31,27,28,33,31,17],
[35,21,19,0,35,29,24,30,25],
[39,27,23,15,0,29,23,30,28],
[25,18,22,21,21,0,22,21,12],
[29,25,17,26,27,28,0,30,22],
[37,22,19,20,20,29,20,0,25],
[33,23,33,25,22,38,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,20,17,18,22,13,21,27],
[24,0,16,22,18,18,14,19,33],
[30,34,0,27,33,32,21,25,37],
[33,28,23,0,37,30,26,29,33],
[32,32,17,13,0,20,25,21,28],
[28,32,18,20,30,0,23,28,33],
[37,36,29,24,25,27,0,27,37],
[29,31,25,21,29,22,23,0,35],
[23,17,13,17,22,17,13,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,23,23,30,17,28,24],
[24,0,27,27,24,31,23,27,23],
[25,23,0,32,25,32,16,25,24],
[27,23,18,0,20,29,17,27,15],
[27,26,25,30,0,32,18,35,21],
[20,19,18,21,18,0,16,18,19],
[33,27,34,33,32,34,0,27,22],
[22,23,25,23,15,32,23,0,26],
[26,27,26,35,29,31,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,24,18,20,26,19,25,13],
[44,0,35,37,35,41,34,33,25],
[26,15,0,23,26,29,24,23,21],
[32,13,27,0,23,25,21,26,24],
[30,15,24,27,0,28,24,29,24],
[24,9,21,25,22,0,14,16,17],
[31,16,26,29,26,36,0,33,24],
[25,17,27,24,21,34,17,0,17],
[37,25,29,26,26,33,26,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,20,32,20,28,29,29],
[25,0,28,27,31,25,25,36,29],
[22,22,0,22,17,27,18,25,29],
[30,23,28,0,25,25,22,28,32],
[18,19,33,25,0,30,26,31,29],
[30,25,23,25,20,0,23,31,27],
[22,25,32,28,24,27,0,39,30],
[21,14,25,22,19,19,11,0,25],
[21,21,21,18,21,23,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,29,21,32,19,18,32,24],
[27,0,29,28,24,26,26,31,31],
[21,21,0,19,21,24,20,25,23],
[29,22,31,0,24,18,17,32,21],
[18,26,29,26,0,19,21,23,25],
[31,24,26,32,31,0,18,34,25],
[32,24,30,33,29,32,0,32,30],
[18,19,25,18,27,16,18,0,18],
[26,19,27,29,25,25,20,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,24,28,31,21,22,29,28],
[21,0,24,32,32,26,29,25,28],
[26,26,0,27,23,24,20,26,23],
[22,18,23,0,28,20,22,23,22],
[19,18,27,22,0,15,21,22,23],
[29,24,26,30,35,0,26,29,25],
[28,21,30,28,29,24,0,25,28],
[21,25,24,27,28,21,25,0,23],
[22,22,27,28,27,25,22,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,21,25,23,25,15,27],
[28,0,31,28,27,30,24,27,32],
[25,19,0,26,30,29,20,21,30],
[29,22,24,0,28,35,25,19,26],
[25,23,20,22,0,23,20,21,26],
[27,20,21,15,27,0,26,23,32],
[25,26,30,25,30,24,0,16,20],
[35,23,29,31,29,27,34,0,32],
[23,18,20,24,24,18,30,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,16,20,28,21,21,22,22],
[33,0,25,24,26,30,29,26,30],
[34,25,0,27,23,25,25,29,28],
[30,26,23,0,24,26,27,19,26],
[22,24,27,26,0,18,21,21,18],
[29,20,25,24,32,0,26,21,29],
[29,21,25,23,29,24,0,24,26],
[28,24,21,31,29,29,26,0,24],
[28,20,22,24,32,21,24,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,32,30,20,20,12,12,20],
[20,0,42,10,20,28,32,22,10],
[18,8,0,18,20,8,18,20,8],
[20,40,32,0,40,28,32,32,28],
[30,30,30,10,0,30,30,42,10],
[30,22,42,22,20,0,32,12,22],
[38,18,32,18,20,18,0,20,18],
[38,28,30,18,8,38,30,0,18],
[30,40,42,22,40,28,32,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,38,26,39,25,24,18,21],
[29,0,42,27,28,24,28,26,31],
[12,8,0,16,21,13,6,10,14],
[24,23,34,0,20,31,20,26,31],
[11,22,29,30,0,25,16,21,23],
[25,26,37,19,25,0,20,16,24],
[26,22,44,30,34,30,0,17,21],
[32,24,40,24,29,34,33,0,23],
[29,19,36,19,27,26,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,27,25,23,20,19,20,20],
[29,0,31,32,31,24,28,28,26],
[23,19,0,22,28,19,23,25,18],
[25,18,28,0,31,30,27,27,28],
[27,19,22,19,0,19,18,25,19],
[30,26,31,20,31,0,27,31,29],
[31,22,27,23,32,23,0,25,23],
[30,22,25,23,25,19,25,0,21],
[30,24,32,22,31,21,27,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,31,26,19,31,24,24,28],
[24,0,41,30,28,42,28,27,31],
[19,9,0,24,18,27,20,19,26],
[24,20,26,0,15,30,25,16,22],
[31,22,32,35,0,32,29,24,23],
[19,8,23,20,18,0,16,18,18],
[26,22,30,25,21,34,0,31,27],
[26,23,31,34,26,32,19,0,25],
[22,19,24,28,27,32,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,26,19,25,20,19,25],
[24,0,25,7,19,25,20,6,18],
[24,25,0,20,26,18,12,13,25],
[24,43,30,0,43,18,30,31,31],
[31,31,24,7,0,18,18,25,25],
[25,25,32,32,32,0,26,19,31],
[30,30,38,20,32,24,0,25,30],
[31,44,37,19,25,31,25,0,25],
[25,32,25,19,25,19,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,15,28,15,21,23,24,15],
[23,0,11,18,7,23,14,21,14],
[35,39,0,31,20,24,26,35,15],
[22,32,19,0,22,24,24,26,11],
[35,43,30,28,0,23,29,32,30],
[29,27,26,26,27,0,33,30,21],
[27,36,24,26,21,17,0,21,18],
[26,29,15,24,18,20,29,0,20],
[35,36,35,39,20,29,32,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,29,25,31,28,31,30],
[25,0,24,30,28,30,29,28,29],
[26,26,0,35,25,29,28,26,32],
[21,20,15,0,24,27,20,22,25],
[25,22,25,26,0,29,27,25,26],
[19,20,21,23,21,0,27,26,20],
[22,21,22,30,23,23,0,24,25],
[19,22,24,28,25,24,26,0,24],
[20,21,18,25,24,30,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,32,26,30,32,26,30],
[25,0,26,29,29,24,32,23,27],
[22,24,0,30,26,28,27,24,22],
[18,21,20,0,22,24,27,19,23],
[24,21,24,28,0,27,30,19,24],
[20,26,22,26,23,0,27,23,20],
[18,18,23,23,20,23,0,21,17],
[24,27,26,31,31,27,29,0,23],
[20,23,28,27,26,30,33,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,37,41,23,30,23,38,30],
[28,0,32,33,23,22,16,33,25],
[13,18,0,30,19,19,15,26,19],
[9,17,20,0,10,19,15,29,18],
[27,27,31,40,0,19,25,37,27],
[20,28,31,31,31,0,18,38,23],
[27,34,35,35,25,32,0,35,23],
[12,17,24,21,13,12,15,0,23],
[20,25,31,32,23,27,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,22,26,20,20,21,28],
[24,0,25,26,31,22,24,21,30],
[24,25,0,27,29,23,24,22,33],
[28,24,23,0,26,27,25,24,24],
[24,19,21,24,0,20,24,19,28],
[30,28,27,23,30,0,27,28,29],
[30,26,26,25,26,23,0,26,26],
[29,29,28,26,31,22,24,0,35],
[22,20,17,26,22,21,24,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,16,26,24,21,26,27,26],
[16,0,11,13,19,23,21,20,18],
[34,39,0,29,26,22,35,28,34],
[24,37,21,0,26,29,27,28,33],
[26,31,24,24,0,23,26,21,25],
[29,27,28,21,27,0,36,23,29],
[24,29,15,23,24,14,0,24,20],
[23,30,22,22,29,27,26,0,22],
[24,32,16,17,25,21,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,20,23,26,23,13,19,19],
[27,0,18,38,33,31,20,36,28],
[30,32,0,27,38,30,18,18,36],
[27,12,23,0,31,24,19,23,18],
[24,17,12,19,0,23,15,13,18],
[27,19,20,26,27,0,15,15,18],
[37,30,32,31,35,35,0,29,20],
[31,14,32,27,37,35,21,0,20],
[31,22,14,32,32,32,30,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,31,23,28,20,30,27,23],
[27,0,31,21,26,27,30,26,28],
[19,19,0,15,28,27,26,25,25],
[27,29,35,0,30,30,29,28,25],
[22,24,22,20,0,24,24,27,19],
[30,23,23,20,26,0,30,28,24],
[20,20,24,21,26,20,0,27,18],
[23,24,25,22,23,22,23,0,19],
[27,22,25,25,31,26,32,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,30,24,30,24,30,27,25],
[28,0,29,26,28,23,26,23,25],
[20,21,0,23,26,22,25,21,21],
[26,24,27,0,29,22,25,24,24],
[20,22,24,21,0,19,26,25,20],
[26,27,28,28,31,0,27,24,27],
[20,24,25,25,24,23,0,22,23],
[23,27,29,26,25,26,28,0,25],
[25,25,29,26,30,23,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,13,0,27,39,25,25,26],
[25,0,24,11,38,50,25,25,26],
[37,26,0,0,14,39,25,25,26],
[50,39,50,0,38,50,25,37,39],
[23,12,36,12,0,36,25,23,26],
[11,0,11,0,14,0,25,11,26],
[25,25,25,25,25,25,0,12,39],
[25,25,25,13,27,39,38,0,39],
[24,24,24,11,24,24,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,25,20,23,26,30,25,28],
[27,0,20,27,25,22,34,20,26],
[25,30,0,30,29,26,32,27,29],
[30,23,20,0,25,37,30,31,22],
[27,25,21,25,0,19,31,21,33],
[24,28,24,13,31,0,30,26,19],
[20,16,18,20,19,20,0,18,27],
[25,30,23,19,29,24,32,0,28],
[22,24,21,28,17,31,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,27,28,32,13,37,26],
[14,0,19,23,22,22,16,22,21],
[10,31,0,22,27,27,20,22,26],
[23,27,28,0,26,27,10,25,26],
[22,28,23,24,0,23,13,32,26],
[18,28,23,23,27,0,21,29,28],
[37,34,30,40,37,29,0,38,22],
[13,28,28,25,18,21,12,0,18],
[24,29,24,24,24,22,28,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,31,20,31,19,27,16],
[21,0,28,30,22,33,29,25,22],
[24,22,0,29,25,16,20,21,28],
[19,20,21,0,21,21,12,14,17],
[30,28,25,29,0,27,21,23,17],
[19,17,34,29,23,0,26,21,26],
[31,21,30,38,29,24,0,28,25],
[23,25,29,36,27,29,22,0,26],
[34,28,22,33,33,24,25,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,18,14,15,13,15,12,16],
[36,0,42,19,36,22,26,26,28],
[32,8,0,15,28,21,16,14,25],
[36,31,35,0,32,29,24,26,35],
[35,14,22,18,0,18,24,22,24],
[37,28,29,21,32,0,29,19,37],
[35,24,34,26,26,21,0,22,22],
[38,24,36,24,28,31,28,0,36],
[34,22,25,15,26,13,28,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,31,29,21,25,26,31,22],
[28,0,24,35,26,24,26,35,20],
[19,26,0,23,23,22,22,23,26],
[21,15,27,0,18,30,15,31,19],
[29,24,27,32,0,27,29,25,22],
[25,26,28,20,23,0,25,28,24],
[24,24,28,35,21,25,0,32,23],
[19,15,27,19,25,22,18,0,14],
[28,30,24,31,28,26,27,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,31,20,22,17,21,30,24],
[27,0,31,29,22,20,18,31,23],
[19,19,0,23,18,19,17,24,24],
[30,21,27,0,25,15,21,32,27],
[28,28,32,25,0,17,25,33,28],
[33,30,31,35,33,0,23,36,30],
[29,32,33,29,25,27,0,30,32],
[20,19,26,18,17,14,20,0,20],
[26,27,26,23,22,20,18,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,21,17,16,19,25,15,20],
[39,0,18,22,17,32,32,20,23],
[29,32,0,28,20,35,31,25,38],
[33,28,22,0,33,32,23,21,34],
[34,33,30,17,0,29,29,21,25],
[31,18,15,18,21,0,27,19,31],
[25,18,19,27,21,23,0,19,24],
[35,30,25,29,29,31,31,0,29],
[30,27,12,16,25,19,26,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,25,23,26,21,22,25],
[26,0,23,32,28,28,27,23,23],
[26,27,0,23,28,25,27,26,26],
[25,18,27,0,23,28,22,22,24],
[27,22,22,27,0,27,25,22,22],
[24,22,25,22,23,0,24,26,24],
[29,23,23,28,25,26,0,24,26],
[28,27,24,28,28,24,26,0,26],
[25,27,24,26,28,26,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,28,20,19,29,19,17,25],
[28,0,32,26,16,21,22,29,31],
[22,18,0,19,12,27,18,19,15],
[30,24,31,0,26,36,31,38,36],
[31,34,38,24,0,33,35,35,34],
[21,29,23,14,17,0,19,26,27],
[31,28,32,19,15,31,0,27,31],
[33,21,31,12,15,24,23,0,29],
[25,19,35,14,16,23,19,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,24,30,20,27,24,36,20],
[27,0,22,24,25,14,23,31,26],
[26,28,0,31,24,25,36,38,24],
[20,26,19,0,18,25,20,28,24],
[30,25,26,32,0,26,27,34,27],
[23,36,25,25,24,0,19,29,20],
[26,27,14,30,23,31,0,30,25],
[14,19,12,22,16,21,20,0,17],
[30,24,26,26,23,30,25,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,22,20,21,30,23,17,24],
[22,0,16,20,18,31,26,21,19],
[28,34,0,27,30,35,33,25,30],
[30,30,23,0,29,38,28,27,27],
[29,32,20,21,0,33,26,24,19],
[20,19,15,12,17,0,22,12,16],
[27,24,17,22,24,28,0,16,22],
[33,29,25,23,26,38,34,0,26],
[26,31,20,23,31,34,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,37,25,13,12,25,12],
[37,0,25,37,50,38,37,37,25],
[37,25,0,37,25,37,12,38,12],
[13,13,13,0,25,13,0,25,25],
[25,0,25,25,0,25,13,13,12],
[37,12,13,37,25,0,25,25,25],
[38,13,38,50,37,25,0,38,25],
[25,13,12,25,37,25,12,0,12],
[38,25,38,25,38,25,25,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,17,19,19,18,14,19],
[30,0,25,23,24,23,24,20,25],
[26,25,0,22,26,22,29,30,20],
[33,27,28,0,20,26,29,25,26],
[31,26,24,30,0,26,28,28,32],
[31,27,28,24,24,0,31,29,31],
[32,26,21,21,22,19,0,32,26],
[36,30,20,25,22,21,18,0,29],
[31,25,30,24,18,19,24,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,21,18,26,20,25,26],
[28,0,23,25,21,25,21,29,22],
[27,27,0,29,26,25,23,25,19],
[29,25,21,0,20,28,21,27,21],
[32,29,24,30,0,32,25,28,26],
[24,25,25,22,18,0,19,24,28],
[30,29,27,29,25,31,0,30,31],
[25,21,25,23,22,26,20,0,21],
[24,28,31,29,24,22,19,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,19,25,30,26,18,30,36],
[26,0,25,19,24,19,17,31,24],
[31,25,0,19,25,33,24,38,31],
[25,31,31,0,36,31,18,36,25],
[20,26,25,14,0,32,20,39,26],
[24,31,17,19,18,0,17,18,24],
[32,33,26,32,30,33,0,31,25],
[20,19,12,14,11,32,19,0,6],
[14,26,19,25,24,26,25,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,27,25,42,32,39,28,37],
[16,0,28,28,34,35,36,35,40],
[23,22,0,29,43,34,28,22,42],
[25,22,21,0,33,29,32,16,36],
[8,16,7,17,0,17,23,14,29],
[18,15,16,21,33,0,20,13,31],
[11,14,22,18,27,30,0,9,29],
[22,15,28,34,36,37,41,0,37],
[13,10,8,14,21,19,21,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,25,19,23,24,23,24,16],
[32,0,30,27,19,23,22,29,20],
[25,20,0,17,18,25,18,24,15],
[31,23,33,0,22,26,23,25,25],
[27,31,32,28,0,27,22,29,22],
[26,27,25,24,23,0,24,31,25],
[27,28,32,27,28,26,0,33,25],
[26,21,26,25,21,19,17,0,20],
[34,30,35,25,28,25,25,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,24,25,22,33,16,24,27],
[21,0,17,21,25,26,19,21,21],
[26,33,0,27,27,28,26,26,25],
[25,29,23,0,18,29,25,23,33],
[28,25,23,32,0,35,26,29,31],
[17,24,22,21,15,0,19,24,19],
[34,31,24,25,24,31,0,26,30],
[26,29,24,27,21,26,24,0,27],
[23,29,25,17,19,31,20,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,27,31,26,24,23,28,24],
[31,0,30,30,31,28,25,31,35],
[23,20,0,21,19,20,17,24,23],
[19,20,29,0,21,24,18,28,28],
[24,19,31,29,0,27,28,24,28],
[26,22,30,26,23,0,28,30,26],
[27,25,33,32,22,22,0,26,30],
[22,19,26,22,26,20,24,0,24],
[26,15,27,22,22,24,20,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,31,21,29,27,30,25,21],
[22,0,19,20,23,18,24,29,18],
[19,31,0,19,27,15,23,26,18],
[29,30,31,0,24,27,26,26,22],
[21,27,23,26,0,22,24,26,19],
[23,32,35,23,28,0,28,27,21],
[20,26,27,24,26,22,0,21,20],
[25,21,24,24,24,23,29,0,26],
[29,32,32,28,31,29,30,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,22,22,28,26,21,22,22],
[32,0,27,25,29,25,19,20,27],
[28,23,0,24,25,28,19,20,23],
[28,25,26,0,30,27,18,20,21],
[22,21,25,20,0,20,17,18,16],
[24,25,22,23,30,0,19,25,21],
[29,31,31,32,33,31,0,27,22],
[28,30,30,30,32,25,23,0,25],
[28,23,27,29,34,29,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,26,30,35,30,36,33,25],
[23,0,15,26,24,25,32,33,24],
[24,35,0,27,27,18,36,21,26],
[20,24,23,0,32,24,29,18,24],
[15,26,23,18,0,25,24,19,26],
[20,25,32,26,25,0,37,19,19],
[14,18,14,21,26,13,0,17,16],
[17,17,29,32,31,31,33,0,29],
[25,26,24,26,24,31,34,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,24,25,29,18,22,24],
[34,0,28,27,29,27,15,22,27],
[30,22,0,38,27,25,24,24,30],
[26,23,12,0,20,26,16,20,17],
[25,21,23,30,0,23,16,25,26],
[21,23,25,24,27,0,27,28,22],
[32,35,26,34,34,23,0,27,25],
[28,28,26,30,25,22,23,0,26],
[26,23,20,33,24,28,25,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,28,26,30,25,32,26,32],
[31,0,31,32,33,21,26,30,30],
[22,19,0,19,24,21,19,19,27],
[24,18,31,0,29,20,19,21,29],
[20,17,26,21,0,19,26,20,27],
[25,29,29,30,31,0,24,21,35],
[18,24,31,31,24,26,0,22,27],
[24,20,31,29,30,29,28,0,33],
[18,20,23,21,23,15,23,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,29,34,26,27,22,26,24],
[23,0,27,31,18,26,31,23,24],
[21,23,0,28,24,14,28,22,20],
[16,19,22,0,23,21,24,20,19],
[24,32,26,27,0,24,19,20,19],
[23,24,36,29,26,0,26,26,26],
[28,19,22,26,31,24,0,24,18],
[24,27,28,30,30,24,26,0,27],
[26,26,30,31,31,24,32,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,25,16,24,11,12,18],
[29,0,22,26,20,21,16,18,22],
[30,28,0,26,25,26,16,19,22],
[25,24,24,0,26,30,23,22,24],
[34,30,25,24,0,31,19,22,28],
[26,29,24,20,19,0,17,17,15],
[39,34,34,27,31,33,0,21,28],
[38,32,31,28,28,33,29,0,24],
[32,28,28,26,22,35,22,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,27,27,34,32,29,42],
[25,0,27,35,32,27,32,25,35],
[21,23,0,31,16,26,21,31,35],
[23,15,19,0,28,29,34,37,32],
[23,18,34,22,0,36,34,31,36],
[16,23,24,21,14,0,27,19,29],
[18,18,29,16,16,23,0,18,31],
[21,25,19,13,19,31,32,0,27],
[8,15,15,18,14,21,19,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,14,19,16,29,26,27,28],
[31,0,26,28,21,25,26,31,29],
[36,24,0,32,26,27,31,29,27],
[31,22,18,0,20,22,22,29,16],
[34,29,24,30,0,31,27,37,30],
[21,25,23,28,19,0,25,25,16],
[24,24,19,28,23,25,0,25,27],
[23,19,21,21,13,25,25,0,18],
[22,21,23,34,20,34,23,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,8,15,14,14,15,16,11],
[43,0,21,36,34,34,23,33,35],
[42,29,0,35,20,34,39,33,26],
[35,14,15,0,14,21,19,25,17],
[36,16,30,36,0,26,28,26,34],
[36,16,16,29,24,0,14,15,17],
[35,27,11,31,22,36,0,29,22],
[34,17,17,25,24,35,21,0,24],
[39,15,24,33,16,33,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,22,25,33,23,26,32,15],
[21,0,30,22,31,20,29,22,26],
[28,20,0,17,32,26,17,27,29],
[25,28,33,0,38,20,28,31,36],
[17,19,18,12,0,11,12,16,15],
[27,30,24,30,39,0,34,29,34],
[24,21,33,22,38,16,0,21,22],
[18,28,23,19,34,21,29,0,16],
[35,24,21,14,35,16,28,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,31,30,33,25,18,29,23],
[21,0,22,24,19,18,14,25,17],
[19,28,0,26,34,24,22,31,23],
[20,26,24,0,30,25,22,26,21],
[17,31,16,20,0,24,25,32,19],
[25,32,26,25,26,0,30,33,21],
[32,36,28,28,25,20,0,30,28],
[21,25,19,24,18,17,20,0,17],
[27,33,27,29,31,29,22,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,20,21,23,25,24,24],
[26,0,30,27,27,23,26,27,24],
[22,20,0,24,21,26,25,20,23],
[30,23,26,0,28,24,27,24,23],
[29,23,29,22,0,25,32,25,25],
[27,27,24,26,25,0,23,26,23],
[25,24,25,23,18,27,0,19,23],
[26,23,30,26,25,24,31,0,25],
[26,26,27,27,25,27,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,32,27,29,36,22,24,24],
[20,0,32,24,28,27,23,22,28],
[18,18,0,20,26,25,17,24,25],
[23,26,30,0,30,32,24,22,31],
[21,22,24,20,0,32,17,24,27],
[14,23,25,18,18,0,15,24,20],
[28,27,33,26,33,35,0,26,24],
[26,28,26,28,26,26,24,0,25],
[26,22,25,19,23,30,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,33,18,26,25,18,19],
[24,0,24,30,19,28,27,24,26],
[27,26,0,24,12,25,30,22,18],
[17,20,26,0,25,22,26,25,15],
[32,31,38,25,0,36,32,27,23],
[24,22,25,28,14,0,21,14,10],
[25,23,20,24,18,29,0,20,23],
[32,26,28,25,23,36,30,0,28],
[31,24,32,35,27,40,27,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,26,30,34,34,33,29,25],
[14,0,21,26,27,26,29,23,20],
[24,29,0,31,32,34,35,30,31],
[20,24,19,0,25,28,31,27,20],
[16,23,18,25,0,24,22,19,24],
[16,24,16,22,26,0,30,24,22],
[17,21,15,19,28,20,0,13,18],
[21,27,20,23,31,26,37,0,19],
[25,30,19,30,26,28,32,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,15,22,17,26,17,22],
[24,0,24,13,18,28,10,17,13],
[24,26,0,18,24,21,24,16,18],
[35,37,32,0,26,21,33,26,26],
[28,32,26,24,0,26,17,17,24],
[33,22,29,29,24,0,22,13,19],
[24,40,26,17,33,28,0,28,27],
[33,33,34,24,33,37,22,0,26],
[28,37,32,24,26,31,23,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,25,26,22,32,22,23],
[21,0,22,21,26,22,28,23,22],
[24,28,0,24,25,24,30,26,24],
[25,29,26,0,25,25,33,25,23],
[24,24,25,25,0,22,33,24,21],
[28,28,26,25,28,0,30,24,27],
[18,22,20,17,17,20,0,20,15],
[28,27,24,25,26,26,30,0,24],
[27,28,26,27,29,23,35,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,25,30,31,25,31,18,22],
[18,0,21,18,25,17,24,13,23],
[25,29,0,19,33,24,24,21,20],
[20,32,31,0,35,32,29,24,20],
[19,25,17,15,0,18,17,22,26],
[25,33,26,18,32,0,29,18,23],
[19,26,26,21,33,21,0,29,20],
[32,37,29,26,28,32,21,0,30],
[28,27,30,30,24,27,30,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,27,23,22,26,25,24,28],
[28,0,33,25,24,21,33,25,28],
[23,17,0,20,13,18,27,17,19],
[27,25,30,0,28,23,29,26,26],
[28,26,37,22,0,24,32,27,30],
[24,29,32,27,26,0,29,29,29],
[25,17,23,21,18,21,0,21,27],
[26,25,33,24,23,21,29,0,29],
[22,22,31,24,20,21,23,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,26,19,17,28,33,23,26],
[29,0,29,24,29,35,37,28,36],
[24,21,0,25,18,23,32,26,30],
[31,26,25,0,28,32,32,32,35],
[33,21,32,22,0,36,33,24,35],
[22,15,27,18,14,0,32,21,30],
[17,13,18,18,17,18,0,23,26],
[27,22,24,18,26,29,27,0,27],
[24,14,20,15,15,20,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,15,19,25,21,22,20,21],
[29,0,27,19,25,24,33,25,21],
[35,23,0,26,27,28,33,28,29],
[31,31,24,0,33,30,28,33,29],
[25,25,23,17,0,17,28,24,21],
[29,26,22,20,33,0,27,26,24],
[28,17,17,22,22,23,0,28,21],
[30,25,22,17,26,24,22,0,27],
[29,29,21,21,29,26,29,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,23,18,19,21,15,20],
[37,0,19,21,16,17,21,25,23],
[34,31,0,23,31,24,33,29,29],
[27,29,27,0,26,26,31,21,27],
[32,34,19,24,0,26,31,22,30],
[31,33,26,24,24,0,31,27,30],
[29,29,17,19,19,19,0,22,25],
[35,25,21,29,28,23,28,0,34],
[30,27,21,23,20,20,25,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,18,19,27,26,41,12,23],
[26,0,20,22,30,16,30,24,26],
[32,30,0,29,30,22,27,26,29],
[31,28,21,0,25,24,36,28,24],
[23,20,20,25,0,19,31,23,28],
[24,34,28,26,31,0,32,25,36],
[9,20,23,14,19,18,0,11,25],
[38,26,24,22,27,25,39,0,32],
[27,24,21,26,22,14,25,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,25,24,23,19,28,24,22],
[31,0,27,26,24,20,23,23,18],
[25,23,0,20,25,25,24,30,23],
[26,24,30,0,25,23,27,27,26],
[27,26,25,25,0,24,21,19,21],
[31,30,25,27,26,0,27,22,21],
[22,27,26,23,29,23,0,24,23],
[26,27,20,23,31,28,26,0,28],
[28,32,27,24,29,29,27,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,29,25,22,25,27,20,26],
[24,0,26,19,23,23,21,27,28],
[21,24,0,18,23,27,23,22,21],
[25,31,32,0,31,29,29,24,29],
[28,27,27,19,0,26,23,28,27],
[25,27,23,21,24,0,26,23,24],
[23,29,27,21,27,24,0,25,24],
[30,23,28,26,22,27,25,0,26],
[24,22,29,21,23,26,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,24,24,26,25,26,24],
[26,0,25,26,20,30,24,25,21],
[27,25,0,26,28,29,25,30,27],
[26,24,24,0,21,29,25,26,31],
[26,30,22,29,0,34,29,27,25],
[24,20,21,21,16,0,23,21,22],
[25,26,25,25,21,27,0,22,21],
[24,25,20,24,23,29,28,0,28],
[26,29,23,19,25,28,29,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,22,23,29,23,15,24],
[27,0,26,28,24,28,30,21,32],
[27,24,0,17,31,28,35,25,33],
[28,22,33,0,26,30,33,25,32],
[27,26,19,24,0,31,29,23,38],
[21,22,22,20,19,0,25,17,24],
[27,20,15,17,21,25,0,23,35],
[35,29,25,25,27,33,27,0,33],
[26,18,17,18,12,26,15,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,17,25,26,22,24,15,18],
[24,0,17,21,18,18,21,17,19],
[33,33,0,25,31,24,25,23,23],
[25,29,25,0,29,29,22,23,19],
[24,32,19,21,0,24,22,19,15],
[28,32,26,21,26,0,23,24,22],
[26,29,25,28,28,27,0,20,25],
[35,33,27,27,31,26,30,0,24],
[32,31,27,31,35,28,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,26,26,28,25,25,26,33],
[23,0,22,26,26,26,33,28,25],
[24,28,0,32,31,25,24,21,27],
[24,24,18,0,25,23,20,23,22],
[22,24,19,25,0,16,16,15,25],
[25,24,25,27,34,0,27,17,23],
[25,17,26,30,34,23,0,24,22],
[24,22,29,27,35,33,26,0,26],
[17,25,23,28,25,27,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,27,22,22,28,24,25,25],
[25,0,31,25,19,27,29,25,26],
[23,19,0,21,17,25,17,21,18],
[28,25,29,0,29,33,24,27,30],
[28,31,33,21,0,34,26,25,33],
[22,23,25,17,16,0,19,21,24],
[26,21,33,26,24,31,0,25,25],
[25,25,29,23,25,29,25,0,29],
[25,24,32,20,17,26,25,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,0,25,25,0,25,25,25],
[50,0,25,50,25,50,50,50,50],
[50,25,0,50,25,50,50,50,50],
[25,0,0,0,25,25,25,50,25],
[25,25,25,25,0,25,50,50,50],
[50,0,0,25,25,0,25,25,25],
[25,0,0,25,0,25,0,25,50],
[25,0,0,0,0,25,25,0,25],
[25,0,0,25,0,25,0,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,33,25,26,27,28,28,32],
[19,0,27,23,23,20,27,23,25],
[17,23,0,20,21,22,19,17,21],
[25,27,30,0,23,23,27,27,24],
[24,27,29,27,0,22,26,19,25],
[23,30,28,27,28,0,28,28,25],
[22,23,31,23,24,22,0,25,21],
[22,27,33,23,31,22,25,0,25],
[18,25,29,26,25,25,29,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,28,25,34,26,26,27,24],
[22,0,28,21,29,23,29,23,26],
[22,22,0,21,28,23,25,23,25],
[25,29,29,0,31,24,34,24,28],
[16,21,22,19,0,20,26,25,24],
[24,27,27,26,30,0,28,30,27],
[24,21,25,16,24,22,0,25,22],
[23,27,27,26,25,20,25,0,25],
[26,24,25,22,26,23,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,18,29,17,22,30,23,23],
[26,0,19,24,24,26,24,28,26],
[32,31,0,34,26,30,30,23,28],
[21,26,16,0,21,23,28,21,26],
[33,26,24,29,0,26,30,25,35],
[28,24,20,27,24,0,25,22,26],
[20,26,20,22,20,25,0,23,26],
[27,22,27,29,25,28,27,0,32],
[27,24,22,24,15,24,24,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,16,28,14,27,25,24],
[22,0,25,17,25,21,19,26,28],
[24,25,0,23,39,31,15,27,35],
[34,33,27,0,29,27,23,25,31],
[22,25,11,21,0,20,16,21,28],
[36,29,19,23,30,0,20,28,30],
[23,31,35,27,34,30,0,31,34],
[25,24,23,25,29,22,19,0,38],
[26,22,15,19,22,20,16,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,29,24,28,27,27,27],
[25,0,21,26,20,27,29,27,25],
[24,29,0,30,25,27,24,25,28],
[21,24,20,0,23,25,26,29,19],
[26,30,25,27,0,31,29,29,24],
[22,23,23,25,19,0,28,24,25],
[23,21,26,24,21,22,0,24,24],
[23,23,25,21,21,26,26,0,24],
[23,25,22,31,26,25,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,18,27,18,19,21,14],
[33,0,22,29,33,23,20,35,23],
[33,28,0,32,36,24,23,29,33],
[32,21,18,0,29,25,22,33,15],
[23,17,14,21,0,17,17,27,15],
[32,27,26,25,33,0,26,30,20],
[31,30,27,28,33,24,0,30,21],
[29,15,21,17,23,20,20,0,15],
[36,27,17,35,35,30,29,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,29,21,29,27,26,25,23],
[22,0,30,25,30,29,28,29,26],
[21,20,0,19,24,23,21,23,21],
[29,25,31,0,26,28,28,30,25],
[21,20,26,24,0,26,25,28,18],
[23,21,27,22,24,0,23,27,19],
[24,22,29,22,25,27,0,24,24],
[25,21,27,20,22,23,26,0,22],
[27,24,29,25,32,31,26,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,28,30,31,27,20,24,33],
[23,0,27,27,22,28,22,30,31],
[22,23,0,21,21,26,28,26,27],
[20,23,29,0,26,26,26,26,32],
[19,28,29,24,0,20,23,24,26],
[23,22,24,24,30,0,18,26,32],
[30,28,22,24,27,32,0,30,28],
[26,20,24,24,26,24,20,0,29],
[17,19,23,18,24,18,22,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,22,23,17,30,35,34,29],
[25,0,16,25,16,36,34,24,18],
[28,34,0,21,25,40,33,36,32],
[27,25,29,0,26,33,32,30,34],
[33,34,25,24,0,43,37,42,32],
[20,14,10,17,7,0,35,17,18],
[15,16,17,18,13,15,0,20,16],
[16,26,14,20,8,33,30,0,19],
[21,32,18,16,18,32,34,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,20,30,26,24,28,20,26],
[28,0,28,25,26,22,26,26,27],
[30,22,0,25,29,26,27,27,30],
[20,25,25,0,28,24,26,28,26],
[24,24,21,22,0,24,26,21,26],
[26,28,24,26,26,0,26,21,26],
[22,24,23,24,24,24,0,20,23],
[30,24,23,22,29,29,30,0,31],
[24,23,20,24,24,24,27,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,18,26,18,10,26,26,34],
[16,0,26,16,16,8,16,16,18],
[32,24,0,32,16,16,32,24,26],
[24,34,18,0,26,18,26,34,26],
[32,34,34,24,0,26,32,34,34],
[40,42,34,32,24,0,32,42,42],
[24,34,18,24,18,18,0,26,26],
[24,34,26,16,16,8,24,0,26],
[16,32,24,24,16,8,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,19,22,28,24,19,23,23],
[21,0,22,23,27,20,16,20,16],
[31,28,0,29,35,26,26,25,26],
[28,27,21,0,30,19,22,20,22],
[22,23,15,20,0,14,16,19,15],
[26,30,24,31,36,0,28,28,27],
[31,34,24,28,34,22,0,24,26],
[27,30,25,30,31,22,26,0,23],
[27,34,24,28,35,23,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,12,12,12,0,12,0,0],
[50,0,12,12,12,25,25,23,36],
[38,38,0,25,13,24,24,24,38],
[38,38,25,0,13,13,13,24,24],
[38,38,37,37,0,24,36,25,38],
[50,25,26,37,26,0,39,37,37],
[38,25,26,37,14,11,0,25,25],
[50,27,26,26,25,13,25,0,38],
[50,14,12,26,12,13,25,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,22,24,17,25,32,25,19],
[25,0,23,25,24,28,25,18,20],
[28,27,0,22,19,26,30,26,16],
[26,25,28,0,32,36,20,16,27],
[33,26,31,18,0,33,27,28,27],
[25,22,24,14,17,0,20,24,26],
[18,25,20,30,23,30,0,30,28],
[25,32,24,34,22,26,20,0,27],
[31,30,34,23,23,24,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,23,26,26,26,22,27,26],
[19,0,28,24,21,30,23,32,19],
[27,22,0,34,15,24,30,27,23],
[24,26,16,0,18,28,28,23,18],
[24,29,35,32,0,33,31,33,31],
[24,20,26,22,17,0,23,21,27],
[28,27,20,22,19,27,0,30,24],
[23,18,23,27,17,29,20,0,18],
[24,31,27,32,19,23,26,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,29,26,24,25,19,26,16],
[26,0,30,29,28,28,24,23,26],
[21,20,0,22,17,23,18,20,18],
[24,21,28,0,20,19,18,22,23],
[26,22,33,30,0,30,24,25,17],
[25,22,27,31,20,0,17,22,18],
[31,26,32,32,26,33,0,25,27],
[24,27,30,28,25,28,25,0,23],
[34,24,32,27,33,32,23,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,30,26,26,20,28,30,32],
[31,0,24,34,26,24,32,27,28],
[20,26,0,30,24,23,28,30,26],
[24,16,20,0,22,22,23,26,17],
[24,24,26,28,0,26,24,30,28],
[30,26,27,28,24,0,29,30,26],
[22,18,22,27,26,21,0,25,24],
[20,23,20,24,20,20,25,0,25],
[18,22,24,33,22,24,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,34,30,26,25,27,25,28],
[22,0,28,27,26,24,26,19,23],
[16,22,0,21,15,28,23,20,18],
[20,23,29,0,24,24,27,24,23],
[24,24,35,26,0,28,30,31,28],
[25,26,22,26,22,0,28,26,24],
[23,24,27,23,20,22,0,26,25],
[25,31,30,26,19,24,24,0,21],
[22,27,32,27,22,26,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,14,29,27,30,14,30,20],
[24,0,21,27,28,25,21,30,19],
[36,29,0,27,33,24,39,23,32],
[21,23,23,0,28,23,19,32,20],
[23,22,17,22,0,25,21,33,22],
[20,25,26,27,25,0,18,30,27],
[36,29,11,31,29,32,0,27,32],
[20,20,27,18,17,20,23,0,19],
[30,31,18,30,28,23,18,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,28,22,21,26,25,30,28],
[31,0,31,26,26,26,21,32,29],
[22,19,0,20,24,29,23,25,20],
[28,24,30,0,29,25,28,30,34],
[29,24,26,21,0,24,15,25,25],
[24,24,21,25,26,0,22,29,28],
[25,29,27,22,35,28,0,27,34],
[20,18,25,20,25,21,23,0,27],
[22,21,30,16,25,22,16,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,25,25,25,25,27,23,21],
[23,0,23,22,23,26,27,21,17],
[25,27,0,26,22,25,27,28,20],
[25,28,24,0,25,29,26,27,19],
[25,27,28,25,0,27,24,23,22],
[25,24,25,21,23,0,29,24,20],
[23,23,23,24,26,21,0,27,21],
[27,29,22,23,27,26,23,0,27],
[29,33,30,31,28,30,29,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,28,31,26,28,24,32,32],
[20,0,26,26,25,26,26,25,27],
[22,24,0,27,30,24,26,25,27],
[19,24,23,0,27,19,26,27,28],
[24,25,20,23,0,28,23,27,27],
[22,24,26,31,22,0,28,26,32],
[26,24,24,24,27,22,0,23,27],
[18,25,25,23,23,24,27,0,30],
[18,23,23,22,23,18,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,24,25,21,23,20,17],
[29,0,31,29,34,27,27,25,27],
[25,19,0,23,23,28,25,19,27],
[26,21,27,0,30,29,27,26,20],
[25,16,27,20,0,26,22,22,23],
[29,23,22,21,24,0,25,20,18],
[27,23,25,23,28,25,0,21,18],
[30,25,31,24,28,30,29,0,26],
[33,23,23,30,27,32,32,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,35,25,27,28,32,30,31],
[20,0,33,27,28,24,25,28,30],
[15,17,0,15,16,16,15,17,16],
[25,23,35,0,33,25,27,29,28],
[23,22,34,17,0,28,26,26,21],
[22,26,34,25,22,0,26,27,29],
[18,25,35,23,24,24,0,23,27],
[20,22,33,21,24,23,27,0,26],
[19,20,34,22,29,21,23,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,24,23,21,23,20,21,26],
[22,0,28,24,19,23,25,16,22],
[26,22,0,19,22,25,23,24,25],
[27,26,31,0,24,31,29,25,28],
[29,31,28,26,0,33,25,29,30],
[27,27,25,19,17,0,18,16,28],
[30,25,27,21,25,32,0,20,31],
[29,34,26,25,21,34,30,0,24],
[24,28,25,22,20,22,19,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,27,29,27,26,25,23,24],
[21,0,29,26,28,23,24,24,25],
[23,21,0,26,22,23,23,19,15],
[21,24,24,0,25,22,27,24,20],
[23,22,28,25,0,24,26,22,23],
[24,27,27,28,26,0,32,27,25],
[25,26,27,23,24,18,0,22,20],
[27,26,31,26,28,23,28,0,26],
[26,25,35,30,27,25,30,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,22,16,27,39,13,26,27],
[14,0,32,21,25,9,11,9,14],
[28,18,0,27,32,23,19,23,15],
[34,29,23,0,27,29,24,23,29],
[23,25,18,23,0,30,11,23,23],
[11,41,27,21,20,0,12,32,22],
[37,39,31,26,39,38,0,33,21],
[24,41,27,27,27,18,17,0,20],
[23,36,35,21,27,28,29,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,18,25,28,19,21,20],
[30,0,25,20,22,25,24,24,25],
[26,25,0,20,23,25,24,21,23],
[32,30,30,0,22,28,24,30,25],
[25,28,27,28,0,21,23,26,23],
[22,25,25,22,29,0,27,19,28],
[31,26,26,26,27,23,0,24,29],
[29,26,29,20,24,31,26,0,25],
[30,25,27,25,27,22,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,31,33,35,25,28,35,31],
[21,0,27,33,20,24,30,29,29],
[19,23,0,29,18,23,28,27,27],
[17,17,21,0,15,16,27,23,19],
[15,30,32,35,0,24,29,27,30],
[25,26,27,34,26,0,33,31,28],
[22,20,22,23,21,17,0,22,22],
[15,21,23,27,23,19,28,0,25],
[19,21,23,31,20,22,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,25,26,24,24,23,29,30],
[19,0,22,23,16,19,22,20,27],
[25,28,0,29,26,22,26,28,31],
[24,27,21,0,20,21,20,29,31],
[26,34,24,30,0,23,22,29,29],
[26,31,28,29,27,0,23,29,31],
[27,28,24,30,28,27,0,28,28],
[21,30,22,21,21,21,22,0,27],
[20,23,19,19,21,19,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,22,22,23,20,19,20],
[27,0,24,27,26,22,28,27,32],
[24,26,0,26,22,25,25,25,27],
[28,23,24,0,23,22,24,23,28],
[28,24,28,27,0,24,26,23,26],
[27,28,25,28,26,0,26,25,28],
[30,22,25,26,24,24,0,23,25],
[31,23,25,27,27,25,27,0,28],
[30,18,23,22,24,22,25,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,13,26,13,25,27,39,13],
[11,0,13,11,0,0,14,38,24],
[37,37,0,37,0,12,14,37,25],
[24,39,13,0,13,25,27,39,13],
[37,50,50,37,0,12,14,50,50],
[25,50,38,25,38,0,27,50,38],
[23,36,36,23,36,23,0,50,36],
[11,12,13,11,0,0,0,0,13],
[37,26,25,37,0,12,14,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,22,32,35,26,28,26],
[25,0,29,25,29,33,27,30,23],
[27,21,0,21,29,31,28,28,25],
[28,25,29,0,29,34,24,32,23],
[18,21,21,21,0,19,25,27,16],
[15,17,19,16,31,0,20,27,14],
[24,23,22,26,25,30,0,30,19],
[22,20,22,18,23,23,20,0,12],
[24,27,25,27,34,36,31,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,50,39,28,39,25,14,14],
[22,0,50,25,28,39,25,0,14],
[0,0,0,11,28,25,0,0,0],
[11,25,39,0,39,25,14,0,0],
[22,22,22,11,0,25,11,0,11],
[11,11,25,25,25,0,0,11,11],
[25,25,50,36,39,50,0,11,25],
[36,50,50,50,50,39,39,0,25],
[36,36,50,50,39,39,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,18,21,21,20,20,17],
[26,0,21,20,26,24,16,27,19],
[22,29,0,15,25,18,14,24,15],
[32,30,35,0,24,29,21,22,19],
[29,24,25,26,0,21,25,28,22],
[29,26,32,21,29,0,17,31,22],
[30,34,36,29,25,33,0,27,26],
[30,23,26,28,22,19,23,0,25],
[33,31,35,31,28,28,24,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,34,0,34,16,18,16],
[34,0,34,34,34,34,34,34,16],
[32,16,0,32,16,16,32,0,32],
[16,16,18,0,0,34,32,18,16],
[50,16,34,50,0,34,32,34,16],
[16,16,34,16,16,0,16,34,16],
[34,16,18,18,18,34,0,18,0],
[32,16,50,32,16,16,32,0,32],
[34,34,18,34,34,34,50,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,20,21,28,33,27,22,23],
[26,0,27,31,36,29,34,27,24],
[30,23,0,30,31,25,32,23,26],
[29,19,20,0,27,25,29,19,24],
[22,14,19,23,0,22,26,20,23],
[17,21,25,25,28,0,31,22,26],
[23,16,18,21,24,19,0,23,21],
[28,23,27,31,30,28,27,0,24],
[27,26,24,26,27,24,29,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,37,32,44,25,31,31,44],
[18,0,25,20,44,29,19,17,44],
[13,25,0,27,32,24,19,18,25],
[18,30,23,0,30,17,19,11,30],
[6,6,18,20,0,17,25,17,30],
[25,21,26,33,33,0,25,23,33],
[19,31,31,31,25,25,0,25,37],
[19,33,32,39,33,27,25,0,39],
[6,6,25,20,20,17,13,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,14,23,16,25,23,25,16],
[25,0,23,16,14,16,16,25,18],
[36,27,0,27,9,18,27,27,18],
[27,34,23,0,16,18,18,27,25],
[34,36,41,34,0,25,43,34,36],
[25,34,32,32,25,0,25,34,34],
[27,34,23,32,7,25,0,27,25],
[25,25,23,23,16,16,23,0,25],
[34,32,32,25,14,16,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,17,27,14,25,17,14,15],
[29,0,35,30,29,31,23,24,36],
[33,15,0,27,18,30,25,16,30],
[23,20,23,0,22,32,20,22,34],
[36,21,32,28,0,33,25,26,34],
[25,19,20,18,17,0,16,17,29],
[33,27,25,30,25,34,0,23,26],
[36,26,34,28,24,33,27,0,37],
[35,14,20,16,16,21,24,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,27,27,26,25,29,32,35],
[21,0,22,22,27,27,30,26,32],
[23,28,0,22,25,20,26,17,26],
[23,28,28,0,23,25,31,28,32],
[24,23,25,27,0,27,26,35,35],
[25,23,30,25,23,0,26,20,26],
[21,20,24,19,24,24,0,21,25],
[18,24,33,22,15,30,29,0,22],
[15,18,24,18,15,24,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,23,23,29,17,33,33,23],
[21,0,33,21,33,27,32,21,22],
[27,17,0,11,39,11,27,28,11],
[27,29,39,0,39,22,33,27,33],
[21,17,11,11,0,17,28,10,12],
[33,23,39,28,33,0,33,27,33],
[17,18,23,17,22,17,0,17,18],
[17,29,22,23,40,23,33,0,18],
[27,28,39,17,38,17,32,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,23,28,23,33,22,23],
[32,0,24,28,26,33,32,26,28],
[30,26,0,28,25,28,37,29,35],
[27,22,22,0,25,25,30,31,27],
[22,24,25,25,0,26,30,30,30],
[27,17,22,25,24,0,26,29,26],
[17,18,13,20,20,24,0,21,27],
[28,24,21,19,20,21,29,0,21],
[27,22,15,23,20,24,23,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,37,23,21,27,17,12,25],
[25,0,25,25,18,25,16,22,18],
[13,25,0,13,9,18,9,9,30],
[27,25,37,0,26,31,17,27,30],
[29,32,41,24,0,33,29,17,34],
[23,25,32,19,17,0,13,12,33],
[33,34,41,33,21,37,0,26,33],
[38,28,41,23,33,38,24,0,36],
[25,32,20,20,16,17,17,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,23,24,23,23,21,25,24],
[30,0,29,28,25,29,25,27,27],
[27,21,0,24,26,27,29,29,23],
[26,22,26,0,25,22,22,23,21],
[27,25,24,25,0,29,28,29,24],
[27,21,23,28,21,0,27,27,25],
[29,25,21,28,22,23,0,31,21],
[25,23,21,27,21,23,19,0,21],
[26,23,27,29,26,25,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,32,19,21,30,20,28,27],
[27,0,33,24,24,30,27,23,25],
[18,17,0,15,13,21,20,24,16],
[31,26,35,0,26,33,25,30,30],
[29,26,37,24,0,32,27,25,28],
[20,20,29,17,18,0,25,24,18],
[30,23,30,25,23,25,0,26,22],
[22,27,26,20,25,26,24,0,26],
[23,25,34,20,22,32,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,19,24,25,18,20,21,24],
[38,0,24,36,34,23,28,29,29],
[31,26,0,27,35,22,33,31,21],
[26,14,23,0,29,26,21,25,26],
[25,16,15,21,0,20,14,17,18],
[32,27,28,24,30,0,30,26,26],
[30,22,17,29,36,20,0,23,27],
[29,21,19,25,33,24,27,0,27],
[26,21,29,24,32,24,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,32,26,35,26,32,34,24],
[21,0,26,4,19,25,26,19,16],
[18,24,0,16,18,19,20,20,23],
[24,46,34,0,37,26,26,26,24],
[15,31,32,13,0,26,20,29,24],
[24,25,31,24,24,0,24,28,24],
[18,24,30,24,30,26,0,25,19],
[16,31,30,24,21,22,25,0,33],
[26,34,27,26,26,26,31,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,23,21,20,21,21,19,19],
[33,0,29,26,21,27,24,28,27],
[27,21,0,26,23,21,28,28,27],
[29,24,24,0,27,27,23,31,26],
[30,29,27,23,0,26,26,34,30],
[29,23,29,23,24,0,26,34,29],
[29,26,22,27,24,24,0,30,29],
[31,22,22,19,16,16,20,0,25],
[31,23,23,24,20,21,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,10,28,20,20,28,20,20],
[40,0,18,25,25,36,36,32,35],
[40,32,0,32,32,32,32,24,24],
[22,25,18,0,15,28,26,25,18],
[30,25,18,35,0,28,28,25,25],
[30,14,18,22,22,0,25,22,24],
[22,14,18,24,22,25,0,22,7],
[30,18,26,25,25,28,28,0,25],
[30,15,26,32,25,26,43,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,0,9,9,9,19,32,29],
[30,0,0,18,18,30,18,31,38],
[50,50,0,18,28,40,28,50,38],
[41,32,32,0,41,41,19,41,41],
[41,32,22,9,0,12,10,32,32],
[41,20,10,9,38,0,19,32,29],
[31,32,22,31,40,31,0,32,41],
[18,19,0,9,18,18,18,0,38],
[21,12,12,9,18,21,9,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,27,26,28,28,26,27],
[29,0,22,28,26,33,29,28,31],
[25,28,0,30,31,27,29,31,35],
[23,22,20,0,27,27,22,29,23],
[24,24,19,23,0,26,24,26,26],
[22,17,23,23,24,0,21,24,24],
[22,21,21,28,26,29,0,28,25],
[24,22,19,21,24,26,22,0,24],
[23,19,15,27,24,26,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,16,26,28,27,26,27,19],
[22,0,17,23,29,28,30,28,21],
[34,33,0,28,31,32,30,28,24],
[24,27,22,0,30,24,30,30,25],
[22,21,19,20,0,23,26,27,17],
[23,22,18,26,27,0,30,30,23],
[24,20,20,20,24,20,0,26,18],
[23,22,22,20,23,20,24,0,21],
[31,29,26,25,33,27,32,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,21,25,27,27,20,23,27],
[23,0,19,18,27,30,24,21,24],
[29,31,0,28,36,33,23,25,34],
[25,32,22,0,32,32,20,23,34],
[23,23,14,18,0,25,15,21,21],
[23,20,17,18,25,0,16,13,24],
[30,26,27,30,35,34,0,21,34],
[27,29,25,27,29,37,29,0,31],
[23,26,16,16,29,26,16,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,24,31,24,24,17,24,18],
[27,0,24,24,17,17,8,24,19],
[26,26,0,33,26,26,10,35,35],
[19,26,17,0,28,34,27,26,28],
[26,33,24,22,0,31,24,26,35],
[26,33,24,16,19,0,15,26,35],
[33,42,40,23,26,35,0,35,42],
[26,26,15,24,24,24,15,0,35],
[32,31,15,22,15,15,8,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,32,37,39,25,35,37,39],
[25,0,17,30,22,17,32,35,36],
[18,33,0,25,12,33,40,32,26],
[13,20,25,0,30,25,33,29,30],
[11,28,38,20,0,24,35,35,26],
[25,33,17,25,26,0,25,28,33],
[15,18,10,17,15,25,0,22,23],
[13,15,18,21,15,22,28,0,8],
[11,14,24,20,24,17,27,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,27,38,38,12,24,50,38],
[50,0,38,38,50,12,36,50,50],
[23,12,0,50,50,12,36,23,50],
[12,12,0,0,36,12,36,23,36],
[12,0,0,14,0,12,23,23,50],
[38,38,38,38,38,0,24,50,38],
[26,14,14,14,27,26,0,26,39],
[0,0,27,27,27,0,24,0,38],
[12,0,0,14,0,12,11,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,18,18,10,18,18,31],
[32,0,20,31,22,19,20,21,27],
[32,30,0,26,27,28,24,17,32],
[32,19,24,0,27,27,23,23,32],
[32,28,23,23,0,17,18,13,28],
[40,31,22,23,33,0,28,16,34],
[32,30,26,27,32,22,0,26,35],
[32,29,33,27,37,34,24,0,31],
[19,23,18,18,22,16,15,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,22,22,25,30,26,26],
[25,0,29,22,23,30,31,27,28],
[22,21,0,25,23,37,27,23,18],
[28,28,25,0,29,32,27,23,21],
[28,27,27,21,0,28,25,21,22],
[25,20,13,18,22,0,22,17,17],
[20,19,23,23,25,28,0,18,19],
[24,23,27,27,29,33,32,0,28],
[24,22,32,29,28,33,31,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,13,18,20,14,28,24,28],
[36,0,25,30,27,22,33,29,28],
[37,25,0,28,26,27,37,32,36],
[32,20,22,0,20,12,33,27,29],
[30,23,24,30,0,27,31,26,31],
[36,28,23,38,23,0,41,34,34],
[22,17,13,17,19,9,0,21,26],
[26,21,18,23,24,16,29,0,26],
[22,22,14,21,19,16,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,31,24,20,14,20,26,19],
[27,0,29,27,27,24,27,27,24],
[19,21,0,25,18,19,19,26,21],
[26,23,25,0,23,19,23,23,26],
[30,23,32,27,0,22,26,27,23],
[36,26,31,31,28,0,23,29,26],
[30,23,31,27,24,27,0,27,25],
[24,23,24,27,23,21,23,0,24],
[31,26,29,24,27,24,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,21,20,23,18,23,19],
[32,0,24,34,32,32,27,32,29],
[30,26,0,20,23,31,22,24,22],
[29,16,30,0,26,25,25,30,28],
[30,18,27,24,0,26,19,28,27],
[27,18,19,25,24,0,23,27,27],
[32,23,28,25,31,27,0,31,23],
[27,18,26,20,22,23,19,0,18],
[31,21,28,22,23,23,27,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,23,25,35,24,27,28,26],
[21,0,23,22,25,15,30,20,20],
[27,27,0,25,33,24,29,23,29],
[25,28,25,0,32,20,29,30,27],
[15,25,17,18,0,19,19,19,20],
[26,35,26,30,31,0,30,25,28],
[23,20,21,21,31,20,0,24,24],
[22,30,27,20,31,25,26,0,24],
[24,30,21,23,30,22,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,18,25,19,16,31,19,23],
[28,0,19,23,30,26,32,17,20],
[32,31,0,27,29,30,28,22,29],
[25,27,23,0,21,23,27,23,23],
[31,20,21,29,0,26,26,21,26],
[34,24,20,27,24,0,29,27,19],
[19,18,22,23,24,21,0,17,17],
[31,33,28,27,29,23,33,0,17],
[27,30,21,27,24,31,33,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,26,22,22,25,22,22],
[25,0,22,21,21,23,27,26,21],
[22,28,0,24,27,25,28,21,26],
[24,29,26,0,20,24,29,25,23],
[28,29,23,30,0,26,29,27,29],
[28,27,25,26,24,0,30,24,27],
[25,23,22,21,21,20,0,21,22],
[28,24,29,25,23,26,29,0,28],
[28,29,24,27,21,23,28,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,22,29,32,24,20,22,22],
[24,0,22,26,28,32,26,20,21],
[28,28,0,36,34,30,16,21,21],
[21,24,14,0,26,27,19,17,16],
[18,22,16,24,0,23,13,17,17],
[26,18,20,23,27,0,17,24,22],
[30,24,34,31,37,33,0,28,29],
[28,30,29,33,33,26,22,0,25],
[28,29,29,34,33,28,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,28,28,29,25,34,35,30],
[20,0,17,17,22,24,26,28,23],
[22,33,0,27,23,28,29,29,28],
[22,33,23,0,24,30,31,33,32],
[21,28,27,26,0,34,29,29,32],
[25,26,22,20,16,0,23,29,20],
[16,24,21,19,21,27,0,25,23],
[15,22,21,17,21,21,25,0,30],
[20,27,22,18,18,30,27,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,18,20,23,24,29,29,20],
[27,0,27,24,28,23,28,29,28],
[32,23,0,28,28,26,28,30,26],
[30,26,22,0,25,24,27,26,24],
[27,22,22,25,0,24,28,27,25],
[26,27,24,26,26,0,26,29,27],
[21,22,22,23,22,24,0,26,24],
[21,21,20,24,23,21,24,0,20],
[30,22,24,26,25,23,26,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,31,27,27,29,25,28,20],
[22,0,30,25,23,23,24,30,25],
[19,20,0,23,19,22,14,22,18],
[23,25,27,0,25,25,20,32,21],
[23,27,31,25,0,21,20,23,24],
[21,27,28,25,29,0,20,29,30],
[25,26,36,30,30,30,0,28,20],
[22,20,28,18,27,21,22,0,26],
[30,25,32,29,26,20,30,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,30,30,34,39,30,30,15],
[28,0,21,22,21,22,17,21,23],
[20,29,0,21,20,33,15,15,21],
[20,28,29,0,32,30,10,22,21],
[16,29,30,18,0,26,15,22,26],
[11,28,17,20,24,0,10,27,16],
[20,33,35,40,35,40,0,32,35],
[20,29,35,28,28,23,18,0,21],
[35,27,29,29,24,34,15,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,19,33,29,32,29,25,37],
[24,0,27,35,28,29,21,25,32],
[31,23,0,31,31,28,27,27,34],
[17,15,19,0,18,25,20,17,26],
[21,22,19,32,0,25,24,18,32],
[18,21,22,25,25,0,15,23,28],
[21,29,23,30,26,35,0,29,31],
[25,25,23,33,32,27,21,0,41],
[13,18,16,24,18,22,19,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,37,21,28,27,26,31,33],
[19,0,19,21,25,24,22,27,25],
[13,31,0,20,22,26,20,25,27],
[29,29,30,0,23,29,26,31,24],
[22,25,28,27,0,27,21,27,26],
[23,26,24,21,23,0,19,27,29],
[24,28,30,24,29,31,0,28,34],
[19,23,25,19,23,23,22,0,20],
[17,25,23,26,24,21,16,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,13,29,18,29,31,34,25],
[25,0,24,21,14,11,34,26,27],
[37,26,0,26,26,23,23,21,28],
[21,29,24,0,18,23,29,29,17],
[32,36,24,32,0,24,34,34,22],
[21,39,27,27,26,0,33,28,27],
[19,16,27,21,16,17,0,16,21],
[16,24,29,21,16,22,34,0,23],
[25,23,22,33,28,23,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,23,24,24,28,23,29,26],
[22,0,18,22,26,24,19,28,24],
[27,32,0,26,28,24,24,26,30],
[26,28,24,0,28,27,25,28,27],
[26,24,22,22,0,24,20,24,22],
[22,26,26,23,26,0,20,24,24],
[27,31,26,25,30,30,0,30,29],
[21,22,24,22,26,26,20,0,25],
[24,26,20,23,28,26,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,23,23,12,21,20,18,23],
[32,0,27,22,24,18,21,28,42],
[27,23,0,13,22,22,20,20,28],
[27,28,37,0,32,36,29,24,34],
[38,26,28,18,0,27,17,15,30],
[29,32,28,14,23,0,20,24,33],
[30,29,30,21,33,30,0,25,39],
[32,22,30,26,35,26,25,0,39],
[27,8,22,16,20,17,11,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,18,28,31,28,27,26,28],
[23,0,20,30,27,26,26,26,29],
[32,30,0,32,34,35,24,32,33],
[22,20,18,0,30,23,21,22,24],
[19,23,16,20,0,21,16,25,25],
[22,24,15,27,29,0,24,24,26],
[23,24,26,29,34,26,0,27,33],
[24,24,18,28,25,26,23,0,28],
[22,21,17,26,25,24,17,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,35,26,25,29,31,24,28],
[21,0,32,24,19,25,28,28,23],
[15,18,0,20,25,21,20,22,28],
[24,26,30,0,23,24,29,25,30],
[25,31,25,27,0,29,26,27,26],
[21,25,29,26,21,0,27,25,26],
[19,22,30,21,24,23,0,25,26],
[26,22,28,25,23,25,25,0,32],
[22,27,22,20,24,24,24,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,20,26,22,21,19,21],
[25,0,22,27,29,26,22,30,22],
[27,28,0,30,30,28,26,28,22],
[30,23,20,0,29,23,23,26,21],
[24,21,20,21,0,21,21,22,21],
[28,24,22,27,29,0,28,30,26],
[29,28,24,27,29,22,0,30,28],
[31,20,22,24,28,20,20,0,20],
[29,28,28,29,29,24,22,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,23,14,22,23,29,34,20],
[18,0,21,13,21,22,27,28,17],
[27,29,0,19,30,27,32,31,25],
[36,37,31,0,36,28,35,36,25],
[28,29,20,14,0,27,27,33,20],
[27,28,23,22,23,0,31,30,25],
[21,23,18,15,23,19,0,29,22],
[16,22,19,14,17,20,21,0,23],
[30,33,25,25,30,25,28,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,24,27,20,24,27,24,23],
[24,0,22,32,20,27,27,29,25],
[26,28,0,33,20,29,27,23,20],
[23,18,17,0,18,19,27,19,18],
[30,30,30,32,0,29,30,28,24],
[26,23,21,31,21,0,22,25,21],
[23,23,23,23,20,28,0,22,18],
[26,21,27,31,22,25,28,0,21],
[27,25,30,32,26,29,32,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,27,28,23,27,28,26,31],
[21,0,27,27,24,25,24,20,25],
[23,23,0,27,20,30,26,26,24],
[22,23,23,0,22,26,28,25,26],
[27,26,30,28,0,25,29,27,30],
[23,25,20,24,25,0,25,23,28],
[22,26,24,22,21,25,0,23,23],
[24,30,24,25,23,27,27,0,28],
[19,25,26,24,20,22,27,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,33,26,20,31,22,26],
[24,0,28,29,20,32,37,19,34],
[24,22,0,24,20,29,26,15,18],
[17,21,26,0,20,22,24,19,17],
[24,30,30,30,0,23,26,23,24],
[30,18,21,28,27,0,23,23,24],
[19,13,24,26,24,27,0,25,27],
[28,31,35,31,27,27,25,0,29],
[24,16,32,33,26,26,23,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,27,19,25,26,25,28,32],
[28,0,27,22,28,25,23,27,28],
[23,23,0,26,24,28,17,26,25],
[31,28,24,0,32,29,21,30,29],
[25,22,26,18,0,24,21,21,29],
[24,25,22,21,26,0,22,23,25],
[25,27,33,29,29,28,0,36,34],
[22,23,24,20,29,27,14,0,24],
[18,22,25,21,21,25,16,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,17,35,9,16,24,18,9],
[33,0,8,18,17,15,7,17,8],
[33,42,0,18,18,34,34,18,9],
[15,32,32,0,8,24,24,15,24],
[41,33,32,42,0,32,24,25,32],
[34,35,16,26,18,0,24,9,0],
[26,43,16,26,26,26,0,17,8],
[32,33,32,35,25,41,33,0,25],
[41,42,41,26,18,50,42,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,20,23,24,18,30,21,24],
[27,0,24,22,24,22,31,22,28],
[30,26,0,23,24,26,33,25,31],
[27,28,27,0,23,22,26,23,28],
[26,26,26,27,0,26,30,25,28],
[32,28,24,28,24,0,36,29,34],
[20,19,17,24,20,14,0,23,21],
[29,28,25,27,25,21,27,0,25],
[26,22,19,22,22,16,29,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,27,29,21,19,27,28,20],
[20,0,26,34,22,21,31,24,24],
[23,24,0,27,19,19,25,31,22],
[21,16,23,0,15,18,30,20,22],
[29,28,31,35,0,29,34,23,26],
[31,29,31,32,21,0,27,29,25],
[23,19,25,20,16,23,0,22,16],
[22,26,19,30,27,21,28,0,26],
[30,26,28,28,24,25,34,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,15,14,19,25,27,24,22],
[28,0,31,12,24,18,25,19,32],
[35,19,0,18,26,22,21,26,31],
[36,38,32,0,36,22,36,38,41],
[31,26,24,14,0,24,26,28,30],
[25,32,28,28,26,0,31,35,27],
[23,25,29,14,24,19,0,23,33],
[26,31,24,12,22,15,27,0,33],
[28,18,19,9,20,23,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,20,19,20,25,27,27,29],
[22,0,20,21,23,20,21,23,25],
[30,30,0,22,20,23,26,21,39],
[31,29,28,0,23,24,30,25,37],
[30,27,30,27,0,27,27,24,29],
[25,30,27,26,23,0,25,27,31],
[23,29,24,20,23,25,0,20,33],
[23,27,29,25,26,23,30,0,31],
[21,25,11,13,21,19,17,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,21,24,23,22,17,29,25],
[26,0,18,22,34,19,16,29,28],
[29,32,0,23,27,25,25,26,27],
[26,28,27,0,25,19,13,35,29],
[27,16,23,25,0,21,20,31,24],
[28,31,25,31,29,0,23,28,26],
[33,34,25,37,30,27,0,37,33],
[21,21,24,15,19,22,13,0,18],
[25,22,23,21,26,24,17,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,29,19,39,19,29,11,42],
[31,0,10,21,20,11,32,21,31],
[21,40,0,40,40,40,40,21,32],
[31,29,10,0,39,10,39,21,31],
[11,30,10,11,0,11,32,11,21],
[31,39,10,40,39,0,29,31,42],
[21,18,10,11,18,21,0,21,31],
[39,29,29,29,39,19,29,0,39],
[8,19,18,19,29,8,19,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,32,30,30,34,24,26,25],
[23,0,33,28,25,33,23,28,24],
[18,17,0,22,28,21,16,19,19],
[20,22,28,0,26,20,15,20,20],
[20,25,22,24,0,24,21,16,21],
[16,17,29,30,26,0,19,23,23],
[26,27,34,35,29,31,0,23,21],
[24,22,31,30,34,27,27,0,28],
[25,26,31,30,29,27,29,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,25,25,50,25,25,50,50],
[0,0,25,25,25,25,25,25,25],
[25,25,0,0,50,25,25,25,25],
[25,25,50,0,50,50,50,25,50],
[0,25,0,0,0,0,0,25,0],
[25,25,25,0,50,0,25,25,25],
[25,25,25,0,50,25,0,25,50],
[0,25,25,25,25,25,25,0,25],
[0,25,25,0,50,25,0,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,22,28,27,27,23,17,23],
[24,0,26,34,28,26,23,10,31],
[28,24,0,33,33,30,27,30,35],
[22,16,17,0,22,20,20,16,23],
[23,22,17,28,0,31,21,16,24],
[23,24,20,30,19,0,26,17,25],
[27,27,23,30,29,24,0,16,21],
[33,40,20,34,34,33,34,0,32],
[27,19,15,27,26,25,29,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,26,20,18,29,25,31],
[28,0,29,31,31,25,37,25,27],
[28,21,0,25,28,27,31,24,26],
[24,19,25,0,22,15,28,24,24],
[30,19,22,28,0,26,32,25,21],
[32,25,23,35,24,0,36,24,30],
[21,13,19,22,18,14,0,24,22],
[25,25,26,26,25,26,26,0,26],
[19,23,24,26,29,20,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,27,32,20,28,28,20,26],
[27,0,28,32,24,28,30,24,25],
[23,22,0,25,27,25,21,22,27],
[18,18,25,0,20,20,15,13,16],
[30,26,23,30,0,28,27,26,26],
[22,22,25,30,22,0,24,19,22],
[22,20,29,35,23,26,0,20,19],
[30,26,28,37,24,31,30,0,31],
[24,25,23,34,24,28,31,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,32,28,28,26,29,25,29],
[26,0,25,28,19,26,29,24,15],
[18,25,0,23,32,29,31,25,29],
[22,22,27,0,30,34,30,30,33],
[22,31,18,20,0,19,36,17,28],
[24,24,21,16,31,0,30,26,30],
[21,21,19,20,14,20,0,20,14],
[25,26,25,20,33,24,30,0,32],
[21,35,21,17,22,20,36,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,16,38,31,19,37,19,24],
[15,0,18,26,34,24,25,16,19],
[34,32,0,26,28,24,28,24,24],
[12,24,24,0,31,16,24,23,28],
[19,16,22,19,0,18,20,25,19],
[31,26,26,34,32,0,34,31,24],
[13,25,22,26,30,16,0,16,12],
[31,34,26,27,25,19,34,0,21],
[26,31,26,22,31,26,38,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,17,18,29,27,13,21],
[22,0,19,17,20,18,21,18,16],
[24,31,0,25,26,26,34,20,22],
[33,33,25,0,32,33,33,26,26],
[32,30,24,18,0,32,30,25,24],
[21,32,24,17,18,0,30,18,21],
[23,29,16,17,20,20,0,16,18],
[37,32,30,24,25,32,34,0,27],
[29,34,28,24,26,29,32,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,28,28,28,24,24,34,24],
[31,0,31,33,28,23,33,26,21],
[22,19,0,28,28,33,32,21,26],
[22,17,22,0,28,26,25,13,22],
[22,22,22,22,0,14,28,13,17],
[26,27,17,24,36,0,33,20,20],
[26,17,18,25,22,17,0,22,22],
[16,24,29,37,37,30,28,0,25],
[26,29,24,28,33,30,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,26,31,35,22,27,30,34],
[32,0,23,29,34,27,28,24,26],
[24,27,0,25,23,28,21,28,27],
[19,21,25,0,29,21,28,30,22],
[15,16,27,21,0,24,20,25,27],
[28,23,22,29,26,0,25,33,29],
[23,22,29,22,30,25,0,28,29],
[20,26,22,20,25,17,22,0,28],
[16,24,23,28,23,21,21,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,20,27,27,27,25,12],
[25,0,19,25,22,27,25,29,16],
[29,31,0,26,23,29,27,25,14],
[30,25,24,0,21,39,35,27,25],
[23,28,27,29,0,31,31,21,26],
[23,23,21,11,19,0,19,12,18],
[23,25,23,15,19,31,0,23,22],
[25,21,25,23,29,38,27,0,22],
[38,34,36,25,24,32,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,16,27,30,26,26,33,20],
[31,0,19,28,24,22,32,29,25],
[34,31,0,33,28,24,31,27,27],
[23,22,17,0,26,21,18,34,21],
[20,26,22,24,0,22,26,27,27],
[24,28,26,29,28,0,25,29,21],
[24,18,19,32,24,25,0,30,21],
[17,21,23,16,23,21,20,0,23],
[30,25,23,29,23,29,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,24,24,21,22,19,21,16],
[32,0,25,29,28,29,31,24,26],
[26,25,0,25,29,26,20,24,21],
[26,21,25,0,22,27,22,18,20],
[29,22,21,28,0,22,24,29,23],
[28,21,24,23,28,0,23,22,22],
[31,19,30,28,26,27,0,26,25],
[29,26,26,32,21,28,24,0,25],
[34,24,29,30,27,28,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,26,17,22,32,17,18,25],
[32,0,32,23,31,36,23,26,25],
[24,18,0,24,32,27,20,17,21],
[33,27,26,0,27,30,23,23,20],
[28,19,18,23,0,32,26,26,27],
[18,14,23,20,18,0,17,15,14],
[33,27,30,27,24,33,0,26,19],
[32,24,33,27,24,35,24,0,25],
[25,25,29,30,23,36,31,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,27,25,35,25,39,32],
[10,0,28,18,25,19,19,25,24],
[14,22,0,17,17,19,15,18,22],
[23,32,33,0,18,22,25,35,26],
[25,25,33,32,0,23,27,30,26],
[15,31,31,28,27,0,26,25,28],
[25,31,35,25,23,24,0,20,21],
[11,25,32,15,20,25,30,0,21],
[18,26,28,24,24,22,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,22,22,25,23,26,23],
[25,0,29,20,28,22,34,31,27],
[27,21,0,22,19,23,26,25,20],
[28,30,28,0,24,27,27,32,28],
[28,22,31,26,0,27,28,37,31],
[25,28,27,23,23,0,24,30,27],
[27,16,24,23,22,26,0,33,30],
[24,19,25,18,13,20,17,0,22],
[27,23,30,22,19,23,20,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,23,27,32,24,20,26],
[26,0,29,17,29,27,27,18,21],
[25,21,0,24,23,29,22,21,19],
[27,33,26,0,25,30,25,30,25],
[23,21,27,25,0,27,24,23,27],
[18,23,21,20,23,0,22,19,21],
[26,23,28,25,26,28,0,23,27],
[30,32,29,20,27,31,27,0,29],
[24,29,31,25,23,29,23,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,24,21,24,23,28,20],
[26,0,28,26,23,27,27,28,23],
[26,22,0,25,25,23,25,21,24],
[26,24,25,0,23,26,24,28,22],
[29,27,25,27,0,26,29,27,25],
[26,23,27,24,24,0,25,25,22],
[27,23,25,26,21,25,0,22,22],
[22,22,29,22,23,25,28,0,26],
[30,27,26,28,25,28,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,23,31,13,19,25,32,25],
[20,0,17,36,7,19,38,31,26],
[27,33,0,38,27,34,38,25,33],
[19,14,12,0,21,12,26,18,21],
[37,43,23,29,0,12,37,24,32],
[31,31,16,38,38,0,31,36,37],
[25,12,12,24,13,19,0,19,27],
[18,19,25,32,26,14,31,0,26],
[25,24,17,29,18,13,23,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,24,26,27,29,27,25,30],
[24,0,25,24,26,26,28,26,30],
[26,25,0,22,24,26,24,27,25],
[24,26,28,0,30,30,24,27,31],
[23,24,26,20,0,25,23,24,29],
[21,24,24,20,25,0,22,24,25],
[23,22,26,26,27,28,0,28,30],
[25,24,23,23,26,26,22,0,28],
[20,20,25,19,21,25,20,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,28,27,30,30,29,26,30],
[27,0,27,19,30,25,26,14,20],
[22,23,0,22,25,19,29,23,29],
[23,31,28,0,28,23,30,29,31],
[20,20,25,22,0,26,25,11,22],
[20,25,31,27,24,0,25,21,32],
[21,24,21,20,25,25,0,15,26],
[24,36,27,21,39,29,35,0,32],
[20,30,21,19,28,18,24,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,19,18,25,20,23,21],
[25,0,24,25,24,20,21,21,22],
[26,26,0,17,24,21,20,23,17],
[31,25,33,0,32,25,29,28,35],
[32,26,26,18,0,18,31,30,26],
[25,30,29,25,32,0,26,26,24],
[30,29,30,21,19,24,0,29,25],
[27,29,27,22,20,24,21,0,29],
[29,28,33,15,24,26,25,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,27,18,20,20,26,21],
[31,0,26,29,24,24,23,28,35],
[28,24,0,24,23,29,26,29,29],
[23,21,26,0,28,25,22,30,23],
[32,26,27,22,0,29,18,25,25],
[30,26,21,25,21,0,16,21,27],
[30,27,24,28,32,34,0,29,36],
[24,22,21,20,25,29,21,0,29],
[29,15,21,27,25,23,14,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,28,19,28,17,24,24,26],
[35,0,28,33,32,35,29,32,22],
[22,22,0,26,35,22,22,27,22],
[31,17,24,0,26,14,19,19,21],
[22,18,15,24,0,14,18,23,17],
[33,15,28,36,36,0,28,27,23],
[26,21,28,31,32,22,0,23,20],
[26,18,23,31,27,23,27,0,16],
[24,28,28,29,33,27,30,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,31,32,26,25,32,30,33],
[23,0,30,30,27,23,31,26,32],
[19,20,0,26,25,19,22,24,27],
[18,20,24,0,17,22,25,19,24],
[24,23,25,33,0,28,28,22,28],
[25,27,31,28,22,0,30,27,27],
[18,19,28,25,22,20,0,20,27],
[20,24,26,31,28,23,30,0,32],
[17,18,23,26,22,23,23,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,15,24,20,20,21,12],
[28,0,29,26,35,30,23,32,21],
[27,21,0,15,30,22,22,22,16],
[35,24,35,0,34,31,26,22,29],
[26,15,20,16,0,24,21,21,14],
[30,20,28,19,26,0,21,21,18],
[30,27,28,24,29,29,0,23,19],
[29,18,28,28,29,29,27,0,17],
[38,29,34,21,36,32,31,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,32,26,32,16,15,22,28],
[21,0,32,27,37,26,27,32,27],
[18,18,0,26,20,22,15,11,22],
[24,23,24,0,16,17,18,23,23],
[18,13,30,34,0,16,18,24,17],
[34,24,28,33,34,0,23,22,27],
[35,23,35,32,32,27,0,28,39],
[28,18,39,27,26,28,22,0,34],
[22,23,28,27,33,23,11,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,19,23,22,27,26,18],
[28,0,20,26,24,29,26,25,28],
[28,30,0,25,26,30,25,30,30],
[31,24,25,0,25,26,23,26,27],
[27,26,24,25,0,26,32,28,28],
[28,21,20,24,24,0,23,23,23],
[23,24,25,27,18,27,0,27,26],
[24,25,20,24,22,27,23,0,29],
[32,22,20,23,22,27,24,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,25,29,18,24,23,20,28],
[36,0,29,30,18,30,28,30,34],
[25,21,0,21,18,20,22,20,29],
[21,20,29,0,18,25,29,17,33],
[32,32,32,32,0,33,32,24,44],
[26,20,30,25,17,0,21,25,25],
[27,22,28,21,18,29,0,22,24],
[30,20,30,33,26,25,28,0,33],
[22,16,21,17,6,25,26,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,31,26,23,22,28,25,26],
[26,0,31,31,27,25,25,36,34],
[19,19,0,23,21,17,21,24,24],
[24,19,27,0,27,22,25,25,26],
[27,23,29,23,0,21,22,24,29],
[28,25,33,28,29,0,30,31,31],
[22,25,29,25,28,20,0,31,31],
[25,14,26,25,26,19,19,0,28],
[24,16,26,24,21,19,19,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,31,28,31,20,23,32,20],
[14,0,22,24,27,22,17,18,25],
[19,28,0,25,30,25,22,26,17],
[22,26,25,0,30,22,25,30,27],
[19,23,20,20,0,21,19,24,26],
[30,28,25,28,29,0,18,24,21],
[27,33,28,25,31,32,0,25,29],
[18,32,24,20,26,26,25,0,23],
[30,25,33,23,24,29,21,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,29,23,20,29,27,29,26],
[18,0,26,20,18,24,20,17,24],
[21,24,0,28,16,30,16,21,15],
[27,30,22,0,21,25,20,24,22],
[30,32,34,29,0,35,32,27,24],
[21,26,20,25,15,0,19,26,21],
[23,30,34,30,18,31,0,21,26],
[21,33,29,26,23,24,29,0,21],
[24,26,35,28,26,29,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,7,8,16,0,8,6,0],
[29,0,7,21,29,7,22,15,8],
[43,43,0,35,37,21,35,29,29],
[42,29,15,0,21,23,14,21,8],
[34,21,13,29,0,21,14,13,14],
[50,43,29,27,29,0,28,21,14],
[42,28,15,36,36,22,0,21,8],
[44,35,21,29,37,29,29,0,29],
[50,42,21,42,36,36,42,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,25,24,22,29,22,29],
[25,0,30,25,24,27,25,25,30],
[26,20,0,27,25,24,19,23,28],
[25,25,23,0,22,27,26,22,29],
[26,26,25,28,0,21,23,20,32],
[28,23,26,23,29,0,27,23,34],
[21,25,31,24,27,23,0,26,30],
[28,25,27,28,30,27,24,0,27],
[21,20,22,21,18,16,20,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,29,22,29,28,25,32,22],
[24,0,28,19,27,25,18,36,31],
[21,22,0,21,28,21,18,31,24],
[28,31,29,0,31,25,23,35,31],
[21,23,22,19,0,18,22,25,19],
[22,25,29,25,32,0,23,29,29],
[25,32,32,27,28,27,0,31,27],
[18,14,19,15,25,21,19,0,20],
[28,19,26,19,31,21,23,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,25,26,25,23,20,17,27],
[33,0,24,29,31,24,25,25,32],
[25,26,0,31,33,26,28,23,27],
[24,21,19,0,27,18,18,20,23],
[25,19,17,23,0,18,22,17,24],
[27,26,24,32,32,0,26,22,28],
[30,25,22,32,28,24,0,23,25],
[33,25,27,30,33,28,27,0,23],
[23,18,23,27,26,22,25,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,20,23,13,21,30,22,17],
[22,0,21,22,14,23,28,18,18],
[30,29,0,28,24,23,31,28,25],
[27,28,22,0,18,27,30,26,25],
[37,36,26,32,0,23,37,28,28],
[29,27,27,23,27,0,28,25,28],
[20,22,19,20,13,22,0,22,19],
[28,32,22,24,22,25,28,0,20],
[33,32,25,25,22,22,31,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,16,22,18,15,15,25,19],
[37,0,29,34,33,29,25,33,29],
[34,21,0,34,31,27,19,27,25],
[28,16,16,0,22,21,20,24,20],
[32,17,19,28,0,21,19,23,19],
[35,21,23,29,29,0,22,26,22],
[35,25,31,30,31,28,0,27,29],
[25,17,23,26,27,24,23,0,21],
[31,21,25,30,31,28,21,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,21,22,24,19,29,20],
[30,0,25,21,28,20,21,31,23],
[29,25,0,22,25,26,22,26,22],
[29,29,28,0,27,30,27,30,22],
[28,22,25,23,0,22,24,26,23],
[26,30,24,20,28,0,28,32,30],
[31,29,28,23,26,22,0,29,26],
[21,19,24,20,24,18,21,0,26],
[30,27,28,28,27,20,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,12,25,22,19,27,19,34],
[25,0,26,29,21,32,24,22,26],
[38,24,0,25,31,28,30,21,29],
[25,21,25,0,25,25,28,27,34],
[28,29,19,25,0,22,29,22,32],
[31,18,22,25,28,0,26,21,25],
[23,26,20,22,21,24,0,23,28],
[31,28,29,23,28,29,27,0,39],
[16,24,21,16,18,25,22,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,25,25,12,0,37,37],
[25,0,12,25,25,37,12,25,25],
[26,38,0,26,13,25,13,38,38],
[25,25,24,0,25,12,13,37,24],
[25,25,37,25,0,25,13,25,25],
[38,13,25,38,25,0,25,25,38],
[50,38,37,37,37,25,0,50,37],
[13,25,12,13,25,25,0,0,25],
[13,25,12,26,25,12,13,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,36,32,26,26,31,29,21],
[20,0,24,30,19,20,25,22,27],
[14,26,0,30,22,21,21,21,23],
[18,20,20,0,13,14,22,23,16],
[24,31,28,37,0,25,33,27,25],
[24,30,29,36,25,0,30,24,22],
[19,25,29,28,17,20,0,23,22],
[21,28,29,27,23,26,27,0,19],
[29,23,27,34,25,28,28,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,30,22,30,26,14,28,17],
[26,0,26,32,23,23,22,25,26],
[20,24,0,22,14,17,12,22,20],
[28,18,28,0,24,29,15,28,26],
[20,27,36,26,0,24,16,18,18],
[24,27,33,21,26,0,18,32,28],
[36,28,38,35,34,32,0,31,24],
[22,25,28,22,32,18,19,0,23],
[33,24,30,24,32,22,26,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,32,20,32,23,27,28],
[21,0,19,27,20,27,18,25,25],
[24,31,0,30,24,26,21,30,22],
[18,23,20,0,19,20,19,20,29],
[30,30,26,31,0,29,23,28,30],
[18,23,24,30,21,0,26,20,26],
[27,32,29,31,27,24,0,27,31],
[23,25,20,30,22,30,23,0,27],
[22,25,28,21,20,24,19,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,22,19,25,17,24,23],
[27,0,27,24,25,27,20,30,25],
[24,23,0,22,20,28,22,27,25],
[28,26,28,0,21,29,23,28,25],
[31,25,30,29,0,31,26,37,28],
[25,23,22,21,19,0,19,30,20],
[33,30,28,27,24,31,0,31,35],
[26,20,23,22,13,20,19,0,25],
[27,25,25,25,22,30,15,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,25,33,34,26,17,32,25],
[33,0,34,34,34,17,34,33,34],
[25,16,0,25,34,17,25,24,25],
[17,16,25,0,33,17,16,16,17],
[16,16,16,17,0,25,17,16,17],
[24,33,33,33,25,0,17,24,25],
[33,16,25,34,33,33,0,33,25],
[18,17,26,34,34,26,17,0,25],
[25,16,25,33,33,25,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,33,31,20,33,19,16,26],
[25,0,27,20,21,31,22,14,18],
[17,23,0,19,23,23,19,13,15],
[19,30,31,0,18,29,16,17,27],
[30,29,27,32,0,27,23,25,31],
[17,19,27,21,23,0,20,13,25],
[31,28,31,34,27,30,0,20,29],
[34,36,37,33,25,37,30,0,24],
[24,32,35,23,19,25,21,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,16,22,22,27,34,16],
[23,0,23,10,29,23,39,28,22],
[23,27,0,17,12,11,33,33,28],
[34,40,33,0,34,23,45,40,34],
[28,21,38,16,0,33,38,33,21],
[28,27,39,27,17,0,38,33,28],
[23,11,17,5,12,12,0,17,17],
[16,22,17,10,17,17,33,0,22],
[34,28,22,16,29,22,33,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,17,17,17,17,17,17,16],
[18,0,26,18,18,18,27,26,18],
[33,24,0,27,17,17,17,8,25],
[33,32,23,0,32,32,16,31,15],
[33,32,33,18,0,31,27,41,25],
[33,32,33,18,19,0,19,33,25],
[33,23,33,34,23,31,0,31,33],
[33,24,42,19,9,17,19,0,34],
[34,32,25,35,25,25,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,29,31,26,31,32,24,32],
[23,0,25,26,28,30,28,26,21],
[21,25,0,31,28,32,29,23,21],
[19,24,19,0,22,24,25,25,22],
[24,22,22,28,0,27,27,24,22],
[19,20,18,26,23,0,19,21,16],
[18,22,21,25,23,31,0,20,22],
[26,24,27,25,26,29,30,0,27],
[18,29,29,28,28,34,28,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,26,26,27,29,24,30,25],
[17,0,21,22,24,28,22,23,19],
[24,29,0,29,25,29,27,25,25],
[24,28,21,0,22,29,20,23,18],
[23,26,25,28,0,26,20,28,29],
[21,22,21,21,24,0,21,24,23],
[26,28,23,30,30,29,0,29,27],
[20,27,25,27,22,26,21,0,27],
[25,31,25,32,21,27,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,25,13,25,25,25,50],
[26,0,39,25,27,39,25,39,39],
[25,11,0,13,27,25,25,25,25],
[25,25,37,0,14,37,50,37,37],
[37,23,23,36,0,23,36,23,37],
[25,11,25,13,27,0,24,27,25],
[25,25,25,0,14,26,0,14,25],
[25,11,25,13,27,23,36,0,25],
[0,11,25,13,13,25,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,30,26,35,26,36,25,30],
[18,0,29,21,27,32,35,21,15],
[20,21,0,23,29,24,27,20,24],
[24,29,27,0,25,35,33,27,21],
[15,23,21,25,0,19,35,25,16],
[24,18,26,15,31,0,35,24,17],
[14,15,23,17,15,15,0,17,9],
[25,29,30,23,25,26,33,0,24],
[20,35,26,29,34,33,41,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,22,34,33,28,31,28,33],
[21,0,14,21,23,20,20,20,18],
[28,36,0,32,37,23,32,21,25],
[16,29,18,0,23,16,22,18,21],
[17,27,13,27,0,15,28,20,20],
[22,30,27,34,35,0,36,27,29],
[19,30,18,28,22,14,0,22,22],
[22,30,29,32,30,23,28,0,27],
[17,32,25,29,30,21,28,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,28,23,30,19,21,20,28],
[17,0,19,15,21,16,17,15,18],
[22,31,0,23,26,15,20,20,18],
[27,35,27,0,26,18,19,27,24],
[20,29,24,24,0,21,17,25,21],
[31,34,35,32,29,0,25,27,31],
[29,33,30,31,33,25,0,27,25],
[30,35,30,23,25,23,23,0,26],
[22,32,32,26,29,19,25,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,28,26,26,22,26,29],
[24,0,19,23,23,22,20,21,25],
[24,31,0,28,21,25,24,27,28],
[22,27,22,0,27,23,19,24,28],
[24,27,29,23,0,22,24,30,23],
[24,28,25,27,28,0,26,29,30],
[28,30,26,31,26,24,0,25,26],
[24,29,23,26,20,21,25,0,24],
[21,25,22,22,27,20,24,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,20,20,20,19,25,19,24],
[22,0,19,19,15,15,26,21,17],
[30,31,0,25,20,24,31,27,20],
[30,31,25,0,30,24,34,25,23],
[30,35,30,20,0,25,31,29,28],
[31,35,26,26,25,0,33,28,26],
[25,24,19,16,19,17,0,20,17],
[31,29,23,25,21,22,30,0,24],
[26,33,30,27,22,24,33,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,25,25,29,31,28,32,24],
[17,0,16,18,19,19,19,17,27],
[25,34,0,27,28,29,26,24,29],
[25,32,23,0,23,22,28,28,32],
[21,31,22,27,0,19,18,21,29],
[19,31,21,28,31,0,26,24,22],
[22,31,24,22,32,24,0,22,25],
[18,33,26,22,29,26,28,0,23],
[26,23,21,18,21,28,25,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,20,13,22,27,21,23],
[26,0,21,31,21,29,30,28,25],
[24,29,0,18,17,28,29,28,20],
[30,19,32,0,29,36,36,31,22],
[37,29,33,21,0,30,39,26,22],
[28,21,22,14,20,0,32,26,16],
[23,20,21,14,11,18,0,13,15],
[29,22,22,19,24,24,37,0,20],
[27,25,30,28,28,34,35,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,32,27,22,19,27,31,26],
[28,0,35,30,21,27,26,30,34],
[18,15,0,20,16,23,25,20,23],
[23,20,30,0,29,26,29,29,37],
[28,29,34,21,0,23,20,29,28],
[31,23,27,24,27,0,28,31,31],
[23,24,25,21,30,22,0,28,23],
[19,20,30,21,21,19,22,0,28],
[24,16,27,13,22,19,27,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,16,34,20,24,16,22,21],
[29,0,27,44,15,34,33,30,39],
[34,23,0,29,27,24,33,24,29],
[16,6,21,0,10,11,15,17,11],
[30,35,23,40,0,35,28,30,41],
[26,16,26,39,15,0,15,22,16],
[34,17,17,35,22,35,0,30,36],
[28,20,26,33,20,28,20,0,27],
[29,11,21,39,9,34,14,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,22,33,24,32,21,34,18],
[21,0,25,30,22,30,22,25,24],
[28,25,0,29,21,27,25,27,20],
[17,20,21,0,20,23,20,31,15],
[26,28,29,30,0,35,26,33,25],
[18,20,23,27,15,0,19,22,17],
[29,28,25,30,24,31,0,41,26],
[16,25,23,19,17,28,9,0,14],
[32,26,30,35,25,33,24,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,27,27,27,21,26,27,36],
[24,0,20,15,30,26,30,15,25],
[23,30,0,19,39,26,19,14,34],
[23,35,31,0,34,30,35,24,24],
[23,20,11,16,0,26,25,20,20],
[29,24,24,20,24,0,24,20,25],
[24,20,31,15,25,26,0,24,29],
[23,35,36,26,30,30,26,0,24],
[14,25,16,26,30,25,21,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,28,31,26,31,24,30,26],
[29,0,25,34,27,25,26,30,29],
[22,25,0,32,26,27,24,27,24],
[19,16,18,0,22,21,17,21,22],
[24,23,24,28,0,27,23,27,25],
[19,25,23,29,23,0,23,21,25],
[26,24,26,33,27,27,0,26,27],
[20,20,23,29,23,29,24,0,28],
[24,21,26,28,25,25,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,37,33,25,27,24,27,24],
[21,0,29,28,21,26,24,25,26],
[13,21,0,23,20,20,20,22,25],
[17,22,27,0,21,26,21,22,22],
[25,29,30,29,0,29,26,30,33],
[23,24,30,24,21,0,22,26,24],
[26,26,30,29,24,28,0,30,27],
[23,25,28,28,20,24,20,0,17],
[26,24,25,28,17,26,23,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,18,20,30,26,29,22,26],
[26,0,23,20,24,27,27,24,25],
[32,27,0,25,27,32,32,23,25],
[30,30,25,0,31,33,30,24,29],
[20,26,23,19,0,27,31,18,24],
[24,23,18,17,23,0,22,23,24],
[21,23,18,20,19,28,0,24,27],
[28,26,27,26,32,27,26,0,23],
[24,25,25,21,26,26,23,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,35,20,15,21,15,7,0],
[29,0,28,29,30,27,22,16,0],
[15,22,0,22,8,14,8,0,8],
[30,21,28,0,21,21,21,7,7],
[35,20,42,29,0,14,20,22,20],
[29,23,36,29,36,0,36,30,23],
[35,28,42,29,30,14,0,16,13],
[43,34,50,43,28,20,34,0,27],
[50,50,42,43,30,27,37,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,26,20,22,25,28,15,26],
[31,0,29,35,32,25,33,22,30],
[24,21,0,24,22,24,24,24,23],
[30,15,26,0,21,24,25,20,28],
[28,18,28,29,0,25,22,21,24],
[25,25,26,26,25,0,24,21,26],
[22,17,26,25,28,26,0,25,28],
[35,28,26,30,29,29,25,0,26],
[24,20,27,22,26,24,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,25,21,18,24,15,27,16],
[23,0,26,26,19,19,22,34,17],
[25,24,0,14,20,24,24,26,17],
[29,24,36,0,25,25,26,33,18],
[32,31,30,25,0,35,23,31,27],
[26,31,26,25,15,0,17,35,25],
[35,28,26,24,27,33,0,30,26],
[23,16,24,17,19,15,20,0,21],
[34,33,33,32,23,25,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,28,28,31,26,30,23,20],
[22,0,29,20,28,33,30,17,21],
[22,21,0,27,28,22,31,28,22],
[22,30,23,0,31,27,29,15,31],
[19,22,22,19,0,21,20,24,21],
[24,17,28,23,29,0,25,22,17],
[20,20,19,21,30,25,0,21,21],
[27,33,22,35,26,28,29,0,28],
[30,29,28,19,29,33,29,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,16,24,19,34,19,27],
[27,0,21,23,25,21,28,21,22],
[27,29,0,20,23,23,32,23,27],
[34,27,30,0,24,22,33,27,23],
[26,25,27,26,0,23,27,28,22],
[31,29,27,28,27,0,35,29,25],
[16,22,18,17,23,15,0,23,20],
[31,29,27,23,22,21,27,0,26],
[23,28,23,27,28,25,30,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,30,26,18,20,16,8,22],
[12,0,24,20,20,24,12,12,22],
[20,26,0,8,30,28,8,8,30],
[24,30,42,0,30,20,0,8,22],
[32,30,20,20,0,20,8,8,22],
[30,26,22,30,30,0,30,30,22],
[34,38,42,50,42,20,0,30,34],
[42,38,42,42,42,20,20,0,22],
[28,28,20,28,28,28,16,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,21,21,23,15,35,21,21],
[35,0,14,20,22,22,35,28,14],
[29,36,0,35,22,36,27,27,29],
[29,30,15,0,22,29,42,28,22],
[27,28,28,28,0,42,35,28,20],
[35,28,14,21,8,0,27,20,21],
[15,15,23,8,15,23,0,15,15],
[29,22,23,22,22,30,35,0,8],
[29,36,21,28,30,29,35,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,22,28,12,17,16,25,22],
[31,0,24,35,23,36,18,36,33],
[28,26,0,21,21,28,17,21,38],
[22,15,29,0,24,21,19,29,31],
[38,27,29,26,0,25,27,41,37],
[33,14,22,29,25,0,25,29,31],
[34,32,33,31,23,25,0,35,38],
[25,14,29,21,9,21,15,0,30],
[28,17,12,19,13,19,12,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,26,26,27,17,18,34],
[27,0,28,19,17,19,18,19,36],
[24,22,0,35,25,27,22,23,33],
[24,31,15,0,16,10,22,23,23],
[24,33,25,34,0,10,16,34,33],
[23,31,23,40,40,0,31,32,23],
[33,32,28,28,34,19,0,32,42],
[32,31,27,27,16,18,18,0,35],
[16,14,17,27,17,27,8,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,22,27,11,27,15,10,18],
[27,0,26,36,26,38,22,23,23],
[28,24,0,30,24,29,16,26,20],
[23,14,20,0,18,27,23,23,21],
[39,24,26,32,0,35,32,27,29],
[23,12,21,23,15,0,15,8,15],
[35,28,34,27,18,35,0,32,15],
[40,27,24,27,23,42,18,0,23],
[32,27,30,29,21,35,35,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,26,22,21,29,23,18,27],
[30,0,27,27,25,26,28,27,29],
[24,23,0,29,27,30,28,23,26],
[28,23,21,0,24,26,27,24,30],
[29,25,23,26,0,31,30,23,30],
[21,24,20,24,19,0,24,23,23],
[27,22,22,23,20,26,0,21,25],
[32,23,27,26,27,27,29,0,29],
[23,21,24,20,20,27,25,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,29,26,25,25,26,23,24],
[27,0,29,32,27,23,30,20,25],
[21,21,0,26,17,24,22,18,20],
[24,18,24,0,24,19,21,15,21],
[25,23,33,26,0,25,21,20,24],
[25,27,26,31,25,0,27,27,25],
[24,20,28,29,29,23,0,25,27],
[27,30,32,35,30,23,25,0,29],
[26,25,30,29,26,25,23,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,31,30,25,24,25,24,30],
[17,0,20,27,21,24,18,22,23],
[19,30,0,22,17,21,13,21,23],
[20,23,28,0,23,31,20,21,28],
[25,29,33,27,0,32,25,27,28],
[26,26,29,19,18,0,15,26,25],
[25,32,37,30,25,35,0,31,30],
[26,28,29,29,23,24,19,0,25],
[20,27,27,22,22,25,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,30,28,20,30,26,20,23],
[22,0,23,26,22,21,23,21,20],
[20,27,0,34,25,25,28,19,26],
[22,24,16,0,14,29,20,19,19],
[30,28,25,36,0,27,30,25,23],
[20,29,25,21,23,0,26,21,23],
[24,27,22,30,20,24,0,21,23],
[30,29,31,31,25,29,29,0,26],
[27,30,24,31,27,27,27,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,21,27,34,26,20,24,23],
[27,0,21,29,32,27,22,26,25],
[29,29,0,28,36,27,25,28,26],
[23,21,22,0,29,27,20,23,20],
[16,18,14,21,0,24,20,19,23],
[24,23,23,23,26,0,23,24,25],
[30,28,25,30,30,27,0,23,29],
[26,24,22,27,31,26,27,0,24],
[27,25,24,30,27,25,21,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,35,30,28,28,25,34,31],
[19,0,25,22,26,30,22,20,33],
[15,25,0,20,21,28,24,26,27],
[20,28,30,0,29,33,30,33,30],
[22,24,29,21,0,30,25,28,29],
[22,20,22,17,20,0,20,28,20],
[25,28,26,20,25,30,0,28,30],
[16,30,24,17,22,22,22,0,25],
[19,17,23,20,21,30,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,30,22,27,27,28,27],
[25,0,23,24,21,27,22,24,29],
[24,27,0,26,26,31,26,28,29],
[20,26,24,0,23,26,20,24,24],
[28,29,24,27,0,32,26,28,30],
[23,23,19,24,18,0,21,29,22],
[23,28,24,30,24,29,0,27,32],
[22,26,22,26,22,21,23,0,27],
[23,21,21,26,20,28,18,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,30,18,26,24,22,20],
[28,0,28,36,25,31,26,32,25],
[27,22,0,30,22,25,19,30,23],
[20,14,20,0,17,19,19,17,18],
[32,25,28,33,0,28,28,27,30],
[24,19,25,31,22,0,22,25,25],
[26,24,31,31,22,28,0,31,27],
[28,18,20,33,23,25,19,0,28],
[30,25,27,32,20,25,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,30,28,26,24,29,25,19],
[24,0,28,28,26,23,30,28,24],
[20,22,0,25,19,16,26,24,24],
[22,22,25,0,23,18,29,20,21],
[24,24,31,27,0,35,27,31,25],
[26,27,34,32,15,0,38,33,32],
[21,20,24,21,23,12,0,20,13],
[25,22,26,30,19,17,30,0,23],
[31,26,26,29,25,18,37,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,18,23,24,27,22,32,29],
[25,0,23,18,27,28,26,26,29],
[32,27,0,27,20,25,24,33,30],
[27,32,23,0,32,32,31,30,33],
[26,23,30,18,0,27,26,29,32],
[23,22,25,18,23,0,31,23,30],
[28,24,26,19,24,19,0,27,28],
[18,24,17,20,21,27,23,0,22],
[21,21,20,17,18,20,22,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,30,24,32,23,26,27,24],
[24,0,23,23,22,14,21,25,18],
[20,27,0,20,25,22,24,22,20],
[26,27,30,0,26,23,32,30,24],
[18,28,25,24,0,29,25,22,14],
[27,36,28,27,21,0,28,29,27],
[24,29,26,18,25,22,0,27,21],
[23,25,28,20,28,21,23,0,23],
[26,32,30,26,36,23,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,30,29,27,28,25,28,29],
[21,0,28,31,25,26,23,28,27],
[20,22,0,26,23,23,22,24,26],
[21,19,24,0,22,21,22,22,20],
[23,25,27,28,0,25,20,25,30],
[22,24,27,29,25,0,18,24,28],
[25,27,28,28,30,32,0,30,30],
[22,22,26,28,25,26,20,0,25],
[21,23,24,30,20,22,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,32,30,29,27,21,27,22],
[21,0,25,31,27,19,24,23,29],
[18,25,0,24,32,27,20,26,23],
[20,19,26,0,26,17,17,23,23],
[21,23,18,24,0,25,13,18,27],
[23,31,23,33,25,0,18,25,32],
[29,26,30,33,37,32,0,34,24],
[23,27,24,27,32,25,16,0,33],
[28,21,27,27,23,18,26,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,25,25,22,20,18,22,15],
[38,0,31,28,25,32,24,36,28],
[25,19,0,26,21,24,21,23,22],
[25,22,24,0,22,29,22,25,23],
[28,25,29,28,0,25,26,26,25],
[30,18,26,21,25,0,24,26,22],
[32,26,29,28,24,26,0,29,33],
[28,14,27,25,24,24,21,0,16],
[35,22,28,27,25,28,17,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,26,27,30,21,23,22],
[26,0,26,26,24,23,15,23,15],
[27,24,0,19,29,24,19,25,22],
[24,24,31,0,20,30,26,25,24],
[23,26,21,30,0,32,25,27,27],
[20,27,26,20,18,0,21,22,22],
[29,35,31,24,25,29,0,24,28],
[27,27,25,25,23,28,26,0,21],
[28,35,28,26,23,28,22,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,37,17,38,27,36,24,30],
[24,0,28,17,33,29,32,30,38],
[13,22,0,17,20,19,24,19,18],
[33,33,33,0,34,33,33,25,29],
[12,17,30,16,0,27,25,23,19],
[23,21,31,17,23,0,31,24,28],
[14,18,26,17,25,19,0,15,28],
[26,20,31,25,27,26,35,0,27],
[20,12,32,21,31,22,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,20,16,28,17,25,28,12],
[34,0,18,28,20,25,28,25,22],
[30,32,0,29,28,26,31,21,27],
[34,22,21,0,31,21,32,25,21],
[22,30,22,19,0,23,19,23,19],
[33,25,24,29,27,0,29,32,29],
[25,22,19,18,31,21,0,26,19],
[22,25,29,25,27,18,24,0,22],
[38,28,23,29,31,21,31,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,20,20,30,20,25,35,35],
[20,0,20,18,28,20,24,23,23],
[30,30,0,25,31,27,26,24,25],
[30,32,25,0,41,21,27,36,37],
[20,22,19,9,0,11,23,20,20],
[30,30,23,29,39,0,21,30,36],
[25,26,24,23,27,29,0,18,23],
[15,27,26,14,30,20,32,0,32],
[15,27,25,13,30,14,27,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,18,19,29,18,32,32,18],
[33,0,24,27,29,21,25,32,35],
[32,26,0,21,31,27,22,23,27],
[31,23,29,0,34,27,31,26,22],
[21,21,19,16,0,17,8,22,16],
[32,29,23,23,33,0,27,31,20],
[18,25,28,19,42,23,0,23,17],
[18,18,27,24,28,19,27,0,24],
[32,15,23,28,34,30,33,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,29,27,38,36,25,27,34],
[9,0,18,15,29,28,18,20,14],
[21,32,0,28,33,28,24,26,28],
[23,35,22,0,35,26,20,20,26],
[12,21,17,15,0,25,12,17,20],
[14,22,22,24,25,0,21,19,20],
[25,32,26,30,38,29,0,27,30],
[23,30,24,30,33,31,23,0,29],
[16,36,22,24,30,30,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,22,24,24,23,26,29,22],
[23,0,20,26,21,19,28,34,23],
[28,30,0,27,25,24,27,36,30],
[26,24,23,0,23,27,30,23,20],
[26,29,25,27,0,26,25,33,26],
[27,31,26,23,24,0,23,27,29],
[24,22,23,20,25,27,0,28,29],
[21,16,14,27,17,23,22,0,21],
[28,27,20,30,24,21,21,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,31,27,18,27,20,27,28],
[21,0,28,24,25,28,21,23,24],
[19,22,0,27,19,27,22,29,24],
[23,26,23,0,21,24,23,25,28],
[32,25,31,29,0,29,23,28,26],
[23,22,23,26,21,0,26,21,21],
[30,29,28,27,27,24,0,29,26],
[23,27,21,25,22,29,21,0,22],
[22,26,26,22,24,29,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,20,25,30,21,20,27],
[25,0,22,21,23,20,25,18,24],
[24,28,0,22,21,23,17,16,19],
[30,29,28,0,33,23,31,23,28],
[25,27,29,17,0,21,24,21,24],
[20,30,27,27,29,0,21,23,22],
[29,25,33,19,26,29,0,25,28],
[30,32,34,27,29,27,25,0,32],
[23,26,31,22,26,28,22,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,28,21,40,33,23,28,15],
[33,0,28,27,37,37,32,25,24],
[22,22,0,25,50,37,36,34,23],
[29,23,25,0,36,45,30,27,26],
[10,13,0,14,0,19,24,13,15],
[17,13,13,5,31,0,20,19,9],
[27,18,14,20,26,30,0,22,24],
[22,25,16,23,37,31,28,0,23],
[35,26,27,24,35,41,26,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,31,23,30,24,21,26,26],
[28,0,28,25,28,25,22,23,25],
[19,22,0,15,23,26,18,20,24],
[27,25,35,0,28,28,25,28,32],
[20,22,27,22,0,28,24,22,29],
[26,25,24,22,22,0,22,22,24],
[29,28,32,25,26,28,0,28,32],
[24,27,30,22,28,28,22,0,23],
[24,25,26,18,21,26,18,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,24,17,21,16,20,25,29],
[34,0,34,19,34,20,26,26,39],
[26,16,0,18,25,23,21,23,39],
[33,31,32,0,24,15,25,29,34],
[29,16,25,26,0,12,21,21,30],
[34,30,27,35,38,0,20,30,42],
[30,24,29,25,29,30,0,30,34],
[25,24,27,21,29,20,20,0,34],
[21,11,11,16,20,8,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,18,19,14,13,23,14,18],
[41,0,22,23,27,22,31,32,22],
[32,28,0,14,18,18,33,33,18],
[31,27,36,0,32,23,27,23,32],
[36,23,32,18,0,31,27,27,23],
[37,28,32,27,19,0,28,32,24],
[27,19,17,23,23,22,0,28,18],
[36,18,17,27,23,18,22,0,18],
[32,28,32,18,27,26,32,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,27,30,28,29,27,25,28],
[19,0,21,31,29,23,25,23,23],
[23,29,0,33,30,21,31,16,31],
[20,19,17,0,23,23,23,19,17],
[22,21,20,27,0,20,27,20,20],
[21,27,29,27,30,0,30,22,26],
[23,25,19,27,23,20,0,18,23],
[25,27,34,31,30,28,32,0,30],
[22,27,19,33,30,24,27,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,32,26,29,28,23,25,27],
[25,0,32,25,31,28,30,27,28],
[18,18,0,22,21,22,22,22,27],
[24,25,28,0,23,27,24,26,26],
[21,19,29,27,0,28,26,27,27],
[22,22,28,23,22,0,28,27,26],
[27,20,28,26,24,22,0,20,24],
[25,23,28,24,23,23,30,0,26],
[23,22,23,24,23,24,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,32,18,34,50,34,34,34],
[16,0,32,34,50,16,50,34,50],
[18,18,0,18,18,18,18,18,18],
[32,16,32,0,34,32,16,32,16],
[16,0,32,16,0,16,0,16,32],
[0,34,32,18,34,0,34,18,34],
[16,0,32,34,50,16,0,34,50],
[16,16,32,18,34,32,16,0,16],
[16,0,32,34,18,16,0,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,19,20,20,20,18,23],
[34,0,31,32,25,29,32,24,33],
[33,19,0,23,24,25,27,17,27],
[31,18,27,0,22,20,26,25,33],
[30,25,26,28,0,23,27,21,25],
[30,21,25,30,27,0,29,23,32],
[30,18,23,24,23,21,0,20,24],
[32,26,33,25,29,27,30,0,32],
[27,17,23,17,25,18,26,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,28,29,27,25,32,25,25],
[23,0,20,31,22,26,36,25,23],
[22,30,0,34,31,25,32,29,24],
[21,19,16,0,21,18,29,24,19],
[23,28,19,29,0,20,31,24,23],
[25,24,25,32,30,0,31,26,22],
[18,14,18,21,19,19,0,16,18],
[25,25,21,26,26,24,34,0,22],
[25,27,26,31,27,28,32,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,35,22,24,27,18,24,26],
[23,0,37,23,28,29,21,31,27],
[15,13,0,18,21,33,20,23,18],
[28,27,32,0,25,29,27,24,28],
[26,22,29,25,0,21,25,28,29],
[23,21,17,21,29,0,24,21,26],
[32,29,30,23,25,26,0,28,35],
[26,19,27,26,22,29,22,0,34],
[24,23,32,22,21,24,15,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,28,32,36,28,27,27,21],
[19,0,30,37,23,26,16,36,27],
[22,20,0,35,12,26,21,30,27],
[18,13,15,0,18,20,12,17,17],
[14,27,38,32,0,33,28,26,22],
[22,24,24,30,17,0,24,24,16],
[23,34,29,38,22,26,0,28,23],
[23,14,20,33,24,26,22,0,16],
[29,23,23,33,28,34,27,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,18,28,27,20,33,27,26],
[23,0,23,24,20,23,26,24,27],
[32,27,0,30,25,26,29,25,27],
[22,26,20,0,20,18,27,25,23],
[23,30,25,30,0,26,30,26,26],
[30,27,24,32,24,0,32,22,29],
[17,24,21,23,20,18,0,26,23],
[23,26,25,25,24,28,24,0,24],
[24,23,23,27,24,21,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,23,27,25,26,27,28,28],
[23,0,23,22,21,25,23,26,27],
[27,27,0,24,25,22,25,29,26],
[23,28,26,0,23,25,23,27,26],
[25,29,25,27,0,27,25,23,29],
[24,25,28,25,23,0,29,27,28],
[23,27,25,27,25,21,0,27,26],
[22,24,21,23,27,23,23,0,26],
[22,23,24,24,21,22,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,29,24,32,23,24,30,26],
[26,0,31,19,30,24,24,30,29],
[21,19,0,25,22,13,17,32,16],
[26,31,25,0,25,20,21,31,27],
[18,20,28,25,0,18,20,28,24],
[27,26,37,30,32,0,28,35,24],
[26,26,33,29,30,22,0,29,24],
[20,20,18,19,22,15,21,0,28],
[24,21,34,23,26,26,26,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,28,29,27,33,29,27],
[29,0,23,27,26,25,34,27,27],
[29,27,0,31,30,29,28,24,29],
[22,23,19,0,26,22,29,22,23],
[21,24,20,24,0,25,29,17,19],
[23,25,21,28,25,0,26,23,24],
[17,16,22,21,21,24,0,21,24],
[21,23,26,28,33,27,29,0,28],
[23,23,21,27,31,26,26,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,26,31,25,33,31,25],
[25,0,28,26,29,25,31,24,21],
[20,22,0,24,23,22,27,22,17],
[24,24,26,0,23,24,26,23,23],
[19,21,27,27,0,22,27,23,21],
[25,25,28,26,28,0,28,23,22],
[17,19,23,24,23,22,0,22,19],
[19,26,28,27,27,27,28,0,20],
[25,29,33,27,29,28,31,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,23,20,27,19,27,24,21],
[32,0,32,30,34,24,27,33,26],
[27,18,0,24,26,21,25,23,24],
[30,20,26,0,28,29,28,30,27],
[23,16,24,22,0,16,24,23,18],
[31,26,29,21,34,0,31,25,28],
[23,23,25,22,26,19,0,24,24],
[26,17,27,20,27,25,26,0,21],
[29,24,26,23,32,22,26,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,34,21,28,22,37,22,26],
[29,0,27,26,24,28,30,33,22],
[16,23,0,23,23,26,25,23,20],
[29,24,27,0,29,26,31,25,25],
[22,26,27,21,0,15,35,27,6],
[28,22,24,24,35,0,36,31,25],
[13,20,25,19,15,14,0,15,11],
[28,17,27,25,23,19,35,0,17],
[24,28,30,25,44,25,39,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,30,21,21,30,28,27,27],
[26,0,31,27,19,30,28,23,23],
[20,19,0,15,18,24,23,16,23],
[29,23,35,0,26,33,29,24,30],
[29,31,32,24,0,33,28,26,32],
[20,20,26,17,17,0,27,16,22],
[22,22,27,21,22,23,0,15,31],
[23,27,34,26,24,34,35,0,32],
[23,27,27,20,18,28,19,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,13,16,24,21,16,21,26],
[20,0,20,27,29,28,21,17,31],
[37,30,0,21,29,25,20,29,30],
[34,23,29,0,36,28,28,32,38],
[26,21,21,14,0,21,15,19,29],
[29,22,25,22,29,0,15,21,34],
[34,29,30,22,35,35,0,35,41],
[29,33,21,18,31,29,15,0,29],
[24,19,20,12,21,16,9,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,15,19,19,11,11,15,15],
[24,0,29,31,29,31,23,28,25],
[35,21,0,32,18,24,20,24,26],
[31,19,18,0,18,11,19,20,24],
[31,21,32,32,0,26,23,28,28],
[39,19,26,39,24,0,27,32,33],
[39,27,30,31,27,23,0,32,33],
[35,22,26,30,22,18,18,0,26],
[35,25,24,26,22,17,17,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,19,18,19,21,22,25,20],
[25,0,26,20,16,22,25,24,24],
[31,24,0,30,29,24,29,33,25],
[32,30,20,0,26,30,28,33,29],
[31,34,21,24,0,31,31,35,34],
[29,28,26,20,19,0,32,29,22],
[28,25,21,22,19,18,0,24,19],
[25,26,17,17,15,21,26,0,21],
[30,26,25,21,16,28,31,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,34,35,32,22,29,28,27],
[15,0,26,29,25,24,29,18,26],
[16,24,0,20,24,29,25,18,26],
[15,21,30,0,29,23,18,22,19],
[18,25,26,21,0,18,25,20,24],
[28,26,21,27,32,0,22,24,29],
[21,21,25,32,25,28,0,26,25],
[22,32,32,28,30,26,24,0,29],
[23,24,24,31,26,21,25,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,26,28,25,23,29,30],
[25,0,31,32,31,29,26,32,35],
[26,19,0,30,34,31,32,27,43],
[24,18,20,0,21,22,22,30,28],
[22,19,16,29,0,28,25,27,33],
[25,21,19,28,22,0,25,35,33],
[27,24,18,28,25,25,0,32,33],
[21,18,23,20,23,15,18,0,25],
[20,15,7,22,17,17,17,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,27,26,24,23,22,31,24],
[28,0,24,26,29,26,30,31,28],
[23,26,0,22,23,20,26,24,24],
[24,24,28,0,24,22,23,29,24],
[26,21,27,26,0,26,23,35,24],
[27,24,30,28,24,0,25,29,26],
[28,20,24,27,27,25,0,29,23],
[19,19,26,21,15,21,21,0,25],
[26,22,26,26,26,24,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,20,16,20,8,12,17,8],
[33,0,21,26,30,17,25,22,29],
[30,29,0,34,34,22,34,31,22],
[34,24,16,0,20,26,32,20,30],
[30,20,16,30,0,14,30,26,18],
[42,33,28,24,36,0,31,21,23],
[38,25,16,18,20,19,0,17,30],
[33,28,19,30,24,29,33,0,25],
[42,21,28,20,32,27,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,22,26,22,27,35,33,22],
[20,0,28,18,19,30,29,30,23],
[28,22,0,26,23,23,28,31,18],
[24,32,24,0,21,26,37,34,25],
[28,31,27,29,0,29,34,37,24],
[23,20,27,24,21,0,30,31,24],
[15,21,22,13,16,20,0,20,8],
[17,20,19,16,13,19,30,0,18],
[28,27,32,25,26,26,42,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,25,31,26,32,29,35,32],
[15,0,8,15,10,24,14,19,20],
[25,42,0,26,32,35,38,27,31],
[19,35,24,0,27,31,30,36,36],
[24,40,18,23,0,33,33,37,29],
[18,26,15,19,17,0,28,20,34],
[21,36,12,20,17,22,0,28,18],
[15,31,23,14,13,30,22,0,24],
[18,30,19,14,21,16,32,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,32,25,31,32,25,24],
[25,0,25,25,24,28,25,20,23],
[25,25,0,29,28,31,24,30,25],
[18,25,21,0,20,26,26,28,23],
[25,26,22,30,0,33,31,22,27],
[19,22,19,24,17,0,20,23,17],
[18,25,26,24,19,30,0,28,22],
[25,30,20,22,28,27,22,0,29],
[26,27,25,27,23,33,28,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,28,23,24,19,32,22,25],
[27,0,29,23,26,26,25,22,22],
[22,21,0,24,24,23,25,23,30],
[27,27,26,0,25,25,32,23,28],
[26,24,26,25,0,28,30,25,24],
[31,24,27,25,22,0,27,22,25],
[18,25,25,18,20,23,0,17,25],
[28,28,27,27,25,28,33,0,28],
[25,28,20,22,26,25,25,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,16,50,32,32,32,50,32],
[0,0,0,34,0,16,32,50,0],
[34,50,0,50,50,32,50,50,16],
[0,16,0,0,0,16,16,34,0],
[18,50,0,50,0,32,32,50,16],
[18,34,18,34,18,0,34,50,0],
[18,18,0,34,18,16,0,34,0],
[0,0,0,16,0,0,16,0,0],
[18,50,34,50,34,50,50,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,29,21,35,17,38,35,29],
[24,0,31,26,35,26,36,32,22],
[21,19,0,12,32,18,31,34,24],
[29,24,38,0,29,33,29,29,26],
[15,15,18,21,0,19,19,24,27],
[33,24,32,17,31,0,34,33,30],
[12,14,19,21,31,16,0,36,25],
[15,18,16,21,26,17,14,0,27],
[21,28,26,24,23,20,25,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,33,34,21,39,27,32,28],
[33,0,33,34,32,34,33,33,23],
[17,17,0,29,27,18,22,27,23],
[16,16,21,0,20,22,20,26,22],
[29,18,23,30,0,30,28,33,24],
[11,16,32,28,20,0,27,26,22],
[23,17,28,30,22,23,0,21,18],
[18,17,23,24,17,24,29,0,12],
[22,27,27,28,26,28,32,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,32,28,26,24,30,22,26],
[27,0,36,28,24,24,28,27,27],
[18,14,0,19,16,17,25,14,17],
[22,22,31,0,27,24,28,20,19],
[24,26,34,23,0,27,31,22,24],
[26,26,33,26,23,0,32,18,26],
[20,22,25,22,19,18,0,18,18],
[28,23,36,30,28,32,32,0,26],
[24,23,33,31,26,24,32,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,25,28,22,19,22,21],
[27,0,24,30,27,27,19,24,24],
[27,26,0,28,25,23,16,23,23],
[25,20,22,0,21,17,19,17,20],
[22,23,25,29,0,26,21,26,24],
[28,23,27,33,24,0,24,24,27],
[31,31,34,31,29,26,0,24,31],
[28,26,27,33,24,26,26,0,19],
[29,26,27,30,26,23,19,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,19,22,25,22,25,20],
[30,0,28,25,29,31,26,26,27],
[30,22,0,18,25,26,26,25,22],
[31,25,32,0,28,34,26,30,28],
[28,21,25,22,0,30,28,29,23],
[25,19,24,16,20,0,27,23,19],
[28,24,24,24,22,23,0,26,20],
[25,24,25,20,21,27,24,0,19],
[30,23,28,22,27,31,30,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,35,23,23,25,30,23,37],
[25,0,36,29,28,28,31,28,35],
[15,14,0,18,24,18,23,17,21],
[27,21,32,0,24,21,31,25,27],
[27,22,26,26,0,24,29,27,28],
[25,22,32,29,26,0,34,25,34],
[20,19,27,19,21,16,0,20,23],
[27,22,33,25,23,25,30,0,36],
[13,15,29,23,22,16,27,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,24,23,20,19,21,14,18],
[23,0,20,24,22,15,23,16,17],
[26,30,0,22,18,25,23,20,26],
[27,26,28,0,26,20,22,25,20],
[30,28,32,24,0,24,25,18,24],
[31,35,25,30,26,0,26,26,22],
[29,27,27,28,25,24,0,25,20],
[36,34,30,25,32,24,25,0,23],
[32,33,24,30,26,28,30,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,25,24,20,26,28,35,26],
[22,0,24,26,23,21,28,29,23],
[25,26,0,25,22,20,28,24,23],
[26,24,25,0,23,23,30,29,25],
[30,27,28,27,0,24,27,32,25],
[24,29,30,27,26,0,30,34,28],
[22,22,22,20,23,20,0,23,18],
[15,21,26,21,18,16,27,0,17],
[24,27,27,25,25,22,32,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,29,25,23,25,31,27,27],
[23,0,27,22,26,24,26,27,26],
[21,23,0,27,22,20,26,26,28],
[25,28,23,0,25,22,30,24,27],
[27,24,28,25,0,21,30,28,27],
[25,26,30,28,29,0,34,30,30],
[19,24,24,20,20,16,0,27,26],
[23,23,24,26,22,20,23,0,26],
[23,24,22,23,23,20,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,24,21,27,29,25,24,25],
[20,0,22,18,26,21,22,20,24],
[26,28,0,25,35,31,28,29,31],
[29,32,25,0,29,30,29,34,22],
[23,24,15,21,0,27,18,27,16],
[21,29,19,20,23,0,21,28,19],
[25,28,22,21,32,29,0,31,24],
[26,30,21,16,23,22,19,0,20],
[25,26,19,28,34,31,26,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,20,15,25,20,11,13,13],
[37,0,26,21,28,29,25,24,25],
[30,24,0,19,21,20,29,19,13],
[35,29,31,0,35,27,20,22,22],
[25,22,29,15,0,21,27,17,22],
[30,21,30,23,29,0,23,15,26],
[39,25,21,30,23,27,0,29,24],
[37,26,31,28,33,35,21,0,27],
[37,25,37,28,28,24,26,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,31,16,25,26,22,30,20],
[28,0,28,24,32,28,23,36,33],
[19,22,0,19,22,29,23,31,22],
[34,26,31,0,29,25,27,30,29],
[25,18,28,21,0,34,24,29,18],
[24,22,21,25,16,0,23,33,20],
[28,27,27,23,26,27,0,35,26],
[20,14,19,20,21,17,15,0,19],
[30,17,28,21,32,30,24,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,4,12,24,16,21,8,18],
[36,0,15,24,15,22,40,21,23],
[46,35,0,37,35,21,39,24,29],
[38,26,13,0,18,25,34,28,26],
[26,35,15,32,0,23,34,23,32],
[34,28,29,25,27,0,33,21,38],
[29,10,11,16,16,17,0,9,25],
[42,29,26,22,27,29,41,0,35],
[32,27,21,24,18,12,25,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,33,22,31,25,22,24,26],
[25,0,30,22,34,22,21,26,20],
[17,20,0,15,18,17,16,12,10],
[28,28,35,0,22,23,19,25,22],
[19,16,32,28,0,21,23,26,22],
[25,28,33,27,29,0,33,32,28],
[28,29,34,31,27,17,0,34,23],
[26,24,38,25,24,18,16,0,13],
[24,30,40,28,28,22,27,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,25,27,30,28,34,32,29],
[19,0,24,22,24,22,25,27,18],
[25,26,0,25,26,28,24,26,32],
[23,28,25,0,24,27,26,30,29],
[20,26,24,26,0,21,21,28,23],
[22,28,22,23,29,0,29,31,22],
[16,25,26,24,29,21,0,30,22],
[18,23,24,20,22,19,20,0,26],
[21,32,18,21,27,28,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,21,18,24,17,19,20],
[34,0,24,29,26,28,27,21,31],
[32,26,0,28,19,30,28,25,32],
[29,21,22,0,17,27,23,20,23],
[32,24,31,33,0,27,27,22,31],
[26,22,20,23,23,0,24,21,25],
[33,23,22,27,23,26,0,27,28],
[31,29,25,30,28,29,23,0,31],
[30,19,18,27,19,25,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,33,24,20,21,20,30,19],
[26,0,32,20,22,28,19,26,22],
[17,18,0,16,14,18,9,15,16],
[26,30,34,0,23,26,18,30,22],
[30,28,36,27,0,21,22,25,26],
[29,22,32,24,29,0,14,27,24],
[30,31,41,32,28,36,0,28,24],
[20,24,35,20,25,23,22,0,27],
[31,28,34,28,24,26,26,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,19,24,29,27,21,29,18],
[24,0,29,22,27,25,22,23,23],
[31,21,0,33,33,26,24,30,25],
[26,28,17,0,27,29,21,28,20],
[21,23,17,23,0,28,19,22,17],
[23,25,24,21,22,0,15,26,16],
[29,28,26,29,31,35,0,25,24],
[21,27,20,22,28,24,25,0,25],
[32,27,25,30,33,34,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,22,20,25,30,34,27,32],
[18,0,22,21,17,28,28,21,32],
[28,28,0,19,22,22,32,23,29],
[30,29,31,0,36,23,32,26,29],
[25,33,28,14,0,19,27,24,25],
[20,22,28,27,31,0,25,23,31],
[16,22,18,18,23,25,0,20,27],
[23,29,27,24,26,27,30,0,28],
[18,18,21,21,25,19,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,30,24,30,30,29,28,27],
[33,0,34,24,28,30,29,32,27],
[20,16,0,15,22,24,19,25,17],
[26,26,35,0,34,32,23,28,25],
[20,22,28,16,0,24,20,28,17],
[20,20,26,18,26,0,22,21,23],
[21,21,31,27,30,28,0,24,21],
[22,18,25,22,22,29,26,0,20],
[23,23,33,25,33,27,29,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,27,20,21,27,15,34,24],
[21,0,30,23,15,19,5,23,18],
[23,20,0,5,14,13,9,26,18],
[30,27,45,0,28,25,29,30,32],
[29,35,36,22,0,25,22,34,17],
[23,31,37,25,25,0,22,34,23],
[35,45,41,21,28,28,0,39,17],
[16,27,24,20,16,16,11,0,19],
[26,32,32,18,33,27,33,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,28,29,22,26,27,30],
[27,0,29,27,34,32,30,23,28],
[24,21,0,28,32,26,34,25,31],
[22,23,22,0,29,25,30,29,28],
[21,16,18,21,0,17,24,20,19],
[28,18,24,25,33,0,29,24,25],
[24,20,16,20,26,21,0,23,27],
[23,27,25,21,30,26,27,0,25],
[20,22,19,22,31,25,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,28,31,27,23,26,22],
[26,0,27,29,31,28,23,29,28],
[24,23,0,26,30,29,26,29,27],
[22,21,24,0,27,23,25,19,24],
[19,19,20,23,0,20,23,21,18],
[23,22,21,27,30,0,23,27,21],
[27,27,24,25,27,27,0,27,26],
[24,21,21,31,29,23,23,0,24],
[28,22,23,26,32,29,24,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,14,11,36,26,27,29,23],
[35,0,20,23,41,28,40,31,35],
[36,30,0,31,32,20,43,38,27],
[39,27,19,0,37,36,42,22,32],
[14,9,18,13,0,26,27,22,22],
[24,22,30,14,24,0,32,31,17],
[23,10,7,8,23,18,0,30,16],
[21,19,12,28,28,19,20,0,14],
[27,15,23,18,28,33,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,29,36,27,27,26,37,25],
[19,0,26,23,35,33,32,31,20],
[21,24,0,27,22,20,19,22,11],
[14,27,23,0,28,25,22,26,21],
[23,15,28,22,0,21,26,26,20],
[23,17,30,25,29,0,22,32,33],
[24,18,31,28,24,28,0,27,19],
[13,19,28,24,24,18,23,0,22],
[25,30,39,29,30,17,31,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,27,22,21,20,25,22,18],
[29,0,22,24,26,25,28,20,23],
[23,28,0,28,21,25,26,25,23],
[28,26,22,0,27,25,27,25,22],
[29,24,29,23,0,25,25,27,23],
[30,25,25,25,25,0,27,19,20],
[25,22,24,23,25,23,0,23,22],
[28,30,25,25,23,31,27,0,26],
[32,27,27,28,27,30,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,34,17,22,26,27,34,38],
[21,0,29,13,16,19,25,13,22],
[16,21,0,17,9,15,21,22,26],
[33,37,33,0,33,27,21,17,41],
[28,34,41,17,0,27,20,34,29],
[24,31,35,23,23,0,28,28,40],
[23,25,29,29,30,22,0,30,24],
[16,37,28,33,16,22,20,0,32],
[12,28,24,9,21,10,26,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,27,29,16,31,26,27],
[24,0,25,31,23,29,28,23,30],
[22,25,0,26,32,23,30,22,28],
[23,19,24,0,20,20,21,17,23],
[21,27,18,30,0,24,26,22,27],
[34,21,27,30,26,0,21,28,26],
[19,22,20,29,24,29,0,26,28],
[24,27,28,33,28,22,24,0,27],
[23,20,22,27,23,24,22,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,29,29,25,25,26,27,28],
[27,0,29,31,25,22,25,25,26],
[21,21,0,24,23,20,21,23,23],
[21,19,26,0,22,24,21,22,21],
[25,25,27,28,0,22,27,18,27],
[25,28,30,26,28,0,26,26,32],
[24,25,29,29,23,24,0,20,26],
[23,25,27,28,32,24,30,0,24],
[22,24,27,29,23,18,24,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,25,38,38,24,38,24,25],
[39,0,25,50,27,13,27,36,27],
[25,25,0,25,25,25,39,25,27],
[12,0,25,0,27,13,27,25,14],
[12,23,25,23,0,24,25,36,25],
[26,37,25,37,26,0,37,23,25],
[12,23,11,23,25,13,0,36,11],
[26,14,25,25,14,27,14,0,14],
[25,23,23,36,25,25,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,32,29,27,26,28,25,26],
[21,0,27,23,25,19,22,17,26],
[18,23,0,28,23,19,24,22,27],
[21,27,22,0,18,21,23,21,18],
[23,25,27,32,0,23,30,21,29],
[24,31,31,29,27,0,25,27,30],
[22,28,26,27,20,25,0,21,27],
[25,33,28,29,29,23,29,0,27],
[24,24,23,32,21,20,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,31,23,25,26,23,31,31],
[26,0,36,22,24,28,25,25,33],
[19,14,0,24,14,25,19,27,18],
[27,28,26,0,23,27,27,26,26],
[25,26,36,27,0,25,22,34,25],
[24,22,25,23,25,0,25,26,24],
[27,25,31,23,28,25,0,33,27],
[19,25,23,24,16,24,17,0,22],
[19,17,32,24,25,26,23,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,22,29,27,24,26,29],
[25,0,21,26,28,18,23,27,22],
[20,29,0,31,30,28,24,26,28],
[28,24,19,0,29,25,22,34,23],
[21,22,20,21,0,19,19,20,19],
[23,32,22,25,31,0,21,25,27],
[26,27,26,28,31,29,0,25,26],
[24,23,24,16,30,25,25,0,23],
[21,28,22,27,31,23,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,32,24,26,20,26,28,29],
[28,0,29,27,28,25,29,27,23],
[18,21,0,24,21,25,18,20,15],
[26,23,26,0,25,22,25,29,26],
[24,22,29,25,0,22,24,21,17],
[30,25,25,28,28,0,27,29,26],
[24,21,32,25,26,23,0,28,17],
[22,23,30,21,29,21,22,0,17],
[21,27,35,24,33,24,33,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,22,21,27,19,22,22,14],
[36,0,30,25,33,29,26,26,32],
[28,20,0,29,27,20,27,30,23],
[29,25,21,0,29,23,20,24,23],
[23,17,23,21,0,17,19,22,13],
[31,21,30,27,33,0,21,29,25],
[28,24,23,30,31,29,0,29,22],
[28,24,20,26,28,21,21,0,17],
[36,18,27,27,37,25,28,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,22,25,28,25,24,28],
[26,0,26,26,28,23,27,26,28],
[25,24,0,27,29,23,25,25,30],
[28,24,23,0,25,28,29,27,31],
[25,22,21,25,0,24,27,25,27],
[22,27,27,22,26,0,28,29,28],
[25,23,25,21,23,22,0,29,30],
[26,24,25,23,25,21,21,0,23],
[22,22,20,19,23,22,20,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,33,25,27,19,24,30],
[21,0,20,26,25,16,19,25,21],
[24,30,0,29,25,28,24,27,30],
[17,24,21,0,16,16,20,19,19],
[25,25,25,34,0,29,22,22,25],
[23,34,22,34,21,0,24,26,30],
[31,31,26,30,28,26,0,25,30],
[26,25,23,31,28,24,25,0,28],
[20,29,20,31,25,20,20,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,30,25,23,32,25,25,21],
[23,0,25,21,20,26,29,24,19],
[20,25,0,22,28,29,27,26,19],
[25,29,28,0,28,27,33,24,25],
[27,30,22,22,0,30,30,27,22],
[18,24,21,23,20,0,25,19,21],
[25,21,23,17,20,25,0,19,26],
[25,26,24,26,23,31,31,0,23],
[29,31,31,25,28,29,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,35,19,34,50,31,50,35],
[15,0,19,34,34,50,15,50,35],
[15,31,0,34,34,50,31,50,50],
[31,16,16,0,34,50,31,50,35],
[16,16,16,16,0,16,31,16,16],
[0,0,0,0,34,0,15,31,0],
[19,35,19,19,19,35,0,35,35],
[0,0,0,0,34,19,15,0,0],
[15,15,0,15,34,50,15,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,21,19,26,22,21,22,26],
[24,0,17,23,29,25,21,29,18],
[29,33,0,28,30,28,24,29,30],
[31,27,22,0,30,24,25,23,25],
[24,21,20,20,0,23,16,31,22],
[28,25,22,26,27,0,21,27,23],
[29,29,26,25,34,29,0,26,26],
[28,21,21,27,19,23,24,0,27],
[24,32,20,25,28,27,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,22,20,25,25,20,25,22],
[15,0,20,19,25,25,17,29,13],
[28,30,0,28,33,28,24,21,24],
[30,31,22,0,31,34,21,24,28],
[25,25,17,19,0,25,13,23,24],
[25,25,22,16,25,0,17,22,22],
[30,33,26,29,37,33,0,19,17],
[25,21,29,26,27,28,31,0,20],
[28,37,26,22,26,28,33,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,30,29,21,30,34,23],
[24,0,30,22,29,22,29,35,23],
[27,20,0,25,27,22,24,32,17],
[20,28,25,0,31,24,27,29,23],
[21,21,23,19,0,20,23,20,19],
[29,28,28,26,30,0,36,36,25],
[20,21,26,23,27,14,0,26,20],
[16,15,18,21,30,14,24,0,20],
[27,27,33,27,31,25,30,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,18,16,17,6,21,9,12],
[30,0,30,18,31,16,20,31,22],
[32,20,0,12,24,17,15,17,15],
[34,32,38,0,37,19,28,26,23],
[33,19,26,13,0,13,20,12,14],
[44,34,33,31,37,0,27,31,25],
[29,30,35,22,30,23,0,27,19],
[41,19,33,24,38,19,23,0,20],
[38,28,35,27,36,25,31,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,30,29,27,23,32,20],
[25,0,24,28,24,22,25,25,22],
[24,26,0,30,31,31,33,29,26],
[20,22,20,0,23,24,21,18,18],
[21,26,19,27,0,21,20,23,25],
[23,28,19,26,29,0,23,20,26],
[27,25,17,29,30,27,0,27,23],
[18,25,21,32,27,30,23,0,24],
[30,28,24,32,25,24,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,16,26,26,18,26,21,19],
[23,0,18,24,22,16,22,25,18],
[34,32,0,31,37,25,33,33,20],
[24,26,19,0,26,22,26,26,20],
[24,28,13,24,0,21,21,26,21],
[32,34,25,28,29,0,24,28,25],
[24,28,17,24,29,26,0,27,24],
[29,25,17,24,24,22,23,0,27],
[31,32,30,30,29,25,26,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,30,25,26,25,23,18,26],
[27,0,35,32,30,29,26,26,23],
[20,15,0,19,22,24,18,17,19],
[25,18,31,0,24,29,26,21,22],
[24,20,28,26,0,28,29,19,24],
[25,21,26,21,22,0,23,19,19],
[27,24,32,24,21,27,0,23,25],
[32,24,33,29,31,31,27,0,25],
[24,27,31,28,26,31,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,31,27,24,37,27,34],
[26,0,27,28,28,24,33,24,33],
[22,23,0,27,26,24,34,28,32],
[19,22,23,0,19,21,32,20,37],
[23,22,24,31,0,24,31,24,37],
[26,26,26,29,26,0,31,24,34],
[13,17,16,18,19,19,0,16,30],
[23,26,22,30,26,26,34,0,33],
[16,17,18,13,13,16,20,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,24,30,34,22,28,24,23],
[31,0,28,23,39,19,28,33,25],
[26,22,0,16,29,32,36,41,32],
[20,27,34,0,38,32,38,34,26],
[16,11,21,12,0,21,39,40,23],
[28,31,18,18,29,0,25,33,20],
[22,22,14,12,11,25,0,25,14],
[26,17,9,16,10,17,25,0,8],
[27,25,18,24,27,30,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,28,30,22,37,24,35,18],
[23,0,24,22,23,24,20,27,19],
[22,26,0,26,17,24,21,30,9],
[20,28,24,0,22,24,22,20,25],
[28,27,33,28,0,34,29,32,10],
[13,26,26,26,16,0,23,24,11],
[26,30,29,28,21,27,0,20,13],
[15,23,20,30,18,26,30,0,15],
[32,31,41,25,40,39,37,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,27,34,31,33,30,32],
[30,0,16,17,33,32,26,20,24],
[26,34,0,18,36,34,30,28,35],
[23,33,32,0,37,34,35,32,27],
[16,17,14,13,0,17,20,20,16],
[19,18,16,16,33,0,28,22,28],
[17,24,20,15,30,22,0,28,23],
[20,30,22,18,30,28,22,0,22],
[18,26,15,23,34,22,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,29,29,34,26,23,25,19],
[23,0,27,25,27,31,26,23,20],
[21,23,0,24,25,24,26,23,22],
[21,25,26,0,29,30,27,26,22],
[16,23,25,21,0,21,21,21,18],
[24,19,26,20,29,0,26,22,22],
[27,24,24,23,29,24,0,23,23],
[25,27,27,24,29,28,27,0,27],
[31,30,28,28,32,28,27,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,21,24,19,18,25,23,19],
[26,0,23,23,28,28,29,25,27],
[29,27,0,27,29,23,30,26,21],
[26,27,23,0,30,25,28,22,22],
[31,22,21,20,0,22,28,23,27],
[32,22,27,25,28,0,29,25,30],
[25,21,20,22,22,21,0,19,28],
[27,25,24,28,27,25,31,0,26],
[31,23,29,28,23,20,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,33,31,31,27,24,31,33],
[27,0,32,23,22,21,16,27,29],
[17,18,0,15,22,17,19,21,27],
[19,27,35,0,21,24,22,32,28],
[19,28,28,29,0,27,23,29,29],
[23,29,33,26,23,0,26,26,30],
[26,34,31,28,27,24,0,33,33],
[19,23,29,18,21,24,17,0,26],
[17,21,23,22,21,20,17,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,28,20,24,17,21,23,22],
[19,0,30,23,19,20,21,25,19],
[22,20,0,19,21,20,21,22,25],
[30,27,31,0,22,23,22,33,21],
[26,31,29,28,0,24,29,27,17],
[33,30,30,27,26,0,25,32,23],
[29,29,29,28,21,25,0,28,20],
[27,25,28,17,23,18,22,0,22],
[28,31,25,29,33,27,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,33,25,26,34,27,29,29],
[21,0,29,24,24,30,27,33,25],
[17,21,0,23,16,22,21,24,23],
[25,26,27,0,26,28,29,30,30],
[24,26,34,24,0,34,25,29,30],
[16,20,28,22,16,0,22,22,21],
[23,23,29,21,25,28,0,24,26],
[21,17,26,20,21,28,26,0,21],
[21,25,27,20,20,29,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,25,25,26,23,21,22,25],
[30,0,31,22,31,25,31,33,34],
[25,19,0,22,30,25,23,27,28],
[25,28,28,0,32,28,28,29,33],
[24,19,20,18,0,20,23,21,27],
[27,25,25,22,30,0,26,25,28],
[29,19,27,22,27,24,0,28,30],
[28,17,23,21,29,25,22,0,31],
[25,16,22,17,23,22,20,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,30,35,15,26,30,14,17],
[22,0,22,33,21,17,21,14,21],
[20,28,0,37,24,27,22,22,24],
[15,17,13,0,18,5,23,9,15],
[35,29,26,32,0,25,22,28,34],
[24,33,23,45,25,0,32,22,29],
[20,29,28,27,28,18,0,23,27],
[36,36,28,41,22,28,27,0,30],
[33,29,26,35,16,21,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,28,24,27,29,26,26,33],
[21,0,31,24,21,27,28,22,28],
[22,19,0,22,26,29,22,20,29],
[26,26,28,0,27,33,27,23,37],
[23,29,24,23,0,27,19,23,25],
[21,23,21,17,23,0,21,22,29],
[24,22,28,23,31,29,0,27,29],
[24,28,30,27,27,28,23,0,33],
[17,22,21,13,25,21,21,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,28,27,26,30,23,28,29],
[30,0,32,28,34,32,26,25,28],
[22,18,0,25,24,30,17,25,22],
[23,22,25,0,25,30,22,24,27],
[24,16,26,25,0,26,20,23,25],
[20,18,20,20,24,0,19,21,24],
[27,24,33,28,30,31,0,27,30],
[22,25,25,26,27,29,23,0,26],
[21,22,28,23,25,26,20,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,30,25,27,18,26,29,21],
[29,0,34,26,26,25,32,35,20],
[20,16,0,18,21,26,18,29,25],
[25,24,32,0,22,25,28,26,18],
[23,24,29,28,0,24,29,30,25],
[32,25,24,25,26,0,23,21,23],
[24,18,32,22,21,27,0,23,15],
[21,15,21,24,20,29,27,0,27],
[29,30,25,32,25,27,35,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,26,28,33,24,32,33,30],
[20,0,26,29,23,24,24,23,27],
[24,24,0,30,27,31,31,32,31],
[22,21,20,0,31,25,27,26,34],
[17,27,23,19,0,26,28,28,25],
[26,26,19,25,24,0,32,30,31],
[18,26,19,23,22,18,0,23,29],
[17,27,18,24,22,20,27,0,25],
[20,23,19,16,25,19,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,20,21,24,22,25,34,17],
[27,0,29,27,22,22,26,28,28],
[30,21,0,27,27,28,21,28,20],
[29,23,23,0,17,20,25,31,25],
[26,28,23,33,0,24,24,31,25],
[28,28,22,30,26,0,27,33,28],
[25,24,29,25,26,23,0,34,27],
[16,22,22,19,19,17,16,0,20],
[33,22,30,25,25,22,23,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,30,20,31,20,28,25,25],
[27,0,26,27,37,32,26,26,24],
[20,24,0,19,28,25,29,21,27],
[30,23,31,0,36,25,36,26,30],
[19,13,22,14,0,24,24,20,19],
[30,18,25,25,26,0,27,22,24],
[22,24,21,14,26,23,0,15,19],
[25,24,29,24,30,28,35,0,23],
[25,26,23,20,31,26,31,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,29,23,24,25,32,29,27],
[20,0,27,27,26,21,25,31,21],
[21,23,0,28,23,25,27,30,27],
[27,23,22,0,20,25,26,27,24],
[26,24,27,30,0,24,36,34,23],
[25,29,25,25,26,0,28,29,24],
[18,25,23,24,14,22,0,20,23],
[21,19,20,23,16,21,30,0,23],
[23,29,23,26,27,26,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,25,27,25,27,32,27],
[26,0,22,23,22,22,26,30,27],
[25,28,0,25,24,22,26,34,29],
[25,27,25,0,25,20,25,28,26],
[23,28,26,25,0,25,26,32,28],
[25,28,28,30,25,0,28,39,31],
[23,24,24,25,24,22,0,33,29],
[18,20,16,22,18,11,17,0,19],
[23,23,21,24,22,19,21,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,21,39,17,33,26,26,15],
[18,0,28,39,31,35,31,26,15],
[29,22,0,36,16,35,23,15,10],
[11,11,14,0,11,11,18,11,11],
[33,19,34,39,0,41,34,32,21],
[17,15,15,39,9,0,31,30,25],
[24,19,27,32,16,19,0,25,14],
[24,24,35,39,18,20,25,0,28],
[35,35,40,39,29,25,36,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,27,23,32,25,28,30,31],
[20,0,22,18,21,16,16,17,20],
[23,28,0,24,29,27,24,22,32],
[27,32,26,0,32,26,27,31,24],
[18,29,21,18,0,23,26,28,27],
[25,34,23,24,27,0,23,31,27],
[22,34,26,23,24,27,0,20,25],
[20,33,28,19,22,19,30,0,27],
[19,30,18,26,23,23,25,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,31,31,20,25,34,25,35],
[30,0,25,34,25,34,34,40,34],
[19,25,0,24,23,19,24,34,29],
[19,16,26,0,14,14,18,30,34],
[30,25,27,36,0,29,29,35,34],
[25,16,31,36,21,0,23,31,36],
[16,16,26,32,21,27,0,36,27],
[25,10,16,20,15,19,14,0,30],
[15,16,21,16,16,14,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,19,6,19,6,6,0,11],
[37,0,13,26,32,27,18,11,30],
[31,37,0,19,19,31,18,25,17],
[44,24,31,0,32,32,18,18,25],
[31,18,31,18,0,24,24,24,11],
[44,23,19,18,26,0,18,18,24],
[44,32,32,32,26,32,0,32,24],
[50,39,25,32,26,32,18,0,19],
[39,20,33,25,39,26,26,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,24,19,30,31,26,23,32],
[23,0,34,26,28,19,17,28,27],
[26,16,0,25,25,20,20,23,27],
[31,24,25,0,32,26,18,26,34],
[20,22,25,18,0,22,10,25,15],
[19,31,30,24,28,0,27,23,29],
[24,33,30,32,40,23,0,33,20],
[27,22,27,24,25,27,17,0,24],
[18,23,23,16,35,21,30,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,31,20,28,31,22,18,34],
[23,0,17,16,28,23,10,23,23],
[19,33,0,25,31,21,27,24,25],
[30,34,25,0,34,32,28,30,32],
[22,22,19,16,0,21,16,18,22],
[19,27,29,18,29,0,25,23,21],
[28,40,23,22,34,25,0,30,27],
[32,27,26,20,32,27,20,0,31],
[16,27,25,18,28,29,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,28,21,27,29,24,38,33],
[15,0,26,17,14,21,26,26,30],
[22,24,0,24,29,23,23,29,18],
[29,33,26,0,21,29,15,33,27],
[23,36,21,29,0,22,20,31,29],
[21,29,27,21,28,0,23,36,24],
[26,24,27,35,30,27,0,24,26],
[12,24,21,17,19,14,26,0,28],
[17,20,32,23,21,26,24,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,30,29,24,33,23,30,31],
[4,0,16,13,17,18,11,10,16],
[20,34,0,29,28,26,15,18,19],
[21,37,21,0,21,20,14,20,22],
[26,33,22,29,0,21,16,20,22],
[17,32,24,30,29,0,20,19,16],
[27,39,35,36,34,30,0,25,32],
[20,40,32,30,30,31,25,0,32],
[19,34,31,28,28,34,18,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,25,12,20,13,14,26,17],
[40,0,33,30,27,22,22,31,27],
[25,17,0,18,21,29,16,25,24],
[38,20,32,0,24,21,18,38,20],
[30,23,29,26,0,22,28,34,23],
[37,28,21,29,28,0,28,23,20],
[36,28,34,32,22,22,0,35,26],
[24,19,25,12,16,27,15,0,27],
[33,23,26,30,27,30,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,14,20,23,18,17,25],
[26,0,26,14,17,17,12,15,20],
[27,24,0,19,20,32,19,23,21],
[36,36,31,0,31,31,20,31,23],
[30,33,30,19,0,34,19,24,27],
[27,33,18,19,16,0,19,13,25],
[32,38,31,30,31,31,0,31,22],
[33,35,27,19,26,37,19,0,23],
[25,30,29,27,23,25,28,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,24,21,27,22,26,28,26],
[22,0,25,22,24,24,26,22,27],
[26,25,0,23,23,24,27,26,26],
[29,28,27,0,23,27,29,29,27],
[23,26,27,27,0,25,27,29,27],
[28,26,26,23,25,0,28,32,26],
[24,24,23,21,23,22,0,24,24],
[22,28,24,21,21,18,26,0,18],
[24,23,24,23,23,24,26,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,12,12,12,12,12,12,24],
[25,0,37,12,24,12,24,24,12],
[38,13,0,25,25,25,12,25,25],
[38,38,25,0,38,13,24,38,50],
[38,26,25,12,0,12,24,25,25],
[38,38,25,37,38,0,37,37,37],
[38,26,38,26,26,13,0,26,38],
[38,26,25,12,25,13,24,0,25],
[26,38,25,0,25,13,12,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,29,24,31,24,34,32,21],
[21,0,28,25,33,26,29,26,18],
[21,22,0,23,25,24,26,19,18],
[26,25,27,0,27,22,30,25,25],
[19,17,25,23,0,22,22,22,17],
[26,24,26,28,28,0,28,27,26],
[16,21,24,20,28,22,0,21,15],
[18,24,31,25,28,23,29,0,23],
[29,32,32,25,33,24,35,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,27,26,26,27,22,39,26],
[19,0,30,24,26,11,26,39,28],
[23,20,0,21,27,22,17,35,23],
[24,26,29,0,30,11,18,38,27],
[24,24,23,20,0,17,18,32,21],
[23,39,28,39,33,0,26,38,35],
[28,24,33,32,32,24,0,36,28],
[11,11,15,12,18,12,14,0,13],
[24,22,27,23,29,15,22,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,15,41,27,19,24,27,25],
[20,0,12,34,15,31,20,30,23],
[35,38,0,43,34,30,28,29,25],
[9,16,7,0,21,6,14,15,12],
[23,35,16,29,0,26,23,23,23],
[31,19,20,44,24,0,32,25,23],
[26,30,22,36,27,18,0,23,20],
[23,20,21,35,27,25,27,0,23],
[25,27,25,38,27,27,30,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,34,23,31,25,23,28,27],
[21,0,30,24,30,29,24,22,25],
[16,20,0,26,33,21,19,24,25],
[27,26,24,0,24,28,25,24,21],
[19,20,17,26,0,16,17,21,20],
[25,21,29,22,34,0,22,26,20],
[27,26,31,25,33,28,0,24,21],
[22,28,26,26,29,24,26,0,28],
[23,25,25,29,30,30,29,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,13,23,20,17,25,30,16],
[26,0,21,25,24,16,32,28,27],
[37,29,0,31,27,26,27,35,24],
[27,25,19,0,29,19,24,23,30],
[30,26,23,21,0,17,29,29,27],
[33,34,24,31,33,0,26,36,30],
[25,18,23,26,21,24,0,26,24],
[20,22,15,27,21,14,24,0,23],
[34,23,26,20,23,20,26,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,21,29,23,22,28,21,19],
[32,0,27,30,24,28,36,28,32],
[29,23,0,30,26,25,32,21,23],
[21,20,20,0,16,16,25,19,21],
[27,26,24,34,0,23,24,23,23],
[28,22,25,34,27,0,28,19,23],
[22,14,18,25,26,22,0,20,16],
[29,22,29,31,27,31,30,0,23],
[31,18,27,29,27,27,34,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,29,28,26,25,24,26],
[21,0,24,30,24,24,24,27,23],
[25,26,0,30,20,32,23,27,23],
[21,20,20,0,21,20,20,21,18],
[22,26,30,29,0,28,31,31,24],
[24,26,18,30,22,0,20,22,19],
[25,26,27,30,19,30,0,29,22],
[26,23,23,29,19,28,21,0,24],
[24,27,27,32,26,31,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,29,26,23,30,22,23],
[28,0,19,26,26,22,29,24,24],
[28,31,0,34,29,27,33,24,28],
[21,24,16,0,16,14,20,16,20],
[24,24,21,34,0,20,33,22,22],
[27,28,23,36,30,0,30,25,27],
[20,21,17,30,17,20,0,22,17],
[28,26,26,34,28,25,28,0,28],
[27,26,22,30,28,23,33,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,33,25,31,34,21,33,34],
[20,0,26,17,14,23,20,18,13],
[17,24,0,14,19,30,24,29,28],
[25,33,36,0,25,27,24,30,34],
[19,36,31,25,0,35,34,35,25],
[16,27,20,23,15,0,24,33,25],
[29,30,26,26,16,26,0,22,27],
[17,32,21,20,15,17,28,0,17],
[16,37,22,16,25,25,23,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,28,29,32,29,31,27,25],
[21,0,31,23,24,28,31,27,21],
[22,19,0,20,27,21,35,28,26],
[21,27,30,0,31,25,32,31,29],
[18,26,23,19,0,25,25,27,18],
[21,22,29,25,25,0,25,26,20],
[19,19,15,18,25,25,0,22,18],
[23,23,22,19,23,24,28,0,18],
[25,29,24,21,32,30,32,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,30,34,15,26,22,30,26],
[24,0,39,30,22,24,22,36,35],
[20,11,0,24,17,16,21,19,25],
[16,20,26,0,24,29,18,29,23],
[35,28,33,26,0,25,26,29,28],
[24,26,34,21,25,0,25,26,31],
[28,28,29,32,24,25,0,34,25],
[20,14,31,21,21,24,16,0,21],
[24,15,25,27,22,19,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,31,25,35,35,29,36,33],
[18,0,18,19,20,26,28,23,16],
[19,32,0,21,33,28,26,27,26],
[25,31,29,0,32,35,36,36,31],
[15,30,17,18,0,21,27,19,26],
[15,24,22,15,29,0,21,22,21],
[21,22,24,14,23,29,0,18,25],
[14,27,23,14,31,28,32,0,21],
[17,34,24,19,24,29,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,22,24,28,21,25,31,30],
[29,0,28,20,31,23,30,27,29],
[28,22,0,25,26,25,24,25,26],
[26,30,25,0,27,25,28,24,30],
[22,19,24,23,0,20,31,24,24],
[29,27,25,25,30,0,29,24,29],
[25,20,26,22,19,21,0,29,27],
[19,23,25,26,26,26,21,0,25],
[20,21,24,20,26,21,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,23,25,20,30,24,26,34],
[21,0,24,22,24,24,24,25,29],
[27,26,0,31,23,25,33,35,26],
[25,28,19,0,26,30,31,30,36],
[30,26,27,24,0,18,23,29,28],
[20,26,25,20,32,0,24,26,28],
[26,26,17,19,27,26,0,26,28],
[24,25,15,20,21,24,24,0,31],
[16,21,24,14,22,22,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,27,27,26,28,31,26],
[25,0,28,24,26,28,29,26,26],
[22,22,0,21,26,26,24,24,22],
[23,26,29,0,30,28,30,25,30],
[23,24,24,20,0,26,29,24,23],
[24,22,24,22,24,0,28,23,23],
[22,21,26,20,21,22,0,25,24],
[19,24,26,25,26,27,25,0,25],
[24,24,28,20,27,27,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,50,25,50,25,25,50,50],
[25,0,25,25,25,25,25,50,25],
[0,25,0,0,0,25,25,25,25],
[25,25,50,0,50,25,25,50,50],
[0,25,50,0,0,25,25,25,50],
[25,25,25,25,25,0,25,50,25],
[25,25,25,25,25,25,0,50,25],
[0,0,25,0,25,0,0,0,25],
[0,25,25,0,0,25,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,13,24,28,26,22,23,29],
[27,0,18,29,26,34,18,29,29],
[37,32,0,23,28,31,31,37,35],
[26,21,27,0,27,27,25,29,31],
[22,24,22,23,0,24,21,22,28],
[24,16,19,23,26,0,18,22,25],
[28,32,19,25,29,32,0,28,30],
[27,21,13,21,28,28,22,0,27],
[21,21,15,19,22,25,20,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,26,35,26,27,30,27,21],
[20,0,29,28,24,22,23,25,20],
[24,21,0,29,22,24,25,29,21],
[15,22,21,0,19,16,18,23,15],
[24,26,28,31,0,22,29,32,25],
[23,28,26,34,28,0,26,32,21],
[20,27,25,32,21,24,0,29,22],
[23,25,21,27,18,18,21,0,23],
[29,30,29,35,25,29,28,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,24,27,25,24,29,24,34],
[23,0,29,27,28,29,33,25,27],
[26,21,0,24,30,25,32,26,28],
[23,23,26,0,22,24,25,25,28],
[25,22,20,28,0,20,27,25,28],
[26,21,25,26,30,0,36,26,33],
[21,17,18,25,23,14,0,18,26],
[26,25,24,25,25,24,32,0,31],
[16,23,22,22,22,17,24,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,20,27,23,20,18,22,17],
[29,0,21,24,21,25,22,25,23],
[30,29,0,28,24,24,25,27,22],
[23,26,22,0,22,21,22,22,24],
[27,29,26,28,0,27,25,26,30],
[30,25,26,29,23,0,24,27,21],
[32,28,25,28,25,26,0,31,27],
[28,25,23,28,24,23,19,0,22],
[33,27,28,26,20,29,23,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,22,25,27,20,17,21,24],
[26,0,21,25,28,27,23,27,26],
[28,29,0,23,28,30,25,22,27],
[25,25,27,0,35,32,27,28,28],
[23,22,22,15,0,26,22,18,25],
[30,23,20,18,24,0,23,27,27],
[33,27,25,23,28,27,0,26,24],
[29,23,28,22,32,23,24,0,27],
[26,24,23,22,25,23,26,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,26,29,25,31,29,22,27],
[23,0,25,28,26,24,31,25,21],
[24,25,0,27,23,25,32,27,19],
[21,22,23,0,28,20,26,19,24],
[25,24,27,22,0,28,24,23,27],
[19,26,25,30,22,0,30,25,19],
[21,19,18,24,26,20,0,20,23],
[28,25,23,31,27,25,30,0,23],
[23,29,31,26,23,31,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,12,20,29,17,20,22],
[32,0,25,22,24,37,22,28,31],
[32,25,0,24,30,35,29,26,27],
[38,28,26,0,31,34,31,25,29],
[30,26,20,19,0,29,22,22,25],
[21,13,15,16,21,0,18,17,22],
[33,28,21,19,28,32,0,22,26],
[30,22,24,25,28,33,28,0,31],
[28,19,23,21,25,28,24,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,27,20,27,30,23,22,24],
[31,0,28,23,25,28,31,27,23],
[23,22,0,23,26,29,26,19,19],
[30,27,27,0,27,36,28,26,25],
[23,25,24,23,0,35,26,24,17],
[20,22,21,14,15,0,24,22,12],
[27,19,24,22,24,26,0,24,24],
[28,23,31,24,26,28,26,0,28],
[26,27,31,25,33,38,26,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,20,25,20,24,23,24],
[24,0,28,23,24,19,25,23,26],
[22,22,0,23,22,23,24,23,25],
[30,27,27,0,27,27,23,27,27],
[25,26,28,23,0,20,28,24,25],
[30,31,27,23,30,0,31,28,28],
[26,25,26,27,22,19,0,22,30],
[27,27,27,23,26,22,28,0,28],
[26,24,25,23,25,22,20,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,28,27,25,22,19,26,17],
[30,0,24,30,27,24,24,30,26],
[22,26,0,26,25,26,22,25,20],
[23,20,24,0,25,21,21,21,19],
[25,23,25,25,0,22,27,20,22],
[28,26,24,29,28,0,20,32,19],
[31,26,28,29,23,30,0,26,21],
[24,20,25,29,30,18,24,0,24],
[33,24,30,31,28,31,29,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,21,35,29,23,31,22],
[26,0,26,19,28,31,27,33,17],
[25,24,0,26,29,34,39,29,30],
[29,31,24,0,31,33,33,31,29],
[15,22,21,19,0,22,20,19,17],
[21,19,16,17,28,0,16,32,24],
[27,23,11,17,30,34,0,27,18],
[19,17,21,19,31,18,23,0,26],
[28,33,20,21,33,26,32,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,25,28,19,26,20,30,26],
[27,0,26,24,28,27,26,31,26],
[25,24,0,21,24,28,19,28,22],
[22,26,29,0,24,22,26,25,24],
[31,22,26,26,0,28,22,29,25],
[24,23,22,28,22,0,19,25,25],
[30,24,31,24,28,31,0,29,26],
[20,19,22,25,21,25,21,0,19],
[24,24,28,26,25,25,24,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,32,30,23,24,23,27],
[24,0,26,33,34,27,28,25,30],
[22,24,0,39,30,27,25,26,26],
[18,17,11,0,30,13,22,22,22],
[20,16,20,20,0,20,15,17,26],
[27,23,23,37,30,0,28,24,36],
[26,22,25,28,35,22,0,28,28],
[27,25,24,28,33,26,22,0,32],
[23,20,24,28,24,14,22,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,29,25,26,23,28,26,24],
[23,0,37,24,26,25,23,27,25],
[21,13,0,17,18,17,20,20,19],
[25,26,33,0,34,24,28,27,23],
[24,24,32,16,0,16,24,30,24],
[27,25,33,26,34,0,32,33,30],
[22,27,30,22,26,18,0,27,24],
[24,23,30,23,20,17,23,0,26],
[26,25,31,27,26,20,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,19,23,32,26,26,26,29],
[20,0,16,17,26,22,20,21,28],
[31,34,0,27,29,24,31,30,36],
[27,33,23,0,29,27,28,28,32],
[18,24,21,21,0,23,20,28,24],
[24,28,26,23,27,0,31,30,27],
[24,30,19,22,30,19,0,21,34],
[24,29,20,22,22,20,29,0,26],
[21,22,14,18,26,23,16,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,28,24,21,21,19,20,24],
[29,0,27,25,28,9,22,24,30],
[22,23,0,23,29,24,22,21,30],
[26,25,27,0,26,15,27,29,23],
[29,22,21,24,0,15,26,23,29],
[29,41,26,35,35,0,29,22,30],
[31,28,28,23,24,21,0,26,25],
[30,26,29,21,27,28,24,0,33],
[26,20,20,27,21,20,25,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,19,23,21,19,18,22,20],
[23,0,23,24,20,21,16,15,22],
[31,27,0,28,24,27,27,28,23],
[27,26,22,0,23,26,23,21,31],
[29,30,26,27,0,29,25,24,27],
[31,29,23,24,21,0,24,28,31],
[32,34,23,27,25,26,0,20,28],
[28,35,22,29,26,22,30,0,28],
[30,28,27,19,23,19,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,33,15,21,29,25,27,33],
[32,0,25,22,26,26,34,23,31],
[17,25,0,17,29,27,32,29,31],
[35,28,33,0,35,33,30,24,35],
[29,24,21,15,0,26,29,28,24],
[21,24,23,17,24,0,27,22,26],
[25,16,18,20,21,23,0,27,24],
[23,27,21,26,22,28,23,0,25],
[17,19,19,15,26,24,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,30,32,26,26,29,25,24],
[24,0,26,30,23,26,23,20,27],
[20,24,0,27,22,21,27,17,19],
[18,20,23,0,20,24,21,12,21],
[24,27,28,30,0,25,33,16,22],
[24,24,29,26,25,0,28,18,22],
[21,27,23,29,17,22,0,18,17],
[25,30,33,38,34,32,32,0,28],
[26,23,31,29,28,28,33,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,27,27,20,27,24,25,23],
[24,0,26,27,24,16,29,21,30],
[23,24,0,26,22,24,18,26,22],
[23,23,24,0,21,12,32,24,18],
[30,26,28,29,0,24,29,27,27],
[23,34,26,38,26,0,28,34,28],
[26,21,32,18,21,22,0,23,22],
[25,29,24,26,23,16,27,0,23],
[27,20,28,32,23,22,28,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,33,26,30,37,22,30,29],
[17,0,25,18,30,31,18,24,27],
[17,25,0,26,30,23,18,19,24],
[24,32,24,0,32,34,27,31,35],
[20,20,20,18,0,31,25,26,31],
[13,19,27,16,19,0,27,21,23],
[28,32,32,23,25,23,0,16,28],
[20,26,31,19,24,29,34,0,42],
[21,23,26,15,19,27,22,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,22,14,19,15,24,11,14],
[33,0,21,15,20,18,21,26,24],
[28,29,0,20,22,20,27,19,17],
[36,35,30,0,21,24,33,27,22],
[31,30,28,29,0,19,33,27,26],
[35,32,30,26,31,0,26,23,25],
[26,29,23,17,17,24,0,20,23],
[39,24,31,23,23,27,30,0,17],
[36,26,33,28,24,25,27,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,29,20,24,17,23,26,16],
[27,0,30,23,29,27,20,30,26],
[21,20,0,25,17,22,19,24,21],
[30,27,25,0,27,22,19,24,20],
[26,21,33,23,0,21,19,22,26],
[33,23,28,28,29,0,21,27,31],
[27,30,31,31,31,29,0,28,23],
[24,20,26,26,28,23,22,0,23],
[34,24,29,30,24,19,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,33,33,34,25,33,33,25],
[25,0,34,25,17,26,25,25,25],
[17,16,0,9,9,9,17,17,17],
[17,25,41,0,34,25,33,33,25],
[16,33,41,16,0,9,25,16,33],
[25,24,41,25,41,0,24,33,32],
[17,25,33,17,25,26,0,25,33],
[17,25,33,17,34,17,25,0,33],
[25,25,33,25,17,18,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,27,31,30,23,24,27],
[26,0,27,25,29,31,28,30,30],
[26,23,0,24,26,22,27,25,26],
[23,25,26,0,29,29,22,24,29],
[19,21,24,21,0,25,19,21,24],
[20,19,28,21,25,0,23,28,29],
[27,22,23,28,31,27,0,33,31],
[26,20,25,26,29,22,17,0,27],
[23,20,24,21,26,21,19,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,27,27,30,25,31,37,35],
[22,0,27,29,22,27,25,24,25],
[23,23,0,27,35,19,25,37,25],
[23,21,23,0,21,20,20,22,19],
[20,28,15,29,0,19,19,27,21],
[25,23,31,30,31,0,26,33,27],
[19,25,25,30,31,24,0,34,21],
[13,26,13,28,23,17,16,0,22],
[15,25,25,31,29,23,29,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,26,17,36,8,0,0,8],
[35,0,35,25,28,36,17,17,17],
[24,15,0,32,24,23,15,15,15],
[33,25,18,0,26,34,18,26,26],
[14,22,26,24,0,8,7,7,7],
[42,14,27,16,42,0,23,31,16],
[50,33,35,32,43,27,0,23,43],
[50,33,35,24,43,19,27,0,35],
[42,33,35,24,43,34,7,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,26,28,20,26,26,30],
[26,0,19,16,28,27,28,26,29],
[26,31,0,22,28,27,35,26,30],
[24,34,28,0,25,31,32,37,34],
[22,22,22,25,0,24,27,26,25],
[30,23,23,19,26,0,29,28,27],
[24,22,15,18,23,21,0,20,27],
[24,24,24,13,24,22,30,0,27],
[20,21,20,16,25,23,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,31,27,27,26,28,28,27],
[25,0,31,28,25,26,30,27,26],
[19,19,0,19,26,29,22,24,24],
[23,22,31,0,27,26,21,28,25],
[23,25,24,23,0,31,24,32,26],
[24,24,21,24,19,0,22,23,27],
[22,20,28,29,26,28,0,31,22],
[22,23,26,22,18,27,19,0,26],
[23,24,26,25,24,23,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,27,24,26,26,29,31],
[25,0,21,27,25,25,22,26,29],
[26,29,0,26,27,19,24,26,28],
[23,23,24,0,24,18,20,25,32],
[26,25,23,26,0,22,19,25,26],
[24,25,31,32,28,0,29,29,28],
[24,28,26,30,31,21,0,31,33],
[21,24,24,25,25,21,19,0,26],
[19,21,22,18,24,22,17,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,25,26,26,24,27,22],
[27,0,31,28,23,28,26,29,29],
[24,19,0,20,24,26,20,22,20],
[25,22,30,0,22,24,25,23,19],
[24,27,26,28,0,24,26,34,27],
[24,22,24,26,26,0,22,27,19],
[26,24,30,25,24,28,0,24,21],
[23,21,28,27,16,23,26,0,21],
[28,21,30,31,23,31,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,31,18,16,37,21,32,29],
[21,0,22,26,16,26,7,20,20],
[19,28,0,30,25,23,26,36,25],
[32,24,20,0,15,28,13,26,23],
[34,34,25,35,0,32,16,36,28],
[13,24,27,22,18,0,16,28,30],
[29,43,24,37,34,34,0,35,30],
[18,30,14,24,14,22,15,0,22],
[21,30,25,27,22,20,20,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,8,33,17,17,17,8,17],
[50,0,25,42,34,26,25,33,34],
[42,25,0,42,25,17,17,16,26],
[17,8,8,0,8,8,8,8,16],
[33,16,25,42,0,17,17,25,26],
[33,24,33,42,33,0,25,25,42],
[33,25,33,42,33,25,0,33,33],
[42,17,34,42,25,25,17,0,26],
[33,16,24,34,24,8,17,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,12,19,14,23,21,23,20],
[30,0,26,27,23,26,26,33,26],
[38,24,0,23,20,20,21,26,21],
[31,23,27,0,27,26,19,25,26],
[36,27,30,23,0,22,27,28,26],
[27,24,30,24,28,0,24,24,20],
[29,24,29,31,23,26,0,27,20],
[27,17,24,25,22,26,23,0,21],
[30,24,29,24,24,30,30,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,26,25,20,24,26,34,24],
[23,0,20,23,27,19,29,28,21],
[24,30,0,29,26,26,30,32,24],
[25,27,21,0,28,26,28,36,25],
[30,23,24,22,0,22,23,29,22],
[26,31,24,24,28,0,27,27,28],
[24,21,20,22,27,23,0,29,22],
[16,22,18,14,21,23,21,0,20],
[26,29,26,25,28,22,28,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,26,29,25,25,26,21,32],
[29,0,25,31,25,21,30,20,33],
[24,25,0,30,31,24,30,19,32],
[21,19,20,0,22,22,27,18,25],
[25,25,19,28,0,20,26,15,31],
[25,29,26,28,30,0,29,27,31],
[24,20,20,23,24,21,0,17,31],
[29,30,31,32,35,23,33,0,38],
[18,17,18,25,19,19,19,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,20,33,22,31,14,34,26],
[19,0,26,29,26,33,22,35,31],
[30,24,0,31,16,28,19,32,34],
[17,21,19,0,16,33,15,30,20],
[28,24,34,34,0,30,27,40,39],
[19,17,22,17,20,0,26,31,19],
[36,28,31,35,23,24,0,36,24],
[16,15,18,20,10,19,14,0,19],
[24,19,16,30,11,31,26,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,21,22,18,20,23,24],
[28,0,23,21,25,24,22,24,25],
[27,27,0,28,29,27,23,25,31],
[29,29,22,0,27,22,27,32,23],
[28,25,21,23,0,27,21,25,26],
[32,26,23,28,23,0,26,24,25],
[30,28,27,23,29,24,0,27,24],
[27,26,25,18,25,26,23,0,29],
[26,25,19,27,24,25,26,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,23,32,26,32,30,37,32],
[18,0,15,29,26,24,21,17,20],
[27,35,0,36,30,17,24,28,27],
[18,21,14,0,28,20,19,23,22],
[24,24,20,22,0,24,21,39,22],
[18,26,33,30,26,0,17,24,17],
[20,29,26,31,29,33,0,24,22],
[13,33,22,27,11,26,26,0,16],
[18,30,23,28,28,33,28,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,25,0,0,25,25,25,25],
[50,0,50,0,0,50,50,50,50],
[25,0,0,0,0,25,25,25,25],
[50,50,50,0,25,50,50,50,50],
[50,50,50,25,0,50,50,50,50],
[25,0,25,0,0,0,0,25,0],
[25,0,25,0,0,50,0,25,25],
[25,0,25,0,0,25,25,0,0],
[25,0,25,0,0,50,25,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,32,31,29,32,31,34],
[25,0,31,30,32,30,27,31,30],
[21,19,0,29,25,25,26,27,25],
[18,20,21,0,26,24,22,25,23],
[19,18,25,24,0,22,23,27,21],
[21,20,25,26,28,0,30,27,24],
[18,23,24,28,27,20,0,29,23],
[19,19,23,25,23,23,21,0,23],
[16,20,25,27,29,26,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,20,20,27,27,21,29],
[24,0,16,17,28,25,21,26,35],
[27,34,0,26,26,28,22,27,30],
[30,33,24,0,27,22,21,25,31],
[30,22,24,23,0,25,27,18,34],
[23,25,22,28,25,0,26,22,29],
[23,29,28,29,23,24,0,21,25],
[29,24,23,25,32,28,29,0,31],
[21,15,20,19,16,21,25,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,34,26,31,25,33,29,29],
[27,0,33,27,31,23,35,30,28],
[16,17,0,19,22,15,17,16,15],
[24,23,31,0,31,28,24,26,26],
[19,19,28,19,0,14,22,24,24],
[25,27,35,22,36,0,32,28,33],
[17,15,33,26,28,18,0,19,21],
[21,20,34,24,26,22,31,0,27],
[21,22,35,24,26,17,29,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,26,25,29,29,24,26,28],
[20,0,28,24,27,27,25,21,22],
[24,22,0,25,22,26,27,24,27],
[25,26,25,0,28,28,25,28,25],
[21,23,28,22,0,26,24,18,24],
[21,23,24,22,24,0,19,22,23],
[26,25,23,25,26,31,0,26,24],
[24,29,26,22,32,28,24,0,25],
[22,28,23,25,26,27,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,24,29,24,29,27,23,20],
[29,0,25,27,25,27,24,28,25],
[26,25,0,31,26,27,25,28,21],
[21,23,19,0,21,23,22,26,19],
[26,25,24,29,0,23,25,26,21],
[21,23,23,27,27,0,23,27,24],
[23,26,25,28,25,27,0,27,18],
[27,22,22,24,24,23,23,0,21],
[30,25,29,31,29,26,32,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,34,28,28,33,26,30,22],
[15,0,18,13,25,20,16,22,18],
[16,32,0,21,27,23,22,25,18],
[22,37,29,0,35,32,26,27,26],
[22,25,23,15,0,19,18,23,23],
[17,30,27,18,31,0,25,24,20],
[24,34,28,24,32,25,0,27,26],
[20,28,25,23,27,26,23,0,27],
[28,32,32,24,27,30,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,23,27,32,29,23,20,27],
[30,0,25,37,37,27,38,26,35],
[27,25,0,35,33,28,35,29,31],
[23,13,15,0,30,23,27,19,30],
[18,13,17,20,0,21,22,17,21],
[21,23,22,27,29,0,31,20,25],
[27,12,15,23,28,19,0,20,22],
[30,24,21,31,33,30,30,0,37],
[23,15,19,20,29,25,28,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,22,24,25,18,29,36,36],
[21,0,13,20,20,12,14,14,33],
[28,37,0,24,32,26,23,37,33],
[26,30,26,0,19,19,30,30,26],
[25,30,18,31,0,30,18,25,37],
[32,38,24,31,20,0,25,38,45],
[21,36,27,20,32,25,0,31,25],
[14,36,13,20,25,12,19,0,32],
[14,17,17,24,13,5,25,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,35,23,22,27,28,28],
[21,0,19,29,18,20,27,16,24],
[25,31,0,35,30,27,28,29,26],
[15,21,15,0,18,14,19,16,15],
[27,32,20,32,0,25,33,25,22],
[28,30,23,36,25,0,27,26,29],
[23,23,22,31,17,23,0,22,21],
[22,34,21,34,25,24,28,0,30],
[22,26,24,35,28,21,29,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,18,24,30,22,24,32,25],
[26,0,23,22,26,28,25,31,26],
[32,27,0,26,28,23,23,31,25],
[26,28,24,0,29,27,20,30,23],
[20,24,22,21,0,24,20,31,24],
[28,22,27,23,26,0,25,33,30],
[26,25,27,30,30,25,0,34,24],
[18,19,19,20,19,17,16,0,20],
[25,24,25,27,26,20,26,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,27,24,27,25,31,29,23],
[22,0,23,21,26,18,28,29,24],
[23,27,0,22,31,22,30,29,23],
[26,29,28,0,30,17,35,34,27],
[23,24,19,20,0,16,28,33,26],
[25,32,28,33,34,0,33,30,27],
[19,22,20,15,22,17,0,25,23],
[21,21,21,16,17,20,25,0,16],
[27,26,27,23,24,23,27,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,27,29,26,32,20,27],
[27,0,23,24,31,26,31,27,25],
[24,27,0,32,31,26,32,27,26],
[23,26,18,0,25,28,24,27,19],
[21,19,19,25,0,25,28,26,25],
[24,24,24,22,25,0,25,25,22],
[18,19,18,26,22,25,0,22,24],
[30,23,23,23,24,25,28,0,24],
[23,25,24,31,25,28,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,22,28,23,28,35,30,23],
[23,0,21,23,22,27,30,29,18],
[28,29,0,32,26,32,31,35,25],
[22,27,18,0,23,21,30,24,23],
[27,28,24,27,0,29,36,27,20],
[22,23,18,29,21,0,33,29,22],
[15,20,19,20,14,17,0,25,18],
[20,21,15,26,23,21,25,0,15],
[27,32,25,27,30,28,32,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,25,27,25,29,24,27],
[25,0,28,28,24,28,28,29,24],
[26,22,0,22,18,29,28,21,26],
[25,22,28,0,21,25,28,22,25],
[23,26,32,29,0,26,29,22,26],
[25,22,21,25,24,0,27,25,22],
[21,22,22,22,21,23,0,17,25],
[26,21,29,28,28,25,33,0,29],
[23,26,24,25,24,28,25,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,0,25,0,25,25,0,0],
[25,0,0,25,0,25,25,25,25],
[50,50,0,50,25,50,50,25,50],
[25,25,0,0,0,25,0,0,25],
[50,50,25,50,0,50,50,25,25],
[25,25,0,25,0,0,25,25,25],
[25,25,0,50,0,25,0,0,25],
[50,25,25,50,25,25,50,0,50],
[50,25,0,25,25,25,25,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,16,21,22,18,25,16,20],
[29,0,22,24,30,27,22,20,26],
[34,28,0,27,34,24,26,25,29],
[29,26,23,0,24,21,21,23,17],
[28,20,16,26,0,17,20,24,21],
[32,23,26,29,33,0,29,27,30],
[25,28,24,29,30,21,0,24,30],
[34,30,25,27,26,23,26,0,24],
[30,24,21,33,29,20,20,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,27,39,24,33,36,21,20],
[20,0,26,39,17,32,36,26,22],
[23,24,0,39,23,28,31,19,24],
[11,11,11,0,11,16,21,12,7],
[26,33,27,39,0,35,37,26,25],
[17,18,22,34,15,0,31,15,23],
[14,14,19,29,13,19,0,7,16],
[29,24,31,38,24,35,43,0,17],
[30,28,26,43,25,27,34,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,7,24,18,16,25,9,25],
[27,0,17,34,18,35,35,28,35],
[43,33,0,33,27,25,25,18,25],
[26,16,17,0,18,26,26,26,35],
[32,32,23,32,0,32,32,32,25],
[34,15,25,24,18,0,28,19,16],
[25,15,25,24,18,22,0,8,24],
[41,22,32,24,18,31,42,0,24],
[25,15,25,15,25,34,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,20,22,22,25,25,21,19],
[27,0,27,30,24,29,25,27,26],
[30,23,0,30,27,26,27,23,29],
[28,20,20,0,27,27,24,21,21],
[28,26,23,23,0,25,27,28,26],
[25,21,24,23,25,0,22,21,24],
[25,25,23,26,23,28,0,23,21],
[29,23,27,29,22,29,27,0,28],
[31,24,21,29,24,26,29,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,14,9,19,18,13,14,6],
[39,0,29,22,27,35,32,26,22],
[36,21,0,14,17,35,25,14,19],
[41,28,36,0,26,29,36,26,19],
[31,23,33,24,0,24,26,18,27],
[32,15,15,21,26,0,21,15,10],
[37,18,25,14,24,29,0,12,17],
[36,24,36,24,32,35,38,0,23],
[44,28,31,31,23,40,33,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,37,30,25,30,33,31,23],
[18,0,27,23,16,24,33,28,19],
[13,23,0,19,19,25,29,18,12],
[20,27,31,0,27,25,41,28,22],
[25,34,31,23,0,21,33,34,22],
[20,26,25,25,29,0,39,32,20],
[17,17,21,9,17,11,0,17,13],
[19,22,32,22,16,18,33,0,27],
[27,31,38,28,28,30,37,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,25,23,23,29,21,23],
[27,0,21,29,28,20,26,20,24],
[24,29,0,26,24,22,23,20,24],
[25,21,24,0,21,24,21,21,26],
[27,22,26,29,0,26,24,26,30],
[27,30,28,26,24,0,26,21,30],
[21,24,27,29,26,24,0,20,23],
[29,30,30,29,24,29,30,0,30],
[27,26,26,24,20,20,27,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,28,30,27,27,26,23],
[24,0,24,25,31,19,25,26,26],
[22,26,0,28,24,23,24,22,29],
[22,25,22,0,24,26,19,26,28],
[20,19,26,26,0,20,28,25,26],
[23,31,27,24,30,0,27,22,27],
[23,25,26,31,22,23,0,24,28],
[24,24,28,24,25,28,26,0,28],
[27,24,21,22,24,23,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,23,22,21,28,28,25,20],
[22,0,23,25,17,29,26,25,29],
[27,27,0,28,24,29,31,25,19],
[28,25,22,0,24,26,22,23,21],
[29,33,26,26,0,27,27,25,23],
[22,21,21,24,23,0,25,19,19],
[22,24,19,28,23,25,0,22,15],
[25,25,25,27,25,31,28,0,26],
[30,21,31,29,27,31,35,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,29,25,31,24,30,29,18],
[26,0,18,19,19,25,22,28,14],
[21,32,0,24,25,24,31,23,23],
[25,31,26,0,31,32,23,30,22],
[19,31,25,19,0,23,27,23,19],
[26,25,26,18,27,0,30,26,26],
[20,28,19,27,23,20,0,24,12],
[21,22,27,20,27,24,26,0,16],
[32,36,27,28,31,24,38,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,13,5,18,31,25,25,5],
[37,0,26,17,30,37,37,24,24],
[37,24,0,24,24,31,24,18,17],
[45,33,26,0,25,38,37,25,25],
[32,20,26,25,0,26,32,21,19],
[19,13,19,12,24,0,24,24,24],
[25,13,26,13,18,26,0,20,13],
[25,26,32,25,29,26,30,0,19],
[45,26,33,25,31,26,37,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,25,20,34,26,24,24],
[25,0,26,29,22,27,23,26,29],
[20,24,0,28,23,22,28,22,27],
[25,21,22,0,20,23,25,20,24],
[30,28,27,30,0,36,29,27,23],
[16,23,28,27,14,0,24,22,23],
[24,27,22,25,21,26,0,24,28],
[26,24,28,30,23,28,26,0,24],
[26,21,23,26,27,27,22,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,27,18,23,18,18,31],
[28,0,30,29,26,28,21,25,29],
[28,20,0,27,20,27,22,24,28],
[23,21,23,0,19,26,17,18,27],
[32,24,30,31,0,31,25,23,33],
[27,22,23,24,19,0,18,21,31],
[32,29,28,33,25,32,0,24,31],
[32,25,26,32,27,29,26,0,29],
[19,21,22,23,17,19,19,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,21,21,21,23,22,25],
[34,0,38,25,30,25,34,32,29],
[32,12,0,18,21,22,27,24,26],
[29,25,32,0,30,27,32,30,32],
[29,20,29,20,0,19,31,28,28],
[29,25,28,23,31,0,31,21,31],
[27,16,23,18,19,19,0,21,21],
[28,18,26,20,22,29,29,0,28],
[25,21,24,18,22,19,29,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,27,23,28,31,21,23,25],
[18,0,24,15,27,30,19,22,24],
[23,26,0,24,29,25,22,29,25],
[27,35,26,0,30,32,28,20,25],
[22,23,21,20,0,27,20,21,18],
[19,20,25,18,23,0,16,31,21],
[29,31,28,22,30,34,0,24,22],
[27,28,21,30,29,19,26,0,21],
[25,26,25,25,32,29,28,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,22,27,20,18,18,23,17],
[30,0,21,30,24,26,20,25,22],
[28,29,0,27,23,27,22,28,24],
[23,20,23,0,20,20,20,24,17],
[30,26,27,30,0,24,26,28,24],
[32,24,23,30,26,0,23,29,24],
[32,30,28,30,24,27,0,31,27],
[27,25,22,26,22,21,19,0,22],
[33,28,26,33,26,26,23,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,36,36,36,36,24,24,50],
[14,0,12,39,26,25,27,14,26],
[14,38,0,38,27,38,27,27,25],
[14,11,12,0,14,24,27,14,14],
[14,24,23,36,0,36,27,14,37],
[14,25,12,26,14,0,27,14,14],
[26,23,23,23,23,23,0,25,37],
[26,36,23,36,36,36,25,0,37],
[0,24,25,36,13,36,13,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,22,27,24,22,25,22,28],
[27,0,26,24,26,25,27,23,25],
[28,24,0,26,27,26,32,24,30],
[23,26,24,0,25,23,30,25,27],
[26,24,23,25,0,24,26,21,27],
[28,25,24,27,26,0,31,27,30],
[25,23,18,20,24,19,0,22,22],
[28,27,26,25,29,23,28,0,28],
[22,25,20,23,23,20,28,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,28,22,25,30,33,14,27],
[19,0,20,10,11,27,22,15,15],
[22,30,0,14,19,25,34,15,22],
[28,40,36,0,23,39,39,35,34],
[25,39,31,27,0,34,33,21,29],
[20,23,25,11,16,0,22,11,17],
[17,28,16,11,17,28,0,18,20],
[36,35,35,15,29,39,32,0,22],
[23,35,28,16,21,33,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,25,16,14,21,24,25,17],
[33,0,36,25,25,30,26,26,18],
[25,14,0,21,17,24,30,18,19],
[34,25,29,0,20,26,36,30,26],
[36,25,33,30,0,38,35,34,32],
[29,20,26,24,12,0,33,26,17],
[26,24,20,14,15,17,0,18,16],
[25,24,32,20,16,24,32,0,18],
[33,32,31,24,18,33,34,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,18,18,21,24,23,24],
[33,0,24,20,25,19,28,25,27],
[31,26,0,27,28,31,27,28,25],
[32,30,23,0,30,28,29,26,28],
[32,25,22,20,0,29,28,26,28],
[29,31,19,22,21,0,23,31,25],
[26,22,23,21,22,27,0,22,24],
[27,25,22,24,24,19,28,0,28],
[26,23,25,22,22,25,26,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,17,29,29,23,23,20,18],
[22,0,14,21,22,17,17,12,21],
[33,36,0,28,28,25,30,22,24],
[21,29,22,0,32,27,22,18,21],
[21,28,22,18,0,20,20,14,19],
[27,33,25,23,30,0,33,18,25],
[27,33,20,28,30,17,0,16,22],
[30,38,28,32,36,32,34,0,23],
[32,29,26,29,31,25,28,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,23,34,27,22,29,24],
[25,0,27,34,30,27,21,28,28],
[21,23,0,29,27,30,26,27,27],
[27,16,21,0,26,25,28,28,21],
[16,20,23,24,0,19,30,23,21],
[23,23,20,25,31,0,26,25,24],
[28,29,24,22,20,24,0,24,26],
[21,22,23,22,27,25,26,0,26],
[26,22,23,29,29,26,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,31,22,20,21,24,28],
[22,0,23,25,23,20,12,13,18],
[24,27,0,33,25,20,17,12,25],
[19,25,17,0,14,23,15,13,23],
[28,27,25,36,0,29,27,26,29],
[30,30,30,27,21,0,30,23,23],
[29,38,33,35,23,20,0,24,28],
[26,37,38,37,24,27,26,0,31],
[22,32,25,27,21,27,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,24,20,28,21,31,22],
[25,0,20,26,21,31,31,27,26],
[22,30,0,24,22,25,25,23,30],
[26,24,26,0,27,26,37,33,25],
[30,29,28,23,0,27,30,32,28],
[22,19,25,24,23,0,28,23,19],
[29,19,25,13,20,22,0,21,23],
[19,23,27,17,18,27,29,0,19],
[28,24,20,25,22,31,27,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,27,31,29,28,32,33],
[25,0,23,25,29,23,27,33,30],
[20,27,0,26,23,23,27,28,28],
[23,25,24,0,30,24,28,31,28],
[19,21,27,20,0,24,27,26,23],
[21,27,27,26,26,0,29,27,26],
[22,23,23,22,23,21,0,23,28],
[18,17,22,19,24,23,27,0,23],
[17,20,22,22,27,24,22,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,26,25,26,31,38,19,21],
[16,0,11,21,22,28,29,17,21],
[24,39,0,26,23,28,29,28,24],
[25,29,24,0,25,28,21,19,26],
[24,28,27,25,0,29,28,29,20],
[19,22,22,22,21,0,18,20,21],
[12,21,21,29,22,32,0,17,17],
[31,33,22,31,21,30,33,0,25],
[29,29,26,24,30,29,33,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,20,21,28,27,22,22,18],
[32,0,31,30,33,33,33,32,25],
[30,19,0,28,30,31,28,28,15],
[29,20,22,0,26,27,22,23,22],
[22,17,20,24,0,25,23,25,19],
[23,17,19,23,25,0,21,22,18],
[28,17,22,28,27,29,0,25,22],
[28,18,22,27,25,28,25,0,15],
[32,25,35,28,31,32,28,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,24,24,23,27,27,30,24],
[24,0,26,26,24,30,25,22,23],
[26,24,0,32,24,27,32,27,22],
[26,24,18,0,26,24,26,24,26],
[27,26,26,24,0,26,26,26,23],
[23,20,23,26,24,0,28,29,17],
[23,25,18,24,24,22,0,31,20],
[20,28,23,26,24,21,19,0,22],
[26,27,28,24,27,33,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,25,20,19,20,16,17],
[29,0,23,27,33,23,26,31,27],
[29,27,0,33,24,21,32,25,25],
[25,23,17,0,21,19,20,24,25],
[30,17,26,29,0,15,22,22,20],
[31,27,29,31,35,0,27,23,28],
[30,24,18,30,28,23,0,32,22],
[34,19,25,26,28,27,18,0,19],
[33,23,25,25,30,22,28,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,23,21,27,29,27,22],
[28,0,22,24,27,27,30,24,26],
[26,28,0,25,24,28,26,26,29],
[27,26,25,0,24,31,25,29,23],
[29,23,26,26,0,30,26,27,24],
[23,23,22,19,20,0,21,25,20],
[21,20,24,25,24,29,0,24,23],
[23,26,24,21,23,25,26,0,24],
[28,24,21,27,26,30,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,27,32,26,29,32,28,25],
[20,0,24,25,23,28,29,22,18],
[23,26,0,24,21,27,24,25,23],
[18,25,26,0,20,25,26,25,22],
[24,27,29,30,0,25,29,29,25],
[21,22,23,25,25,0,25,20,23],
[18,21,26,24,21,25,0,24,22],
[22,28,25,25,21,30,26,0,24],
[25,32,27,28,25,27,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,19,19,19,23,24,23,20],
[23,0,19,17,21,27,27,28,20],
[31,31,0,25,27,29,29,34,25],
[31,33,25,0,33,35,36,32,36],
[31,29,23,17,0,28,28,30,24],
[27,23,21,15,22,0,25,28,21],
[26,23,21,14,22,25,0,32,26],
[27,22,16,18,20,22,18,0,21],
[30,30,25,14,26,29,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,24,16,20,18,25,22],
[25,0,24,24,24,26,17,25,31],
[29,26,0,24,25,24,19,25,30],
[26,26,26,0,23,23,23,23,28],
[34,26,25,27,0,26,25,29,28],
[30,24,26,27,24,0,28,25,24],
[32,33,31,27,25,22,0,32,30],
[25,25,25,27,21,25,18,0,26],
[28,19,20,22,22,26,20,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,18,26,33,27,27,28,33],
[20,0,27,21,27,24,15,21,26],
[32,23,0,37,30,20,26,23,33],
[24,29,13,0,34,20,22,31,33],
[17,23,20,16,0,21,18,15,18],
[23,26,30,30,29,0,26,20,24],
[23,35,24,28,32,24,0,27,32],
[22,29,27,19,35,30,23,0,30],
[17,24,17,17,32,26,18,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,17,20,23,28,25,24,24],
[25,0,26,28,24,29,27,34,30],
[33,24,0,27,30,26,26,28,25],
[30,22,23,0,28,29,27,26,26],
[27,26,20,22,0,21,23,23,27],
[22,21,24,21,29,0,25,26,24],
[25,23,24,23,27,25,0,26,21],
[26,16,22,24,27,24,24,0,21],
[26,20,25,24,23,26,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,21,25,37,29,30,20,26],
[21,0,21,16,32,15,17,26,21],
[29,29,0,30,34,23,20,26,35],
[25,34,20,0,31,19,25,29,20],
[13,18,16,19,0,14,16,19,21],
[21,35,27,31,36,0,27,31,27],
[20,33,30,25,34,23,0,34,20],
[30,24,24,21,31,19,16,0,21],
[24,29,15,30,29,23,30,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,19,17,19,20,19,12,21],
[35,0,33,23,21,29,30,27,31],
[31,17,0,27,22,22,30,15,26],
[33,27,23,0,28,26,23,19,30],
[31,29,28,22,0,25,30,22,29],
[30,21,28,24,25,0,20,21,33],
[31,20,20,27,20,30,0,19,31],
[38,23,35,31,28,29,31,0,26],
[29,19,24,20,21,17,19,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,26,26,30,26,23,23,31],
[28,0,23,28,32,28,27,27,31],
[24,27,0,23,30,28,25,25,31],
[24,22,27,0,32,26,22,24,28],
[20,18,20,18,0,23,18,17,24],
[24,22,22,24,27,0,19,24,28],
[27,23,25,28,32,31,0,28,29],
[27,23,25,26,33,26,22,0,29],
[19,19,19,22,26,22,21,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,23,24,20,24,26,26],
[30,0,22,31,31,30,32,29,35],
[29,28,0,25,31,29,31,28,34],
[27,19,25,0,28,28,26,28,31],
[26,19,19,22,0,20,27,24,29],
[30,20,21,22,30,0,29,29,33],
[26,18,19,24,23,21,0,24,28],
[24,21,22,22,26,21,26,0,30],
[24,15,16,19,21,17,22,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,29,32,27,26,24,30,22],
[15,0,24,22,25,22,19,23,20],
[21,26,0,22,21,26,20,24,19],
[18,28,28,0,25,32,19,29,26],
[23,25,29,25,0,27,25,30,29],
[24,28,24,18,23,0,24,28,21],
[26,31,30,31,25,26,0,30,25],
[20,27,26,21,20,22,20,0,19],
[28,30,31,24,21,29,25,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,26,26,14,38,14,26,26],
[36,0,24,38,12,50,26,38,24],
[24,26,0,26,12,50,26,26,12],
[24,12,24,0,12,38,26,12,12],
[36,38,38,38,0,50,26,38,24],
[12,0,0,12,0,0,0,0,0],
[36,24,24,24,24,50,0,24,24],
[24,12,24,38,12,50,26,0,0],
[24,26,38,38,26,50,26,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,26,25,24,32,23,28,23],
[25,0,21,24,23,29,22,23,22],
[24,29,0,25,29,32,26,26,25],
[25,26,25,0,27,28,25,23,21],
[26,27,21,23,0,30,27,27,22],
[18,21,18,22,20,0,19,27,18],
[27,28,24,25,23,31,0,26,23],
[22,27,24,27,23,23,24,0,20],
[27,28,25,29,28,32,27,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,27,40,33,35,37,40,25],
[16,0,18,37,28,27,26,27,31],
[23,32,0,28,31,27,27,33,30],
[10,13,22,0,14,17,15,20,18],
[17,22,19,36,0,32,20,28,25],
[15,23,23,33,18,0,31,23,36],
[13,24,23,35,30,19,0,29,33],
[10,23,17,30,22,27,21,0,20],
[25,19,20,32,25,14,17,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,25,23,21,26,25,25,22],
[17,0,20,17,17,16,25,18,24],
[25,30,0,26,25,23,33,25,23],
[27,33,24,0,20,25,28,27,31],
[29,33,25,30,0,21,31,29,28],
[24,34,27,25,29,0,33,23,33],
[25,25,17,22,19,17,0,20,22],
[25,32,25,23,21,27,30,0,27],
[28,26,27,19,22,17,28,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,28,25,26,27,26,28],
[21,0,24,22,25,26,25,27,21],
[25,26,0,25,25,27,27,23,23],
[22,28,25,0,22,30,23,31,26],
[25,25,25,28,0,32,28,26,25],
[24,24,23,20,18,0,24,17,18],
[23,25,23,27,22,26,0,26,23],
[24,23,27,19,24,33,24,0,23],
[22,29,27,24,25,32,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,31,25,17,24,24,20,18],
[27,0,31,25,25,23,21,23,21],
[19,19,0,18,14,22,19,20,17],
[25,25,32,0,20,25,24,24,21],
[33,25,36,30,0,27,27,30,24],
[26,27,28,25,23,0,24,25,25],
[26,29,31,26,23,26,0,29,27],
[30,27,30,26,20,25,21,0,18],
[32,29,33,29,26,25,23,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,24,28,32,24,23,29,30],
[31,0,28,25,32,20,23,26,25],
[26,22,0,22,26,23,25,28,20],
[22,25,28,0,25,22,23,28,21],
[18,18,24,25,0,25,23,27,25],
[26,30,27,28,25,0,24,26,24],
[27,27,25,27,27,26,0,28,25],
[21,24,22,22,23,24,22,0,20],
[20,25,30,29,25,26,25,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,23,30,27,28,29,29],
[26,0,31,18,26,23,25,26,31],
[22,19,0,20,29,22,23,28,28],
[27,32,30,0,27,27,25,33,28],
[20,24,21,23,0,22,18,26,29],
[23,27,28,23,28,0,30,29,30],
[22,25,27,25,32,20,0,27,30],
[21,24,22,17,24,21,23,0,25],
[21,19,22,22,21,20,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,18,30,20,29,22,27,14],
[32,0,20,32,26,30,21,37,26],
[32,30,0,34,26,24,18,34,26],
[20,18,16,0,17,21,14,14,16],
[30,24,24,33,0,24,22,29,21],
[21,20,26,29,26,0,21,24,18],
[28,29,32,36,28,29,0,36,24],
[23,13,16,36,21,26,14,0,22],
[36,24,24,34,29,32,26,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,28,28,37,27,31,26],
[25,0,27,26,21,27,24,28,26],
[20,23,0,25,22,31,20,33,24],
[22,24,25,0,25,34,22,25,28],
[22,29,28,25,0,29,23,28,27],
[13,23,19,16,21,0,14,25,23],
[23,26,30,28,27,36,0,32,29],
[19,22,17,25,22,25,18,0,23],
[24,24,26,22,23,27,21,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,26,22,27,29,30,20],
[26,0,26,26,26,28,30,23,25],
[24,24,0,29,28,23,22,22,22],
[24,24,21,0,25,29,25,24,20],
[28,24,22,25,0,28,26,25,24],
[23,22,27,21,22,0,19,25,16],
[21,20,28,25,24,31,0,28,18],
[20,27,28,26,25,25,22,0,17],
[30,25,28,30,26,34,32,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,17,25,20,14,16,24,19],
[25,0,19,27,24,20,19,18,16],
[33,31,0,28,25,20,26,35,21],
[25,23,22,0,21,19,26,29,19],
[30,26,25,29,0,20,34,38,23],
[36,30,30,31,30,0,23,33,36],
[34,31,24,24,16,27,0,30,24],
[26,32,15,21,12,17,20,0,19],
[31,34,29,31,27,14,26,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,23,19,17,18,24,12],
[26,0,19,25,18,11,20,12,19],
[27,31,0,32,31,36,26,31,19],
[27,25,18,0,18,23,32,12,19],
[31,32,19,32,0,19,27,18,19],
[33,39,14,27,31,0,34,13,13],
[32,30,24,18,23,16,0,17,19],
[26,38,19,38,32,37,33,0,25],
[38,31,31,31,31,37,31,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,29,27,29,25,25,25,24],
[20,0,31,28,28,22,27,27,32],
[21,19,0,18,26,24,22,19,18],
[23,22,32,0,30,23,25,26,26],
[21,22,24,20,0,21,23,22,25],
[25,28,26,27,29,0,30,28,25],
[25,23,28,25,27,20,0,27,25],
[25,23,31,24,28,22,23,0,27],
[26,18,32,24,25,25,25,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,20,26,22,17,22,25,21],
[19,0,24,19,18,22,25,20,19],
[30,26,0,24,26,27,27,31,27],
[24,31,26,0,29,22,22,27,23],
[28,32,24,21,0,26,23,30,21],
[33,28,23,28,24,0,28,21,21],
[28,25,23,28,27,22,0,30,22],
[25,30,19,23,20,29,20,0,17],
[29,31,23,27,29,29,28,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,31,28,30,35,22,30],
[28,0,35,31,29,38,33,24,34],
[26,15,0,26,22,26,34,27,31],
[19,19,24,0,26,30,31,28,31],
[22,21,28,24,0,34,38,27,31],
[20,12,24,20,16,0,25,26,21],
[15,17,16,19,12,25,0,19,31],
[28,26,23,22,23,24,31,0,30],
[20,16,19,19,19,29,19,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,31,29,31,26,21,26,30],
[28,0,35,32,33,33,25,34,37],
[19,15,0,25,28,21,19,27,26],
[21,18,25,0,26,22,17,29,30],
[19,17,22,24,0,17,15,22,21],
[24,17,29,28,33,0,18,31,34],
[29,25,31,33,35,32,0,32,37],
[24,16,23,21,28,19,18,0,27],
[20,13,24,20,29,16,13,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,26,38,26,38,38,25,38],
[12,0,26,25,0,25,37,37,12],
[24,24,0,25,12,37,37,24,12],
[12,25,25,0,12,38,25,12,25],
[24,50,38,38,0,50,50,37,50],
[12,25,13,12,0,0,25,12,0],
[12,13,13,25,0,25,0,24,25],
[25,13,26,38,13,38,26,0,25],
[12,38,38,25,0,50,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,24,21,28,20,21,29,26],
[29,0,21,23,15,21,29,30,29],
[26,29,0,21,25,23,32,24,24],
[29,27,29,0,29,22,22,44,13],
[22,35,25,21,0,28,22,25,22],
[30,29,27,28,22,0,30,26,26],
[29,21,18,28,28,20,0,37,24],
[21,20,26,6,25,24,13,0,12],
[24,21,26,37,28,24,26,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,22,26,28,27,27,29],
[22,0,31,18,31,29,30,23,24],
[24,19,0,18,25,26,29,20,26],
[28,32,32,0,24,41,31,35,33],
[24,19,25,26,0,31,28,21,23],
[22,21,24,9,19,0,24,21,21],
[23,20,21,19,22,26,0,26,26],
[23,27,30,15,29,29,24,0,31],
[21,26,24,17,27,29,24,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,25,24,28,25,29,24,30],
[18,0,22,22,22,18,27,28,28],
[25,28,0,26,30,25,36,28,31],
[26,28,24,0,24,26,27,24,29],
[22,28,20,26,0,20,27,24,29],
[25,32,25,24,30,0,33,27,32],
[21,23,14,23,23,17,0,23,28],
[26,22,22,26,26,23,27,0,29],
[20,22,19,21,21,18,22,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,28,29,23,20,26,19,25],
[23,0,28,30,15,18,23,15,24],
[22,22,0,31,19,15,26,11,23],
[21,20,19,0,12,17,29,19,22],
[27,35,31,38,0,27,27,28,25],
[30,32,35,33,23,0,26,19,31],
[24,27,24,21,23,24,0,15,29],
[31,35,39,31,22,31,35,0,31],
[25,26,27,28,25,19,21,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,25,25,26,25,34,34],
[26,0,24,25,23,25,25,30,27],
[22,26,0,26,20,25,24,32,32],
[25,25,24,0,24,25,22,27,25],
[25,27,30,26,0,28,25,33,33],
[24,25,25,25,22,0,26,27,31],
[25,25,26,28,25,24,0,27,26],
[16,20,18,23,17,23,23,0,26],
[16,23,18,25,17,19,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,25,23,20,24,24,22],
[28,0,22,25,30,26,27,26,22],
[27,28,0,29,28,28,25,27,26],
[25,25,21,0,24,25,23,23,19],
[27,20,22,26,0,26,26,27,21],
[30,24,22,25,24,0,22,24,25],
[26,23,25,27,24,28,0,25,22],
[26,24,23,27,23,26,25,0,22],
[28,28,24,31,29,25,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,20,30,26,27,29,30,29],
[21,0,21,28,29,26,21,24,27],
[30,29,0,32,30,28,25,34,32],
[20,22,18,0,23,25,26,28,26],
[24,21,20,27,0,23,30,25,23],
[23,24,22,25,27,0,21,26,20],
[21,29,25,24,20,29,0,29,24],
[20,26,16,22,25,24,21,0,21],
[21,23,18,24,27,30,26,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,39,30,27,35,34,27,23],
[23,0,38,30,26,36,32,29,28],
[11,12,0,29,16,23,25,22,14],
[20,20,21,0,19,32,24,31,23],
[23,24,34,31,0,34,30,32,25],
[15,14,27,18,16,0,14,25,22],
[16,18,25,26,20,36,0,26,26],
[23,21,28,19,18,25,24,0,19],
[27,22,36,27,25,28,24,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,29,24,30,33,29,26,31],
[16,0,23,21,23,21,21,21,25],
[21,27,0,26,26,29,25,30,26],
[26,29,24,0,19,28,24,23,26],
[20,27,24,31,0,31,24,30,31],
[17,29,21,22,19,0,23,27,29],
[21,29,25,26,26,27,0,27,21],
[24,29,20,27,20,23,23,0,26],
[19,25,24,24,19,21,29,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,22,25,29,20,27,27,24],
[19,0,27,23,23,16,26,24,26],
[28,23,0,19,29,21,30,30,24],
[25,27,31,0,26,27,27,28,35],
[21,27,21,24,0,23,24,18,25],
[30,34,29,23,27,0,30,28,29],
[23,24,20,23,26,20,0,21,20],
[23,26,20,22,32,22,29,0,22],
[26,24,26,15,25,21,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,28,24,15,24,31,23],
[25,0,19,17,16,17,15,17,17],
[20,31,0,23,22,24,29,20,24],
[22,33,27,0,28,17,24,30,31],
[26,34,28,22,0,22,20,21,27],
[35,33,26,33,28,0,21,36,29],
[26,35,21,26,30,29,0,25,22],
[19,33,30,20,29,14,25,0,33],
[27,33,26,19,23,21,28,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,14,22,23,34,21,24],
[29,0,25,24,27,27,39,23,31],
[27,25,0,27,25,34,37,25,29],
[36,26,23,0,30,29,37,24,34],
[28,23,25,20,0,23,37,22,29],
[27,23,16,21,27,0,26,13,28],
[16,11,13,13,13,24,0,17,20],
[29,27,25,26,28,37,33,0,34],
[26,19,21,16,21,22,30,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,26,26,24,24,27,18,29],
[30,0,23,25,33,23,27,27,30],
[24,27,0,22,27,21,26,25,28],
[24,25,28,0,30,26,28,24,31],
[26,17,23,20,0,22,27,25,25],
[26,27,29,24,28,0,24,20,28],
[23,23,24,22,23,26,0,19,25],
[32,23,25,26,25,30,31,0,28],
[21,20,22,19,25,22,25,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,21,21,30,30,11,30,31],
[20,0,31,31,41,30,21,31,41],
[29,19,0,21,40,19,31,30,30],
[29,19,29,0,39,19,20,29,19],
[20,9,10,11,0,9,0,19,21],
[20,20,31,31,41,0,21,31,31],
[39,29,19,30,50,29,0,30,40],
[20,19,20,21,31,19,20,0,21],
[19,9,20,31,29,19,10,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,29,17,24,28,23,28],
[31,0,28,26,17,25,36,32,29],
[29,22,0,32,26,23,37,41,30],
[21,24,18,0,11,13,27,17,35],
[33,33,24,39,0,36,39,30,43],
[26,25,27,37,14,0,29,32,36],
[22,14,13,23,11,21,0,21,38],
[27,18,9,33,20,18,29,0,29],
[22,21,20,15,7,14,12,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,18,17,23,17,30,23,31],
[26,0,20,23,26,21,32,20,30],
[32,30,0,25,30,23,36,26,32],
[33,27,25,0,29,27,30,25,33],
[27,24,20,21,0,23,29,21,30],
[33,29,27,23,27,0,36,23,35],
[20,18,14,20,21,14,0,20,27],
[27,30,24,25,29,27,30,0,34],
[19,20,18,17,20,15,23,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,23,28,43,36,36,24,38],
[15,0,14,7,15,15,8,15,15],
[27,36,0,35,34,29,27,31,22],
[22,43,15,0,20,24,15,17,22],
[7,35,16,30,0,16,14,16,14],
[14,35,21,26,34,0,21,23,21],
[14,42,23,35,36,29,0,24,38],
[26,35,19,33,34,27,26,0,26],
[12,35,28,28,36,29,12,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,33,22,29,27,26,32],
[27,0,22,28,23,25,24,27,28],
[24,28,0,24,26,21,22,27,30],
[17,22,26,0,19,22,24,22,31],
[28,27,24,31,0,25,20,22,31],
[21,25,29,28,25,0,29,29,31],
[23,26,28,26,30,21,0,22,29],
[24,23,23,28,28,21,28,0,27],
[18,22,20,19,19,19,21,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,25,24,27,29,38,24],
[27,0,30,27,24,25,31,35,27],
[24,20,0,22,21,19,20,27,22],
[25,23,28,0,23,25,26,37,25],
[26,26,29,27,0,24,27,35,27],
[23,25,31,25,26,0,30,37,25],
[21,19,30,24,23,20,0,29,28],
[12,15,23,13,15,13,21,0,19],
[26,23,28,25,23,25,22,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,24,28,17,26,31,27,28],
[32,0,30,31,25,31,32,33,30],
[26,20,0,30,26,27,35,33,32],
[22,19,20,0,23,24,27,24,32],
[33,25,24,27,0,28,29,28,29],
[24,19,23,26,22,0,25,23,25],
[19,18,15,23,21,25,0,16,28],
[23,17,17,26,22,27,34,0,28],
[22,20,18,18,21,25,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,29,32,36,24,30,33,24],
[22,0,32,28,29,24,20,33,31],
[21,18,0,27,26,18,15,19,22],
[18,22,23,0,29,17,14,26,26],
[14,21,24,21,0,23,12,18,19],
[26,26,32,33,27,0,23,30,18],
[20,30,35,36,38,27,0,33,30],
[17,17,31,24,32,20,17,0,29],
[26,19,28,24,31,32,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,31,30,23,23,25,31],
[25,0,23,32,30,26,26,33,33],
[25,27,0,38,34,32,28,32,33],
[19,18,12,0,29,22,21,25,27],
[20,20,16,21,0,24,17,26,28],
[27,24,18,28,26,0,25,26,26],
[27,24,22,29,33,25,0,29,39],
[25,17,18,25,24,24,21,0,30],
[19,17,17,23,22,24,11,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,26,19,16,25,19,26],
[35,0,23,35,33,38,25,34,32],
[28,27,0,33,27,25,19,29,32],
[24,15,17,0,16,23,18,20,25],
[31,17,23,34,0,25,32,30,37],
[34,12,25,27,25,0,15,20,29],
[25,25,31,32,18,35,0,27,30],
[31,16,21,30,20,30,23,0,30],
[24,18,18,25,13,21,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,34,32,24,37,29,29,38],
[19,0,28,29,26,25,21,22,32],
[16,22,0,24,23,28,25,19,28],
[18,21,26,0,24,25,22,19,25],
[26,24,27,26,0,30,25,18,30],
[13,25,22,25,20,0,21,20,24],
[21,29,25,28,25,29,0,21,25],
[21,28,31,31,32,30,29,0,33],
[12,18,22,25,20,26,25,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,28,38,35,32,29,29,28],
[28,0,28,24,29,33,28,34,34],
[22,22,0,30,17,27,28,22,19],
[12,26,20,0,31,17,24,18,24],
[15,21,33,19,0,31,37,29,29],
[18,17,23,33,19,0,24,33,33],
[21,22,22,26,13,26,0,28,22],
[21,16,28,32,21,17,22,0,27],
[22,16,31,26,21,17,28,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,27,29,34,25,30,29,32],
[19,0,28,30,20,28,34,24,31],
[23,22,0,23,19,28,25,22,23],
[21,20,27,0,24,21,29,28,19],
[16,30,31,26,0,33,29,39,29],
[25,22,22,29,17,0,23,25,18],
[20,16,25,21,21,27,0,26,27],
[21,26,28,22,11,25,24,0,28],
[18,19,27,31,21,32,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,21,26,22,22,26,21],
[30,0,23,24,29,28,28,24,22],
[29,27,0,23,24,27,24,29,24],
[29,26,27,0,26,22,29,26,25],
[24,21,26,24,0,26,22,26,23],
[28,22,23,28,24,0,22,30,23],
[28,22,26,21,28,28,0,29,24],
[24,26,21,24,24,20,21,0,20],
[29,28,26,25,27,27,26,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,26,25,30,24,23,26],
[21,0,20,24,18,31,24,26,22],
[24,30,0,23,26,29,28,24,23],
[24,26,27,0,22,28,19,29,26],
[25,32,24,28,0,31,29,25,27],
[20,19,21,22,19,0,19,18,20],
[26,26,22,31,21,31,0,31,24],
[27,24,26,21,25,32,19,0,24],
[24,28,27,24,23,30,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,4,16,12,13,15,15,10,18],
[46,0,19,21,13,23,21,25,33],
[34,31,0,22,20,29,21,25,31],
[38,29,28,0,26,28,28,22,25],
[37,37,30,24,0,35,30,37,36],
[35,27,21,22,15,0,25,20,28],
[35,29,29,22,20,25,0,26,27],
[40,25,25,28,13,30,24,0,31],
[32,17,19,25,14,22,23,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,22,23,24,25,28,25,25],
[22,0,22,19,20,22,23,27,16],
[28,28,0,26,26,22,21,26,21],
[27,31,24,0,30,27,27,26,24],
[26,30,24,20,0,26,22,25,24],
[25,28,28,23,24,0,28,25,22],
[22,27,29,23,28,22,0,22,23],
[25,23,24,24,25,25,28,0,18],
[25,34,29,26,26,28,27,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,31,26,8,23,43,18,34],
[8,0,17,18,8,8,27,26,8],
[19,33,0,19,27,24,27,18,10],
[24,32,31,0,24,23,24,25,24],
[42,42,23,26,0,33,43,25,26],
[27,42,26,27,17,0,27,26,36],
[7,23,23,26,7,23,0,25,23],
[32,24,32,25,25,24,25,0,25],
[16,42,40,26,24,14,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,22,31,23,24,31,26,30],
[22,0,21,25,21,23,31,24,19],
[28,29,0,25,30,25,23,26,32],
[19,25,25,0,22,23,28,24,26],
[27,29,20,28,0,23,27,25,25],
[26,27,25,27,27,0,30,28,25],
[19,19,27,22,23,20,0,20,30],
[24,26,24,26,25,22,30,0,30],
[20,31,18,24,25,25,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,50,25,50,50,25,25,25],
[0,0,0,0,0,0,0,0,25],
[0,50,0,25,25,50,25,0,25],
[25,50,25,0,25,25,0,0,25],
[0,50,25,25,0,50,25,0,25],
[0,50,0,25,0,0,0,0,25],
[25,50,25,50,25,50,0,25,25],
[25,50,50,50,50,50,25,0,25],
[25,25,25,25,25,25,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,25,30,24,30,23,22],
[29,0,25,27,24,21,22,21,25],
[25,25,0,25,30,24,25,26,18],
[25,23,25,0,24,26,26,25,16],
[20,26,20,26,0,13,22,22,20],
[26,29,26,24,37,0,21,17,25],
[20,28,25,24,28,29,0,22,22],
[27,29,24,25,28,33,28,0,25],
[28,25,32,34,30,25,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,20,25,25,31,23,21],
[30,0,23,29,24,36,30,23,30],
[29,27,0,30,33,26,29,20,25],
[30,21,20,0,28,24,30,22,32],
[25,26,17,22,0,31,31,25,28],
[25,14,24,26,19,0,26,19,28],
[19,20,21,20,19,24,0,21,22],
[27,27,30,28,25,31,29,0,30],
[29,20,25,18,22,22,28,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,25,25,26,25,31,27,26],
[23,0,22,26,28,23,29,30,23],
[25,28,0,27,21,21,29,25,24],
[25,24,23,0,25,25,31,29,21],
[24,22,29,25,0,25,27,29,23],
[25,27,29,25,25,0,24,27,24],
[19,21,21,19,23,26,0,28,22],
[23,20,25,21,21,23,22,0,20],
[24,27,26,29,27,26,28,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,25,29,26,27,29,25],
[25,0,32,27,28,22,30,30,33],
[22,18,0,21,20,24,23,28,27],
[25,23,29,0,25,29,33,28,28],
[21,22,30,25,0,23,35,30,29],
[24,28,26,21,27,0,30,29,27],
[23,20,27,17,15,20,0,24,25],
[21,20,22,22,20,21,26,0,29],
[25,17,23,22,21,23,25,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,26,20,19,24,20,24],
[24,0,30,27,24,22,26,25,34],
[27,20,0,20,22,14,25,16,22],
[24,23,30,0,33,27,26,28,35],
[30,26,28,17,0,24,21,22,24],
[31,28,36,23,26,0,27,33,30],
[26,24,25,24,29,23,0,17,31],
[30,25,34,22,28,17,33,0,33],
[26,16,28,15,26,20,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,31,28,23,29,26,30,25],
[25,0,32,27,27,31,23,31,28],
[19,18,0,19,23,24,21,29,23],
[22,23,31,0,20,25,22,26,26],
[27,23,27,30,0,29,26,27,27],
[21,19,26,25,21,0,22,25,21],
[24,27,29,28,24,28,0,31,30],
[20,19,21,24,23,25,19,0,23],
[25,22,27,24,23,29,20,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,20,21,23,34,28,29,28],
[20,0,15,24,18,26,24,33,30],
[30,35,0,29,22,38,28,31,26],
[29,26,21,0,25,31,32,26,30],
[27,32,28,25,0,31,30,27,34],
[16,24,12,19,19,0,20,23,19],
[22,26,22,18,20,30,0,20,22],
[21,17,19,24,23,27,30,0,30],
[22,20,24,20,16,31,28,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,16,16,33,33,33,33,33],
[17,0,0,17,17,17,17,0,17],
[34,50,0,17,33,34,17,17,17],
[34,33,33,0,33,50,17,17,33],
[17,33,17,17,0,17,17,17,17],
[17,33,16,0,33,0,0,17,17],
[17,33,33,33,33,50,0,17,33],
[17,50,33,33,33,33,33,0,50],
[17,33,33,17,33,33,17,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,24,33,21,36,24,35,26],
[28,0,23,29,28,36,24,38,15],
[26,27,0,22,23,38,31,35,25],
[17,21,28,0,31,36,30,28,19],
[29,22,27,19,0,36,35,29,22],
[14,14,12,14,14,0,25,19,19],
[26,26,19,20,15,25,0,24,24],
[15,12,15,22,21,31,26,0,15],
[24,35,25,31,28,31,26,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,16,21,31,26,26,18,27],
[15,0,19,19,31,25,19,24,31],
[34,31,0,30,31,35,31,25,35],
[29,31,20,0,34,30,28,18,36],
[19,19,19,16,0,24,18,17,24],
[24,25,15,20,26,0,16,24,26],
[24,31,19,22,32,34,0,22,31],
[32,26,25,32,33,26,28,0,33],
[23,19,15,14,26,24,19,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,29,29,26,24,27,25,28],
[24,0,24,25,27,24,24,26,29],
[21,26,0,23,28,22,24,21,29],
[21,25,27,0,24,21,19,17,25],
[24,23,22,26,0,25,20,25,26],
[26,26,28,29,25,0,26,24,28],
[23,26,26,31,30,24,0,27,31],
[25,24,29,33,25,26,23,0,28],
[22,21,21,25,24,22,19,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,23,31,24,22,25,24],
[29,0,24,27,35,26,26,30,30],
[29,26,0,30,32,25,18,27,35],
[27,23,20,0,30,27,25,24,28],
[19,15,18,20,0,23,22,20,21],
[26,24,25,23,27,0,28,22,31],
[28,24,32,25,28,22,0,26,33],
[25,20,23,26,30,28,24,0,26],
[26,20,15,22,29,19,17,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,17,28,20,23,27,18,25],
[32,0,28,36,24,22,28,20,28],
[33,22,0,30,29,26,27,24,29],
[22,14,20,0,20,16,17,12,24],
[30,26,21,30,0,29,21,25,25],
[27,28,24,34,21,0,27,23,30],
[23,22,23,33,29,23,0,21,24],
[32,30,26,38,25,27,29,0,29],
[25,22,21,26,25,20,26,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,30,28,25,33,34,32,30],
[18,0,34,35,24,32,24,24,29],
[20,16,0,18,12,21,21,20,17],
[22,15,32,0,25,32,32,27,32],
[25,26,38,25,0,27,27,31,22],
[17,18,29,18,23,0,28,20,25],
[16,26,29,18,23,22,0,23,27],
[18,26,30,23,19,30,27,0,25],
[20,21,33,18,28,25,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,16,25,30,25,23,31,24],
[17,0,21,20,28,19,14,26,25],
[34,29,0,27,37,34,25,33,34],
[25,30,23,0,31,26,26,29,28],
[20,22,13,19,0,20,19,21,22],
[25,31,16,24,30,0,20,29,30],
[27,36,25,24,31,30,0,36,32],
[19,24,17,21,29,21,14,0,31],
[26,25,16,22,28,20,18,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,34,29,34,20,21,24,26],
[35,0,26,32,38,24,29,22,30],
[16,24,0,21,27,15,20,24,22],
[21,18,29,0,30,24,27,25,21],
[16,12,23,20,0,22,18,19,24],
[30,26,35,26,28,0,23,27,28],
[29,21,30,23,32,27,0,22,24],
[26,28,26,25,31,23,28,0,33],
[24,20,28,29,26,22,26,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,27,26,30,19,28,38,28],
[34,0,36,42,41,24,38,42,23],
[23,14,0,34,33,11,30,32,21],
[24,8,16,0,21,19,28,30,22],
[20,9,17,29,0,3,27,25,21],
[31,26,39,31,47,0,36,39,24],
[22,12,20,22,23,14,0,17,20],
[12,8,18,20,25,11,33,0,12],
[22,27,29,28,29,26,30,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,33,14,25,23,20,32,19],
[25,0,30,21,24,25,26,29,27],
[17,20,0,14,18,18,18,24,17],
[36,29,36,0,23,27,29,32,34],
[25,26,32,27,0,28,28,34,26],
[27,25,32,23,22,0,25,26,26],
[30,24,32,21,22,25,0,30,23],
[18,21,26,18,16,24,20,0,18],
[31,23,33,16,24,24,27,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,24,29,31,29,34,24,39],
[31,0,23,28,41,29,43,36,29],
[26,27,0,14,32,24,28,26,33],
[21,22,36,0,27,27,41,26,31],
[19,9,18,23,0,12,22,19,29],
[21,21,26,23,38,0,42,33,32],
[16,7,22,9,28,8,0,17,19],
[26,14,24,24,31,17,33,0,34],
[11,21,17,19,21,18,31,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,31,31,25,31,18,19,25],
[13,0,25,12,18,18,12,19,26],
[19,25,0,18,18,18,12,12,32],
[19,38,32,0,26,38,25,20,26],
[25,32,32,24,0,25,18,19,26],
[19,32,32,12,25,0,19,26,20],
[32,38,38,25,32,31,0,19,26],
[31,31,38,30,31,24,31,0,32],
[25,24,18,24,24,30,24,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,33,26,28,28,24,29,21],
[23,0,24,30,27,28,27,32,22],
[17,26,0,22,25,22,20,24,19],
[24,20,28,0,24,34,24,25,21],
[22,23,25,26,0,25,22,30,18],
[22,22,28,16,25,0,22,32,17],
[26,23,30,26,28,28,0,29,25],
[21,18,26,25,20,18,21,0,17],
[29,28,31,29,32,33,25,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,20,31,26,19,19,8,14],
[23,0,37,17,31,25,25,25,31],
[30,13,0,24,24,24,25,21,27],
[19,33,26,0,33,27,20,20,27],
[24,19,26,17,0,18,14,20,26],
[31,25,26,23,32,0,20,20,32],
[31,25,25,30,36,30,0,21,19],
[42,25,29,30,30,30,29,0,42],
[36,19,23,23,24,18,31,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,24,22,29,17,30,24,20],
[19,0,26,18,26,20,23,26,23],
[26,24,0,27,26,22,26,22,21],
[28,32,23,0,31,31,33,24,26],
[21,24,24,19,0,18,25,21,16],
[33,30,28,19,32,0,29,23,29],
[20,27,24,17,25,21,0,17,20],
[26,24,28,26,29,27,33,0,28],
[30,27,29,24,34,21,30,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,24,33,50,42,26,24,26],
[9,0,17,27,33,35,18,16,26],
[26,33,0,26,33,27,26,33,17],
[17,23,24,0,32,24,17,16,26],
[0,17,17,18,0,27,18,7,26],
[8,15,23,26,23,0,26,15,17],
[24,32,24,33,32,24,0,24,24],
[26,34,17,34,43,35,26,0,26],
[24,24,33,24,24,33,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,23,13,22,12,21,33,23],
[30,0,20,20,17,15,14,26,16],
[27,30,0,26,18,25,19,25,18],
[37,30,24,0,24,23,22,27,20],
[28,33,32,26,0,24,30,32,26],
[38,35,25,27,26,0,30,32,25],
[29,36,31,28,20,20,0,27,25],
[17,24,25,23,18,18,23,0,17],
[27,34,32,30,24,25,25,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,27,20,18,33,22,34,23],
[36,0,34,29,22,31,26,34,31],
[23,16,0,31,29,33,30,31,31],
[30,21,19,0,16,13,14,39,21],
[32,28,21,34,0,30,22,34,28],
[17,19,17,37,20,0,21,28,16],
[28,24,20,36,28,29,0,40,31],
[16,16,19,11,16,22,10,0,16],
[27,19,19,29,22,34,19,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,22,18,19,25,19,21,30],
[35,0,31,25,29,38,27,32,35],
[28,19,0,20,20,35,26,18,24],
[32,25,30,0,29,35,24,20,25],
[31,21,30,21,0,28,23,17,30],
[25,12,15,15,22,0,17,15,18],
[31,23,24,26,27,33,0,19,33],
[29,18,32,30,33,35,31,0,31],
[20,15,26,25,20,32,17,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,19,22,27,22,30,26,31],
[23,0,25,26,22,24,28,27,25],
[31,25,0,30,30,30,33,33,29],
[28,24,20,0,25,24,28,26,23],
[23,28,20,25,0,25,25,25,20],
[28,26,20,26,25,0,26,27,25],
[20,22,17,22,25,24,0,22,21],
[24,23,17,24,25,23,28,0,22],
[19,25,21,27,30,25,29,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,33,30,25,26,31,33,28],
[20,0,30,24,23,28,26,27,24],
[17,20,0,22,19,24,23,24,20],
[20,26,28,0,22,24,27,26,27],
[25,27,31,28,0,26,29,28,31],
[24,22,26,26,24,0,24,27,20],
[19,24,27,23,21,26,0,26,25],
[17,23,26,24,22,23,24,0,26],
[22,26,30,23,19,30,25,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,24,21,20,23,20,19],
[30,0,30,26,27,25,26,26,20],
[26,20,0,16,29,24,30,23,21],
[26,24,34,0,29,24,29,28,20],
[29,23,21,21,0,26,24,28,26],
[30,25,26,26,24,0,27,23,23],
[27,24,20,21,26,23,0,25,24],
[30,24,27,22,22,27,25,0,20],
[31,30,29,30,24,27,26,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,24,17,22,22,24,15,16],
[30,0,30,23,26,26,32,20,21],
[26,20,0,24,17,27,28,16,24],
[33,27,26,0,27,31,29,18,27],
[28,24,33,23,0,34,27,17,22],
[28,24,23,19,16,0,17,15,18],
[26,18,22,21,23,33,0,21,16],
[35,30,34,32,33,35,29,0,25],
[34,29,26,23,28,32,34,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,32,30,23,21,24,27,25],
[21,0,28,22,23,24,25,28,24],
[18,22,0,19,18,16,18,22,18],
[20,28,31,0,22,23,25,28,19],
[27,27,32,28,0,21,25,31,24],
[29,26,34,27,29,0,27,28,25],
[26,25,32,25,25,23,0,28,23],
[23,22,28,22,19,22,22,0,21],
[25,26,32,31,26,25,27,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,33,29,29,34,37,29],
[26,0,39,28,41,26,30,35,19],
[24,11,0,20,35,21,24,34,25],
[17,22,30,0,33,34,36,38,28],
[21,9,15,17,0,13,16,34,12],
[21,24,29,16,37,0,25,45,28],
[16,20,26,14,34,25,0,37,29],
[13,15,16,12,16,5,13,0,17],
[21,31,25,22,38,22,21,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,27,28,21,25,30,26,31],
[17,0,22,24,19,19,20,24,22],
[23,28,0,25,21,18,23,26,28],
[22,26,25,0,22,23,21,28,22],
[29,31,29,28,0,21,26,26,30],
[25,31,32,27,29,0,25,30,30],
[20,30,27,29,24,25,0,25,31],
[24,26,24,22,24,20,25,0,26],
[19,28,22,28,20,20,19,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,29,23,25,30,27,23,31],
[27,0,18,20,23,25,27,27,29],
[21,32,0,26,22,27,32,23,29],
[27,30,24,0,21,23,33,27,33],
[25,27,28,29,0,31,29,30,32],
[20,25,23,27,19,0,24,22,30],
[23,23,18,17,21,26,0,21,29],
[27,23,27,23,20,28,29,0,33],
[19,21,21,17,18,20,21,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,28,25,30,32,28,25,32],
[30,0,28,26,31,28,23,19,27],
[22,22,0,20,22,30,25,10,29],
[25,24,30,0,33,41,30,24,33],
[20,19,28,17,0,29,25,19,28],
[18,22,20,9,21,0,22,8,26],
[22,27,25,20,25,28,0,20,31],
[25,31,40,26,31,42,30,0,31],
[18,23,21,17,22,24,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,33,25,25,29,25,24,22],
[20,0,30,24,29,27,22,28,25],
[17,20,0,22,19,23,17,22,16],
[25,26,28,0,27,26,26,26,22],
[25,21,31,23,0,26,28,28,17],
[21,23,27,24,24,0,18,25,17],
[25,28,33,24,22,32,0,27,19],
[26,22,28,24,22,25,23,0,22],
[28,25,34,28,33,33,31,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,18,22,18,13,22,22,22],
[35,0,30,30,23,32,28,27,29],
[32,20,0,22,23,25,22,22,22],
[28,20,28,0,19,22,28,26,28],
[32,27,27,31,0,24,28,25,28],
[37,18,25,28,26,0,29,27,29],
[28,22,28,22,22,21,0,24,27],
[28,23,28,24,25,23,26,0,28],
[28,21,28,22,22,21,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,29,17,28,22,24,26,21],
[20,0,17,14,26,23,24,16,19],
[21,33,0,25,30,16,29,21,25],
[33,36,25,0,32,33,32,26,32],
[22,24,20,18,0,22,24,25,27],
[28,27,34,17,28,0,28,22,20],
[26,26,21,18,26,22,0,21,21],
[24,34,29,24,25,28,29,0,29],
[29,31,25,18,23,30,29,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,24,32,20,18,17,22,29],
[18,0,28,15,22,18,23,12,23],
[26,22,0,32,20,21,16,15,35],
[18,35,18,0,23,23,23,23,25],
[30,28,30,27,0,30,25,29,35],
[32,32,29,27,20,0,20,32,34],
[33,27,34,27,25,30,0,32,29],
[28,38,35,27,21,18,18,0,30],
[21,27,15,25,15,16,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,21,26,24,30,25,29,29],
[27,0,19,34,25,30,23,31,28],
[29,31,0,34,24,29,30,28,28],
[24,16,16,0,23,25,24,25,23],
[26,25,26,27,0,25,30,29,31],
[20,20,21,25,25,0,23,21,23],
[25,27,20,26,20,27,0,31,31],
[21,19,22,25,21,29,19,0,29],
[21,22,22,27,19,27,19,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,28,29,31,24,28,29],
[26,0,27,27,33,28,29,25,30],
[26,23,0,26,29,30,24,28,28],
[22,23,24,0,25,25,25,30,31],
[21,17,21,25,0,23,17,22,27],
[19,22,20,25,27,0,25,21,30],
[26,21,26,25,33,25,0,25,25],
[22,25,22,20,28,29,25,0,28],
[21,20,22,19,23,20,25,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,22,33,27,29,25,28,29],
[24,0,29,33,25,31,27,32,28],
[28,21,0,31,27,34,25,28,31],
[17,17,19,0,16,24,16,23,25],
[23,25,23,34,0,28,23,22,32],
[21,19,16,26,22,0,16,21,25],
[25,23,25,34,27,34,0,33,29],
[22,18,22,27,28,29,17,0,26],
[21,22,19,25,18,25,21,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,21,31,24,20,29,28,23],
[20,0,23,22,23,24,25,23,19],
[29,27,0,28,26,22,32,28,25],
[19,28,22,0,28,25,29,24,19],
[26,27,24,22,0,28,29,24,21],
[30,26,28,25,22,0,32,24,21],
[21,25,18,21,21,18,0,21,13],
[22,27,22,26,26,26,29,0,22],
[27,31,25,31,29,29,37,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,23,21,26,24,25,25],
[25,0,28,26,23,29,24,24,25],
[22,22,0,19,18,26,26,25,17],
[27,24,31,0,21,23,26,25,22],
[29,27,32,29,0,28,26,28,22],
[24,21,24,27,22,0,20,21,21],
[26,26,24,24,24,30,0,28,22],
[25,26,25,25,22,29,22,0,22],
[25,25,33,28,28,29,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,24,23,22,26,20,27],
[25,0,21,21,24,22,25,22,17],
[29,29,0,27,29,25,27,28,29],
[26,29,23,0,27,28,34,22,25],
[27,26,21,23,0,21,33,21,20],
[28,28,25,22,29,0,25,25,28],
[24,25,23,16,17,25,0,21,22],
[30,28,22,28,29,25,29,0,26],
[23,33,21,25,30,22,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,17,16,17,17,16,16,10],
[43,0,25,28,28,22,26,31,22],
[33,25,0,23,15,13,20,23,10],
[34,22,27,0,22,18,19,26,15],
[33,22,35,28,0,22,28,31,12],
[33,28,37,32,28,0,27,25,26],
[34,24,30,31,22,23,0,28,22],
[34,19,27,24,19,25,22,0,20],
[40,28,40,35,38,24,28,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,31,35,23,30,25,24],
[24,0,24,27,34,26,25,30,30],
[24,26,0,31,27,18,25,21,27],
[19,23,19,0,32,15,20,29,29],
[15,16,23,18,0,16,19,21,24],
[27,24,32,35,34,0,34,26,33],
[20,25,25,30,31,16,0,24,24],
[25,20,29,21,29,24,26,0,36],
[26,20,23,21,26,17,26,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,23,25,28,31,32,34],
[24,0,33,29,25,30,27,30,26],
[24,17,0,25,22,20,25,29,26],
[27,21,25,0,25,21,21,26,30],
[25,25,28,25,0,23,35,28,29],
[22,20,30,29,27,0,27,28,30],
[19,23,25,29,15,23,0,24,28],
[18,20,21,24,22,22,26,0,23],
[16,24,24,20,21,20,22,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,29,34,30,23,29,27],
[24,0,16,16,30,22,24,17,14],
[22,34,0,19,34,39,21,27,24],
[21,34,31,0,28,29,24,26,23],
[16,20,16,22,0,29,22,22,18],
[20,28,11,21,21,0,17,18,14],
[27,26,29,26,28,33,0,23,23],
[21,33,23,24,28,32,27,0,28],
[23,36,26,27,32,36,27,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,18,25,25,22,25,23,25],
[34,0,28,31,28,28,29,25,21],
[32,22,0,30,23,30,31,33,25],
[25,19,20,0,25,30,26,28,18],
[25,22,27,25,0,22,28,27,24],
[28,22,20,20,28,0,29,30,23],
[25,21,19,24,22,21,0,29,21],
[27,25,17,22,23,20,21,0,16],
[25,29,25,32,26,27,29,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,17,20,22,33,27,24],
[27,0,28,27,26,25,27,27,34],
[27,22,0,26,15,26,22,27,30],
[33,23,24,0,13,27,20,30,29],
[30,24,35,37,0,30,27,28,40],
[28,25,24,23,20,0,25,29,29],
[17,23,28,30,23,25,0,30,31],
[23,23,23,20,22,21,20,0,31],
[26,16,20,21,10,21,19,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,32,21,26,29,30,27,26],
[27,0,32,20,32,29,33,29,32],
[18,18,0,23,23,29,27,28,29],
[29,30,27,0,24,25,31,30,33],
[24,18,27,26,0,27,31,32,34],
[21,21,21,25,23,0,28,30,29],
[20,17,23,19,19,22,0,23,20],
[23,21,22,20,18,20,27,0,27],
[24,18,21,17,16,21,30,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,26,26,27,21,22,27],
[26,0,28,20,23,23,19,24,24],
[22,22,0,23,28,19,18,22,15],
[24,30,27,0,32,23,28,20,21],
[24,27,22,18,0,19,20,26,23],
[23,27,31,27,31,0,22,28,25],
[29,31,32,22,30,28,0,27,25],
[28,26,28,30,24,22,23,0,27],
[23,26,35,29,27,25,25,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,17,31,18,20,23,19,17],
[15,0,11,23,13,12,17,19,18],
[33,39,0,30,23,23,20,34,26],
[19,27,20,0,19,21,12,20,13],
[32,37,27,31,0,26,18,27,31],
[30,38,27,29,24,0,22,30,26],
[27,33,30,38,32,28,0,30,24],
[31,31,16,30,23,20,20,0,20],
[33,32,24,37,19,24,26,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,27,20,18,22,20,23,18],
[28,0,22,16,21,27,24,28,22],
[23,28,0,20,20,31,25,28,23],
[30,34,30,0,25,33,30,35,28],
[32,29,30,25,0,32,25,30,25],
[28,23,19,17,18,0,23,25,17],
[30,26,25,20,25,27,0,29,22],
[27,22,22,15,20,25,21,0,22],
[32,28,27,22,25,33,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,25,27,34,22,24,24,27],
[27,0,24,28,32,22,23,24,25],
[25,26,0,24,36,27,29,20,27],
[23,22,26,0,29,21,25,26,31],
[16,18,14,21,0,18,19,16,20],
[28,28,23,29,32,0,31,22,28],
[26,27,21,25,31,19,0,23,25],
[26,26,30,24,34,28,27,0,29],
[23,25,23,19,30,22,25,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,22,29,23,23,27,29,24],
[25,0,27,25,25,25,25,27,24],
[28,23,0,25,23,28,28,30,24],
[21,25,25,0,21,20,28,27,19],
[27,25,27,29,0,25,27,27,25],
[27,25,22,30,25,0,34,35,30],
[23,25,22,22,23,16,0,31,21],
[21,23,20,23,23,15,19,0,21],
[26,26,26,31,25,20,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,27,26,30,24,29,31,27],
[16,0,21,24,27,25,25,32,28],
[23,29,0,21,31,25,23,33,26],
[24,26,29,0,30,31,27,29,33],
[20,23,19,20,0,24,18,22,24],
[26,25,25,19,26,0,22,25,27],
[21,25,27,23,32,28,0,27,29],
[19,18,17,21,28,25,23,0,23],
[23,22,24,17,26,23,21,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,32,19,30,21,22,28,24],
[21,0,28,20,28,24,22,23,18],
[18,22,0,18,19,22,16,12,17],
[31,30,32,0,31,27,23,29,20],
[20,22,31,19,0,23,14,18,19],
[29,26,28,23,27,0,26,18,25],
[28,28,34,27,36,24,0,26,24],
[22,27,38,21,32,32,24,0,21],
[26,32,33,30,31,25,26,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,22,28,34,23,26,28,28],
[24,0,25,29,30,24,23,33,23],
[28,25,0,34,36,23,22,37,22],
[22,21,16,0,29,24,18,28,21],
[16,20,14,21,0,18,12,24,10],
[27,26,27,26,32,0,20,30,22],
[24,27,28,32,38,30,0,39,28],
[22,17,13,22,26,20,11,0,21],
[22,27,28,29,40,28,22,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,21,23,23,24,29,23],
[28,0,25,29,32,32,29,35,23],
[29,25,0,26,28,23,24,29,29],
[29,21,24,0,24,22,27,27,23],
[27,18,22,26,0,24,27,28,28],
[27,18,27,28,26,0,26,30,30],
[26,21,26,23,23,24,0,35,31],
[21,15,21,23,22,20,15,0,18],
[27,27,21,27,22,20,19,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,26,21,10,27,41,16,22],
[30,0,16,25,16,21,25,16,18],
[24,34,0,25,23,23,25,23,31],
[29,25,25,0,27,28,41,21,33],
[40,34,27,23,0,25,39,31,33],
[23,29,27,22,25,0,22,29,33],
[9,25,25,9,11,28,0,17,19],
[34,34,27,29,19,21,33,0,16],
[28,32,19,17,17,17,31,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,19,28,24,26,20,22,24],
[23,0,28,35,26,29,26,34,25],
[31,22,0,27,18,23,25,29,28],
[22,15,23,0,24,29,19,24,21],
[26,24,32,26,0,32,22,29,29],
[24,21,27,21,18,0,20,23,27],
[30,24,25,31,28,30,0,26,26],
[28,16,21,26,21,27,24,0,21],
[26,25,22,29,21,23,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,25,22,21,18,26,23,24],
[27,0,25,35,27,27,30,34,39],
[25,25,0,35,18,26,32,26,30],
[28,15,15,0,20,21,29,27,27],
[29,23,32,30,0,16,32,28,29],
[32,23,24,29,34,0,31,37,34],
[24,20,18,21,18,19,0,24,26],
[27,16,24,23,22,13,26,0,25],
[26,11,20,23,21,16,24,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,26,19,23,24,24,21,27],
[28,0,27,22,21,26,23,29,24],
[24,23,0,21,20,26,23,22,25],
[31,28,29,0,24,31,24,31,29],
[27,29,30,26,0,31,25,29,25],
[26,24,24,19,19,0,23,26,25],
[26,27,27,26,25,27,0,22,25],
[29,21,28,19,21,24,28,0,23],
[23,26,25,21,25,25,25,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,25,26,26,28,26,27,21],
[23,0,25,22,20,19,24,26,22],
[25,25,0,24,22,19,22,21,22],
[24,28,26,0,32,25,22,26,25],
[24,30,28,18,0,22,16,22,24],
[22,31,31,25,28,0,28,29,26],
[24,26,28,28,34,22,0,25,22],
[23,24,29,24,28,21,25,0,22],
[29,28,28,25,26,24,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,35,34,25,35,36,40,27],
[20,0,35,16,20,32,22,38,23],
[15,15,0,14,13,18,21,36,16],
[16,34,36,0,25,25,34,39,25],
[25,30,37,25,0,32,32,38,18],
[15,18,32,25,18,0,25,30,13],
[14,28,29,16,18,25,0,27,14],
[10,12,14,11,12,20,23,0,11],
[23,27,34,25,32,37,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,25,23,25,23,29,24],
[24,0,26,24,25,23,24,24,20],
[22,24,0,26,25,23,22,23,24],
[25,26,24,0,24,24,25,21,29],
[27,25,25,26,0,22,20,25,23],
[25,27,27,26,28,0,28,22,25],
[27,26,28,25,30,22,0,21,25],
[21,26,27,29,25,28,29,0,26],
[26,30,26,21,27,25,25,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,22,27,31,27,23,21,17],
[23,0,18,23,24,29,20,25,13],
[28,32,0,33,32,30,29,26,25],
[23,27,17,0,27,27,22,27,19],
[19,26,18,23,0,29,18,20,14],
[23,21,20,23,21,0,20,28,13],
[27,30,21,28,32,30,0,27,24],
[29,25,24,23,30,22,23,0,15],
[33,37,25,31,36,37,26,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,24,25,28,28,41,30,31],
[27,0,23,24,23,22,28,16,25],
[26,27,0,27,25,27,36,29,28],
[25,26,23,0,29,24,34,20,26],
[22,27,25,21,0,25,33,19,23],
[22,28,23,26,25,0,37,23,25],
[9,22,14,16,17,13,0,13,15],
[20,34,21,30,31,27,37,0,22],
[19,25,22,24,27,25,35,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,20,28,21,30,36,26,25],
[27,0,23,24,21,30,38,28,27],
[30,27,0,30,22,29,35,28,22],
[22,26,20,0,23,28,32,23,23],
[29,29,28,27,0,30,34,22,22],
[20,20,21,22,20,0,28,23,18],
[14,12,15,18,16,22,0,13,8],
[24,22,22,27,28,27,37,0,23],
[25,23,28,27,28,32,42,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,22,27,24,25,19,26],
[25,0,25,21,22,24,21,18,21],
[27,25,0,18,27,21,20,17,27],
[28,29,32,0,27,29,22,27,30],
[23,28,23,23,0,33,24,24,24],
[26,26,29,21,17,0,17,24,20],
[25,29,30,28,26,33,0,25,29],
[31,32,33,23,26,26,25,0,29],
[24,29,23,20,26,30,21,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,31,19,37,38,26,20,30],
[30,0,24,27,30,31,27,28,44],
[19,26,0,19,30,19,26,26,30],
[31,23,31,0,43,25,25,26,30],
[13,20,20,7,0,14,32,20,30],
[12,19,31,25,36,0,25,19,29],
[24,23,24,25,18,25,0,25,25],
[30,22,24,24,30,31,25,0,37],
[20,6,20,20,20,21,25,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,18,24,17,21,23,26,18],
[26,0,22,22,25,21,26,31,22],
[32,28,0,26,27,25,26,30,22],
[26,28,24,0,25,26,31,31,22],
[33,25,23,25,0,22,27,27,21],
[29,29,25,24,28,0,28,28,26],
[27,24,24,19,23,22,0,25,22],
[24,19,20,19,23,22,25,0,22],
[32,28,28,28,29,24,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,17,21,22,14,19,20,16],
[34,0,26,28,23,24,27,34,27],
[33,24,0,27,25,24,27,27,23],
[29,22,23,0,25,25,21,37,23],
[28,27,25,25,0,22,31,26,20],
[36,26,26,25,28,0,27,31,29],
[31,23,23,29,19,23,0,29,20],
[30,16,23,13,24,19,21,0,19],
[34,23,27,27,30,21,30,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,24,20,15,22,15,17,20],
[32,0,31,23,30,30,26,26,24],
[26,19,0,17,17,20,17,16,17],
[30,27,33,0,24,29,28,25,27],
[35,20,33,26,0,35,25,22,28],
[28,20,30,21,15,0,17,19,24],
[35,24,33,22,25,33,0,22,28],
[33,24,34,25,28,31,28,0,30],
[30,26,33,23,22,26,22,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,25,17,24,19,9,16,26],
[40,0,33,26,24,19,17,32,26],
[25,17,0,17,24,26,17,24,25],
[33,24,33,0,25,35,25,33,24],
[26,26,26,25,0,19,27,26,26],
[31,31,24,15,31,0,16,31,31],
[41,33,33,25,23,34,0,23,41],
[34,18,26,17,24,19,27,0,26],
[24,24,25,26,24,19,9,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,24,26,31,22,26,22,23],
[31,0,26,31,32,26,26,24,28],
[26,24,0,26,29,31,31,23,24],
[24,19,24,0,24,24,27,21,21],
[19,18,21,26,0,22,20,20,22],
[28,24,19,26,28,0,31,24,22],
[24,24,19,23,30,19,0,20,22],
[28,26,27,29,30,26,30,0,22],
[27,22,26,29,28,28,28,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,17,29,25,26,18,29,20],
[18,0,22,22,18,14,19,22,29],
[33,28,0,32,22,35,28,39,33],
[21,28,18,0,19,17,22,18,24],
[25,32,28,31,0,22,24,27,33],
[24,36,15,33,28,0,20,26,27],
[32,31,22,28,26,30,0,34,37],
[21,28,11,32,23,24,16,0,22],
[30,21,17,26,17,23,13,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,28,30,27,25,25,23,29],
[20,0,27,20,18,18,25,23,27],
[22,23,0,22,20,20,28,24,26],
[20,30,28,0,25,22,26,27,25],
[23,32,30,25,0,27,25,26,30],
[25,32,30,28,23,0,26,24,29],
[25,25,22,24,25,24,0,23,23],
[27,27,26,23,24,26,27,0,24],
[21,23,24,25,20,21,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,28,26,26,30,19,27],
[22,0,19,24,21,28,30,18,24],
[24,31,0,24,25,25,26,25,22],
[22,26,26,0,25,26,30,23,24],
[24,29,25,25,0,31,26,19,21],
[24,22,25,24,19,0,25,17,19],
[20,20,24,20,24,25,0,16,21],
[31,32,25,27,31,33,34,0,24],
[23,26,28,26,29,31,29,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,23,25,32,24,26,32,23],
[22,0,22,19,26,30,27,29,25],
[27,28,0,25,27,30,31,29,25],
[25,31,25,0,26,31,28,32,30],
[18,24,23,24,0,26,24,32,24],
[26,20,20,19,24,0,32,28,26],
[24,23,19,22,26,18,0,31,26],
[18,21,21,18,18,22,19,0,25],
[27,25,25,20,26,24,24,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,27,22,21,18,18,17,19],
[29,0,22,18,20,16,20,13,17],
[23,28,0,23,25,23,21,18,18],
[28,32,27,0,30,25,28,23,27],
[29,30,25,20,0,22,23,21,21],
[32,34,27,25,28,0,32,24,20],
[32,30,29,22,27,18,0,21,19],
[33,37,32,27,29,26,29,0,24],
[31,33,32,23,29,30,31,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,24,35,24,44,19,31],
[10,0,25,25,19,19,27,13,20],
[15,25,0,15,21,25,19,17,14],
[26,25,35,0,29,29,30,31,25],
[15,31,29,21,0,9,15,15,10],
[26,31,25,21,41,0,29,20,25],
[6,23,31,20,35,21,0,20,16],
[31,37,33,19,35,30,30,0,26],
[19,30,36,25,40,25,34,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,16,34,18,28,26,18,29],
[27,0,27,37,27,33,29,27,25],
[34,23,0,33,20,30,26,23,27],
[16,13,17,0,20,25,17,18,18],
[32,23,30,30,0,37,26,29,26],
[22,17,20,25,13,0,17,12,21],
[24,21,24,33,24,33,0,18,25],
[32,23,27,32,21,38,32,0,32],
[21,25,23,32,24,29,25,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,25,27,22,20,27,26,22],
[20,0,22,27,27,22,28,22,27],
[25,28,0,29,26,23,29,25,30],
[23,23,21,0,24,19,23,17,23],
[28,23,24,26,0,24,25,22,24],
[30,28,27,31,26,0,29,24,32],
[23,22,21,27,25,21,0,21,23],
[24,28,25,33,28,26,29,0,24],
[28,23,20,27,26,18,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,27,26,25,25,25,28,26],
[24,0,23,24,18,27,23,26,21],
[23,27,0,30,24,28,26,30,26],
[24,26,20,0,23,25,20,26,27],
[25,32,26,27,0,28,24,30,27],
[25,23,22,25,22,0,21,21,20],
[25,27,24,30,26,29,0,26,27],
[22,24,20,24,20,29,24,0,23],
[24,29,24,23,23,30,23,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,26,20,30,19,20,22,20],
[29,0,25,26,25,30,26,23,23],
[24,25,0,19,30,23,24,27,28],
[30,24,31,0,31,25,27,27,25],
[20,25,20,19,0,22,17,18,15],
[31,20,27,25,28,0,23,23,24],
[30,24,26,23,33,27,0,21,27],
[28,27,23,23,32,27,29,0,27],
[30,27,22,25,35,26,23,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,18,15,22,23,24,28,20],
[22,0,20,15,20,15,11,12,12],
[32,30,0,20,22,25,18,23,18],
[35,35,30,0,30,26,27,25,22],
[28,30,28,20,0,26,27,17,20],
[27,35,25,24,24,0,30,29,21],
[26,39,32,23,23,20,0,21,24],
[22,38,27,25,33,21,29,0,25],
[30,38,32,28,30,29,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,29,26,24,23,28,25,29],
[29,0,32,25,25,26,28,28,29],
[21,18,0,22,18,22,27,20,27],
[24,25,28,0,23,25,29,26,26],
[26,25,32,27,0,28,32,27,30],
[27,24,28,25,22,0,30,24,29],
[22,22,23,21,18,20,0,18,22],
[25,22,30,24,23,26,32,0,31],
[21,21,23,24,20,21,28,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,16,24,23,20,6,19,22],
[26,0,10,16,19,13,17,19,16],
[34,40,0,33,26,27,25,17,28],
[26,34,17,0,30,22,24,20,26],
[27,31,24,20,0,28,24,26,26],
[30,37,23,28,22,0,19,20,23],
[44,33,25,26,26,31,0,29,25],
[31,31,33,30,24,30,21,0,22],
[28,34,22,24,24,27,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,24,18,17,26,23,22,26],
[27,0,20,21,23,27,26,21,24],
[26,30,0,25,25,30,28,26,21],
[32,29,25,0,23,31,31,27,32],
[33,27,25,27,0,25,30,23,29],
[24,23,20,19,25,0,24,20,26],
[27,24,22,19,20,26,0,20,24],
[28,29,24,23,27,30,30,0,33],
[24,26,29,18,21,24,26,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,17,24,21,20,27,25,19],
[25,0,24,21,23,23,33,27,26],
[33,26,0,26,22,33,35,27,27],
[26,29,24,0,21,25,33,29,26],
[29,27,28,29,0,26,32,29,25],
[30,27,17,25,24,0,31,27,28],
[23,17,15,17,18,19,0,19,21],
[25,23,23,21,21,23,31,0,21],
[31,24,23,24,25,22,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,27,24,14,19,33,21,23],
[35,0,27,31,25,30,22,19,30],
[23,23,0,22,16,19,23,23,22],
[26,19,28,0,23,19,32,20,17],
[36,25,34,27,0,24,32,25,29],
[31,20,31,31,26,0,32,25,26],
[17,28,27,18,18,18,0,24,18],
[29,31,27,30,25,25,26,0,25],
[27,20,28,33,21,24,32,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,26,31,31,20,28,20],
[26,0,16,26,23,22,25,29,14],
[25,34,0,21,26,30,22,18,22],
[24,24,29,0,25,17,28,17,28],
[19,27,24,25,0,17,17,24,23],
[19,28,20,33,33,0,23,22,23],
[30,25,28,22,33,27,0,22,24],
[22,21,32,33,26,28,28,0,23],
[30,36,28,22,27,27,26,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,30,21,29,26,24,26],
[25,0,20,25,20,24,26,24,23],
[26,30,0,32,25,28,31,24,23],
[20,25,18,0,16,22,28,19,18],
[29,30,25,34,0,25,30,30,26],
[21,26,22,28,25,0,29,25,20],
[24,24,19,22,20,21,0,22,20],
[26,26,26,31,20,25,28,0,17],
[24,27,27,32,24,30,30,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,25,27,24,24,22,25,25],
[27,0,24,27,21,21,24,21,26],
[25,26,0,29,22,29,19,25,22],
[23,23,21,0,20,26,20,22,25],
[26,29,28,30,0,27,24,27,26],
[26,29,21,24,23,0,21,24,22],
[28,26,31,30,26,29,0,22,25],
[25,29,25,28,23,26,28,0,31],
[25,24,28,25,24,28,25,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,25,28,22,20,25,23],
[28,0,23,25,28,21,26,22,21],
[29,27,0,25,23,22,19,25,26],
[25,25,25,0,27,19,20,26,19],
[22,22,27,23,0,21,17,17,24],
[28,29,28,31,29,0,21,28,28],
[30,24,31,30,33,29,0,29,29],
[25,28,25,24,33,22,21,0,27],
[27,29,24,31,26,22,21,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,19,24,21,24,28,29],
[24,0,23,21,25,20,27,32,25],
[27,27,0,26,23,29,29,33,24],
[31,29,24,0,24,29,31,32,28],
[26,25,27,26,0,26,33,35,30],
[29,30,21,21,24,0,29,35,26],
[26,23,21,19,17,21,0,30,25],
[22,18,17,18,15,15,20,0,19],
[21,25,26,22,20,24,25,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,23,31,23,24,30,22,23],
[26,0,20,29,20,22,29,26,27],
[27,30,0,31,25,28,31,28,27],
[19,21,19,0,22,19,30,20,23],
[27,30,25,28,0,26,31,30,27],
[26,28,22,31,24,0,30,25,30],
[20,21,19,20,19,20,0,24,22],
[28,24,22,30,20,25,26,0,25],
[27,23,23,27,23,20,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,22,25,19,26,27,30,29],
[24,0,25,31,24,24,19,22,25],
[28,25,0,26,24,24,27,28,30],
[25,19,24,0,22,22,26,27,21],
[31,26,26,28,0,25,32,28,26],
[24,26,26,28,25,0,23,28,24],
[23,31,23,24,18,27,0,29,30],
[20,28,22,23,22,22,21,0,24],
[21,25,20,29,24,26,20,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,19,26,29,27,23,30,29],
[33,0,22,21,22,20,32,33,33],
[31,28,0,31,29,22,28,30,32],
[24,29,19,0,32,32,31,32,26],
[21,28,21,18,0,24,25,29,25],
[23,30,28,18,26,0,29,26,22],
[27,18,22,19,25,21,0,34,23],
[20,17,20,18,21,24,16,0,22],
[21,17,18,24,25,28,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,25,50,25,25,50,50,25],
[0,0,0,25,0,25,25,25,25],
[25,50,0,50,0,25,50,50,25],
[0,25,0,0,0,25,25,25,25],
[25,50,50,50,0,50,50,50,25],
[25,25,25,25,0,0,50,50,25],
[0,25,0,25,0,0,0,25,25],
[0,25,0,25,0,0,25,0,25],
[25,25,25,25,25,25,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,33,28,33,25,30,29,28],
[23,0,28,30,26,22,27,32,26],
[17,22,0,27,25,28,27,25,30],
[22,20,23,0,25,21,22,27,24],
[17,24,25,25,0,24,28,26,28],
[25,28,22,29,26,0,28,34,29],
[20,23,23,28,22,22,0,33,26],
[21,18,25,23,24,16,17,0,20],
[22,24,20,26,22,21,24,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,31,25,26,26,30,25,28],
[26,0,31,26,23,30,26,29,26],
[19,19,0,25,18,16,22,25,20],
[25,24,25,0,25,24,23,24,24],
[24,27,32,25,0,28,28,23,25],
[24,20,34,26,22,0,24,22,26],
[20,24,28,27,22,26,0,27,23],
[25,21,25,26,27,28,23,0,23],
[22,24,30,26,25,24,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,0,14,14,24,17,14,8],
[34,0,27,24,24,24,34,21,27],
[50,23,0,41,30,34,40,31,33],
[36,26,9,0,24,34,34,17,27],
[36,26,20,26,0,26,34,26,27],
[26,26,16,16,24,0,34,16,24],
[33,16,10,16,16,16,0,16,16],
[36,29,19,33,24,34,34,0,27],
[42,23,17,23,23,26,34,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,26,24,22,26,32,30,26],
[23,0,26,19,25,25,29,25,25],
[24,24,0,26,24,20,34,28,27],
[26,31,24,0,23,25,33,25,23],
[28,25,26,27,0,29,32,31,25],
[24,25,30,25,21,0,24,32,25],
[18,21,16,17,18,26,0,23,23],
[20,25,22,25,19,18,27,0,22],
[24,25,23,27,25,25,27,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,26,27,39,28,24,28,32],
[17,0,23,26,26,24,24,21,24],
[24,27,0,30,37,32,26,28,31],
[23,24,20,0,37,27,19,26,26],
[11,24,13,13,0,22,18,24,20],
[22,26,18,23,28,0,19,24,21],
[26,26,24,31,32,31,0,26,23],
[22,29,22,24,26,26,24,0,26],
[18,26,19,24,30,29,27,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,31,31,37,23,33,23,32],
[20,0,28,22,26,21,25,20,21],
[19,22,0,26,30,18,25,16,25],
[19,28,24,0,30,23,29,20,30],
[13,24,20,20,0,14,21,15,22],
[27,29,32,27,36,0,31,25,32],
[17,25,25,21,29,19,0,15,25],
[27,30,34,30,35,25,35,0,34],
[18,29,25,20,28,18,25,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,30,26,29,27,28,11,27],
[28,0,25,31,27,24,27,20,20],
[20,25,0,17,12,16,22,8,12],
[24,19,33,0,18,20,27,18,14],
[21,23,38,32,0,25,37,14,23],
[23,26,34,30,25,0,33,28,28],
[22,23,28,23,13,17,0,9,18],
[39,30,42,32,36,22,41,0,27],
[23,30,38,36,27,22,32,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,23,22,17,16,18,19],
[25,0,19,27,27,27,21,31,29],
[29,31,0,28,26,23,25,24,25],
[27,23,22,0,26,28,19,25,29],
[28,23,24,24,0,21,26,27,22],
[33,23,27,22,29,0,23,26,24],
[34,29,25,31,24,27,0,30,31],
[32,19,26,25,23,24,20,0,26],
[31,21,25,21,28,26,19,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,23,30,25,27,26,32,27],
[22,0,21,22,28,18,25,25,20],
[27,29,0,28,25,28,30,33,29],
[20,28,22,0,23,26,27,27,25],
[25,22,25,27,0,23,25,27,26],
[23,32,22,24,27,0,31,28,24],
[24,25,20,23,25,19,0,26,16],
[18,25,17,23,23,22,24,0,20],
[23,30,21,25,24,26,34,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,19,19,29,26,23,26],
[25,0,32,20,24,28,30,25,34],
[20,18,0,16,20,21,22,24,26],
[31,30,34,0,24,34,32,28,32],
[31,26,30,26,0,30,30,25,30],
[21,22,29,16,20,0,28,19,29],
[24,20,28,18,20,22,0,18,25],
[27,25,26,22,25,31,32,0,28],
[24,16,24,18,20,21,25,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,31,29,29,26,25,20,25],
[27,0,25,26,24,22,22,21,24],
[19,25,0,26,23,23,22,22,28],
[21,24,24,0,17,19,23,17,24],
[21,26,27,33,0,28,26,21,28],
[24,28,27,31,22,0,27,25,23],
[25,28,28,27,24,23,0,16,26],
[30,29,28,33,29,25,34,0,27],
[25,26,22,26,22,27,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,22,32,21,22,28,24],
[25,0,27,23,31,26,27,28,31],
[27,23,0,16,31,27,24,24,30],
[28,27,34,0,35,26,24,23,29],
[18,19,19,15,0,19,22,15,23],
[29,24,23,24,31,0,24,22,26],
[28,23,26,26,28,26,0,29,32],
[22,22,26,27,35,28,21,0,28],
[26,19,20,21,27,24,18,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,27,18,22,20,20,24],
[28,0,35,30,27,26,23,26,30],
[27,15,0,25,18,27,19,21,28],
[23,20,25,0,23,17,24,21,31],
[32,23,32,27,0,27,23,25,33],
[28,24,23,33,23,0,29,22,25],
[30,27,31,26,27,21,0,27,27],
[30,24,29,29,25,28,23,0,24],
[26,20,22,19,17,25,23,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,29,21,24,29,35,28,26],
[16,0,21,16,26,31,31,17,19],
[21,29,0,15,18,21,35,14,25],
[29,34,35,0,23,29,35,27,30],
[26,24,32,27,0,30,29,32,26],
[21,19,29,21,20,0,33,25,27],
[15,19,15,15,21,17,0,13,17],
[22,33,36,23,18,25,37,0,21],
[24,31,25,20,24,23,33,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,20,23,24,22,26,26,19],
[26,0,20,26,19,21,21,25,20],
[30,30,0,25,25,29,26,30,27],
[27,24,25,0,25,21,22,26,21],
[26,31,25,25,0,24,30,23,24],
[28,29,21,29,26,0,26,26,27],
[24,29,24,28,20,24,0,25,23],
[24,25,20,24,27,24,25,0,21],
[31,30,23,29,26,23,27,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,21,22,23,19,19,25,22],
[30,0,26,27,32,22,28,30,26],
[29,24,0,28,20,23,29,25,25],
[28,23,22,0,25,19,24,22,19],
[27,18,30,25,0,27,28,25,22],
[31,28,27,31,23,0,30,26,25],
[31,22,21,26,22,20,0,30,22],
[25,20,25,28,25,24,20,0,25],
[28,24,25,31,28,25,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,29,26,24,23,27,21,25],
[29,0,27,24,22,23,27,25,29],
[21,23,0,25,21,22,21,19,17],
[24,26,25,0,25,30,27,21,27],
[26,28,29,25,0,26,26,18,29],
[27,27,28,20,24,0,24,20,27],
[23,23,29,23,24,26,0,20,26],
[29,25,31,29,32,30,30,0,29],
[25,21,33,23,21,23,24,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,22,25,19,16,24,27,22],
[27,0,27,26,23,24,28,37,33],
[28,23,0,27,24,24,28,34,27],
[25,24,23,0,20,24,23,27,31],
[31,27,26,30,0,25,24,31,30],
[34,26,26,26,25,0,28,27,28],
[26,22,22,27,26,22,0,19,26],
[23,13,16,23,19,23,31,0,27],
[28,17,23,19,20,22,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,25,18,29,22,37,19,28],
[10,0,15,14,8,11,27,15,23],
[25,35,0,22,17,23,42,27,35],
[32,36,28,0,17,29,38,27,24],
[21,42,33,33,0,30,37,29,30],
[28,39,27,21,20,0,41,33,34],
[13,23,8,12,13,9,0,13,15],
[31,35,23,23,21,17,37,0,28],
[22,27,15,26,20,16,35,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,22,30,27,25,26,19],
[25,0,25,25,20,24,21,24,23],
[22,25,0,24,29,29,27,30,25],
[28,25,26,0,32,29,20,33,27],
[20,30,21,18,0,25,26,23,22],
[23,26,21,21,25,0,22,26,27],
[25,29,23,30,24,28,0,23,21],
[24,26,20,17,27,24,27,0,21],
[31,27,25,23,28,23,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,36,29,22,26,30,31,32],
[20,0,24,22,24,26,37,23,27],
[14,26,0,29,18,24,26,20,33],
[21,28,21,0,30,24,34,27,28],
[28,26,32,20,0,21,34,24,33],
[24,24,26,26,29,0,41,34,31],
[20,13,24,16,16,9,0,17,27],
[19,27,30,23,26,16,33,0,30],
[18,23,17,22,17,19,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,22,22,14,31,29,18,24],
[37,0,34,28,19,43,35,39,27],
[28,16,0,6,17,30,22,17,28],
[28,22,44,0,29,43,40,34,22],
[36,31,33,21,0,43,41,32,37],
[19,7,20,7,7,0,22,19,13],
[21,15,28,10,9,28,0,27,22],
[32,11,33,16,18,31,23,0,17],
[26,23,22,28,13,37,28,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,21,26,22,22,18,20],
[27,0,26,31,30,25,30,25,26],
[27,24,0,18,21,21,23,24,23],
[29,19,32,0,31,23,28,23,24],
[24,20,29,19,0,24,23,16,18],
[28,25,29,27,26,0,28,27,23],
[28,20,27,22,27,22,0,22,21],
[32,25,26,27,34,23,28,0,26],
[30,24,27,26,32,27,29,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,22,31,17,19,23,16,17],
[37,0,27,32,27,21,27,27,27],
[28,23,0,23,25,18,22,18,14],
[19,18,27,0,21,17,19,20,14],
[33,23,25,29,0,23,24,25,25],
[31,29,32,33,27,0,24,23,26],
[27,23,28,31,26,26,0,24,20],
[34,23,32,30,25,27,26,0,30],
[33,23,36,36,25,24,30,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,27,17,26,30,29,18,27],
[22,0,26,24,26,31,28,20,28],
[23,24,0,20,20,26,28,22,36],
[33,26,30,0,28,36,36,21,36],
[24,24,30,22,0,32,34,29,34],
[20,19,24,14,18,0,22,14,23],
[21,22,22,14,16,28,0,18,26],
[32,30,28,29,21,36,32,0,39],
[23,22,14,14,16,27,24,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,20,27,26,21,22,27,24],
[27,0,25,29,26,28,25,27,24],
[30,25,0,26,31,25,22,25,29],
[23,21,24,0,29,26,24,27,24],
[24,24,19,21,0,23,22,20,20],
[29,22,25,24,27,0,23,25,22],
[28,25,28,26,28,27,0,27,25],
[23,23,25,23,30,25,23,0,22],
[26,26,21,26,30,28,25,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,19,31,30,29,24,27,25],
[26,0,26,31,26,28,25,30,25],
[31,24,0,32,27,24,29,29,33],
[19,19,18,0,29,20,21,27,21],
[20,24,23,21,0,18,26,23,25],
[21,22,26,30,32,0,29,29,30],
[26,25,21,29,24,21,0,30,26],
[23,20,21,23,27,21,20,0,22],
[25,25,17,29,25,20,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,26,29,25,25,29,25],
[25,0,23,23,25,22,25,27,28],
[22,27,0,27,25,22,25,27,27],
[24,27,23,0,28,27,23,29,27],
[21,25,25,22,0,24,26,28,23],
[25,28,28,23,26,0,26,31,27],
[25,25,25,27,24,24,0,26,26],
[21,23,23,21,22,19,24,0,23],
[25,22,23,23,27,23,24,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,32,32,32,39,24,32],
[18,0,15,43,25,36,50,28,43],
[18,35,0,35,32,36,42,28,28],
[18,7,15,0,15,26,33,11,26],
[18,25,18,35,0,25,42,25,18],
[18,14,14,24,25,0,31,17,17],
[11,0,8,17,8,19,0,11,8],
[26,22,22,39,25,33,39,0,25],
[18,7,22,24,32,33,42,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,23,25,24,30,27,18,12],
[14,0,22,16,15,22,14,14,14],
[27,28,0,21,22,28,22,24,24],
[25,34,29,0,23,22,23,16,20],
[26,35,28,27,0,31,22,30,27],
[20,28,22,28,19,0,16,13,12],
[23,36,28,27,28,34,0,27,20],
[32,36,26,34,20,37,23,0,32],
[38,36,26,30,23,38,30,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,28,21,33,27,29,29,26],
[24,0,28,27,32,28,27,20,30],
[22,22,0,20,24,22,24,18,16],
[29,23,30,0,30,27,27,18,29],
[17,18,26,20,0,20,23,20,19],
[23,22,28,23,30,0,23,26,19],
[21,23,26,23,27,27,0,26,25],
[21,30,32,32,30,24,24,0,30],
[24,20,34,21,31,31,25,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,28,21,28,22,22,23,21],
[17,0,24,22,29,17,24,21,19],
[22,26,0,19,30,23,23,16,18],
[29,28,31,0,28,25,29,25,28],
[22,21,20,22,0,16,19,21,15],
[28,33,27,25,34,0,26,22,20],
[28,26,27,21,31,24,0,25,19],
[27,29,34,25,29,28,25,0,22],
[29,31,32,22,35,30,31,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,33,23,27,26,29,31,28],
[22,0,22,25,30,22,25,29,29],
[17,28,0,28,39,28,34,36,21],
[27,25,22,0,22,24,29,24,17],
[23,20,11,28,0,21,30,24,19],
[24,28,22,26,29,0,28,31,24],
[21,25,16,21,20,22,0,23,19],
[19,21,14,26,26,19,27,0,10],
[22,21,29,33,31,26,31,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,29,26,26,22,25,31,24],
[30,0,28,25,26,28,26,23,22],
[21,22,0,23,21,23,21,26,25],
[24,25,27,0,25,25,26,24,20],
[24,24,29,25,0,27,27,29,21],
[28,22,27,25,23,0,26,23,22],
[25,24,29,24,23,24,0,29,20],
[19,27,24,26,21,27,21,0,22],
[26,28,25,30,29,28,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,25,24,26,26,26,21,27],
[24,0,25,20,28,22,22,19,20],
[25,25,0,28,25,26,27,25,24],
[26,30,22,0,34,30,24,24,24],
[24,22,25,16,0,19,20,20,26],
[24,28,24,20,31,0,25,23,24],
[24,28,23,26,30,25,0,23,19],
[29,31,25,26,30,27,27,0,27],
[23,30,26,26,24,26,31,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,25,23,23,26,24,23,25],
[23,0,24,22,17,15,18,22,21],
[25,26,0,25,29,23,26,29,29],
[27,28,25,0,23,29,29,30,33],
[27,33,21,27,0,21,24,25,19],
[24,35,27,21,29,0,26,26,37],
[26,32,24,21,26,24,0,31,27],
[27,28,21,20,25,24,19,0,23],
[25,29,21,17,31,13,23,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,22,22,24,26,19,25,17],
[25,0,33,28,33,33,28,27,26],
[28,17,0,30,17,23,24,26,23],
[28,22,20,0,22,30,24,30,19],
[26,17,33,28,0,23,21,28,23],
[24,17,27,20,27,0,19,20,14],
[31,22,26,26,29,31,0,27,26],
[25,23,24,20,22,30,23,0,19],
[33,24,27,31,27,36,24,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,23,25,25,21,32,24,28],
[32,0,34,22,25,23,31,31,32],
[27,16,0,22,30,25,29,29,25],
[25,28,28,0,28,21,33,27,26],
[25,25,20,22,0,23,30,23,28],
[29,27,25,29,27,0,32,25,28],
[18,19,21,17,20,18,0,20,22],
[26,19,21,23,27,25,30,0,25],
[22,18,25,24,22,22,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,24,16,23,23,15,25,13],
[31,0,26,27,30,24,26,30,23],
[26,24,0,20,17,19,24,37,23],
[34,23,30,0,26,21,23,27,17],
[27,20,33,24,0,24,27,40,23],
[27,26,31,29,26,0,29,40,25],
[35,24,26,27,23,21,0,39,29],
[25,20,13,23,10,10,11,0,22],
[37,27,27,33,27,25,21,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,19,30,19,40,30,19,29],
[20,0,20,31,20,31,31,20,30],
[31,30,0,20,30,40,20,20,19],
[20,19,30,0,20,20,20,10,19],
[31,30,20,30,0,30,30,10,29],
[10,19,10,30,20,0,21,10,29],
[20,19,30,30,20,29,0,20,29],
[31,30,30,40,40,40,30,0,19],
[21,20,31,31,21,21,21,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,26,27,19,23,18,24,26],
[27,0,28,29,20,32,26,31,27],
[24,22,0,27,22,30,25,28,22],
[23,21,23,0,21,25,20,21,19],
[31,30,28,29,0,31,25,28,24],
[27,18,20,25,19,0,22,24,24],
[32,24,25,30,25,28,0,23,24],
[26,19,22,29,22,26,27,0,23],
[24,23,28,31,26,26,26,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,25,31,26,31,28,33,32],
[18,0,15,32,23,25,20,25,29],
[25,35,0,34,34,30,29,28,31],
[19,18,16,0,24,25,16,18,21],
[24,27,16,26,0,28,29,23,25],
[19,25,20,25,22,0,23,24,24],
[22,30,21,34,21,27,0,22,30],
[17,25,22,32,27,26,28,0,29],
[18,21,19,29,25,26,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,23,23,13,16,13,13,26],
[33,0,27,27,23,24,27,27,22],
[27,23,0,28,23,14,23,18,13],
[27,23,22,0,17,14,14,13,30],
[37,27,27,33,0,22,21,12,27],
[34,26,36,36,28,0,20,20,29],
[37,23,27,36,29,30,0,21,25],
[37,23,32,37,38,30,29,0,37],
[24,28,37,20,23,21,25,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,20,29,20,33,26,19],
[29,0,28,25,30,24,29,29,26],
[27,22,0,18,27,22,27,25,25],
[30,25,32,0,28,27,33,31,27],
[21,20,23,22,0,21,28,25,22],
[30,26,28,23,29,0,30,30,29],
[17,21,23,17,22,20,0,24,19],
[24,21,25,19,25,20,26,0,24],
[31,24,25,23,28,21,31,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,18,18,25,20,20,21,34],
[27,0,15,20,22,20,17,11,27],
[32,35,0,29,29,28,23,26,32],
[32,30,21,0,30,27,25,28,26],
[25,28,21,20,0,17,23,26,28],
[30,30,22,23,33,0,21,19,29],
[30,33,27,25,27,29,0,32,30],
[29,39,24,22,24,31,18,0,29],
[16,23,18,24,22,21,20,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,27,36,24,31,23,26,42],
[33,0,30,27,29,22,19,21,35],
[23,20,0,27,24,28,21,25,33],
[14,23,23,0,14,18,17,16,23],
[26,21,26,36,0,35,27,24,26],
[19,28,22,32,15,0,18,23,33],
[27,31,29,33,23,32,0,21,33],
[24,29,25,34,26,27,29,0,34],
[8,15,17,27,24,17,17,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,28,28,21,24,24,21,27],
[27,0,27,27,21,26,23,24,26],
[22,23,0,23,18,20,21,22,23],
[22,23,27,0,22,23,27,27,27],
[29,29,32,28,0,25,27,29,28],
[26,24,30,27,25,0,28,28,25],
[26,27,29,23,23,22,0,24,24],
[29,26,28,23,21,22,26,0,28],
[23,24,27,23,22,25,26,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,20,26,23,23,22,21],
[26,0,24,20,26,19,28,23,22],
[26,26,0,21,25,22,22,15,30],
[30,30,29,0,30,25,25,27,28],
[24,24,25,20,0,28,25,24,27],
[27,31,28,25,22,0,28,25,26],
[27,22,28,25,25,22,0,24,26],
[28,27,35,23,26,25,26,0,30],
[29,28,20,22,23,24,24,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,21,27,24,23,22,25],
[28,0,28,24,27,28,22,33,22],
[25,22,0,23,25,25,24,23,20],
[29,26,27,0,29,29,21,25,24],
[23,23,25,21,0,28,22,22,21],
[26,22,25,21,22,0,24,24,24],
[27,28,26,29,28,26,0,27,24],
[28,17,27,25,28,26,23,0,25],
[25,28,30,26,29,26,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,32,28,20,28,23,20,23],
[29,0,27,32,28,27,19,24,29],
[18,23,0,28,25,32,16,28,21],
[22,18,22,0,22,30,16,25,22],
[30,22,25,28,0,34,19,25,19],
[22,23,18,20,16,0,15,26,22],
[27,31,34,34,31,35,0,34,25],
[30,26,22,25,25,24,16,0,18],
[27,21,29,28,31,28,25,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,17,14,15,22,19,21,22],
[28,0,25,18,16,22,12,22,29],
[33,25,0,15,25,35,27,19,29],
[36,32,35,0,24,35,28,24,28],
[35,34,25,26,0,27,29,29,27],
[28,28,15,15,23,0,23,27,30],
[31,38,23,22,21,27,0,20,29],
[29,28,31,26,21,23,30,0,26],
[28,21,21,22,23,20,21,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,29,24,26,27,25,28,25],
[25,0,30,27,31,27,27,28,24],
[21,20,0,24,28,23,28,23,24],
[26,23,26,0,30,22,23,26,28],
[24,19,22,20,0,17,21,20,18],
[23,23,27,28,33,0,28,25,30],
[25,23,22,27,29,22,0,21,27],
[22,22,27,24,30,25,29,0,28],
[25,26,26,22,32,20,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,38,25,38,38,38,37],
[26,0,14,14,14,14,26,14,26],
[25,36,0,38,23,24,36,38,23],
[12,36,12,0,12,23,12,25,12],
[25,36,27,38,0,38,50,38,50],
[12,36,26,27,12,0,25,25,12],
[12,24,14,38,0,25,0,25,23],
[12,36,12,25,12,25,25,0,12],
[13,24,27,38,0,38,27,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,33,31,33,23,31,26,23],
[31,0,32,34,37,25,29,26,27],
[17,18,0,20,28,15,15,21,12],
[19,16,30,0,28,20,21,15,19],
[17,13,22,22,0,17,19,13,19],
[27,25,35,30,33,0,18,31,22],
[19,21,35,29,31,32,0,26,31],
[24,24,29,35,37,19,24,0,17],
[27,23,38,31,31,28,19,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,30,23,28,27,27,29,26],
[30,0,28,26,32,25,28,28,28],
[20,22,0,21,23,16,21,21,22],
[27,24,29,0,28,29,29,26,27],
[22,18,27,22,0,22,21,22,24],
[23,25,34,21,28,0,24,21,24],
[23,22,29,21,29,26,0,20,25],
[21,22,29,24,28,29,30,0,27],
[24,22,28,23,26,26,25,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,21,22,29,26,23,29,24],
[32,0,25,26,32,29,25,35,30],
[29,25,0,28,29,27,26,32,26],
[28,24,22,0,26,26,21,32,30],
[21,18,21,24,0,30,25,25,28],
[24,21,23,24,20,0,24,29,26],
[27,25,24,29,25,26,0,32,28],
[21,15,18,18,25,21,18,0,19],
[26,20,24,20,22,24,22,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,29,30,25,15,21,25,21],
[19,0,19,21,32,11,16,19,17],
[21,31,0,21,33,12,19,24,22],
[20,29,29,0,29,14,25,18,19],
[25,18,17,21,0,8,21,8,9],
[35,39,38,36,42,0,25,38,31],
[29,34,31,25,29,25,0,28,30],
[25,31,26,32,42,12,22,0,23],
[29,33,28,31,41,19,20,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,32,25,31,27,23,38,29],
[16,0,25,21,27,15,13,24,19],
[18,25,0,20,22,31,25,14,17],
[25,29,30,0,30,20,23,34,19],
[19,23,28,20,0,22,18,32,23],
[23,35,19,30,28,0,23,25,22],
[27,37,25,27,32,27,0,20,32],
[12,26,36,16,18,25,30,0,21],
[21,31,33,31,27,28,18,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,15,23,15,12,17,23,18],
[27,0,27,32,26,30,32,29,20],
[35,23,0,31,27,28,40,35,26],
[27,18,19,0,16,22,19,25,21],
[35,24,23,34,0,28,29,27,27],
[38,20,22,28,22,0,27,26,25],
[33,18,10,31,21,23,0,23,17],
[27,21,15,25,23,24,27,0,17],
[32,30,24,29,23,25,33,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,22,30,36,31,27,35,37],
[20,0,25,29,25,25,25,28,30],
[28,25,0,29,25,30,24,36,29],
[20,21,21,0,23,19,20,29,23],
[14,25,25,27,0,25,20,30,25],
[19,25,20,31,25,0,17,34,32],
[23,25,26,30,30,33,0,31,29],
[15,22,14,21,20,16,19,0,21],
[13,20,21,27,25,18,21,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,26,26,26,25,28,22,26],
[19,0,26,24,24,28,24,20,26],
[24,24,0,23,24,26,26,28,28],
[24,26,27,0,28,20,25,25,23],
[24,26,26,22,0,23,25,22,25],
[25,22,24,30,27,0,23,28,25],
[22,26,24,25,25,27,0,24,24],
[28,30,22,25,28,22,26,0,25],
[24,24,22,27,25,25,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,28,26,23,23,34,37,36],
[25,0,32,37,25,41,34,35,25],
[22,18,0,20,22,28,32,32,30],
[24,13,30,0,20,22,25,21,28],
[27,25,28,30,0,28,22,29,30],
[27,9,22,28,22,0,26,30,24],
[16,16,18,25,28,24,0,26,33],
[13,15,18,29,21,20,24,0,26],
[14,25,20,22,20,26,17,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,18,27,20,28,33,28],
[28,0,34,33,24,20,18,25,29],
[28,16,0,21,16,22,15,21,18],
[32,17,29,0,20,18,21,29,26],
[23,26,34,30,0,19,22,22,26],
[30,30,28,32,31,0,25,32,32],
[22,32,35,29,28,25,0,30,33],
[17,25,29,21,28,18,20,0,23],
[22,21,32,24,24,18,17,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,12,26,16,9,14,17,30],
[37,0,22,17,19,23,25,31,35],
[38,28,0,23,20,24,20,24,40],
[24,33,27,0,30,24,25,24,36],
[34,31,30,20,0,25,30,25,33],
[41,27,26,26,25,0,18,26,25],
[36,25,30,25,20,32,0,31,36],
[33,19,26,26,25,24,19,0,40],
[20,15,10,14,17,25,14,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,28,27,22,23,22,28],
[25,0,27,32,26,22,34,30,23],
[27,23,0,29,22,27,30,22,23],
[22,18,21,0,25,20,22,17,20],
[23,24,28,25,0,18,28,28,18],
[28,28,23,30,32,0,28,25,25],
[27,16,20,28,22,22,0,25,27],
[28,20,28,33,22,25,25,0,21],
[22,27,27,30,32,25,23,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,27,31,37,27,29,32,31],
[26,0,22,28,28,19,18,26,25],
[23,28,0,28,35,25,23,28,22],
[19,22,22,0,25,22,17,24,26],
[13,22,15,25,0,19,23,21,22],
[23,31,25,28,31,0,34,30,21],
[21,32,27,33,27,16,0,22,23],
[18,24,22,26,29,20,28,0,25],
[19,25,28,24,28,29,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,23,20,30,24,26,23,23],
[24,0,26,20,30,26,30,22,28],
[27,24,0,25,26,22,23,23,23],
[30,30,25,0,32,33,30,24,28],
[20,20,24,18,0,23,22,20,22],
[26,24,28,17,27,0,19,27,27],
[24,20,27,20,28,31,0,22,25],
[27,28,27,26,30,23,28,0,32],
[27,22,27,22,28,23,25,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,29,34,27,25,30,35,28],
[19,0,25,29,25,22,24,33,28],
[21,25,0,25,23,18,25,21,31],
[16,21,25,0,29,23,22,33,23],
[23,25,27,21,0,15,23,27,24],
[25,28,32,27,35,0,33,27,27],
[20,26,25,28,27,17,0,25,22],
[15,17,29,17,23,23,25,0,18],
[22,22,19,27,26,23,28,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,32,33,26,33,30,29,25],
[21,0,28,28,26,31,30,24,23],
[18,22,0,28,19,29,23,22,20],
[17,22,22,0,22,29,16,22,21],
[24,24,31,28,0,33,27,28,29],
[17,19,21,21,17,0,25,22,17],
[20,20,27,34,23,25,0,23,26],
[21,26,28,28,22,28,27,0,20],
[25,27,30,29,21,33,24,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,37,23,15,24,25,31,21],
[22,0,32,27,21,21,21,30,18],
[13,18,0,17,9,20,18,24,21],
[27,23,33,0,22,23,24,27,23],
[35,29,41,28,0,24,29,28,26],
[26,29,30,27,26,0,31,31,19],
[25,29,32,26,21,19,0,33,22],
[19,20,26,23,22,19,17,0,20],
[29,32,29,27,24,31,28,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,22,28,22,26,24,21,24],
[28,0,27,25,28,27,27,32,28],
[28,23,0,22,28,29,28,29,23],
[22,25,28,0,27,24,24,20,22],
[28,22,22,23,0,26,26,21,21],
[24,23,21,26,24,0,23,25,22],
[26,23,22,26,24,27,0,31,22],
[29,18,21,30,29,25,19,0,27],
[26,22,27,28,29,28,28,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,17,26,9,26,34,25,26],
[16,0,9,25,18,25,26,17,15],
[33,41,0,33,16,33,25,23,33],
[24,25,17,0,9,33,25,25,17],
[41,32,34,41,0,42,34,25,24],
[24,25,17,17,8,0,34,16,17],
[16,24,25,25,16,16,0,15,16],
[25,33,27,25,25,34,35,0,33],
[24,35,17,33,26,33,34,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,19,14,18,26,21,24,20],
[38,0,26,27,23,36,24,25,30],
[31,24,0,20,21,32,23,23,22],
[36,23,30,0,28,33,25,29,26],
[32,27,29,22,0,32,25,24,23],
[24,14,18,17,18,0,24,23,20],
[29,26,27,25,25,26,0,33,25],
[26,25,27,21,26,27,17,0,23],
[30,20,28,24,27,30,25,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,21,26,27,27,23,24,25],
[28,0,19,20,27,27,25,25,22],
[29,31,0,21,26,22,23,27,25],
[24,30,29,0,35,26,25,29,23],
[23,23,24,15,0,26,25,18,20],
[23,23,28,24,24,0,29,24,24],
[27,25,27,25,25,21,0,25,23],
[26,25,23,21,32,26,25,0,19],
[25,28,25,27,30,26,27,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,27,18,21,25,19,18,23],
[30,0,24,22,27,23,19,23,26],
[23,26,0,29,25,28,25,25,29],
[32,28,21,0,27,26,22,24,29],
[29,23,25,23,0,26,27,24,33],
[25,27,22,24,24,0,17,21,24],
[31,31,25,28,23,33,0,27,29],
[32,27,25,26,26,29,23,0,30],
[27,24,21,21,17,26,21,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,27,23,27,26,22,29,25],
[26,0,30,23,31,28,24,32,33],
[23,20,0,27,26,22,27,28,22],
[27,27,23,0,29,19,21,32,27],
[23,19,24,21,0,22,26,26,26],
[24,22,28,31,28,0,21,23,28],
[28,26,23,29,24,29,0,27,27],
[21,18,22,18,24,27,23,0,25],
[25,17,28,23,24,22,23,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,28,24,27,34,25,28,30],
[23,0,28,26,28,27,25,27,33],
[22,22,0,24,28,24,25,24,25],
[26,24,26,0,28,32,25,28,25],
[23,22,22,22,0,23,21,25,20],
[16,23,26,18,27,0,20,25,23],
[25,25,25,25,29,30,0,30,29],
[22,23,26,22,25,25,20,0,32],
[20,17,25,25,30,27,21,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,27,20,32,40,27,30,31],
[12,0,31,24,33,33,26,17,25],
[23,19,0,26,22,21,17,21,23],
[30,26,24,0,31,35,24,25,26],
[18,17,28,19,0,26,22,20,19],
[10,17,29,15,24,0,19,10,15],
[23,24,33,26,28,31,0,23,22],
[20,33,29,25,30,40,27,0,27],
[19,25,27,24,31,35,28,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,15,22,32,21,32,30,26],
[18,0,19,22,19,16,29,21,22],
[35,31,0,26,39,22,39,30,27],
[28,28,24,0,28,24,33,35,21],
[18,31,11,22,0,22,26,21,22],
[29,34,28,26,28,0,34,35,18],
[18,21,11,17,24,16,0,25,15],
[20,29,20,15,29,15,25,0,18],
[24,28,23,29,28,32,35,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,25,28,25,28,33,31,19],
[20,0,26,24,26,26,25,24,15],
[25,24,0,27,24,26,30,25,26],
[22,26,23,0,24,29,24,21,14],
[25,24,26,26,0,25,30,30,21],
[22,24,24,21,25,0,24,24,19],
[17,25,20,26,20,26,0,27,19],
[19,26,25,29,20,26,23,0,16],
[31,35,24,36,29,31,31,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,32,31,28,24,31,30,29],
[24,0,24,26,24,19,25,35,21],
[18,26,0,33,33,31,29,28,22],
[19,24,17,0,27,28,27,30,26],
[22,26,17,23,0,30,28,28,25],
[26,31,19,22,20,0,26,32,21],
[19,25,21,23,22,24,0,28,19],
[20,15,22,20,22,18,22,0,13],
[21,29,28,24,25,29,31,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,25,20,25,23,28,27,32],
[29,0,32,25,37,31,32,29,32],
[25,18,0,16,22,22,26,27,23],
[30,25,34,0,29,24,30,32,28],
[25,13,28,21,0,26,22,34,25],
[27,19,28,26,24,0,23,30,24],
[22,18,24,20,28,27,0,22,21],
[23,21,23,18,16,20,28,0,30],
[18,18,27,22,25,26,29,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,29,32,24,25,29,20,37],
[22,0,19,25,9,15,22,16,28],
[21,31,0,35,26,25,20,20,38],
[18,25,15,0,19,17,14,20,30],
[26,41,24,31,0,27,25,24,35],
[25,35,25,33,23,0,22,24,40],
[21,28,30,36,25,28,0,27,44],
[30,34,30,30,26,26,23,0,38],
[13,22,12,20,15,10,6,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,20,21,27,26,29,27,23],
[21,0,15,22,23,16,23,23,23],
[30,35,0,25,27,25,37,26,33],
[29,28,25,0,33,20,32,33,32],
[23,27,23,17,0,20,34,18,34],
[24,34,25,30,30,0,40,26,31],
[21,27,13,18,16,10,0,12,17],
[23,27,24,17,32,24,38,0,30],
[27,27,17,18,16,19,33,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,27,32,24,24,46,20,32],
[22,0,16,32,17,18,31,22,28],
[23,34,0,33,12,19,32,13,33],
[18,18,17,0,14,22,25,9,25],
[26,33,38,36,0,23,40,33,36],
[26,32,31,28,27,0,41,17,28],
[4,19,18,25,10,9,0,10,16],
[30,28,37,41,17,33,40,0,42],
[18,22,17,25,14,22,34,8,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,26,35,23,22,29,29,29],
[18,0,20,24,20,23,21,24,26],
[24,30,0,27,26,18,22,28,25],
[15,26,23,0,17,17,17,16,25],
[27,30,24,33,0,26,32,31,23],
[28,27,32,33,24,0,25,27,30],
[21,29,28,33,18,25,0,23,22],
[21,26,22,34,19,23,27,0,31],
[21,24,25,25,27,20,28,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,23,17,20,23,20,26,25],
[30,0,26,29,23,32,32,32,27],
[27,24,0,24,27,34,27,19,29],
[33,21,26,0,33,36,30,27,22],
[30,27,23,17,0,28,25,22,29],
[27,18,16,14,22,0,19,16,21],
[30,18,23,20,25,31,0,24,22],
[24,18,31,23,28,34,26,0,30],
[25,23,21,28,21,29,28,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,30,26,24,31,22,28,25],
[22,0,28,24,22,22,22,28,30],
[20,22,0,25,24,27,22,22,24],
[24,26,25,0,26,25,21,27,28],
[26,28,26,24,0,28,24,29,25],
[19,28,23,25,22,0,23,25,20],
[28,28,28,29,26,27,0,24,32],
[22,22,28,23,21,25,26,0,27],
[25,20,26,22,25,30,18,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,25,38,38,25,25,38],
[12,0,39,37,36,36,37,37,36],
[12,11,0,37,11,11,11,25,24],
[25,13,13,0,24,24,0,0,13],
[12,14,39,26,0,26,26,26,39],
[12,14,39,26,24,0,26,14,13],
[25,13,39,50,24,24,0,27,24],
[25,13,25,50,24,36,23,0,24],
[12,14,26,37,11,37,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,38,24,32,24,16,20,40],
[30,0,32,30,30,38,20,22,40],
[12,18,0,20,24,10,12,12,18],
[26,20,30,0,26,24,14,24,36],
[18,20,26,24,0,20,6,20,26],
[26,12,40,26,30,0,14,34,32],
[34,30,38,36,44,36,0,20,32],
[30,28,38,26,30,16,30,0,30],
[10,10,32,14,24,18,18,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,25,16,21,28,18,23],
[28,0,32,27,29,31,31,24,31],
[27,18,0,26,17,20,24,20,22],
[25,23,24,0,19,21,24,21,30],
[34,21,33,31,0,27,30,32,30],
[29,19,30,29,23,0,25,26,31],
[22,19,26,26,20,25,0,25,26],
[32,26,30,29,18,24,25,0,27],
[27,19,28,20,20,19,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,34,31,36,24,20,37,33],
[28,0,37,46,36,23,27,28,41],
[16,13,0,23,27,27,17,21,21],
[19,4,27,0,23,14,9,23,31],
[14,14,23,27,0,10,19,19,31],
[26,27,23,36,40,0,33,30,35],
[30,23,33,41,31,17,0,28,38],
[13,22,29,27,31,20,22,0,31],
[17,9,29,19,19,15,12,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,22,14,11,14,14,5,18],
[41,0,25,17,25,25,14,21,28],
[28,25,0,15,16,28,14,25,7],
[36,33,35,0,31,27,20,25,24],
[39,25,34,19,0,30,14,25,17],
[36,25,22,23,20,0,22,25,22],
[36,36,36,30,36,28,0,32,19],
[45,29,25,25,25,25,18,0,21],
[32,22,43,26,33,28,31,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,23,21,21,26,23,25],
[26,0,25,19,18,21,25,22,23],
[22,25,0,22,24,21,27,26,26],
[27,31,28,0,22,21,33,27,30],
[29,32,26,28,0,25,29,25,26],
[29,29,29,29,25,0,26,23,23],
[24,25,23,17,21,24,0,25,28],
[27,28,24,23,25,27,25,0,28],
[25,27,24,20,24,27,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,19,20,15,16,7,11],
[30,0,18,24,17,25,26,12,18],
[30,32,0,32,25,35,19,19,20],
[31,26,18,0,26,23,14,12,20],
[30,33,25,24,0,22,21,10,22],
[35,25,15,27,28,0,22,8,15],
[34,24,31,36,29,28,0,25,21],
[43,38,31,38,40,42,25,0,27],
[39,32,30,30,28,35,29,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,50,50,50,25,25,50,25],
[0,0,25,25,25,0,0,0,25],
[0,25,0,0,0,0,0,0,25],
[0,25,50,0,50,0,0,25,25],
[0,25,50,0,0,0,0,0,25],
[25,50,50,50,50,0,25,50,25],
[25,50,50,50,50,25,0,50,50],
[0,50,50,25,50,0,0,0,25],
[25,25,25,25,25,25,0,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,17,25,22,25,22,16,14],
[26,0,28,32,28,21,16,27,24],
[33,22,0,32,32,31,22,19,26],
[25,18,18,0,25,19,11,18,19],
[28,22,18,25,0,19,21,16,16],
[25,29,19,31,31,0,22,24,24],
[28,34,28,39,29,28,0,23,33],
[34,23,31,32,34,26,27,0,29],
[36,26,24,31,34,26,17,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,16,20,26,23,24,18,23],
[27,0,24,23,22,30,26,23,33],
[34,26,0,29,29,30,30,28,25],
[30,27,21,0,29,24,22,27,25],
[24,28,21,21,0,20,24,21,28],
[27,20,20,26,30,0,27,22,26],
[26,24,20,28,26,23,0,25,27],
[32,27,22,23,29,28,25,0,24],
[27,17,25,25,22,24,23,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,30,26,26,19,22,24,23],
[27,0,32,31,25,24,26,27,30],
[20,18,0,22,23,18,20,26,22],
[24,19,28,0,25,20,21,27,25],
[24,25,27,25,0,22,21,27,21],
[31,26,32,30,28,0,29,32,25],
[28,24,30,29,29,21,0,31,23],
[26,23,24,23,23,18,19,0,24],
[27,20,28,25,29,25,27,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,27,19,25,25,25,25],
[31,0,25,28,20,23,23,26,26],
[29,25,0,31,25,26,30,26,28],
[23,22,19,0,22,23,27,31,22],
[31,30,25,28,0,22,28,25,29],
[25,27,24,27,28,0,25,26,32],
[25,27,20,23,22,25,0,29,28],
[25,24,24,19,25,24,21,0,26],
[25,24,22,28,21,18,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,31,22,25,32,31,30,22],
[27,0,28,19,23,23,25,26,21],
[19,22,0,16,30,28,29,23,24],
[28,31,34,0,27,31,31,34,25],
[25,27,20,23,0,26,24,27,23],
[18,27,22,19,24,0,30,21,25],
[19,25,21,19,26,20,0,24,18],
[20,24,27,16,23,29,26,0,22],
[28,29,26,25,27,25,32,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,18,24,31,12,31,31,28],
[22,0,21,24,29,12,21,27,31],
[32,29,0,24,26,35,29,29,32],
[26,26,26,0,33,25,33,25,30],
[19,21,24,17,0,12,21,24,21],
[38,38,15,25,38,0,34,36,37],
[19,29,21,17,29,16,0,31,29],
[19,23,21,25,26,14,19,0,26],
[22,19,18,20,29,13,21,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,32,32,22,18,25,28,29],
[25,0,27,21,20,22,29,32,23],
[18,23,0,20,19,24,24,24,22],
[18,29,30,0,18,18,19,22,19],
[28,30,31,32,0,25,26,28,27],
[32,28,26,32,25,0,32,24,21],
[25,21,26,31,24,18,0,20,26],
[22,18,26,28,22,26,30,0,22],
[21,27,28,31,23,29,24,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,23,22,20,25,27,28,17],
[28,0,28,29,27,29,30,20,25],
[27,22,0,27,22,26,29,18,23],
[28,21,23,0,21,26,24,21,21],
[30,23,28,29,0,30,28,24,22],
[25,21,24,24,20,0,22,22,19],
[23,20,21,26,22,28,0,23,19],
[22,30,32,29,26,28,27,0,21],
[33,25,27,29,28,31,31,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,36,28,26,12,24,19,25],
[35,0,38,40,33,24,31,38,37],
[14,12,0,16,26,17,14,9,22],
[22,10,34,0,27,19,18,16,22],
[24,17,24,23,0,25,21,12,29],
[38,26,33,31,25,0,24,18,26],
[26,19,36,32,29,26,0,27,34],
[31,12,41,34,38,32,23,0,37],
[25,13,28,28,21,24,16,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,15,27,23,22,27,18,25],
[26,0,26,25,24,15,26,22,26],
[35,24,0,34,30,27,31,28,27],
[23,25,16,0,14,22,23,16,29],
[27,26,20,36,0,33,26,20,27],
[28,35,23,28,17,0,27,22,36],
[23,24,19,27,24,23,0,24,32],
[32,28,22,34,30,28,26,0,29],
[25,24,23,21,23,14,18,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([9, 50, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_9_50.csv", index=False, header=False)